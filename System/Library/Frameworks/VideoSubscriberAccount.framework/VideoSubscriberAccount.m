id VSErrorLogObject()
{
  void *v0;
  uint64_t vars8;

  if (VSErrorLogObject___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSErrorLogObject___vs_lazy_init_predicate, &__block_literal_global_0);
  }
  v0 = (void *)VSErrorLogObject___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSErrorLogObject_block_invoke()
{
  VSErrorLogObject___vs_lazy_init_variable = (uint64_t)os_log_create((const char *)[@"com.apple.VideoSubscriberAccount" UTF8String], (const char *)objc_msgSend(@"Errors", "UTF8String"));

  return MEMORY[0x1F41817F8]();
}

id VSDefaultLogObject()
{
  if (VSDefaultLogObject___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSDefaultLogObject___vs_lazy_init_predicate, &__block_literal_global_9);
  }
  v0 = (void *)VSDefaultLogObject___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSDefaultLogObject_block_invoke()
{
  VSDefaultLogObject___vs_lazy_init_variable = (uint64_t)os_log_create((const char *)[@"com.apple.VideoSubscriberAccount" UTF8String], (const char *)objc_msgSend(@"Default", "UTF8String"));

  return MEMORY[0x1F41817F8]();
}

void sub_1DA67960C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6798E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DA679ACC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DA679FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,id a22)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a22);
  objc_destroyWeak((id *)(v26 - 96));
  objc_destroyWeak((id *)(v26 - 88));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_1DA67ACC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1DA67C060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA67C5DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void VSOpenURL(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (!v1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The linkURL parameter must not be nil."];
  }
  v2 = VSDefaultLogObject();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v14 = v1;
    _os_log_impl(&dword_1DA674000, v2, OS_LOG_TYPE_DEFAULT, "Will open URL %@", buf, 0xCu);
  }

  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __VSOpenURL_block_invoke;
  aBlock[3] = &unk_1E6BD2950;
  id v3 = v1;
  id v12 = v3;
  uint64_t v4 = _Block_copy(aBlock);
  v5 = [MEMORY[0x1E4F223E0] defaultWorkspace];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __VSOpenURL_block_invoke_3;
  v8[3] = &unk_1E6BD2978;
  id v9 = v3;
  id v10 = v4;
  id v6 = v4;
  id v7 = v3;
  [v5 openURL:v7 configuration:0 completionHandler:v8];
}

void __VSOpenURL_block_invoke(uint64_t a1, int a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    id v3 = VSDefaultLogObject();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl(&dword_1DA674000, v3, OS_LOG_TYPE_DEFAULT, "Did open URL %@", (uint8_t *)&v5, 0xCu);
    }
  }
  else
  {
    id v3 = VSErrorLogObject();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      __VSOpenURL_block_invoke_cold_1(a1, v3);
    }
  }
}

void __VSOpenURL_block_invoke_3(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    int v5 = VSErrorLogObject();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      __VSOpenURL_block_invoke_3_cold_1(a1, (uint64_t)v4, v5);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1DA67CFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA67EC44(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1DA680598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  objc_destroyWeak(v26);
  objc_destroyWeak((id *)(v27 - 176));
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1DA680D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA6811EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v28 - 128), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void VSValueTypeInit(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v4 = objc_msgSend(a1, "properties", 0);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v17;
    v8 = (void *)MEMORY[0x1E4F1CC28];
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v17 != v7) {
          objc_enumerationMutation(v4);
        }
        id v10 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        v11 = [v10 name];
        uint64_t v12 = [v10 kind];
        if (v12 == 2)
        {
          id v14 = [v10 initialValue];
        }
        else if (v12 == 1)
        {
          uint64_t v15 = [v10 initialValue];
          if (v15) {
            id v14 = (void *)v15;
          }
          else {
            id v14 = &unk_1F34D0C88;
          }
        }
        else
        {
          if (v12) {
            goto LABEL_17;
          }
          uint64_t v13 = [v10 initialValue];
          if (v13) {
            id v14 = (void *)v13;
          }
          else {
            id v14 = v8;
          }
        }
        [v3 setValue:v14 forKey:v11];

LABEL_17:
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v6);
  }
}

void VSValueTypeInitWithCoder(void *a1, void *a2, void *a3)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 isSuperclassAlsoValueType])
  {
    v27.receiver = v6;
    v27.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    uint64_t v8 = objc_msgSendSuper(&v27, sel_initWithCoder_, v7);

    id v6 = (id)v8;
  }
  VSRequireKeyedCoder(v7);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v21 = v5;
  uint64_t v9 = [v5 properties];
  uint64_t v22 = [v9 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v22)
  {
    uint64_t v10 = *(void *)v24;
    unint64_t v11 = 0x1E4F28000uLL;
    do
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        if (*(void *)v24 != v10) {
          objc_enumerationMutation(v9);
        }
        uint64_t v13 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        id v14 = [v13 name];
        uint64_t v15 = [v13 name];
        uint64_t v16 = [v13 kind];
        switch(v16)
        {
          case 2:
            [v13 allowedClasses];
            v20 = unint64_t v19 = v11;
            long long v18 = [v7 decodeObjectOfClasses:v20 forKey:v15];

            unint64_t v11 = v19;
            break;
          case 1:
            uint64_t v17 = objc_msgSend(*(id *)(v11 + 3792), "numberWithInteger:", objc_msgSend(v7, "decodeIntegerForKey:", v15));
            goto LABEL_13;
          case 0:
            uint64_t v17 = objc_msgSend(*(id *)(v11 + 3792), "numberWithBool:", objc_msgSend(v7, "decodeBoolForKey:", v15));
LABEL_13:
            long long v18 = (void *)v17;
            break;
          default:
            long long v18 = 0;
            break;
        }
        [v6 setValue:v18 forKey:v14];
      }
      uint64_t v22 = [v9 countByEnumeratingWithState:&v23 objects:v28 count:16];
    }
    while (v22);
  }
}

void VSValueTypeEncodeWithCoder(void *a1, void *a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 isSuperclassAlsoValueType])
  {
    v23.receiver = v6;
    v23.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    objc_msgSendSuper(&v23, sel_encodeWithCoder_, v7);
  }
  VSRequireKeyedCoder(v7);
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = v5;
  uint64_t v8 = [v5 properties];
  uint64_t v9 = [v8 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v20 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        id v14 = [v13 name];
        uint64_t v15 = [v6 valueForKey:v14];
        uint64_t v16 = [v13 name];
        uint64_t v17 = [v13 kind];
        switch(v17)
        {
          case 2:
            [v7 encodeObject:v15 forKey:v16];
            break;
          case 1:
            objc_msgSend(v7, "encodeInteger:forKey:", objc_msgSend(v15, "integerValue"), v16);
            break;
          case 0:
            objc_msgSend(v7, "encodeBool:forKey:", objc_msgSend(v15, "BOOLValue"), v16);
            break;
        }
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v10);
  }
}

id VSValueTypeCopyWithZone(void *a1, void *a2, uint64_t a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if ([v5 isSuperclassAlsoValueType])
  {
    v22.receiver = v6;
    v22.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    uint64_t v7 = objc_msgSendSuper(&v22, sel_copyWithZone_, a3);
  }
  else
  {
    uint64_t v7 = objc_msgSend((id)objc_msgSend((id)objc_opt_class(), "allocWithZone:", a3), "init");
  }
  uint64_t v8 = (void *)v7;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v9 = objc_msgSend(v5, "properties", 0);
  uint64_t v10 = [v9 countByEnumeratingWithState:&v18 objects:v23 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        if ((unint64_t)[v14 kind] <= 2)
        {
          uint64_t v15 = [v14 name];
          uint64_t v16 = [v6 valueForKey:v15];
          [v8 setValue:v16 forKey:v15];
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v18 objects:v23 count:16];
    }
    while (v11);
  }

  if (!v8) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The copy parameter must not be nil."];
  }

  return v8;
}

uint64_t VSValueTypeHash(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v3 isSuperclassAlsoValueType])
  {
    v19.receiver = v4;
    v19.super_class = (Class)objc_msgSend((id)objc_msgSend(v3, "implementationClass"), "superclass");
    uint64_t v5 = objc_msgSendSuper(&v19, sel_hash);
  }
  else
  {
    uint64_t v5 = 0;
  }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = objc_msgSend(v3, "properties", 0);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        if ((unint64_t)[v11 kind] <= 2)
        {
          uint64_t v12 = [v11 name];
          uint64_t v13 = [v4 valueForKey:v12];
          v5 ^= [v13 hash];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v8);
  }

  return v5;
}

uint64_t VSValueTypeIsEqual(void *a1, void *a2, void *a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = v7;
  if (v7 == v6)
  {
    unsigned __int8 v9 = 1;
  }
  else if (v7 && ([v5 implementationClass], (objc_opt_isKindOfClass() & 1) != 0))
  {
    if ([v5 isSuperclassAlsoValueType])
    {
      v34.receiver = v6;
      v34.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
      unsigned __int8 v9 = objc_msgSendSuper(&v34, sel_isEqual_, v8);
    }
    else
    {
      unsigned __int8 v9 = 1;
    }
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v27 = v5;
    uint64_t v10 = [v5 properties];
    uint64_t v11 = [v10 countByEnumeratingWithState:&v30 objects:v35 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v31;
      uint64_t v28 = v10;
      uint64_t v29 = *(void *)v31;
      do
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v31 != v13) {
            objc_enumerationMutation(v10);
          }
          long long v15 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          if ((unint64_t)[v15 kind] <= 2)
          {
            long long v16 = [v15 name];
            [v6 valueForKey:v16];
            v18 = id v17 = v6;
            objc_super v19 = [v8 valueForKey:v16];
            if (v9)
            {
              long long v20 = v8;
              id v21 = v17;
              id v22 = v18;
              id v23 = v19;
              uint64_t v24 = v23;
              if (v22 == v23)
              {
                unsigned __int8 v9 = 1;
              }
              else
              {
                if (v22) {
                  BOOL v25 = v23 == 0;
                }
                else {
                  BOOL v25 = 1;
                }
                if (v25) {
                  unsigned __int8 v9 = 0;
                }
                else {
                  unsigned __int8 v9 = [v22 isEqual:v23];
                }
              }

              id v17 = v21;
              uint64_t v8 = v20;
              uint64_t v10 = v28;
              uint64_t v13 = v29;
            }
            else
            {
              unsigned __int8 v9 = 0;
            }

            id v6 = v17;
          }
        }
        uint64_t v12 = [v10 countByEnumeratingWithState:&v30 objects:v35 count:16];
      }
      while (v12);
    }

    id v5 = v27;
  }
  else
  {
    unsigned __int8 v9 = 0;
  }

  return v9 & 1;
}

id VSValueTypeDescription(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v23 = v3;
  id obj = [v3 properties];
  uint64_t v6 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v27;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v27 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        uint64_t v11 = [v10 name];
        uint64_t v12 = [v4 valueForKey:v11];
        uint64_t v13 = [v12 description];
        uint64_t v14 = [v10 kind];
        if (v14 == 1)
        {
          uint64_t v15 = objc_msgSend(NSString, "stringWithFormat:", @"%lld", objc_msgSend(v12, "integerValue"));
        }
        else
        {
          if (v14) {
            goto LABEL_11;
          }
          uint64_t v15 = objc_msgSend(NSString, "vs_yesNoStringValueFromBool:", objc_msgSend(v12, "BOOLValue"));
        }
        long long v16 = (void *)v15;

        uint64_t v13 = v16;
LABEL_11:
        id v17 = [NSString stringWithFormat:@"%@ = %@", v11, v13];
        [v5 addObject:v17];
      }
      uint64_t v7 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v7);
  }

  v25.receiver = v4;
  v25.super_class = (Class)objc_msgSend((id)objc_msgSend(v23, "implementationClass"), "superclass");
  long long v18 = objc_msgSendSuper(&v25, sel_description);
  objc_super v19 = NSString;
  long long v20 = [v5 componentsJoinedByString:@", "];
  id v21 = [v19 stringWithFormat:@"<%@ %@>", v18, v20];

  return v21;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1DA686318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA688090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6884B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA688AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id obj)
{
}

void sub_1DA688FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA689B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_1DA689E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id VSAccountApplicationProviderValueType()
{
  if (VSAccountApplicationProviderValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAccountApplicationProviderValueType___vs_lazy_init_predicate, &__block_literal_global_11);
  }
  v0 = (void *)VSAccountApplicationProviderValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAccountApplicationProviderValueType_block_invoke()
{
  VSAccountApplicationProviderValueType___vs_lazy_init_variable = __VSAccountApplicationProviderValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAccountApplicationProviderValueType_block_invoke_2()
{
  v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"localizedDisplayName" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  id v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"identifier" kind:2 allowedClasses:v4 initialValue:0];
  [v1 addObject:v5];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA68D75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_1DA68D9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void VSTrieWalkNodes(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 objects];

  if (!v5) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The [node objects] parameter must not be nil."];
  }
  uint64_t v6 = [v3 objects];
  [v4 addObjectsFromArray:v6];

  uint64_t v7 = [v3 next];

  if (v7)
  {
    uint64_t v8 = [v3 next];
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __VSTrieWalkNodes_block_invoke;
    v9[3] = &unk_1E6BD3100;
    id v10 = v4;
    [v8 enumerateKeysAndObjectsUsingBlock:v9];
  }
}

uint64_t __VSTrieWalkNodes_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return VSTrieWalkNodes(a3, *(void *)(a1 + 32));
}

id VSAMSRequestValueType()
{
  if (VSAMSRequestValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAMSRequestValueType___vs_lazy_init_predicate, &__block_literal_global_12);
  }
  v0 = (void *)VSAMSRequestValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAMSRequestValueType_block_invoke()
{
  VSAMSRequestValueType___vs_lazy_init_variable = __VSAMSRequestValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAMSRequestValueType_block_invoke_2()
{
  v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"methodName" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  id v4 = +[VSValueTypeProperty valueTypePropertyWithName:@"requestType" kind:1 allowedClasses:0 initialValue:0];
  [v1 addObject:v4];
  id v5 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v6 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerIdentifier" kind:2 allowedClasses:v5 initialValue:0];
  [v1 addObject:v6];

  uint64_t v7 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v8 = +[VSValueTypeProperty valueTypePropertyWithName:@"parameters" kind:2 allowedClasses:v7 initialValue:0];
  [v1 addObject:v8];

  uint64_t v9 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v10 = +[VSValueTypeProperty valueTypePropertyWithName:@"auditToken" kind:2 allowedClasses:v9 initialValue:0];
  [v1 addObject:v10];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

uint64_t VSCheckEntitlementForTask(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = VSDefaultLogObject();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    id v18 = v3;
    __int16 v19 = 2112;
    long long v20 = @"com.apple.developer.video-subscriber-single-sign-on";
    _os_log_impl(&dword_1DA674000, v4, OS_LOG_TYPE_DEFAULT, "Will check task %@ for %@ entitlement.", buf, 0x16u);
  }

  id v15 = 0;
  id v16 = 0;
  int v5 = [v3 getValue:&v16 forEntitlement:@"com.apple.developer.video-subscriber-single-sign-on" error:&v15];
  id v6 = v16;
  id v7 = v15;
  if (!v5)
  {
    uint64_t v11 = VSErrorLogObject();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      id v18 = v3;
      __int16 v19 = 2112;
      long long v20 = @"com.apple.developer.video-subscriber-single-sign-on";
      __int16 v21 = 2112;
      id v22 = v7;
      _os_log_error_impl(&dword_1DA674000, v11, OS_LOG_TYPE_ERROR, "Unable to check value of task %@ for the %@ entitlement: %@.", buf, 0x20u);
    }

    uint64_t v12 = v7;
    if (!a2) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v6)
  {
    CFTypeID v8 = CFGetTypeID(v6);
    if (v8 == CFBooleanGetTypeID())
    {
      if (CFBooleanGetValue((CFBooleanRef)v6))
      {
        uint64_t v9 = VSDefaultLogObject();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          id v18 = v3;
          __int16 v19 = 2112;
          long long v20 = @"com.apple.developer.video-subscriber-single-sign-on";
          _os_log_impl(&dword_1DA674000, v9, OS_LOG_TYPE_DEFAULT, "The task %@ has the %@ entitlement.", buf, 0x16u);
        }
        uint64_t v10 = 1;
        goto LABEL_26;
      }
      uint64_t v13 = VSErrorLogObject();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        VSCheckEntitlementForTask_cold_3();
      }
    }
    else
    {
      uint64_t v13 = VSErrorLogObject();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        VSCheckEntitlementForTask_cold_4();
      }
    }
  }
  else
  {
    uint64_t v13 = VSErrorLogObject();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      VSCheckEntitlementForTask_cold_2();
    }
  }

  if (a2)
  {
    uint64_t v12 = 0;
LABEL_22:
    VSPrivateError(-5, v12);
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
LABEL_23:
  uint64_t v9 = VSErrorLogObject();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    VSCheckEntitlementForTask_cold_1();
  }
  uint64_t v10 = 0;
LABEL_26:

  return v10;
}

void sub_1DA690CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA690FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

id VSViewServiceRequestValueType()
{
  if (VSViewServiceRequestValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSViewServiceRequestValueType___vs_lazy_init_predicate, &__block_literal_global_13);
  }
  v0 = (void *)VSViewServiceRequestValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSViewServiceRequestValueType_block_invoke()
{
  VSViewServiceRequestValueType___vs_lazy_init_variable = __VSViewServiceRequestValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSViewServiceRequestValueType_block_invoke_2()
{
  v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v2 = +[VSValueTypeProperty valueTypePropertyWithName:@"allowsPrivacyUI" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v2];

  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"requiresPrivacyUI" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v3];

  id v4 = +[VSValueTypeProperty valueTypePropertyWithName:@"shouldInferFeaturedProviders" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v4];

  int v5 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v6 = +[VSValueTypeProperty valueTypePropertyWithName:@"accountMetadataRequest" kind:2 allowedClasses:v5 initialValue:0];
  [v1 addObject:v6];

  id v7 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  CFTypeID v8 = objc_alloc_init(VSOptional);
  uint64_t v9 = +[VSValueTypeProperty valueTypePropertyWithName:@"requestingAppDisplayName" kind:2 allowedClasses:v7 initialValue:v8];
  [v1 addObject:v9];

  uint64_t v10 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v11 = +[VSValueTypeProperty valueTypePropertyWithName:@"requestingAppAdamID" kind:2 allowedClasses:v10 initialValue:0];
  [v1 addObject:v11];

  uint64_t v12 = +[VSValueTypeProperty valueTypePropertyWithName:@"canVetoAuthentication" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v12];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6923CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA692B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA692C34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSSubscriptionValueType()
{
  if (VSSubscriptionValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSSubscriptionValueType___vs_lazy_init_predicate, &__block_literal_global_168);
  }
  v0 = (void *)VSSubscriptionValueType___vs_lazy_init_variable;

  return v0;
}

void sub_1DA6930D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6933C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __VSSubscriptionValueType_block_invoke()
{
  VSSubscriptionValueType___vs_lazy_init_variable = __VSSubscriptionValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSSubscriptionValueType_block_invoke_2()
{
  v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v2 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"subscriberIdentifierHash" kind:2 allowedClasses:v2 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v3];

  id v4 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  int v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"billingIdentifier" kind:2 allowedClasses:v4 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v5];

  id v6 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v7 = +[VSValueTypeProperty valueTypePropertyWithName:@"expirationDate" kind:2 allowedClasses:v6 initialValue:0];
  [v1 addObject:v7];

  CFTypeID v8 = +[VSValueTypeProperty valueTypePropertyWithName:@"accessLevel" kind:1 allowedClasses:0 initialValue:0];
  [v1 addObject:v8];

  uint64_t v9 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v10 = objc_opt_class();
  uint64_t v11 = objc_msgSend(v9, "setWithObjects:", v10, objc_opt_class(), 0);
  uint64_t v12 = +[VSValueTypeProperty valueTypePropertyWithName:@"tierIdentifiers" kind:2 allowedClasses:v11 initialValue:MEMORY[0x1E4F1CBF0]];
  [v1 addObject:v12];

  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v14 = +[VSValueTypeProperty valueTypePropertyWithName:@"creationDate" kind:2 allowedClasses:v13 initialValue:0];
  [v1 addObject:v14];

  id v15 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v16 = +[VSValueTypeProperty valueTypePropertyWithName:@"modificationDate" kind:2 allowedClasses:v15 initialValue:0];
  [v1 addObject:v16];

  id v17 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v18 = +[VSValueTypeProperty valueTypePropertyWithName:@"derivedSubscriptionInfo" kind:2 allowedClasses:v17 initialValue:0];
  [v1 addObject:v18];

  uint64_t v19 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  long long v20 = +[VSValueTypeProperty valueTypePropertyWithName:@"providedSubscriptionInfo" kind:2 allowedClasses:v19 initialValue:0];
  [v1 addObject:v20];

  __int16 v21 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v22 = +[VSValueTypeProperty valueTypePropertyWithName:@"source" kind:2 allowedClasses:v21 initialValue:0];
  [v1 addObject:v22];

  uint64_t v23 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v24 = +[VSValueTypeProperty valueTypePropertyWithName:@"modifierIdentifier" kind:2 allowedClasses:v23 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v24];

  objc_super v25 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  long long v26 = +[VSValueTypeProperty valueTypePropertyWithName:@"modifierType" kind:2 allowedClasses:v25 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v26];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

id VSIdentityProviderValueType()
{
  if (VSIdentityProviderValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSIdentityProviderValueType___vs_lazy_init_predicate, &__block_literal_global_16);
  }
  v0 = (void *)VSIdentityProviderValueType___vs_lazy_init_variable;

  return v0;
}

void sub_1DA69735C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA69746C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __VSIdentityProviderValueType_block_invoke()
{
  VSIdentityProviderValueType___vs_lazy_init_variable = __VSIdentityProviderValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSIdentityProviderValueType_block_invoke_2()
{
  v62 = objc_alloc_init(VSValueType);
  [(VSValueType *)v62 setImplementationClass:objc_opt_class()];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v1 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v2 = objc_alloc_init(VSOptional);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"uniqueID" kind:2 allowedClasses:v1 initialValue:v2];
  [v0 addObject:v3];

  id v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  int v5 = objc_alloc_init(VSOptional);
  id v6 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerID" kind:2 allowedClasses:v4 initialValue:v5];
  [v0 addObject:v6];

  id v7 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  CFTypeID v8 = +[VSValueTypeProperty valueTypePropertyWithName:@"nameForSorting" kind:2 allowedClasses:v7 initialValue:0];
  [v0 addObject:v8];

  uint64_t v9 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v10 = +[VSValueTypeProperty valueTypePropertyWithName:@"rankForSorting" kind:2 allowedClasses:v9 initialValue:0];
  [v0 addObject:v10];

  uint64_t v11 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v12 = objc_opt_class();
  uint64_t v13 = objc_msgSend(v11, "setWithObjects:", v12, objc_opt_class(), 0);
  uint64_t v14 = +[VSValueTypeProperty valueTypePropertyWithName:@"supportedTemplates" kind:2 allowedClasses:v13 initialValue:0];
  [v0 addObject:v14];

  id v15 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v16 = objc_opt_class();
  id v17 = objc_msgSend(v15, "setWithObjects:", v16, objc_opt_class(), 0);
  id v18 = +[VSValueTypeProperty valueTypePropertyWithName:@"supportedAuthenticationSchemes" kind:2 allowedClasses:v17 initialValue:0];
  [v0 addObject:v18];

  uint64_t v19 = +[VSValueTypeProperty valueTypePropertyWithName:@"requireAuthenticationURLSystemTrust" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v19];

  long long v20 = +[VSValueTypeProperty valueTypePropertyWithName:@"requireXHRRequestSystemTrust" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v20];

  __int16 v21 = +[VSValueTypeProperty valueTypePropertyWithName:@"prohibitedByStore" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v21];

  id v22 = +[VSValueTypeProperty valueTypePropertyWithName:@"developer" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v22];

  uint64_t v23 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v24 = +[VSValueTypeProperty valueTypePropertyWithName:@"authenticationURL" kind:2 allowedClasses:v23 initialValue:0];
  [v0 addObject:v24];

  objc_super v25 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  long long v26 = +[VSValueTypeProperty valueTypePropertyWithName:@"appStoreRoomURL" kind:2 allowedClasses:v25 initialValue:0];
  [v0 addObject:v26];

  long long v27 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v28 = objc_opt_class();
  long long v29 = objc_msgSend(v27, "setWithObjects:", v28, objc_opt_class(), 0);
  uint64_t v30 = MEMORY[0x1E4F1CBF0];
  uint64_t v31 = +[VSValueTypeProperty valueTypePropertyWithName:@"appAdamIDs" kind:2 allowedClasses:v29 initialValue:MEMORY[0x1E4F1CBF0]];
  [v0 addObject:v31];

  long long v32 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  long long v33 = +[VSValueTypeProperty valueTypePropertyWithName:@"defaultAppId" kind:2 allowedClasses:v32 initialValue:&stru_1F34B2EC8];
  [v0 addObject:v33];

  objc_super v34 = +[VSValueTypeProperty valueTypePropertyWithName:@"isSetTopBoxSupported" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v34];

  v35 = +[VSValueTypeProperty valueTypePropertyWithName:@"shouldShowChannelApps" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v35];

  uint64_t v36 = +[VSValueTypeProperty valueTypePropertyWithName:@"shouldShowSubscriptionApps" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v36];

  v37 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v38 = objc_opt_class();
  v39 = objc_msgSend(v37, "setWithObjects:", v38, objc_opt_class(), 0);
  v40 = +[VSValueTypeProperty valueTypePropertyWithName:@"allPersonalizedAppDescriptions" kind:2 allowedClasses:v39 initialValue:v30];
  [v0 addObject:v40];

  v41 = +[VSValueTypeProperty valueTypePropertyWithName:@"isSTBOptOutAllowed" kind:0 allowedClasses:0 initialValue:0];
  [v0 addObject:v41];

  v42 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  v43 = +[VSValueTypeProperty valueTypePropertyWithName:@"userToken" kind:2 allowedClasses:v42 initialValue:&stru_1F34B2EC8];
  [v0 addObject:v43];

  v44 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v45 = +[VSValueTypeProperty valueTypePropertyWithName:@"appPlacementPosition" kind:2 allowedClasses:v44 initialValue:0];
  [v0 addObject:v45];

  v46 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v47 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerAppArtworkTemplateURL" kind:2 allowedClasses:v46 initialValue:0];
  [v0 addObject:v47];

  v48 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v49 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerArtworkTemplateURL" kind:2 allowedClasses:v48 initialValue:0];
  [v0 addObject:v49];

  v50 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v51 = objc_alloc_init(VSOptional);
  v52 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerInfo" kind:2 allowedClasses:v50 initialValue:v51];
  [v0 addObject:v52];

  v53 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v54 = objc_opt_class();
  v55 = objc_msgSend(v53, "setWithObjects:", v54, objc_opt_class(), 0);
  v56 = +[VSValueTypeProperty valueTypePropertyWithName:@"nonChannelAppDescriptions" kind:2 allowedClasses:v55 initialValue:v30];
  [v0 addObject:v56];

  v57 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v58 = objc_opt_class();
  v59 = objc_msgSend(v57, "setWithObjects:", v58, objc_opt_class(), 0);
  v60 = +[VSValueTypeProperty valueTypePropertyWithName:@"storefronts" kind:2 allowedClasses:v59 initialValue:v30];
  [v0 addObject:v60];

  [(VSValueType *)v62 setProperties:v0];

  return v62;
}

uint64_t VSDeveloperServiceInterface()
{
  return [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F34DC000];
}

id VSSubscriptionServiceInterface()
{
  id v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F34DC700];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_msgSend(v1, "setWithObjects:", v2, v3, v4, v5, v6, v7, v8, objc_opt_class(), 0);
  [v0 setClasses:v9 forSelector:sel_fetchActiveSubscriptionsWithOptions_completionHandler_ argumentIndex:0 ofReply:0];

  uint64_t v10 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v11 = objc_opt_class();
  uint64_t v12 = objc_msgSend(v10, "setWithObjects:", v11, objc_opt_class(), 0);
  [v0 setClasses:v12 forSelector:sel_fetchActiveSubscriptionsWithOptions_completionHandler_ argumentIndex:0 ofReply:1];

  uint64_t v13 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v14 = objc_opt_class();
  id v15 = objc_msgSend(v13, "setWithObjects:", v14, objc_opt_class(), 0);
  [v0 setClasses:v15 forSelector:sel_removeSubscriptions_ argumentIndex:0 ofReply:0];

  return v0;
}

uint64_t VSPrivacyServiceInterface()
{
  return [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F34DA338];
}

void sub_1DA69A5F0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_1DA69ADDC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

VSValueType *VSDeveloperSettingsValueType()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = +[VSValueTypeProperty valueTypePropertyWithName:@"isInSetTopBoxMode" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v2];

  uint64_t v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"cacheBusterEnabled" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v3];

  uint64_t v4 = +[VSValueTypeProperty valueTypePropertyWithName:@"requestTimeoutsDisabled" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v4];

  uint64_t v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"simulateExpiredToken" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v5];

  uint64_t v6 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v7 = +[VSValueTypeProperty valueTypePropertyWithName:@"setTopBoxBundleIdentifier" kind:2 allowedClasses:v6 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v7];

  uint64_t v8 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v9 = +[VSValueTypeProperty valueTypePropertyWithName:@"setTopBoxUserToken" kind:2 allowedClasses:v8 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v9];

  uint64_t v10 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v11 = +[VSValueTypeProperty valueTypePropertyWithName:@"setTopBoxIdentityProviderID" kind:2 allowedClasses:v10 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v11];

  uint64_t v12 = +[VSValueTypeProperty valueTypePropertyWithName:@"setTopBoxUseDeviceProfile" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v12];

  uint64_t v13 = +[VSValueTypeProperty valueTypePropertyWithName:@"setTopBoxSupportsOptOut" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v13];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

id VSKeychainItemKindGenericPassword()
{
  if (VSKeychainItemKindGenericPassword___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSKeychainItemKindGenericPassword___vs_lazy_init_predicate, &__block_literal_global_18);
  }
  id v0 = (void *)VSKeychainItemKindGenericPassword___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSKeychainItemKindGenericPassword_block_invoke()
{
  VSKeychainItemKindGenericPassword___vs_lazy_init_variable = __VSKeychainItemKindGenericPassword_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSKeychainItemKind *__VSKeychainItemKindGenericPassword_block_invoke_2()
{
  v59 = objc_alloc_init(VSKeychainItemKind);
  [(VSKeychainItemKind *)v59 setSecItemClass:*MEMORY[0x1E4F3B988]];
  id v0 = (objc_class *)objc_opt_class();
  id v1 = NSStringFromClass(v0);
  [(VSKeychainItemKind *)v59 setItemClassName:v1];

  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v3 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v3 setName:@"accessGroup"];
  v60 = v3;
  [(VSKeychainItemAttribute *)v3 setAttributeType:3];
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  [(VSKeychainItemAttribute *)v3 setAttributeValueClassName:v5];

  [(VSKeychainItemAttribute *)v3 setSecItemAttributeKey:*MEMORY[0x1E4F3B550]];
  [v2 addObject:v3];
  uint64_t v6 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v6 setName:@"creationDate"];
  uint64_t v58 = v6;
  [(VSKeychainItemAttribute *)v6 setAttributeType:3];
  uint64_t v7 = (objc_class *)objc_opt_class();
  uint64_t v8 = NSStringFromClass(v7);
  [(VSKeychainItemAttribute *)v6 setAttributeValueClassName:v8];

  [(VSKeychainItemAttribute *)v6 setSecItemAttributeKey:*MEMORY[0x1E4F3B668]];
  [v2 addObject:v6];
  uint64_t v9 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v9 setName:@"modificationDate"];
  v57 = v9;
  [(VSKeychainItemAttribute *)v9 setAttributeType:3];
  uint64_t v10 = (objc_class *)objc_opt_class();
  uint64_t v11 = NSStringFromClass(v10);
  [(VSKeychainItemAttribute *)v9 setAttributeValueClassName:v11];

  [(VSKeychainItemAttribute *)v9 setSecItemAttributeKey:*MEMORY[0x1E4F3B790]];
  [v2 addObject:v9];
  uint64_t v12 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v12 setName:@"itemDescription"];
  v56 = v12;
  [(VSKeychainItemAttribute *)v12 setAttributeType:1];
  uint64_t v13 = (objc_class *)objc_opt_class();
  uint64_t v14 = NSStringFromClass(v13);
  [(VSKeychainItemAttribute *)v12 setAttributeValueClassName:v14];

  [(VSKeychainItemAttribute *)v12 setSecItemAttributeKey:*MEMORY[0x1E4F3B678]];
  [v2 addObject:v12];
  id v15 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v15 setName:@"comment"];
  v55 = v15;
  [(VSKeychainItemAttribute *)v15 setAttributeType:1];
  uint64_t v16 = (objc_class *)objc_opt_class();
  id v17 = NSStringFromClass(v16);
  [(VSKeychainItemAttribute *)v15 setAttributeValueClassName:v17];

  [(VSKeychainItemAttribute *)v15 setSecItemAttributeKey:*MEMORY[0x1E4F3B660]];
  [v2 addObject:v15];
  id v18 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v18 setName:@"creatorCode"];
  uint64_t v54 = v18;
  [(VSKeychainItemAttribute *)v18 setAttributeType:0];
  uint64_t v19 = (objc_class *)objc_opt_class();
  long long v20 = NSStringFromClass(v19);
  [(VSKeychainItemAttribute *)v18 setAttributeValueClassName:v20];

  [(VSKeychainItemAttribute *)v18 setSecItemAttributeKey:*MEMORY[0x1E4F3B670]];
  [v2 addObject:v18];
  __int16 v21 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v21 setName:@"typeCode"];
  v53 = v21;
  [(VSKeychainItemAttribute *)v21 setAttributeType:0];
  id v22 = (objc_class *)objc_opt_class();
  uint64_t v23 = NSStringFromClass(v22);
  [(VSKeychainItemAttribute *)v21 setAttributeValueClassName:v23];

  [(VSKeychainItemAttribute *)v21 setSecItemAttributeKey:*MEMORY[0x1E4F3B8C0]];
  [v2 addObject:v21];
  uint64_t v24 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v24 setName:@"label"];
  v52 = v24;
  [(VSKeychainItemAttribute *)v24 setAttributeType:1];
  objc_super v25 = (objc_class *)objc_opt_class();
  long long v26 = NSStringFromClass(v25);
  [(VSKeychainItemAttribute *)v24 setAttributeValueClassName:v26];

  [(VSKeychainItemAttribute *)v24 setSecItemAttributeKey:*MEMORY[0x1E4F3B788]];
  [v2 addObject:v24];
  long long v27 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v27 setName:@"invisible"];
  [(VSKeychainItemAttribute *)v27 setAttributeType:2];
  uint64_t v28 = (objc_class *)objc_opt_class();
  long long v29 = NSStringFromClass(v28);
  [(VSKeychainItemAttribute *)v27 setAttributeValueClassName:v29];

  [(VSKeychainItemAttribute *)v27 setSecItemAttributeKey:*MEMORY[0x1E4F3B698]];
  [v2 addObject:v27];
  uint64_t v30 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v30 setName:@"negative"];
  [(VSKeychainItemAttribute *)v30 setAttributeType:2];
  uint64_t v31 = (objc_class *)objc_opt_class();
  long long v32 = NSStringFromClass(v31);
  [(VSKeychainItemAttribute *)v30 setAttributeValueClassName:v32];

  [(VSKeychainItemAttribute *)v30 setSecItemAttributeKey:*MEMORY[0x1E4F3B6A8]];
  [v2 addObject:v30];
  long long v33 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v33 setName:@"account"];
  [(VSKeychainItemAttribute *)v33 setAttributeType:1];
  objc_super v34 = (objc_class *)objc_opt_class();
  v35 = NSStringFromClass(v34);
  [(VSKeychainItemAttribute *)v33 setAttributeValueClassName:v35];

  [(VSKeychainItemAttribute *)v33 setSecItemAttributeKey:*MEMORY[0x1E4F3B5C0]];
  [(VSKeychainItemAttribute *)v33 setDefaultValue:&stru_1F34B2EC8];
  [v2 addObject:v33];
  uint64_t v36 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v36 setName:@"service"];
  [(VSKeychainItemAttribute *)v36 setAttributeType:1];
  v37 = (objc_class *)objc_opt_class();
  uint64_t v38 = NSStringFromClass(v37);
  [(VSKeychainItemAttribute *)v36 setAttributeValueClassName:v38];

  [(VSKeychainItemAttribute *)v36 setSecItemAttributeKey:*MEMORY[0x1E4F3B850]];
  [v2 addObject:v36];
  v39 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v39 setName:@"generic"];
  [(VSKeychainItemAttribute *)v39 setAttributeType:1];
  v40 = (objc_class *)objc_opt_class();
  v41 = NSStringFromClass(v40);
  [(VSKeychainItemAttribute *)v39 setAttributeValueClassName:v41];

  [(VSKeychainItemAttribute *)v39 setSecItemAttributeKey:*MEMORY[0x1E4F3B688]];
  [v2 addObject:v39];
  v42 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v42 setName:@"synchronizable"];
  [(VSKeychainItemAttribute *)v42 setAttributeType:2];
  v43 = (objc_class *)objc_opt_class();
  v44 = NSStringFromClass(v43);
  [(VSKeychainItemAttribute *)v42 setAttributeValueClassName:v44];

  [(VSKeychainItemAttribute *)v42 setSecItemAttributeKey:*MEMORY[0x1E4F3B878]];
  [v2 addObject:v42];
  v45 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v45 setName:@"viewHint"];
  [(VSKeychainItemAttribute *)v45 setAttributeType:1];
  v46 = (objc_class *)objc_opt_class();
  v47 = NSStringFromClass(v46);
  [(VSKeychainItemAttribute *)v45 setAttributeValueClassName:v47];

  [(VSKeychainItemAttribute *)v45 setSecItemAttributeKey:*MEMORY[0x1E4F3B870]];
  [v2 addObject:v45];
  v48 = objc_alloc_init(VSKeychainItemAttribute);
  [(VSKeychainItemAttribute *)v48 setName:@"data"];
  [(VSKeychainItemAttribute *)v48 setAttributeType:4];
  v49 = (objc_class *)objc_opt_class();
  v50 = NSStringFromClass(v49);
  [(VSKeychainItemAttribute *)v48 setAttributeValueClassName:v50];

  [(VSKeychainItemAttribute *)v48 setSecItemAttributeKey:*MEMORY[0x1E4F3BD38]];
  [v2 addObject:v48];
  [(VSKeychainItemKind *)v59 setProperties:v2];

  return v59;
}

void sub_1DA69D8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA69DEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA69F7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSSubscriptionFetchOptionsForAppWithBundleIdentifier(void *a1)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  id v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  uint64_t v4 = [MEMORY[0x1E4F1C9C8] distantPast];
  [v3 setObject:v4 forKey:@"VSSubscriptionFetchOptionEarliestExpirationDate"];

  [v3 setObject:MEMORY[0x1E4F1CC28] forKey:@"VSSubscriptionFetchOptionExcludeUninstalledApps"];
  uint64_t v5 = +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:v2];

  v8[0] = v5;
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:1];
  [v3 setObject:v6 forKey:@"VSSubscriptionFetchOptionSources"];

  return v3;
}

id VSSubscriptionFetchOptionsForInfoFromAppWithBundleIdentifier(void *a1, void *a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v4 = a2;
  id v5 = a1;
  id v6 = objc_alloc_init(v3);
  uint64_t v7 = [MEMORY[0x1E4F1C9C8] distantPast];
  [v6 setObject:v7 forKey:@"VSSubscriptionFetchOptionEarliestExpirationDate"];

  [v6 setObject:MEMORY[0x1E4F1CC28] forKey:@"VSSubscriptionFetchOptionExcludeUninstalledApps"];
  uint64_t v8 = +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:v4];

  v11[0] = v8;
  uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:1];
  [v6 setObject:v9 forKey:@"VSSubscriptionFetchOptionSources"];

  [v6 setObject:v5 forKey:@"VSSubscriptionFetchOptionSubscriptionInfo"];

  return v6;
}

id VSSubscriptionFetchOptionsForBundleIdentifiersAndDomainNames(void *a1, void *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  [v5 setObject:MEMORY[0x1E4F1CC28] forKey:@"VSSubscriptionFetchOptionExcludeUninstalledApps"];
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  [v5 setObject:v6 forKey:@"VSSubscriptionFetchOptionSources"];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v7 = v3;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v28 objects:v33 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v29 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v28 + 1) + 8 * i);
        uint64_t v13 = (void *)MEMORY[0x1E0173AA0]();
        uint64_t v14 = +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:v12];
        [v6 addObject:v14];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v28 objects:v33 count:16];
    }
    while (v9);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v15 = v4;
  uint64_t v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)v25;
    do
    {
      uint64_t v19 = 0;
      do
      {
        if (*(void *)v25 != v18) {
          objc_enumerationMutation(v15);
        }
        uint64_t v20 = *(void *)(*((void *)&v24 + 1) + 8 * v19);
        __int16 v21 = (void *)MEMORY[0x1E0173AA0](v16);
        id v22 = +[VSSubscriptionSource subscriptionSourceForWebsiteWithDomainName:](VSSubscriptionSource, "subscriptionSourceForWebsiteWithDomainName:", v20, (void)v24);
        [v6 addObject:v22];

        ++v19;
      }
      while (v17 != v19);
      uint64_t v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
      uint64_t v17 = v16;
    }
    while (v16);
  }

  return v5;
}

id VSSubscriptionFetchOptionsForWebSubscriptionsCreatedAfterDate(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  id v4 = [MEMORY[0x1E4F1C9C8] distantPast];
  [v3 setObject:v4 forKey:@"VSSubscriptionFetchOptionEarliestExpirationDate"];

  [v3 setObject:&unk_1F34D0CE8 forKey:@"VSSubscriptionFetchOptionSourceKind"];
  id v5 = objc_alloc(MEMORY[0x1E4F28C18]);
  id v6 = [MEMORY[0x1E4F1C9C8] distantFuture];
  id v7 = (void *)[v5 initWithStartDate:v2 endDate:v6];

  [v3 setObject:v7 forKey:@"VSSubscriptionFetchOptionCreationDateInterval"];

  return v3;
}

void __VSAllSubscriptionFetchOptions_block_invoke(uint64_t a1)
{
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __VSAllSubscriptionFetchOptions_block_invoke_2;
  v8[3] = &unk_1E6BD3678;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v2 = (void (**)(void *, uint64_t, uint64_t, uint64_t))_Block_copy(v8);
  uint64_t v6 = v2[2](v2, v3, v4, v5);
  id v7 = (void *)VSAllSubscriptionFetchOptions___vs_lazy_init_variable;
  VSAllSubscriptionFetchOptions___vs_lazy_init_variable = v6;
}

id __VSAllSubscriptionFetchOptions_block_invoke_2(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  uint64_t v3 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v3 setKey:@"VSSubscriptionFetchOptionExcludeUninstalledApps"];
  [(VSSubscriptionFetchOptionDescription *)v3 setAllowedClass:objc_opt_class()];
  uint64_t v4 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"self in %@", *(void *)(a1 + 32)];
  [(VSSubscriptionFetchOptionDescription *)v3 setAllowedValuePredicate:v4];

  [(VSSubscriptionFetchOptionDescription *)v3 setDefaultValue:*(void *)(a1 + 40)];
  long long v26 = v3;
  [v2 addObject:v3];
  uint64_t v5 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v5 setKey:@"VSSubscriptionFetchOptionEarliestExpirationDate"];
  [(VSSubscriptionFetchOptionDescription *)v5 setAllowedClass:objc_opt_class()];
  long long v25 = v5;
  [v2 addObject:v5];
  uint64_t v6 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v6 setKey:@"VSSubscriptionFetchOptionCreationDateInterval"];
  [(VSSubscriptionFetchOptionDescription *)v6 setAllowedClass:objc_opt_class()];
  id v7 = objc_alloc(MEMORY[0x1E4F28C18]);
  uint64_t v8 = [MEMORY[0x1E4F1C9C8] distantPast];
  id v9 = [MEMORY[0x1E4F1C9C8] distantFuture];
  id v10 = (void *)[v7 initWithStartDate:v8 endDate:v9];
  [(VSSubscriptionFetchOptionDescription *)v6 setDefaultValue:v10];

  long long v24 = v6;
  [v2 addObject:v6];
  uint64_t v11 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v11 setKey:@"VSSubscriptionFetchOptionSources"];
  [(VSSubscriptionFetchOptionDescription *)v11 setContainer:1];
  [(VSSubscriptionFetchOptionDescription *)v11 setAllowedClass:objc_opt_class()];
  [v2 addObject:v11];
  uint64_t v12 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v12 setKey:@"VSSubscriptionFetchOptionSourceKind"];
  [(VSSubscriptionFetchOptionDescription *)v12 setAllowedClass:objc_opt_class()];
  [v2 addObject:v12];
  uint64_t v13 = objc_alloc_init(VSSubscriptionFetchOptionDescription);
  [(VSSubscriptionFetchOptionDescription *)v13 setKey:@"VSSubscriptionFetchOptionSubscriptionInfo"];
  [(VSSubscriptionFetchOptionDescription *)v13 setAllowedClass:objc_opt_class()];
  [v2 addObject:v13];
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v15 = v2;
  uint64_t v16 = [v15 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v28 != v18) {
          objc_enumerationMutation(v15);
        }
        uint64_t v20 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        __int16 v21 = [v20 key];
        [v14 setObject:v20 forKey:v21];
      }
      uint64_t v17 = [v15 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }
    while (v17);
  }

  id v22 = (void *)[v14 copy];

  return v22;
}

id VSAppChannelsMappingValueType()
{
  if (VSAppChannelsMappingValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAppChannelsMappingValueType___vs_lazy_init_predicate, &__block_literal_global_21);
  }
  id v0 = (void *)VSAppChannelsMappingValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAppChannelsMappingValueType_block_invoke()
{
  VSAppChannelsMappingValueType___vs_lazy_init_variable = __VSAppChannelsMappingValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAppChannelsMappingValueType_block_invoke_2()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"appAdamID" kind:2 allowedClasses:v2 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v3];

  uint64_t v4 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  id v7 = +[VSValueTypeProperty valueTypePropertyWithName:@"channelIDs" kind:2 allowedClasses:v6 initialValue:MEMORY[0x1E4F1CBF0]];
  [v1 addObject:v7];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6A1548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

id VSAllKnownTemplateElements()
{
  if (VSAllKnownTemplateElements___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAllKnownTemplateElements___vs_lazy_init_predicate, &__block_literal_global_22);
  }
  id v0 = (void *)VSAllKnownTemplateElements___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAllKnownTemplateElements_block_invoke()
{
  VSAllKnownTemplateElements___vs_lazy_init_variable = __VSAllKnownTemplateElements_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

id __VSAllKnownTemplateElements_block_invoke_2()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  [v0 addObject:@"authenticationTemplate"];
  [v0 addObject:@"autoAuthenticationTemplate"];
  [v0 addObject:@"webAuthenticationTemplate"];
  [v0 addObject:@"onscreenCodeAuthenticationTemplate"];
  [v0 addObject:@"twoFactorVerificationTemplate"];
  id v1 = (void *)[v0 copy];

  return v1;
}

id VSPlatformTemplateElements()
{
  if (VSPlatformTemplateElements___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSPlatformTemplateElements___vs_lazy_init_predicate, &__block_literal_global_18);
  }
  id v0 = (void *)VSPlatformTemplateElements___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSPlatformTemplateElements_block_invoke()
{
  VSPlatformTemplateElements___vs_lazy_init_variable = __VSPlatformTemplateElements_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

id __VSPlatformTemplateElements_block_invoke_2()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  [v0 addObject:@"authenticationTemplate"];
  [v0 addObject:@"autoAuthenticationTemplate"];
  [v0 addObject:@"webAuthenticationTemplate"];
  id v1 = (void *)[v0 copy];

  return v1;
}

void sub_1DA6A1BE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A1D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1DA6A2088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void runLoopSourceScheduleCallback(void *a1)
{
  id v1 = a1;
  CFRunLoopSourceSignal((CFRunLoopSourceRef)[v1 runLoopSource]);
  id v2 = (__CFRunLoop *)[v1 underlyingRunLoop];

  CFRunLoopWakeUp(v2);
}

void runLoopSourceCancellCallback(void *a1)
{
  if (!a1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The ptr parameter must not be nil."];
  }
  id v2 = a1;
  uint64_t v3 = (__CFRunLoop *)[v2 underlyingRunLoop];
  uint64_t v4 = (__CFRunLoopSource *)[v2 runLoopSource];
  CFRunLoopRemoveSource(v3, v4, (CFRunLoopMode)*MEMORY[0x1E4F1D418]);
  uint64_t v5 = (__CFRunLoop *)[v2 underlyingRunLoop];

  CFRunLoopStop(v5);
}

void runLoopSourcePerformCallback(void *a1)
{
  if (!a1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The ptr parameter must not be nil."];
  }
  id v2 = a1;
  uint64_t v3 = (void *)MEMORY[0x1E0173AA0]();
  id obj = v2;
  objc_sync_enter(obj);
  while (1)
  {
    uint64_t v4 = [obj blocks];
    uint64_t v5 = [v4 firstObject];

    if (!v5) {
      break;
    }
    uint64_t v6 = [obj blocks];
    [v6 removeObjectAtIndex:0];

    v5[2](v5);
  }
  objc_sync_exit(obj);
}

void sub_1DA6A2280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1DA6A3AD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

id VSSharedSAMLParserController()
{
  if (VSSharedSAMLParserController___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSSharedSAMLParserController___vs_lazy_init_predicate, &__block_literal_global_23);
  }
  id v0 = (void *)VSSharedSAMLParserController___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSSharedSAMLParserController_block_invoke()
{
  VSSharedSAMLParserController___vs_lazy_init_variable = __VSSharedSAMLParserController_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

id __VSSharedSAMLParserController_block_invoke_2()
{
  id v0 = VSLoadBundleAtPath(@"System/Library/PrivateFrameworks/SAML.framework");
  id v6 = 0;
  char v1 = [v0 loadAndReturnError:&v6];
  id v2 = v6;
  if ((v1 & 1) == 0)
  {
    uint64_t v3 = VSErrorLogObject();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      __VSSharedSAMLParserController_block_invoke_2_cold_1((uint64_t)v2, v3);
    }
  }
  uint64_t v4 = [NSClassFromString((NSString *)@"SAMLParserController") sharedInstance];

  return v4;
}

id VSAccountProviderResponseValueType()
{
  if (VSAccountProviderResponseValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAccountProviderResponseValueType___vs_lazy_init_predicate, &__block_literal_global_24);
  }
  id v0 = (void *)VSAccountProviderResponseValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAccountProviderResponseValueType_block_invoke()
{
  VSAccountProviderResponseValueType___vs_lazy_init_variable = __VSAccountProviderResponseValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAccountProviderResponseValueType_block_invoke_2()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"authenticationScheme" kind:2 allowedClasses:v2 initialValue:@"SAML"];
  [v1 addObject:v3];

  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"status" kind:2 allowedClasses:v4 initialValue:0];
  [v1 addObject:v5];

  id v6 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v7 = +[VSValueTypeProperty valueTypePropertyWithName:@"body" kind:2 allowedClasses:v6 initialValue:0];
  [v1 addObject:v7];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6A6720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A67E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A68A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A8410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

id VSSubscriptionSourceValueType()
{
  if (VSSubscriptionSourceValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSSubscriptionSourceValueType___vs_lazy_init_predicate, &__block_literal_global_26);
  }
  id v0 = (void *)VSSubscriptionSourceValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSSubscriptionSourceValueType_block_invoke()
{
  VSSubscriptionSourceValueType___vs_lazy_init_variable = __VSSubscriptionSourceValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSSubscriptionSourceValueType_block_invoke_2()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = +[VSValueTypeProperty valueTypePropertyWithName:@"kind" kind:1 allowedClasses:0 initialValue:0];
  [v1 addObject:v2];

  uint64_t v3 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  uint64_t v4 = +[VSValueTypeProperty valueTypePropertyWithName:@"identifier" kind:2 allowedClasses:v3 initialValue:&stru_1F34B2EC8];
  [v1 addObject:v4];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6A8FC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A9260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A9388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id intermediaryKeyPathsForKeyPath(void *a1)
{
  id v1 = a1;
  if (!v1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The keyPath parameter must not be nil."];
  }
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v3 = [v1 componentsSeparatedByString:@"."];
  uint64_t v4 = (void *)[v3 mutableCopy];

  if ((unint64_t)[v4 count] >= 2)
  {
    do
    {
      [v4 removeLastObject];
      uint64_t v5 = [v4 componentsJoinedByString:@"."];
      [v2 addObject:v5];
    }
    while ((unint64_t)[v4 count] > 1);
  }

  return v2;
}

void sub_1DA6A97D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_1DA6A9988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6A9CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6AC328(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DA6AE504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void sub_1DA6B1960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B1A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B1AE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B2230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA6B36B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void sub_1DA6B519C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B5328(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1DA6B57F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1DA6B61EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void sub_1DA6B6898(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1DA6B7488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA6B77E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1DA6B7E88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B7F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6B970C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BB130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void sub_1DA6BB404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1DA6BB694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BB750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BB808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BB8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BB96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BBA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BBAF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BDE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void sub_1DA6BE360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BE4B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6BE55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t VSNumberForFourCharCode(unsigned int a1)
{
  return [NSNumber numberWithUnsignedLong:a1];
}

void VSRequireMainThread()
{
  if (([MEMORY[0x1E4F29060] isMainThread] & 1) == 0)
  {
    id v0 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v1 = *MEMORY[0x1E4F1C3B8];
    id v2 = [MEMORY[0x1E4F29060] currentThread];
    [v0 raise:v1, @"Running on %@ instead of main thread.", v2 format];
  }
}

uint64_t VSAssertNotMainThread()
{
  uint64_t result = [MEMORY[0x1E4F29060] isMainThread];
  if (result)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v2 = *MEMORY[0x1E4F1C3B8];
    return [v1 raise:v2 format:@"Must not run on main thread."];
  }
  return result;
}

void VSRequireKeyedCoder(void *a1)
{
  id v1 = a1;
  if (([v1 allowsKeyedCoding] & 1) == 0) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8], @"The coder %@ does not allow keyed coding.", v1 format];
  }
}

void VSRequireUsageInfoPlistKey()
{
  if (VSRequireUsageInfoPlistKey_onceToken != -1) {
    dispatch_once(&VSRequireUsageInfoPlistKey_onceToken, &__block_literal_global_37);
  }
  if (!VSRequireUsageInfoPlistKey_usageValueOrNil)
  {
    VSPrivateAccessUsageDescriptionMissing();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    id v0 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v1 = *MEMORY[0x1E4F1C3B8];
    uint64_t v2 = [v3 localizedDescription];
    [v0 raise:v1, @"%@", v2 format];
  }
}

void __VSRequireUsageInfoPlistKey_block_invoke()
{
  id v2 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v0 = [v2 objectForInfoDictionaryKey:@"NSVideoSubscriberAccountUsageDescription"];
  uint64_t v1 = (void *)VSRequireUsageInfoPlistKey_usageValueOrNil;
  VSRequireUsageInfoPlistKey_usageValueOrNil = v0;
}

uint64_t VSAssertWithMessage(uint64_t result, uint64_t a2)
{
  if ((result & 1) == 0) {
    return [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3B8], @"%@", a2 format];
  }
  return result;
}

id VSAccountMetadataRequestValueType()
{
  if (VSAccountMetadataRequestValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAccountMetadataRequestValueType___vs_lazy_init_predicate, &__block_literal_global_38);
  }
  uint64_t v0 = (void *)VSAccountMetadataRequestValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAccountMetadataRequestValueType_block_invoke()
{
  VSAccountMetadataRequestValueType___vs_lazy_init_variable = __VSAccountMetadataRequestValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAccountMetadataRequestValueType_block_invoke_2()
{
  v37[1] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"channelIdentifier" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"verificationToken" kind:2 allowedClasses:v4 initialValue:0];
  [v1 addObject:v5];

  id v6 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_msgSend(v6, "setWithObjects:", v7, objc_opt_class(), 0);
  uint64_t v9 = MEMORY[0x1E4F1CBF0];
  uint64_t v10 = +[VSValueTypeProperty valueTypePropertyWithName:@"supportedAccountProviderIdentifiers" kind:2 allowedClasses:v8 initialValue:MEMORY[0x1E4F1CBF0]];
  [v1 addObject:v10];

  uint64_t v11 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v12 = objc_opt_class();
  uint64_t v13 = objc_msgSend(v11, "setWithObjects:", v12, objc_opt_class(), 0);
  uint64_t v14 = +[VSValueTypeProperty valueTypePropertyWithName:@"featuredAccountProviderIdentifiers" kind:2 allowedClasses:v13 initialValue:v9];
  [v1 addObject:v14];

  uint64_t v15 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v16 = objc_opt_class();
  uint64_t v17 = objc_msgSend(v15, "setWithObjects:", v16, objc_opt_class(), 0);
  uint64_t v18 = +[VSValueTypeProperty valueTypePropertyWithName:@"applicationAccountProviders" kind:2 allowedClasses:v17 initialValue:v9];
  [v1 addObject:v18];

  uint64_t v19 = +[VSValueTypeProperty valueTypePropertyWithName:@"forceAuthentication" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v19];

  uint64_t v20 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  __int16 v21 = +[VSValueTypeProperty valueTypePropertyWithName:@"localizedVideoTitle" kind:2 allowedClasses:v20 initialValue:0];
  [v1 addObject:v21];

  id v22 = +[VSValueTypeProperty valueTypePropertyWithName:@"includeAccountProviderIdentifier" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v22];

  uint64_t v23 = +[VSValueTypeProperty valueTypePropertyWithName:@"includeAuthenticationExpirationDate" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v23];

  long long v24 = +[VSValueTypeProperty valueTypePropertyWithName:@"interruptionAllowed" kind:0 allowedClasses:0 initialValue:0];
  [v1 addObject:v24];

  long long v25 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v26 = objc_opt_class();
  long long v27 = objc_msgSend(v25, "setWithObjects:", v26, objc_opt_class(), 0);
  long long v28 = +[VSValueTypeProperty valueTypePropertyWithName:@"attributeNames" kind:2 allowedClasses:v27 initialValue:v9];
  [v1 addObject:v28];

  long long v29 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v30 = objc_opt_class();
  long long v31 = objc_msgSend(v29, "setWithObjects:", v30, objc_opt_class(), 0);
  v37[0] = @"SAML";
  uint64_t v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:v37 count:1];
  long long v33 = +[VSValueTypeProperty valueTypePropertyWithName:@"supportedAuthenticationSchemes" kind:2 allowedClasses:v31 initialValue:v32];
  [v1 addObject:v33];

  uint64_t v34 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  v35 = +[VSValueTypeProperty valueTypePropertyWithName:@"accountProviderAuthenticationToken" kind:2 allowedClasses:v34 initialValue:0];
  [v1 addObject:v35];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

id VSViewServiceResponseValueType()
{
  if (VSViewServiceResponseValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSViewServiceResponseValueType___vs_lazy_init_predicate, &__block_literal_global_39);
  }
  uint64_t v0 = (void *)VSViewServiceResponseValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSViewServiceResponseValueType_block_invoke()
{
  VSViewServiceResponseValueType___vs_lazy_init_variable = __VSViewServiceResponseValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSViewServiceResponseValueType_block_invoke_2()
{
  uint64_t v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"accountMetadata" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6C160C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id VSUserInfoForErrorRecoveryOptions(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  uint64_t v4 = objc_alloc_init(VSErrorRecoveryAttempter);
  [(VSErrorRecoveryAttempter *)v4 setOptions:v2];
  [v3 setObject:v4 forKey:*MEMORY[0x1E4F288B8]];
  uint64_t v5 = [v2 valueForKey:@"localizedAlertButtonTitle"];
  [v3 setObject:v5 forKey:*MEMORY[0x1E4F28590]];
  id v6 = [v2 indexesOfObjectsPassingTest:&__block_literal_global_64];

  [v3 setObject:v6 forKey:@"VSErrorDestructiveRecoveryOptionIndexSet"];

  return v3;
}

uint64_t __VSUserInfoForErrorRecoveryOptions_block_invoke(uint64_t a1, void *a2)
{
  return [a2 isDestructive];
}

void VSWaitForDebugger()
{
  uint64_t v0 = [MEMORY[0x1E4F1C9C8] distantFuture];
}

void VSPerformBlockOnMainThread(void *a1)
{
  id v2 = a1;
  if (!v2) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The block parameter must not be nil."];
  }
  uint64_t v1 = [MEMORY[0x1E4F28F08] mainQueue];
  [v1 addOperationWithBlock:v2];
}

void VSPerformCompletionHandler(void *a1)
{
  id v2 = a1;
  if (!v2) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The block parameter must not be nil."];
  }
  uint64_t v1 = VSCompletionQueue();
  [v1 addOperationWithBlock:v2];
}

id VSCompletionQueue()
{
  if (VSCompletionQueue___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSCompletionQueue___vs_lazy_init_predicate, &__block_literal_global_42);
  }
  uint64_t v0 = (void *)VSCompletionQueue___vs_lazy_init_variable;

  return v0;
}

id VSMainThreadOperationWithBlock(void *a1)
{
  id v1 = a1;
  if (!v1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The block parameter must not be nil."];
  }
  id v2 = (void *)MEMORY[0x1E4F28B48];
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __VSMainThreadOperationWithBlock_block_invoke;
  v6[3] = &unk_1E6BD2DC8;
  id v7 = v1;
  id v3 = v1;
  uint64_t v4 = [v2 blockOperationWithBlock:v6];

  return v4;
}

void __VSMainThreadOperationWithBlock_block_invoke(uint64_t a1)
{
}

void VSEnqueueCompletionOperation(void *a1)
{
  id v2 = a1;
  if (!v2) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The completionOperation parameter must not be nil."];
  }
  id v1 = VSCompletionQueue();
  [v1 addOperation:v2];
}

id VSOnceAndOnlyOnceBlock(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(VSOnceAndOnlyOnceHandler);
  [(VSOnceAndOnlyOnceHandler *)v2 setBlock:v1];

  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __VSOnceAndOnlyOnceBlock_block_invoke;
  v6[3] = &unk_1E6BD29A8;
  id v7 = v2;
  id v3 = v2;
  uint64_t v4 = (void *)[v6 copy];

  return v4;
}

uint64_t __VSOnceAndOnlyOnceBlock_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

void __VSCompletionQueue_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28F08]);
  [v0 setName:@"VSCompletionQueue"];
  id v1 = (void *)VSCompletionQueue___vs_lazy_init_variable;
  VSCompletionQueue___vs_lazy_init_variable = (uint64_t)v0;
}

void sub_1DA6C5A20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6C64D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

id VSAuditTokenValueType()
{
  if (VSAuditTokenValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSAuditTokenValueType___vs_lazy_init_predicate, &__block_literal_global_44);
  }
  id v0 = (void *)VSAuditTokenValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAuditTokenValueType_block_invoke()
{
  VSAuditTokenValueType___vs_lazy_init_variable = __VSAuditTokenValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAuditTokenValueType_block_invoke_2()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"bundleIdentifier" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"tokenBytes" kind:2 allowedClasses:v4 initialValue:0];
  [v1 addObject:v5];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void commonInit(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F290F0];
  id v2 = a1;
  id v4 = [v1 defaultSessionConfiguration];
  id v3 = [MEMORY[0x1E4F290E0] sessionWithConfiguration:v4];
  [v2 setSession:v3];
}

void sub_1DA6C7A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6C81DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6C8410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSDisplayNameForBundleWithIdentifier(void *a1)
{
  id v1 = a1;
  if (!v1) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The bundleID parameter must not be nil."];
  }
  id v7 = 0;
  id v2 = [MEMORY[0x1E4F223F8] bundleRecordWithBundleIdentifier:v1 allowPlaceholder:0 error:&v7];
  id v3 = v7;
  if (v3)
  {
    id v4 = VSErrorLogObject();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      VSDisplayNameForBundleWithIdentifier_cold_1((uint64_t)v1, v3, v4);
    }
  }
  uint64_t v5 = [v2 localizedName];

  return v5;
}

id VSBundleURLForProcessIdentifier(int a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  bzero(buffer, 0x400uLL);
  if (proc_pidpath(a1, buffer, 0x400u) < 1)
  {
    id v4 = 0;
  }
  else
  {
    buffer[1023] = 0;
    id v2 = [NSString stringWithUTF8String:buffer];
    if (v2)
    {
      id v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2];
      if (v3) {
        id v4 = (void *)_CFBundleCopyBundleURLForExecutableURL();
      }
      else {
        id v4 = 0;
      }
    }
    else
    {
      id v4 = 0;
    }
  }

  return v4;
}

id VSLoadBundleAtPath(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = NSString;
    id v3 = getenv("SIMULATOR_ROOT");
    if (v3) {
      id v4 = v3;
    }
    else {
      id v4 = "/";
    }
    uint64_t v5 = [v2 stringWithUTF8String:v4];
    id v6 = [v5 stringByAppendingPathComponent:v1];
    uint64_t v7 = [MEMORY[0x1E4F28B50] bundleWithPath:v6];
    if (!v7)
    {
      uint64_t v8 = VSErrorLogObject();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT)) {
        VSLoadBundleAtPath_cold_1((uint64_t)v1, v8);
      }
    }
    id v9 = v7;
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

uint64_t VSLoadInterfaceFramework(uint64_t a1)
{
  id v2 = VSLoadBundleAtPath(@"System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework");
  uint64_t v3 = [v2 loadAndReturnError:a1];

  return v3;
}

void sub_1DA6CB130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6CB258(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6CBB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

id VSIdentityProviderAppsResponseValueType()
{
  if (VSIdentityProviderAppsResponseValueType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSIdentityProviderAppsResponseValueType___vs_lazy_init_predicate, &__block_literal_global_49);
  }
  id v0 = (void *)VSIdentityProviderAppsResponseValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSIdentityProviderAppsResponseValueType_block_invoke()
{
  VSIdentityProviderAppsResponseValueType___vs_lazy_init_variable = __VSIdentityProviderAppsResponseValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSIdentityProviderAppsResponseValueType_block_invoke_2()
{
  id v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v3 = objc_opt_class();
  id v4 = objc_msgSend(v2, "setWithObjects:", v3, objc_opt_class(), 0);
  uint64_t v5 = MEMORY[0x1E4F1CBF0];
  id v6 = +[VSValueTypeProperty valueTypePropertyWithName:@"providerAppAdamIDs" kind:2 allowedClasses:v4 initialValue:MEMORY[0x1E4F1CBF0]];
  [v1 addObject:v6];

  uint64_t v7 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v8 = objc_opt_class();
  id v9 = objc_msgSend(v7, "setWithObjects:", v8, objc_opt_class(), 0);
  uint64_t v10 = +[VSValueTypeProperty valueTypePropertyWithName:@"channelMappings" kind:2 allowedClasses:v9 initialValue:v5];
  [v1 addObject:v10];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

void sub_1DA6CCBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSUserAccountServiceInterface()
{
  id v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F34EB040];
  id v1 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v1 forSelector:sel_updateUserAccount_completion_ argumentIndex:0 ofReply:0];

  id v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v2 forSelector:sel_updateUserAccount_completion_ argumentIndex:0 ofReply:1];

  uint64_t v3 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v3 forSelector:sel_queryUserAccountsWithOptions_completion_ argumentIndex:0 ofReply:0];

  id v4 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_msgSend(v4, "setWithObjects:", v5, v6, objc_opt_class(), 0);
  [v0 setClasses:v7 forSelector:sel_queryUserAccountsWithOptions_completion_ argumentIndex:0 ofReply:1];

  uint64_t v8 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = objc_msgSend(v8, "setWithObjects:", v9, objc_opt_class(), 0);
  [v0 setClasses:v10 forSelector:sel_queryUserAccountsWithOptions_sourceIdentifier_sourceType_deviceIdentifier_completion_ argumentIndex:0 ofReply:0];

  uint64_t v11 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v12 = objc_opt_class();
  uint64_t v13 = objc_opt_class();
  uint64_t v14 = objc_msgSend(v11, "setWithObjects:", v12, v13, objc_opt_class(), 0);
  [v0 setClasses:v14 forSelector:sel_queryUserAccountsWithOptions_sourceIdentifier_sourceType_deviceIdentifier_completion_ argumentIndex:0 ofReply:1];

  uint64_t v15 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v15 forSelector:sel_deleteUserAccount_completion_ argumentIndex:0 ofReply:0];

  uint64_t v16 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v16 forSelector:sel_deleteUserAccount_completion_ argumentIndex:0 ofReply:1];

  uint64_t v17 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v18 = objc_opt_class();
  uint64_t v19 = objc_opt_class();
  uint64_t v20 = objc_opt_class();
  uint64_t v21 = objc_opt_class();
  uint64_t v22 = objc_opt_class();
  uint64_t v23 = objc_opt_class();
  uint64_t v24 = objc_opt_class();
  long long v25 = objc_msgSend(v17, "setWithObjects:", v18, v19, v20, v21, v22, v23, v24, objc_opt_class(), 0);
  [v0 setClasses:v25 forSelector:sel_fetchActiveSubscriptionsWithOptions_completionHandler_ argumentIndex:0 ofReply:0];

  uint64_t v26 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v27 = objc_opt_class();
  long long v28 = objc_msgSend(v26, "setWithObjects:", v27, objc_opt_class(), 0);
  [v0 setClasses:v28 forSelector:sel_fetchActiveSubscriptionsWithOptions_completionHandler_ argumentIndex:0 ofReply:1];

  long long v29 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v30 = objc_opt_class();
  long long v31 = objc_msgSend(v29, "setWithObjects:", v30, objc_opt_class(), 0);
  [v0 setClasses:v31 forSelector:sel_removeSubscriptions_ argumentIndex:0 ofReply:0];

  return v0;
}

id VSSubscriptionPropertyListStoreType()
{
  if (VSSubscriptionPropertyListStoreType___vs_lazy_init_predicate != -1) {
    dispatch_once(&VSSubscriptionPropertyListStoreType___vs_lazy_init_predicate, &__block_literal_global_50);
  }
  id v0 = (void *)VSSubscriptionPropertyListStoreType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSSubscriptionPropertyListStoreType_block_invoke()
{
  VSSubscriptionPropertyListStoreType___vs_lazy_init_variable = __VSSubscriptionPropertyListStoreType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

id __VSSubscriptionPropertyListStoreType_block_invoke_2()
{
  id v0 = (objc_class *)objc_opt_class();
  id v1 = NSStringFromClass(v0);
  [MEMORY[0x1E4F1C188] registerStoreClass:v0 forStoreType:v1];

  return v1;
}

void sub_1DA6CE21C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL VSErrorIsPublicError(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [v3 domain];
  if ([v4 isEqual:@"VSErrorDomain"]) {
    BOOL v5 = [v3 code] == a2;
  }
  else {
    BOOL v5 = 0;
  }

  return v5;
}

BOOL VSErrorIsPrivateError(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = [v3 domain];
  if ([v4 isEqual:@"VSPrivateErrorDomain"]) {
    BOOL v5 = [v3 code] == a2;
  }
  else {
    BOOL v5 = 0;
  }

  return v5;
}

id VSPublicError(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = VSLocalizedDescriptionForPublicErrorCode(a2, a1);
  uint64_t v7 = VSLocalizedRecoverySuggestionForPublicErrorCode(a2);
  uint64_t v8 = VSErrorInfoWithDetailedErrors(v6, v7, v5, 0);

  uint64_t v9 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSErrorDomain" code:a2 userInfo:v8];

  return v9;
}

__CFString *VSLocalizedDescriptionForPublicErrorCode(uint64_t a1, uint64_t a2)
{
  id v4 = VSGetErrorStringsForType(a2);
  id v5 = [NSNumber numberWithInteger:a1];
  uint64_t v6 = [v4 objectForKey:v5];

  if (v6)
  {
    uint64_t v7 = VSGetErrorStringsForType(a2);
    uint64_t v8 = [NSNumber numberWithInteger:a1];
    uint64_t v9 = [v7 objectForKey:v8];

    if (!v9) {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The [VSGetErrorStringsForType(errorType) objectForKey:@(errorCode)] parameter must not be nil."];
    }
    uint64_t v10 = VSGetErrorStringsForType(a2);
    uint64_t v11 = [NSNumber numberWithInteger:a1];
    uint64_t v12 = [v10 objectForKey:v11];
  }
  else
  {
    uint64_t v13 = VSErrorLogObject();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT)) {
      VSLocalizedDescriptionForPublicErrorCode_cold_1(a2, a1, v13);
    }

    uint64_t v12 = &stru_1F34B2EC8;
  }

  return v12;
}

id VSLocalizedRecoverySuggestionForPublicErrorCode(uint64_t a1)
{
  if (a1 == 4)
  {
    id v1 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
    id v2 = v1;
    id v3 = @"ERROR_RECOVERY_SUGGESTION_AUTHORIZATION_DENIED";
    goto LABEL_5;
  }
  if (a1 == 3)
  {
    id v1 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
    id v2 = v1;
    id v3 = @"ERROR_RECOVERY_SUGGESTION_SERVICE_TEMPORARILY_UNAVAILABLE";
LABEL_5:
    id v4 = [v1 localizedStringForKey:v3 value:0 table:0];

    goto LABEL_7;
  }
  id v4 = 0;
LABEL_7:

  return v4;
}

id VSPublicErrorWithDetailedErrors(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = VSLocalizedDescriptionForPublicErrorCode(a2, a1);
  uint64_t v7 = VSLocalizedRecoverySuggestionForPublicErrorCode(a2);
  uint64_t v8 = VSErrorInfoWithDetailedErrors(v6, v7, 0, v5);

  uint64_t v9 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSErrorDomain" code:a2 userInfo:v8];

  return v9;
}

id VSErrorInfoWithDetailedErrors(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  if (v7)
  {
    uint64_t v12 = (void *)[v7 copy];
    [v11 setObject:v12 forKey:*MEMORY[0x1E4F28568]];
  }
  if (v8)
  {
    uint64_t v13 = (void *)[v8 copy];
    [v11 setObject:v13 forKey:*MEMORY[0x1E4F285A0]];
  }
  if (v9)
  {
    uint64_t v14 = (void *)[v9 copy];
    [v11 setObject:v14 forKey:*MEMORY[0x1E4F28A50]];
  }
  if (v10)
  {
    uint64_t v15 = (void *)[v10 copy];
    [v11 setObject:v15 forKey:@"VSDetailedErrors"];
  }

  return v11;
}

id VSPrivateError(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = VSLocalizedDescriptionForPrivateErrorCode(a1);
  id v5 = VSErrorInfoWithDetailedErrors(v4, 0, v3, 0);

  uint64_t v6 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSPrivateErrorDomain" code:a1 userInfo:v5];

  return v6;
}

__CFString *VSLocalizedDescriptionForPrivateErrorCode(uint64_t a1)
{
  id v1 = @"The TV provider did not include any text fields in the credential entry document.";
  switch(a1)
  {
    case -26:
      id v1 = @"The expiration date provided was invalid.";
      goto LABEL_30;
    case -25:
    case -18:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"ACCOUNT_LOADING_ERROR_MESSAGE";
      goto LABEL_28;
    case -24:
      id v1 = @"Encountered unexpected data.";
      goto LABEL_30;
    case -23:
      id v1 = @"The account access has been restricted.";
      goto LABEL_30;
    case -22:
      id v1 = @"The attempt to deserialize an object has failed.";
      goto LABEL_30;
    case -21:
      id v1 = @"The attempt to serialize an object has failed.";
      goto LABEL_30;
    case -20:
      id v1 = @"This app does not support the authentication scheme used by this TV Provider.";
      goto LABEL_30;
    case -19:
      id v1 = @"The TV provider did not include a source URL in the web authentication document.";
      goto LABEL_30;
    case -17:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"CREDENTIAL_ENTRY_ERROR_TITLE";
      goto LABEL_28;
    case -16:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"DELETE_ACCOUNT_ERROR_MESSAGE";
      goto LABEL_28;
    case -15:
      id v1 = @"The attempt to reset the Apple verification state failed.";
      goto LABEL_30;
    case -14:
      id v1 = @"A URL is missing from the bag.";
      goto LABEL_30;
    case -13:
      [NSString stringWithFormat:@"This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an %@ key with a string value explaining to the user how the app uses this data.", @"NSVideoSubscriberAccountUsageDescription"];
      goto LABEL_23;
    case -12:
      id v1 = @"The account access has not yet been determined.";
      goto LABEL_30;
    case -11:
      id v1 = @"The account access has been denied.";
      goto LABEL_30;
    case -10:
      id v1 = @"The Apple verification token needs to be regenerated";
      goto LABEL_30;
    case -9:
      id v1 = @"The operation took too long to finish.";
      goto LABEL_30;
    case -8:
      id v1 = @"The TV provider didn’t define the App.onRequest() function.";
      goto LABEL_30;
    case -7:
      id v1 = @"The TV provider took too long to respond.";
      goto LABEL_30;
    case -6:
      id v1 = @"This TV Provider is no longer available.";
      goto LABEL_30;
    case -5:
      [NSString stringWithFormat:@"The %@ entitlement is missing.", @"com.apple.developer.video-subscriber-single-sign-on"];
LABEL_23:
      id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (!v1) {
        goto LABEL_29;
      }
      goto LABEL_30;
    case -4:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"CREDENTIAL_ENTRY_ERROR_MESSAGE_GENERIC";
      goto LABEL_28;
    case -3:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"ERROR_DESCRIPTION_UNSUPPORTED_AUTHENTICATION_MECHANISM";
      goto LABEL_28;
    case -2:
      goto LABEL_30;
    case -1:
      id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
      id v3 = v2;
      id v4 = @"ERROR_DESCRIPTION_VIEW_SERVICE_CRASHED";
LABEL_28:
      id v1 = [v2 localizedStringForKey:v4 value:0 table:0];

      if (!v1) {
        goto LABEL_29;
      }
      goto LABEL_30;
    default:
LABEL_29:
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The localizedDescription parameter must not be nil."];
      id v1 = 0;
LABEL_30:
      return v1;
  }
}

id VSPrivateErrorWithRecoverySuggestion(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = VSLocalizedDescriptionForPrivateErrorCode(a1);
  id v8 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v9 = [v8 localizedStringForKey:@"ERROR_RECOVERY_SUGGESTION_SERVICE_TEMPORARILY_UNAVAILABLE" value:0 table:0];

  if (v6) {
    id v10 = v6;
  }
  else {
    id v10 = v9;
  }
  id v11 = VSErrorInfoWithDetailedErrors(v7, v10, v5, 0);

  uint64_t v12 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSPrivateErrorDomain" code:a1 userInfo:v11];

  return v12;
}

id VSPublicUnsupportedProviderError(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = VSLocalizedDescriptionForPublicErrorCode(1, 0);
  id v6 = VSErrorInfoWithDetailedErrors(v5, 0, 0, 0);
  if (v3)
  {
    id v7 = (void *)[v3 copy];
    [v6 setObject:v7 forKey:@"VSErrorInfoKeyUnsupportedProviderIdentifier"];
  }
  if (v4) {
    [v6 setObject:v4 forKey:*MEMORY[0x1E4F28A50]];
  }
  id v8 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSErrorDomain" code:1 userInfo:v6];

  return v8;
}

id VSPublicProviderRejectedError(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  id v8 = VSLocalizedDescriptionForPublicErrorCode(4, 0);
  id v9 = VSLocalizedRecoverySuggestionForPublicErrorCode(4);
  id v10 = VSErrorInfoWithDetailedErrors(v8, v9, 0, 0);
  id v11 = objc_alloc_init(VSAccountProviderResponse);
  [(VSAccountProviderResponse *)v11 setAuthenticationScheme:v7];
  [(VSAccountProviderResponse *)v11 setStatus:v6];
  [(VSAccountProviderResponse *)v11 setBody:v6];
  [v10 setObject:v11 forKey:@"VSErrorInfoKeyAccountProviderResponse"];
  int v12 = [v7 isEqual:@"SAML"];

  if (v12)
  {
    if (v5)
    {
      uint64_t v13 = (void *)[v5 copy];
      [v10 setObject:v13 forKey:@"VSErrorInfoKeySAMLResponse"];
    }
    if (v6)
    {
      uint64_t v14 = (void *)[v6 copy];
      [v10 setObject:v14 forKey:@"VSErrorInfoKeySAMLResponseStatus"];
    }
  }
  uint64_t v15 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSErrorDomain" code:4 userInfo:v10];

  return v15;
}

id VSPublicServiceTemporarilyUnavailableError(void *a1)
{
  id v1 = a1;
  id v2 = VSLocalizedDescriptionForPublicErrorCode(3, 0);
  id v3 = VSLocalizedRecoverySuggestionForPublicErrorCode(3);
  id v4 = VSErrorInfoWithDetailedErrors(v2, v3, v1, 0);

  id v5 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSErrorDomain" code:3 userInfo:v4];

  return v5;
}

id VSInvalidVerificationTokenError(void *a1)
{
  return VSPublicError(0, 5, a1);
}

id VSPrivateAccessUsageDescriptionMissing()
{
  id v0 = VSLocalizedDescriptionForPrivateErrorCode(-13);
  id v1 = VSErrorInfoWithDetailedErrors(v0, 0, 0, 0);
  id v2 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSPrivateErrorDomain" code:-13 userInfo:v1];

  return v2;
}

id VSPrivateViewServiceCrashedErrorWithRecoveryHandler(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v20 = VSLocalizedDescriptionForPrivateErrorCode(-1);
  id v5 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v6 = [v5 localizedStringForKey:@"ERROR_RECOVERY_SUGGESTION_VIEW_SERVICE_CRASHED" value:0 table:0];

  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  [v7 setObject:v20 forKey:*MEMORY[0x1E4F28568]];
  [v7 setObject:v6 forKey:*MEMORY[0x1E4F285A0]];
  [v7 setObject:v4 forKey:*MEMORY[0x1E4F28A50]];

  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v9 = objc_alloc_init(VSErrorRecoveryOption);
  id v10 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v11 = [v10 localizedStringForKey:@"ERROR_ACTION_RETRY_TITLE" value:0 table:0];
  [(VSErrorRecoveryOption *)v9 setLocalizedAlertButtonTitle:v11];

  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke;
  v23[3] = &unk_1E6BD4650;
  id v12 = v3;
  id v24 = v12;
  [(VSErrorRecoveryOption *)v9 setAttemptHandler:v23];
  [v8 addObject:v9];
  uint64_t v13 = objc_alloc_init(VSErrorRecoveryOption);
  uint64_t v14 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  uint64_t v15 = [v14 localizedStringForKey:@"CANCEL_TITLE" value:0 table:0];
  [(VSErrorRecoveryOption *)v13 setLocalizedAlertButtonTitle:v15];

  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke_2;
  v21[3] = &unk_1E6BD4650;
  id v22 = v12;
  id v16 = v12;
  [(VSErrorRecoveryOption *)v13 setAttemptHandler:v21];
  [v8 addObject:v13];
  uint64_t v17 = VSUserInfoForErrorRecoveryOptions(v8);
  [v7 addEntriesFromDictionary:v17];

  uint64_t v18 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSPrivateErrorDomain" code:-1 userInfo:v7];

  return v18;
}

uint64_t __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke(uint64_t a1)
{
  return 1;
}

uint64_t __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke_2(uint64_t a1)
{
  return 1;
}

id VSPrivateAccountDeletionErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-16, a1, a2);
}

id VSPrivateErrorWithRecoveryHandler(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v33 = a3;
  uint64_t v6 = VSLocalizedDescriptionForPrivateErrorCode(a1);
  id v7 = (void *)MEMORY[0x1E4F28568];
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0xFFFFFFFFFFFFFFEELL)
  {
    id v8 = v5;
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *MEMORY[0x1E4F28A50];
      while (1)
      {
        id v11 = objc_msgSend(v9, "domain", v33);
        if ([v11 isEqualToString:@"VSJSErrorDomain"]) {
          break;
        }
        BOOL IsPrivateError = VSErrorIsPrivateError(v9, -6);

        if (IsPrivateError) {
          goto LABEL_10;
        }
        uint64_t v13 = [v9 userInfo];
        uint64_t v14 = [v13 objectForKey:v10];

        id v9 = (void *)v14;
        if (!v14) {
          goto LABEL_7;
        }
      }

LABEL_10:
      id v15 = v9;
    }
    else
    {
LABEL_7:
      id v15 = 0;
    }
    uint64_t v17 = objc_msgSend(v15, "localizedDescription", v33);
    if ([v17 length]
      && ([v15 userInfo],
          uint64_t v18 = objc_claimAutoreleasedReturnValue(),
          [v18 objectForKey:*v7],
          uint64_t v19 = objc_claimAutoreleasedReturnValue(),
          v19,
          v18,
          v19))
    {
      if (!v17) {
        [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"The message parameter must not be nil."];
      }
      id v16 = v17;
    }
    else
    {
      id v16 = 0;
    }
  }
  else
  {
    id v16 = 0;
  }
  id v20 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  [v20 setObject:v6 forKey:*v7];
  if (v16) {
    [v20 setObject:v16 forKey:*MEMORY[0x1E4F285A0]];
  }
  if (v5) {
    [v20 setObject:v5 forKey:*MEMORY[0x1E4F28A50]];
  }
  id v21 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v22 = objc_alloc_init(VSErrorRecoveryOption);
  uint64_t v23 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v24 = v23;
  if (a1 != -18)
  {
    long long v25 = [v23 localizedStringForKey:@"ERROR_DISMISS_BUTTON_TITLE" value:0 table:0];
    goto LABEL_26;
  }
  long long v25 = [v23 localizedStringForKey:@"ERROR_ACTION_RETRY_TITLE" value:0 table:0];

  if (VSErrorIsPrivateError(v5, -6))
  {
    id v24 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
    uint64_t v26 = [v24 localizedStringForKey:@"SIGN_OUT_BUTTON_TITLE" value:0 table:0];

    long long v25 = (void *)v26;
LABEL_26:
    uint64_t v27 = v33;

    long long v28 = (void *)v6;
    goto LABEL_28;
  }
  long long v28 = (void *)v6;
  uint64_t v27 = v33;
LABEL_28:
  -[VSErrorRecoveryOption setLocalizedAlertButtonTitle:](v22, "setLocalizedAlertButtonTitle:", v25, v33);
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 3221225472;
  v34[2] = __VSPrivateErrorWithRecoveryHandler_block_invoke;
  v34[3] = &unk_1E6BD4650;
  id v35 = v27;
  id v29 = v27;
  [(VSErrorRecoveryOption *)v22 setAttemptHandler:v34];
  [v21 addObject:v22];
  uint64_t v30 = VSUserInfoForErrorRecoveryOptions(v21);
  [v20 addEntriesFromDictionary:v30];

  long long v31 = [MEMORY[0x1E4F28C58] errorWithDomain:@"VSPrivateErrorDomain" code:a1 userInfo:v20];

  return v31;
}

id VSPrivateAccountValidationErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-17, a1, a2);
}

id VSPrivateAccountLoadingErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-18, a1, a2);
}

id VSGetErrorStringsForType(uint64_t a1)
{
  if (VSGetErrorStringsForType_onceToken != -1) {
    dispatch_once(&VSGetErrorStringsForType_onceToken, &__block_literal_global_51);
  }
  id v2 = (void *)VSGetErrorStringsForType_errorStringMaps;
  id v3 = [NSNumber numberWithInteger:a1];
  id v4 = [v2 objectForKey:v3];

  if (v4) {
    id v5 = v4;
  }
  else {
    id v5 = (id)MEMORY[0x1E4F1CC08];
  }

  return v5;
}

void __VSGetErrorStringsForType_block_invoke()
{
  v7[2] = *MEMORY[0x1E4F143B8];
  v6[0] = &unk_1F34D0D00;
  if (VSSubscriptionErrorStrings_onceToken != -1) {
    dispatch_once(&VSSubscriptionErrorStrings_onceToken, &__block_literal_global_66);
  }
  v6[1] = &unk_1F34D0D18;
  v7[0] = VSSubscriptionErrorStrings_errorStrings;
  uint64_t v0 = VSUserAccountErrorStrings_onceToken;
  id v1 = (id)VSSubscriptionErrorStrings_errorStrings;
  if (v0 != -1) {
    dispatch_once(&VSUserAccountErrorStrings_onceToken, &__block_literal_global_104);
  }
  v7[1] = VSUserAccountErrorStrings_errorStrings;
  id v2 = (void *)MEMORY[0x1E4F1C9E8];
  id v3 = (id)VSUserAccountErrorStrings_errorStrings;
  uint64_t v4 = [v2 dictionaryWithObjects:v7 forKeys:v6 count:2];
  id v5 = (void *)VSGetErrorStringsForType_errorStringMaps;
  VSGetErrorStringsForType_errorStringMaps = v4;
}

void __VSSubscriptionErrorStrings_block_invoke()
{
  v19[8] = *MEMORY[0x1E4F143B8];
  v18[0] = &unk_1F34D0D00;
  uint64_t v17 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v16 = [v17 localizedStringForKey:@"ERROR_DESCRIPTION_ACCESS_NOT_GRANTED" value:0 table:0];
  v19[0] = v16;
  v18[1] = &unk_1F34D0D18;
  id v15 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  uint64_t v14 = [v15 localizedStringForKey:@"ERROR_DESCRIPTION_UNSUPPORTED_PROVIDER" value:0 table:0];
  v19[1] = v14;
  v18[2] = &unk_1F34D0D30;
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v12 = [v13 localizedStringForKey:@"ERROR_DESCRIPTION_USER_CANCELLED" value:0 table:0];
  v19[2] = v12;
  v18[3] = &unk_1F34D0D48;
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v1 = [v0 localizedStringForKey:@"ERROR_DESCRIPTION_SERVICE_TEMPORARILY_UNAVAILABLE" value:0 table:0];
  v19[3] = v1;
  v18[4] = &unk_1F34D0D60;
  id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v3 = [v2 localizedStringForKey:@"ERROR_DESCRIPTION_PROVIDER_REJECTED" value:0 table:0];
  v19[4] = v3;
  v18[5] = &unk_1F34D0D78;
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v5 = [v4 localizedStringForKey:@"ERROR_DESCRIPTION_INVALID_VERIFICATION_TOKEN" value:0 table:0];
  v19[5] = v5;
  v18[6] = &unk_1F34D0D90;
  uint64_t v6 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v7 = [v6 localizedStringForKey:@"ERROR_DESCRIPTION_REJECTED" value:0 table:0];
  v19[6] = v7;
  v18[7] = &unk_1F34D0DA8;
  id v8 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v9 = [v8 localizedStringForKey:@"ERROR_DESCRIPTION_UNSUPPORTED" value:0 table:0];
  v19[7] = v9;
  uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v19 forKeys:v18 count:8];
  id v11 = (void *)VSSubscriptionErrorStrings_errorStrings;
  VSSubscriptionErrorStrings_errorStrings = v10;
}

void __VSUserAccountErrorStrings_block_invoke()
{
  v7[2] = *MEMORY[0x1E4F143B8];
  v6[0] = &unk_1F34D0D90;
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v1 = [v0 localizedStringForKey:@"ERROR_DESCRIPTION_PROVIDER_MISMATCH" value:0 table:0];
  v6[1] = &unk_1F34D0D48;
  v7[0] = v1;
  id v2 = objc_msgSend(MEMORY[0x1E4F28B50], "vs_frameworkBundle");
  id v3 = [v2 localizedStringForKey:@"ERROR_DESCRIPTION_SERVICE_UNAVAILABLE" value:0 table:0];
  v7[1] = v3;
  uint64_t v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v7 forKeys:v6 count:2];
  id v5 = (void *)VSUserAccountErrorStrings_errorStrings;
  VSUserAccountErrorStrings_errorStrings = v4;
}

uint64_t __VSPrivateErrorWithRecoveryHandler_block_invoke(uint64_t a1)
{
  return 1;
}

void sub_1DA6D0ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id secureCodingSafeObject(void *a1)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (([v1 conformsToProtocol:&unk_1F34D3478] & 1) == 0)
  {
    id v8 = objc_alloc_init(VSOptional);
LABEL_7:
    id v7 = v8;
    goto LABEL_31;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v2 = (void *)MEMORY[0x1E4F1CA00];
      uint64_t v3 = *MEMORY[0x1E4F1C3C8];
      uint64_t v4 = (objc_class *)objc_opt_class();
      id v5 = NSStringFromClass(v4);
      [v2 raise:v3, @"Unexpectedly, object was %@, instead of NSError.", v5 format];
    }
    objc_msgSend(v1, "vs_secureCodingSafeError");
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    id v7 = +[VSOptional optionalWithObject:v6];
    goto LABEL_30;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v9 = (void *)MEMORY[0x1E4F1CA00];
      uint64_t v10 = *MEMORY[0x1E4F1C3C8];
      id v11 = (objc_class *)objc_opt_class();
      id v12 = NSStringFromClass(v11);
      [v9 raise:v10, @"Unexpectedly, object was %@, instead of NSArray.", v12 format];
    }
    id v13 = v1;
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v49 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id v6 = v13;
    uint64_t v15 = [v6 countByEnumeratingWithState:&v49 objects:v54 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v50;
      do
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v50 != v17) {
            objc_enumerationMutation(v6);
          }
          uint64_t v19 = secureCodingSafeObject(*(void *)(*((void *)&v49 + 1) + 8 * i));
          v47[0] = MEMORY[0x1E4F143A8];
          v47[1] = 3221225472;
          v47[2] = __secureCodingSafeObject_block_invoke;
          v47[3] = &unk_1E6BD46A0;
          id v48 = v14;
          [v19 conditionallyUnwrapObject:v47];
        }
        uint64_t v16 = [v6 countByEnumeratingWithState:&v49 objects:v54 count:16];
      }
      while (v16);
    }
LABEL_29:

    id v7 = +[VSOptional optionalWithObject:v14];

LABEL_30:
    goto LABEL_31;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v20 = (void *)MEMORY[0x1E4F1CA00];
      uint64_t v21 = *MEMORY[0x1E4F1C3C8];
      id v22 = (objc_class *)objc_opt_class();
      uint64_t v23 = NSStringFromClass(v22);
      [v20 raise:v21, @"Unexpectedly, object was %@, instead of NSSet.", v23 format];
    }
    id v24 = v1;
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    long long v43 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    id v6 = v24;
    uint64_t v25 = [v6 countByEnumeratingWithState:&v43 objects:v53 count:16];
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = *(void *)v44;
      do
      {
        for (uint64_t j = 0; j != v26; ++j)
        {
          if (*(void *)v44 != v27) {
            objc_enumerationMutation(v6);
          }
          id v29 = secureCodingSafeObject(*(void *)(*((void *)&v43 + 1) + 8 * j));
          v41[0] = MEMORY[0x1E4F143A8];
          v41[1] = 3221225472;
          v41[2] = __secureCodingSafeObject_block_invoke_2;
          v41[3] = &unk_1E6BD46A0;
          id v42 = v14;
          [v29 conditionallyUnwrapObject:v41];
        }
        uint64_t v26 = [v6 countByEnumeratingWithState:&v43 objects:v53 count:16];
      }
      while (v26);
    }
    goto LABEL_29;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v8 = +[VSOptional optionalWithObject:v1];
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    long long v31 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v32 = *MEMORY[0x1E4F1C3C8];
    id v33 = (objc_class *)objc_opt_class();
    uint64_t v34 = NSStringFromClass(v33);
    [v31 raise:v32, @"Unexpectedly, object was %@, instead of NSDictionary.", v34 format];
  }
  id v35 = (objc_class *)MEMORY[0x1E4F1CA60];
  id v36 = v1;
  id v37 = objc_alloc_init(v35);
  v39[0] = MEMORY[0x1E4F143A8];
  v39[1] = 3221225472;
  v39[2] = __secureCodingSafeObject_block_invoke_3;
  v39[3] = &unk_1E6BD2D50;
  id v40 = v37;
  id v38 = v37;
  [v36 enumerateKeysAndObjectsUsingBlock:v39];

  id v7 = +[VSOptional optionalWithObject:v38];

LABEL_31:

  return v7;
}

uint64_t __secureCodingSafeObject_block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

uint64_t __secureCodingSafeObject_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void __secureCodingSafeObject_block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = secureCodingSafeObject(a3);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __secureCodingSafeObject_block_invoke_4;
  v8[3] = &unk_1E6BD46C8;
  id v9 = *(id *)(a1 + 32);
  id v10 = v5;
  id v7 = v5;
  [v6 conditionallyUnwrapObject:v8];
}

uint64_t __secureCodingSafeObject_block_invoke_4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setObject:a2 forKey:*(void *)(a1 + 40)];
}

void sub_1DA6D2558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, id location)
{
}

void sub_1DA6D38DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6D3968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6D460C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1DA6D4A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6D5404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void commonInit_0(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  a1[5] = a2;
  id v8 = a5;
  id v9 = a1;
  uint64_t v10 = [a3 copy];
  id v11 = v9[2];
  v9[2] = (id)v10;

  v9[14] = a4;
  uint64_t v12 = [v8 copy];

  id v13 = v9[15];
  v9[15] = (id)v12;

  id v14 = +[VSDevice currentDevice];
  v9[10] = (id)+[VSUserAccount deviceCategoryFromDeviceType:](VSUserAccount, "deviceCategoryFromDeviceType:", [v14 deviceType]);

  uint64_t v15 = [MEMORY[0x1E4F1C9C8] now];
  objc_storeStrong(v9 + 12, v15);
  id v16 = v9[13];
  v9[13] = v15;
  id v17 = v15;

  objc_storeStrong(v9 + 21, @"userAccount");
}

void sub_1DA6DA318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6DB884(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1DA6DBCD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1DA6DC23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6DC43C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1DA6DC634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6DCAD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1DA6DCF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6DD1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1DA6DD938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSMainConcurrencyBindingOptions()
{
  v5[3] = *MEMORY[0x1E4F143B8];
  v4[0] = @"VSRequiredThreadBindingOption";
  uint64_t v0 = [MEMORY[0x1E4F29060] mainThread];
  v5[0] = v0;
  v4[1] = @"VSRequiredOperationQueueBindingOption";
  id v1 = [MEMORY[0x1E4F28F08] mainQueue];
  v4[2] = @"VSRequiredDispatchQueueBindingOption";
  v5[1] = v1;
  v5[2] = MEMORY[0x1E4F14428];
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:v4 count:3];

  return v2;
}

id VSAccountMetadataValueType()
{
  if (VSAccountMetadataValueType___vs_lazy_init_predicate[0] != -1) {
    dispatch_once(VSAccountMetadataValueType___vs_lazy_init_predicate, &__block_literal_global_54);
  }
  uint64_t v0 = (void *)VSAccountMetadataValueType___vs_lazy_init_variable;

  return v0;
}

uint64_t __VSAccountMetadataValueType_block_invoke()
{
  VSAccountMetadataValueType___vs_lazy_init_variable = __VSAccountMetadataValueType_block_invoke_2();

  return MEMORY[0x1F41817F8]();
}

VSValueType *__VSAccountMetadataValueType_block_invoke_2()
{
  uint64_t v0 = objc_alloc_init(VSValueType);
  [(VSValueType *)v0 setImplementationClass:objc_opt_class()];
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  uint64_t v3 = +[VSValueTypeProperty valueTypePropertyWithName:@"accountProviderIdentifier" kind:2 allowedClasses:v2 initialValue:0];
  [v1 addObject:v3];

  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v5 = +[VSValueTypeProperty valueTypePropertyWithName:@"authenticationExpirationDate" kind:2 allowedClasses:v4 initialValue:0];
  [v1 addObject:v5];

  id v6 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v7 = +[VSValueTypeProperty valueTypePropertyWithName:@"verificationData" kind:2 allowedClasses:v6 initialValue:0];
  [v1 addObject:v7];

  id v8 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  id v9 = +[VSValueTypeProperty valueTypePropertyWithName:@"accountProviderResponse" kind:2 allowedClasses:v8 initialValue:0];
  [v1 addObject:v9];

  [(VSValueType *)v0 setProperties:v1];

  return v0;
}

VideoSubscriberAccount::VSTVProviderKeys_optional __swiftcall VSTVProviderKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSTVProviderKeys.allCases.getter()
{
  return &unk_1F34AB560;
}

unint64_t VSTVProviderKeys.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F74736575716572;
      break;
    case 2:
      unint64_t result = 0x5F6E695F6E676973;
      break;
    case 3:
      unint64_t result = 0x765F656C646E7562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6E0090(unsigned __int8 *a1, char *a2)
{
  return sub_1DA6E00F4(*a1, *a2);
}

unint64_t sub_1DA6E00A0()
{
  unint64_t result = qword_1EA8E2678;
  if (!qword_1EA8E2678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2678);
  }
  return result;
}

uint64_t sub_1DA6E00F4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000001DA767470;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F74736575716572;
      unint64_t v3 = 0xE900000000000072;
      break;
    case 2:
      unint64_t v5 = 0x5F6E695F6E676973;
      unint64_t v3 = 0xEC00000065707974;
      break;
    case 3:
      unint64_t v5 = 0x765F656C646E7562;
      unint64_t v3 = 0xEE006E6F69737265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001DA767470;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000072;
      if (v5 == 0x6F74736575716572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x5F6E695F6E676973;
      unint64_t v6 = 0xEC00000065707974;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE006E6F69737265;
      if (v5 == 0x765F656C646E7562) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1DA744CB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DA6E02B0()
{
  return sub_1DA6E02B8();
}

uint64_t sub_1DA6E02B8()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E03B0()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E0490()
{
  return sub_1DA6E0498();
}

uint64_t sub_1DA6E0498()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSTVProviderKeys_optional sub_1DA6E058C(Swift::String *a1)
{
  return VSTVProviderKeys.init(rawValue:)(*a1);
}

void sub_1DA6E0598(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x80000001DA767470;
  unint64_t v3 = 0xD000000000000012;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000072;
      unint64_t v3 = 0x6F74736575716572;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "sign_in_type");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      strcpy((char *)a1, "bundle_version");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = v2;
      break;
  }
}

unint64_t sub_1DA6E0654()
{
  unint64_t result = qword_1EA8E2680;
  if (!qword_1EA8E2680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E2688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2680);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_1DA6E06F8(void *a1@<X8>)
{
  *a1 = &unk_1F34AB588;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VSTVProviderKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSTVProviderKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6E0874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1DA6E089C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DA6E08A4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VSTVProviderKeys()
{
  return &type metadata for VSTVProviderKeys;
}

VideoSubscriberAccount::VSFederatedPlaybackKeys_optional __swiftcall VSFederatedPlaybackKeys.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSFederatedPlaybackKeys.allCases.getter()
{
  return &unk_1F34AB720;
}

uint64_t VSFederatedPlaybackKeys.rawValue.getter()
{
  uint64_t result = 0x44496D616461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x695F656C646E7562;
      break;
    case 2:
      uint64_t result = 0x765F656C646E7562;
      break;
    case 3:
      uint64_t result = 0x6163696E6F6E6163;
      break;
    case 4:
      uint64_t result = 0x496C656E6E616863;
      break;
    case 5:
      uint64_t result = 0x65746E65736E6F63;
      break;
    case 6:
      uint64_t result = 0x6C616E7265747865;
      break;
    case 7:
      uint64_t result = 7107700;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6E0A38(unsigned __int8 *a1, char *a2)
{
  return sub_1DA6E0A9C(*a1, *a2);
}

unint64_t sub_1DA6E0A48()
{
  unint64_t result = qword_1EA8E2690;
  if (!qword_1EA8E2690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2690);
  }
  return result;
}

uint64_t sub_1DA6E0A9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x44496D616461;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x44496D616461;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x695F656C646E7562;
      goto LABEL_7;
    case 2:
      uint64_t v5 = 0x765F656C646E7562;
      unint64_t v3 = 0xEE006E6F69737265;
      break;
    case 3:
      uint64_t v5 = 0x6163696E6F6E6163;
      unint64_t v3 = 0xEB0000000044496CLL;
      break;
    case 4:
      uint64_t v5 = 0x496C656E6E616863;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 5:
      uint64_t v5 = 0x65746E65736E6F63;
LABEL_7:
      unint64_t v3 = 0xE900000000000064;
      break;
    case 6:
      uint64_t v5 = 0x6C616E7265747865;
      unint64_t v3 = 0xEA00000000004449;
      break;
    case 7:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7107700;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 0x695F656C646E7562;
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEE006E6F69737265;
      if (v5 != 0x765F656C646E7562) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      unint64_t v6 = 0xEB0000000044496CLL;
      if (v5 != 0x6163696E6F6E6163) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v6 = 0xE900000000000044;
      if (v5 != 0x496C656E6E616863) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      uint64_t v7 = 0x65746E65736E6F63;
LABEL_19:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != v7) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      uint64_t v2 = 0x6C616E7265747865;
      unint64_t v6 = 0xEA00000000004449;
      goto LABEL_22;
    case 7:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7107700) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_26:
      }
        char v8 = sub_1DA744CB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1DA6E0D48()
{
  return sub_1DA6E0EB0();
}

uint64_t sub_1DA6E0D54()
{
  return sub_1DA6E0D5C();
}

uint64_t sub_1DA6E0D5C()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E0EA8()
{
  return sub_1DA6E0EB0();
}

uint64_t sub_1DA6E0EB0()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSFederatedPlaybackKeys_optional sub_1DA6E100C(Swift::String *a1)
{
  return VSFederatedPlaybackKeys.init(rawValue:)(*a1);
}

void sub_1DA6E1018(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x44496D616461;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x695F656C646E7562;
      unint64_t v2 = 0xE900000000000064;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "bundle_version");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x6163696E6F6E6163;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = 0xEB0000000044496CLL;
      break;
    case 4:
      *(void *)a1 = 0x496C656E6E616863;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = 0xE900000000000044;
      break;
    case 5:
      *(void *)a1 = 0x65746E65736E6F63;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = 0xE900000000000064;
      break;
    case 6:
      *(void *)a1 = 0x6C616E7265747865;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = 0xEA00000000004449;
      break;
    case 7:
      *(void *)a1 = 7107700;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = v2;
      break;
  }
}

unint64_t sub_1DA6E1154()
{
  unint64_t result = qword_1EA8E2698;
  if (!qword_1EA8E2698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E26A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2698);
  }
  return result;
}

void sub_1DA6E11B0(void *a1@<X8>)
{
  *a1 = &unk_1F34AB720;
}

uint64_t getEnumTagSinglePayload for VSFederatedPlaybackKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSFederatedPlaybackKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6E131CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSFederatedPlaybackKeys()
{
  return &type metadata for VSFederatedPlaybackKeys;
}

unint64_t sub_1DA6E1354()
{
  return 0xD000000000000012;
}

uint64_t VSFederatedPunchoutEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSFederatedPunchoutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSFederatedPunchoutEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSFederatedPunchoutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t sub_1DA6E13F4()
{
  uint64_t v0 = *(void *)sub_1DA6F9128();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t VSFederatedPunchoutEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSFederatedPunchoutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSFederatedPunchoutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSFederatedPunchoutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[86] = a2;
  v2[85] = a1;
  uint64_t v3 = sub_1DA744998();
  v2[87] = v3;
  v2[88] = *(void *)(v3 - 8);
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6E159C, 0, 0);
}

uint64_t sub_1DA6E159C()
{
  uint64_t v1 = v0[92];
  uint64_t v2 = v0[88];
  uint64_t v3 = v0[87];
  unsigned int v4 = sub_1DA6F9128();
  v0[93] = *v4;
  v0[94] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[95] = v5;
  unsigned int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[96] = v6;
  v0[97] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  BOOL v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSFederatedPunchoutEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[92];
  uint64_t v11 = v0[88];
  uint64_t v12 = v0[87];

  id v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[98] = v13;
  v0[99] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v12);
  id v14 = (void *)swift_task_alloc();
  v0[100] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6E1740;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E1740(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80_Block_object_dispose(&STACK[0x360], 8) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6E1840, 0, 0);
}

uint64_t sub_1DA6E1840()
{
  uint64_t v129 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  uint64_t v121 = v0 + 160;
  uint64_t v102 = v0 + 200;
  uint64_t v111 = v0 + 240;
  uint64_t v3 = v0 + 280;
  uint64_t v4 = v0 + 320;
  uint64_t v5 = (_OWORD *)(v0 + 400);
  v98 = (_OWORD *)(v0 + 432);
  v99 = (_OWORD *)(v0 + 464);
  uint64_t v100 = v0 + 360;
  uint64_t v101 = v0 + 496;
  v109 = (_OWORD *)(v0 + 528);
  v116 = (_OWORD *)(v0 + 592);
  v106 = (unsigned char *)(v0 + 817);
  unsigned int v6 = (unsigned char *)(v0 + 819);
  v110 = (unsigned char *)(v0 + 820);
  uint64_t v7 = *(void *)(v0 + 688);
  uint64_t v104 = v7 + 64;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v124 = v8 & *(void *)(v7 + 64);
  uint64_t v113 = v0 + 128;
  v117 = (_OWORD *)(v0 + 56);
  int64_t v108 = (unint64_t)(63 - v9) >> 6;
  uint64_t v10 = *(void **)(v0 + 808);
  uint64_t v11 = (unsigned char *)(v0 + 821);
  uint64_t v114 = v7;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v119 = 0;
  id v13 = &type metadata for VSAnalyticsCommonKeys;
  uint64_t v115 = v2;
  uint64_t v118 = v3;
  uint64_t v122 = (uint64_t)v5;
  v112 = v11;
  uint64_t v105 = v1;
  unint64_t v14 = v124;
  if (!v124) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v125 = (v14 - 1) & v14;
  unint64_t v15 = __clz(__rbit64(v14)) | (v119 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v114 + 48) + 40 * v15, v2);
  sub_1DA6E32BC(*(void *)(v114 + 56) + 32 * v15, v113);
  uint64_t v5 = (_OWORD *)v122;
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v120 + 40)) {
      break;
    }
    uint64_t v127 = (uint64_t)v10;
    long long v19 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v1;
    *(_OWORD *)(v4 + 16) = v19;
    *(void *)(v4 + 32) = *(void *)(v1 + 32);
    sub_1DA6E34CC(v117, v5);
    id v20 = v13;
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      unsigned char *v110 = *v6;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v5, (uint64_t)v116);
      uint64_t v10 = (void *)v127;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v128[0] = v127;
      unint64_t v23 = sub_1DA6E2DB8(v121);
      uint64_t v24 = *(void *)(v127 + 16);
      BOOL v25 = (v22 & 1) == 0;
      uint64_t result = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      char v26 = v22;
      if (*(void *)(v127 + 24) >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DA6E3670();
          uint64_t v10 = (void *)v128[0];
        }
        uint64_t v11 = v112;
        uint64_t v5 = (_OWORD *)v122;
        if ((v26 & 1) == 0) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_1DA6E2DFC(result, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = (void *)v128[0];
        unint64_t v27 = sub_1DA6E2DB8(v121);
        uint64_t v11 = v112;
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_61;
        }
        unint64_t v23 = v27;
        uint64_t v5 = (_OWORD *)v122;
        if ((v26 & 1) == 0)
        {
LABEL_30:
          v10[(v23 >> 6) + 8] |= 1 << v23;
          sub_1DA6E3260(v121, v10[6] + 40 * v23);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v116, (_OWORD *)(v10[7] + 32 * v23));
          uint64_t v29 = v10[2];
          BOOL v30 = __OFADD__(v29, 1);
          uint64_t v31 = v29 + 1;
          if (v30) {
            goto LABEL_83;
          }
          v10[2] = v31;
          goto LABEL_45;
        }
      }
      v53 = (_OWORD *)(v10[7] + 32 * v23);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
      sub_1DA6E34CC(v116, v53);
LABEL_45:
      swift_bridgeObjectRelease();
      uint64_t v54 = v121;
      goto LABEL_53;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      unsigned char *v106 = *v11;
      sub_1DA6E33C4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v5, (uint64_t)v109);
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      v128[0] = v127;
      unint64_t v34 = sub_1DA6E2DB8(v111);
      uint64_t v35 = *(void *)(v127 + 16);
      BOOL v36 = (v33 & 1) == 0;
      uint64_t result = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_82;
      }
      char v37 = v33;
      if (*(void *)(v127 + 24) >= result)
      {
        if (v32)
        {
          uint64_t v10 = (void *)v127;
          uint64_t v5 = (_OWORD *)v122;
          if ((v33 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = (void *)v128[0];
          uint64_t v5 = (_OWORD *)v122;
          if ((v37 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(result, v32);
        uint64_t v38 = v128[0];
        unint64_t v39 = sub_1DA6E2DB8(v111);
        if ((v37 & 1) != (v40 & 1))
        {
LABEL_61:
          return sub_1DA744CD8();
        }
        unint64_t v34 = v39;
        uint64_t v10 = (void *)v38;
        uint64_t v5 = (_OWORD *)v122;
        if ((v37 & 1) == 0)
        {
LABEL_37:
          v10[(v34 >> 6) + 8] |= 1 << v34;
          sub_1DA6E3260(v111, v10[6] + 40 * v34);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v109, (_OWORD *)(v10[7] + 32 * v34));
          uint64_t v41 = v10[2];
          BOOL v30 = __OFADD__(v41, 1);
          uint64_t v42 = v41 + 1;
          if (v30) {
            goto LABEL_84;
          }
          v10[2] = v42;
LABEL_52:
          swift_bridgeObjectRelease();
          uint64_t v54 = v111;
LABEL_53:
          sub_1DA6E3418(v54);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
          uint64_t result = sub_1DA6E3418(v4);
          uint64_t v2 = v115;
          uint64_t v3 = v118;
          unint64_t v14 = v125;
          if (v125) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      uint64_t v55 = (_OWORD *)(v10[7] + 32 * v34);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
      sub_1DA6E34CC(v109, v55);
      goto LABEL_52;
    }
    (*(void (**)(void, void, void))(v120 + 768))(*(void *)(v120 + 728), *(void *)(v120 + 760), *(void *)(v120 + 696));
    sub_1DA6E3260(v4, v3);
    long long v43 = sub_1DA744978();
    os_log_type_t v44 = sub_1DA744AF8();
    BOOL v45 = os_log_type_enabled(v43, v44);
    long long v46 = *(void (**)(uint64_t, uint64_t))(v120 + 784);
    uint64_t v107 = *(void *)(v120 + 728);
    uint64_t v47 = *(void *)(v120 + 696);
    if (v45)
    {
      v103 = *(void (**)(uint64_t, uint64_t))(v120 + 784);
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      v128[0] = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v50 = sub_1DA744B78();
      *(void *)(v48 + 4) = sub_1DA6E2760(v50, v51, v128);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v118);
      _os_log_impl(&dword_1DA674000, v43, v44, "VSFederatedPunchoutEvent received invalid metadata key: %s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy();
      uint64_t v52 = v49;
      uint64_t v2 = v115;
      MEMORY[0x1E0174100](v52, -1, -1);
      uint64_t v3 = v118;
      MEMORY[0x1E0174100](v48, -1, -1);

      v103(v107, v47);
    }
    else
    {

      sub_1DA6E3418(v3);
      v46(v107, v47);
    }
    uint64_t v5 = (_OWORD *)v122;
    __swift_destroy_boxed_opaque_existential_0(v122);
    uint64_t result = sub_1DA6E3418(v4);
    uint64_t v1 = v105;
    uint64_t v11 = v112;
    id v13 = v20;
    uint64_t v10 = (void *)v127;
    unint64_t v14 = v125;
    if (v125) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v16 = v119 + 1;
    if (__OFADD__(v119, 1)) {
      goto LABEL_81;
    }
    if (v16 < v108)
    {
      unint64_t v17 = *(void *)(v104 + 8 * v16);
      if (v17) {
        goto LABEL_9;
      }
      int64_t v18 = v119 + 2;
      ++v119;
      if (v16 + 1 < v108)
      {
        unint64_t v17 = *(void *)(v104 + 8 * v18);
        if (v17) {
          goto LABEL_12;
        }
        int64_t v119 = v16 + 1;
        if (v16 + 2 < v108)
        {
          unint64_t v17 = *(void *)(v104 + 8 * (v16 + 2));
          if (v17)
          {
            v16 += 2;
            goto LABEL_9;
          }
          int64_t v18 = v16 + 3;
          int64_t v119 = v16 + 2;
          if (v16 + 3 < v108)
          {
            unint64_t v17 = *(void *)(v104 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                int64_t v16 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  break;
                }
                if (v16 >= v108)
                {
                  int64_t v119 = v108 - 1;
                  goto LABEL_23;
                }
                unint64_t v17 = *(void *)(v104 + 8 * v16);
                ++v18;
                if (v17) {
                  goto LABEL_9;
                }
              }
LABEL_85:
              __break(1u);
              return result;
            }
LABEL_12:
            int64_t v16 = v18;
LABEL_9:
            uint64_t v125 = (v17 - 1) & v17;
            unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
            int64_t v119 = v16;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v125 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v56 = *(void *)(v120 + 688);
  swift_release();
  *(unsigned char *)(v120 + 816) = 1;
  sub_1DA6E33C4();
  sub_1DA744BB8();
  if (*(void *)(v56 + 16))
  {
    unint64_t v57 = sub_1DA6E2DB8(v102);
    uint64_t v58 = (_OWORD *)v101;
    if (v59)
    {
      sub_1DA6E32BC(*(void *)(v114 + 56) + 32 * v57, v101);
      goto LABEL_66;
    }
    long long v60 = 0uLL;
  }
  else
  {
    long long v60 = 0uLL;
    uint64_t v58 = (_OWORD *)v101;
  }
  *uint64_t v58 = v60;
  v58[1] = v60;
LABEL_66:
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v102);
  if (!*(void *)(v120 + 520))
  {
    sub_1DA6E346C((uint64_t)v58);
    goto LABEL_71;
  }
  uint64_t v61 = MEMORY[0x1E4FBB1A0];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_71:
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 768);
    uint64_t v73 = *(void *)(v120 + 720);
    uint64_t v74 = *(void *)(v120 + 696);
    uint64_t v75 = sub_1DA6FCDF8();
    v72(v73, v75, v74);
    v76 = sub_1DA744978();
    os_log_type_t v77 = sub_1DA744B08();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_1DA674000, v76, v77, "Federated punchout event with no bundle ID.", v78, 2u);
      MEMORY[0x1E0174100](v78, -1, -1);
    }
    v79 = *(void (**)(uint64_t, uint64_t))(v120 + 784);
    uint64_t v80 = *(void *)(v120 + 720);
    uint64_t v81 = *(void *)(v120 + 696);

    v79(v80, v81);
    goto LABEL_74;
  }
  uint64_t v62 = *(void *)(v120 + 656);
  unint64_t v63 = *(void *)(v120 + 664);
  id v64 = objc_allocWithZone((Class)VSBundleRecord);
  swift_bridgeObjectRetain();
  v65 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  id v66 = objc_msgSend(v64, sel_initWithBundleID_, v65);

  id v67 = objc_msgSend(v66, sel_bundleVersion);
  if (v67)
  {
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_1DA744A18();
    uint64_t v70 = v69;

    *(unsigned char *)(v120 + 81_Block_object_dispose(&STACK[0x360], 8) = 2;
    sub_1DA744BB8();
    *(void *)(v120 + 456) = v61;
    *(void *)(v120 + 432) = v68;
    *(void *)(v120 + 440) = v70;
    sub_1DA6E34CC(v98, v99);
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    v128[0] = (uint64_t)v10;
    sub_1DA6E3114(v99, v100, v71);
    uint64_t v10 = (void *)v128[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418(v100);
  }
  else
  {
    v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 768);
    uint64_t v87 = *(void *)(v120 + 712);
    uint64_t v88 = *(void *)(v120 + 696);
    uint64_t v89 = sub_1DA6FCDF8();
    v86(v87, v89, v88);
    swift_bridgeObjectRetain();
    v90 = sub_1DA744978();
    os_log_type_t v91 = sub_1DA744B08();
    BOOL v92 = os_log_type_enabled(v90, v91);
    v93 = *(void (**)(uint64_t, uint64_t))(v120 + 784);
    uint64_t v94 = *(void *)(v120 + 712);
    uint64_t v95 = *(void *)(v120 + 696);
    if (v92)
    {
      uint64_t v126 = *(void *)(v120 + 712);
      v96 = (uint8_t *)swift_slowAlloc();
      v123 = v93;
      uint64_t v97 = swift_slowAlloc();
      v128[0] = v97;
      *(_DWORD *)v96 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v120 + 672) = sub_1DA6E2760(v62, v63, v128);
      sub_1DA744B38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA674000, v90, v91, "Federated punchout event for bundle %s with no version.", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v97, -1, -1);
      MEMORY[0x1E0174100](v96, -1, -1);

      v123(v126, v95);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v93(v94, v95);
    }
  }
LABEL_74:
  uint64_t v82 = *(void *)(v120 + 752);
  uint64_t v83 = *(void *)(v120 + 744);
  v84 = *(void **)(v120 + 680);
  void *v84 = 0xD000000000000012;
  v84[1] = 0x80000001DA7674D0;
  v84[2] = v10;
  v84[3] = v83;
  v84[4] = v82;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v85 = *(uint64_t (**)(void))(v120 + 8);
  return v85();
}

uint64_t sub_1DA6E2504()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA6E2534()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA6E253C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1DA6E2568())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t sub_1DA6E2588()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DA6E25BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DA6E2664;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E2664(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1DA6E2760(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1DA6E2834(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1DA6E32BC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1DA6E32BC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1DA6E2834(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DA744B48();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1DA6E29F0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1DA744C08();
  if (!v8)
  {
    sub_1DA744C18();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1DA744C78();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1DA6E29F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1DA6E2A88(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DA6E2C68(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1DA6E2C68(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DA6E2A88(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1DA6E2C00(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1DA744BE8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1DA744C18();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1DA744A58();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1DA744C78();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1DA744C18();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1DA6E2C00(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26E0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DA6E2C68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DA744C78();
  __break(1u);
  return result;
}

unint64_t sub_1DA6E2DB8(uint64_t a1)
{
  uint64_t v2 = sub_1DA744B88();

  return sub_1DA6E35A8(a1, v2);
}

uint64_t sub_1DA6E2DFC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26D8);
  uint64_t v6 = sub_1DA744C58();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1DA6E34CC((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1DA6E3260(v25, (uint64_t)&v38);
      sub_1DA6E32BC(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1DA744B88();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1DA6E34CC(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

_OWORD *sub_1DA6E3114(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1DA6E2DB8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1DA6E3670();
      goto LABEL_7;
    }
    sub_1DA6E2DFC(v13, a3 & 1);
    unint64_t v19 = sub_1DA6E2DB8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1DA6E3260(a2, (uint64_t)v21);
      return sub_1DA6E352C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1DA744CD8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  long long v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_1DA6E34CC(a1, v17);
}

uint64_t sub_1DA6E3260(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DA6E32BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DA6E3318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1DA6E33C4()
{
  unint64_t result = qword_1EA8E26B8;
  if (!qword_1EA8E26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E26B8);
  }
  return result;
}

uint64_t sub_1DA6E3418(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DA6E346C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1DA6E34CC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

_OWORD *sub_1DA6E352C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_1DA6E34CC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_1DA6E35A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1DA6E3260(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E0173200](v9, a1);
      sub_1DA6E3418((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void *sub_1DA6E3670()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA744C48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1DA6E3260(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1DA6E32BC(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = sub_1DA6E34CC(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1DA6E3858()
{
  unint64_t result = qword_1EA8E26C8;
  if (!qword_1EA8E26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E26C8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for VSFederatedPunchoutEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for VSFederatedPunchoutEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VSFederatedPunchoutEvent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VSFederatedPunchoutEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for VSFederatedPunchoutEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VSFederatedPunchoutEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VSFederatedPunchoutEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x360], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSFederatedPunchoutEvent()
{
  return &type metadata for VSFederatedPunchoutEvent;
}

uint64_t sub_1DA6E3B14()
{
  return sub_1DA744A18();
}

uint64_t VSClickEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSClickEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSClickEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSClickEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSClickEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSClickEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSClickEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSClickEvent.init(with:page:type:)(uint64_t a1, unsigned char *a2, unsigned char *a3, unsigned char *a4)
{
  *(void *)(v4 + 32_Block_object_dispose(&STACK[0x360], 8) = a1;
  uint64_t v8 = sub_1DA744998();
  *(void *)(v4 + 336) = v8;
  *(void *)(v4 + 344) = *(void *)(v8 - 8);
  *(void *)(v4 + 352) = swift_task_alloc();
  *(unsigned char *)(v4 + 411) = *a2;
  *(unsigned char *)(v4 + 412) = *a3;
  *(unsigned char *)(v4 + 413) = *a4;
  return MEMORY[0x1F4188298](sub_1DA6E3D20, 0, 0);
}

uint64_t sub_1DA6E3D20()
{
  uint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = v0[42];
  uint64_t v4 = sub_1DA744A18();
  uint64_t v6 = v5;
  unint64_t v7 = sub_1DA6F9128();
  v0[45] = *v7;
  v0[46] = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA6FCCE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  int64_t v9 = sub_1DA744978();
  os_log_type_t v10 = sub_1DA744AE8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_1DA674000, v9, v10, "VSClickEvent", v11, 2u);
    MEMORY[0x1E0174100](v11, -1, -1);
  }
  uint64_t v13 = v0[43];
  uint64_t v12 = v0[44];
  uint64_t v14 = v0[42];

  v0[47] = v6;
  v0[48] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  unint64_t v15 = (void *)swift_task_alloc();
  v0[49] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1DA6E3EBC;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E3EBC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 400) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6E3FBC, 0, 0);
}

uint64_t sub_1DA6E3FBC()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v18 = *(void *)(v0 + 384);
  uint64_t v19 = *(void *)(v0 + 368);
  uint64_t v16 = *(void *)(v0 + 360);
  uint64_t v17 = *(void *)(v0 + 376);
  uint64_t v2 = *(void **)(v0 + 328);
  *(unsigned char *)(v0 + 410) = 0;
  sub_1DA6E423C();
  sub_1DA744BB8();
  unint64_t v3 = VSClickTarget.rawValue.getter();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 192) = MEMORY[0x1E4FBB1A0];
  uint64_t v5 = v4;
  *(void *)(v0 + 16_Block_object_dispose(&STACK[0x360], 8) = v3;
  *(void *)(v0 + 176) = v6;
  sub_1DA6E34CC((_OWORD *)(v0 + 168), (_OWORD *)(v0 + 136));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 136), v0 + 16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 16);
  *(unsigned char *)(v0 + 409) = 1;
  sub_1DA744BB8();
  unint64_t v8 = VSPage.rawValue.getter();
  *(void *)(v0 + 256) = v5;
  *(void *)(v0 + 232) = v8;
  *(void *)(v0 + 240) = v9;
  sub_1DA6E34CC((_OWORD *)(v0 + 232), (_OWORD *)(v0 + 264));
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 264), v0 + 96, v10);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 96);
  *(unsigned char *)(v0 + 40_Block_object_dispose(&STACK[0x360], 8) = 2;
  sub_1DA744BB8();
  unint64_t v11 = VSPageType.rawValue.getter();
  *(void *)(v0 + 224) = v5;
  *(void *)(v0 + 200) = v11;
  *(void *)(v0 + 20_Block_object_dispose(&STACK[0x360], 8) = v12;
  sub_1DA6E34CC((_OWORD *)(v0 + 200), (_OWORD *)(v0 + 296));
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 296), v0 + 56, v13);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 56);
  void *v2 = v18;
  v2[1] = v17;
  v2[2] = v1;
  v2[3] = v16;
  v2[4] = v19;
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

unint64_t sub_1DA6E423C()
{
  unint64_t result = qword_1EA8E26F0;
  if (!qword_1EA8E26F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E26F0);
  }
  return result;
}

uint64_t sub_1DA6E4290()
{
  return sub_1DA744A18();
}

uint64_t (*VSPageEnterEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t (*VSPageEnterEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSPageEnterEvent.init(with:and:)(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  *(void *)(v3 + 224) = a1;
  uint64_t v6 = sub_1DA744998();
  *(void *)(v3 + 232) = v6;
  *(void *)(v3 + 240) = *(void *)(v6 - 8);
  *(void *)(v3 + 24_Block_object_dispose(&STACK[0x360], 8) = swift_task_alloc();
  *(unsigned char *)(v3 + 306) = *a2;
  *(unsigned char *)(v3 + 307) = *a3;
  return MEMORY[0x1F4188298](sub_1DA6E43B8, 0, 0);
}

uint64_t sub_1DA6E43B8()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v4 = sub_1DA744A18();
  uint64_t v6 = v5;
  unint64_t v7 = sub_1DA6F9128();
  v0[32] = *v7;
  v0[33] = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA6FCCE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  uint64_t v9 = sub_1DA744978();
  os_log_type_t v10 = sub_1DA744AE8();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v11 = 0;
    _os_log_impl(&dword_1DA674000, v9, v10, "VSPageEnterEvent", v11, 2u);
    MEMORY[0x1E0174100](v11, -1, -1);
  }
  uint64_t v13 = v0[30];
  uint64_t v12 = v0[31];
  uint64_t v14 = v0[29];

  v0[34] = v6;
  v0[35] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  unint64_t v15 = (void *)swift_task_alloc();
  v0[36] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1DA6E4554;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E4554(uint64_t a1)
{
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6E4CFC, 0, 0);
}

uint64_t sub_1DA6E4654()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DA6E4D08;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E46FC()
{
  return sub_1DA744A18();
}

uint64_t (*VSPageExitEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t (*VSPageExitEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSPageExitEvent.init(with:and:)(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  *(void *)(v3 + 224) = a1;
  uint64_t v6 = sub_1DA744998();
  *(void *)(v3 + 232) = v6;
  *(void *)(v3 + 240) = *(void *)(v6 - 8);
  *(void *)(v3 + 24_Block_object_dispose(&STACK[0x360], 8) = swift_task_alloc();
  *(unsigned char *)(v3 + 306) = *a2;
  *(unsigned char *)(v3 + 307) = *a3;
  return MEMORY[0x1F4188298](sub_1DA6E4824, 0, 0);
}

uint64_t sub_1DA6E4824()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v4 = sub_1DA744A18();
  uint64_t v6 = v5;
  unint64_t v7 = sub_1DA6F9128();
  v0[32] = *v7;
  v0[33] = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DA6FCCE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  uint64_t v9 = sub_1DA744978();
  os_log_type_t v10 = sub_1DA744AE8();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v11 = 0;
    _os_log_impl(&dword_1DA674000, v9, v10, "VSPageExitEvent", v11, 2u);
    MEMORY[0x1E0174100](v11, -1, -1);
  }
  uint64_t v13 = v0[30];
  uint64_t v12 = v0[31];
  uint64_t v14 = v0[29];

  v0[34] = v6;
  v0[35] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  unint64_t v15 = (void *)swift_task_alloc();
  v0[36] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1DA6E49C0;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6E49C0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6E4AC0, 0, 0);
}

uint64_t sub_1DA6E4AC0()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 280);
  uint64_t v15 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v2 = *(void **)(v0 + 224);
  *(unsigned char *)(v0 + 304) = 1;
  sub_1DA6E423C();
  sub_1DA744BB8();
  unint64_t v3 = VSPage.rawValue.getter();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 120) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = v5;
  sub_1DA6E34CC((_OWORD *)(v0 + 96), (_OWORD *)(v0 + 128));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 128), v0 + 16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 16);
  *(unsigned char *)(v0 + 305) = 2;
  sub_1DA744BB8();
  unint64_t v7 = VSPageType.rawValue.getter();
  *(void *)(v0 + 184) = v4;
  *(void *)(v0 + 160) = v7;
  *(void *)(v0 + 16_Block_object_dispose(&STACK[0x360], 8) = v8;
  sub_1DA6E34CC((_OWORD *)(v0 + 160), (_OWORD *)(v0 + 192));
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 192), v0 + 56, v9);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 56);
  void *v2 = v14;
  v2[1] = v13;
  v2[2] = v1;
  v2[3] = v12;
  v2[4] = v15;
  swift_task_dealloc();
  os_log_type_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

ValueMetadata *type metadata accessor for VSClickEvent()
{
  return &type metadata for VSClickEvent;
}

ValueMetadata *type metadata accessor for VSPageEnterEvent()
{
  return &type metadata for VSPageEnterEvent;
}

ValueMetadata *type metadata accessor for VSPageExitEvent()
{
  return &type metadata for VSPageExitEvent;
}

id sub_1DA6E4D40()
{
  return *v0;
}

id sub_1DA6E4D48()
{
  objc_msgSend(*v0, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E2720);
  swift_dynamicCast();

  id *v0 = v2;

  return v2;
}

VideoSubscriberAccount::VSAppleSubscription __swiftcall VSAppleSubscription.init(customerID:productCodes:)(Swift::String customerID, Swift::OpaquePointer productCodes)
{
  unint64_t v3 = v2;
  id v4 = objc_allocWithZone((Class)VSAppleSubscription);
  uint64_t v5 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1DA744A78();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithCustomerID_productCodes_, v5, v6);

  *unint64_t v3 = v7;
  result._subscription._productCodes = v10;
  result._subscription._customerID = v9;
  result._subscription.super.isa = v8;
  return result;
}

VideoSubscriberAccount::VSAppleSubscription __swiftcall VSAppleSubscription.init(_:)(VideoSubscriberAccount::VSAppleSubscription result)
{
  Class *v1 = result._subscription.super.isa;
  return result;
}

uint64_t VSAppleSubscription.customerID.getter()
{
  id v1 = objc_msgSend(*v0, sel_customerID);
  uint64_t v2 = sub_1DA744A18();

  return v2;
}

void sub_1DA6E4EF8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_customerID);
  uint64_t v5 = sub_1DA744A18();
  uint64_t v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

void sub_1DA6E4F64()
{
}

void VSAppleSubscription.customerID.setter()
{
  objc_msgSend(*v0, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E2720);
  swift_dynamicCast();

  id *v0 = v3;
  id v1 = v3;
  uint64_t v2 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCustomerID_, v2);
}

void (*VSAppleSubscription.customerID.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_customerID);
  uint64_t v4 = sub_1DA744A18();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  return sub_1DA6E50F8;
}

void sub_1DA6E50F8(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    VSAppleSubscription.customerID.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSAppleSubscription.customerID.setter();
  }
}

uint64_t VSAppleSubscription.productCodes.getter()
{
  id v1 = objc_msgSend(*v0, sel_productCodes);
  uint64_t v2 = sub_1DA744A88();

  return v2;
}

void sub_1DA6E51BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_productCodes);
  uint64_t v5 = sub_1DA744A88();

  *a2 = v5;
}

void sub_1DA6E5224()
{
}

void VSAppleSubscription.productCodes.setter()
{
  objc_msgSend(*v0, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E2720);
  swift_dynamicCast();

  id *v0 = v3;
  id v1 = v3;
  uint64_t v2 = (void *)sub_1DA744A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setProductCodes_, v2);
}

void (*VSAppleSubscription.productCodes.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_productCodes);
  uint64_t v4 = sub_1DA744A88();

  *a1 = v4;
  return sub_1DA6E53A8;
}

void sub_1DA6E53A8(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    VSAppleSubscription.productCodes.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSAppleSubscription.productCodes.setter();
  }
}

void VSAppleSubscription.hash(into:)()
{
  id v1 = *v0;
  sub_1DA744B28();
}

uint64_t static VSAppleSubscription.== infix(_:_:)()
{
  return sub_1DA744B18() & 1;
}

uint64_t sub_1DA6E54AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t VSAppleSubscription.hashValue.getter()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E552C()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E5570()
{
  return sub_1DA744B28();
}

uint64_t sub_1DA6E5594()
{
  return sub_1DA744D08();
}

unint64_t sub_1DA6E55D8()
{
  unint64_t result = qword_1EA8E2730;
  if (!qword_1EA8E2730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2730);
  }
  return result;
}

uint64_t sub_1DA6E562C()
{
  return sub_1DA744B18() & 1;
}

ValueMetadata *type metadata accessor for VSAppleSubscription()
{
  return &type metadata for VSAppleSubscription;
}

VideoSubscriberAccount::VSClickstreamKeys_optional __swiftcall VSClickstreamKeys.init(rawValue:)(Swift::String rawValue)
{
  return (VideoSubscriberAccount::VSClickstreamKeys_optional)sub_1DA6E6ABC(v1);
}

void *static VSClickstreamKeys.allCases.getter()
{
  return &unk_1F34ABB88;
}

uint64_t VSClickstreamKeys.rawValue.getter()
{
  uint64_t v1 = 0x644965676170;
  if (*v0 != 1) {
    uint64_t v1 = 0x6570795465676170;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6449746567726174;
  }
}

uint64_t sub_1DA6E5700(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA6E5DAC(*a1, *a2);
}

uint64_t sub_1DA6E570C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x80000001DA767830;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "page_settings_home";
      goto LABEL_9;
    case 2:
      uint64_t v7 = "page_settings_account_info";
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0x6475625F65676170;
      unint64_t v3 = 0xEF6E69616D5F7964;
      break;
    case 4:
      unint64_t v5 = 0x6475625F65676170;
      unint64_t v3 = 0xEE006F737A5F7964;
      break;
    case 5:
      uint64_t v7 = "page_buddy_single_provider";
LABEL_7:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000016;
      uint64_t v6 = "page_view_service_main";
LABEL_9:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001DA767830;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD000000000000012;
      os_log_type_t v10 = "page_settings_home";
      goto LABEL_22;
    case 2:
      unint64_t v11 = "page_settings_account_info";
      goto LABEL_18;
    case 3:
      unint64_t v8 = 0xEF6E69616D5F7964;
      if (v5 != 0x6475625F65676170) {
        goto LABEL_25;
      }
      goto LABEL_23;
    case 4:
      unint64_t v8 = 0xEE006F737A5F7964;
      if (v5 != 0x6475625F65676170) {
        goto LABEL_25;
      }
      goto LABEL_23;
    case 5:
      unint64_t v11 = "page_buddy_single_provider";
LABEL_18:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD00000000000001ALL;
      goto LABEL_19;
    case 6:
      unint64_t v9 = 0xD000000000000016;
      os_log_type_t v10 = "page_view_service_main";
LABEL_22:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == v9) {
        goto LABEL_23;
      }
      goto LABEL_25;
    default:
LABEL_19:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_23:
      if (v3 == v8) {
        char v12 = 1;
      }
      else {
LABEL_25:
      }
        char v12 = sub_1DA744CB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1DA6E595C(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000017;
  unint64_t v4 = 0x80000001DA767750;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0x69735F6B63696C63;
      unint64_t v4 = 0xED00006E695F6E67;
      break;
    case 2:
      unint64_t v3 = 0x69735F6B63696C63;
      unint64_t v4 = 0xEE0074756F5F6E67;
      break;
    case 3:
      unint64_t v5 = "click_stb_opt_out";
      goto LABEL_10;
    case 4:
      unint64_t v3 = 0xD000000000000014;
      uint64_t v6 = "click_find_more_apps";
      goto LABEL_12;
    case 5:
      unint64_t v3 = 0x6F6E5F6B63696C63;
      unint64_t v4 = 0xED0000776F6E5F74;
      break;
    case 6:
      unint64_t v3 = 0x6F635F6B63696C63;
      unint64_t v4 = 0xEE0065756E69746ELL;
      break;
    case 7:
      unint64_t v3 = 0x706F5F6B63696C63;
      unint64_t v4 = 0xEE007070615F6E65;
      break;
    case 8:
      unint64_t v5 = "click_install_app";
LABEL_10:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 9:
      unint64_t v3 = 0xD000000000000010;
      uint64_t v6 = "click_update_app";
LABEL_12:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000017;
  unint64_t v8 = 0x80000001DA767750;
  switch(a2)
  {
    case 1:
      uint64_t v9 = 0x69735F6B63696C63;
      uint64_t v10 = 0x6E695F6E67;
      goto LABEL_19;
    case 2:
      uint64_t v11 = 0x69735F6B63696C63;
      uint64_t v12 = 0x74756F5F6E67;
      goto LABEL_23;
    case 3:
      uint64_t v13 = "click_stb_opt_out";
      goto LABEL_26;
    case 4:
      unint64_t v14 = 0xD000000000000014;
      uint64_t v15 = "click_find_more_apps";
      goto LABEL_31;
    case 5:
      uint64_t v9 = 0x6F6E5F6B63696C63;
      uint64_t v10 = 0x776F6E5F74;
LABEL_19:
      unint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      if (v3 != v9) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 6:
      uint64_t v11 = 0x6F635F6B63696C63;
      uint64_t v12 = 0x65756E69746ELL;
      goto LABEL_23;
    case 7:
      uint64_t v11 = 0x706F5F6B63696C63;
      uint64_t v12 = 0x7070615F6E65;
LABEL_23:
      unint64_t v8 = v12 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      if (v3 != v11) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 8:
      uint64_t v13 = "click_install_app";
LABEL_26:
      unint64_t v8 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      unint64_t v7 = 0xD000000000000011;
      goto LABEL_27;
    case 9:
      unint64_t v14 = 0xD000000000000010;
      uint64_t v15 = "click_update_app";
LABEL_31:
      unint64_t v8 = (unint64_t)(v15 - 32) | 0x8000000000000000;
      if (v3 != v14) {
        goto LABEL_32;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v3 != v7) {
        goto LABEL_32;
      }
LABEL_28:
      if (v4 == v8) {
        char v16 = 1;
      }
      else {
LABEL_32:
      }
        char v16 = sub_1DA744CB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16 & 1;
  }
}

uint64_t sub_1DA6E5C8C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000001DA7678D0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x7079745F65676170;
    }
    else {
      unint64_t v5 = 0xD000000000000016;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEF79646475625F65;
    }
    else {
      unint64_t v6 = 0x80000001DA7678F0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000012;
  unint64_t v6 = 0x80000001DA7678D0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x7079745F65676170;
    }
    else {
      unint64_t v2 = 0xD000000000000016;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEF79646475625F65;
    }
    else {
      unint64_t v3 = 0x80000001DA7678F0;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DA744CB8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DA6E5DAC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x644965676170;
    }
    else {
      uint64_t v3 = 0x6570795465676170;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x644965676170;
      }
      else {
        uint64_t v6 = 0x6570795465676170;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x6449746567726174;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x6449746567726174)
  {
LABEL_21:
    char v8 = sub_1DA744CB8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DA6E5EC0()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E5F60()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E6018()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E60A4()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E61C0()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E6354()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E63F0()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E64A4()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSClickstreamKeys_optional sub_1DA6E65D8(Swift::String *a1)
{
  return VSClickstreamKeys.init(rawValue:)(*a1);
}

void sub_1DA6E65E4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x644965676170;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6570795465676170;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6449746567726174;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1DA6E6640(void *a1@<X8>)
{
  *a1 = &unk_1F34ABBB0;
}

VideoSubscriberAccount::VSClickTarget_optional __swiftcall VSClickTarget.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSClickTarget.allCases.getter()
{
  return &unk_1F34ABCE8;
}

unint64_t VSClickTarget.rawValue.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0x69735F6B63696C63;
      break;
    case 3:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6F6E5F6B63696C63;
      break;
    case 6:
      unint64_t result = 0x6F635F6B63696C63;
      break;
    case 7:
      unint64_t result = 0x706F5F6B63696C63;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6E6814(char *a1, char *a2)
{
  return sub_1DA6E595C(*a1, *a2);
}

uint64_t sub_1DA6E6820()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6E6868()
{
  return sub_1DA6E61C0();
}

uint64_t sub_1DA6E6870()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSClickTarget_optional sub_1DA6E68B4(Swift::String *a1)
{
  return VSClickTarget.init(rawValue:)(*a1);
}

unint64_t sub_1DA6E68C0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = VSClickTarget.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1DA6E68E8(void *a1@<X8>)
{
  *a1 = &unk_1F34ABCE8;
}

VideoSubscriberAccount::VSPage_optional __swiftcall VSPage.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSPage.allCases.getter()
{
  return &unk_1F34ABDE0;
}

unint64_t VSPage.rawValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
    case 4:
      unint64_t result = 0x6475625F65676170;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6E6A44(unsigned __int8 *a1, char *a2)
{
  return sub_1DA6E570C(*a1, *a2);
}

uint64_t sub_1DA6E6A50()
{
  return sub_1DA6E64A4();
}

uint64_t sub_1DA6E6A5C()
{
  return sub_1DA6E60A4();
}

uint64_t sub_1DA6E6A64()
{
  return sub_1DA6E64A4();
}

VideoSubscriberAccount::VSPage_optional sub_1DA6E6A6C(Swift::String *a1)
{
  return VSPage.init(rawValue:)(*a1);
}

unint64_t sub_1DA6E6A78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = VSPage.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1DA6E6AA0(void *a1@<X8>)
{
  *a1 = &unk_1F34ABDE0;
}

VideoSubscriberAccount::VSPageType_optional __swiftcall VSPageType.init(rawValue:)(Swift::String rawValue)
{
  return (VideoSubscriberAccount::VSPageType_optional)sub_1DA6E6ABC(v1);
}

uint64_t sub_1DA6E6ABC@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1DA744C98();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static VSPageType.allCases.getter()
{
  return &unk_1F34ABE70;
}

unint64_t VSPageType.rawValue.getter()
{
  unint64_t v1 = 0x7079745F65676170;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000016;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

unint64_t sub_1DA6E6B90()
{
  unint64_t result = qword_1EA8E2738;
  if (!qword_1EA8E2738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2738);
  }
  return result;
}

uint64_t sub_1DA6E6BE4()
{
  return sub_1DA6E6EC4(&qword_1EA8E2740, &qword_1EA8E2748);
}

unint64_t sub_1DA6E6C10()
{
  unint64_t result = qword_1EA8E2750;
  if (!qword_1EA8E2750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2750);
  }
  return result;
}

uint64_t sub_1DA6E6C64()
{
  return sub_1DA6E6EC4(&qword_1EA8E2758, &qword_1EA8E2760);
}

unint64_t sub_1DA6E6C90()
{
  unint64_t result = qword_1EA8E2768;
  if (!qword_1EA8E2768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2768);
  }
  return result;
}

uint64_t sub_1DA6E6CE4()
{
  return sub_1DA6E6EC4(&qword_1EA8E2770, &qword_1EA8E2778);
}

uint64_t sub_1DA6E6D0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA6E5C8C(*a1, *a2);
}

unint64_t sub_1DA6E6D1C()
{
  unint64_t result = qword_1EA8E2780;
  if (!qword_1EA8E2780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2780);
  }
  return result;
}

uint64_t sub_1DA6E6D70()
{
  return sub_1DA6E5F60();
}

uint64_t sub_1DA6E6D78()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6E6E18()
{
  return sub_1DA6E63F0();
}

VideoSubscriberAccount::VSPageType_optional sub_1DA6E6E20(Swift::String *a1)
{
  return VSPageType.init(rawValue:)(*a1);
}

void sub_1DA6E6E2C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0xEF79646475625F65;
  unint64_t v4 = 0x7079745F65676170;
  if (*v1 != 1)
  {
    unint64_t v4 = 0xD000000000000016;
    unint64_t v3 = 0x80000001DA7678F0;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x80000001DA7678D0;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_1DA6E6E9C()
{
  return sub_1DA6E6EC4(&qword_1EA8E2788, &qword_1EA8E2790);
}

uint64_t sub_1DA6E6EC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DA6E6F14(void *a1@<X8>)
{
  *a1 = &unk_1F34ABE98;
}

ValueMetadata *type metadata accessor for VSClickstreamKeys()
{
  return &type metadata for VSClickstreamKeys;
}

uint64_t getEnumTagSinglePayload for VSClickTarget(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSClickTarget(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6E7098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSClickTarget()
{
  return &type metadata for VSClickTarget;
}

uint64_t getEnumTagSinglePayload for VSPage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSPage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6E722CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSPage()
{
  return &type metadata for VSPage;
}

uint64_t getEnumTagSinglePayload for VSUserAccount.SourceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22VideoSubscriberAccount17VSClickstreamKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6E73C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSPageType()
{
  return &type metadata for VSPageType;
}

uint64_t VSUserAccount.updateURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6E7FB0((SEL *)&selRef_updateURL, MEMORY[0x1E4F276E0], MEMORY[0x1E4F276F0], a1);
}

void sub_1DA6E7434(id *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1DA6E7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E8244(a1, a2, a3, a4, &qword_1EA8E2798, (uint64_t (*)(char *))VSUserAccount.updateURL.setter);
}

uint64_t VSUserAccount.updateURL.setter(uint64_t a1)
{
  return sub_1DA6E8324(a1, &qword_1EA8E2798, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276D8], (SEL *)&selRef_setUpdateURL_);
}

void (*VSUserAccount.updateURL.modify(id **a1))(void *a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2798) - 8) + 64);
  a1[1] = (id *)malloc(v3);
  unsigned int v4 = (id *)malloc(v3);
  a1[2] = v4;
  uint64_t v5 = (id *)malloc(v3);
  a1[3] = v5;
  id v6 = objc_msgSend(*v1, sel_updateURL);
  if (v6)
  {
    BOOL v7 = v6;
    sub_1DA7448B8();

    uint64_t v8 = sub_1DA7448C8();
    (*(void (**)(id *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1DA7448C8();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  sub_1DA6EB618((uint64_t)v4, (uint64_t)v5, &qword_1EA8E2798);
  return sub_1DA6E7618;
}

void sub_1DA6E7618(void *a1, char a2)
{
}

id VSUserAccount.requiresSystemTrust.getter()
{
  return objc_msgSend(*v0, sel_requiresSystemTrust);
}

id sub_1DA6E765C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_requiresSystemTrust);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1DA6E7690(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setRequiresSystemTrust_);
}

id VSUserAccount.requiresSystemTrust.setter(char a1)
{
  return sub_1DA6E7D84(a1, (SEL *)&selRef_setRequiresSystemTrust_);
}

void (*VSUserAccount.requiresSystemTrust.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  size_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((unsigned char *)v3 + 4_Block_object_dispose(&STACK[0x360], 8) = objc_msgSend(*v1, sel_requiresSystemTrust);
  return sub_1DA6E7714;
}

void sub_1DA6E7714(uint64_t a1, uint64_t a2)
{
}

uint64_t VSUserAccount.accountProviderIdentifier.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_accountProviderIdentifier);
}

void sub_1DA6E772C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DA6E7738(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.accountProviderIdentifier.setter);
}

void VSUserAccount.accountProviderIdentifier.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*VSUserAccount.accountProviderIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_accountProviderIdentifier);
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6E77E4;
}

uint64_t sub_1DA6E77E4(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.accountProviderIdentifier.setter);
}

uint64_t VSUserAccount.identifier.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_identifier);
}

void sub_1DA6E7808(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DA6E7814(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.identifier.setter);
}

void VSUserAccount.identifier.setter(uint64_t a1, uint64_t a2)
{
}

void sub_1DA6E7838(uint64_t a1, uint64_t a2, SEL *a3)
{
  objc_msgSend(*v3, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  *id v3 = v8;
  id v6 = v8;
  if (a2)
  {
    uint64_t v7 = (void *)sub_1DA7449E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v8, *a3, v7);
}

uint64_t (*VSUserAccount.identifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_identifier);
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6E79B0;
}

uint64_t sub_1DA6E79B0(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.identifier.setter);
}

id VSUserAccount.accountType.getter@<X0>(char *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_accountType);
  if (result == (id)1)
  {
    char v4 = 1;
LABEL_5:
    *a1 = v4;
    return result;
  }
  if (!result)
  {
    char v4 = 0;
    goto LABEL_5;
  }
  sub_1DA744BD8();
  swift_bridgeObjectRelease();
  sub_1DA744CA8();
  sub_1DA744A48();
  swift_bridgeObjectRelease();
  id result = (id)sub_1DA744C28();
  __break(1u);
  return result;
}

void *sub_1DA6E7AC0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA6E90D8((void *(*)(uint64_t *__return_ptr))VSUserAccount.accountType.getter, a1);
}

id sub_1DA6E7AD8(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setAccountType_);
}

id VSUserAccount.accountType.setter(unsigned __int8 *a1)
{
  return sub_1DA6E9138(a1, (SEL *)&selRef_setAccountType_);
}

uint64_t static VSUserAccount.AccountType.fromObjcType(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  return sub_1DA6E920C(result, a2);
}

uint64_t VSUserAccount.AccountType.objcType.getter()
{
  return *v0;
}

void (*VSUserAccount.accountType.modify(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  *((void *)v3 + 5) = v1;
  VSUserAccount.accountType.getter((char *)v3 + 48);
  return sub_1DA6E7B90;
}

void sub_1DA6E7B90(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 48);
  id v3 = *(id **)(*(void *)a1 + 40);
  objc_msgSend(*v3, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();
  char v4 = (void *)v1[4];

  *id v3 = v4;
  objc_msgSend(v4, sel_setAccountType_, v2);

  free(v1);
}

id VSUserAccount.isSignedOut.getter()
{
  return objc_msgSend(*v0, sel_isSignedOut);
}

id sub_1DA6E7C84@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isSignedOut);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1DA6E7CB8(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setSignedOut_);
}

id sub_1DA6E7CC4(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  *a2 = v9;
  return objc_msgSend(v9, *a5, v7);
}

id VSUserAccount.isSignedOut.setter(char a1)
{
  return sub_1DA6E7D84(a1, (SEL *)&selRef_setSignedOut_);
}

id sub_1DA6E7D84(char a1, SEL *a2)
{
  objc_msgSend(*v2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v2 = v6;
  return objc_msgSend(v6, *a2, a1 & 1);
}

void (*VSUserAccount.isSignedOut.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((unsigned char *)v3 + 4_Block_object_dispose(&STACK[0x360], 8) = objc_msgSend(*v1, sel_isSignedOut);
  return sub_1DA6E7EA0;
}

void sub_1DA6E7EA0(uint64_t a1, uint64_t a2)
{
}

void sub_1DA6E7EAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  char v4 = *(void **)a1;
  uint64_t v5 = *(unsigned __int8 *)(*(void *)a1 + 48);
  uint64_t v6 = *(id **)(*(void *)a1 + 40);
  objc_msgSend(*v6, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();
  uint64_t v7 = (void *)v4[4];

  *uint64_t v6 = v7;
  objc_msgSend(v7, *a3, v5);

  free(v4);
}

uint64_t VSUserAccount.subscriptionBillingCycleEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6E7FB0((SEL *)&selRef_subscriptionBillingCycleEndDate, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a1);
}

uint64_t sub_1DA6E7FB0@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id v8 = [*v4 *a1];
  if (v8)
  {
    uint64_t v9 = v8;
    a2();

    uint64_t v10 = ((uint64_t (*)(void))a3)(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a4;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a3();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a4;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

void sub_1DA6E8094(id *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1DA6E80D0(id *a1@<X0>, uint64_t *a2@<X3>, SEL *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(void)@<X6>, uint64_t a6@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *a1;
  id v15 = [v14 *a3];
  if (v15)
  {
    char v16 = v15;
    a4();

    uint64_t v17 = ((uint64_t (*)(void))a5)(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = a5();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  }
  sub_1DA6EB618((uint64_t)v13, a6, a2);
}

uint64_t sub_1DA6E8224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E8244(a1, a2, a3, a4, &qword_1EA8E27A8, (uint64_t (*)(char *))VSUserAccount.subscriptionBillingCycleEndDate.setter);
}

uint64_t sub_1DA6E8244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790]();
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA6EB558(a1, (uint64_t)v10, a5);
  return a6(v10);
}

uint64_t VSUserAccount.subscriptionBillingCycleEndDate.setter(uint64_t a1)
{
  return sub_1DA6E8324(a1, &qword_1EA8E27A8, MEMORY[0x1E4F27928], MEMORY[0x1E4F278C0], (SEL *)&selRef_setSubscriptionBillingCycleEndDate_);
}

uint64_t sub_1DA6E8324(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), SEL *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790]();
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*v5, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();
  uint64_t v13 = (void *)v20[1];

  id *v5 = v13;
  sub_1DA6EB558(a1, (uint64_t)v12, a2);
  uint64_t v14 = a3(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
  id v17 = v13;
  uint64_t v18 = 0;
  if (v16 != 1)
  {
    uint64_t v18 = (void *)a4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  objc_msgSend(v17, *a5, v18);

  return sub_1DA6EB5BC(a1, a2);
}

void (*VSUserAccount.subscriptionBillingCycleEndDate.modify(id **a1))(void *a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27A8) - 8) + 64);
  a1[1] = (id *)malloc(v3);
  char v4 = (id *)malloc(v3);
  a1[2] = v4;
  uint64_t v5 = (id *)malloc(v3);
  a1[3] = v5;
  id v6 = objc_msgSend(*v1, sel_subscriptionBillingCycleEndDate);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1DA7448E8();

    uint64_t v8 = sub_1DA744908();
    (*(void (**)(id *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1DA744908();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  sub_1DA6EB618((uint64_t)v4, (uint64_t)v5, &qword_1EA8E27A8);
  return sub_1DA6E8648;
}

void sub_1DA6E8648(void *a1, char a2)
{
}

void sub_1DA6E8668(void *a1, char a2, void (*a3)(void *), uint64_t *a4)
{
  uint64_t v5 = (void *)a1[2];
  id v6 = (void *)a1[3];
  uint64_t v7 = (void *)a1[1];
  if (a2)
  {
    sub_1DA6EB558(a1[3], (uint64_t)v7, a4);
    a3(v7);
    sub_1DA6EB5BC((uint64_t)v6, a4);
  }
  else
  {
    a3((void *)a1[3]);
  }
  free(v6);
  free(v5);

  free(v7);
}

uint64_t VSUserAccount.tierIdentifiers.getter()
{
  id v1 = objc_msgSend(*v0, sel_tierIdentifiers);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DA744A88();

  return v3;
}

void sub_1DA6E8760(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_tierIdentifiers);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1DA744A88();
  }
  else
  {

    uint64_t v6 = 0;
  }
  *a2 = v6;
}

void sub_1DA6E87D8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  VSUserAccount.tierIdentifiers.setter(v0);
}

void VSUserAccount.tierIdentifiers.setter(uint64_t a1)
{
  objc_msgSend(*v1, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v1 = v5;
  id v3 = v5;
  if (a1)
  {
    id v4 = (void *)sub_1DA744A78();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v5, sel_setTierIdentifiers_, v4);
}

void (*VSUserAccount.tierIdentifiers.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_tierIdentifiers);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DA744A88();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_1DA6E8974;
}

void sub_1DA6E8974(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    VSUserAccount.tierIdentifiers.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    VSUserAccount.tierIdentifiers.setter(*a1);
  }
}

uint64_t VSUserAccount.billingIdentifier.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_billingIdentifier);
}

void sub_1DA6E89D8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DA6E89E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.billingIdentifier.setter);
}

void VSUserAccount.billingIdentifier.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*VSUserAccount.billingIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_billingIdentifier);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6E8A90;
}

uint64_t sub_1DA6E8A90(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.billingIdentifier.setter);
}

uint64_t VSUserAccount.authenticationData.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_authenticationData);
}

void sub_1DA6E8AB4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DA6E8AC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.authenticationData.setter);
}

void VSUserAccount.authenticationData.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*VSUserAccount.authenticationData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_authenticationData);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6E8B6C;
}

uint64_t sub_1DA6E8B6C(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.authenticationData.setter);
}

void VSUserAccount.appleSubscription.getter(void *a1@<X8>)
{
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_appleSubscription);

  if (!v4)
  {
    uint64_t v6 = 0;
    goto LABEL_5;
  }
  v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
  if (v5.super.isa)
  {
    VSAppleSubscription.init(_:)(v5);
    uint64_t v6 = v7;
LABEL_5:
    *a1 = v6;
    return;
  }
  __break(1u);
}

void sub_1DA6E8C10(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_appleSubscription);

  if (!v4)
  {

    uint64_t v6 = 0;
    goto LABEL_5;
  }
  v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
  if (v5.super.isa)
  {
    VSAppleSubscription.init(_:)(v5);

    uint64_t v6 = v7;
LABEL_5:
    *a2 = v6;
    return;
  }
  __break(1u);
}

void sub_1DA6E8CA8(void **a1)
{
  uint64_t v2 = *a1;
  id v1 = v2;
  VSUserAccount.appleSubscription.setter(&v2);
}

void VSUserAccount.appleSubscription.setter(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    id v3 = sub_1DA6E4D40();
  }
  else
  {
    id v3 = 0;
  }
  objc_msgSend(*v1, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v1 = v5;
  id v4 = v5;
  objc_msgSend(v4, sel_setAppleSubscription_, v3);
}

NSObject VSUserAccount.appleSubscription.modify(void *a1)
{
  a1[1] = v1;
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_appleSubscription);

  if (v4)
  {
    v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
    if (!v5.super.isa)
    {
      __break(1u);
      return v5.super;
    }
    VSAppleSubscription.init(_:)(v5);
    uint64_t v6 = v8;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  v5.super.isa = (Class)sub_1DA6E8E70;
  return v5.super;
}

void sub_1DA6E8E70(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v4 = *a1;
    id v3 = v2;
    VSUserAccount.appleSubscription.setter(&v4);
  }
  else
  {
    id v4 = *a1;
    VSUserAccount.appleSubscription.setter(&v4);
  }
}

id VSUserAccount.isFromCurrentDevice.getter()
{
  return objc_msgSend(*v0, sel_isFromCurrentDevice);
}

id sub_1DA6E8F04@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isFromCurrentDevice);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1DA6E8F38(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setFromCurrentDevice_);
}

id VSUserAccount.isFromCurrentDevice.setter(char a1)
{
  return sub_1DA6E7D84(a1, (SEL *)&selRef_setFromCurrentDevice_);
}

void (*VSUserAccount.isFromCurrentDevice.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((unsigned char *)v3 + 4_Block_object_dispose(&STACK[0x360], 8) = objc_msgSend(*v1, sel_isFromCurrentDevice);
  return sub_1DA6E8FBC;
}

void sub_1DA6E8FBC(uint64_t a1, uint64_t a2)
{
}

id VSUserAccount.deviceCategory.getter@<X0>(char *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_deviceCategory);
  if (result == (id)1)
  {
    char v4 = 1;
LABEL_5:
    *a1 = v4;
    return result;
  }
  if (!result)
  {
    char v4 = 0;
    goto LABEL_5;
  }
  sub_1DA744BD8();
  swift_bridgeObjectRelease();
  sub_1DA744CA8();
  sub_1DA744A48();
  swift_bridgeObjectRelease();
  id result = (id)sub_1DA744C28();
  __break(1u);
  return result;
}

void *sub_1DA6E90C0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DA6E90D8((void *(*)(uint64_t *__return_ptr))VSUserAccount.deviceCategory.getter, a1);
}

void *sub_1DA6E90D8@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, unsigned char *a2@<X8>)
{
  id result = a1(&v4);
  *a2 = v4;
  return result;
}

id sub_1DA6E9120(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setDeviceCategory_);
}

id sub_1DA6E912C(unsigned __int8 *a1)
{
  return sub_1DA6E9138(a1, (SEL *)&selRef_setDeviceCategory_);
}

id sub_1DA6E9138(unsigned __int8 *a1, SEL *a2)
{
  uint64_t v4 = *a1;
  objc_msgSend(*v2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v2 = v6;
  return objc_msgSend(v6, *a2, v4);
}

uint64_t static VSUserAccount.OriginatingDeviceCategory.fromObjcType(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  return sub_1DA6E920C(result, a2);
}

uint64_t sub_1DA6E920C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (!result)
  {
    char v2 = 0;
LABEL_5:
    *a2 = v2;
    return result;
  }
  if (result == 1)
  {
    char v2 = 1;
    goto LABEL_5;
  }
  sub_1DA744BD8();
  swift_bridgeObjectRelease();
  sub_1DA744CA8();
  sub_1DA744A48();
  swift_bridgeObjectRelease();
  id result = sub_1DA744C28();
  __break(1u);
  return result;
}

void sub_1DA6E92F0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t VSUserAccount.init(accountType:updateURL:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2798);
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIBYTE(v9) = *a1;
  sub_1DA6EB558(a2, (uint64_t)v7, &qword_1EA8E2798);
  VSUserAccount.init(accountType:updateURL:requiresSystemTrust:signedOut:)((unsigned __int8 *)&v9 + 7, (uint64_t)v7, 0, 0, &v10);
  uint64_t result = sub_1DA6EB5BC(a2, &qword_1EA8E2798);
  *a3 = v10;
  return result;
}

uint64_t VSUserAccount.init(accountType:updateURL:requiresSystemTrust:signedOut:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, void *a5@<X8>)
{
  int64_t v23 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2798);
  MEMORY[0x1F4188790]();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  id v12 = objc_msgSend(self, sel_mainBundle);
  id v13 = objc_msgSend(v12, sel_bundleIdentifier);

  if (v13)
  {
    sub_1DA744A18();

    sub_1DA6EB558(a2, (uint64_t)v10, &qword_1EA8E2798);
    uint64_t v14 = sub_1DA7448C8();
    uint64_t v15 = *(void *)(v14 - 8);
    int v16 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
    {
      int v16 = (void *)sub_1DA7448A8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
    id v17 = objc_allocWithZone((Class)VSUserAccount);
    uint64_t v18 = (void *)sub_1DA7449E8();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v17, sel_initWithAccountType_updateURL_sourceType_sourceIdentifier_, v11, v16, 0, v18);

    objc_msgSend(v19, sel_copy);
    sub_1DA744B58();
    swift_unknownObjectRelease();
    sub_1DA6E54AC(0, &qword_1EA8E27A0);
    swift_dynamicCast();
    uint64_t v20 = v24;

    objc_msgSend(v20, sel_setRequiresSystemTrust_, a3 & 1);
    objc_msgSend(v20, sel_copy);
    sub_1DA744B58();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    int64_t v21 = v24;

    objc_msgSend(v21, sel_setSignedOut_, a4 & 1);
    uint64_t result = sub_1DA6EB5BC(a2, &qword_1EA8E2798);
    void *v23 = v21;
  }
  else
  {
    uint64_t result = sub_1DA744C28();
    __break(1u);
  }
  return result;
}

uint64_t VSUserAccount.init(accountType:updateURL:sourceType:sourceIdentifier:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, void *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2798);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = *a3;
  sub_1DA6EB558(a2, (uint64_t)v9, &qword_1EA8E2798);
  uint64_t v12 = sub_1DA7448C8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_1DA7448A8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  id v15 = objc_allocWithZone((Class)VSUserAccount);
  int v16 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithAccountType_updateURL_sourceType_sourceIdentifier_, v10, v14, v11, v16);

  uint64_t result = sub_1DA6EB5BC(a2, &qword_1EA8E2798);
  *a4 = v17;
  return result;
}

uint64_t sub_1DA6E9898()
{
  return *v0;
}

void __swiftcall VSUserAccount.init(_:)(VideoSubscriberAccount::VSUserAccount *__return_ptr retstr, VSUserAccount *a2)
{
  retstr->_account.super.isa = (Class)a2;
}

uint64_t VSUserAccount.modifierIdentifier.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_modifierIdentifier);
}

void sub_1DA6E98B4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1DA6E98C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.modifierIdentifier.setter);
}

void VSUserAccount.modifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*VSUserAccount.modifierIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_modifierIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6E996C;
}

uint64_t sub_1DA6E996C(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.modifierIdentifier.setter);
}

id sub_1DA6E9984()
{
  id v1 = objc_msgSend(*v0, sel_modifierType);

  return v1;
}

void sub_1DA6E99BC(void *a1)
{
}

void (*sub_1DA6E99C8(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = objc_msgSend(*v1, sel_modifierType);
  return sub_1DA6E9A3C;
}

void sub_1DA6E9A3C(uint64_t a1, char a2)
{
}

id sub_1DA6E9A48()
{
  id v1 = [*v0 api];

  return v1;
}

void sub_1DA6E9A80(void *a1)
{
}

void sub_1DA6E9A8C(void *a1, const char **a2)
{
  objc_msgSend(*v2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v2 = v7;
  uint64_t v5 = *a2;
  id v6 = v7;
  objc_msgSend(v6, v5, a1);
}

void (*sub_1DA6E9B4C(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = [*v1 api];
  return sub_1DA6E9BC0;
}

void sub_1DA6E9BC0(uint64_t a1, char a2)
{
}

void sub_1DA6E9BCC(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  id v6 = *(id **)(*(void *)a1 + 48);
  id v7 = *v6;
  if (a2)
  {
    id v8 = v5;
    objc_msgSend(v7, sel_copy);
    sub_1DA744B58();
    swift_unknownObjectRelease();
    sub_1DA6E54AC(0, &qword_1EA8E27A0);
    swift_dynamicCast();
    uint64_t v9 = (void *)v4[5];

    *id v6 = v9;
    id v10 = v9;
    objc_msgSend(v10, *a3, v8);

    id v11 = (id)v4[4];
  }
  else
  {
    objc_msgSend(*v6, sel_copy);
    sub_1DA744B58();
    swift_unknownObjectRelease();
    sub_1DA6E54AC(0, &qword_1EA8E27A0);
    swift_dynamicCast();
    uint64_t v12 = (void *)v4[5];

    *id v6 = v12;
    uint64_t v13 = *a3;
    id v11 = v12;
    objc_msgSend(v11, v13, v5);
  }

  free(v4);
}

uint64_t VSUserAccount.created.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6E9FB4((SEL *)&selRef_created, a1);
}

uint64_t sub_1DA6E9D5C@<X0>(uint64_t a1@<X8>)
{
  return VSUserAccount.created.getter(a1);
}

uint64_t sub_1DA6E9D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EA1CC(a1, a2, a3, a4, (uint64_t (*)(char *))VSUserAccount.created.setter);
}

uint64_t VSUserAccount.created.setter(uint64_t a1)
{
  return sub_1DA6EA2A8(a1, (SEL *)&selRef_setCreated_);
}

void (*VSUserAccount.created.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  *id v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27A8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1DA744908();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  id v10 = malloc(v9);
  v3[4] = v10;
  id v11 = malloc(v9);
  v3[5] = v11;
  id v12 = objc_msgSend(*v1, sel_created);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1DA7448E8();

    uint64_t v14 = *(void (**)(void *, void *, uint64_t))(v8 + 32);
    v14(v5, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v6);
    uint64_t result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
    if (result != 1)
    {
      v14(v11, v5, v6);
      return sub_1DA6E9F90;
    }
  }
  else
  {
    uint64_t result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v6);
  }
  __break(1u);
  return result;
}

void sub_1DA6E9F90(uint64_t a1, char a2)
{
}

uint64_t VSUserAccount.modified.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6E9FB4((SEL *)&selRef_modified, a1);
}

uint64_t sub_1DA6E9FB4@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DA744908();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27A8);
  MEMORY[0x1F4188790]();
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [*v2 *a1];
  if (v11)
  {
    id v12 = v11;
    sub_1DA7448E8();

    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v13(v10, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2, v10, v5);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v10, 1, 1, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA6EA180@<X0>(uint64_t a1@<X8>)
{
  return VSUserAccount.modified.getter(a1);
}

uint64_t sub_1DA6EA1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EA1CC(a1, a2, a3, a4, (uint64_t (*)(char *))VSUserAccount.modified.setter);
}

uint64_t sub_1DA6EA1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  sub_1DA744908();
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a1);
  return a5(v8);
}

uint64_t VSUserAccount.modified.setter(uint64_t a1)
{
  return sub_1DA6EA2A8(a1, (SEL *)&selRef_setModified_);
}

uint64_t sub_1DA6EA2A8(uint64_t a1, SEL *a2)
{
  objc_msgSend(*v2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v2 = v9;
  id v5 = v9;
  uint64_t v6 = (void *)sub_1DA7448D8();
  objc_msgSend(v5, *a2, v6);

  uint64_t v7 = sub_1DA744908();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
}

void (*VSUserAccount.modified.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  *id v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27A8);
  id v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1DA744908();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  id v10 = malloc(v9);
  v3[4] = v10;
  uint64_t v11 = malloc(v9);
  v3[5] = v11;
  id v12 = objc_msgSend(*v1, sel_modified);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1DA7448E8();

    uint64_t v14 = *(void (**)(void *, void *, uint64_t))(v8 + 32);
    v14(v5, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v6);
    uint64_t result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
    if (result != 1)
    {
      v14(v11, v5, v6);
      return sub_1DA6EA588;
    }
  }
  else
  {
    uint64_t result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v6);
  }
  __break(1u);
  return result;
}

void sub_1DA6EA588(uint64_t a1, char a2)
{
}

void sub_1DA6EA5A0(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    size_t v9 = (void *)v4[1];
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 32), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    size_t v9 = (void *)v4[1];
    a3(*(void **)(*(void *)a1 + 40));
  }
  free(v6);
  free(v5);
  free(v9);

  free(v4);
}

id VSUserAccount.sourceType.getter@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_sourceType);
  if ((unint64_t)result > 2)
  {
    sub_1DA744BD8();
    swift_bridgeObjectRelease();
    sub_1DA744CA8();
    sub_1DA744A48();
    swift_bridgeObjectRelease();
    id result = (id)sub_1DA744C28();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

id sub_1DA6EA758@<X0>(unsigned char *a1@<X8>)
{
  id result = VSUserAccount.sourceType.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_1DA6EA79C(unsigned __int8 *a1, id *a2)
{
  uint64_t v3 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  *a2 = v5;
  return objc_msgSend(v5, sel_setSourceType_, v3);
}

id VSUserAccount.sourceType.setter(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  objc_msgSend(*v1, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v1 = v4;
  return objc_msgSend(v4, sel_setSourceType_, v2);
}

unint64_t sub_1DA6EA900@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result > 2)
  {
    sub_1DA744BD8();
    swift_bridgeObjectRelease();
    sub_1DA744CA8();
    sub_1DA744A48();
    swift_bridgeObjectRelease();
    id result = sub_1DA744C28();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void (*VSUserAccount.sourceType.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  VSUserAccount.sourceType.getter((unsigned char *)v3 + 48);
  return sub_1DA6EAA48;
}

void sub_1DA6EAA48(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 48);
  uint64_t v3 = *(id **)(*(void *)a1 + 40);
  objc_msgSend(*v3, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();
  uint64_t v4 = (void *)v1[4];

  *uint64_t v3 = v4;
  objc_msgSend(v4, sel_setSourceType_, v2);

  free(v1);
}

uint64_t VSUserAccount.sourceIdentifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_sourceIdentifier);
  uint64_t v2 = sub_1DA744A18();

  return v2;
}

void sub_1DA6EAB70(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_sourceIdentifier);
  uint64_t v5 = sub_1DA744A18();
  uint64_t v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

void sub_1DA6EABDC()
{
}

void VSUserAccount.sourceIdentifier.setter()
{
  objc_msgSend(*v0, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v0 = v3;
  id v1 = v3;
  uint64_t v2 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setSourceIdentifier_, v2);
}

void (*VSUserAccount.sourceIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_sourceIdentifier);
  uint64_t v4 = sub_1DA744A18();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  return sub_1DA6EAD70;
}

void sub_1DA6EAD70(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    VSUserAccount.sourceIdentifier.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSUserAccount.sourceIdentifier.setter();
  }
}

uint64_t VSUserAccount.deviceIdentifier.getter()
{
  return sub_1DA6EADF0((SEL *)&selRef_deviceIdentifier);
}

uint64_t sub_1DA6EADF0(SEL *a1)
{
  id v2 = [*v1 *a1];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  uint64_t v4 = sub_1DA744A18();

  return v4;
}

void sub_1DA6EAE58(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1DA6EAE64(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v5 = *a1;
  id v6 = [v5 *a2];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1DA744A18();
    uint64_t v10 = v9;
  }
  else
  {

    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  *a3 = v8;
  a3[1] = v10;
}

uint64_t sub_1DA6EAEE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6EAEFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.deviceIdentifier.setter);
}

uint64_t sub_1DA6EAEFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

void VSUserAccount.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*VSUserAccount.deviceIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_deviceIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1DA744A18();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DA6EAFD8;
}

uint64_t sub_1DA6EAFD8(uint64_t *a1, char a2)
{
  return sub_1DA6EAFF0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.deviceIdentifier.setter);
}

uint64_t sub_1DA6EAFF0(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if ((a2 & 1) == 0) {
    return a3(*a1, v4);
  }
  swift_bridgeObjectRetain();
  a3(v5, v4);

  return swift_bridgeObjectRelease();
}

id VSUserAccount.keychainItemHash.getter()
{
  return objc_msgSend(*v0, sel_keychainItemHash);
}

id sub_1DA6EB080@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_keychainItemHash);
  *a2 = result;
  return result;
}

id sub_1DA6EB0B4(uint64_t *a1, id *a2)
{
  uint64_t v3 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  *a2 = v5;
  return objc_msgSend(v5, sel_setKeychainItemHash_, v3);
}

id VSUserAccount.keychainItemHash.setter(uint64_t a1)
{
  objc_msgSend(*v1, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();

  id *v1 = v4;
  return objc_msgSend(v4, sel_setKeychainItemHash_, a1);
}

void (*VSUserAccount.keychainItemHash.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = objc_msgSend(*v1, sel_keychainItemHash);
  return sub_1DA6EB284;
}

void sub_1DA6EB284(uint64_t a1)
{
  id v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(id **)(*(void *)a1 + 48);
  objc_msgSend(*v3, sel_copy);
  sub_1DA744B58();
  swift_unknownObjectRelease();
  sub_1DA6E54AC(0, &qword_1EA8E27A0);
  swift_dynamicCast();
  uint64_t v4 = (void *)v1[5];

  *uint64_t v3 = v4;
  objc_msgSend(v4, sel_setKeychainItemHash_, v2);

  free(v1);
}

id VSUserAccount.objcUserAccount.getter()
{
  return *v0;
}

id VSUserAccount.isDeveloperCreated.getter()
{
  return objc_msgSend(*v0, sel_isDeveloperCreated);
}

id sub_1DA6EB380@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isDeveloperCreated);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1DA6EB3B4(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA6E7CC4(a1, a2, a3, a4, (SEL *)&selRef_setIsDeveloperCreated_);
}

id VSUserAccount.isDeveloperCreated.setter(char a1)
{
  return sub_1DA6E7D84(a1, (SEL *)&selRef_setIsDeveloperCreated_);
}

void (*VSUserAccount.isDeveloperCreated.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((unsigned char *)v3 + 4_Block_object_dispose(&STACK[0x360], 8) = objc_msgSend(*v1, sel_isDeveloperCreated);
  return sub_1DA6EB438;
}

void sub_1DA6EB438(uint64_t a1, uint64_t a2)
{
}

void VSUserAccount.hash(into:)()
{
  id v1 = *v0;
  sub_1DA744B28();
}

uint64_t static VSUserAccount.== infix(_:_:)()
{
  return sub_1DA744B18() & 1;
}

uint64_t VSUserAccount.hashValue.getter()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSUserAccount::AccountType_optional __swiftcall VSUserAccount.AccountType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (VideoSubscriberAccount::VSUserAccount::AccountType_optional)rawValue;
}

uint64_t VSUserAccount.AccountType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1DA6EB558(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DA6EB5BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DA6EB618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1DA6EB67C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DA6EB698()
{
  return sub_1DA744CF8();
}

void *sub_1DA6EB6C8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1DA6EB6E8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static VSUserAccount.OriginatingDeviceCategory.currentDeviceCategory()@<X0>(char *a1@<X8>)
{
  char v2 = self;
  id v3 = objc_msgSend(self, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_deviceType);

  id v5 = objc_msgSend(v2, sel_deviceCategoryFromDeviceType_, v4);

  return static VSUserAccount.OriginatingDeviceCategory.fromObjcType(_:)((uint64_t)v5, a1);
}

uint64_t sub_1DA6EB78C()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6EB7D4()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSUserAccount::SourceType_optional __swiftcall VSUserAccount.SourceType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (VideoSubscriberAccount::VSUserAccount::SourceType_optional)rawValue;
}

uint64_t VSUserAccount.SourceType.rawValue.getter()
{
  return *v0;
}

BOOL sub_1DA6EB834(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

VideoSubscriberAccount::VSUserAccount::SourceType_optional sub_1DA6EB848(Swift::Int *a1)
{
  return VSUserAccount.SourceType.init(rawValue:)(*a1);
}

uint64_t VSUserAccountManager.update(_:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1DA6EB874, 0, 0);
}

uint64_t sub_1DA6EB874()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  id v4 = v2;
  id v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_1DA6EB970;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1DA6EB970()
{
  *(void *)(*(void *)v1 + 4_Block_object_dispose(&STACK[0x360], 8) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DA6EBAF0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DA6EBA8C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DA6EBA8C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DA6EBAF0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1DA6EBB5C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27F8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790]();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  void aBlock[4] = sub_1DA6ECB3C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA6EBD14;
  aBlock[3] = &block_descriptor_36;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_updateUserAccount_completion_, a3, v11);
  _Block_release(v11);
}

void sub_1DA6EBD0C(uint64_t a1)
{
  sub_1DA6EBB5C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1DA6EBD14(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1DA6EBD80()
{
  return 0;
}

uint64_t VSUserAccountManager.userAccounts(options:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1DA6EBDA8, 0, 0);
}

uint64_t sub_1DA6EBDA8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  id v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27C0);
  *id v4 = v0;
  v4[1] = sub_1DA6EBEAC;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000016, 0x80000001DA7679E0, sub_1DA6EC29C, v3, v5);
}

uint64_t sub_1DA6EBEAC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DA6EBFE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DA6EBFC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DA6EBFC8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1DA6EBFE4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1DA6EC048(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27E8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790]();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  void aBlock[4] = sub_1DA6EC6DC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA6EC1F8;
  aBlock[3] = &block_descriptor_0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_queryUserAccountsWithOptions_completion_, a3, v11);
  _Block_release(v11);
}

uint64_t sub_1DA6EC1F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DA6E54AC(0, &qword_1EA8E27A0);
    uint64_t v4 = sub_1DA744A88();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1DA6EC29C(uint64_t a1)
{
  sub_1DA6EC048(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1DA6EC2A8()
{
  unint64_t result = qword_1EA8E27C8;
  if (!qword_1EA8E27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E27C8);
  }
  return result;
}

unint64_t sub_1DA6EC300()
{
  unint64_t result = qword_1EA8E27D0;
  if (!qword_1EA8E27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E27D0);
  }
  return result;
}

unint64_t sub_1DA6EC358()
{
  unint64_t result = qword_1EA8E27D8;
  if (!qword_1EA8E27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E27D8);
  }
  return result;
}

unint64_t sub_1DA6EC3B0()
{
  unint64_t result = qword_1EA8E27E0;
  if (!qword_1EA8E27E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E27E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount()
{
  return &type metadata for VSUserAccount;
}

unsigned char *sub_1DA6EC41C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.AccountType()
{
  return &type metadata for VSUserAccount.AccountType;
}

uint64_t _s22VideoSubscriberAccount13VSUserAccountV11AccountTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22VideoSubscriberAccount13VSUserAccountV11AccountTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6EC594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.OriginatingDeviceCategory()
{
  return &type metadata for VSUserAccount.OriginatingDeviceCategory;
}

unsigned char *storeEnumTagSinglePayload for VSUserAccount.SourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6EC698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.SourceType()
{
  return &type metadata for VSUserAccount.SourceType;
}

uint64_t sub_1DA6EC6D0()
{
  return objectdestroyTm(&qword_1EA8E27E8);
}

uint64_t sub_1DA6EC6DC(unint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27E8);
  if (!a1)
  {
    if (a2)
    {
      id v10 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27E8);
      return sub_1DA744AA8();
    }
    goto LABEL_25;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1DA744C38();
    if (v4) {
      goto LABEL_4;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27E8);
    return sub_1DA744AB8();
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v4) {
    goto LABEL_23;
  }
LABEL_4:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      unsigned int v6 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v7 = MEMORY[0x1E0173260](v5, a1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v6 = sub_1DA6EC9A0(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v9 = *((void *)v6 + 2);
        unint64_t v8 = *((void *)v6 + 3);
        if (v9 >= v8 >> 1) {
          unsigned int v6 = sub_1DA6EC9A0((char *)(v8 > 1), v9 + 1, 1, v6);
        }
        ++v5;
        *((void *)v6 + 2) = v9 + 1;
        *(void *)&v6[8 * v9 + 32] = v7;
      }
      while (v4 != v5);
    }
    else
    {
      id v12 = (id *)(a1 + 32);
      uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        id v14 = *v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1DA6EC9A0(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v16 = *((void *)v13 + 2);
        unint64_t v15 = *((void *)v13 + 3);
        if (v16 >= v15 >> 1) {
          uint64_t v13 = sub_1DA6EC9A0((char *)(v15 > 1), v16 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v16 + 1;
        *(void *)&v13[8 * v16 + 32] = v14;
        ++v12;
        --v4;
      }
      while (v4);
    }
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  uint64_t result = sub_1DA744C28();
  __break(1u);
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

char *sub_1DA6EC9A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27F0);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DA6ECAA4()
{
  return objectdestroyTm(&qword_1EA8E27F8);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1DA6ECB3C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27F8);
  if (!a1) {
    return sub_1DA744AB8();
  }
  id v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27F8);
  return sub_1DA744AA8();
}

void *sub_1DA6ECC04()
{
  return &unk_1E6BD4C10;
}

unint64_t sub_1DA6ECC10()
{
  return 0xD000000000000016;
}

void sub_1DA6ECC2C()
{
  qword_1EA8E5470 = 49;
  *(void *)algn_1EA8E5478 = 0xE100000000000000;
}

uint64_t *sub_1DA6ECC44()
{
  if (qword_1EA8E4B70 != -1) {
    swift_once();
  }
  return &qword_1EA8E5470;
}

uint64_t sub_1DA6ECC90()
{
  if (qword_1EA8E4B70 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA8E5470;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_1DA6ECCF8()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1DA6ECD00()
{
  type metadata accessor for VSMetricsManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1DA6ECE1C();
  qword_1EA8E5480 = v0;
  return result;
}

uint64_t sub_1DA6ECD3C()
{
  uint64_t v0 = swift_allocObject();
  sub_1DA6ECE1C();
  return v0;
}

uint64_t *sub_1DA6ECD74()
{
  if (qword_1EA8E4B78 != -1) {
    swift_once();
  }
  return &qword_1EA8E5480;
}

uint64_t sub_1DA6ECDC0()
{
  if (qword_1EA8E4B78 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1DA6ECE1C()
{
  if (qword_1EA8E4B70 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1DA7449E8();
  id v2 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_bagForProfile_profileVersion_, v1, v2);

  id v4 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  uint64_t v5 = (void *)sub_1DA7449E8();
  id v6 = objc_msgSend(v4, sel_initWithContainerID_bag_, v5, v3);

  *(void *)(v0 + 16) = v6;
  return v0;
}

void sub_1DA6ECF4C(void *a1)
{
  uint64_t v2 = sub_1DA744998();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  id v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v72 - v7;
  uint64_t v80 = (void *)sub_1DA6ED948(MEMORY[0x1E4FBC860]);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  os_log_type_t v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v81 = v11 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v85 = (uint64_t)v99 + 8;
  uint64_t v86 = v11;
  uint64_t v18 = v6;
  uint64_t v19 = &v104;
  uint64_t v20 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v88 = (void (**)(char *, uint64_t))(v3 + 8);
  int64_t v83 = (unint64_t)(v15 + 63) >> 6;
  int64_t v73 = v83 - 1;
  int64_t v74 = v83 - 5;
  uint64_t v75 = v11 + 104;
  uint64_t v87 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v12 = 136315138;
  long long v84 = v12;
  uint64_t v79 = v2;
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  while (1)
  {
    if (v17)
    {
      uint64_t v90 = (v17 - 1) & v17;
      unint64_t v21 = __clz(__rbit64(v17)) | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v23 >= v83)
    {
      int64_t v25 = v13;
    }
    else
    {
      unint64_t v24 = *(void *)(v81 + 8 * v23);
      if (v24) {
        goto LABEL_13;
      }
      int64_t v25 = v13 + 1;
      if (v13 + 2 < v83)
      {
        unint64_t v24 = *(void *)(v81 + 8 * (v13 + 2));
        if (v24)
        {
          int64_t v23 = v13 + 2;
          goto LABEL_13;
        }
        int64_t v25 = v13 + 2;
        if (v13 + 3 < v83)
        {
          unint64_t v24 = *(void *)(v81 + 8 * (v13 + 3));
          if (v24)
          {
            int64_t v23 = v13 + 3;
LABEL_13:
            uint64_t v90 = (v24 - 1) & v24;
            unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
            int64_t v13 = v23;
LABEL_9:
            uint64_t v22 = v86;
            sub_1DA6E3260(*(void *)(v86 + 48) + 40 * v21, (uint64_t)&v97);
            sub_1DA6E32BC(*(void *)(v22 + 56) + 32 * v21, v85);
            goto LABEL_16;
          }
          int64_t v23 = v13 + 4;
          int64_t v25 = v13 + 3;
          if (v13 + 4 < v83)
          {
            unint64_t v24 = *(void *)(v81 + 8 * v23);
            if (v24) {
              goto LABEL_13;
            }
            while (v74 != v13)
            {
              unint64_t v24 = *(void *)(v75 + 8 * v13++);
              if (v24)
              {
                int64_t v23 = v13 + 4;
                goto LABEL_13;
              }
            }
            int64_t v25 = v73;
          }
        }
      }
    }
    uint64_t v90 = 0;
    uint64_t v100 = 0;
    memset(v99, 0, sizeof(v99));
    int64_t v13 = v25;
    long long v97 = 0u;
    long long v98 = 0u;
LABEL_16:
    sub_1DA6EB618((uint64_t)&v97, (uint64_t)&v101, &qword_1EA8E26B0);
    if (!*((void *)&v102 + 1))
    {
      swift_release();
      sub_1DA6EDD18((uint64_t)v80);
      swift_bridgeObjectRelease();
      id v62 = objc_allocWithZone(MEMORY[0x1E4F4DD60]);
      unint64_t v63 = (void *)sub_1DA7449A8();
      swift_bridgeObjectRelease();
      id v64 = objc_msgSend(v62, sel_initWithUnderlyingDictionary_, v63);

      v65 = v77;
      uint64_t v66 = v77[3];
      uint64_t v67 = v77[4];
      __swift_project_boxed_opaque_existential_1(v77, v66);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v67);
      uint64_t v68 = (void *)sub_1DA7449E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v64, sel_setEventType_, v68);

      uint64_t v69 = v65[3];
      uint64_t v70 = v65[4];
      __swift_project_boxed_opaque_existential_1(v65, v69);
      (*(void (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
      char v71 = (void *)sub_1DA7449E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v64, sel_setTopic_, v71);

      objc_msgSend(v64, sel_setCheckDiagnosticsAndUsageSetting_, 1);
      (*(void (**)(id))(*(void *)v78 + 104))(v64);

      return;
    }
    int64_t v89 = v13;
    long long v97 = v101;
    long long v98 = v102;
    *(void *)&v99[0] = v103;
    sub_1DA6E34CC(v19, v96);
    sub_1DA6E3260((uint64_t)&v97, (uint64_t)&v93);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2800);
    if (swift_dynamicCast())
    {
      sub_1DA6F0C70(v91, (uint64_t)v95);
      __swift_project_boxed_opaque_existential_1(v95, v95[3]);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v93);
      sub_1DA744A68();
      if (swift_dynamicCast())
      {
        long long v46 = v91[0];
        sub_1DA6E32BC((uint64_t)v96, (uint64_t)&v93);
        uint64_t v47 = v80;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v91[0] = v47;
        uint64_t v76 = v46;
        unint64_t v50 = sub_1DA6F0CEC(v46, *((uint64_t *)&v46 + 1));
        uint64_t v51 = v47[2];
        BOOL v52 = (v49 & 1) == 0;
        uint64_t v53 = v51 + v52;
        if (__OFADD__(v51, v52)) {
          goto LABEL_49;
        }
        char v54 = v49;
        if (v47[3] >= v53)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1DA6F127C();
          }
        }
        else
        {
          sub_1DA6F0F7C(v53, isUniquelyReferenced_nonNull_native);
          unint64_t v55 = sub_1DA6F0CEC(v76, *((uint64_t *)&v46 + 1));
          if ((v46 & 1) != (v56 & 1)) {
            goto LABEL_51;
          }
          unint64_t v50 = v55;
        }
        uint64_t v80 = *(void **)&v91[0];
        if (v54)
        {
          unint64_t v57 = (_OWORD *)(*(void *)(*(void *)&v91[0] + 56) + 32 * v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
          sub_1DA6E34CC(&v93, v57);
        }
        else
        {
          *(void *)(*(void *)&v91[0] + 8 * (v50 >> 6) + 64) |= 1 << v50;
          uint64_t v58 = (void *)(v80[6] + 16 * v50);
          *uint64_t v58 = v76;
          v58[1] = *((void *)&v46 + 1);
          sub_1DA6E34CC(&v93, (_OWORD *)(v80[7] + 32 * v50));
          uint64_t v59 = v80[2];
          BOOL v60 = __OFADD__(v59, 1);
          uint64_t v61 = v59 + 1;
          if (v60) {
            goto LABEL_50;
          }
          v80[2] = v61;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
        sub_1DA6E3418((uint64_t)&v97);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
        uint64_t v2 = v79;
      }
      else
      {
        uint64_t v26 = sub_1DA6FCDF8();
        (*v20)(v8, v26, v2);
        sub_1DA6E3260((uint64_t)&v97, (uint64_t)&v93);
        long long v27 = sub_1DA744978();
        os_log_type_t v28 = sub_1DA744B08();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = swift_slowAlloc();
          unint64_t v30 = v8;
          char v31 = v19;
          unint64_t v32 = v18;
          uint64_t v33 = v2;
          uint64_t v34 = swift_slowAlloc();
          *(void *)&v91[0] = v34;
          *(_DWORD *)uint64_t v29 = v84;
          uint64_t v35 = sub_1DA744B78();
          *(void *)(v29 + 4) = sub_1DA6E2760(v35, v36, (uint64_t *)v91);
          swift_bridgeObjectRelease();
          sub_1DA6E3418((uint64_t)&v93);
          _os_log_impl(&dword_1DA674000, v27, v28, "Non-string key %s sent to VSMetricsManager.record", (uint8_t *)v29, 0xCu);
          swift_arrayDestroy();
          uint64_t v37 = v34;
          uint64_t v2 = v33;
          uint64_t v18 = v32;
          uint64_t v19 = v31;
          uint64_t v8 = v30;
          uint64_t v20 = v82;
          MEMORY[0x1E0174100](v37, -1, -1);
          MEMORY[0x1E0174100](v29, -1, -1);
        }
        else
        {

          sub_1DA6E3418((uint64_t)&v93);
        }
        (*v88)(v8, v2);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
        sub_1DA6E3418((uint64_t)&v97);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
      }
    }
    else
    {
      uint64_t v92 = 0;
      memset(v91, 0, sizeof(v91));
      sub_1DA6EB5BC((uint64_t)v91, &qword_1EA8E2808);
      uint64_t v38 = sub_1DA6FCDF8();
      (*v20)(v18, v38, v2);
      sub_1DA6E3260((uint64_t)&v97, (uint64_t)v95);
      long long v39 = sub_1DA744978();
      uint64_t v40 = v2;
      os_log_type_t v41 = sub_1DA744B08();
      if (os_log_type_enabled(v39, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        *(void *)&long long v93 = v43;
        *(_DWORD *)uint64_t v42 = v84;
        uint64_t v44 = sub_1DA744B78();
        *(void *)(v42 + 4) = sub_1DA6E2760(v44, v45, (uint64_t *)&v93);
        swift_bridgeObjectRelease();
        sub_1DA6E3418((uint64_t)v95);
        _os_log_impl(&dword_1DA674000, v39, v41, "Unexpected key sent to VSMetricsManager.record: %s", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0174100](v43, -1, -1);
        MEMORY[0x1E0174100](v42, -1, -1);

        uint64_t v2 = v79;
        (*v88)(v18, v79);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
        sub_1DA6E3418((uint64_t)&v97);
      }
      else
      {

        sub_1DA6E3418((uint64_t)v95);
        (*v88)(v18, v40);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
        sub_1DA6E3418((uint64_t)&v97);
        uint64_t v2 = v40;
      }
    }
    int64_t v13 = v89;
    unint64_t v17 = v90;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  sub_1DA744CD8();
  __break(1u);
}

unint64_t sub_1DA6ED948(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2938);
  uint64_t v2 = sub_1DA744C68();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA6EB558(v6, (uint64_t)&v15, &qword_1EA8E2940);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1DA6F0CEC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1DA6E34CC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1DA6EDAC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26D8);
  uint64_t v2 = sub_1DA744C68();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DA6EB558(v6, (uint64_t)v15, &qword_1EA8E2888);
    unint64_t result = sub_1DA6E2DB8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1DA6E34CC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DA6EDC08(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A0);
  uint64_t v2 = (void *)sub_1DA744C68();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DA6F0D64(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    long long v10 = (void *)(v2[7] + 16 * result);
    *long long v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DA6EDD18(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E26D8);
    uint64_t v2 = sub_1DA744C68();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    long long v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1DA6E32BC(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    _OWORD v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1DA6E34CC(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1DA6E34CC(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1DA6E34CC(v36, v37);
    sub_1DA6E34CC(v37, &v33);
    uint64_t result = sub_1DA744B88();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1DA6E34CC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1DA6F45D4();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1DA6EE0E0(uint64_t a1)
{
  objc_msgSend(v1[2], sel_enqueueEvent_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)VSPreferences), sel_init);
  unsigned int v3 = objc_msgSend(v2, sel_flushMetrics);

  if (v3)
  {
    uint64_t v4 = (void (*)(void))*((void *)*v1 + 15);
    v4();
  }
}

void sub_1DA6EE18C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1DA6E54AC(0, &qword_1EA8E2810);
  id v2 = (id)sub_1DA744A78();
  objc_msgSend(v1, sel_enqueueEvents_, v2);
}

void sub_1DA6EE208()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_flush);
}

uint64_t sub_1DA6EE244()
{
  return v0;
}

uint64_t sub_1DA6EE264()
{
  return swift_deallocClassInstance();
}

const char *sub_1DA6EE29C()
{
  return "VSA";
}

const char *sub_1DA6EE2B0()
{
  return "MetricsRefactor";
}

uint64_t sub_1DA6EE2C4()
{
  return 1;
}

uint64_t sub_1DA6EE2CC()
{
  return sub_1DA744CF8();
}

uint64_t sub_1DA6EE2F4()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6EE338()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6EE378(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  return sub_1DA6F1464(a1, a2, a3, a4, (uint64_t)&unk_1F34AC448, (uint64_t)&unk_1EA8E2930);
}

uint64_t sub_1DA6EE3AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v5 + 104) = a4;
  *(unsigned char *)(v5 + 105) = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 96) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1DA6EE468;
  return VSPageEnterEvent.init(with:and:)(v5 + 16, (unsigned char *)(v5 + 104), (unsigned char *)(v5 + 105));
}

uint64_t sub_1DA6EE468()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EE564, 0, 0);
}

uint64_t sub_1DA6EE564()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EE60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DA744AD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DA744AC8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1DA6EB5BC(a1, &qword_1EA8E2818);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA744A98();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DA6EE7D8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  return sub_1DA6F1464(a1, a2, a3, a4, (uint64_t)&unk_1F34AC420, (uint64_t)&unk_1EA8E2920);
}

uint64_t sub_1DA6EE80C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v5 + 104) = a4;
  *(unsigned char *)(v5 + 105) = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 96) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1DA6EE8C8;
  return VSPageExitEvent.init(with:and:)(v5 + 16, (unsigned char *)(v5 + 104), (unsigned char *)(v5 + 105));
}

uint64_t sub_1DA6EE8C8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EE9C4, 0, 0);
}

uint64_t sub_1DA6EE9C4()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EEA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_1DA744A18();
  uint64_t v10 = v9;
  uint64_t v11 = sub_1DA744A18();
  sub_1DA6F1464(v8, v10, v11, v12, a5, a6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6EEB1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 104) = a4;
  *(unsigned char *)(v6 + 105) = a5;
  *(unsigned char *)(v6 + 106) = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 96) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1DA6EEBE4;
  return VSClickEvent.init(with:page:type:)(v6 + 16, (unsigned char *)(v6 + 104), (unsigned char *)(v6 + 105), (unsigned char *)(v6 + 106));
}

uint64_t sub_1DA6EEBE4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EECE0, 0, 0);
}

uint64_t sub_1DA6EECE0()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EEE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1DA6F201C(a1, a2, a4, a5, a6, a7, a8);
}

uint64_t sub_1DA6EEE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6EEEF8;
  return VSSignInEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6EEEF8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EEFF4, 0, 0);
}

uint64_t sub_1DA6EEFF4()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EF16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6EF224;
  return VSSignOutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6EF224()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EF320, 0, 0);
}

uint64_t sub_1DA6EF320()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EF3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6EF49C;
  return VSSTBOptOutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6EF49C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EF598, 0, 0);
}

uint64_t sub_1DA6EF598()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EF690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6EF748;
  return VSUserMetadataEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6EF748()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EF844, 0, 0);
}

uint64_t sub_1DA6EF844()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EF994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6EFA4C;
  return VSProhibitedTemplateEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6EFA4C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EFB48, 0, 0);
}

uint64_t sub_1DA6EFB48()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6EFC08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_1DA744A18();
  a4(v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6EFC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2820);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E200;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x360], 8) = a2;
  swift_bridgeObjectRetain();
  sub_1DA6EDC08(inited);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1DA744AD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = a1;
  v9[5] = a2;
  swift_bridgeObjectRetain();
  sub_1DA6EE60C((uint64_t)v6, (uint64_t)&unk_1EA8E2830, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1DA6EFD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 96) = v8;
  void *v8 = v5;
  v8[1] = sub_1DA6EFE58;
  return VSNPIBrokenEvent.init(_:)(v5 + 16, a4, a5);
}

uint64_t sub_1DA6EFE58()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6EFF54, 0, 0);
}

uint64_t sub_1DA6EFF54()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6F0164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 96) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DA6F021C;
  return VSFederatedPunchoutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1DA6F021C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F0318, 0, 0);
}

uint64_t sub_1DA6F0318()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DA6F043C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  VSUserAccount.init(_:)((VideoSubscriberAccount::VSUserAccount *)&v18, (VSUserAccount *)a1);
  uint64_t v13 = v18;
  uint64_t v14 = sub_1DA744AD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  int64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = 0;
  v15[3] = 0;
  v15[4] = v13;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DA6EE60C((uint64_t)v12, (uint64_t)&unk_1EA8E2840, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1DA6F0580(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = a4;
  id v13 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 104) = v14;
  void *v14 = v8;
  v14[1] = sub_1DA6F0678;
  return VSAccountUpdateEvent.init(userAccount:source:updateType:)(v8 + 16, (void *)(v8 + 96), a5, a6, a7, a8);
}

uint64_t sub_1DA6F0678()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F0774, 0, 0);
}

uint64_t sub_1DA6F0774()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[6];
  v0[7] = v0[2];
  v0[8] = v1;
  v0[9] = v3;
  v0[10] = v2;
  v0[11] = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

VSMetricsManagerObjC __swiftcall VSMetricsManagerObjC.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (VSMetricsManagerObjC)objc_msgSend(v0, sel_init);
}

id VSMetricsManagerObjC.init()()
{
  v1.super_class = (Class)VSMetricsManagerObjC;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_1DA6F0A9C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DA6F0B78;
  return v6(a1);
}

uint64_t sub_1DA6F0B78()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  objc_super v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DA6F0C70(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  objc_super v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1DA6F0CEC(uint64_t a1, uint64_t a2)
{
  sub_1DA744CE8();
  sub_1DA744A28();
  uint64_t v4 = sub_1DA744D08();

  return sub_1DA6F0DD0(a1, a2, v4);
}

unint64_t sub_1DA6F0D64(uint64_t a1)
{
  sub_1DA6E33C4();
  uint64_t v2 = sub_1DA7449C8();
  return sub_1DA6F0EB4(a1, v2);
}

unint64_t sub_1DA6F0DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DA744CB8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        id v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DA744CB8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DA6F0EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_1DA6E0A48();
    do
    {
      if (sub_1DA7449D8()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1DA6F0F7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2938);
  uint64_t v6 = sub_1DA744C58();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1DA6E34CC(v24, v35);
      }
      else
      {
        sub_1DA6E32BC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1DA744CE8();
      sub_1DA744A28();
      uint64_t result = sub_1DA744D08();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      int64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *int64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1DA6E34CC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1DA6F127C()
{
  objc_super v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2938);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DA744C48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1DA6E32BC(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1DA6E34CC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    objc_super v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DA6F1464(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a6;
  uint64_t v47 = a4;
  uint64_t v9 = sub_1DA744998();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = a1;
  v19._object = a2;
  VSPage.init(rawValue:)(v19);
  char v20 = v49;
  if (v49 == 7)
  {
    uint64_t v21 = a1;
    uint64_t v22 = sub_1DA6FCDF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v22, v9);
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_1DA744978();
    os_log_type_t v24 = sub_1DA744B08();
    uint64_t v25 = v10;
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v46 = v9;
      uint64_t v28 = v27;
      uint64_t v49 = v27;
      *(_DWORD *)unint64_t v26 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1DA6E2760(v21, (unint64_t)a2, &v49);
      sub_1DA744B38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA674000, v23, v24, "Invalid page ID %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v28, -1, -1);
      MEMORY[0x1E0174100](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v46);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    uint64_t v31 = v46;
    BOOL v30 = v47;
    swift_bridgeObjectRetain();
    v32._countAndFlagsBits = a3;
    v32._object = v30;
    VSPageType.init(rawValue:)(v32);
    char v33 = v49;
    if (v49 == 3)
    {
      uint64_t v34 = sub_1DA6FCDF8();
      uint64_t v35 = v10;
      unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      uint64_t v37 = v15;
      v36(v15, v34, v9);
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_1DA744978();
      os_log_type_t v39 = sub_1DA744B08();
      if (os_log_type_enabled(v38, v39))
      {
        unint64_t v40 = (unint64_t)v30;
        os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v46 = v9;
        uint64_t v43 = v42;
        uint64_t v49 = v42;
        *(_DWORD *)os_log_type_t v41 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1DA6E2760(a3, v40, &v49);
        sub_1DA744B38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA674000, v38, v39, "Invalid page type %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0174100](v43, -1, -1);
        MEMORY[0x1E0174100](v41, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v46);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v9);
      }
    }
    else
    {
      uint64_t v44 = sub_1DA744AD8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v18, 1, 1, v44);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = 0;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = v20;
      *(unsigned char *)(v45 + 33) = v33;
      sub_1DA6EE60C((uint64_t)v18, v31, v45);
      return swift_release();
    }
  }
}

uint64_t sub_1DA6F1950(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a5;
  char v56 = (void *)a6;
  unint64_t v57 = a4;
  uint64_t v9 = sub_1DA744998();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v54 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v54 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = a1;
  v22._object = a2;
  VSPage.init(rawValue:)(v22);
  char v23 = v59;
  if (v59 == 7)
  {
    uint64_t v24 = a1;
    uint64_t v25 = sub_1DA6FCDF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v25, v9);
    swift_bridgeObjectRetain_n();
    unint64_t v26 = sub_1DA744978();
    os_log_type_t v27 = sub_1DA744B08();
    uint64_t v28 = v9;
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v59 = v30;
      unint64_t v57 = (void *)v28;
      *(_DWORD *)unint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1DA6E2760(v24, (unint64_t)a2, &v59);
      sub_1DA744B38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA674000, v26, v27, "Invalid page ID %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v30, -1, -1);
      MEMORY[0x1E0174100](v29, -1, -1);

      return (*(uint64_t (**)(char *, void *))(v10 + 8))(v13, v57);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    Swift::String v32 = v56;
    char v33 = v57;
    swift_bridgeObjectRetain();
    v34._countAndFlagsBits = a3;
    v34._object = v33;
    VSPageType.init(rawValue:)(v34);
    char v35 = v59;
    if (v59 == 3)
    {
      char v56 = (void *)a3;
      uint64_t v36 = sub_1DA6FCDF8();
      uint64_t v37 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v16, v36, v9);
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_1DA744978();
      os_log_type_t v39 = sub_1DA744B08();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = v10;
        os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v59 = v42;
        *(_DWORD *)os_log_type_t v41 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_1DA6E2760((uint64_t)v56, (unint64_t)v33, &v59);
        sub_1DA744B38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DA674000, v38, v39, "Invalid page type %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0174100](v42, -1, -1);
        MEMORY[0x1E0174100](v41, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v16, v37);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v37);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v43._countAndFlagsBits = v55;
      v43._object = v32;
      VSClickTarget.init(rawValue:)(v43);
      char v44 = v59;
      if (v59 == 10)
      {
        uint64_t v45 = sub_1DA6FCDF8();
        uint64_t v46 = v9;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v18, v45, v9);
        swift_bridgeObjectRetain_n();
        uint64_t v47 = sub_1DA744978();
        os_log_type_t v48 = sub_1DA744B08();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v50 = swift_slowAlloc();
          unint64_t v57 = (void *)v46;
          uint64_t v51 = v50;
          uint64_t v59 = v50;
          *(_DWORD *)uint64_t v49 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v58 = sub_1DA6E2760(v55, (unint64_t)v32, &v59);
          sub_1DA744B38();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1DA674000, v47, v48, "Invalid click target %s", v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E0174100](v51, -1, -1);
          MEMORY[0x1E0174100](v49, -1, -1);

          return (*(uint64_t (**)(char *, void *))(v10 + 8))(v18, v57);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v46);
        }
      }
      else
      {
        uint64_t v52 = sub_1DA744AD8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v21, 1, 1, v52);
        uint64_t v53 = swift_allocObject();
        *(void *)(v53 + 16) = 0;
        *(void *)(v53 + 24) = 0;
        *(unsigned char *)(v53 + 32) = v44;
        *(unsigned char *)(v53 + 33) = v23;
        *(unsigned char *)(v53 + 34) = v35;
        sub_1DA6EE60C((uint64_t)v21, (uint64_t)&unk_1EA8E2910, v53);
        return swift_release();
      }
    }
  }
}

uint64_t sub_1DA6F201C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v37 = a4;
  uint64_t v35 = a3;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v36 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E210;
  v42[0] = 3;
  sub_1DA6E3858();
  sub_1DA744BB8();
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  v42[0] = 2;
  sub_1DA6F3FF4();
  swift_bridgeObjectRetain();
  sub_1DA744BB8();
  *(void *)(inited + 16_Block_object_dispose(&STACK[0x360], 8) = v15;
  *(void *)(inited + 144) = a5;
  *(void *)(inited + 152) = a6;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1DA6EDAC4(inited);
  if (a7)
  {
    LOBYTE(v40) = 0;
    sub_1DA744BB8();
    id v17 = objc_msgSend(a7, sel_domain);
    uint64_t v18 = sub_1DA744A18();
    uint64_t v20 = v19;

    uint64_t v41 = v15;
    *(void *)&long long v40 = v18;
    *((void *)&v40 + 1) = v20;
    sub_1DA6E34CC(&v40, v39);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v16;
    sub_1DA6E3114(v39, (uint64_t)v42, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = v38;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v42);
    LOBYTE(v40) = 1;
    sub_1DA744BB8();
    id v23 = objc_msgSend(a7, sel_code);
    uint64_t v41 = MEMORY[0x1E4FBB550];
    *(void *)&long long v40 = v23;
    sub_1DA6E34CC(&v40, v39);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v22;
    sub_1DA6E3114(v39, (uint64_t)v42, v24);
    unint64_t v25 = v38;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v42);
    LOBYTE(v40) = 2;
    sub_1DA744BB8();
    id v26 = objc_msgSend(a7, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2878);
    uint64_t v27 = sub_1DA744A88();

    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2880);
    *(void *)&long long v40 = v27;
    sub_1DA6E34CC(&v40, v39);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v25;
    sub_1DA6E3114(v39, (uint64_t)v42, v28);
    unint64_t v16 = v38;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v42);
  }
  uint64_t v29 = v37;
  if (v37)
  {
    LOBYTE(v40) = 1;
    sub_1DA744BB8();
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v40 = v35;
    *((void *)&v40 + 1) = v29;
    sub_1DA6E34CC(&v40, v39);
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v16;
    sub_1DA6E3114(v39, (uint64_t)v42, v30);
    unint64_t v16 = v38;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v42);
  }
  uint64_t v31 = sub_1DA744AD8();
  uint64_t v32 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v36, 1, 1, v31);
  char v33 = (void *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v16;
  sub_1DA6EE60C(v32, (uint64_t)&unk_1EA8E2900, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_1DA6F2444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E200;
  v12[7] = 3;
  sub_1DA6E3858();
  sub_1DA744BB8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA6EDAC4(inited);
  uint64_t v9 = sub_1DA744AD8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  sub_1DA6EE60C((uint64_t)v6, (uint64_t)&unk_1EA8E28F0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1DA6F25B8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = sub_1DA6EDAC4(MEMORY[0x1E4FBC860]);
  if (a1)
  {
    LOBYTE(v23) = 0;
    sub_1DA6E3858();
    sub_1DA744BB8();
    id v6 = objc_msgSend(a1, sel_domain);
    uint64_t v7 = sub_1DA744A18();
    uint64_t v9 = v8;

    uint64_t v24 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v23 = v7;
    *((void *)&v23 + 1) = v9;
    sub_1DA6E34CC(&v23, v22);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = v5;
    sub_1DA6E3114(v22, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
    unint64_t v11 = v21;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v25);
    LOBYTE(v23) = 1;
    sub_1DA744BB8();
    id v12 = objc_msgSend(a1, sel_code);
    uint64_t v24 = MEMORY[0x1E4FBB550];
    *(void *)&long long v23 = v12;
    sub_1DA6E34CC(&v23, v22);
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = v11;
    sub_1DA6E3114(v22, (uint64_t)v25, v13);
    unint64_t v14 = v21;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v25);
    LOBYTE(v23) = 2;
    sub_1DA744BB8();
    id v15 = objc_msgSend(a1, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2878);
    uint64_t v16 = sub_1DA744A88();

    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2880);
    *(void *)&long long v23 = v16;
    sub_1DA6E34CC(&v23, v22);
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = v14;
    sub_1DA6E3114(v22, (uint64_t)v25, v17);
    unint64_t v5 = v21;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v25);
  }
  uint64_t v18 = sub_1DA744AD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v5;
  sub_1DA6EE60C((uint64_t)v4, (uint64_t)&unk_1EA8E28E0, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1DA6F28A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v36 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E210;
  v41[0] = 3;
  v35[1] = sub_1DA6E3858();
  sub_1DA744BB8();
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  v41[0] = 1;
  sub_1DA6F3FF4();
  swift_bridgeObjectRetain();
  sub_1DA744BB8();
  *(void *)(inited + 16_Block_object_dispose(&STACK[0x360], 8) = v15;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1DA6EDAC4(inited);
  if (a5)
  {
    LOBYTE(v39) = 2;
    sub_1DA744BB8();
    uint64_t v40 = v15;
    *(void *)&long long v39 = 7368801;
    *((void *)&v39 + 1) = 0xE300000000000000;
    sub_1DA6E34CC(&v39, v38);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = v16;
    sub_1DA6E3114(v38, (uint64_t)v41, isUniquelyReferenced_nonNull_native);
    unint64_t v16 = v37;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v41);
  }
  uint64_t v18 = (uint64_t)v13;
  uint64_t v19 = v36;
  if (v36)
  {
    LOBYTE(v39) = 0;
    sub_1DA744BB8();
    id v20 = objc_msgSend(v19, sel_domain);
    uint64_t v21 = sub_1DA744A18();
    uint64_t v23 = v22;

    uint64_t v40 = v15;
    *(void *)&long long v39 = v21;
    *((void *)&v39 + 1) = v23;
    sub_1DA6E34CC(&v39, v38);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = v16;
    sub_1DA6E3114(v38, (uint64_t)v41, v24);
    unint64_t v25 = v37;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v41);
    LOBYTE(v39) = 1;
    sub_1DA744BB8();
    id v26 = objc_msgSend(v19, sel_code);
    uint64_t v40 = MEMORY[0x1E4FBB550];
    *(void *)&long long v39 = v26;
    sub_1DA6E34CC(&v39, v38);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = v25;
    sub_1DA6E3114(v38, (uint64_t)v41, v27);
    unint64_t v28 = v37;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v41);
    LOBYTE(v39) = 2;
    sub_1DA744BB8();
    id v29 = objc_msgSend(v19, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2878);
    uint64_t v30 = sub_1DA744A88();

    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2880);
    *(void *)&long long v39 = v30;
    sub_1DA6E34CC(&v39, v38);
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = v28;
    sub_1DA6E3114(v38, (uint64_t)v41, v31);
    unint64_t v16 = v37;
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)v41);
  }
  uint64_t v32 = sub_1DA744AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v18, 1, 1, v32);
  char v33 = (void *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v16;
  sub_1DA6EE60C(v18, (uint64_t)&unk_1EA8E28D0, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_1DA6F2CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E200;
  v12[7] = 1;
  sub_1DA6F3FF4();
  sub_1DA744BB8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DA6EDAC4(inited);
  uint64_t v9 = sub_1DA744AD8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  sub_1DA6EE60C((uint64_t)v6, (uint64_t)&unk_1EA8E28C0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1DA6F2E38()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1DA6F45E0;
  return sub_1DA6EFD98((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_1DA6F2ED0(void *a1, uint64_t a2)
{
  uint64_t v78 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2818);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v79 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DA744998();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_1DA6EDAC4(MEMORY[0x1E4FBC860]);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a2 + 64);
  uint64_t v87 = v94;
  uint64_t v88 = &v97;
  uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  long long v84 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v86 = (unint64_t)(v11 + 63) >> 6;
  int64_t v77 = v86 - 1;
  swift_bridgeObjectRetain();
  int64_t v89 = 0;
  *(void *)&long long v14 = 136315138;
  long long v81 = v14;
  uint64_t v80 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v83 = a2;
  uint64_t v82 = a2 + 64;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v89 << 6);
LABEL_9:
      uint64_t v18 = *(void *)(a2 + 56);
      uint64_t v19 = (void *)(*(void *)(a2 + 48) + 16 * v17);
      uint64_t v20 = v19[1];
      *(void *)&long long v93 = *v19;
      *((void *)&v93 + 1) = v20;
      sub_1DA6E32BC(v18 + 32 * v17, (uint64_t)v87);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v21 = v89 + 1;
    if (__OFADD__(v89, 1)) {
      goto LABEL_58;
    }
    if (v21 < v86)
    {
      unint64_t v22 = *(void *)(v10 + 8 * v21);
      if (v22) {
        goto LABEL_13;
      }
      int64_t v23 = v89 + 2;
      ++v89;
      if (v21 + 1 < v86)
      {
        unint64_t v22 = *(void *)(v10 + 8 * v23);
        if (v22) {
          goto LABEL_16;
        }
        int64_t v89 = v21 + 1;
        if (v21 + 2 < v86)
        {
          unint64_t v22 = *(void *)(v10 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
LABEL_13:
            unint64_t v13 = (v22 - 1) & v22;
            unint64_t v17 = __clz(__rbit64(v22)) + (v21 << 6);
            int64_t v89 = v21;
            goto LABEL_9;
          }
          int64_t v23 = v21 + 3;
          int64_t v89 = v21 + 2;
          if (v21 + 3 < v86)
          {
            unint64_t v22 = *(void *)(v10 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                int64_t v21 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_62;
                }
                if (v21 >= v86)
                {
                  int64_t v89 = v77;
                  goto LABEL_27;
                }
                unint64_t v22 = *(void *)(v10 + 8 * v21);
                ++v23;
                if (v22) {
                  goto LABEL_13;
                }
              }
            }
LABEL_16:
            int64_t v21 = v23;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    unint64_t v13 = 0;
    memset(v94, 0, sizeof(v94));
    long long v93 = 0u;
LABEL_28:
    sub_1DA6EB618((uint64_t)&v93, (uint64_t)&v95, &qword_1EA8E2860);
    char v24 = v96;
    if (!v96) {
      break;
    }
    uint64_t v25 = v95;
    sub_1DA6E34CC(v88, v92);
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v25;
    v26._object = v24;
    VSAnalyticsCommonKeys.init(rawValue:)(v26);
    char v27 = v93;
    if (v93 != 6)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v91[0]) = v27;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v92, (uint64_t)v91);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v90 = v9;
      unint64_t v41 = sub_1DA6E2DB8((uint64_t)&v93);
      uint64_t v42 = v9[2];
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        uint64_t result = sub_1DA744CD8();
        __break(1u);
        return result;
      }
      char v45 = v40;
      if (v9[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DA6E3670();
        }
      }
      else
      {
        sub_1DA6E2DFC(v44, isUniquelyReferenced_nonNull_native);
        unint64_t v46 = sub_1DA6E2DB8((uint64_t)&v93);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_63;
        }
        unint64_t v41 = v46;
      }
      uint64_t v9 = v90;
      if ((v45 & 1) == 0)
      {
        v90[(v41 >> 6) + 8] |= 1 << v41;
        sub_1DA6E3260((uint64_t)&v93, v9[6] + 40 * v41);
        sub_1DA6E34CC(v91, (_OWORD *)(v9[7] + 32 * v41));
        uint64_t v56 = v9[2];
        BOOL v57 = __OFADD__(v56, 1);
        uint64_t v58 = v56 + 1;
        if (v57) {
          goto LABEL_60;
        }
        goto LABEL_53;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = v25;
    v28._object = v24;
    VSFederatedPlaybackKeys.init(rawValue:)(v28);
    char v29 = v93;
    if (v93 != 8)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v91[0]) = v29;
      sub_1DA6E33C4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v92, (uint64_t)v91);
      char v48 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v90 = v9;
      unint64_t v41 = sub_1DA6E2DB8((uint64_t)&v93);
      uint64_t v50 = v9[2];
      BOOL v51 = (v49 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_59;
      }
      char v53 = v49;
      if (v9[3] >= v52)
      {
        if ((v48 & 1) == 0) {
          sub_1DA6E3670();
        }
      }
      else
      {
        sub_1DA6E2DFC(v52, v48);
        unint64_t v54 = sub_1DA6E2DB8((uint64_t)&v93);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_63;
        }
        unint64_t v41 = v54;
      }
      uint64_t v9 = v90;
      if ((v53 & 1) == 0)
      {
        v90[(v41 >> 6) + 8] |= 1 << v41;
        sub_1DA6E3260((uint64_t)&v93, v9[6] + 40 * v41);
        sub_1DA6E34CC(v91, (_OWORD *)(v9[7] + 32 * v41));
        uint64_t v59 = v9[2];
        BOOL v57 = __OFADD__(v59, 1);
        uint64_t v58 = v59 + 1;
        if (v57) {
          goto LABEL_61;
        }
LABEL_53:
        v9[2] = v58;
LABEL_5:
        swift_bridgeObjectRelease();
        sub_1DA6E3418((uint64_t)&v93);
        goto LABEL_6;
      }
LABEL_4:
      uint64_t v15 = (_OWORD *)(v9[7] + 32 * v41);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      sub_1DA6E34CC(v91, v15);
      goto LABEL_5;
    }
    uint64_t v30 = sub_1DA6FCCE0();
    (*v85)(v8, v30, v5);
    swift_bridgeObjectRetain();
    char v31 = sub_1DA744978();
    os_log_type_t v32 = sub_1DA744B08();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      Swift::String v34 = v8;
      uint64_t v35 = v5;
      uint64_t v36 = swift_slowAlloc();
      *(void *)&long long v93 = v36;
      *(_DWORD *)uint64_t v33 = v81;
      swift_bridgeObjectRetain();
      *(void *)(v33 + 4) = sub_1DA6E2760(v25, (unint64_t)v24, (uint64_t *)&v93);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA674000, v31, v32, "Unrecognized key: %s", (uint8_t *)v33, 0xCu);
      swift_arrayDestroy();
      uint64_t v37 = v36;
      uint64_t v5 = v35;
      uint64_t v8 = v34;
      a2 = v83;
      MEMORY[0x1E0174100](v37, -1, -1);
      uint64_t v38 = v33;
      uint64_t v10 = v82;
      MEMORY[0x1E0174100](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*v84)(v8, v5);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
  }
  swift_release();
  BOOL v60 = v78;
  if (v78)
  {
    LOBYTE(v93) = 0;
    sub_1DA6E3858();
    sub_1DA744BB8();
    id v61 = objc_msgSend(v60, sel_domain);
    uint64_t v62 = sub_1DA744A18();
    uint64_t v64 = v63;

    *((void *)&v94[0] + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v93 = v62;
    *((void *)&v93 + 1) = v64;
    sub_1DA6E34CC(&v93, v92);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v91[0] = v9;
    sub_1DA6E3114(v92, (uint64_t)&v95, v65);
    uint64_t v66 = *(void *)&v91[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)&v95);
    LOBYTE(v93) = 1;
    sub_1DA744BB8();
    id v67 = objc_msgSend(v60, sel_code);
    *((void *)&v94[0] + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v93 = v67;
    sub_1DA6E34CC(&v93, v92);
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v91[0] = v66;
    sub_1DA6E3114(v92, (uint64_t)&v95, v68);
    uint64_t v69 = *(void *)&v91[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)&v95);
    LOBYTE(v93) = 2;
    sub_1DA744BB8();
    id v70 = objc_msgSend(v60, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2878);
    uint64_t v71 = sub_1DA744A88();

    *((void *)&v94[0] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2880);
    *(void *)&long long v93 = v71;
    sub_1DA6E34CC(&v93, v92);
    char v72 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v91[0] = v69;
    sub_1DA6E3114(v92, (uint64_t)&v95, v72);
    uint64_t v9 = *(void **)&v91[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418((uint64_t)&v95);
  }
  uint64_t v73 = sub_1DA744AD8();
  uint64_t v74 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v79, 1, 1, v73);
  uint64_t v75 = (void *)swift_allocObject();
  v75[2] = 0;
  v75[3] = 0;
  v75[4] = v9;
  sub_1DA6EE60C(v74, (uint64_t)&unk_1EA8E2870, (uint64_t)v75);
  return swift_release();
}

uint64_t sub_1DA6F38EC()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1DA6F45E0;
  return sub_1DA6F0580((uint64_t)v7, v8, v9, v2, v3, v4, v5, v6);
}

unint64_t sub_1DA6F39AC()
{
  unint64_t result = qword_1EA8E2848;
  if (!qword_1EA8E2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2848);
  }
  return result;
}

uint64_t type metadata accessor for VSMetricsManager()
{
  return self;
}

uint64_t getEnumTagSinglePayload for VSAFeatures(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for VSAFeatures(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DA6F3B14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6F3B3C()
{
  return 0;
}

ValueMetadata *type metadata accessor for VSAFeatures()
{
  return &type metadata for VSAFeatures;
}

uint64_t type metadata accessor for VSMetricsManagerObjC(uint64_t a1)
{
  return sub_1DA6E54AC(a1, qword_1EA8E4D00);
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1DA6F3BBC()
{
  int v2 = (void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1DA6F3C78;
  return sub_1DA6F0580((uint64_t)v7, v8, v9, v2, v3, v4, v5, v6);
}

uint64_t sub_1DA6F3C78()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DA6F3D6C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA6F3D7C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1DA6F3DB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1DA7449A8();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DA6F3E70()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6F0164((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1DA6F3F04()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DA6F3F3C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1DA6F3C78;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA8E2890 + dword_1EA8E2890);
  return v6(a1, v4);
}

unint64_t sub_1DA6F3FF4()
{
  unint64_t result = qword_1EA8E28B0;
  if (!qword_1EA8E28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA8E28B0);
  }
  return result;
}

uint64_t sub_1DA6F404C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6EF994((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1DA6F40E4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6EF690((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1DA6F417C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6EF3E4((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1DA6F4214()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6EF16C((uint64_t)v3, v4, v5, v2);
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DA6F42EC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DA6F45E0;
  return sub_1DA6EEE40((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1DA6F4380()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 35, 7);
}

uint64_t sub_1DA6F43B8()
{
  char v2 = v0[34];
  char v3 = v0[33];
  char v4 = v0[32];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1DA6F45E0;
  return sub_1DA6EEB1C((uint64_t)v5, v6, v7, v4, v3, v2);
}

uint64_t sub_1DA6F4464()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1DA6F449C()
{
  char v2 = *(unsigned char *)(v0 + 33);
  char v3 = *(unsigned char *)(v0 + 32);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *char v4 = v1;
  v4[1] = sub_1DA6F45E0;
  return sub_1DA6EE80C((uint64_t)v4, v5, v6, v3, v2);
}

uint64_t sub_1DA6F4538()
{
  char v2 = *(unsigned char *)(v0 + 33);
  char v3 = *(unsigned char *)(v0 + 32);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *char v4 = v1;
  v4[1] = sub_1DA6F45E0;
  return sub_1DA6EE3AC((uint64_t)v4, v5, v6, v3, v2);
}

uint64_t sub_1DA6F45D4()
{
  return swift_release();
}

uint64_t sub_1DA6F45E4()
{
  return 0x6E695F6E676973;
}

uint64_t VSSignInEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignInEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSignInEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSignInEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignInEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignInEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSignInEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignInEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F47D8, 0, 0);
}

uint64_t sub_1DA6F47D8()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  char v4 = sub_1DA6F9128();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[68] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v0[70] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  uint64_t v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSSignInEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[65];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[63];

  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[71] = v13;
  v0[72] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  long long v14 = (void *)swift_task_alloc();
  v0[73] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6F4974;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6F4974(uint64_t a1)
{
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F4A74, 0, 0);
}

void sub_1DA6F4A74()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  int64_t v65 = 0;
  uint64_t v66 = v0 + 200;
  uint64_t v61 = v0 + 280;
  uint64_t v62 = v0 + 240;
  uint64_t v64 = (_OWORD *)(v0 + 352);
  uint64_t v3 = (_OWORD *)(v0 + 384);
  BOOL v60 = (_OWORD *)(v0 + 448);
  char v4 = (unsigned char *)(v0 + 601);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v56 = v5 + 64;
  uint64_t v63 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v63 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v59 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = *(void **)(v0 + 592);
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v65 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v63 + 48) + 40 * v12, v2);
  sub_1DA6E32BC(*(void *)(v63 + 56) + 32 * v12, v0 + 128);
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v0 + 40)) {
      break;
    }
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
    *(_OWORD *)(v0 + 176) = v16;
    *(void *)(v0 + 192) = *(void *)(v1 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 56), v3);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 602) = *v4;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v67 = v10;
      unint64_t v19 = sub_1DA6E2DB8(v66);
      uint64_t v20 = v10[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      char v23 = v18;
      if (v10[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v18 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v23 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v67;
        unint64_t v24 = sub_1DA6E2DB8(v66);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_61;
        }
        unint64_t v19 = v24;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v23 & 1) == 0)
        {
LABEL_30:
          v10[(v19 >> 6) + 8] |= 1 << v19;
          sub_1DA6E3260(v66, v10[6] + 40 * v19);
          sub_1DA6E34CC(v64, (_OWORD *)(v10[7] + 32 * v19));
          uint64_t v26 = v10[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_67;
          }
          v10[2] = v28;
          goto LABEL_44;
        }
      }
      char v49 = (_OWORD *)(v10[7] + 32 * v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1DA6E34CC(v64, v49);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v50 = v0 + 200;
      goto LABEL_52;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 600) = *(unsigned char *)(v0 + 603);
      sub_1DA6F3FF4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v60);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      id v67 = v10;
      unint64_t v31 = sub_1DA6E2DB8(v62);
      uint64_t v32 = v10[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_66;
      }
      char v35 = v30;
      if (v10[3] >= v34)
      {
        if (v29)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v35 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v34, v29);
        uint64_t v10 = v67;
        unint64_t v36 = sub_1DA6E2DB8(v62);
        if ((v35 & 1) != (v37 & 1))
        {
LABEL_61:
          sub_1DA744CD8();
          return;
        }
        unint64_t v31 = v36;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v10[(v31 >> 6) + 8] |= 1 << v31;
          sub_1DA6E3260(v62, v10[6] + 40 * v31);
          sub_1DA6E34CC(v60, (_OWORD *)(v10[7] + 32 * v31));
          uint64_t v38 = v10[2];
          BOOL v27 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v27) {
            goto LABEL_68;
          }
          v10[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          uint64_t v50 = v0 + 240;
LABEL_52:
          sub_1DA6E3418(v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
          sub_1DA6E3418(v0 + 160);
          char v4 = (unsigned char *)(v0 + 601);
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      BOOL v51 = (_OWORD *)(v10[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      sub_1DA6E34CC(v60, v51);
      goto LABEL_51;
    }
    (*(void (**)(void, void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 544), *(void *)(v0 + 496));
    sub_1DA6E3260(v0 + 160, v61);
    char v40 = sub_1DA744978();
    os_log_type_t v41 = sub_1DA744AF8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v57 = *(void *)(v0 + 512);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v43 = *(void *)(v0 + 496);
    if (v42)
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      id v67 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1DA744B78();
      *(void *)(v44 + 4) = sub_1DA6E2760(v46, v47, (uint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v61);
      _os_log_impl(&dword_1DA674000, v40, v41, "VSSignInEvent received invalid metadata key: %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v45, -1, -1);
      uint64_t v48 = v44;
      uint64_t v1 = v0 + 16;
      MEMORY[0x1E0174100](v48, -1, -1);
    }
    else
    {

      sub_1DA6E3418(v61);
    }
    v58(v57, v43);
    uint64_t v3 = (_OWORD *)(v0 + 384);
    __swift_destroy_boxed_opaque_existential_0(v0 + 384);
    sub_1DA6E3418(v0 + 160);
    uint64_t v2 = v0 + 88;
    char v4 = (unsigned char *)(v0 + 601);
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      goto LABEL_65;
    }
    if (v13 < v59)
    {
      unint64_t v14 = *(void *)(v56 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v65 + 2;
      ++v65;
      if (v13 + 1 < v59)
      {
        unint64_t v14 = *(void *)(v56 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v65 = v13 + 1;
        if (v13 + 2 < v59)
        {
          unint64_t v14 = *(void *)(v56 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v65 = v13 + 2;
          if (v13 + 3 < v59)
          {
            unint64_t v14 = *(void *)(v56 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v59)
                {
                  int64_t v65 = v59 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v56 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_69:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v9 = (v14 - 1) & v14;
            unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v65 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v52 = *(void *)(v0 + 536);
  uint64_t v53 = *(void *)(v0 + 528);
  unint64_t v54 = *(void **)(v0 + 480);
  swift_release();
  *unint64_t v54 = 0x6E695F6E676973;
  v54[1] = 0xE700000000000000;
  v54[2] = v10;
  v54[3] = v53;
  v54[4] = v52;
  swift_task_dealloc();
  swift_task_dealloc();
  char v55 = *(void (**)(void))(v0 + 8);
  v55();
}

ValueMetadata *type metadata accessor for VSSignInEvent()
{
  return &type metadata for VSSignInEvent;
}

unint64_t sub_1DA6F5288()
{
  return 0xD000000000000012;
}

uint64_t VSNPIBrokenEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSNPIBrokenEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSNPIBrokenEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSNPIBrokenEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSNPIBrokenEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSNPIBrokenEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSNPIBrokenEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSNPIBrokenEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F5480, 0, 0);
}

uint64_t sub_1DA6F5480()
{
  uint64_t v1 = sub_1DA6F9128();
  v0[66] = *v1;
  v0[67] = v1[1];
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[68] = v2;
  void *v2 = v0;
  v2[1] = sub_1DA6F5540;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6F5540(uint64_t a1)
{
  *(void *)(*(void *)v1 + 552) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F5640, 0, 0);
}

uint64_t sub_1DA6F5640()
{
  uint64_t v81 = v0;
  uint64_t v79 = v0 + 200;
  uint64_t v73 = v0 + 240;
  uint64_t v1 = v0 + 280;
  uint64_t v76 = (_OWORD *)(v0 + 352);
  uint64_t v2 = (_OWORD *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 504);
  uint64_t v71 = (_OWORD *)(v0 + 448);
  uint64_t v69 = sub_1DA6FCCE0();
  uint64_t v68 = *(void (**)(uint64_t))(v4 + 16);
  v68(v3);
  uint64_t v5 = sub_1DA744978();
  os_log_type_t v6 = sub_1DA744AE8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1DA674000, v5, v6, "VSNPIBrokenEvent", v7, 2u);
    MEMORY[0x1E0174100](v7, -1, -1);
  }
  uint64_t v8 = (_OWORD *)(v78 + 16);
  unint64_t v9 = (_OWORD *)(v78 + 160);
  uint64_t v10 = *(void *)(v78 + 520);
  uint64_t v11 = *(void *)(v78 + 496);
  uint64_t v12 = *(void *)(v78 + 504);
  uint64_t v13 = *(void *)(v78 + 488);

  id v67 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t result = v67(v10, v11);
  int64_t v77 = 0;
  uint64_t v66 = v13 + 64;
  uint64_t v15 = -1;
  uint64_t v16 = -1 << *(unsigned char *)(v13 + 32);
  if (-v16 < 64) {
    uint64_t v15 = ~(-1 << -(char)v16);
  }
  unint64_t v17 = v15 & *(void *)(v13 + 64);
  uint64_t v74 = v13;
  int64_t v70 = (unint64_t)(63 - v16) >> 6;
  char v18 = *(void **)(v78 + 552);
  uint64_t v72 = v0 + 280;
  uint64_t v75 = v0 + 384;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      uint64_t v22 = v78 + 88;
      unint64_t v23 = v21 | (v77 << 6);
LABEL_11:
      sub_1DA6E3260(*(void *)(v74 + 48) + 40 * v23, v22);
      sub_1DA6E32BC(*(void *)(v74 + 56) + 32 * v23, v78 + 128);
      goto LABEL_30;
    }
    uint64_t v22 = v78 + 88;
    int64_t v24 = v77 + 1;
    if (__OFADD__(v77, 1)) {
      goto LABEL_66;
    }
    if (v24 < v70)
    {
      unint64_t v25 = *(void *)(v66 + 8 * v24);
      if (v25) {
        goto LABEL_15;
      }
      int64_t v26 = v77 + 2;
      ++v77;
      if (v24 + 1 < v70)
      {
        unint64_t v25 = *(void *)(v66 + 8 * v26);
        if (v25) {
          goto LABEL_18;
        }
        int64_t v77 = v24 + 1;
        if (v24 + 2 < v70)
        {
          unint64_t v25 = *(void *)(v66 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
LABEL_15:
            unint64_t v17 = (v25 - 1) & v25;
            unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
            int64_t v77 = v24;
            goto LABEL_11;
          }
          int64_t v26 = v24 + 3;
          int64_t v77 = v24 + 2;
          if (v24 + 3 < v70)
          {
            unint64_t v25 = *(void *)(v66 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_70;
                }
                if (v24 >= v70)
                {
                  int64_t v77 = v70 - 1;
                  goto LABEL_29;
                }
                unint64_t v25 = *(void *)(v66 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_15;
                }
              }
            }
LABEL_18:
            int64_t v24 = v26;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_29:
    unint64_t v17 = 0;
    *(void *)(v78 + 152) = 0;
    *(_OWORD *)(v78 + 120) = 0u;
    *(_OWORD *)(v78 + 136) = 0u;
    *(_OWORD *)(v78 + 8_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)(v78 + 104) = 0u;
LABEL_30:
    sub_1DA6E3318(v22, (uint64_t)v8);
    if (!*(void *)(v78 + 40)) {
      break;
    }
    long long v27 = *(_OWORD *)(v78 + 32);
    *unint64_t v9 = *v8;
    *(_OWORD *)(v78 + 176) = v27;
    *(void *)(v78 + 192) = *(void *)(v78 + 48);
    sub_1DA6E34CC((_OWORD *)(v78 + 56), v2);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v78 + 562) = *(unsigned char *)(v78 + 561);
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v2, (uint64_t)v76);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v80 = v18;
      unint64_t v30 = sub_1DA6E2DB8(v79);
      uint64_t v31 = v18[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t result = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        return result;
      }
      char v33 = v29;
      if (v18[3] >= result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v2 = (_OWORD *)v75;
          if ((v29 & 1) == 0) {
            goto LABEL_48;
          }
        }
        else
        {
          sub_1DA6E3670();
          char v18 = v80;
          uint64_t v2 = (_OWORD *)v75;
          if ((v33 & 1) == 0) {
            goto LABEL_48;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(result, isUniquelyReferenced_nonNull_native);
        char v18 = v80;
        unint64_t v34 = sub_1DA6E2DB8(v79);
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_62;
        }
        unint64_t v30 = v34;
        uint64_t v2 = (_OWORD *)v75;
        if ((v33 & 1) == 0)
        {
LABEL_48:
          v18[(v30 >> 6) + 8] |= 1 << v30;
          sub_1DA6E3260(v79, v18[6] + 40 * v30);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v76, (_OWORD *)(v18[7] + 32 * v30));
          uint64_t v58 = v18[2];
          BOOL v46 = __OFADD__(v58, 1);
          uint64_t v59 = v58 + 1;
          if (v46) {
            goto LABEL_68;
          }
          v18[2] = v59;
          goto LABEL_7;
        }
      }
      unint64_t v19 = (_OWORD *)(v18[7] + 32 * v30);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      sub_1DA6E34CC(v76, v19);
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v20 = v79;
      goto LABEL_8;
    }
    uint64_t v36 = v1;
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v78 + 560) = *(unsigned char *)(v78 + 563);
      sub_1DA6E33C4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v2, (uint64_t)v71);
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v80 = v18;
      unint64_t v39 = sub_1DA6E2DB8(v73);
      uint64_t v40 = v18[2];
      BOOL v41 = (v38 & 1) == 0;
      uint64_t result = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_67;
      }
      char v42 = v38;
      if (v18[3] >= result)
      {
        if (v37)
        {
          uint64_t v2 = (_OWORD *)v75;
          if ((v38 & 1) == 0) {
            goto LABEL_42;
          }
        }
        else
        {
          sub_1DA6E3670();
          char v18 = v80;
          uint64_t v2 = (_OWORD *)v75;
          if ((v42 & 1) == 0) {
            goto LABEL_42;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(result, v37);
        char v18 = v80;
        unint64_t v43 = sub_1DA6E2DB8(v73);
        if ((v42 & 1) != (v44 & 1))
        {
LABEL_62:
          return sub_1DA744CD8();
        }
        unint64_t v39 = v43;
        uint64_t v2 = (_OWORD *)v75;
        if ((v42 & 1) == 0)
        {
LABEL_42:
          v18[(v39 >> 6) + 8] |= 1 << v39;
          sub_1DA6E3260(v73, v18[6] + 40 * v39);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v71, (_OWORD *)(v18[7] + 32 * v39));
          uint64_t v45 = v18[2];
          BOOL v46 = __OFADD__(v45, 1);
          uint64_t v47 = v45 + 1;
          if (v46) {
            goto LABEL_69;
          }
          v18[2] = v47;
          goto LABEL_54;
        }
      }
      BOOL v60 = (_OWORD *)(v18[7] + 32 * v39);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      sub_1DA6E34CC(v71, v60);
LABEL_54:
      swift_bridgeObjectRelease();
      uint64_t v20 = v73;
LABEL_8:
      sub_1DA6E3418(v20);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
      uint64_t result = sub_1DA6E3418((uint64_t)v9);
      uint64_t v1 = v72;
    }
    else
    {
      ((void (*)(void, uint64_t, void))v68)(*(void *)(v78 + 512), v69, *(void *)(v78 + 496));
      sub_1DA6E3260((uint64_t)v9, v1);
      uint64_t v48 = v1;
      char v49 = sub_1DA744978();
      os_log_type_t v50 = sub_1DA744AF8();
      BOOL v51 = os_log_type_enabled(v49, v50);
      uint64_t v52 = *(void *)(v78 + 512);
      uint64_t v53 = *(void *)(v78 + 496);
      if (v51)
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v65 = v53;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v80 = (void *)v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v56 = sub_1DA744B78();
        *(void *)(v54 + 4) = sub_1DA6E2760(v56, v57, (uint64_t *)&v80);
        swift_bridgeObjectRelease();
        sub_1DA6E3418(v48);
        _os_log_impl(&dword_1DA674000, v49, v50, "VSNPIBrokenEvent received invalid metadata key: %s", (uint8_t *)v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E0174100](v55, -1, -1);
        MEMORY[0x1E0174100](v54, -1, -1);

        v67(v52, v65);
        uint64_t v2 = (_OWORD *)v75;
        __swift_destroy_boxed_opaque_existential_0(v75);
        uint64_t result = sub_1DA6E3418((uint64_t)v9);
        uint64_t v1 = v48;
      }
      else
      {

        sub_1DA6E3418(v36);
        v67(v52, v53);
        uint64_t v2 = (_OWORD *)v75;
        __swift_destroy_boxed_opaque_existential_0(v75);
        uint64_t result = sub_1DA6E3418((uint64_t)v9);
        uint64_t v1 = v36;
      }
    }
  }
  uint64_t v61 = *(void *)(v78 + 536);
  uint64_t v62 = *(void *)(v78 + 528);
  uint64_t v63 = *(void **)(v78 + 480);
  swift_release();
  *uint64_t v63 = 0xD000000000000012;
  v63[1] = 0x80000001DA767BA0;
  v63[2] = v18;
  v63[3] = v62;
  v63[4] = v61;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v64 = *(uint64_t (**)(void))(v78 + 8);
  return v64();
}

uint64_t VSNPIBrokenEvent.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[40] = a2;
  v3[41] = a3;
  v3[39] = a1;
  uint64_t v4 = sub_1DA744998();
  v3[42] = v4;
  v3[43] = *(void *)(v4 - 8);
  v3[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F6024, 0, 0);
}

uint64_t sub_1DA6F6024()
{
  uint64_t v34 = v0;
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA74E200;
  *(unsigned char *)(v0 + 376) = 1;
  sub_1DA6E33C4();
  sub_1DA744BB8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1DA6EDAC4(inited);
  id v5 = objc_allocWithZone((Class)VSBundleRecord);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1DA7449E8();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithBundleID_, v6);

  id v8 = objc_msgSend(v7, sel_bundleVersion);
  if (v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1DA744A18();
    uint64_t v11 = v10;

    *(unsigned char *)(v0 + 377) = 2;
    sub_1DA744BB8();
    *(void *)(v0 + 264) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 240) = v9;
    *(void *)(v0 + 24_Block_object_dispose(&STACK[0x360], 8) = v11;
    sub_1DA6E34CC((_OWORD *)(v0 + 240), (_OWORD *)(v0 + 272));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v4;
    sub_1DA6E3114((_OWORD *)(v0 + 272), v0 + 120, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1DA6E3418(v0 + 120);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1DA6F6440;
    uint64_t v14 = v0 + 200;
    uint64_t v15 = v4;
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 344);
    uint64_t v17 = *(void *)(v0 + 352);
    uint64_t v18 = *(void *)(v0 + 336);
    uint64_t v19 = sub_1DA6FCDF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DA744978();
    os_log_type_t v21 = sub_1DA744B08();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 352);
    unint64_t v26 = *(void *)(v0 + 328);
    uint64_t v25 = *(void *)(v0 + 336);
    if (v22)
    {
      uint64_t v31 = *(void *)(v0 + 320);
      long long v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v25;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v28 = v33;
      *(_DWORD *)long long v27 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 304) = sub_1DA6E2760(v31, v26, &v33);
      sub_1DA744B38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA674000, v20, v21, "Federated punchout event for bundle %s with no version.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v28, -1, -1);
      MEMORY[0x1E0174100](v27, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    char v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 36_Block_object_dispose(&STACK[0x360], 8) = v29;
    *char v29 = v0;
    v29[1] = sub_1DA6F65B8;
    uint64_t v14 = v0 + 160;
    uint64_t v15 = v4;
  }
  return VSNPIBrokenEvent.init(_:)(v14, v15);
}

uint64_t sub_1DA6F6440()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F653C, 0, 0);
}

uint64_t sub_1DA6F653C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  long long v3 = *(_OWORD *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 312);
  *(void *)uint64_t v4 = *(void *)(v0 + 200);
  *(_OWORD *)(v4 + _Block_object_dispose(&STACK[0x360], 8) = v3;
  *(void *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = v2;
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1DA6F65B8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F66B4, 0, 0);
}

uint64_t sub_1DA6F66B4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  long long v3 = *(_OWORD *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 312);
  *(void *)uint64_t v4 = *(void *)(v0 + 160);
  *(_OWORD *)(v4 + _Block_object_dispose(&STACK[0x360], 8) = v3;
  *(void *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = v2;
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

ValueMetadata *type metadata accessor for VSNPIBrokenEvent()
{
  return &type metadata for VSNPIBrokenEvent;
}

uint64_t sub_1DA6F6740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

VideoSubscriberAccount::VSAnalyticsCommonKeys_optional __swiftcall VSAnalyticsCommonKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSAnalyticsCommonKeys.allCases.getter()
{
  return &unk_1F34AC6A0;
}

unint64_t VSAnalyticsCommonKeys.rawValue.getter()
{
  unint64_t result = 0x79745F726F727265;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F635F726F727265;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x72656469766F7270;
      break;
    case 4:
      unint64_t result = 0x6E65674172657375;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6F68FC(unsigned __int8 *a1, char *a2)
{
  return sub_1DA6F6960(*a1, *a2);
}

unint64_t sub_1DA6F690C()
{
  unint64_t result = qword_1EA8E2970;
  if (!qword_1EA8E2970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2970);
  }
  return result;
}

uint64_t sub_1DA6F6960(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x79745F726F727265;
  unint64_t v3 = 0xEA00000000006570;
  uint64_t v4 = a1;
  unint64_t v5 = 0x79745F726F727265;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F635F726F727265;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v3 = 0x80000001DA767BD0;
      break;
    case 3:
      unint64_t v5 = 0x72656469766F7270;
      unint64_t v3 = 0xEB0000000064695FLL;
      break;
    case 4:
      unint64_t v5 = 0x6E65674172657375;
      unint64_t v3 = 0xE900000000000074;
      break;
    case 5:
      unint64_t v3 = 0x80000001DA767C00;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xEA00000000006570;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x6F635F726F727265) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0x80000001DA767BD0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEB0000000064695FLL;
      if (v5 != 0x72656469766F7270) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6E65674172657375;
      unint64_t v6 = 0xE900000000000074;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x80000001DA767C00;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1DA744CB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DA6F6BAC()
{
  return sub_1DA6F6BB4();
}

uint64_t sub_1DA6F6BB4()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6F6CEC()
{
  return sub_1DA6F6CF4();
}

uint64_t sub_1DA6F6CF4()
{
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6F6E18()
{
  return sub_1DA6F6E20();
}

uint64_t sub_1DA6F6E20()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSAnalyticsCommonKeys_optional sub_1DA6F6F54(Swift::String *a1)
{
  return VSAnalyticsCommonKeys.init(rawValue:)(*a1);
}

unint64_t sub_1DA6F6F60@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = VSAnalyticsCommonKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1DA6F6F8C()
{
  unint64_t result = qword_1EA8E2978;
  if (!qword_1EA8E2978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E2980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2978);
  }
  return result;
}

void sub_1DA6F6FE8(void *a1@<X8>)
{
  *a1 = &unk_1F34AC6A0;
}

uint64_t getEnumTagSinglePayload for VSAnalyticsCommonKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSAnalyticsCommonKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6F7154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSAnalyticsCommonKeys()
{
  return &type metadata for VSAnalyticsCommonKeys;
}

uint64_t sub_1DA6F718C()
{
  return 0x5F74706F5F627473;
}

uint64_t VSSTBOptOutEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSTBOptOutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSTBOptOutEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSTBOptOutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSTBOptOutEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSTBOptOutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSTBOptOutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSTBOptOutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[88] = a2;
  v2[87] = a1;
  uint64_t v3 = sub_1DA744998();
  v2[89] = v3;
  v2[90] = *(void *)(v3 - 8);
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  v2[93] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F7398, 0, 0);
}

uint64_t sub_1DA6F7398()
{
  uint64_t v1 = v0[93];
  uint64_t v2 = v0[90];
  uint64_t v3 = v0[89];
  unsigned int v4 = sub_1DA6F9128();
  v0[94] = *v4;
  v0[95] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[96] = v5;
  unsigned int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[97] = v6;
  v0[98] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  BOOL v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSSTBOptOutEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[93];
  uint64_t v11 = v0[90];
  uint64_t v12 = v0[89];

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[99] = v13;
  v0[100] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v12);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[101] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6F753C;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6F753C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 816) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F763C, 0, 0);
}

uint64_t sub_1DA6F763C()
{
  id v1 = objc_msgSend(self, sel_currentDevice);
  v0[103] = v1;
  v0[2] = v0;
  v0[7] = v0 + 86;
  v0[3] = sub_1DA6F7760;
  uint64_t v2 = swift_continuation_init();
  v0[48] = MEMORY[0x1E4F143A8];
  v0[49] = 0x40000000;
  v0[50] = sub_1DA6F83AC;
  v0[51] = &block_descriptor;
  v0[52] = v2;
  objc_msgSend(v1, sel_fetchSetTopBoxProfileWithCompletion_, v0 + 48);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DA6F7760()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 832) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1DA6F8224;
  }
  else
  {
    uint64_t v2 = sub_1DA6F7878;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DA6F7878()
{
  uint64_t v85 = v0;
  uint64_t v1 = *(void **)(v0 + 688);

  if (!v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
    uint64_t v58 = *(void *)(v0 + 736);
    uint64_t v59 = *(void *)(v0 + 712);
    uint64_t v60 = sub_1DA6FCDF8();
    v57(v58, v60, v59);
    uint64_t v61 = sub_1DA744978();
    os_log_type_t v62 = sub_1DA744B08();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_1DA674000, v61, v62, "Sending stb_opt_out event with no STB profile.", v63, 2u);
      MEMORY[0x1E0174100](v63, -1, -1);
    }
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v65 = *(void *)(v0 + 736);
    uint64_t v66 = *(void *)(v0 + 712);

    v64(v65, v66);
    uint64_t v11 = *(void **)(v0 + 816);
    goto LABEL_63;
  }
  uint64_t v83 = (_OWORD *)(v0 + 80);
  uint64_t v82 = v0 + 264;
  uint64_t v78 = v0 + 424;
  uint64_t v80 = (_OWORD *)(v0 + 528);
  int64_t v77 = (_OWORD *)(v0 + 624);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = *(void *)(v0 + 704);
  uint64_t v71 = v1;
  id v4 = objc_msgSend(v1, sel_providerID);
  uint64_t v5 = sub_1DA744A18();
  uint64_t v7 = v6;

  uint64_t v8 = v0 + 152;
  *(unsigned char *)(v0 + 844) = 1;
  sub_1DA6F3FF4();
  sub_1DA744BB8();
  *(void *)(v0 + 680) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 656) = v5;
  *(void *)(v0 + 664) = v7;
  uint64_t v9 = (_OWORD *)(v0 + 496);
  sub_1DA6E34CC((_OWORD *)(v0 + 656), (_OWORD *)(v0 + 464));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v84 = (void *)v2;
  sub_1DA6E3114((_OWORD *)(v0 + 464), v0 + 224, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = (void *)v2;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DA6E3418(v0 + 224);
  int64_t v81 = 0;
  uint64_t v13 = *(void *)(v3 + 64);
  uint64_t v73 = v3 + 64;
  uint64_t v79 = v3;
  uint64_t v14 = -1;
  uint64_t v15 = -1 << *(unsigned char *)(v3 + 32);
  if (-v15 < 64) {
    uint64_t v14 = ~(-1 << -(char)v15);
  }
  unint64_t v16 = v14 & v13;
  int64_t v76 = (unint64_t)(63 - v15) >> 6;
  if ((v14 & v13) == 0) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  uint64_t v18 = v0 + 304;
  unint64_t v19 = v17 | (v81 << 6);
LABEL_6:
  sub_1DA6E3260(*(void *)(v79 + 48) + 40 * v19, (uint64_t)v83);
  sub_1DA6E32BC(*(void *)(v79 + 56) + 32 * v19, v0 + 120);
  while (1)
  {
    sub_1DA6E3318((uint64_t)v83, v8);
    if (!*(void *)(v0 + 176)) {
      break;
    }
    long long v23 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(v0 + 344) = *(_OWORD *)v8;
    *(_OWORD *)(v0 + 360) = v23;
    *(void *)(v0 + 376) = *(void *)(v8 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 192), v9);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 843) = *(unsigned char *)(v0 + 842);
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v9, (uint64_t)v80);
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      long long v84 = v11;
      unint64_t v26 = sub_1DA6E2DB8(v82);
      uint64_t v27 = v11[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t result = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      char v29 = v25;
      if (v11[3] >= result)
      {
        if (v24)
        {
          uint64_t v9 = (_OWORD *)(v0 + 496);
          if ((v25 & 1) == 0) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v11 = v84;
          uint64_t v9 = (_OWORD *)(v0 + 496);
          if ((v29 & 1) == 0) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(result, v24);
        uint64_t v11 = v84;
        unint64_t v30 = sub_1DA6E2DB8(v82);
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_66;
        }
        unint64_t v26 = v30;
        uint64_t v9 = (_OWORD *)(v0 + 496);
        if ((v29 & 1) == 0)
        {
LABEL_31:
          v11[(v26 >> 6) + 8] |= 1 << v26;
          sub_1DA6E3260(v82, v11[6] + 40 * v26);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v80, (_OWORD *)(v11[7] + 32 * v26));
          uint64_t v32 = v11[2];
          BOOL v33 = __OFADD__(v32, 1);
          uint64_t v34 = v32 + 1;
          if (v33) {
            goto LABEL_72;
          }
          void v11[2] = v34;
          goto LABEL_45;
        }
      }
      uint64_t v54 = (_OWORD *)(v11[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1DA6E34CC(v80, v54);
LABEL_45:
      swift_bridgeObjectRelease();
      uint64_t v55 = v0 + 264;
      goto LABEL_53;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 840) = *(unsigned char *)(v0 + 841);
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v9, (uint64_t)v77);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      long long v84 = v11;
      unint64_t v37 = sub_1DA6E2DB8(v78);
      uint64_t v38 = v11[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t result = v38 + v39;
      if (__OFADD__(v38, v39)) {
        goto LABEL_71;
      }
      char v40 = v36;
      if (v11[3] >= result)
      {
        if (v35)
        {
          uint64_t v9 = (_OWORD *)(v0 + 496);
          if ((v36 & 1) == 0) {
            goto LABEL_38;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v11 = v84;
          uint64_t v9 = (_OWORD *)(v0 + 496);
          if ((v40 & 1) == 0) {
            goto LABEL_38;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(result, v35);
        uint64_t v11 = v84;
        unint64_t v41 = sub_1DA6E2DB8(v78);
        if ((v40 & 1) != (v42 & 1))
        {
LABEL_66:
          return sub_1DA744CD8();
        }
        unint64_t v37 = v41;
        uint64_t v9 = (_OWORD *)(v0 + 496);
        if ((v40 & 1) == 0)
        {
LABEL_38:
          v11[(v37 >> 6) + 8] |= 1 << v37;
          sub_1DA6E3260(v78, v11[6] + 40 * v37);
          uint64_t result = (uint64_t)sub_1DA6E34CC(v77, (_OWORD *)(v11[7] + 32 * v37));
          uint64_t v43 = v11[2];
          BOOL v33 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v33) {
            goto LABEL_73;
          }
          void v11[2] = v44;
LABEL_52:
          swift_bridgeObjectRelease();
          uint64_t v55 = v0 + 424;
LABEL_53:
          sub_1DA6E3418(v55);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
          uint64_t result = sub_1DA6E3418(v0 + 344);
          if (v16) {
            goto LABEL_5;
          }
          goto LABEL_7;
        }
      }
      uint64_t v56 = (_OWORD *)(v11[7] + 32 * v37);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
      sub_1DA6E34CC(v77, v56);
      goto LABEL_52;
    }
    (*(void (**)(void, void, void))(v0 + 776))(*(void *)(v0 + 728), *(void *)(v0 + 768), *(void *)(v0 + 712));
    sub_1DA6E3260(v0 + 344, v18);
    uint64_t v45 = sub_1DA744978();
    os_log_type_t v46 = sub_1DA744AF8();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v74 = *(void *)(v0 + 712);
    uint64_t v75 = *(void *)(v0 + 728);
    if (v47)
    {
      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      long long v84 = (void *)v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v51 = sub_1DA744B78();
      *(void *)(v49 + 4) = sub_1DA6E2760(v51, v52, (uint64_t *)&v84);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v18);
      _os_log_impl(&dword_1DA674000, v45, v46, "VSSTBOptOutEvent received invalid metadata key: %s", (uint8_t *)v49, 0xCu);
      swift_arrayDestroy();
      uint64_t v53 = v50;
      uint64_t v9 = (_OWORD *)(v0 + 496);
      MEMORY[0x1E0174100](v53, -1, -1);
      MEMORY[0x1E0174100](v49, -1, -1);

      v72(v75, v74);
    }
    else
    {

      sub_1DA6E3418(v18);
      v48(v75, v74);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    uint64_t result = sub_1DA6E3418(v0 + 344);
    uint64_t v8 = v0 + 152;
    if (v16) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v18 = v0 + 304;
    int64_t v20 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      goto LABEL_70;
    }
    if (v20 < v76)
    {
      unint64_t v21 = *(void *)(v73 + 8 * v20);
      if (v21) {
        goto LABEL_10;
      }
      int64_t v22 = v81 + 2;
      ++v81;
      if (v20 + 1 < v76)
      {
        unint64_t v21 = *(void *)(v73 + 8 * v22);
        if (v21) {
          goto LABEL_13;
        }
        int64_t v81 = v20 + 1;
        if (v20 + 2 < v76)
        {
          unint64_t v21 = *(void *)(v73 + 8 * (v20 + 2));
          if (v21)
          {
            v20 += 2;
            goto LABEL_10;
          }
          int64_t v22 = v20 + 3;
          int64_t v81 = v20 + 2;
          if (v20 + 3 < v76)
          {
            unint64_t v21 = *(void *)(v73 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                int64_t v20 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  break;
                }
                if (v20 >= v76)
                {
                  int64_t v81 = v76 - 1;
                  goto LABEL_24;
                }
                unint64_t v21 = *(void *)(v73 + 8 * v20);
                ++v22;
                if (v21) {
                  goto LABEL_10;
                }
              }
LABEL_74:
              __break(1u);
              return result;
            }
LABEL_13:
            int64_t v20 = v22;
LABEL_10:
            unint64_t v16 = (v21 - 1) & v21;
            unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
            int64_t v81 = v20;
            goto LABEL_6;
          }
        }
      }
    }
LABEL_24:
    unint64_t v16 = 0;
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 12_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *uint64_t v83 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  swift_release();

LABEL_63:
  uint64_t v67 = *(void *)(v0 + 760);
  uint64_t v68 = *(void *)(v0 + 752);
  uint64_t v69 = *(void **)(v0 + 696);
  *uint64_t v69 = 0x5F74706F5F627473;
  v69[1] = 0xEB0000000074756FLL;
  v69[2] = v11;
  v69[3] = v68;
  v69[4] = v67;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v70 = *(uint64_t (**)(void))(v0 + 8);
  return v70();
}

uint64_t sub_1DA6F8224()
{
  uint64_t v1 = (void *)v0[104];
  uint64_t v2 = (void *)v0[103];
  swift_willThrow();

  uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[97];
  uint64_t v4 = v0[92];
  uint64_t v5 = v0[89];
  uint64_t v6 = sub_1DA6FCDF8();
  v3(v4, v6, v5);
  uint64_t v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744B08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "Sending stb_opt_out event with no STB profile.", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[99];
  uint64_t v11 = v0[92];
  uint64_t v12 = v0[89];

  v10(v11, v12);
  uint64_t v13 = v0[102];
  uint64_t v14 = v0[95];
  uint64_t v15 = v0[94];
  unint64_t v16 = (void *)v0[87];
  void *v16 = 0x5F74706F5F627473;
  v16[1] = 0xEB0000000074756FLL;
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = v14;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1DA6F83AC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2878);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188200](a1);
  }
}

ValueMetadata *type metadata accessor for VSSTBOptOutEvent()
{
  return &type metadata for VSSTBOptOutEvent;
}

uint64_t sub_1DA6F847C()
{
  return 0x6F5F64656E676973;
}

uint64_t VSSignOutEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignOutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSignOutEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSignOutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignOutEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignOutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSignOutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignOutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F8674, 0, 0);
}

uint64_t sub_1DA6F8674()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  uint64_t v4 = sub_1DA6F9128();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[68] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v0[70] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  id v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSSignOutEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[65];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[63];

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[71] = v13;
  v0[72] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[73] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6F8810;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6F8810(uint64_t a1)
{
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F8910, 0, 0);
}

void sub_1DA6F8910()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  int64_t v65 = 0;
  uint64_t v66 = v0 + 200;
  uint64_t v61 = v0 + 280;
  uint64_t v62 = v0 + 240;
  uint64_t v64 = (_OWORD *)(v0 + 352);
  uint64_t v3 = (_OWORD *)(v0 + 384);
  uint64_t v60 = (_OWORD *)(v0 + 448);
  uint64_t v4 = (unsigned char *)(v0 + 601);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v56 = v5 + 64;
  uint64_t v63 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v63 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v59 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = *(void **)(v0 + 592);
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v65 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v63 + 48) + 40 * v12, v2);
  sub_1DA6E32BC(*(void *)(v63 + 56) + 32 * v12, v0 + 128);
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v0 + 40)) {
      break;
    }
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
    *(_OWORD *)(v0 + 176) = v16;
    *(void *)(v0 + 192) = *(void *)(v1 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 56), v3);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 602) = *v4;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v19 = sub_1DA6E2DB8(v66);
      uint64_t v20 = v10[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      char v23 = v18;
      if (v10[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v18 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v23 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v67;
        unint64_t v24 = sub_1DA6E2DB8(v66);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_61;
        }
        unint64_t v19 = v24;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v23 & 1) == 0)
        {
LABEL_30:
          v10[(v19 >> 6) + 8] |= 1 << v19;
          sub_1DA6E3260(v66, v10[6] + 40 * v19);
          sub_1DA6E34CC(v64, (_OWORD *)(v10[7] + 32 * v19));
          uint64_t v26 = v10[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_67;
          }
          v10[2] = v28;
          goto LABEL_44;
        }
      }
      uint64_t v49 = (_OWORD *)(v10[7] + 32 * v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1DA6E34CC(v64, v49);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v50 = v0 + 200;
      goto LABEL_52;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 600) = *(unsigned char *)(v0 + 603);
      sub_1DA6F3FF4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v60);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v31 = sub_1DA6E2DB8(v62);
      uint64_t v32 = v10[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_66;
      }
      char v35 = v30;
      if (v10[3] >= v34)
      {
        if (v29)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v35 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v34, v29);
        uint64_t v10 = v67;
        unint64_t v36 = sub_1DA6E2DB8(v62);
        if ((v35 & 1) != (v37 & 1))
        {
LABEL_61:
          sub_1DA744CD8();
          return;
        }
        unint64_t v31 = v36;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v10[(v31 >> 6) + 8] |= 1 << v31;
          sub_1DA6E3260(v62, v10[6] + 40 * v31);
          sub_1DA6E34CC(v60, (_OWORD *)(v10[7] + 32 * v31));
          uint64_t v38 = v10[2];
          BOOL v27 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v27) {
            goto LABEL_68;
          }
          v10[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          uint64_t v50 = v0 + 240;
LABEL_52:
          sub_1DA6E3418(v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
          sub_1DA6E3418(v0 + 160);
          uint64_t v4 = (unsigned char *)(v0 + 601);
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      uint64_t v51 = (_OWORD *)(v10[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      sub_1DA6E34CC(v60, v51);
      goto LABEL_51;
    }
    (*(void (**)(void, void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 544), *(void *)(v0 + 496));
    sub_1DA6E3260(v0 + 160, v61);
    char v40 = sub_1DA744978();
    os_log_type_t v41 = sub_1DA744AF8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v57 = *(void *)(v0 + 512);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v43 = *(void *)(v0 + 496);
    if (v42)
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v67 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1DA744B78();
      *(void *)(v44 + 4) = sub_1DA6E2760(v46, v47, (uint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v61);
      _os_log_impl(&dword_1DA674000, v40, v41, "VSSignOutEvent received invalid metadata key: %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v45, -1, -1);
      uint64_t v48 = v44;
      uint64_t v1 = v0 + 16;
      MEMORY[0x1E0174100](v48, -1, -1);
    }
    else
    {

      sub_1DA6E3418(v61);
    }
    v58(v57, v43);
    uint64_t v3 = (_OWORD *)(v0 + 384);
    __swift_destroy_boxed_opaque_existential_0(v0 + 384);
    sub_1DA6E3418(v0 + 160);
    uint64_t v2 = v0 + 88;
    uint64_t v4 = (unsigned char *)(v0 + 601);
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      goto LABEL_65;
    }
    if (v13 < v59)
    {
      unint64_t v14 = *(void *)(v56 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v65 + 2;
      ++v65;
      if (v13 + 1 < v59)
      {
        unint64_t v14 = *(void *)(v56 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v65 = v13 + 1;
        if (v13 + 2 < v59)
        {
          unint64_t v14 = *(void *)(v56 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v65 = v13 + 2;
          if (v13 + 3 < v59)
          {
            unint64_t v14 = *(void *)(v56 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v59)
                {
                  int64_t v65 = v59 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v56 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_69:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v9 = (v14 - 1) & v14;
            unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v65 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v52 = *(void *)(v0 + 536);
  uint64_t v53 = *(void *)(v0 + 528);
  uint64_t v54 = *(void **)(v0 + 480);
  swift_release();
  *uint64_t v54 = 0x6F5F64656E676973;
  v54[1] = 0xEA00000000007475;
  v54[2] = v10;
  v54[3] = v53;
  v54[4] = v52;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(void (**)(void))(v0 + 8);
  v55();
}

ValueMetadata *type metadata accessor for VSSignOutEvent()
{
  return &type metadata for VSSignOutEvent;
}

void *sub_1DA6F9128()
{
  return &unk_1E6BD4C20;
}

uint64_t sub_1DA6F9134()
{
  return 0x5F746E756F636361;
}

uint64_t VSAccountUpdateEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSAccountUpdateEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSAccountUpdateEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSAccountUpdateEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSAccountUpdateEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSAccountUpdateEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSAccountUpdateEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSAccountUpdateEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6F9334, 0, 0);
}

uint64_t sub_1DA6F9334()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  uint64_t v4 = sub_1DA6F9128();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[68] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v0[70] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  uint64_t v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSAccountUpdateEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[65];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[63];

  int64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[71] = v13;
  v0[72] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  unint64_t v14 = (void *)swift_task_alloc();
  v0[73] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6F94D0;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6F94D0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6F95D0, 0, 0);
}

void sub_1DA6F95D0()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  int64_t v65 = 0;
  uint64_t v66 = v0 + 200;
  uint64_t v61 = v0 + 280;
  uint64_t v62 = v0 + 240;
  uint64_t v64 = (_OWORD *)(v0 + 352);
  uint64_t v3 = (_OWORD *)(v0 + 384);
  uint64_t v60 = (_OWORD *)(v0 + 448);
  uint64_t v4 = (unsigned char *)(v0 + 601);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v56 = v5 + 64;
  uint64_t v63 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v63 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v59 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = *(void **)(v0 + 592);
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v65 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v63 + 48) + 40 * v12, v2);
  sub_1DA6E32BC(*(void *)(v63 + 56) + 32 * v12, v0 + 128);
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v0 + 40)) {
      break;
    }
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
    *(_OWORD *)(v0 + 176) = v16;
    *(void *)(v0 + 192) = *(void *)(v1 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 56), v3);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 602) = *v4;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v19 = sub_1DA6E2DB8(v66);
      uint64_t v20 = v10[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      char v23 = v18;
      if (v10[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v18 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v23 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v67;
        unint64_t v24 = sub_1DA6E2DB8(v66);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_61;
        }
        unint64_t v19 = v24;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v23 & 1) == 0)
        {
LABEL_30:
          v10[(v19 >> 6) + 8] |= 1 << v19;
          sub_1DA6E3260(v66, v10[6] + 40 * v19);
          sub_1DA6E34CC(v64, (_OWORD *)(v10[7] + 32 * v19));
          uint64_t v26 = v10[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_67;
          }
          v10[2] = v28;
          goto LABEL_44;
        }
      }
      uint64_t v49 = (_OWORD *)(v10[7] + 32 * v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1DA6E34CC(v64, v49);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v50 = v0 + 200;
      goto LABEL_52;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 600) = *(unsigned char *)(v0 + 603);
      sub_1DA6FB304();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v60);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v31 = sub_1DA6E2DB8(v62);
      uint64_t v32 = v10[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_66;
      }
      char v35 = v30;
      if (v10[3] >= v34)
      {
        if (v29)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v35 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v34, v29);
        uint64_t v10 = v67;
        unint64_t v36 = sub_1DA6E2DB8(v62);
        if ((v35 & 1) != (v37 & 1))
        {
LABEL_61:
          sub_1DA744CD8();
          return;
        }
        unint64_t v31 = v36;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v10[(v31 >> 6) + 8] |= 1 << v31;
          sub_1DA6E3260(v62, v10[6] + 40 * v31);
          sub_1DA6E34CC(v60, (_OWORD *)(v10[7] + 32 * v31));
          uint64_t v38 = v10[2];
          BOOL v27 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v27) {
            goto LABEL_68;
          }
          v10[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          uint64_t v50 = v0 + 240;
LABEL_52:
          sub_1DA6E3418(v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
          sub_1DA6E3418(v0 + 160);
          uint64_t v4 = (unsigned char *)(v0 + 601);
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      uint64_t v51 = (_OWORD *)(v10[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      sub_1DA6E34CC(v60, v51);
      goto LABEL_51;
    }
    (*(void (**)(void, void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 544), *(void *)(v0 + 496));
    sub_1DA6E3260(v0 + 160, v61);
    char v40 = sub_1DA744978();
    os_log_type_t v41 = sub_1DA744AF8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v57 = *(void *)(v0 + 512);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v43 = *(void *)(v0 + 496);
    if (v42)
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v67 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1DA744B78();
      *(void *)(v44 + 4) = sub_1DA6E2760(v46, v47, (uint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v61);
      _os_log_impl(&dword_1DA674000, v40, v41, "VSAccountUpdateEvent received invalid metadata key: %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v45, -1, -1);
      uint64_t v48 = v44;
      uint64_t v1 = v0 + 16;
      MEMORY[0x1E0174100](v48, -1, -1);
    }
    else
    {

      sub_1DA6E3418(v61);
    }
    v58(v57, v43);
    uint64_t v3 = (_OWORD *)(v0 + 384);
    __swift_destroy_boxed_opaque_existential_0(v0 + 384);
    sub_1DA6E3418(v0 + 160);
    uint64_t v2 = v0 + 88;
    uint64_t v4 = (unsigned char *)(v0 + 601);
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      goto LABEL_65;
    }
    if (v13 < v59)
    {
      unint64_t v14 = *(void *)(v56 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v65 + 2;
      ++v65;
      if (v13 + 1 < v59)
      {
        unint64_t v14 = *(void *)(v56 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v65 = v13 + 1;
        if (v13 + 2 < v59)
        {
          unint64_t v14 = *(void *)(v56 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v65 = v13 + 2;
          if (v13 + 3 < v59)
          {
            unint64_t v14 = *(void *)(v56 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v59)
                {
                  int64_t v65 = v59 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v56 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_69:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v9 = (v14 - 1) & v14;
            unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v65 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v52 = *(void *)(v0 + 536);
  uint64_t v53 = *(void *)(v0 + 528);
  uint64_t v54 = *(void *)(v0 + 480);
  swift_release();
  strcpy((char *)v54, "account_update");
  *(unsigned char *)(v54 + 15) = -18;
  *(void *)(v54 + 16) = v10;
  *(void *)(v54 + 24) = v53;
  *(void *)(v54 + 32) = v52;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(void (**)(void))(v0 + 8);
  v55();
}

uint64_t VSAccountUpdateEvent.init(userAccount:source:updateType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[141] = a6;
  v6[140] = a5;
  v6[139] = a4;
  v6[138] = a3;
  v6[137] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2798);
  v6[142] = swift_task_alloc();
  v6[143] = swift_task_alloc();
  uint64_t v8 = sub_1DA744948();
  v6[144] = v8;
  v6[145] = *(void *)(v8 - 8);
  v6[146] = swift_task_alloc();
  uint64_t v9 = sub_1DA744888();
  v6[147] = v9;
  v6[148] = *(void *)(v9 - 8);
  v6[149] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E27A8);
  v6[150] = swift_task_alloc();
  uint64_t v10 = sub_1DA744908();
  v6[151] = v10;
  v6[152] = *(void *)(v10 - 8);
  v6[153] = swift_task_alloc();
  v6[154] = swift_task_alloc();
  v6[155] = *a2;
  return MEMORY[0x1F4188298](sub_1DA6F9FF4, 0, 0);
}

uint64_t sub_1DA6F9FF4()
{
  uint64_t v134 = v0;
  uint64_t v123 = v0 + 416;
  uint64_t v126 = (_OWORD *)(v0 + 664);
  uint64_t v113 = *(void *)(v0 + 1128);
  uint64_t v114 = *(void *)(v0 + 1240);
  uint64_t v1 = *(void *)(v0 + 1120);
  uint64_t v2 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1104);
  uint64_t v4 = (uint64_t *)sub_1DA6F9128();
  uint64_t v5 = v4[1];
  uint64_t v129 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E28A8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA74E210;
  *(unsigned char *)(v0 + 1251) = 1;
  sub_1DA6FB304();
  uint64_t v130 = v5;
  swift_bridgeObjectRetain();
  sub_1DA744BB8();
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 72) = v3;
  *(void *)(v6 + 80) = v2;
  *(unsigned char *)(v0 + 1263) = 3;
  uint64_t v8 = v7;
  sub_1DA744BB8();
  *(void *)(v6 + 16_Block_object_dispose(&STACK[0x360], 8) = v8;
  *(void *)(v6 + 144) = v1;
  *(void *)(v6 + 152) = v113;
  unint64_t v9 = sub_1DA6EDAC4(v6);
  *(void *)&long long v131 = v114;
  VSUserAccount.accountType.getter((char *)v133);
  *(unsigned char *)(v0 + 1262) = v133[0];
  *(unsigned char *)(v0 + 1260) = 0;
  sub_1DA6FB358();
  sub_1DA744A68();
  sub_1DA744A68();
  if (*(void *)(v0 + 1080) == *(void *)(v0 + 1088))
  {
    uint64_t v10 = (_OWORD *)(v0 + 1048);
    uint64_t v11 = v0 + 56;
    uint64_t v132 = v8;
    *(void *)&long long v131 = sub_1DA744A18();
    *((void *)&v131 + 1) = v12;
    *(unsigned char *)(v0 + 1264) = 5;
  }
  else
  {
    uint64_t v10 = (_OWORD *)(v0 + 888);
    uint64_t v11 = v0 + 296;
    uint64_t v132 = v8;
    *(void *)&long long v131 = sub_1DA744A18();
    *((void *)&v131 + 1) = v13;
    *(unsigned char *)(v0 + 1259) = 5;
  }
  sub_1DA744BB8();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v9;
  sub_1DA6FB3AC(&v131, v11, isUniquelyReferenced_nonNull_native, v10);
  uint64_t v15 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v11);
  sub_1DA6EB5BC((uint64_t)v10, &qword_1EA8E26C0);
  uint64_t v115 = (_OWORD *)(v0 + 600);
  *(void *)&long long v131 = *(void *)(v0 + 1240);
  VSUserAccount.authenticationData.getter();
  if (v16)
  {
    uint64_t v17 = sub_1DA744A38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v118 = v0 + 336;
  uint64_t v120 = (_OWORD *)(v0 + 696);
  uint64_t v18 = *(void *)(v0 + 1240);
  uint64_t v19 = MEMORY[0x1E4FBB550];
  uint64_t v132 = MEMORY[0x1E4FBB550];
  *(void *)&long long v131 = v17;
  *(unsigned char *)(v0 + 1257) = 12;
  sub_1DA744BB8();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v15;
  sub_1DA6FB3AC(&v131, v123, v20, v126);
  uint64_t v21 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v123);
  sub_1DA6EB5BC((uint64_t)v126, &qword_1EA8E26C0);
  *(void *)&long long v131 = v18;
  uint64_t v22 = VSUserAccount.tierIdentifiers.getter();
  if (v22)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v122 = (_OWORD *)(v0 + 632);
  uint64_t v124 = v0 + 216;
  uint64_t v127 = (_OWORD *)(v0 + 856);
  uint64_t v24 = *(void *)(v0 + 1240);
  uint64_t v132 = v19;
  *(void *)&long long v131 = v23;
  *(unsigned char *)(v0 + 1256) = 10;
  sub_1DA744BB8();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v21;
  sub_1DA6FB3AC(&v131, v0 + 496, v25, (_OWORD *)(v0 + 536));
  uint64_t v26 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 496);
  sub_1DA6EB5BC(v0 + 536, &qword_1EA8E26C0);
  *(void *)&long long v131 = v24;
  uint64_t v27 = VSUserAccount.modifierIdentifier.getter();
  uint64_t v29 = MEMORY[0x1E4FBB1A0];
  uint64_t v132 = MEMORY[0x1E4FBB1A0];
  uint64_t v30 = 0x6E776F6E6B6E75;
  if (v28)
  {
    uint64_t v30 = v27;
    unint64_t v31 = v28;
  }
  else
  {
    unint64_t v31 = 0xE700000000000000;
  }
  uint64_t v32 = *(void *)(v0 + 1240);
  *(void *)&long long v131 = v30;
  *((void *)&v131 + 1) = v31;
  *(unsigned char *)(v0 + 1254) = 8;
  sub_1DA744BB8();
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v26;
  sub_1DA6FB3AC(&v131, v0 + 16, v33, v115);
  uint64_t v34 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 16);
  sub_1DA6EB5BC((uint64_t)v115, &qword_1EA8E26C0);
  *(void *)&long long v131 = v32;
  id v35 = sub_1DA6E9984();
  if (v35)
  {
    id v36 = v35;
    type metadata accessor for VSMetricAccountUpdateValue();
    *(void *)(v0 + 784) = v37;
    *(void *)(v0 + 760) = v36;
    uint64_t v38 = (_OWORD *)(v0 + 728);
    sub_1DA6E34CC((_OWORD *)(v0 + 760), (_OWORD *)(v0 + 728));
  }
  else
  {
    *(void *)(v0 + 752) = v29;
    *(void *)(v0 + 72_Block_object_dispose(&STACK[0x360], 8) = 0x6E776F6E6B6E75;
    *(void *)(v0 + 736) = 0xE700000000000000;
    uint64_t v38 = (_OWORD *)(v0 + 728);
  }
  uint64_t v39 = *(void *)(v0 + 1240);
  *(unsigned char *)(v0 + 1253) = 7;
  sub_1DA744BB8();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v131 = v34;
  sub_1DA6FB3AC(v38, v118, v40, v120);
  uint64_t v41 = v131;
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v118);
  sub_1DA6EB5BC((uint64_t)v120, &qword_1EA8E26C0);
  *(void *)&long long v131 = v39;
  id v42 = sub_1DA6E9A48();
  if (v42)
  {
    id v43 = v42;
    type metadata accessor for VSMetricAccountUpdateValue();
    *(void *)(v0 + 944) = v44;
    *(void *)(v0 + 920) = v43;
    sub_1DA6E34CC((_OWORD *)(v0 + 920), v122);
  }
  else
  {
    *(void *)(v0 + 656) = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 632) = 0x6E776F6E6B6E75;
    *(void *)(v0 + 640) = 0xE700000000000000;
  }
  uint64_t v116 = v0 + 96;
  v117 = (_OWORD *)(v0 + 952);
  uint64_t v119 = v0 + 256;
  uint64_t v121 = (_OWORD *)(v0 + 984);
  uint64_t v45 = *(void *)(v0 + 1240);
  *(unsigned char *)(v0 + 1250) = 2;
  sub_1DA744BB8();
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v131 = v41;
  sub_1DA6FB3AC(v122, v124, v46, v127);
  uint64_t v47 = v131;
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v124);
  sub_1DA6EB5BC((uint64_t)v127, &qword_1EA8E26C0);
  *(void *)&long long v131 = v45;
  VSUserAccount.billingIdentifier.getter();
  if (v48 && (uint64_t v49 = sub_1DA744A38(), swift_bridgeObjectRelease(), v49 > 0))
  {
    unint64_t v50 = 0xE400000000000000;
    uint64_t v51 = 1702195828;
  }
  else
  {
    unint64_t v50 = 0xE500000000000000;
    uint64_t v51 = 0x65736C6166;
  }
  uint64_t v125 = v0 + 376;
  v128 = (_OWORD *)(v0 + 824);
  uint64_t v52 = *(void *)(v0 + 1240);
  uint64_t v53 = *(void *)(v0 + 1216);
  uint64_t v54 = *(void *)(v0 + 1208);
  uint64_t v55 = *(void *)(v0 + 1200);
  uint64_t v132 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v131 = v51;
  *((void *)&v131 + 1) = v50;
  *(unsigned char *)(v0 + 124_Block_object_dispose(&STACK[0x360], 8) = 11;
  sub_1DA744BB8();
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v47;
  sub_1DA6FB3AC(&v131, v0 + 176, v56, (_OWORD *)(v0 + 1016));
  uint64_t v57 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 176);
  sub_1DA6EB5BC(v0 + 1016, &qword_1EA8E26C0);
  *(void *)&long long v131 = v52;
  VSUserAccount.subscriptionBillingCycleEndDate.getter(v55);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v54) == 1)
  {
    sub_1DA6EB5BC(*(void *)(v0 + 1200), &qword_1EA8E27A8);
  }
  else
  {
    uint64_t v111 = v0 + 136;
    v112 = (_OWORD *)(v0 + 792);
    uint64_t v58 = *(void *)(v0 + 1224);
    uint64_t v59 = *(void *)(v0 + 1216);
    uint64_t v105 = *(void *)(v0 + 1232);
    uint64_t v106 = *(void *)(v0 + 1192);
    uint64_t v109 = *(void *)(v0 + 1184);
    uint64_t v110 = *(void *)(v0 + 1176);
    uint64_t v60 = *(void *)(v0 + 1168);
    uint64_t v61 = *(void *)(v0 + 1160);
    uint64_t v107 = *(void *)(v0 + 1208);
    uint64_t v108 = *(void *)(v0 + 1152);
    (*(void (**)(void))(v59 + 32))();
    sub_1DA744928();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E29C8);
    uint64_t v62 = sub_1DA744938();
    uint64_t v63 = *(void *)(v62 - 8);
    unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1DA74E200;
    (*(void (**)(unint64_t, void, uint64_t))(v63 + 104))(v65 + v64, *MEMORY[0x1E4F27BF0], v62);
    sub_1DA6FB50C(v65);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1DA7448F8();
    sub_1DA744918();
    swift_bridgeObjectRelease();
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    v66(v58, v107);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v108);
    uint64_t v67 = sub_1DA744878();
    LOBYTE(v5_Block_object_dispose(&STACK[0x360], 8) = v68;
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v106, v110);
    if (v58) {
      uint64_t v69 = 0;
    }
    else {
      uint64_t v69 = v67;
    }
    uint64_t v132 = MEMORY[0x1E4FBB550];
    *(void *)&long long v131 = v69;
    *(unsigned char *)(v0 + 1261) = 9;
    sub_1DA744BB8();
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    v133[0] = v57;
    sub_1DA6FB3AC(&v131, v111, v70, v112);
    uint64_t v57 = v133[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418(v111);
    sub_1DA6EB5BC((uint64_t)v112, &qword_1EA8E26C0);
    v66(v105, v107);
  }
  *(void *)&long long v131 = *(void *)(v0 + 1240);
  uint64_t v71 = v131;
  uint64_t v72 = VSUserAccount.sourceIdentifier.getter();
  uint64_t v73 = MEMORY[0x1E4FBB1A0];
  uint64_t v132 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v131 = v72;
  *((void *)&v131 + 1) = v74;
  *(unsigned char *)(v0 + 1249) = 1;
  sub_1DA744BB8();
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v57;
  uint64_t v76 = v73;
  sub_1DA6FB3AC(&v131, v116, v75, v117);
  uint64_t v77 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v116);
  sub_1DA6EB5BC((uint64_t)v117, &qword_1EA8E26C0);
  *(void *)&long long v131 = v71;
  VSUserAccount.sourceType.getter(v133);
  uint64_t v78 = *(void *)(v0 + 1240);
  uint64_t v79 = *(void *)(v0 + 1144);
  uint64_t v80 = sub_1DA744A18();
  uint64_t v132 = v73;
  *(void *)&long long v131 = v80;
  *((void *)&v131 + 1) = v81;
  *(unsigned char *)(v0 + 1252) = 0;
  sub_1DA744BB8();
  char v82 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v77;
  sub_1DA6FB3AC(&v131, v119, v82, v121);
  uint64_t v83 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v119);
  sub_1DA6EB5BC((uint64_t)v121, &qword_1EA8E26C0);
  *(void *)&long long v131 = v78;
  VSUserAccount.updateURL.getter(v79);
  uint64_t v84 = sub_1DA7448C8();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  LODWORD(v73) = v86(v79, 1, v84);
  sub_1DA6EB5BC(v79, &qword_1EA8E2798);
  char v87 = 0;
  if (v73 != 1)
  {
    uint64_t v88 = *(void *)(v0 + 1136);
    *(void *)&long long v131 = *(void *)(v0 + 1240);
    VSUserAccount.updateURL.getter(v88);
    int v89 = v86(v88, 1, v84);
    uint64_t v90 = *(void *)(v0 + 1136);
    if (v89 == 1)
    {
      sub_1DA6EB5BC(*(void *)(v0 + 1136), &qword_1EA8E2798);
      char v87 = 1;
    }
    else
    {
      uint64_t v91 = sub_1DA744898();
      uint64_t v93 = v92;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v90, v84);
      if (v91 || v93 != 0xE000000000000000)
      {
        char v94 = sub_1DA744CB8();
        swift_bridgeObjectRelease();
        char v87 = v94 ^ 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        char v87 = 0;
      }
    }
  }
  uint64_t v95 = *(void **)(v0 + 1240);
  uint64_t v132 = MEMORY[0x1E4FBB390];
  LOBYTE(v131) = v87 & 1;
  *(unsigned char *)(v0 + 1255) = 6;
  sub_1DA744BB8();
  char v96 = swift_isUniquelyReferenced_nonNull_native();
  v133[0] = v83;
  sub_1DA6FB3AC(&v131, v125, v96, v128);
  uint64_t v97 = v133[0];
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v125);
  sub_1DA6EB5BC((uint64_t)v128, &qword_1EA8E26C0);
  *(void *)&long long v131 = v95;
  uint64_t v98 = VSUserAccount.accountProviderIdentifier.getter();
  uint64_t v100 = v99;

  if (v100)
  {
    uint64_t v132 = v76;
    *(void *)&long long v131 = v98;
    *((void *)&v131 + 1) = v100;
    *(unsigned char *)(v0 + 125_Block_object_dispose(&STACK[0x360], 8) = 4;
    sub_1DA744BB8();
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    v133[0] = v97;
    sub_1DA6FB3AC(&v131, v0 + 456, v101, (_OWORD *)(v0 + 568));
    uint64_t v97 = v133[0];
    swift_bridgeObjectRelease();
    sub_1DA6E3418(v0 + 456);
    sub_1DA6EB5BC(v0 + 568, &qword_1EA8E26C0);
  }
  uint64_t v102 = *(void *)(v0 + 1096);
  strcpy((char *)v102, "account_update");
  *(unsigned char *)(v102 + 15) = -18;
  *(void *)(v102 + 16) = v97;
  *(void *)(v102 + 24) = v129;
  *(void *)(v102 + 32) = v130;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v103 = *(uint64_t (**)(void))(v0 + 8);
  return v103();
}

uint64_t sub_1DA6FAE74()
{
  VSUserAccount.sourceType.getter(&v1);

  return sub_1DA744A18();
}

uint64_t sub_1DA6FAED0(uint64_t a1, uint64_t a2)
{
  return sub_1DA6FB16C(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1DA6FAEE8(uint64_t a1, id *a2)
{
  uint64_t result = sub_1DA7449F8();
  *a2 = 0;
  return result;
}

uint64_t sub_1DA6FAF60(uint64_t a1, id *a2)
{
  char v3 = sub_1DA744A08();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DA6FAFE0@<X0>(uint64_t *a1@<X8>)
{
  sub_1DA744A18();
  uint64_t v2 = sub_1DA7449E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA6FB024@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DA7449E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DA6FB06C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DA744A18();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DA6FB098(uint64_t a1)
{
  uint64_t v2 = sub_1DA6FB964(&qword_1EA8E29F8, (void (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue);
  uint64_t v3 = sub_1DA6FB964(&qword_1EA8E2A00, (void (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DA6FB154(uint64_t a1, uint64_t a2)
{
  return sub_1DA6FB16C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1DA6FB16C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DA744A18();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DA6FB1B0()
{
  sub_1DA744A18();
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6FB204()
{
  sub_1DA744A18();
  sub_1DA744CE8();
  sub_1DA744A28();
  uint64_t v0 = sub_1DA744D08();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DA6FB278()
{
  uint64_t v0 = sub_1DA744A18();
  uint64_t v2 = v1;
  if (v0 == sub_1DA744A18() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DA744CB8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1DA6FB304()
{
  unint64_t result = qword_1EA8E29B0;
  if (!qword_1EA8E29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E29B0);
  }
  return result;
}

unint64_t sub_1DA6FB358()
{
  unint64_t result = qword_1EA8E29C0;
  if (!qword_1EA8E29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E29C0);
  }
  return result;
}

_OWORD *sub_1DA6FB3AC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DA6E2DB8(a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a3 & 1) == 0)
  {
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_1DA6E3670();
      goto LABEL_7;
    }
    sub_1DA6E2DFC(v15, a3 & 1);
    unint64_t v21 = sub_1DA6E2DB8(a2);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1DA6E3260(a2, (uint64_t)v23);
      unint64_t result = sub_1DA6E352C(v12, (uint64_t)v23, a1, v18);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
LABEL_15:
    unint64_t result = (_OWORD *)sub_1DA744CD8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if ((v16 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  sub_1DA6E34CC((_OWORD *)(v18[7] + 32 * v12), a4);
  uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);

  return sub_1DA6E34CC(a1, v19);
}

uint64_t sub_1DA6FB50C(uint64_t a1)
{
  uint64_t v2 = sub_1DA744938();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8E2A08);
    uint64_t v9 = sub_1DA744BC8();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1DA6FB964(&qword_1EA8E2A10, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1DA7449C8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1DA6FB964(&qword_1EA8E2A18, MEMORY[0x1E4F27C88]);
          char v23 = sub_1DA7449D8();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        char v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void type metadata accessor for VSMetricAccountUpdateValue()
{
  if (!qword_1EA8E29D8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EA8E29D8);
    }
  }
}

ValueMetadata *type metadata accessor for VSAccountUpdateEvent()
{
  return &type metadata for VSAccountUpdateEvent;
}

uint64_t sub_1DA6FB88C()
{
  return sub_1DA6FB964(&qword_1EA8E29E0, (void (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue);
}

uint64_t sub_1DA6FB8D4()
{
  return sub_1DA6FB964(&qword_1EA8E29E8, (void (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue);
}

uint64_t sub_1DA6FB91C()
{
  return sub_1DA6FB964(&qword_1EA8E29F0, (void (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue);
}

uint64_t sub_1DA6FB964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

VideoSubscriberAccount::VSAccountUpdateKeys_optional __swiftcall VSAccountUpdateKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DA744C98();
  result.value = swift_bridgeObjectRelease();
  char v5 = 13;
  if (v3 < 0xD) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

void *static VSAccountUpdateKeys.allCases.getter()
{
  return &unk_1F34ACB30;
}

unint64_t VSAccountUpdateKeys.rawValue.getter()
{
  unint64_t result = 0x7954656372756F73;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4449656372756F73;
      break;
    case 2:
      unint64_t result = 0x65707954697061;
      break;
    case 3:
      unint64_t result = 0x7079546574697277;
      break;
    case 4:
      unint64_t result = 0x72656469766F7270;
      break;
    case 5:
      unint64_t result = 0x54746E756F636361;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
    case 8:
      unint64_t result = 0x7265696669646F6DLL;
      break;
    case 9:
      unint64_t result = 7107700;
      break;
    case 0xA:
      unint64_t result = 0x69547265626D756ELL;
      break;
    case 0xB:
    case 0xC:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DA6FBBAC()
{
  return sub_1DA6FBC10();
}

unint64_t sub_1DA6FBBBC()
{
  unint64_t result = qword_1EA8E2A20;
  if (!qword_1EA8E2A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2A20);
  }
  return result;
}

uint64_t sub_1DA6FBC10()
{
  unint64_t updated = VSAccountUpdateKeys.rawValue.getter();
  uint64_t v2 = v1;
  if (updated == VSAccountUpdateKeys.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DA744CB8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DA6FBCA8()
{
  return sub_1DA744D08();
}

uint64_t sub_1DA6FBD10()
{
  VSAccountUpdateKeys.rawValue.getter();
  sub_1DA744A28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA6FBD74()
{
  return sub_1DA744D08();
}

VideoSubscriberAccount::VSAccountUpdateKeys_optional sub_1DA6FBDD8(Swift::String *a1)
{
  return VSAccountUpdateKeys.init(rawValue:)(*a1);
}

unint64_t sub_1DA6FBDE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = VSAccountUpdateKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1DA6FBE10()
{
  unint64_t result = qword_1EA8E2A28;
  if (!qword_1EA8E2A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8E2A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8E2A28);
  }
  return result;
}

void sub_1DA6FBE6C(void *a1@<X8>)
{
  *a1 = &unk_1F34ACB30;
}

uint64_t getEnumTagSinglePayload for VSAccountUpdateKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VSAccountUpdateKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA6FBFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VSAccountUpdateKeys()
{
  return &type metadata for VSAccountUpdateKeys;
}

uint64_t sub_1DA6FC010()
{
  return 0x74656D5F72657375;
}

uint64_t VSUserMetadataEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSUserMetadataEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSUserMetadataEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSUserMetadataEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSUserMetadataEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSUserMetadataEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSUserMetadataEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSUserMetadataEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6FC210, 0, 0);
}

uint64_t sub_1DA6FC210()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  unsigned int v4 = sub_1DA6F9128();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[68] = v5;
  unsigned int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v0[70] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  BOOL v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSUserMetadataEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[65];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[63];

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[71] = v13;
  v0[72] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[73] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6FC3AC;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6FC3AC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6FC4AC, 0, 0);
}

void sub_1DA6FC4AC()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  int64_t v65 = 0;
  uint64_t v66 = v0 + 200;
  uint64_t v61 = v0 + 280;
  uint64_t v62 = v0 + 240;
  unint64_t v64 = (_OWORD *)(v0 + 352);
  uint64_t v3 = (_OWORD *)(v0 + 384);
  uint64_t v60 = (_OWORD *)(v0 + 448);
  unsigned int v4 = (unsigned char *)(v0 + 601);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v56 = v5 + 64;
  uint64_t v63 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v63 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v59 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = *(void **)(v0 + 592);
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v65 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v63 + 48) + 40 * v12, v2);
  sub_1DA6E32BC(*(void *)(v63 + 56) + 32 * v12, v0 + 128);
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v0 + 40)) {
      break;
    }
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
    *(_OWORD *)(v0 + 176) = v16;
    *(void *)(v0 + 192) = *(void *)(v1 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 56), v3);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 602) = *v4;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v19 = sub_1DA6E2DB8(v66);
      uint64_t v20 = v10[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      char v23 = v18;
      if (v10[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v18 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v23 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v67;
        unint64_t v24 = sub_1DA6E2DB8(v66);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_61;
        }
        unint64_t v19 = v24;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v23 & 1) == 0)
        {
LABEL_30:
          v10[(v19 >> 6) + 8] |= 1 << v19;
          sub_1DA6E3260(v66, v10[6] + 40 * v19);
          sub_1DA6E34CC(v64, (_OWORD *)(v10[7] + 32 * v19));
          uint64_t v26 = v10[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_67;
          }
          v10[2] = v28;
          goto LABEL_44;
        }
      }
      uint64_t v49 = (_OWORD *)(v10[7] + 32 * v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1DA6E34CC(v64, v49);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v50 = v0 + 200;
      goto LABEL_52;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 600) = *(unsigned char *)(v0 + 603);
      sub_1DA6F3FF4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v60);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v31 = sub_1DA6E2DB8(v62);
      uint64_t v32 = v10[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_66;
      }
      char v35 = v30;
      if (v10[3] >= v34)
      {
        if (v29)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v35 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v34, v29);
        uint64_t v10 = v67;
        unint64_t v36 = sub_1DA6E2DB8(v62);
        if ((v35 & 1) != (v37 & 1))
        {
LABEL_61:
          sub_1DA744CD8();
          return;
        }
        unint64_t v31 = v36;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v10[(v31 >> 6) + 8] |= 1 << v31;
          sub_1DA6E3260(v62, v10[6] + 40 * v31);
          sub_1DA6E34CC(v60, (_OWORD *)(v10[7] + 32 * v31));
          uint64_t v38 = v10[2];
          BOOL v27 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v27) {
            goto LABEL_68;
          }
          v10[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          uint64_t v50 = v0 + 240;
LABEL_52:
          sub_1DA6E3418(v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
          sub_1DA6E3418(v0 + 160);
          unsigned int v4 = (unsigned char *)(v0 + 601);
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      uint64_t v51 = (_OWORD *)(v10[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      sub_1DA6E34CC(v60, v51);
      goto LABEL_51;
    }
    (*(void (**)(void, void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 544), *(void *)(v0 + 496));
    sub_1DA6E3260(v0 + 160, v61);
    char v40 = sub_1DA744978();
    os_log_type_t v41 = sub_1DA744AF8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v57 = *(void *)(v0 + 512);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v43 = *(void *)(v0 + 496);
    if (v42)
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v67 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1DA744B78();
      *(void *)(v44 + 4) = sub_1DA6E2760(v46, v47, (uint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v61);
      _os_log_impl(&dword_1DA674000, v40, v41, "VSUserMetadataEvent received invalid metadata key: %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v45, -1, -1);
      uint64_t v48 = v44;
      uint64_t v1 = v0 + 16;
      MEMORY[0x1E0174100](v48, -1, -1);
    }
    else
    {

      sub_1DA6E3418(v61);
    }
    v58(v57, v43);
    uint64_t v3 = (_OWORD *)(v0 + 384);
    __swift_destroy_boxed_opaque_existential_0(v0 + 384);
    sub_1DA6E3418(v0 + 160);
    uint64_t v2 = v0 + 88;
    unsigned int v4 = (unsigned char *)(v0 + 601);
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      goto LABEL_65;
    }
    if (v13 < v59)
    {
      unint64_t v14 = *(void *)(v56 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v65 + 2;
      ++v65;
      if (v13 + 1 < v59)
      {
        unint64_t v14 = *(void *)(v56 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v65 = v13 + 1;
        if (v13 + 2 < v59)
        {
          unint64_t v14 = *(void *)(v56 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v65 = v13 + 2;
          if (v13 + 3 < v59)
          {
            unint64_t v14 = *(void *)(v56 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v59)
                {
                  int64_t v65 = v59 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v56 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_69:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v9 = (v14 - 1) & v14;
            unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v65 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v52 = *(void *)(v0 + 536);
  uint64_t v53 = *(void *)(v0 + 528);
  uint64_t v54 = *(void *)(v0 + 480);
  swift_release();
  strcpy((char *)v54, "user_metadata");
  *(_WORD *)(v54 + 14) = -4864;
  *(void *)(v54 + 16) = v10;
  *(void *)(v54 + 24) = v53;
  *(void *)(v54 + 32) = v52;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(void (**)(void))(v0 + 8);
  v55();
}

ValueMetadata *type metadata accessor for VSUserMetadataEvent()
{
  return &type metadata for VSUserMetadataEvent;
}

uint64_t sub_1DA6FCCCC(uint64_t a1)
{
  return sub_1DA6FCD74(a1, qword_1EA8E5418);
}

uint64_t sub_1DA6FCCE0()
{
  return sub_1DA6FCE1C(&qword_1EA8E5410, (uint64_t)qword_1EA8E5418);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t debugLog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6FCE94(&qword_1EA8E5410, (uint64_t)qword_1EA8E5418, a1);
}

uint64_t sub_1DA6FCD60(uint64_t a1)
{
  return sub_1DA6FCD74(a1, qword_1EA8E5438);
}

uint64_t sub_1DA6FCD74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DA744998();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1DA744A18();
  sub_1DA744A18();
  return sub_1DA744988();
}

uint64_t sub_1DA6FCDF8()
{
  return sub_1DA6FCE1C(&qword_1EA8E5430, (uint64_t)qword_1EA8E5438);
}

uint64_t sub_1DA6FCE1C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DA744998();

  return __swift_project_value_buffer(v3, a2);
}

uint64_t errorLog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA6FCE94(&qword_1EA8E5430, (uint64_t)qword_1EA8E5438, a1);
}

uint64_t sub_1DA6FCE94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DA744998();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

Swift::Void __swiftcall VSMetricsEventProtocol.record()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = *sub_1DA6ECD74();
  v8[3] = v4;
  void v8[4] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_0, v2, v4);
  uint64_t v7 = *(void (**)(uint64_t *))(*(void *)v5 + 96);
  swift_retain();
  v7(v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
}

uint64_t sub_1DA6FD04C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DA6E2664;
  return MEMORY[0x1F4188298](sub_1DA6FD10C, 0, 0);
}

uint64_t static VSMetricsEventProtocol.generateBaseFields()()
{
  return MEMORY[0x1F4188298](sub_1DA6FD10C, 0, 0);
}

uint64_t sub_1DA6FD10C()
{
  unint64_t v1 = sub_1DA6EDAC4(MEMORY[0x1E4FBC860]);
  id v2 = objc_msgSend(self, sel_sharedAccountStore);
  id v3 = objc_msgSend(v2, sel_firstAccount);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_identityProviderID);

    id v5 = objc_msgSend(v4, sel_object);
    if (v5)
    {
      *(unsigned char *)(v0 + 56) = 3;
      sub_1DA6E3858();
      sub_1DA744BB8();
      *(void *)(v0 + 112) = sub_1DA6FD770();
      *(void *)(v0 + 8_Block_object_dispose(&STACK[0x360], 8) = v5;
      sub_1DA6E34CC((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
      id v6 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1DA6E3114((_OWORD *)(v0 + 56), v0 + 16, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v0 + 16);
    }
  }
  *(unsigned char *)(v0 + 56) = 4;
  sub_1DA6E3858();
  sub_1DA744BB8();
  uint64_t v8 = self;
  id v9 = objc_msgSend(self, sel_currentProcess);
  id v10 = objc_msgSend(v8, sel_userAgentForProcessInfo_, v9);

  uint64_t v11 = sub_1DA744A18();
  uint64_t v13 = v12;

  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 112) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 8_Block_object_dispose(&STACK[0x360], 8) = v11;
  *(void *)(v0 + 96) = v13;
  sub_1DA6E34CC((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA6E3114((_OWORD *)(v0 + 56), v0 + 16, v15);
  swift_bridgeObjectRelease();
  sub_1DA6E3418(v0 + 16);
  id v16 = objc_msgSend(self, sel_ams_sharedAccountStoreForMediaType_, 0);
  id v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    *(unsigned char *)(v0 + 56) = 5;
    sub_1DA744BB8();
    id v18 = objc_msgSend(v17, sel_ams_storefront);
    if (v18)
    {
      unint64_t v19 = v18;
      uint64_t v20 = sub_1DA744A18();
      uint64_t v22 = v21;

      *(void *)(v0 + 80) = v14;
      *(void *)(v0 + 56) = v20;
      *(void *)(v0 + 64) = v22;
      sub_1DA6E34CC((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_1DA6E3114((_OWORD *)(v0 + 88), v0 + 16, v23);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v0 + 16);
    }
    else
    {
      sub_1DA6FD4A8(v0 + 16, (_OWORD *)(v0 + 88));
      sub_1DA6E3418(v0 + 16);
      sub_1DA6E346C(v0 + 88);
    }
  }
  unint64_t v24 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v24(v1);
}

double sub_1DA6FD4A8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DA6E2DB8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA6E3670();
      uint64_t v9 = v11;
    }
    sub_1DA6E3418(*(void *)(v9 + 48) + 40 * v6);
    sub_1DA6E34CC((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1DA6FD5A4(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_1DA6FD5A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1DA744B68();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DA6E3260(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_1DA744B88();
        double result = sub_1DA6E3418((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            id v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              _OWORD *v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DA6FD770()
{
  unint64_t result = qword_1EA8E2A50;
  if (!qword_1EA8E2A50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA8E2A50);
  }
  return result;
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.topic.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.record()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static VSMetricsEventProtocol.generateBaseFields()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 56) + **(int **)(a2 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1DA6E4D08;
  return v7(a1, a2);
}

unint64_t sub_1DA6FD918()
{
  return 0xD000000000000019;
}

uint64_t VSProhibitedTemplateEvent.eventType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSProhibitedTemplateEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSProhibitedTemplateEvent.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSProhibitedTemplateEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSProhibitedTemplateEvent.topic.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSProhibitedTemplateEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSProhibitedTemplateEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSProhibitedTemplateEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  v2[60] = a1;
  v2[61] = a2;
  uint64_t v3 = sub_1DA744998();
  v2[62] = v3;
  v2[63] = *(void *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DA6FDB10, 0, 0);
}

uint64_t sub_1DA6FDB10()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[63];
  uint64_t v4 = sub_1DA6F9128();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DA6FCCE0();
  v0[68] = v5;
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v0[70] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  uint64_t v7 = sub_1DA744978();
  os_log_type_t v8 = sub_1DA744AE8();
  if (os_log_type_enabled(v7, v8))
  {
    long long v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v9 = 0;
    _os_log_impl(&dword_1DA674000, v7, v8, "VSProhibitedTemplateEvent", v9, 2u);
    MEMORY[0x1E0174100](v9, -1, -1);
  }
  uint64_t v10 = v0[65];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[63];

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[71] = v13;
  v0[72] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v10, v11);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[73] = v14;
  void *v14 = v0;
  v14[1] = sub_1DA6FDCAC;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1DA6FDCAC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DA6FDDAC, 0, 0);
}

void sub_1DA6FDDAC()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 88;
  int64_t v65 = 0;
  uint64_t v66 = v0 + 200;
  uint64_t v61 = v0 + 280;
  uint64_t v62 = v0 + 240;
  unint64_t v64 = (_OWORD *)(v0 + 352);
  uint64_t v3 = (_OWORD *)(v0 + 384);
  uint64_t v60 = (_OWORD *)(v0 + 448);
  uint64_t v4 = (unsigned char *)(v0 + 601);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v56 = v5 + 64;
  uint64_t v63 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v63 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v59 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = *(void **)(v0 + 592);
  if ((v7 & v6) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v65 << 6);
LABEL_5:
  sub_1DA6E3260(*(void *)(v63 + 48) + 40 * v12, v2);
  sub_1DA6E32BC(*(void *)(v63 + 56) + 32 * v12, v0 + 128);
  while (1)
  {
    sub_1DA6E3318(v2, v1);
    if (!*(void *)(v0 + 40)) {
      break;
    }
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
    *(_OWORD *)(v0 + 176) = v16;
    *(void *)(v0 + 192) = *(void *)(v1 + 32);
    sub_1DA6E34CC((_OWORD *)(v0 + 56), v3);
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 602) = *v4;
      sub_1DA6E3858();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v19 = sub_1DA6E2DB8(v66);
      uint64_t v20 = v10[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      char v23 = v18;
      if (v10[3] >= v22)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v18 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v23 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v22, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v67;
        unint64_t v24 = sub_1DA6E2DB8(v66);
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_61;
        }
        unint64_t v19 = v24;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v23 & 1) == 0)
        {
LABEL_30:
          v10[(v19 >> 6) + 8] |= 1 << v19;
          sub_1DA6E3260(v66, v10[6] + 40 * v19);
          sub_1DA6E34CC(v64, (_OWORD *)(v10[7] + 32 * v19));
          uint64_t v26 = v10[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_67;
          }
          v10[2] = v28;
          goto LABEL_44;
        }
      }
      uint64_t v49 = (_OWORD *)(v10[7] + 32 * v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_1DA6E34CC(v64, v49);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v50 = v0 + 200;
      goto LABEL_52;
    }
    sub_1DA744BA8();
    if (swift_dynamicCast())
    {
      *(unsigned char *)(v0 + 600) = *(unsigned char *)(v0 + 603);
      sub_1DA6F3FF4();
      sub_1DA744BB8();
      sub_1DA6E32BC((uint64_t)v3, (uint64_t)v60);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v10;
      unint64_t v31 = sub_1DA6E2DB8(v62);
      uint64_t v32 = v10[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_66;
      }
      char v35 = v30;
      if (v10[3] >= v34)
      {
        if (v29)
        {
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1DA6E3670();
          uint64_t v10 = v67;
          uint64_t v3 = (_OWORD *)(v0 + 384);
          if ((v35 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1DA6E2DFC(v34, v29);
        uint64_t v10 = v67;
        unint64_t v36 = sub_1DA6E2DB8(v62);
        if ((v35 & 1) != (v37 & 1))
        {
LABEL_61:
          sub_1DA744CD8();
          return;
        }
        unint64_t v31 = v36;
        uint64_t v3 = (_OWORD *)(v0 + 384);
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v10[(v31 >> 6) + 8] |= 1 << v31;
          sub_1DA6E3260(v62, v10[6] + 40 * v31);
          sub_1DA6E34CC(v60, (_OWORD *)(v10[7] + 32 * v31));
          uint64_t v38 = v10[2];
          BOOL v27 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v27) {
            goto LABEL_68;
          }
          v10[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          uint64_t v50 = v0 + 240;
LABEL_52:
          sub_1DA6E3418(v50);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
          sub_1DA6E3418(v0 + 160);
          uint64_t v4 = (unsigned char *)(v0 + 601);
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_6;
        }
      }
      uint64_t v51 = (_OWORD *)(v10[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      sub_1DA6E34CC(v60, v51);
      goto LABEL_51;
    }
    (*(void (**)(void, void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 544), *(void *)(v0 + 496));
    sub_1DA6E3260(v0 + 160, v61);
    char v40 = sub_1DA744978();
    os_log_type_t v41 = sub_1DA744AF8();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v57 = *(void *)(v0 + 512);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v43 = *(void *)(v0 + 496);
    if (v42)
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v67 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1DA744B78();
      *(void *)(v44 + 4) = sub_1DA6E2760(v46, v47, (uint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1DA6E3418(v61);
      _os_log_impl(&dword_1DA674000, v40, v41, "VSProhibitedTemplateEvent received invalid metadata key: %s", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E0174100](v45, -1, -1);
      uint64_t v48 = v44;
      uint64_t v1 = v0 + 16;
      MEMORY[0x1E0174100](v48, -1, -1);
    }
    else
    {

      sub_1DA6E3418(v61);
    }
    v58(v57, v43);
    uint64_t v3 = (_OWORD *)(v0 + 384);
    __swift_destroy_boxed_opaque_existential_0(v0 + 384);
    sub_1DA6E3418(v0 + 160);
    uint64_t v2 = v0 + 88;
    uint64_t v4 = (unsigned char *)(v0 + 601);
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      goto LABEL_65;
    }
    if (v13 < v59)
    {
      unint64_t v14 = *(void *)(v56 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v65 + 2;
      ++v65;
      if (v13 + 1 < v59)
      {
        unint64_t v14 = *(void *)(v56 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v65 = v13 + 1;
        if (v13 + 2 < v59)
        {
          unint64_t v14 = *(void *)(v56 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v65 = v13 + 2;
          if (v13 + 3 < v59)
          {
            unint64_t v14 = *(void *)(v56 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v59)
                {
                  int64_t v65 = v59 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v56 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_69:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v9 = (v14 - 1) & v14;
            unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v65 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v9 = 0;
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 4_Block_object_dispose(&STACK[0x360], 8) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  uint64_t v52 = *(void *)(v0 + 536);
  uint64_t v53 = *(void *)(v0 + 528);
  uint64_t v54 = *(void **)(v0 + 480);
  swift_release();
  *uint64_t v54 = 0xD000000000000019;
  v54[1] = 0x80000001DA767D30;
  v54[2] = v10;
  v54[3] = v53;
  v54[4] = v52;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(void (**)(void))(v0 + 8);
  v55();
}

ValueMetadata *type metadata accessor for VSProhibitedTemplateEvent()
{
  return &type metadata for VSProhibitedTemplateEvent;
}

uint64_t sub_1DA6FE5C4()
{
  return swift_deallocClassInstance();
}

id sub_1DA6FE5D4()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EA8E5458 = (uint64_t)result;
  return result;
}

uint64_t sub_1DA6FE628()
{
  uint64_t v0 = sub_1DA744968();
  __swift_allocate_value_buffer(v0, qword_1EA8E5488);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA8E5488);
  if (qword_1EA8E5450 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA8E5458;
  return sub_1DA744958();
}

uint64_t sub_1DA6FE6D8()
{
  if (qword_1EA8E5460 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DA744968();

  return __swift_project_value_buffer(v0, (uint64_t)qword_1EA8E5488);
}

uint64_t sub_1DA6FE73C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA8E5460 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DA744968();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA8E5488);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void *sub_1DA6FE808(void *result)
{
  *id result = ++qword_1EA8E5468;
  return result;
}

uint64_t sub_1DA6FE824(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1DA6FEA80(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1DA6FEC10(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&void v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1DA6FEE00(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1DA6FEF7C(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3550) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - dword_1EA8E3550) ^ 0xF0))] ^ 0x2A])
                - 52);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1F34B17C0
       + (*((unsigned char *)off_1F34B1C38
                                         + (*((unsigned __int8 *)off_1F34B1A10
                                            + (-93 * ((qword_1EA8E3538 + v2) ^ 0xF0))
                                            - 8) ^ 0x72u)) ^ (-93 * ((qword_1EA8E3538 + v2) ^ 0xF0)))
       + 29);
  uint64_t v4 = (*v3 ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 192840611 * (v4 - 0x2F1F548F835ED4F0);
  *uint64_t v3 = 192840611 * (v4 ^ 0x2F1F548F835ED4F0);
  uint64_t v8 = a1;
  unsigned int v9 = 1374699841 * ((657856293 - (&v7 | 0x27361725) + (&v7 | 0xD8C9E8DA)) ^ 0xB53DF0D3)
     + 1433;
  LOBYTE(v3) = -93 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xF0);
  (*((void (**)(unsigned int *))*(&off_1F34B17C0
                                           + ((-93
                                                                            * (dword_1EA8E3550 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA756D70[byte_1DA752540[(-93 * (dword_1EA8E3550 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0x2A])
                                           + 29)
   + (*((unsigned char *)off_1F34B1920
                                     + (*((unsigned __int8 *)off_1F34B1A58 + v3 - 4) ^ 0x79u)
                                     - 8) ^ v3)
   + 1839))(&v7);
  return v7;
}

uint64_t sub_1DA6FF174(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F34B1A38 + (*((unsigned char *)off_1F34B1940 + a2 - 8) ^ a1)) ^ a2;
}

uint64_t sub_1DA6FF1A0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B19B8
         + (*((unsigned __int8 *)off_1F34B1C20 + a1 - 12) ^ 0xD4u)
         - 4) ^ a1;
}

uint64_t sub_1DA6FF1D0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F34B1920
         + (*((unsigned char *)off_1F34B1A58 + a2 - 4) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_1DA6FF1FC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1990
         + (*((unsigned __int8 *)off_1F34B17F8 + a1 - 12) ^ 0xDAu)
         - 4) ^ a1;
}

uint64_t sub_1DA6FF22C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1920 + (*((unsigned __int8 *)off_1F34B1A58 + a1 - 4) ^ 0x79u)
                                            - 8) ^ a1;
}

uint64_t sub_1DA6FF25C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1920 + (*((unsigned __int8 *)off_1F34B1A58 + a1 - 4) ^ 0x3Eu)
                                            - 8) ^ a1;
}

uint64_t sub_1DA6FF288(unsigned int a1)
{
  return (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + a1 - 8) ^ 0x4B] ^ a1;
}

uint64_t sub_1DA6FF2B4(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * ((qword_1EA8E3538 + dword_1EA8E36E0) ^ 0xF0)) ^ byte_1DA759EE0[byte_1DA756E70[(-93 * ((qword_1EA8E3538 + dword_1EA8E36E0) ^ 0xF0))] ^ 0x24])
                - 112);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1F34B17C0
       + (*((unsigned char *)off_1F34B1C38
                           + (*((unsigned __int8 *)off_1F34B1A10
                              + (-93 * (v2 ^ qword_1EA8E3538 ^ 0xF0))
                              - 8) ^ 0x3Eu)) ^ (-93 * (v2 ^ qword_1EA8E3538 ^ 0xF0)))
       - 76);
  unint64_t v4 = (unint64_t)&v6[*v3 ^ v2];
  *(void *)(v1 - 4) = 192840611 * v4 + 0x2F1F548F835ED4F0;
  *uint64_t v3 = 192840611 * (v4 ^ 0x2F1F548F835ED4F0);
  uint64_t v7 = a1;
  unsigned int v8 = 535753261 * ((2 * (&v7 & 0x646DB7C8) - &v7 + 462571572) ^ 0x1166461B) + 784;
  LODWORD(v3) = 192840611 * (*(_DWORD *)(v1 - 4) ^ 0x835ED4F0 ^ *(_DWORD *)v3);
  return (*((uint64_t (**)(uint64_t *))*(&off_1F34B17C0
                                                + ((-93 * ((qword_1EA8E3538 + dword_1EA8E36E0) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 + dword_1EA8E36E0) ^ 0xF0))] ^ 0x3C])
                                                - 89)
          + (*((unsigned char *)off_1F34B1A38
                                            + (*((unsigned __int8 *)off_1F34B1940 + v3 - 8) ^ 0x24u)) ^ v3)
          + 1798))(&v7);
}

uint64_t sub_1DA6FF4A0(unsigned int a1)
{
  return (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + a1 - 8) ^ 0xB8] ^ a1;
}

uint64_t sub_1DA6FF4CC(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F34B19B8
         + (*((unsigned char *)off_1F34B1C20 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1DA6FF4F8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1C38 + (*((unsigned __int8 *)off_1F34B1A10 + a1 - 8) ^ 0x7Eu)) ^ a1;
}

uint64_t sub_1DA6FF520(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F34B1990
         + (*((unsigned char *)off_1F34B17F8 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1DA6FF54C(unsigned int a1)
{
  return (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + a1 - 8) ^ 0x2A] ^ a1;
}

uint64_t sub_1DA6FF578(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1C38 + (*((unsigned __int8 *)off_1F34B1A10 + a1 - 8) ^ 0x3Eu)) ^ a1;
}

uint64_t sub_1DA6FF5A0(unsigned int a1)
{
  return (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + a1 - 8) ^ 0x3C] ^ a1;
}

uint64_t sub_1DA6FF5C8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1A38 + (*((unsigned __int8 *)off_1F34B1940 + a1 - 8) ^ 0xDDu)) ^ a1;
}

uint64_t sub_1DA6FF5F4(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3548) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - dword_1EA8E3548) ^ 0xF0))] ^ 0x2A])
                + 11);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (unint64_t *)*(&off_1F34B17C0
                           + ((-93 * ((qword_1EA8E3538 - v2) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - v2) ^ 0xF0))] ^ 0x54])
                           - 89);
  unint64_t v4 = 192840611 * ((unint64_t)&v6[*v3 ^ v2] ^ 0x2F1F548F835ED4F0);
  *(void *)(v1 - 4) = v4;
  *uint64_t v3 = v4;
  uint64_t v8 = a1;
  unsigned int v7 = (1178560073 * ((((2 * &v7) | 0x856349AA) - &v7 - 1118938325) ^ 0xEF269870)) ^ 0x258;
  LOBYTE(v3) = -93 * (*(_DWORD *)(v1 - 4) ^ 0xF0 ^ *(_DWORD *)v3);
  return (*((uint64_t (**)(unsigned int *))*(&off_1F34B17C0
                                                     + ((-93
                                                                                      * ((qword_1EA8E3538
                                                                                        - dword_1EA8E3548) ^ 0xF0)) ^ byte_1DA752740[byte_1DA75DD10[(-93 * ((qword_1EA8E3538 - dword_1EA8E3548) ^ 0xF0))] ^ 0xE3])
                                                     + 134)
          + (*((unsigned char *)off_1F34B1920
                                            + (*((unsigned __int8 *)off_1F34B1A58 + v3 - 4) ^ 0x97u)
                                            - 8) ^ v3)
          + 2015))(&v7);
}

uint64_t sub_1DA6FF7E4(char a1, unsigned int a2)
{
  return (*off_1F34B1CF8)[(*((unsigned char *)off_1F34B19E0 + a2 - 8) ^ a1)] ^ a2;
}

uint64_t sub_1DA6FF810(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1A38 + (*((unsigned __int8 *)off_1F34B1940 + a1 - 8) ^ 0x24u)) ^ a1;
}

uint64_t sub_1DA6FF83C(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F34B1C38 + (*((unsigned char *)off_1F34B1A10 + a2 - 8) ^ a1)) ^ a2;
}

uint64_t sub_1DA6FF868(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1920 + (*((unsigned __int8 *)off_1F34B1A58 + a1 - 4) ^ 0x97u)
                                            - 8) ^ a1;
}

uint64_t sub_1DA6FF898(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1C38 + (*((unsigned __int8 *)off_1F34B1A10 + a1 - 8) ^ 0xE3u)) ^ a1;
}

uint64_t sub_1DA6FF8C4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B1C38 + (*((unsigned __int8 *)off_1F34B1A10 + a1 - 8) ^ 0x72u)) ^ a1;
}

uint64_t sub_1DA6FF8F0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F34B19B8
         + (*((unsigned __int8 *)off_1F34B1C20 + a1 - 12) ^ 0xEFu)
         - 4) ^ a1;
}

uint64_t sub_1DA6FF920(unsigned int a1)
{
  return (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + a1 - 8) ^ 0x54] ^ a1;
}

void sub_1DA6FF94C(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 1755732067 * ((((2 * a1) | 0x5E2356CE) - a1 - 789687143) ^ 0xF1D716BC);
  uint64_t v2 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502) - 696851460 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502) - 696851460;
  }
  else {
    unsigned int v4 = 696851460 - *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x11127EB20C1B7502) - 696851460 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x11127EB20C1B7502) - 696851460;
  }
  else {
    unsigned int v5 = 696851460 - *(_DWORD *)(v3 - 0x11127EB20C1B7502);
  }
  unsigned int v9 = v1 - 1178560073 * (&v8 ^ 0xAD973CA5) - 1671;
  uint64_t v8 = v2;
  char v6 = (char *)*(&off_1F34B17C0 + (v1 ^ 0x7DD)) - 8;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0xF52)])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA6FFADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  *(void *)(v31 - 120) = v28;
  *(void *)(v31 - 112) = a22;
  *(void *)(v31 - 144) = v28;
  *(void *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 104) = v29
                         + 628203409 * ((((v31 - 144) | 0x4A789E56) - ((v31 - 144) & 0x4A789E56)) ^ 0xC8F09265)
                         + 1530;
  *(void *)(v31 - 12_Block_object_dispose(&STACK[0x360], 8) = a24;
  uint64_t v32 = v27;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v29 + 1628)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v32
                                            + 8
                                            * ((482
                                              * ((((v29 ^ 0x50E) + 1183807297) & 0xB970873D ^ 0xE0A1CDA8) + a27 < 0x7FFFFFFF)) ^ ((v29 ^ 0x50E) - 430))))(v33);
}

uint64_t sub_1DA6FFB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = v3 + 210;
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 2082287903;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 696851460;
  *(void *)(*(void *)(a1 + 96) + 80_Block_object_dispose(&STACK[0x360], 8) = *(void *)(a1 + 96) + 816;
  uint64_t v6 = *(void *)(a1 + 96) + 0x11127EB20C1B7826;
  unsigned int v7 = 535753261
     * ((-2 - ((&v9 ^ 0x8C848800 | 0x722B62D9) + (&v9 ^ 0x300B6258 | 0x8DD49D26))) ^ 0x49841B88);
  uint64_t v11 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v5);
  uint64_t v9 = v6;
  int v12 = (v5 + 775911648) ^ v7;
  int v13 = v7 + v4 + 942;
  (*(void (**)(uint64_t *))(a3 + 8 * (v4 ^ 0x8EFu)))(&v9);
  return v10 ^ (v4 + 759403544);
}

uint64_t sub_1DA6FFC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v14 = *(_DWORD *)(v13 - 220 + ((v11 + v7) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a3 + (v11 + v7 + 1)) = (BYTE2(v14) ^ 0x79) - ((2 * (BYTE2(v14) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a3 + (v11 + v7)) = (HIBYTE(v14) ^ 0xB6)
                                            - (((v9 - a7) ^ 0xFB) & (2 * (HIBYTE(v14) ^ 0xB6)))
                                            + 95;
  *(unsigned char *)(a3 + (v11 + v7 + 2)) = (BYTE1(v14) ^ 0xA3) + (~(2 * (BYTE1(v14) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a3 + (v11 + v7 + 3)) = v14 ^ 0x61;
  unsigned int v15 = *(_DWORD *)(v13 - 128) + 177179283;
  BOOL v16 = v15 < v8;
  BOOL v17 = v11 + 949437166 < v15;
  if (v11 + 949437166 < v8 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v17 * v10) ^ v9)))();
}

uint64_t sub_1DA6FFD5C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((5 * (a1 ^ 0xD5)) ^ 0x511) * ((v1 + 2013263853) < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_1DA6FFDBC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1127
                                * ((((v3 - 277) ^ v2) & (2 * (*(unsigned __int8 *)(v1 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v1 + 4) - 247) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA6FFDFC(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1355 * (((v3 + ((v4 - 10) ^ 0xD8) - 854) & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_1DA6FFE48@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x584]) = a1;
  uint64_t v8 = (*(uint64_t (**)(unint64_t, void))(v6 + 8 * (v2 + 356)))(STACK[0x3D8], 0);
  int v9 = v5[4] + v4 - (((v2 - 1476) ^ (v3 - 241)) & (2 * v5[4]));
  v5[1] = v5[6] + v4 - (v3 & (2 * v5[6]));
  v5[2] = v9;
  int v10 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v2 ^ 0x121)))(v8);
  v5[3] = v10 + v4 - (v3 & (2 * v10));
  int v11 = (*(uint64_t (**)(void))(v6 + 8 * (v2 + 287)))();
  _DWORD *v5 = v11 + v4 - (v3 & (2 * v11));
  int v12 = (((*v1 >> 30) ^ 1) + 1726148018 - 4 * (*v1 >> 31)) ^ *v1;
  unsigned int v13 = (*v5 ^ 0x66E2EDB2) + ((1664525 * v12 + 1726148018 - ((3329050 * v12) & 0xCDC5DB64)) ^ v1[1]);
  v1[1] = v13 + 1726148018 - ((2 * v13) & 0xCDC5DB64);
  unint64_t v14 = 1224239923 * ((v7 - 0x12D2F8124E46BE0DLL - 2 * ((v7 - 192) & 0xED2D07EDB1B942B3)) ^ 0xC577B284430ABF64);
  *(_DWORD *)(v7 - 152) = v14;
  *(void *)(v7 - 16_Block_object_dispose(&STACK[0x360], 8) = v14 ^ 0x4842C85A;
  *(void *)(v7 - 160) = v14 + 1212336216;
  *(_DWORD *)(v7 - 192) = (v2 + 1739640251) ^ v14;
  *(_DWORD *)(v7 - 18_Block_object_dispose(&STACK[0x360], 8) = (v2 + 1739640292) ^ v14;
  *(_DWORD *)(v7 - 184) = ((v2 + 1739640251) ^ 0x46) - v14;
  *(_DWORD *)(v7 - 180) = (v2 - 504208785) ^ v14;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v2 - 1476) ^ 0x68D)))(v7 - 192);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * *(int *)(v7 - 176)))(v15);
}

uint64_t sub_1DA70005C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((110
                                                                                 * (v7 < ((((a7 - 830) | 0x30) + 423) ^ (a7 - 1688160598) & 0x649F47DEu))) ^ a7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1DA7000B0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((7
                                * ((int)((v3 ^ 0x97CFFFF3) + 2046479344 + (v0 & 0x2F9FFFE6) - 298503140) > ((v1 - 363) | 0x44) - 725)) ^ v1)))();
}

uint64_t sub_1DA700148@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  if (!a1) {
    return (*(uint64_t (**)(void))(v58 + 8 * ((572 * ((a12 - 1609527313) < 0x10)) ^ (v59 + v60))))();
  }
  if (a1 != 3) {
    return (*(uint64_t (**)(void))(v58
  }
                                + 8
                                * ((1287
                                  * (*(_DWORD *)(v57 + 48 * v56 + 36) + 1965244709 < (((v60 + 1570054919) | 0x108) ^ 0x8000010C))) ^ (v60 + 1570055183))))();
  uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 48 * v56 + 8))(a3, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((686 * (v61 + 2058996701 - ((2 * v61) & 0xF57397BA) == 2058996701)) ^ (v59 + v60))))(v61, v62, v63, v64, 2058996701, v65, v66, 2542673174, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1DA7002BC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v13 = v7 ^ 0x4C6;
  BOOL v14 = *(_DWORD *)(v11 + ((((v13 ^ v9) * v8) ^ (a2 + 1038)) + v10) * (uint64_t)a7) != 31 * (v13 ^ a1) + a6;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v14 | (8 * v14)) ^ v13)))();
}

uint64_t sub_1DA7002C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(a4 + v7) = *v5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 0) * v6) | v4)))();
}

uint64_t sub_1DA7002F4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((116 * ((v1 ^ 0x126) != 65)) ^ (v1 + 1182))))(a1, 115);
}

uint64_t sub_1DA700350@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 == (v1 - v3 - 670) - 1570055183) * (v1 + 246)) ^ v1)))();
}

uint64_t sub_1DA700384(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = (unsigned __int8 *)(*(void *)(v11 + 8 * (v8 ^ (a3 - 85))) - 4);
  uint64_t v13 = (v8 - a3 + 1424) | 0x67u;
  BOOL v15 = ((**(unsigned __int8 **)(a8 + 80) - (*v12 ^ 0x5F)) ^ (v13 - 39852536))
      + ((2 * (**(unsigned __int8 **)(a8 + 80) - (*v12 ^ 0x5F))) & 0xFB3FD7FE)
      + 2063054684 != v10
     || (v13 ^ 0x30530205D3E9234BLL) == 0x30530205D3E926B3;
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * (int)((838 * v15) ^ v13)))(103);
}

uint64_t sub_1DA7003E8@<X0>(int a1@<W0>, _OWORD *a2@<X8>)
{
  *(_OWORD *)(v3 + (v2 + v6)) = *a2;
  return (*(uint64_t (**)(_OWORD *))(v7
                                             + 8
                                             * (int)(((((v4 + v5 - 1209) & 0x1FFFFFFF0) == 16)
                                                    * ((((a1 + 347263297) & 0xEB4D2DF6) - 523740856) & 0x1F37A77F ^ 0x73A)) ^ (a1 + 347263297) & 0xEB4D2DF6)))(a2 + 1);
}

void sub_1DA700474()
{
  if ((*(_DWORD *)(v2 - 0x11127EB20C1B7502) - 696851461) >= 0x7FFFFFFF) {
    int v3 = v1;
  }
  else {
    int v3 = v1 + 2;
  }
  *(_DWORD *)(v0 + _Block_object_dispose(&STACK[0x360], 8) = v3;
}

uint64_t sub_1DA7004A8@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v3 = 115 * (a2 ^ 0x1A7);
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v2 + 8 * (a2 + 1663)))(*(unsigned int *)STACK[0x2F0], a1, LODWORD(STACK[0x5D4]));
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((11 * (((v3 - 1300) | 0x404) ^ 0x4C1) - 14)
                                              * (LODWORD(STACK[0x4F8]) == 2058996701)) ^ v3)))(v4);
}

uint64_t sub_1DA700524@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a2 + v5) = *(unsigned char *)(v8 + (v4 + a1))
                      - ((2 * *(unsigned char *)(v8 + (v4 + a1))) & 0xBF)
                      + 95;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 63) * v6) ^ (a3 + a4 + 924))))();
}

uint64_t sub_1DA700570@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  BOOL v3 = a1 == (((v2 - 817) | 0x80) ^ 0x5F7B83C0) + ((v2 - 1093410735) & 0x412C1BFE);
  return (*(uint64_t (**)(void))(a2 + 8 * ((v3 | (4 * v3)) ^ v2)))();
}

uint64_t sub_1DA7005DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (((((v5 + 85) | 0x218) - 814) * (v4 == a4)) ^ v5)))(a1, (v5 + 1382));
}

uint64_t sub_1DA70060C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v0 - 1646) | 0x42) + 1931036090) & 0x8CE6BFB7) + 328)
                                     * (LODWORD(STACK[0x530]) == v1)) ^ ((v0 - 1646) | 0x42))))();
}

uint64_t sub_1DA700660()
{
  int v4 = 27 * (v0 ^ 0x196);
  int v5 = 31 * (v4 ^ 0xAB);
  (*(void (**)(void, unint64_t, void))(v2 + 8 * (v4 ^ 0x88B)))(*(unsigned int *)STACK[0x2F0], STACK[0x520], LODWORD(STACK[0x4CC]));
  unint64_t v6 = 235795823 * ((-2 - ((~v1 | 0x8197B721CAA45365) + (v1 | 0x7E6848DE355BAC9ALL))) ^ 0x89270DDF5E091A3CLL);
  unint64_t v7 = LODWORD(STACK[0x530]) - v6;
  *(_DWORD *)(v3 - 192) = (v5 + 1473597510) ^ v6;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x360], 8) = v6;
  *(_DWORD *)(v3 - 184) = v5 - v6 + 2104632111;
  *(_DWORD *)(v3 - 176) = ((v5 + 1473597510) ^ 0x15) - v6;
  *(_DWORD *)(v3 - 152) = v5 + 1473597510 - v6 - 83;
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = v7;
  *(void *)(v3 - 160) = 2235994119u - v6;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 ^ 0x932)))(v3 - 192);
  STACK[0x388] = 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 180)))(v8);
}

uint64_t sub_1DA700794()
{
  int v2 = v0 - 5;
  int v3 = 9 * ((v0 - 5) ^ 0x2F1);
  int v4 = (v0 - 1930840845) & 0x73164DFF;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 - 5) ^ 0x519)))(1576, 2940923044);
  STACK[0x4D0] = v5;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v5 == 0) * ((v3 + 1245) ^ v4)) ^ v2)))();
}

uint64_t sub_1DA7007D0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((a1 + 767) | 0x102) ^ 0xFFFFF944) + ((a1 - 986254093) & 0x3AC90D9F))
                                     * (*(_DWORD *)(v2 - 124) == *(_DWORD *)(v2 - 128))) ^ (a1 + 1209))))();
}

uint64_t sub_1DA700840()
{
  unint64_t v7 = STACK[0x3E8];
  int v8 = STACK[0x420] ^ 0x711;
  if (v1 >= v2) {
    int v9 = *v3 + 1;
  }
  else {
    int v9 = 1308924072;
  }
  *int v3 = v9;
  int v10 = (((v0 >> 11) ^ 0xCDC5D) + v5 - ((2 * ((v0 >> 11) ^ 0xCDC5D)) & 0x5DB64)) ^ v0;
  unsigned int v11 = ((STACK[0x314] & (v10 << 7) ^ v10) << 15) & 0xEFC60000 ^ STACK[0x314] & (v10 << 7) ^ v10;
  int v12 = v11 ^ 0x1904C117 ^ (v11 >> 18);
  uint64_t v13 = (unsigned char *)(v7 + (v4 - 1147367149));
  unsigned int v14 = -1609296481
      * ((*(_DWORD *)(*(void *)STACK[0x408] + (*(int *)STACK[0x400] & 0xFFFFFFFF8C0CE98CLL)) ^ v13) & ((v8 ^ 0x68A) + 2147483507));
  unint64_t v15 = -1609296481 * (v14 ^ HIWORD(v14));
  unint64_t v16 = v15 >> ((v8 + 58) ^ 0x58u);
  char v17 = *((unsigned char *)*(&off_1F34B17C0 + v8 - 1499) + v16 - 12);
  char v18 = 127 * v16;
  LOBYTE(v16) = *((unsigned char *)*(&off_1F34B17C0 + v8 - 1517) + v16 - 1) ^ *((unsigned char *)*(&off_1F34B17C0 + v8 - 1354) + v16 - 3);
  LOBYTE(v15) = v15 ^ v18;
  *uint64_t v13 = v17 ^ v12 ^ 0x17 ^ v16 ^ v15;
  return (*(uint64_t (**)(__n128))(v6
                                           + 8
                                           * ((76
                                             * (v4
                                              - (((v17 ^ v12 ^ 0x17 ^ v16) ^ v15) != 0) == 1147367148)) ^ v8)))((__n128)0);
}

uint64_t sub_1DA70084C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(unsigned char *)(a4 + (v20 + a1 - 1614 + 2004)) = v19;
  *(unsigned char *)(a4 + (a9 - 42246442)) = *(unsigned char *)(a6 + 1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((1105 * (((a1 - 1614) ^ 0x7Cu) > 2)) ^ ((int)a1 - 1614))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_1DA700884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  BOOL v20 = v17 + 883103408 < (a17 + 761315163);
  if ((a17 + 761315163) < 0x5E9CC93F != (v17 + 883103408) < 0x5E9CC93F) {
    BOOL v20 = (a17 + 761315163) < 0x5E9CC93F;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v20 * ((v19 - 629413822) & 0x414BF ^ 0x21)) ^ v19)))();
}

uint64_t sub_1DA700900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int a30)
{
  if (a30 < 0xFEB689CD != (v32 - 2035774257) < 0xFEB689CD) {
    BOOL v33 = (v32 - 2035774257) < 0xFEB689CD;
  }
  else {
    BOOL v33 = v32 - 2035774257 > a30;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((106 * ((v33 ^ (v31 - 1)) & 1)) ^ (v31 + 533))))();
}

uint64_t sub_1DA70097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *(_DWORD *)(a39 + 4 * v39) ^= a36;
  BOOL v42 = v41 - 1 == (a34 & 0xF4DA37FF ^ 0x5B89B473);
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * (int)(((4 * (((((a34 & 0xF4DA37FF) + 1101969831) ^ v42) & 1) == 0)) & 0xF7 | (8 * (((a34 - 89) ^ ~v42) & 1))) ^ a34 & 0xF4DA37FF)))();
}

uint64_t sub_1DA700A08()
{
  int v6 = 1225351577 * ((2 * ((v5 - 144) & 0x80605C0) - (v5 - 144) - 134612419) ^ 0xD463222B);
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 12_Block_object_dispose(&STACK[0x360], 8) = (v1 + 1139703415 + 31 * (v4 ^ 0x2C4)) ^ v6;
  *(_DWORD *)(v5 - 124) = v6 + v4 - 611;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1375)))(v5 - 144);
  *int v9 = v8;
  *(_DWORD *)(v0 + 64) = 2058996701;
  return result;
}

uint64_t sub_1DA700A98@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v17 = a1 ^ 0x159;
  int v18 = (2 * v17) ^ 0xCEE;
  int v19 = (((v16 - 144) & 0xCE5FC59B | ~((v16 - 144) | 0xCE5FC59B)) ^ 0x3B54344B) * v11;
  *(void *)(v16 - 144) = v10;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = v15;
  *(_DWORD *)(v16 - 120) = (((2 * v17) ^ 0x2EEC19A4) + v12) ^ v19;
  *(_DWORD *)(v16 - 116) = v19 + v17 - 98;
  (*(void (**)(uint64_t))(v13 + 8 * (v17 + 795)))(v16 - 144);
  *(_DWORD *)(v16 - 144) = v18
                         - 1224239923 * ((((v16 - 144) | 0xE0AE54F6) - ((v16 - 144) & 0xE0AE54F6)) ^ 0x121DA921)
                         - 1548;
  *(void *)(v16 - 136) = a6;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = v14;
  (*(void (**)(uint64_t))(v13 + 8 * (v18 + 280)))(v16 - 144);
  *(void *)(v16 - 120) = a7;
  *(void *)(v16 - 112) = v14;
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = v18
                         - 535753261
                         * (((((v16 - 144) | 0x29DA8444) ^ 0xFFFFFFFE) - (~(v16 - 144) | 0xD6257BBB)) ^ 0xDCD17594)
                         - 1319;
  *(void *)(v16 - 144) = a6;
  *(void *)(v16 - 136) = a5;
  *(void *)(v16 - 104) = a8;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v18 + 316)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((23 * (a10 != 0)) ^ v18)))(v20);
}

uint64_t sub_1DA700C24()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v1 + 8) == 0xDAEB4D7D86A8E34) ^ v0 ^ 0xAE) & 1)
                                * ((v0 ^ 0xAE) - 1623)) ^ v0 ^ 0xAE)))();
}

uint64_t sub_1DA700C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v17 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a17 - 1;
  int v20 = 628203409 * ((((v19 - 152) | 0xFE2E213D) - (v19 - 152) + ((v19 - 152) & 0x1D1DEC0)) ^ 0x7CA62D0E);
  *(_DWORD *)(v19 - 136) = v20 + 1172345435;
  *(void *)(v19 - 144) = v19 + 0x4696E7753303C836;
  *(_DWORD *)(v19 - 14_Block_object_dispose(&STACK[0x360], 8) = 2067890216 - v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 16896))(v19 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18
                                                     + 8
                                                     * ((1871
                                                       * (a17
                                                        + 1590572637
                                                        + ((2 * (*(_DWORD *)(v19 - 184) & 0x3F)) ^ 0x2C)
                                                        + (*(_DWORD *)(v19 - 184) & 0x3F ^ 0x6FF5BF69u) < 0xFFFFFFC0)) ^ 0x2DCu)))(v21, 3590737265);
}

uint64_t sub_1DA700E60@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 == v3) * v6) ^ v2)))(0);
}

uint64_t sub_1DA700E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v33 - 144) = a24;
  *(void *)(v33 - 136) = v28;
  *(void *)(v33 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v33 - 120) = a23;
  *(_DWORD *)(v33 - 112) = (v30 - 1566) ^ (1374699841
                                         * ((2 * ((v33 - 144) & 0x5B573918) - (v33 - 144) + 615040736) ^ 0x495CDEE9));
  (*(void (**)(uint64_t))(v27 + 8 * (v30 + 351)))(v33 - 144);
  *(void *)(v33 - 144) = a24;
  *(void *)(v33 - 136) = v28;
  *(void *)(v33 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v33 - 120) = a23;
  *(_DWORD *)(v33 - 112) = (v30 - 1566) ^ (1374699841
                                         * ((((v33 - 144) | 0x7DEADC4) - ((v33 - 144) & 0x7DEADC4)) ^ 0x6A2AB5CD));
  (*(void (**)(uint64_t))(a27 + 8 * (v30 ^ 0xEAF)))(v33 - 144);
  int v34 = 1374699841 * ((v33 - 144) ^ 0x6DF41809);
  *(_DWORD *)(v33 - 140) = (v30 - 1033) ^ v34;
  *(void *)(v33 - 136) = v31;
  *(_DWORD *)(v33 - 12_Block_object_dispose(&STACK[0x360], 8) = v32 - v34 + v29 + 1;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(a27 + 8 * (v30 ^ 0x14E)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (((*(_DWORD *)(v33 - 144) != 1578365111)
                                              * (((v30 ^ 0x724) - 4) ^ (v30 - 1308))) ^ v30)))(v35);
}

uint64_t sub_1DA701008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  v6[1] = v3
        - 225
        + 535753261 * ((((2 * v6) | 0xA47589B6) - v6 - 1379583195) ^ 0x58CECAF4)
        + 1185;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v2 + 8 * ((v3 - 225) ^ 0x6A4)))(v6);
  *(_DWORD *)(v1 + _Block_object_dispose(&STACK[0x360], 8) = v4;
  return result;
}

void sub_1DA7010A8(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v2 = 1225351577 * (a1 ^ 0x239AD816);
  int v3 = *(_DWORD *)(a1 + 32) - v2;
  v5[1] = v3
        - 1734042137
        * (((v5 | 0xB8B61934) - v5 + (v5 & 0x4749E6C8)) ^ 0xE478DA79)
        - 231789155;
  int v4 = (char *)*(&off_1F34B17C0 + v3 - 229) - 8;
  (*(void (**)(_DWORD *))&v4[8 * (v3 ^ 0x958)])(v5);
  __asm { BRAA            X2, X17 }
}

uint64_t sub_1DA701220(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((LODWORD(STACK[0x454]) + a3 == 0) * ((3 * (v3 ^ 0x69F ^ v4)) ^ ((v3 ^ 0x69F) - 1059))) | v3 ^ 0x69F)))();
}

uint64_t sub_1DA701284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t))(v16 + 8 * ((((((v14 ^ 0x5C5) - 714728447) & 0x2A99E1AF) + 133 * (v14 ^ 0x618) - 748) * (v13 == 0)) ^ v14 ^ 0x5C5)))(v17 - 0x12F5D67F64180CA8, &STACK[0x11127EB20C1B75C6], &STACK[0x11127EB20C1B75D6], a4, a5, a6, a7, a8, v15, a10, a11, v17 - 0x12F5D67F64180978, a13, &STACK[0x11127EB20C1B75D6], v17 - 0x12F5D67F64180A88);
}

void sub_1DA7013B4()
{
  *(_DWORD *)(v0 - 0x68A89052B2EA55A_Block_object_dispose(&STACK[0x360], 8) = -2058973175;
}

uint64_t sub_1DA7013D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_OWORD *)(a5 + v_Block_object_dispose(&STACK[0x360], 8) = *v6;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == 0) * v7) ^ v5)))();
}

uint64_t sub_1DA701400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((v4 + 668) ^ 0x787) * (v3 != 63)) ^ v4)))(a1, a2, a3, -1947136563);
}

uint64_t sub_1DA701440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int32x4_t a39,int32x4_t a40,int32x4_t a41,int32x4_t a42)
{
  uint64_t v51 = (const char *)(v49 - 252);
  v52.n128_u64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v52.n128_u64[1] = 0x5F5F5F5F5F5F5F5FLL;
  __n128 v53 = (__n128)vdupq_n_s32(0x7AB9CBDFu);
  __n128 v54 = (__n128)vdupq_n_s32(0x7AB9CBDDu);
  uint64_t v55 = (v44 - 2);
  v56.n128_u64[0] = 0xBEBEBEBEBEBEBEBELL;
  v56.n128_u64[1] = 0xBEBEBEBEBEBEBEBELL;
  uint64_t v57 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128))(v46 + 8 * v42);
  int v58 = *(_DWORD *)(v49 - 176);
  int v59 = *(_DWORD *)(v49 - 172);
  int v60 = *(_DWORD *)(v49 - 168);
  int v61 = *(unsigned char *)(v49 - 156) ^ 0x70;
  if (v61 == 2)
  {
    int8x16x4_t v106 = vld4q_s8(v51);
    uint8x16_t v86 = (uint8x16_t)veorq_s8(v106.val[0], (int8x16_t)v52);
    uint16x8_t v87 = vmovl_u8(*(uint8x8_t *)v86.i8);
    uint16x8_t v88 = vmovl_high_u8(v86);
    uint8x16_t v89 = (uint8x16_t)veorq_s8(v106.val[1], (int8x16_t)v52);
    _Q21 = vmovl_u8(*(uint8x8_t *)v89.i8);
    _Q20 = vmovl_high_u8(v89);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v94 = (uint8x16_t)veorq_s8(v106.val[2], (int8x16_t)v52);
    uint16x8_t v95 = vmovl_high_u8(v94);
    uint16x8_t v96 = vmovl_u8(*(uint8x8_t *)v94.i8);
    v106.val[0] = veorq_s8(v106.val[3], (int8x16_t)v52);
    v106.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v106.val[0]);
    v106.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[1]);
    v106.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[1].i8);
    v106.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v106.val[0].i8);
    v106.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[0]);
    v106.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[0].i8);
    int32x4_t v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v96.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v87.i8), 0x18uLL)), v106.val[0]);
    int32x4_t v98 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v96, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v87), 0x18uLL)), v106.val[3]);
    int32x4_t v99 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v95.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v88.i8), 0x18uLL)), v106.val[1]);
    int32x4_t v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v95, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v88), 0x18uLL)), v106.val[2]);
    v106.val[0] = veorq_s8(vandq_s8((int8x16_t)v97, (int8x16_t)v53), (int8x16_t)(*(_OWORD *)v106.val & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v106.val[3] = veorq_s8(vandq_s8((int8x16_t)v98, (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v106.val[3] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v106.val[1] = veorq_s8(vandq_s8((int8x16_t)v99, (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v106.val[1] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v106.val[2] = veorq_s8(vandq_s8((int8x16_t)v100, (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v106.val[2] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a41 = vaddq_s32(vsubq_s32(v99, vaddq_s32((int32x4_t)v106.val[1], (int32x4_t)v106.val[1])), (int32x4_t)v54);
    a42 = vaddq_s32(vsubq_s32(v100, vaddq_s32((int32x4_t)v106.val[2], (int32x4_t)v106.val[2])), (int32x4_t)v54);
    a39 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v106.val[0], (int32x4_t)v106.val[0])), (int32x4_t)v54);
    a40 = vaddq_s32(vsubq_s32(v98, vaddq_s32((int32x4_t)v106.val[3], (int32x4_t)v106.val[3])), (int32x4_t)v54);
    char v101 = (_DWORD *)&a39 + v45 + 1016132770;
    int v102 = *(v101 - 8) ^ *(v101 - 3);
    int v103 = *(v101 - 16) ^ *(v101 - 14) ^ (v102 + v43 - ((2 * v102) & v50));
    HIDWORD(v104) = v103 ^ v43;
    LODWORD(v104) = v103;
    *char v101 = (v104 >> 31) + v43 - (v50 & (2 * (v104 >> 31)));
    return (*(uint64_t (**)(uint64_t))(v46 + 8 * ((500 * (v48 == 1016132707)) ^ 0x2F4)))(v55);
  }
  else if (v61 == 1)
  {
    int8x16x4_t v105 = vld4q_s8(v51);
    uint8x16_t v62 = (uint8x16_t)veorq_s8(v105.val[0], (int8x16_t)v52);
    uint16x8_t v63 = vmovl_u8(*(uint8x8_t *)v62.i8);
    int8x16_t v64 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8);
    int8x16_t v65 = (int8x16_t)vmovl_high_u16(v63);
    uint16x8_t v66 = vmovl_high_u8(v62);
    int8x16_t v67 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v66.i8);
    int8x16_t v68 = (int8x16_t)vmovl_high_u16(v66);
    uint8x16_t v69 = (uint8x16_t)veorq_s8(v105.val[1], (int8x16_t)v52);
    uint16x8_t v70 = vmovl_high_u8(v69);
    uint16x8_t v71 = vmovl_u8(*(uint8x8_t *)v69.i8);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v105.val[2], (int8x16_t)v52);
    _Q25 = (int8x16_t)vmovl_high_u8(v72);
    _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v72.i8);
    int8x16_t v75 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
    __asm { SHLL2           V24.4S, V24.8H, #0x10 }
    int8x16_t v80 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v105.val[0] = veorq_s8(v105.val[3], (int8x16_t)v52);
    v105.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v105.val[0]);
    v105.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[1]);
    v105.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v105.val[0].i8);
    v105.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[0]);
    v105.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[0].i8), 0x18uLL), v75), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v71.i8, 8uLL), v64));
    v105.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v71, 8uLL), v65));
    v105.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[1].i8), 0x18uLL), v80), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v70.i8, 8uLL), v67));
    v105.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v70, 8uLL), v68));
    int32x4_t v81 = (int32x4_t)veorq_s8(vandq_s8(v105.val[0], (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v105.val[3], (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v83 = (int32x4_t)veorq_s8(vandq_s8(v105.val[1], (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v84 = (int32x4_t)veorq_s8(vandq_s8(v105.val[2], (int8x16_t)v53), (int8x16_t)(*(_OWORD *)&v68 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a41 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[1], vaddq_s32(v83, v83)), (int32x4_t)v54);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[2], vaddq_s32(v84, v84)), (int32x4_t)v54);
    a39 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[0], vaddq_s32(v81, v81)), (int32x4_t)v54);
    a40 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[3], vaddq_s32(v82, v82)), (int32x4_t)v54);
    return (*(uint64_t (**)(uint64_t))(v46 + 8 * (a6 + 433290953)))(v55);
  }
  else
  {
    *(_DWORD *)(v49 - 180) = 2 * (*(_DWORD *)(v49 - 180) ^ v44) + v44 - (v47 & (4 * (*(_DWORD *)(v49 - 180) ^ v44)));
    *(_DWORD *)(v49 - 176) = 2 * (v58 ^ v44) + v44 - (v47 & (4 * (v58 ^ v44)));
    *(_DWORD *)(v49 - 172) = 2 * (v59 ^ v44) + v44 - (v47 & (4 * (v59 ^ v44)));
    *(_DWORD *)(v49 - 16_Block_object_dispose(&STACK[0x360], 8) = 2 * (v60 ^ v44) + v44 - (v47 & (4 * (v60 ^ v44)));
    return v57(v55, v52, v53, v54, v56);
  }
}

uint64_t sub_1DA7014CC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((151 * (((v3 + ((a1 - 873) | 0x117) - 279) ^ v1) < 0x201)) ^ a1)))();
}

uint64_t sub_1DA70151C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a4 ^ (43 * ((unint64_t)(v4 - a1) > 0x1F)))))();
}

uint64_t sub_1DA701550@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, unsigned int a4@<W4>, int a5@<W8>)
{
  unsigned int v11 = a1 + a5 + 1;
  BOOL v12 = v7 < a4;
  *(unsigned char *)(v8 - 0x4696E7753303C932 + (v9 + v5 + 55)) = *(unsigned char *)(STACK[0x540]
                                                                                  + (a5 - 1233103904));
  if (v12 == v11 < a4 + ((v6 + a2) & a3) - 1910) {
    BOOL v12 = v11 < v7;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (v12 ^ v6 ^ 1)))();
}

void sub_1DA7015D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v3) = 696851460;
}

uint64_t sub_1DA7015E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((1011
                                                                                 * (((((a6 - 982) ^ 0x228) - 973) & v7) != ((a6 + 512) ^ 0x7D3))) ^ (a6 - 982))))(a1, a2, a3, a4, (v6 - a4));
}

uint64_t sub_1DA701630(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unsigned int v35 = (a2 + 2090865681) & 0x41B132DD;
  (*(void (**)(uint64_t, uint64_t))(v31 + 8 * (a2 ^ (a2 + 299))))(a30, 2965982036);
  int v36 = (*(uint64_t (**)(void))(v31 + 8 * (v30 + 1101971589)))();
  unsigned int v37 = v36 + v33 - ((v35 ^ 0xCDC5D939) & (2 * v36));
  *int v34 = v37;
  int v38 = (v33 + ((v37 >> 30) ^ 1) + 2 * (((v37 >> 30) ^ 1 | ((v35 ^ 0x28) + 2147483009)) ^ (v37 >> 30)) + 18) ^ v37;
  v34[1] = v32 + 1812433253 * v38 - ((-670100790 * v38 + 2) & 0xCDC5DB64);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8 * v35))(2147482617, 1812433253);
}

uint64_t sub_1DA701748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + v3 + a1) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v3 + a1 + a2 - 20) < 0x40) * v5) ^ v2)))();
}

uint64_t sub_1DA701778(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v12 = (unsigned int *)(v11 + 4 * v6);
  uint64_t v13 = v6 + 1;
  int v14 = *(_DWORD *)(v11 + 4 * v13);
  unsigned int v15 = (v14 & 0x7FFFFFFE | (((v4 - 1300) | 0x400) + a3) & v5) >> 1;
  *BOOL v12 = v12[397] ^ a4 ^ *(_DWORD *)(v9 + 4 * (v14 & 1)) ^ ((v15 ^ a2) + v10 - 2 * ((v15 ^ a2) & (v10 + 4) ^ v15 & 4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v13 == 227) * v7) ^ v4)))();
}

uint64_t sub_1DA7017F8(int a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v44 = 4 * (v31 + 1 + a6);
  unint64_t v45 = (*(_DWORD *)(a29 + v44) ^ v30)
      + (a5 ^ HIDWORD(v38))
      + v29 * (unint64_t)(v39 ^ v34 ^ (v30 + 788) ^ *(_DWORD *)(*v36 + v44));
  unint64_t v46 = HIDWORD(v43)
      + v40 * (unint64_t)(*(_DWORD *)(*v41 + v44) ^ v30)
      + ((v45 + a3 - ((v35 + 788) & (2 * v45))) ^ a4);
  *(_DWORD *)(a29 + 4 * (v31 + a6)) = v46 + v30 - (v32 & (2 * v46));
  BOOL v48 = v31 + a1 < v33 && v31 + a1 >= v42;
  return (*(uint64_t (**)(void))(v37 + 8 * ((120 * v48) ^ v39)))();
}

uint64_t sub_1DA7018A0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((158 * (a2 + 1 != v4 + 16)) ^ v2)))(a1);
}

uint64_t sub_1DA70196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((889 * (a1 + 1 == v7 + 44)) ^ a6)))();
}

uint64_t sub_1DA701A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  int v8 = (v5 - 753228950) & 0x2CE55C6F;
  *(unsigned char *)(a2 + ((v6 + (v8 ^ 0x441u) + 432) & (a5 + a1))) = *(unsigned char *)(a3 + a4 - 185082509)
                                                            - ((2 * *(unsigned char *)(a3 + a4 - 185082509)) & 0xBF)
                                                            + 95;
  return (*(uint64_t (**)(void))(v7 + 8 * ((58 * ((a1 + a5 + 1) < 0x40)) ^ v8)))();
}

uint64_t sub_1DA701B24(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v19 = a1 + 670;
  int v15 = 1224239923 * ((v14 - 120) ^ 0xF2B3FDD7);
  *(void *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a1 + 101;
  *(_DWORD *)(v14 - 10_Block_object_dispose(&STACK[0x360], 8) = (a13 + 1486793781) ^ v15;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (a1 ^ 0x810)))(v14 - 120);
  unsigned int v17 = v19 ^ 0x2AC ^ *(_DWORD *)(v14 - 152) & 0x3F;
  *(unsigned char *)(v14 - 220 + v17) = -33;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * ((786 * (v17 > 0x37)) ^ a1)))(v16, 4117992457);
}

uint64_t sub_1DA701C18@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((a1 & ~((v4 - 728) ^ (v3 == v2))) * (v4 - 639)) ^ v4)))();
}

uint64_t sub_1DA701C4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((((v16 - a6 - 440) ^ (v18 - 48))
                                * (a14 + v14 - (unint64_t)(v15 + a3) < 0x10)) ^ v16)))();
}

uint64_t sub_1DA701C8C()
{
  *(void *)(v3 - 104) = v5;
  *(void *)(v3 - 120) = v1;
  *(_DWORD *)(v3 - 112) = v2 + 1178560073 * ((v3 - 120) ^ 0xAD973CA5) - 343;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x347)))(v3 - 120);
}

uint64_t sub_1DA701CD8(int8x16_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, int a5, int8x16_t *a6)
{
  *(int8x16_t *)(v9 + (a4 & (v6 + 16))) = vaddq_s8(vsubq_s8(*a6, vandq_s8(vaddq_s8(*a6, *a6), a1)), a2);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 16) * a5) ^ v7)))();
}

void sub_1DA701CE4(int a1@<W8>)
{
  unint64_t v7 = STACK[0x608];
  int v8 = LODWORD(STACK[0x558]) + 225522666;
  int v9 = 3804331 * ((((v6 - 192) | 0x394D3138) - (v6 - 192) + ((v6 - 192) & 0xC6B2CEC0)) ^ 0x170CB2F4);
  *(void *)(v6 - 144) = v4;
  *(_DWORD *)(v6 - 172) = (v2 - (v3 & 0xAE548ACE) + ((a1 - 856730550) & 0x3310A54B ^ 0xE066248)) ^ v9;
  *(void *)(v6 - 184) = v1;
  *(void *)(v6 - 160) = v7;
  *(void *)(v6 - 16_Block_object_dispose(&STACK[0x360], 8) = STACK[0x388];
  *(_DWORD *)(v6 - 152) = v8 ^ v9;
  *(_DWORD *)(v6 - 192) = v9 + a1 + 368398469;
  (*(void (**)(uint64_t))(v5 + 8 * (a1 ^ 0x177u)))(v6 - 192);
  LODWORD(STACK[0x530]) = *(_DWORD *)(v6 - 176);
  JUMPOUT(0x1DA700620);
}

uint64_t sub_1DA701DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = STACK[0x288];
  int v9 = (v5 + 362) | 0x1A;
  unint64_t v10 = STACK[0x550];
  STACK[0x478] = *(void *)(v7 + 8 * (v5 - 241));
  STACK[0x5C0] = ((v9 + 376) ^ 0x463) + v6;
  STACK[0x510] = v10;
  if (v10) {
    BOOL v11 = v8 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7
                                                                                                  + 8 * (int)((v12 * ((v9 + 1857982788) & 0x91416D37 ^ 0x13C)) ^ v9)))(a1, a2, a3, a4, a5, v8);
}

uint64_t sub_1DA701E08(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((35
                                * (((a4 - 93) ^ (a2 + v6 + 63 < ((a4 - a6 - 1276) ^ 0xCFD53309) + v6)) & 1)) ^ a4)))();
}

uint64_t sub_1DA701E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = v15 + 1178560073 * ((v16 - 136) ^ 0xAD973CA5) + 643;
  *(void *)(v16 - 136) = a14;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x721)))(v16 - 136);
  int v17 = 1755732067 * (((~(v16 - 136) & 0x2D87648E) - (~(v16 - 136) | 0x2D87648F)) ^ 0xF341D954);
  *(_DWORD *)(v16 - 136) = v17 + v15 + 1758;
  *(_DWORD *)(v16 - 132) = v17 ^ 0x6FB145BE;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8D6)))(v16 - 136);
  *(void *)(v16 - 136) = a14;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  *(_DWORD *)(v16 - 116) = v15
                         + 1374699841 * (((v16 - 136) & 0x3FDFE35E | ~((v16 - 136) | 0x3FDFE35E)) ^ 0xADD404A8)
                         + 52;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1836)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((v15 + 1450) | (2
                                                             * (((v15 + 64 + v15 - 110 + 1) ^ (*(_DWORD *)(v16 - 120) == 1271275120)) & 1)))))(v18);
}

uint64_t sub_1DA701E68@<X0>(int a1@<W8>)
{
  *(_DWORD *)(*(void *)(v6 - 0x11127EB20C1B74FELL) + 4 * (a1 + v4 + v1 + 2041378417)) = *(_DWORD *)(*(void *)(v6 - 0x11127EB20C1B74FELL) + 4 * (((52 * (v4 ^ 0x453)) ^ (v2 + 1128)) + v1));
  return (*(uint64_t (**)(void))(v5 + 8 * ((42 * (v2 + v1 + 571 < v3)) ^ v4)))();
}

uint64_t sub_1DA701EE8()
{
  int v5 = 1755732067 * ((((v4 - 144) | 0xC3EDFE00) - ((v4 - 144) & 0xC3EDFE00)) ^ 0x1D2B43DB);
  *(_DWORD *)(v4 - 144) = ((v0 & 0x71736DFF) + 291) ^ v5;
  *(_DWORD *)(v4 - 116) = v9 - v5 + ((((v0 & 0x71736DFF) - 1364) | 0x158) ^ 0xCF9799BA);
  *(void *)(v4 - 136) = v7;
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x360], 8) = v3;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v0 & 0x71736DFF) + 678)))(v4 - 144);
  *(_DWORD *)(v8 - 0x5C88151B3290645DLL) = v9;
  *(_DWORD *)(v1 + 32) = 2058996701;
  return result;
}

uint64_t sub_1DA701FDC@<X0>(int a1@<W0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  *(__n128 *)(v4 + v5) = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 ^ v6) + v5 != 64) * a1) | v3)))();
}

void sub_1DA702004()
{
}

uint64_t sub_1DA702010@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, char a5@<W7>, uint64_t a6@<X8>)
{
  unint64_t v10 = (unsigned char *)STACK[0x5E8];
  int v11 = *(_DWORD *)(a6 - 0x4696E7753303C8EALL);
  *unint64_t v10 = v11 ^ 0x61;
  v10[1] = (BYTE1(v11) ^ 0xA3) + (v8 | ~(2 * (BYTE1(v11) ^ 0xA3))) + 96;
  v10[2] = (v7 ^ BYTE2(v11)) - ((2 * (v7 ^ BYTE2(v11))) & 0xBF) + 95;
  v10[3] = (a5 ^ HIBYTE(v11)) - ((2 * (a5 ^ HIBYTE(v11))) & 0xBF) + 95;
  unsigned int v12 = *v6 + a1;
  BOOL v13 = v12 < 0x4437AD07;
  BOOL v14 = a4 + 945742138 < v12;
  if ((a4 + 945742138) < 0x4437AD07 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v14 * a2) ^ a3)))();
}

uint64_t sub_1DA702104(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((124 * (a7 + 1 == v8 + 24)) ^ a3)))();
}

uint64_t sub_1DA7021DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 127 - a1;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x2D8] + 127 - a1;
  v10.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v10.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  v11.i64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v11.i64[1] = 0x5F5F5F5F5F5F5F5FLL;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((107 * (((v2 - 125) ^ (a1 == 96)) & 1)) ^ v2)))();
}

uint64_t sub_1DA702278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v31 = 1224239923 * ((((v30 - 168) | 0x31BDA1EC) - ((v30 - 168) & 0x31BDA1EC)) ^ 0xC30E5C3B);
  *(_DWORD *)(v30 - 160) = v31 + v29 + 79;
  *(_DWORD *)(v30 - 156) = v31 ^ a14;
  *(void *)(v30 - 16_Block_object_dispose(&STACK[0x360], 8) = a23;
  (*(void (**)(uint64_t))(v28 + 8 * (v29 ^ 0x83E)))(v30 - 168);
  uint64_t v32 = STACK[0x2E4] & ((v29 + 1093) ^ 0x448);
  *((unsigned char *)&STACK[0x2A0] + (v32 ^ 0x16)) = -33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28
                                                                       + 8
                                                                       * ((474 * ((v32 ^ 0x16) > 0x37)) ^ v29)))(164, 2280784578, a28, 1407);
}

uint64_t sub_1DA7023A4()
{
  int v4 = (v0 - 882531743) & 0x349A5FDE;
  *(_DWORD *)(*(void *)(v2 + 96) + 142_Block_object_dispose(&STACK[0x360], 8) = 1584496228;
  int v5 = (v3 - 120) & 0x7F732476;
  *(void *)(v3 - 112) = v3 + 0x4696E7753303C856;
  *(_DWORD *)(v3 - 104) = 628203409 * ((v3 + 2138252286 - 2 * v5) ^ 0xFDFB2845) + v4 + 1172343949;
  *(_DWORD *)(v3 - 116) = -628203409 * ((v3 + 2138252286 - 2 * v5) ^ 0xFDFB2845)
                        - 1068976968
                        - ((193824312 * (((v4 - 952) | 0x180) ^ 0x8BA074F4) + 2137953942) & 0xF6830054)
                        - 1158100107;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0xD8E)))(v3 - 120);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((844
                                              * (*(_DWORD *)v2
                                               - 1938907109
                                               + (((*(_DWORD *)(v3 - 152) & 0x3F) << (((v4 + 2) | 7) + 42)) ^ 0x2C)
                                               + (*(_DWORD *)(v3 - 152) & 0x3F ^ 0x6E7C6EA9u) < 0xFFFFFFC0)) ^ v4)))(v6);
}

uint64_t sub_1DA7023DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  int v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (v27 + 34));
  int v35 = STACK[0x2EC];
  uint64_t v36 = LODWORD(STACK[0x2EC]);
  int v37 = STACK[0x2F0];
  int v38 = STACK[0x2F4];
  int v39 = STACK[0x2F0];
  int v40 = STACK[0x2F4];
  int v41 = LOBYTE(STACK[0x300]) ^ 0x70;
  if (v41 == 2)
  {
    BOOL v46 = (unint64_t)&STACK[0x2A0] >= a27 || v28 >= (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v30
                                                       + 8
                                                       * (((11 * (((v31 + 848) | 0x10) ^ 0x33F) - 859) * v46) ^ (v31 + 1988))))(v36, 108634942);
  }
  else if (v41 == 1)
  {
    BOOL v43 = (unint64_t)&STACK[0x2A0] < a27 && v28 < (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t))(v30 + 8 * (((((v31 + 1080) | 0x220) ^ 0x66B) * v43) | (v31 + 388))))(v36);
  }
  else
  {
    LODWORD(STACK[0x2E8]) = 2 * (LODWORD(STACK[0x2E8]) ^ v32) + v32 - (v29 & (4 * (LODWORD(STACK[0x2E8]) ^ v32)));
    LODWORD(STACK[0x2EC]) = (v36 ^ v32) + (v35 ^ v32) + v32 - (v29 & (2 * ((v36 ^ v32) + (v35 ^ v32))));
    LODWORD(STACK[0x2F0]) = (v39 ^ v32) + (v37 ^ v32) + v32 - (v29 & (2 * ((v39 ^ v32) + (v37 ^ v32))));
    LODWORD(STACK[0x2F4]) = v32 + (v40 ^ v32) + (v38 ^ v32) - (v29 & (2 * ((v40 ^ v32) + (v38 ^ v32))));
    return v34(v36, a2, a3, 1407, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, v33 - 204, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
}

void sub_1DA7023EC(uint64_t a1)
{
  int v1 = 535753261 * ((2 * (a1 & 0x6240BBC7) - a1 + 499074104) ^ 0x174B4A17);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA702488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((*(_DWORD *)(v10 + 48 * (v8 + a8 + ((12 * (v9 ^ 0x2F6) - 570593817) & 0x7F97B51F))) != 180151325) ^ v9)))();
}

uint64_t sub_1DA7024EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  *a32 = a41 + 330100431;
  uint64_t v45 = (*v42 + 406566272);
  unint64_t v46 = 1224239923
      * (((~(v44 - 144) | 0x168BDAC4DF7D5DBCLL) + ((v44 - 144) | 0xE974253B2082A243)) ^ 0xC12E9052D2315F95);
  *(_DWORD *)(v44 - 104) = v46;
  *(_DWORD *)(v44 - 136) = ((v41 - 113066970) ^ 0x3D) - v46;
  *(_DWORD *)(v44 - 132) = (v41 - 1606177316) ^ v46;
  *(_DWORD *)(v44 - 144) = (v41 - 113066970) ^ v46;
  *(_DWORD *)(v44 - 140) = (v41 - 113066908) ^ v46;
  *(void *)(v44 - 120) = v45 ^ v46;
  *(void *)(v44 - 112) = v46 + 1715490344;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v41 ^ (a2 + 390))))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(v43 + 8 * *(int *)(v44 - 128)))(v47);
}

uint64_t sub_1DA7025FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31
                                                              + 8
                                                              * ((476
                                                                * (a31 - 1131569288 < (a12 & 0x108447B7 ^ 0xFFFFFFDC))) ^ (v32 + 1231))))(a1, a2, a3);
}

void sub_1DA702608()
{
  uint64_t v3 = *(void *)(v0 + 24);
  *(_DWORD *)(*(void *)(v0 + 8) - 0x386FBAA55BEB2BLL) = *v1;
  *(_DWORD *)(v3 - 0x70F770302E9240E7) = *v2;
  *(_DWORD *)uint64_t v0 = 2058996701;
}

uint64_t sub_1DA702684@<X0>(unsigned int a1@<W8>)
{
  BOOL v10 = a1 < v3;
  *(unsigned char *)(v9 - 220 + (v1 - 640442942)) = *(unsigned char *)(v7 + (v2 + v8))
                                                        - ((2 * *(unsigned char *)(v7 + (v2 + v8))) & 0xBF)
                                                        + 95;
  unsigned int v11 = v2 + 1 + v4;
  int v12 = v10 ^ (v11 < v3);
  BOOL v13 = v11 < a1;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * !v10) ^ v6)))();
}

uint64_t sub_1DA70270C@<X0>(char a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = a3 + 1;
  *(unsigned char *)(v5 - 1947136563 + a2 - 1) = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((1408 * (v5 - 1947136563 < (v3 ^ 0x2D3uLL))) ^ v3)))();
}

uint64_t sub_1DA702714()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * (((*(void *)(v1 - 0x68A89052B2EA55C0) != 0) * ((v2 + 353) ^ 0x2BD)) ^ v2)))();
}

uint64_t sub_1DA702764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v13 + 8 * ((59 * (a12 != v12 + v14 + 63 + ((v14 - 662) | 0x421) - 3590)) ^ v14)))();
}

uint64_t sub_1DA7027A4(uint64_t a1, int a2, int a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  int v16 = v12 + 4;
  uint64_t v17 = (v16 - 1539484548);
  unsigned int v18 = *(_DWORD *)(v11 + v17);
  *(unsigned char *)(v10 + v17) = ((v18 >> ((v9 + 46) ^ a5)) ^ a8) - ((2 * ((v18 >> ((v9 + 46) ^ a5)) ^ a8)) & 0xBF) + 95;
  *(unsigned char *)(v10 + (v16 - 1539484547)) = (v14 ^ BYTE2(v18)) - ((2 * (v14 ^ BYTE2(v18))) & 0xBF) + 95;
  *(unsigned char *)(v10 + (v16 - 1539484546)) = (BYTE1(v18) ^ 0xA3) + (v13 | ~(2 * (BYTE1(v18) ^ 0xA3))) + 96;
  *(unsigned char *)(v10 + (v16 - 1539484545)) = v18 ^ 0x61;
  LODWORD(v17) = *v8 + a2;
  BOOL v19 = v17 < 0x5C9B3F8F;
  BOOL v20 = v16 + 14193679 < v17;
  if ((v16 + 14193679) < 0x5C9B3F8F != v19) {
    BOOL v20 = v19;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((v20 * a3) ^ v9)))();
}

uint64_t sub_1DA7027AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v13 = v10 + 873275458;
  if (v13 <= 0x40) {
    unsigned int v13 = 64;
  }
  uint64_t v14 = (v11 - v8 - v9);
  uint64_t v15 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((13 * (v14 + v13 > 0xE)) ^ 0x313u));
  return v15(v14, v15, a3, a4, 4262274641, a6, a7, a8);
}

uint64_t sub_1DA70281C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = v7 + 763;
  uint64_t v12 = (_DWORD *)STACK[0x408];
  *uint64_t v12 = v8 - 1;
  v12 += 2;
  unsigned int v13 = &v12[6 * (v8 - 1890839446)];
  int v14 = *v13;
  STACK[0x3F0] = *((void *)v13 + 1);
  LODWORD(STACK[0x48C]) = v12[6 * (v11 ^ 0x8F4C1731) + 4 + 6 * v8];
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v9 + (v14 + a2) * (uint64_t)a7 + 36) == ((v11 - 554) | 0x400) + 1295343765)
                                * ((v11 - 760) ^ 0xAF)) ^ v11)))();
}

uint64_t sub_1DA7028EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(void *)(a5 + v7 + ((v5 - 84) ^ 0xFFFFFFFF8BF10FE7)) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v6 & 0xFFFFFFFFFFFFFFF8) == 8) * a4) ^ v5)))();
}

uint64_t sub_1DA702934(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32)
{
  int v37 = v32 - v34 + 596;
  int v38 = v32 - v34 - 667501004;
  *a32 = 330100431;
  *(void *)(v36 - 120) = (*v33 - 1016408829) ^ a16;
  *(void *)(v36 - 112) = a14;
  *(_DWORD *)(v36 - 136) = (v38 ^ 0x7F) - a16;
  *(_DWORD *)(v36 - 132) = (v37 - 1606177316) ^ a16;
  *(_DWORD *)(v36 - 104) = a16;
  *(_DWORD *)(v36 - 144) = v38 ^ a16;
  *(_DWORD *)(v36 - 140) = (v37 - 667501564) ^ a16;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v37 ^ (a1 + 390))))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v36 - 128)))(v39);
}

void sub_1DA70293C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48) + 3804331 * ((((2 * a1) | 0xC074C718) - a1 - 1614439308) ^ 0x4E7BE040);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA702A6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  LODWORD(a33) = v64;
  int8x16_t v75 = (const char *)(a6 + ((v62 - 908893112) & 0x362C9BBF ^ (a3 + 51)) + v63);
  uint64_t v76 = *(uint64_t (**)(void))(v66 + 8 * v62);
  int v77 = BYTE4(a48) ^ 0x70;
  if (v77 == 2)
  {
    int8x16x4_t v103 = vld4q_s8(v75);
    uint8x16_t v93 = (uint8x16_t)veorq_s8(v103.val[1], v74);
    _Q17 = vmovl_u8(*(uint8x8_t *)v93.i8);
    _Q16 = vmovl_high_u8(v93);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    int32x4_t v98 = (_DWORD *)(v72 + 4 * (v70 + 1989640177));
    int v99 = *(v98 - 8) ^ *(v98 - 3);
    unsigned int v100 = *(v98 - 16) ^ *(v98 - 14) ^ (v99 + v67 - ((2 * v99) & 0xF57397BA));
    HIDWORD(v101) = v100 ^ v67;
    LODWORD(v101) = v100;
    _DWORD *v98 = (v101 >> 31) + v67 - ((2 * (v101 >> 31)) & 0xF57397BA);
    return (*(uint64_t (**)(void, uint64_t))(v66 + 8 * ((234 * (v69 != 1989640114)) ^ (v73 - 50))))(a46, 2952788872);
  }
  else if (v77 == 1)
  {
    HIDWORD(a32) = a47;
    int8x16x4_t v102 = vld4q_s8(v75);
    uint8x16_t v78 = (uint8x16_t)veorq_s8(v102.val[2], v74);
    _Q21 = vmovl_high_u8(v78);
    _Q20 = vmovl_u8(*(uint8x8_t *)v78.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v85 = v69 - 16;
    uint8x16_t v86 = (char *)*(&off_1F34B17C0 + (int)a34) - 8;
    uint16x8_t v87 = (char *)*(&off_1F34B17C0 + SHIDWORD(a33)) - 8;
    int v88 = (HIDWORD(a45) ^ v71)
        - 330819051
        + ((a46 ^ v71) & (v65 ^ (v71 - 537) ^ HIDWORD(a46)) | (a46 ^ 0x49865CC1) & (a47 ^ v71))
        + *(_DWORD *)&v87[4 * v85 + 4 * v70]
        + (*(_DWORD *)(v72 + 4 * (v86[v85 + v70] - 30)) ^ v67);
    uint8x16_t v89 = (char *)*(&off_1F34B17C0 + (int)a32 - 1645) - 12;
    unsigned int v90 = (v88 + v71 - (v68 & (2 * v88))) ^ v71;
    int v91 = ((v90 << (v89[v85 + v70] - 4)) | (v90 >> (4 - v89[v85 + v70]))) + (a46 ^ v71);
    HIDWORD(a31) = BYTE4(a48) ^ 0x70;
    return (*(uint64_t (**)(void, char *, char *, char *, void, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (int)a32))(a46, v86, v87, v89, v91 + v71 - (v68 & (2 * v91)), v69 - 15, &off_1F34B17C0, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62);
  }
  else
  {
    return v76(a46);
  }
}

uint64_t sub_1DA702F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unsigned int a17)
{
  a14 = a10;
  a15 = &STACK[0x591956795CC936F4];
  a17 = (v19 - 114) ^ (1225351577
                     * ((((2 * &a13) | 0x454074FC) - &a13 - 580926078) ^ 0x13AE268));
  a16 = &STACK[0x13939118D2D7EE93];
  uint64_t v20 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 127)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a13 == v17) * (((v19 - 1944) | 0x64C) - 1530)) ^ v19)))(v20);
}

uint64_t sub_1DA703060@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((98 * ((v10 & 0xFFFFFFFC) - a9 == ((a1 + 2130696781) & 0x810026FD) - 1540)) ^ a1)))();
}

uint64_t sub_1DA7030A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  *(unsigned char *)(*v20 + (v17 + a7)) = -33;
  BOOL v21 = v17 + 429679935 < (a17 - 317521821);
  if ((a17 - 317521821) < 0x2F9AC579 != (v17 + 429679935) < 0x2F9AC579) {
    BOOL v21 = (a17 - 317521821) < 0x2F9AC579;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * (((((v18 + 541) | 0x80) ^ 0x4D6) * !v21) ^ v18)))();
}

uint64_t sub_1DA703128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v38 = (*(_DWORD *)(v30 + v35) ^ v29) + HIDWORD(v36);
  *(_DWORD *)(v30 + 4 * a4) = v29 + ((v37 - 376) | 0x80) + v38 - (v31 & (2 * v38)) - 169;
  *(_DWORD *)(a29 + v35) = HIDWORD(v38) | v29;
  BOOL v40 = v32 + 1295676602 <= 1061945490 && v32 + 1295676602 >= v33;
  return (*(uint64_t (**)(void))(v34 + 8 * (v37 ^ (v40 | (8 * v40)))))();
}

uint64_t sub_1DA7031A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v66 + 11472))(a1, a2, a3, a4, a5, a6, a7, 2542673174, &a66, a10);
}

uint64_t sub_1DA7032F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((124 * (a8 + a3 + (v9 ^ 8u) + 26 > 0xFFFFFFFA)) ^ (v9 + 893))))();
}

void sub_1DA703330(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + 4 * (v6 + v4)) = v2
                                                                        - 2
                                                                        * (((v3 ^ 0xC57E425) + v2) & (v5 + 28) ^ v2 & 0x1C)
                                                                        + 1977053920;
  *(_DWORD *)(a1 - 0x11127EB20C1B7502) = (((v6 + 1 + v4) * (v1 - 1642334550)) ^ 0xADFB3FFD)
                                         + 2072894471
                                         + ((2 * (v6 + 1 + v4) * (v1 - 1642334550)) & 0x5BF67FFA);
}

uint64_t sub_1DA70340C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 - 78 + v3 == 258) * (a2 ^ 0x767)) ^ (a2 - 78))))();
}

uint64_t sub_1DA703444(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((541 * ((a2 - 929119494) < 0x28)) ^ a1)))();
}

void sub_1DA70345C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 172801228 - 2 * (a1 & 0xA4CBCCC)) ^ 0x9EE1F595);
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(_DWORD *)(v2 - 0x11127EB20C1B7502);
  unsigned int v6 = v1 - 1178560073 * (&v5 ^ 0xAD973CA5) - 42;
  uint64_t v5 = v2;
  int v4 = (char *)*(&off_1F34B17C0 + v1 - 112) - 8;
  (*(void (**)(uint64_t *))&v4[8 * v1 + 14456])(&v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA70358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((*(unsigned char *)(v9 + 1 + a8) - *(unsigned char *)(v8 + 1) + 106) == ((v10 ^ v12) - 24))
                                * ((9 * (v10 ^ v12 ^ a7)) ^ v11)) ^ v10 ^ v12)))();
}

uint64_t sub_1DA70359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *(unsigned char *)(v12 + (v14 + v13 + 1846)) = *(unsigned char *)(a9 + (v14 + v13 + 1846)) ^ 0x5F;
  return (*(uint64_t (**)(void))(v16 + 8
                                    * ((106 * (v14 + v13 + ((v11 - 212664742) & 0xCAD07B7u) >= (a11 ^ v15))) ^ v11)))();
}

uint64_t sub_1DA703600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x360], 8) = v18;
  *(_DWORD *)(v19 - 116) = v17 + ((v19 - 136) ^ 0x6DF41809) * v15 - 346;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0xA66)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((2006 * (*(_DWORD *)(v19 - 120) > v14 + 293 * (v17 ^ 0x26Eu) - 585)) ^ v17)))(v20);
}

uint64_t sub_1DA70367C()
{
  int v2 = 8 * (STACK[0x420] ^ 0x137);
  unint64_t v3 = STACK[0x588];
  STACK[0x468] = *(void *)(v1 + 8 * (int)(STACK[0x420] - 275));
  unint64_t v4 = STACK[0x3E8];
  STACK[0x638] = v3;
  LODWORD(STACK[0x644]) = 277809799;
  STACK[0x540] = v4;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((50
                                * (((((2 * *(_DWORD *)(v3 - 0x4696E7753303C8EELL)) & 0x1A ^ (((63 * (v2 ^ 0x10B) - 609) | 0x722)
                                                                                           - 1902))
                                   + (*(_DWORD *)(v3 - 0x4696E7753303C8EELL) & 0x3F ^ (v0 + 15))
                                   + 277809799) & 0xBDFFFC0) != 199158336)) ^ v2)))();
}

uint64_t sub_1DA7036A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v31 = (v24 + 1326705864) & 0xB0EC13FF;
  int v32 = (((v30 - 144) & 0x73C75C0C | ~((v30 - 144) | 0x73C75C0C)) ^ 0x3F4513A7) * v26;
  *(void *)(v30 - 136) = v23;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a2;
  *(_DWORD *)(v30 - 144) = v32 + v25 - 1087350994 + v31;
  *(_DWORD *)(v30 - 120) = v24 - v32 + 598;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x660)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = v31
                         - 377
                         - 1224239923 * (((v30 - 144) & 0x2D9ACFFC | ~((v30 - 144) | 0x2D9ACFFC)) ^ 0x20D6CDD4);
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1451)))(v30 - 144);
  *(void *)(v30 - 112) = v28;
  *(_DWORD *)(v30 - 120) = v31
                         + 653
                         - 1225351577 * (((v30 - 144) & 0xF685824A | ~((v30 - 144) | 0xF685824A)) ^ 0x2AE0A5A3);
  *(void *)(v30 - 144) = a23;
  *(void *)(v30 - 136) = a22;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a2;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1500)))(v30 - 144);
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a22;
  *(void *)(v30 - 120) = v29;
  *(_DWORD *)(v30 - 104) = v31
                         + 1343
                         + 628203409
                         * (((((v30 - 144) | 0xE27D8628) ^ 0xFFFFFFFE) - (~(v30 - 144) | 0x1D8279D7)) ^ 0x9F0A75E4);
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 112) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1441)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = v31
                         + 571
                         + 1225351577 * ((((v30 - 144) | 0xBB001FD) + (~(v30 - 144) | 0xF44FFE02)) ^ 0x282AD9EA);
  *(void *)(v30 - 112) = a22;
  *(void *)(v30 - 104) = v28;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a12;
  *(void *)(v30 - 120) = a23;
  *(void *)(v30 - 136) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1436)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = v31 - 377 - 1224239923 * ((v30 - 144) ^ 0xF2B3FDD7);
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a18;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1451)))(v30 - 144);
  *(void *)(v30 - 136) = a18;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a2;
  *(void *)(v30 - 112) = a14;
  *(_DWORD *)(v30 - 120) = v31
                         + 653
                         - 1225351577 * ((((2 * (v30 - 144)) | 0x3BDADB1A) - (v30 - 144) + 1645384307) ^ 0xBE77B59B);
  *(void *)(v30 - 144) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 ^ 0xA64)))(v30 - 144);
  *(_DWORD *)(v30 - 104) = v31
                         + 1343
                         + 628203409
                         * ((1756774229 - ((v30 - 144) | 0x68B63F55) + ((v30 - 144) | 0x9749C0AA)) ^ 0x15C1CC99);
  *(void *)(v30 - 120) = v29;
  *(void *)(v30 - 112) = a14;
  *(void *)(v30 - 144) = a14;
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a18;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 ^ 0x5AF)))(v30 - 144);
  *(_DWORD *)(v30 - 144) = v31
                         + 571
                         + 1225351577
                         * ((-524960656
                           - ((v30 - 144) ^ 0x3D317971 | 0xE0B5BC70)
                           + ((v30 - 144) ^ 0x3D317971 | 0x1F4A438F)) ^ 0x1E1E2E8);
  *(void *)(v30 - 120) = a23;
  *(void *)(v30 - 112) = a18;
  *(void *)(v30 - 136) = a14;
  *(void *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = a15;
  *(void *)(v30 - 104) = a14;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 ^ 0x5A4)))(v30 - 144);
  *(_DWORD *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = v31
                         + 1178560073 * ((((2 * (v30 - 144)) | 0x7F00DAE2) - (v30 - 144) - 1065381233) ^ 0x921751D4)
                         + 1295;
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = a14;
  (*(void (**)(uint64_t))(v27 + 8 * (int)(v31 + 1394)))(v30 - 144);
  *(_DWORD *)(v30 - 132) = v31 - 1178560073 * ((v30 - 144) ^ 0xAD973CA5) - 393;
  *(void *)(v30 - 144) = a14;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (int)(v31 ^ 0xA50)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((((v31 - 471) | 0x30B) + *(_DWORD *)(v30 - 136) - 161572451 > 0x5842A67D)
                                                   * (((v31 - 591) | 0x383) - 854)) ^ v31)))(v34);
}

uint64_t sub_1DA703B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DA703B7C(3679937112, 113, 1551555790, a4, a5, 775777895);
}

uint64_t sub_1DA703B7C@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((11 * (v1 + 3 < a1)) ^ v2)))();
}

uint64_t sub_1DA703BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                + 8
                                                                                * (((((v13 ^ 0x459) + 1048) ^ 0x741)
                                                                                  * (a11 > 0)) ^ v13)))(a1, a2, a3, a12, 2147482079);
}

uint64_t sub_1DA703C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v13 = (a8 + 740) | 0x20;
  *(_DWORD *)(*v11 + 4 * (v9 + v10 + v13 - 1315)) = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a9
                                                              + 8
                                                              * ((((v13 + a4) & a5 ^ a6 ^ (16 * v13) ^ a7) * (v12 == 0)) ^ v13)))(a1, a2, 159353952);
}

uint64_t sub_1DA703C98()
{
  unint64_t v1 = STACK[0x288];
  *(void *)(v1 + 1560) = *(void *)STACK[0x4E0];
  *(_DWORD *)(v1 + 1552) = *(_DWORD *)STACK[0x508];
  unint64_t v2 = STACK[0x200];
  *(void *)(*(void *)(STACK[0x200] + 96) + 48_Block_object_dispose(&STACK[0x360], 8) = *(void *)(STACK[0x200] + 8);
  *(_DWORD *)(*(void *)(v2 + 96) + 480) = *(_DWORD *)v2;
  int v3 = STACK[0x224];
  *(unsigned char *)(STACK[0x218] + STACK[0x260]) = (STACK[0x228] + LODWORD(STACK[0x214])) * (STACK[0x208] ^ 0xBA);
  return (*(uint64_t (**)(void))(v0 + 8 * v3))();
}

uint64_t sub_1DA703D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,unsigned __int8 a27,__int16 a28,unsigned __int8 a29,int a30,int a31,int a32,int a33,char a34,int a35,int a36,char a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = a38 - 338;
  LODWORD(STACK[0x3A0]) = (BYTE4(a24) | ((a32 ^ 0xC) << 24) | ((a29 ^ 0xEF) << 8) | (((a38 + 9) ^ a34) << 16)) ^ 0xF238F4B6;
  LODWORD(STACK[0x290]) = a31 ^ 0xEB056CAC;
  LODWORD(STACK[0x3D0]) = ((a33 << 8) | (a26 << 24) | ((a35 ^ 0xFC) << 16) | a30) ^ 0xED40437;
  LODWORD(STACK[0x3E8]) = ((((a36 ^ 0x77) << 16) + ((a25 ^ 0x1A) << 24)) | a27 | ((a37 ^ a7) << 8)) ^ 0x6A473DF4;
  unint64_t v67 = v64 & (((a38 - 338) ^ 0x45A) - 124) ^ 0x16DF252Eu;
  STACK[0x3E0] = v67;
  HIDWORD(a17) = (a38 - 338) ^ 0x45A;
  LODWORD(v32_Block_object_dispose(&STACK[0x360], 8) = 13 * HIDWORD(a17);
  LODWORD(v67) = *(unsigned __int8 *)(a21 + ((13 * BYTE4(a17)) ^ 0x50u ^ *(unsigned char *)(a19 + v67)));
  unint64_t v68 = v64 & 0xFFFFFFFB ^ 0x16DF2524;
  STACK[0x2F8] = v68;
  uint64_t v69 = *(unsigned __int8 *)(a19 + v68);
  unsigned int v70 = (((16 * v67) ^ 0x18) - 7) ^ v67;
  LOBYTE(v67) = v69 ^ 0xB7;
  LOBYTE(v69) = *(unsigned char *)(a22 + (v69 ^ a7));
  int v71 = v64;
  unint64_t v72 = v64 & 0xFFFFFFF0 ^ 0x16DF252F;
  STACK[0x408] = v72;
  int v73 = *(unsigned __int8 *)(a19 + v72);
  uint64_t v74 = v64 & 0xFFFFFFF5 ^ 0x16DF252E;
  uint64_t v340 = v74;
  unsigned __int8 v75 = (v69 + v67 - 24) ^ 0xE5;
  if ((v73 & 0x20) != 0) {
    int v76 = -32;
  }
  else {
    int v76 = 32;
  }
  int v334 = *(unsigned __int8 *)(a23 + ((v76 + v73) ^ 0xDDLL)) + ((v76 + v73) ^ 0x31);
  unint64_t v77 = v64 & 0xFFFFFFF9 ^ 0x16DF2526;
  STACK[0x3D8] = v77;
  LODWORD(v77) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a19 + v77) ^ 0x51));
  unint64_t v78 = v64 & 0xFFFFFFF3 ^ 0x16DF252C;
  STACK[0x300] = v78;
  unint64_t v79 = v64 ^ 0x16DF2524u;
  STACK[0x288] = v79;
  HIDWORD(v80) = v77 ^ (((16 * v77) ^ 0x14) - 3) ^ 0x3F;
  LODWORD(v80) = BYTE4(v80) & 0xF8;
  unint64_t v81 = ((v80 >> 3) | ((unint64_t)v75 << 13)) ^ 0x58F620A6;
  int v82 = (v81 >> 21) | (v81 << 11);
  int v333 = *(unsigned __int8 *)(a22
                            + (*(unsigned __int8 *)(a19 + v78) ^ 0xF7)
                            - 2 * ((*(unsigned __int8 *)(a19 + v78) ^ 0xF7) & 0xAEu)
                            + 174)
       - (*(unsigned __int8 *)(a19 + v78) ^ 0xF7);
  uint64_t v83 = *(unsigned __int8 *)(a19 + v79);
  unint64_t v84 = v64 & 0xFFFFFFFC ^ 0x16DF2527;
  STACK[0x398] = v84;
  uint64_t v85 = *(unsigned __int8 *)(a19 + v84);
  int v86 = *(unsigned __int8 *)(a22 + (v83 ^ 0xD8)) + (v83 ^ 0x76) - 2 * (v83 ^ 0x76);
  unint64_t v87 = v71 & 0xFFFFFFF7 ^ 0x16DF252C;
  STACK[0x3C8] = v87;
  int v331 = (v85 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(a23 + (v85 ^ 0x57));
  LOBYTE(v83) = (*(unsigned char *)(a19 + v87) ^ 0xA7) + *(unsigned char *)(a22 + (*(unsigned __int8 *)(a19 + v87) ^ 0xF6));
  char v88 = v83 - ((2 * v83 + 80) & 0x4E);
  unint64_t v89 = v71 & 0xFFFFFFF8 ^ 0x16DF2527;
  STACK[0x390] = v89;
  LOBYTE(v89) = (*(unsigned char *)(a19 + v89) ^ 0xE9) + *(unsigned char *)(a23 + (*(unsigned __int8 *)(a19 + v89) ^ 5));
  int v90 = v71;
  unint64_t v91 = v71 & 0xFFFFFFF2 ^ 0x16DF252D;
  STACK[0x260] = v91;
  uint64_t v92 = v71 & 0xFFFFFFFD ^ 0x16DF2526;
  uint64_t v336 = v92;
  int v93 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v91) ^ 0x12));
  unsigned int v94 = v93 ^ ((((v93 ^ 0xF9) >> 3) & 4 ^ v93 & 0xA4 | ((v93 ^ 0xF9) >> 3) & 0xFB ^ (v93 ^ 0xFFFFFFF9) & 0x5A) >> 1);
  uint64_t v338 = v71 & 0xFFFFFFFA ^ 0x16DF2525;
  LOBYTE(v93) = *(unsigned char *)(a20 + (*(unsigned __int8 *)(a19 + v338) ^ 0x9CLL));
  int v95 = ((v93 ^ 0xF9) >> 4) ^ ((v93 ^ 0xF9) >> 1);
  int v96 = (v89 - 113) | ((v93 ^ a7 ^ (v95 - ((2 * v95) & 0x74) - 70)) << 16);
  unint64_t v97 = v71 & 0xFFFFFFF6 ^ 0x16DF252D;
  STACK[0x240] = v97;
  int v98 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v97) ^ 0x76));
  int v99 = (2 * (v98 & 8)) ^ 0x10 | v98 & 8;
  int v100 = (v98 ^ 0xF9) >> 3;
  BOOL v101 = ((v99 + 56) & v100) == 0;
  char v102 = v99 - 4;
  char v103 = 12 - v99;
  if (v101) {
    char v103 = v102;
  }
  LODWORD(STACK[0x200]) = v90;
  uint64_t v339 = v90 & 0xFFFFFFF4 ^ 0x16DF252F;
  int v104 = v98 ^ ((((v100 + v103 - 4) ^ (v98 ^ 0xF9) & 0xF7) & 0xFE) >> 1);
  char v105 = *(unsigned char *)(a21 + (*(unsigned __int8 *)(a19 + v74) ^ 0xFBLL));
  uint64_t v106 = (uint64_t)*(&off_1F34B17C0 + v66 - 1026);
  HIDWORD(v325) = (v105 ^ (16 * v105)) ^ 0xA8;
  int v107 = *(_DWORD *)(v106 + 4 * ((v105 ^ (16 * v105)) ^ 0x27u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v107 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v107 ^ 0x259A0000;
  uint64_t v337 = v90 & 0xFFFFFFFE ^ 0x16DF2525;
  unsigned int v109 = *(unsigned char *)(a20 + (*(unsigned __int8 *)(a19 + v337) ^ 0xCFLL)) ^ 0xF9;
  uint64_t v110 = (uint64_t)*(&off_1F34B17C0 + v66 - 904);
  LODWORD(v325) = v86 - 25;
  HIDWORD(v335) = v66;
  uint64_t v111 = (uint64_t)*(&off_1F34B17C0 + v66 - 928);
  unint64_t v327 = __PAIR64__(v70, v94);
  int v112 = *(_DWORD *)(v111 + 4 * (v94 ^ 0xDC));
  int v113 = (v108 >> 16) ^ *(_DWORD *)(v110 + 4 * ((v86 - 25) ^ 0xF9u)) ^ (16 * (v112 ^ 0xCF033499)
                                                                                         - 1864160341
                                                                                         - ((32 * (v112 ^ 0xCF033499)) & 0x21C65740));
  unsigned int v114 = v112 ^ (v113 + 1627615267 - ((2 * v113) & 0xC206E046));
  HIDWORD(v324) = v96 ^ v82;
  unsigned int v115 = v96 ^ v82 ^ 0xDD03A24B;
  uint64_t v116 = (char *)*(&off_1F34B17C0 + (v66 & 0x7F375B9E)) - 4;
  unsigned int v117 = *(_DWORD *)&v116[4 * ((v96 ^ v82) ^ 0x78)] ^ v114;
  int v118 = *(_DWORD *)(v106 + 4 * (v70 ^ 0x71u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v118 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v118 ^ 0x259A0000;
  unint64_t v326 = __PAIR64__(v104, *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v337) ^ 0xCFLL)) ^ 0xFFFFFFF9 ^ (v109 >> 4) ^ (v109 >> 1));
  unsigned int v119 = *(_DWORD *)(v111
                   + 4
                   * (*(unsigned char *)(a20 + (*(unsigned __int8 *)(a19 + v337) ^ 0xCFLL)) ^ 0xF9 ^ (v109 >> 4) ^ (v109 >> 1) ^ 0xBFu)) ^ 0xCF033499;
  int v120 = (v108 >> 16) ^ (16 * v119 - 1864160341 - ((32 * v119) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * HIBYTE(v115));
  LODWORD(v324) = (*(unsigned char *)(a23 + (*(unsigned __int8 *)(a19 + v339) ^ 0x12))
                                  + (*(unsigned char *)(a19 + v339) ^ 0xFE)
                                  - 113);
  unsigned int v121 = *(_DWORD *)&v116[4 * (v324 ^ 0xB9)] ^ v119 ^ (v120 + 1627615267 - ((2 * v120) & 0xC206E046));
  unsigned int v122 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a19 + v92) ^ 0x26)) ^ 0xFFFFFFB9;
  int v123 = v122 ^ (16 * v122);
  unsigned int v124 = *(_DWORD *)(v111 + 4 * BYTE2(v115)) ^ 0xCF033499;
  HIDWORD(v323) = v123;
  int v125 = *(_DWORD *)(v106 + 4 * (v123 ^ 0xFBu));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v125 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v125 ^ 0x259A0000;
  HIDWORD(v322) = (v88 + 15);
  int v126 = (v108 >> 16) ^ *(_DWORD *)(v110 + 4 * (HIDWORD(v322) ^ 0x40u)) ^ (16 * v124
                                                                           - 1864160341
                                                                           - ((32 * v124) & 0x21C65740));
  LODWORD(v323) = v334 - 113;
  unsigned int v127 = *(_DWORD *)&v116[4 * ((v334 - 113) ^ 0xEB)] ^ v124 ^ (v126
                                                                              + 1627615267
                                                                              - ((2 * v126) & 0xC206E046));
  int v128 = *(_DWORD *)(v106 + 4 * (BYTE1(v82) ^ 0x31u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v128 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v128 ^ 0x259A0000;
  unsigned int v129 = *(_DWORD *)(v111 + 4 * (v104 ^ 0x85u)) ^ 0xCF033499;
  int v130 = (v108 >> 16) ^ *(_DWORD *)(v110 + 4 * ((v333 - 25) ^ 0xF7u)) ^ (16 * v129
                                                                                          - 1864160341
                                                                                          - ((32 * v129) & 0x21C65740));
  HIDWORD(a24) = v331 - 113;
  LODWORD(v322) = v333 - 25;
  unsigned int v131 = *(_DWORD *)&v116[4 * ((v331 - 113) ^ 0x33)] ^ v129 ^ (v130
                                                                              + 1627615267
                                                                              - ((2 * v130) & 0xC206E046));
  int v132 = *(_DWORD *)(v106 + 4 * (BYTE1(v127) ^ 0xF4u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v132 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v132 ^ 0x259A0000;
  unsigned int v133 = *(_DWORD *)(v111 + 4 * (BYTE2(v131) ^ 0xBBu)) ^ 0xCF033499;
  int v134 = *(_DWORD *)(v111 + 4 * (BYTE2(v117) ^ 0xEFu));
  unsigned int v135 = v133 ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v117) ^ 0x98)) ^ *(_DWORD *)&v116[4 * (v121 ^ 0xDB)] ^ (16 * v133 - 1864160341 - ((32 * v133) & 0x21C65740)) ^ (v108 >> 16);
  int v136 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v131 ^ 0x22E) >> 8));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v136 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v136 ^ 0x259A0000;
  int v137 = (16 * (v134 ^ 0xCF033499) - 1864160341 - ((32 * (v134 ^ 0xCF033499)) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v121 ^ 0xF15ADDB) >> 24)) ^ (v108 >> 16);
  unsigned int v138 = *(_DWORD *)&v116[4 * (v127 ^ 0x80)] ^ v134 ^ (v137 + 1627615267 - ((2 * v137) & 0xC206E046));
  unsigned int v139 = *(_DWORD *)(v111 + 4 * (BYTE2(v121) ^ 0xD6u)) ^ 0xCF033499;
  int v140 = *(_DWORD *)(v106 + 4 * (BYTE1(v117) ^ 0xD2u));
  int v141 = (16 * v139 - 1864160341 - ((32 * v139) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v127) ^ 0x19));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v140 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v140 ^ 0x259A0000;
  unsigned int v142 = *(_DWORD *)&v116[4 * (v131 ^ 0x2E)] ^ v139 ^ (v108 >> 16) ^ (v141
                                                                                     + 1627615267
                                                                                     - ((2 * v141) & 0xC206E046));
  int v143 = *(_DWORD *)(v111 + 4 * (BYTE2(v127) ^ 0x32u));
  int v144 = *(_DWORD *)(v106 + 4 * (BYTE1(v121) ^ 0xADu));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v144 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v144 ^ 0x259A0000;
  int v145 = (v108 >> 16) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v131) ^ 0xBD)) ^ (16 * (v143 ^ 0xCF033499)
                                                                         - 1864160341
                                                                         - ((32 * (v143 ^ 0xCF033499)) & 0x21C65740));
  unsigned int v146 = v143 ^ *(_DWORD *)&v116[4 * (v117 ^ 0x39)] ^ 0xBECAE25D ^ (v145
                                                                                   + 1627615267
                                                                                   - ((2 * v145) & 0xC206E046));
  unsigned int v147 = v146
       - ((2 * v146) & 0x5F186BF6)
       + 797718011
       - ((2 * (v146 - ((2 * v146) & 0x5F186BF6) + 797718011)) & 0xA8952D02)
       - 733309311;
  int v148 = *(_DWORD *)(v111 + 4 * (BYTE2(v147) ^ 0x89u));
  BYTE2(v127) = BYTE2(v142) ^ 0xEB;
  int v149 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v142 ^ 0xDFF9) >> 8));
  unsigned int v150 = (16 * (v148 ^ 0xCF033499) - 1864160341 - ((32 * (v148 ^ 0xCF033499)) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v135) ^ 0xF7)) ^ (((v149 ^ 0x259ADE43u) >> (v135 & 0x10) >> (v135 & 0x10 ^ 0x10)) + ((v149 << 16) ^ 0xDE430000));
  unsigned int v151 = *(_DWORD *)&v116[4 * (v138 ^ 0x40)] ^ v148 ^ (v150 + 1627615267 - ((2 * v150) & 0xC206E046));
  LOWORD(v14_Block_object_dispose(&STACK[0x360], 8) = v135 ^ 0xA403;
  unsigned int v152 = *(_DWORD *)(v111 + 4 * ((v135 ^ 0x1E59A403) >> 16)) ^ 0xCF033499;
  int v153 = *(_DWORD *)(v106 + 4 * (BYTE1(v147) ^ 5u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v153 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v153 ^ 0x259A0000;
  int v154 = (16 * v152 - 1864160341 - ((32 * v152) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v138) ^ 0x84)) ^ (v108 >> 16);
  int v155 = *(_DWORD *)&v116[4 * (v142 ^ 0xF9)] ^ v152;
  int v156 = *(_DWORD *)(v110 + 4 * (HIBYTE(v142) ^ 5));
  unsigned int v157 = v155 ^ (v154 + 1627615267 - ((2 * v154) & 0xC206E046));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v156 ^ 0x3AB;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v156 ^ 0x90E32800;
  unsigned int v158 = *(_DWORD *)(v111 + 4 * (BYTE2(v138) ^ 0x36u)) ^ 0xCF033499;
  unsigned int v159 = (((v108 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v158) ^ (((v108 >> 10) ^ 0x25EB099C) >> 22);
  int v160 = *(_DWORD *)(v106 + 4 * BYTE1(v148));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v160 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v160 ^ 0x259A0000;
  int v161 = *(_DWORD *)&v116[4 * (v147 ^ 0xB2)] ^ v158 ^ (v108 >> 16);
  int v162 = *(_DWORD *)(v106 + 4 * (BYTE1(v138) ^ 0xF9u));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v162 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v162 ^ 0x259A0000;
  int v163 = *(_DWORD *)(v111 + 4 * BYTE2(v127));
  unsigned int v164 = v161 ^ (v159 + 1627615267 - ((2 * v159) & 0xC206E046));
  int v165 = (v108 >> 16) ^ (16 * (v163 ^ 0xCF033499) - 1864160341 - ((32 * (v163 ^ 0xCF033499)) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v147) ^ 0x3D));
  unsigned int v166 = *(_DWORD *)&v116[4 * (v148 ^ 0x33)] ^ v163 ^ 0xCF033499 ^ (v165
                                                                                   + 1627615267
                                                                                   - ((2 * v165) & 0xC206E046));
  unsigned int v167 = *(_DWORD *)(v111 + 4 * (BYTE2(v166) ^ 0x62u)) ^ 0xCF033499;
  int v168 = (16 * v167 - 1864160341 - ((32 * v167) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v151) ^ 0x12));
  unsigned __int8 v169 = BYTE2(v164) ^ 0xF7;
  int v170 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v164 ^ 0xE4A6) >> 8));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v170 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v170 ^ 0x259A0000;
  unsigned int v171 = *(_DWORD *)&v116[4 * (v157 ^ 0x68)] ^ v167 ^ (v108 >> 16) ^ (v168
                                                                                     + 1627615267
                                                                                     - ((2 * v168) & 0xC206E046));
  unsigned int v172 = *(_DWORD *)(v111 + 4 * (BYTE2(v151) ^ 0x58u)) ^ 0xCF033499;
  int v173 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v166 ^ 0x2957) >> 8));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v173 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v173 ^ 0x259A0000;
  int v174 = (16 * v172 - 1864160341 - ((32 * v172) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v157) ^ 0xCE)) ^ (v108 >> 16);
  unsigned int v175 = *(_DWORD *)&v116[4 * (v164 ^ 0x15)] ^ v172 ^ (v174 + 1627615267 - ((2 * v174) & 0xC206E046));
  unsigned int v176 = *(_DWORD *)(v111 + 4 * (BYTE2(v157) ^ 0x60u)) ^ 0xCF033499;
  int v177 = *(_DWORD *)(v106 + 4 * (BYTE1(v151) ^ 0xAFu));
  HIDWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v177 ^ 0xDE43;
  LODWORD(v10_Block_object_dispose(&STACK[0x360], 8) = v177 ^ 0x259A0000;
  int v178 = (16 * v176 - 1864160341 - ((32 * v176) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v164 ^ 0xF1F7E4A6) >> 24)) ^ (v108 >> 16);
  unsigned int v179 = *(_DWORD *)&v116[4 * (v166 ^ 0x57)] ^ v176 ^ (v178 + 1627615267 - ((2 * v178) & 0xC206E046));
  if ((v157 & 0x1000) != 0) {
    int v180 = -16;
  }
  else {
    int v180 = 16;
  }
  unsigned int v181 = *(_DWORD *)(v111 + 4 * v169) ^ 0xCF033499;
  unsigned int v182 = *(_DWORD *)(v106 + 4 * (((BYTE1(v157) ^ 0xC) + v180) ^ 0x83u));
  unsigned int v183 = *(_DWORD *)(v110 + 4 * (HIBYTE(v166) ^ 0xA1)) ^ HIWORD(v182) ^ (v182 << 16) ^ (16 * v181
                                                                                        - 1864160341
                                                                                        - ((32 * v181) & 0x21C65740)) ^ 0xDE43259A;
  unsigned int v184 = *(_DWORD *)&v116[4 * (v151 ^ 0xFA)] ^ v181 ^ (v183 + 1627615267 - ((2 * v183) & 0xC206E046));
  unsigned int v185 = v184 ^ 0xEFBC3B44;
  unsigned int v186 = *(_DWORD *)(v111 + 4 * ((v184 ^ 0xEFBC3B44) >> 16)) ^ 0xCF033499;
  int v187 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v179 ^ 0x8D48) >> 8));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v187 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v187 ^ 0x259A0000;
  int v189 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v171) ^ 0xCC)) ^ (16 * v186
                                                                         - 1864160341
                                                                         - ((32 * v186) & 0x21C65740));
  int v190 = *(_DWORD *)&v116[4 * (v175 ^ 0xA9)] ^ v186;
  LOWORD(v186) = v171 ^ 0xD583;
  unsigned int v191 = v190 ^ (v189 + 1627615267 - ((2 * v189) & 0xC206E046));
  unsigned int v192 = *(_DWORD *)(v111 + 4 * (((v171 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xCF033499;
  int v193 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v184 ^ 0x3B44) >> 8));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v193 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v193 ^ 0x259A0000;
  int v194 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * HIBYTE(v175)) ^ (16 * v192 - 1864160341 - ((32 * v192) & 0x21C65740));
  unsigned int v195 = *(_DWORD *)&v116[4 * (v179 ^ 0x48)] ^ v192 ^ (v194 + 1627615267 - ((2 * v194) & 0xC206E046));
  unsigned int v196 = *(_DWORD *)(v111 + 4 * ((v175 ^ 0xE93411A9) >> 16)) ^ 0xCF033499;
  int v197 = *(_DWORD *)(v106 + 4 * BYTE1(v186));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v197 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v197 ^ 0x259A0000;
  int v198 = (16 * v196 - 1864160341 - ((32 * v196) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v179 ^ 0x807D8D48) >> 24)) ^ (v188 >> 16);
  unsigned int v199 = *(_DWORD *)&v116[4 * (v184 ^ 0x77)] ^ v196 ^ (v198 + 1627615267 - ((2 * v198) & 0xC206E046));
  unsigned int v200 = *(_DWORD *)(v111 + 4 * (BYTE2(v179) ^ 0xBEu)) ^ 0xCF033499;
  int v201 = *(_DWORD *)(v106 + 4 * (BYTE1(v175) ^ 0x82u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v201 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v201 ^ 0x259A0000;
  int v202 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * HIBYTE(v185)) ^ (16 * v200 - 1864160341 - ((32 * v200) & 0x21C65740));
  unsigned int v203 = *(_DWORD *)&v116[4 * v186] ^ v200 ^ (v202 + 1627615267 - ((2 * v202) & 0xC206E046));
  unsigned int v204 = *(_DWORD *)(v111 + 4 * ((v203 ^ 0x950DA39D) >> 16)) ^ 0xCF033499;
  int v205 = *(_DWORD *)(v106 + 4 * (BYTE1(v199) ^ 0x89u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v205 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v205 ^ 0x259A0000;
  int v206 = (16 * v204 - 1864160341 - ((32 * v204) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v191 ^ 0x11521BCA) >> 24));
  unsigned int v207 = v206 + 1627615267 - ((2 * v206) & 0xC206E046);
  BYTE1(v206) = BYTE1(v195) ^ 0xD1;
  int v208 = *(_DWORD *)&v116[4 * (v195 ^ 0x88)] ^ v204 ^ (v188 >> 16) ^ 0x71C9D6C4 ^ v207;
  int v209 = *(_DWORD *)(v111 + 4 * ((v191 ^ 0x11521BCA) >> 16));
  int v210 = *(_DWORD *)(v106 + 4 * (BYTE1(v203) ^ 0x30u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v210 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v210 ^ 0x259A0000;
  int v211 = (16 * (v209 ^ 0xCF033499) - 1864160341 - ((32 * (v209 ^ 0xCF033499)) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v195) ^ 0xDF)) ^ (v188 >> 16);
  BYTE2(v210) = BYTE2(v199) ^ 0x85;
  unsigned int v212 = *(_DWORD *)&v116[4 * (v199 ^ 0x43)] ^ v209 ^ (v211 + 1627615267 - ((2 * v211) & 0xC206E046));
  unsigned int v213 = *(_DWORD *)(v111 + 4 * (BYTE2(v195) ^ 0xA7u)) ^ 0xCF033499;
  int v214 = *(_DWORD *)(v106 + 4 * (BYTE1(v191) ^ 0x88u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v214 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v214 ^ 0x259A0000;
  int v215 = (16 * v213 - 1864160341 - ((32 * v213) & 0x21C65740)) ^ *(_DWORD *)(v110
                                                                           + 4
                                                                           * ((((v199 ^ 0x7A851A70) >> 24) ^ -((v199 ^ 0x7A851A70) >> 24) ^ ((((v199 ^ 0x7A851A70) >> 24) ^ 0xFFFFFF16) + 234))
                                                                            + 233)) ^ (v188 >> 16);
  unsigned int v216 = *(_DWORD *)&v116[4 * (v203 ^ 0x9D)] ^ v213 ^ (v215 + 1627615267 - ((2 * v215) & 0xC206E046));
  int v217 = *(_DWORD *)(v106 + 4 * BYTE1(v206));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v217 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v217 ^ 0x259A0000;
  int v218 = *(_DWORD *)(v110 + 4 * (HIBYTE(v203) ^ 0x7C));
  int v219 = *(_DWORD *)(v111 + 4 * BYTE2(v210));
  int v220 = (v188 >> 16) ^ v218 ^ (16 * (v219 ^ 0xCF033499) - 1864160341 - ((32 * (v219 ^ 0xCF033499)) & 0x21C65740));
  unsigned int v221 = *(_DWORD *)&v116[4 * (v191 ^ 0xF9)] ^ v219 ^ (v220 + 1627615267 - ((2 * v220) & 0xC206E046));
  int v222 = *(_DWORD *)(v111 + 4 * (BYTE2(v221) ^ 0x84u));
  int v223 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v216 ^ 0xDE69) >> 8));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v223 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v223 ^ 0x259A0000;
  unsigned int v224 = v208 - ((2 * v208) & 0x408989A) - 2113647539;
  int v225 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v224) ^ 0xEB)) ^ (16 * (v222 ^ 0xCF033499)
                                                                         - 1864160341
                                                                         - ((32 * (v222 ^ 0xCF033499)) & 0x21C65740));
  int v226 = *(_DWORD *)(v106 + 4 * (BYTE1(v221) ^ 0xBu));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v226 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v226 ^ 0x259A0000;
  unsigned int v227 = *(_DWORD *)&v116[4 * (v212 ^ 0x4A)] ^ v222 ^ (v225 + 1627615267 - ((2 * v225) & 0xC206E046));
  unsigned int v228 = *(_DWORD *)(v111 + 4 * (BYTE2(v224) ^ 0x6Eu)) ^ 0xCF033499;
  unsigned int v229 = v228 ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v212) ^ 0x12)) ^ *(_DWORD *)&v116[4 * (v216 ^ 0x69)] ^ ((v188 >> 16) + 1627615267 - ((2 * (v188 >> 16)) & 0xC206E046)) ^ (16 * v228 - 1864160341 - ((32 * v228) & 0x21C65740));
  unsigned int v230 = *(_DWORD *)(v111 + 4 * (BYTE2(v212) ^ 0xF9u)) ^ 0xCF033499;
  int v231 = *(_DWORD *)(v106 + 4 * (BYTE1(v224) ^ 0x27u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v231 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v231 ^ 0x259A0000;
  int v232 = (16 * v230 - 1864160341 - ((32 * v230) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v216 ^ 0x5FEEDE69) >> 24)) ^ (v188 >> 16);
  LOBYTE(v219) = (HIBYTE(v221) ^ 0xDA) & 0x90 ^ 0x86 ^ (~(2 * (HIBYTE(v221) ^ 0xDA | 0x90))
                                                      + (HIBYTE(v221) ^ 0xDA | 0x90));
  unsigned int v233 = *(_DWORD *)&v116[4 * (((v221 ^ 0xD6) + (v221 ^ 0xFFFFFF1A) + 1) ^ 0xFFFFFFFE)
                        + 4 * (v221 ^ 0xD6)] ^ v230 ^ (v232 + 1627615267 - ((2 * v232) & 0xC206E046));
  unsigned int v234 = *(_DWORD *)(v111 + 4 * (BYTE2(v216) ^ 0x2Du)) ^ 0xCF033499;
  int v235 = *(_DWORD *)(v106 + 4 * (BYTE1(v212) ^ 0xEBu));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v235 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v235 ^ 0x259A0000;
  int v236 = (v188 >> 16) ^ (16 * v234 - 1864160341 - ((32 * v234) & 0x21C65740)) ^ *(_DWORD *)(v110
                                                                                          + 4 * v219);
  unsigned int v237 = *(_DWORD *)&v116[4 * (v224 ^ 0x16)] ^ v234 ^ (v236 + 1627615267 - ((2 * v236) & 0xC206E046));
  unsigned int v238 = *(_DWORD *)(v111 + 4 * ((v237 ^ 0x59A5F4B7) >> 16)) ^ 0xCF033499;
  int v239 = *(_DWORD *)(v106 + 4 * ((unsigned __int16)(v233 ^ 0x872B) >> 8));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v239 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v239 ^ 0x259A0000;
  int v240 = (16 * v238 - 1864160341 - ((32 * v238) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v227) ^ 0x1D)) ^ (v188 >> 16);
  unsigned int v241 = *(_DWORD *)&v116[4 * (v229 ^ 0xEE)] ^ v238 ^ (v240 + 1627615267 - ((2 * v240) & 0xC206E046));
  unsigned int v242 = *(_DWORD *)(v111 + 4 * (BYTE2(v227) ^ 0x26u)) ^ 0xCF033499;
  int v243 = *(_DWORD *)(v106 + 4 * (BYTE1(v237) ^ 0x67u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v243 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v243 ^ 0x259A0000;
  int v244 = v242 ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v229) ^ 0xD6)) ^ *(_DWORD *)&v116[4 * (v233 ^ 0x18)] ^ (16 * v242 - 1864160341 - ((32 * v242) & 0x21C65740)) ^ ((v188 >> 16) + 1627615267 - ((2 * (v188 >> 16)) & 0xC206E046));
  int v245 = *(_DWORD *)(v106 + 4 * (BYTE1(v227) ^ 0x8Fu));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v245 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v245 ^ 0x259A0000;
  unsigned int v246 = *(_DWORD *)(v111 + 4 * (BYTE2(v229) ^ 0x56u)) ^ 0xCF033499;
  int v247 = *(_DWORD *)(v110 + 4 * ((v233 ^ 0x911B872B) >> 24)) ^ v246 ^ 0x6D41727E ^ (16 * v246
                                                                                    - 1864160341
                                                                                    - ((32 * v246) & 0x21C65740)) ^ (v188 >> 16);
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)&v116[4 * (v237 ^ 0xB7)] ^ 0x7D8BD499;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = HIDWORD(v188);
  int v248 = (v188 >> 21) ^ __ROR4__(v247, 21);
  int v249 = *(_DWORD *)(v106 + 4 * (BYTE1(v229) ^ 0xE4u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v249 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v249 ^ 0x259A0000;
  unsigned int v250 = *(_DWORD *)(v111 + 4 * (BYTE2(v233) ^ 0xD8u)) ^ 0xCF033499;
  int v251 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v237) ^ 0xB0)) ^ (16 * v250
                                                                         - 1864160341
                                                                         - ((32 * v250) & 0x21C65740));
  unsigned int v252 = v251 + 1627615267 - ((2 * v251) & 0xC206E046);
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v248 ^ 0x549BF9D9;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v248 ^ 0x549BF9D9;
  int v253 = v188 >> 11;
  int v254 = *(_DWORD *)(v106 + 4 * (BYTE1(v253) ^ 0xA0u));
  unsigned int v255 = *(_DWORD *)&v116[4 * (v227 ^ 0x3F)] ^ v250 ^ v252;
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v254 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v254 ^ 0x259A0000;
  unsigned int v256 = *(_DWORD *)(v111 + 4 * (BYTE2(v255) ^ 0x72u)) ^ 0xCF033499;
  int v257 = (v188 >> 16) ^ *(_DWORD *)(v110 + 4 * ((v241 ^ 0xD4B73D47) >> 24)) ^ (16 * v256
                                                                               - 1864160341
                                                                               - ((32 * v256) & 0x21C65740));
  unsigned int v258 = *(_DWORD *)&v116[4 * (v244 ^ 0xEA)] ^ v256 ^ (v257 + 1627615267 - ((2 * v257) & 0xC206E046));
  unsigned int v259 = *(_DWORD *)(v111 + 4 * (BYTE2(v241) ^ 0x74u)) ^ 0xCF033499;
  int v260 = *(_DWORD *)(v106 + 4 * (BYTE1(v255) ^ 0x66u));
  HIDWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v260 ^ 0xDE43;
  LODWORD(v18_Block_object_dispose(&STACK[0x360], 8) = v260 ^ 0x259A0000;
  unsigned int v261 = v244 ^ 0x177CD9D9;
  int v262 = *(_DWORD *)(v110 + 4 * HIBYTE(v261)) ^ 0x6D41727E ^ v259 ^ (v188 >> 16) ^ (16 * v259
                                                                                    - 1864160341
                                                                                    - ((32 * v259) & 0x21C65740));
  int v263 = *(_DWORD *)&v116[4 * (v253 ^ 0xEF)];
  int v264 = v262 & 0x200 | 0x2E7879AD;
  if ((v262 & 0x200 & (unsigned __int16)v263) != 0) {
    int v264 = 1559294810 - v264;
  }
  unsigned int v265 = ((v263 ^ 0x7D8BD499) - 779647405 + v264) ^ v262 & 0xFFFFFDFF;
  unsigned int v266 = *(_DWORD *)(v111 + 4 * BYTE2(v261)) ^ 0xCF033499;
  int v267 = *(_DWORD *)(v106 + 4 * (BYTE1(v241) ^ 0xAEu));
  HIDWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v267 ^ 0xDE43;
  LODWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v267 ^ 0x259A0000;
  int v269 = (16 * v266 - 1864160341 - ((32 * v266) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * ((v253 ^ 0x1EA133EFu) >> 24));
  unsigned int v270 = *(_DWORD *)&v116[4 * (v255 ^ 0xD)] ^ v266 ^ (v268 >> 16) ^ (v269
                                                                                    + 1627615267
                                                                                    - ((2 * v269) & 0xC206E046));
  int v271 = *(_DWORD *)(v106 + 4 * BYTE1(v261));
  unsigned int v272 = *(_DWORD *)(v111 + 4 * (BYTE2(v253) ^ 0x62u)) ^ 0xCF033499;
  HIDWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v271 ^ 0xDE43;
  LODWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v271 ^ 0x259A0000;
  int v273 = (16 * v272 - 1864160341 - ((32 * v272) & 0x21C65740)) ^ *(_DWORD *)(v110 + 4 * (HIBYTE(v255) ^ 0x32)) ^ (v268 >> 16);
  int v274 = v66;
  unsigned int v275 = *(_DWORD *)&v116[4 * (v241 ^ 0x74)] ^ v272 ^ (v273 + 1627615267 - ((2 * v273) & 0xC206E046));
  v276 = (char *)*(&off_1F34B17C0 + v66 - 941) - 12;
  uint64_t v277 = (uint64_t)*(&off_1F34B17C0 + (v66 ^ 0x474));
  LODWORD(v335) = 2147483639;
  v278 = (char *)*(&off_1F34B17C0 + (v66 ^ 0x484)) - 12;
  unsigned int v279 = *(_DWORD *)(v277 + 4 * (BYTE2(v258) ^ 0x99u)) ^ 0x32930FCF;
  unsigned int v280 = ((((v265 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 2124560027
        + *(_DWORD *)&v276[4 * (((v265 ^ 0xF137909F) >> 24) ^ 0xB4)]) ^ ((v270 ^ 0x7B)
                                                                       - 718778587
                                                                       + ((2
                                                                         * (((v270 ^ 0xBC37B) + 112) & 0xBC ^ (v270 ^ 0xBC37B | 0x7FFFFFF7))) ^ 0xB0612011)) ^ v279 ^ (v279 >> 2) ^ *(_DWORD *)&v278[4 * (v270 ^ 0x79)] ^ (v279 >> 4);
  v281 = (char *)*(&off_1F34B17C0 + v66 - 950) - 4;
  int v282 = v275 ^ 0x250E7C9C;
  int v283 = *(_DWORD *)&v281[4 * ((unsigned __int16)(v275 ^ 0x7C9C) >> 8)] ^ 0x7EB00795;
  int v284 = v283 ^ (1515496080 * v283);
  int v285 = *(_DWORD *)&v276[4 * (((v258 ^ 0x6792B6A6) >> 24) ^ 0xB4)];
  LODWORD(v330) = *(_DWORD *)&v276[4 * (HIBYTE(v270) ^ 0xB4)];
  LODWORD(v332) = (v275 ^ 0x250E7C9C) >> 24;
  HIDWORD(v332) = *(_DWORD *)&v276[4 * (v332 ^ 0xB4)];
  int v286 = *(_DWORD *)(v277 + 4 * (BYTE2(v275) ^ 5u));
  HIDWORD(v330) = *(_DWORD *)(v277 + 4 * ((v270 ^ 0xBC37B) >> 16));
  int v287 = *(_DWORD *)&v281[4 * ((unsigned __int16)(v270 ^ 0xC37B) >> 8)];
  HIDWORD(v32_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v277 + 4 * ((v265 ^ 0xF137909F) >> 16));
  LODWORD(v329) = *(_DWORD *)&v281[4 * ((unsigned __int16)(v258 ^ 0xB6A6) >> 8)];
  int v288 = *(_DWORD *)&v281[4 * (BYTE1(v265) ^ 0x5E)];
  int v289 = *(_DWORD *)&v278[4 * (v265 ^ 0x9D)];
  uint64_t v290 = *(unsigned int *)&v278[4 * (v275 ^ 0x9E)];
  HIDWORD(v329) = *(_DWORD *)&v278[4 * (v258 ^ 0xA4)];
  unsigned int v291 = ((v280 ^ v284) - 326887417 - ((2 * (v280 ^ v284)) & 0xD908305E) + 40) ^ LODWORD(STACK[0x290]);
  v292 = (char *)*(&off_1F34B17C0 + v66 - 983) - 8;
  *(unsigned char *)(a18 + v33_Block_object_dispose(&STACK[0x360], 8) = v292[((v291 ^ 0x5244C6B3) >> 16) ^ 0x5ELL] ^ ((v291 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v291 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v291 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0x9A) - 60) ^ 0xB9;
  unsigned int v293 = v286 ^ 0x32930FCF ^ ((((v258 ^ 0x6792B6A6) >> 24) ^ 0x9FD52929) - 2124560027 + v285) ^ ((v286 ^ 0x32930FCFu) >> 2) ^ ((v286 ^ 0x32930FCFu) >> 4) ^ v287 ^ 0x7EB00795 ^ v289 ^ (1515496080 * (v287 ^ 0x7EB00795)) ^ (~((2 * (v265 ^ 0x9F) - 102555424) & 0xB0612168) + (v265 ^ 0x9F) - 718778587);
  unsigned int v294 = (v293 + 1790453613 - ((2 * v293) & 0xD5704FAC) + 105) ^ LODWORD(STACK[0x3A0]);
  unsigned int v295 = v294 ^ 0x22A932A6;
  uint64_t v296 = (BYTE1(v295) | 0x88) ^ (v295 >> 8) & 0x88;
  v297 = (char *)*(&off_1F34B17C0 + v66 - 981) - 4;
  *(unsigned char *)(a18 + v336) = (((unsigned __int16)(v294 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v294 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v297[v296 ^ 0x14] ^ 0x15) + ((2 * v297[v296 ^ 0x14]) | 0xDF) - 111);
  int v298 = HIDWORD(v328) ^ 0x32930FCF ^ ((HIBYTE(v270) ^ 0x9FD52929) - 2124560027 + v330) ^ ((HIDWORD(v328) ^ 0x32930FCFu) >> 2) ^ ((HIDWORD(v328) ^ 0x32930FCFu) >> 4);
  unsigned int v299 = (v298 & 0x1000000 ^ 0xCFAEEF73) + 2 * (v298 & 0x1000000);
  BOOL v101 = ((v299 + 810619021) & (v290 ^ 0x58000000)) == 0;
  v300 = (char *)*(&off_1F34B17C0 + (HIDWORD(v335) ^ 0x452)) - 8;
  LODWORD(v276) = v300[HIBYTE(v291) ^ 0xEFLL];
  HIDWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v276 ^ 7;
  LODWORD(v26_Block_object_dispose(&STACK[0x360], 8) = (v276 ^ 0x60) << 24;
  *(unsigned char *)(a18 + STACK[0x2F8]) = (v268 >> 29) ^ 0x83;
  unsigned int v301 = v299 + 2146697103;
  unsigned int v302 = 525459061 - v299;
  if (v101) {
    unsigned int v302 = v301;
  }
  int v303 = v298 & 0xFEFFFFFF ^ (1515496080 * (v329 ^ 0x7EB00795)) ^ ((v290 ^ (v282
                                                                          - 718778587
                                                                          + ((2
                                                                            * ((v282 + 112) & 0xBC ^ (v282 | 0x7FFFFFF7))) ^ 0xB0612011)))
                                                                 - 1336078082
                                                                 + v302);
  unsigned int v304 = v329 ^ 0x7EB00795 ^ LODWORD(STACK[0x3D0]) ^ (v303 + 654978696 - ((2 * v303) & 0x4E145D10));
  v305 = (char *)*(&off_1F34B17C0 + (int)(v274 & 0x9B782349)) - 4;
  LOBYTE(v303) = v305[v329 ^ 0x95u ^ LOBYTE(STACK[0x3D0]) ^ (v303
                                                                                             - 120
                                                                                             - ((2 * v303) & 0x10)) ^ 0x28];
  *(unsigned char *)(a18 + v339) = v303 & 0xFB ^ ((v303 | 0xFB) + 24) ^ 0x81;
  int v306 = v300[HIBYTE(v294) ^ 0xF9];
  HIDWORD(v307) = v306 ^ 7;
  LODWORD(v307) = (v306 ^ 0x60) << 24;
  unint64_t v308 = STACK[0x288];
  *(unsigned char *)(a18 + STACK[0x288]) = (v307 >> 29) ^ 0xFB;
  *(unsigned char *)(a18 + v337) = BYTE2(v295) ^ 0x61 ^ ((BYTE2(v295) ^ 0x61) - ((2 * (BYTE2(v295) ^ 0x61) - 18) & 0x9A) - 60) ^ 0xB8 ^ v292[BYTE2(v295) ^ 0xB5];
  int v309 = (v332 ^ 0x9FD52929) - 2124560027 + HIDWORD(v332);
  unsigned int v310 = HIDWORD(v330) ^ 0x32930FCF ^ ((HIDWORD(v330) ^ 0x32930FCFu) >> 4) ^ ((HIDWORD(v330) ^ 0x32930FCFu) >> 2);
  unsigned int v311 = (v310 & 0x80000 ^ 0x99BBFBEB) + 2 * (v310 & 0x80000);
  BOOL v101 = ((v311 + 1715733525) & v309) == 0;
  unsigned int v312 = v311 + 1987020512;
  unsigned int v313 = -1444446538 - v311;
  if (v101) {
    unsigned int v313 = v312;
  }
  unsigned int v314 = HIDWORD(v329) ^ ((v258 ^ 0xA6) + 2096205936) ^ (((v309 - 271286987 + v313) ^ v310 & 0xFFF7FFFF ^ (1515496080 * (v288 ^ 0x7EB00795)))
                                                                        + 1479982772
                                                                        - 2
                                                                        * (((v309 - 271286987 + v313) ^ v310 & 0xFFF7FFFF ^ (1515496080 * (v288 ^ 0x7EB00795))) & 0x5836BEBE ^ ((v309 - 271286987 + v313) ^ v310 & 0xFFF7FFFF) & 0xA));
  unsigned int v315 = v288 ^ LODWORD(STACK[0x3E8]) ^ (v314 + 2044105813 - ((2 * v314) & 0xF3AD28CA) + 16);
  *(unsigned char *)(a18 + STACK[0x260]) = v292[(BYTE2(v315) ^ 0x2B) - ((v315 >> 15) & 0x1A8) + 212] ^ BYTE2(v315) ^ ((BYTE2(v315) ^ 0x2B) - ((2 * (BYTE2(v315) ^ 0x2B) - 18) & 0x9A) - 60) ^ 0xAD;
  int v316 = v300[HIBYTE(v315) ^ 0x84];
  HIDWORD(v317) = v316 ^ 7;
  LODWORD(v317) = (v316 ^ 0x60) << 24;
  *(unsigned char *)(a18 + STACK[0x300]) = (v317 >> 29) ^ 0x50;
  unsigned int v318 = ((v304 ^ 0xCFDDD967) >> 16) ^ 0xFFFFFF94;
  *(unsigned char *)(a18 + STACK[0x240]) = v318 ^ (v318 - ((2 * v318 - 18) & 0x9A) - 60) ^ v292[((v304 ^ 0xCFDDD967) >> 16) ^ 0x40] ^ 0xC;
  unsigned int v319 = (((v315 ^ 0x218595BA) >> 4) & 0xF0 | ((unsigned __int16)(v315 ^ 0x95BA) >> 12)) ^ 0xE6;
  *(unsigned char *)(a18 + STACK[0x3E0]) = v297[((v319 >> 4) & 0xFFFFFF0F | (16 * (v319 & 0xF))) ^ 0xAELL] ^ (((v319 >> 4) & 0xF | (16 * (v319 & 0xF))) - ((2 * ((v319 >> 4) & 0xF | (16 * (v319 & 0xF)))) & 0x2A) + 21) ^ 0x2B;
  *(unsigned char *)(a18 + v340) = (((unsigned __int16)(v304 ^ 0xD967) >> 8) - (((v304 ^ 0xCFDDD967) >> 7) & 0x2A) + 21) ^ 0xDB ^ v297[((unsigned __int16)(v304 ^ 0xD967) >> 8) ^ 0xA0];
  *(unsigned char *)(a18 + STACK[0x3D8]) = (((unsigned __int16)(v291 ^ 0xC6B3) >> 8) - (((v291 ^ 0x5244C6B3) >> 7) & 0x2A) + 21) ^ v297[((unsigned __int16)(v291 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  *(unsigned char *)(a18 + STACK[0x398]) = v305[v294 ^ 0x95] ^ 0x3F;
  *(unsigned char *)(a18 + STACK[0x390]) = v305[v291 ^ 0x7FLL] ^ 0xAE;
  *(unsigned char *)(a18 + STACK[0x408]) = v305[v315 ^ 0x15] ^ 1;
  int v320 = v300[HIBYTE(v304) ^ 0x49];
  HIDWORD(v317) = v320 ^ 7;
  LODWORD(v317) = (v320 ^ 0x60) << 24;
  *(unsigned char *)(a18 + STACK[0x3C8]) = (v317 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * ((102 * (((v308 + 383722804 - 2 * ((v308 + 16) & 0x16DF2525 ^ STACK[0x200] & 1)) ^ 0x16DF2520u) < 0x150)) ^ v274)))(v318 - ((2 * v318 - 18) & 0x9A) - 60, v300, 21, 2959155217, 2125465493, v290, 230, 154, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           v322,
           v323,
           v324,
           v325,
           v326,
           v327,
           v328,
           v329,
           v330,
           v332,
           v335,
           v336,
           v337,
           v338,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           v339,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1DA706128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a7 + ((v8 + 1195) ^ (a6 + 1424)) + 16) * ((v7 ^ 0x29u) > 7)) ^ v8)))();
}

uint64_t sub_1DA706160@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v7 = *((_DWORD *)&STACK[0x2A0] + ((v5 + a2) >> (v3 - 104)) + 18);
  *(unsigned char *)(a1 + (v5 + a2)) = (HIBYTE(v7) ^ 0xB6) - ((2 * (HIBYTE(v7) ^ 0xB6)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE2(v7) ^ 0x79) - ((2 * (BYTE2(v7) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE1(v7) ^ 0xA3) + (~(2 * (BYTE1(v7) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = v7 ^ 0x61;
  unsigned int v8 = LODWORD(STACK[0x2FC]) - 303278638;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 - 1308588112 < v8;
  if (v5 - 1308588112 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

void sub_1DA706240(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) - 1225351577 * (((a1 | 0x28B74694) - a1 + (a1 & 0xD748B96B)) ^ 0xB2D9E82);
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = v1 + 460628867 * (((&v4 | 0xE1CD3823) + (~&v4 | 0x1E32C7DC)) ^ 0xAD5BBA5F) - 463;
  uint64_t v4 = v2;
  int v3 = (char *)*(&off_1F34B17C0 + v1 - 1226) - 8;
  (*(void (**)(uint64_t *))&v3[8 * v1 + 5488])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA70638C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v1 + 1025419937) & 0xC2E153DF) + 72) ^ 0x135)
                                     * ((unint64_t)(v2 - a1) > 0x1F)) ^ (v1 + 291))))();
}

uint64_t sub_1DA7063D8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((93 * (v1 ^ 0x15C)) ^ 0x2DB) - 749) * (v0 > 0x1F)) ^ v1)))();
}

uint64_t sub_1DA706414@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  unsigned int v58 = a2 ^ ((*v57 & 0x7FFFFFFE | v57[623] & 0x80000000) >> 1);
  v57[623] = v57[396] ^ a3 ^ *((_DWORD *)&a55 + (*v57 & 1)) ^ (v58
                                                               + v56
                                                               - ((((a4 + 1240447354) & 0xF7BEFF6F ^ 0xCDB9A498)
                                                                 + a1
                                                                 + a4
                                                                 - 644) & (2 * v58)));
  return (*(uint64_t (**)(void))(v55 + 8 * ((1581 * (a37 > 0x26F)) ^ a4)))();
}

uint64_t sub_1DA7064AC()
{
  return 4294925278;
}

void sub_1DA7064B4()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 262));
  JUMPOUT(0x1DA72AF0CLL);
}

uint64_t sub_1DA7064D8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v1 - 302) | 0xE0) + 78) ^ 0x767 ^ ((v1 - 302) | 0xE0))))();
}

uint64_t sub_1DA70654C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((**(_DWORD **)(a11 - 0x11127EB20C1B74FELL) != v11)
                                              * ((((v12 ^ 0x2EC) - 960199999) & 0x393B7DF5) + 64)) ^ v12 ^ 0x2EC)))(3334767297);
}

void sub_1DA706638(uint64_t a1, uint64_t a2, int a3)
{
  (*(void (**)(void, void, void))(v3 + 8 * (((a3 - 637) | 0x100) + 1747)))(*v6, *v9, *(_DWORD *)(v4 - 0x68A89052B2EA55B8) + (((((a3 - 637) | 0x100) + 337) | 0x10) ^ 0xB0063F12));
  *BOOL v9 = v8;
  *(_DWORD *)(v4 - 0x68A89052B2EA55B_Block_object_dispose(&STACK[0x360], 8) = v7;
  _DWORD *v5 = v7;
  JUMPOUT(0x1DA7066A0);
}

uint64_t sub_1DA7066C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1655 * (v1 == ((v0 - 143654815) & 0x88FFFF3) + 1295344150)) ^ v0)))();
}

uint64_t sub_1DA706714@<X0>(int a1@<W4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v6 + (v4 + v7)) = *(unsigned char *)(v3 + a3 + a2);
  return (*(uint64_t (**)(void))(v9 + 8 * ((255 * ((a1 ^ (8 * (v5 ^ 0x7F0u))) + v8 + v4 < 0x40)) ^ v5 ^ 0x7F0)))();
}

uint64_t sub_1DA706798@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  unint64_t v7 = v3 - 1;
  STACK[0x598] = v7;
  *(unsigned char *)(a1 + v7) = ((((a2 + 19) ^ 0x20) + v2) ^ v5) * (v2 + 72);
  return (*(uint64_t (**)(void))(v6 + 8 * (((STACK[0x598] != 0) * v4) ^ a2)))();
}

uint64_t sub_1DA7067E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = 1755732067 * ((~((v20 - 136) | 0x10763F3) + ((v20 - 136) & 0x10763F3)) ^ 0x203E21D7);
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x360], 8) = v15;
  *(_DWORD *)(v20 - 136) = v21 + v19 + 1394;
  *(_DWORD *)(v20 - 132) = v21 ^ 0x6FB145BE;
  (*(void (**)(uint64_t))(v17 + 8 * (v19 ^ 0xA42)))(v20 - 136);
  *(void *)(v20 - 136) = a14;
  *(void *)(v20 - 120) = v18;
  *(_DWORD *)(v20 - 12_Block_object_dispose(&STACK[0x360], 8) = v19
                         + 1178560073
                         * ((((v20 - 136) ^ 0xDF79CD3C) - 470279805 - 2 * (((v20 - 136) ^ 0xDF79CD3C) & 0xE3F81983)) ^ 0x9116E81A)
                         + 279;
  (*(void (**)(uint64_t))(v17 + 8 * (v19 ^ 0x5B5)))(v20 - 136);
  *(_DWORD *)(v20 - 116) = v19
                         + ((1086364362 - ((v20 - 136) | 0x40C09ACA) + ((v20 - 136) | 0xBF3F6535)) ^ 0xD2CB7D3C) * v14
                         - 312;
  *(void *)(v20 - 136) = a14;
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 ^ 0xA40)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (v19 ^ (4
                                                    * (*(_DWORD *)(v20 - 120) == ((v19 + 1139) ^ 0x7A3 ^ (v16 + 254)))))))(v22);
}

uint64_t sub_1DA706958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38)
{
  int v43 = v38 ^ 0x41AEBAA5;
  uint64_t v44 = (*(uint64_t (**)(uint64_t, void))(v39 + 8 * (v38 + 1652)))(a12, 0);
  uint64_t v45 = 8 * (v38 + 1583);
  (*(void (**)(uint64_t))(v39 + v45))(v44);
  (*(void (**)(void))(v39 + v45))();
  int v46 = (((*v41 >> 30) ^ 1) + v40 - 4 * (*v41 >> 31)) ^ *v41;
  unsigned int v47 = (*a38 ^ v40) + ((v40 + 1664525 * v46 - ((3329050 * v46) & 0xCDC5DB64)) ^ v41[1]);
  v41[1] = v47 + v40 - ((2 * v47) & 0xCDC5DB64);
  unint64_t v48 = 1224239923 * ((v42 - 0x48FDB5CAC071E105 - 2 * ((v42 - 144) & 0xB7024A353F8E1F8BLL)) ^ 0x9F58FF5CCD3DE25CLL);
  int v49 = (v43 - 953265420) ^ (1224239923 * ((v42 + 1066278651 - 2 * ((v42 - 144) & 0x3F8E1F8B)) ^ 0xCD3DE25C));
  *(_DWORD *)(v42 - 144) = v49;
  *(_DWORD *)(v42 - 140) = v49 ^ 0x2A;
  *(_DWORD *)(v42 - 104) = 1224239923 * ((v42 + 1066278651 - 2 * ((v42 - 144) & 0x3F8E1F8B)) ^ 0xCD3DE25C);
  *(void *)(v42 - 120) = v48 ^ 0xF4555DC3;
  *(void *)(v42 - 112) = v48 + 4099235265u;
  *(_DWORD *)(v42 - 136) = v43
                         - 953265420
                         - 1224239923 * ((v42 + 1066278651 - 2 * ((v42 - 144) & 0x3F8E1F8B)) ^ 0xCD3DE25C)
                         - 48;
  *(_DWORD *)(v42 - 132) = (v43 - 1606177316) ^ (1224239923
                                               * ((v42 + 1066278651 - 2 * ((v42 - 144) & 0x3F8E1F8B)) ^ 0xCD3DE25C));
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v43 ^ 0x41AEBCF4)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v39 + 8 * *(int *)(v42 - 128)))(v50);
}

uint64_t sub_1DA706B7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F34B1C00 + 8 * ((865 * (*(_DWORD *)(a2 + 4) == 826018276)) ^ 0x5D5u) - 8))();
}

uint64_t sub_1DA706BB8(uint64_t result)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = -759378220;
  return result;
}

uint64_t sub_1DA706BC4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(v5 + (v4 + v2 + a2 + 208 - 279) + 20) = *(unsigned char *)(a1
                                                                            + (v4 + v2 + a2 + 208 - 279));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a2 - 48) ^ (v2 - 1 == ((a2 - 60) ^ v3))) & 1 | (4
                                                                                                  * (((a2 - 48) ^ (v2 - 1 == ((a2 - 60) ^ v3))) & 1)) | (a2 + 337))))();
}

uint64_t sub_1DA706C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  uint64_t v31 = *v29;
  *(_DWORD *)(v27 - 0x1DE36DA1BDD4ED79) = 0;
  return (*(uint64_t (**)(char *, char *, char *, char *))(v30
                                                                   + 8
                                                                   * (((v31 == 0x11127EB20C1B7506)
                                                                     * ((((v28 | 0x204) - 110098994) & 0x68FFC5F) - 1086)) ^ (v28 | 0x204))))(&a18, &a25, &a20, &a27);
}

uint64_t sub_1DA706CD4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == v1) ^ v2 ^ 0xC9) & 1) * (55 * (v2 ^ 0x76D) - 32)) ^ v2)))();
}

uint64_t sub_1DA706D2C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, unint64_t a5@<X8>)
{
  uint64_t v9 = a2 + ((a4 + 1589217566) & 0xA14677D3) + a1 + a3 - 2003;
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = ((_BYTE)a2 + (((_BYTE)a4 + 30) & 0xD3) + (_BYTE)a1 + (_BYTE)a3 + 45) & 0xF;
  unint64_t v12 = v7 + v11 - v9;
  unint64_t v13 = v11 + v7 + 1;
  unint64_t v14 = v11 + v6 - v9 + 2;
  unint64_t v15 = v11 + v6 + 3;
  uint64_t v16 = v11 + v5;
  unint64_t v17 = v16 - v9 + 4;
  unint64_t v18 = v16 + 5;
  BOOL v20 = v13 > a5 && v12 < v10;
  if (v15 > a5 && v14 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v23 ^ 1 | (4 * (v23 ^ 1))) ^ a4)))();
}

uint64_t sub_1DA706DD4(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((83
                                * (((a1 - 2) ^ (v2 < ((a1 - 102246220) & 0xF8EC3955 ^ 0xF8E41835))) & 1)) ^ a1)))();
}

uint64_t sub_1DA706E30(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

void sub_1DA706E54()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)v0 - 1225351577 * (((v0 | 0x4730D9F4) - v0 + (v0 & 0xB8CF260B)) ^ 0x64AA01E2);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA706FC4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 + 168) ^ (1685 * LODWORD(STACK[0x3D8])))))();
}

uint64_t sub_1DA707028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x408] = v65;
  int v69 = STACK[0x534];
  *(_DWORD *)(STACK[0x658] + 4 * ((v69 + v67) >> (a65 & 0xAB ^ 0x88))) = v66;
  LODWORD(STACK[0x534]) = v69 + 4;
  return (*(uint64_t (**)(void))(v68
                              + 8
                              * (int)((31
                                     * (v67 + v69 + 4 + (a65 & 0xA5C32AAB ^ 0x58B) - 1281 < (a65 & 0xA5C32AAB ^ 0xCA))) ^ a65 & 0xA5C32AAB)))();
}

uint64_t sub_1DA707068()
{
  int v6 = (v0 + 19150183) | 0x408A8324;
  *uint64_t v4 = v4[623];
  uint64_t v7 = 1224239923 * ((((v5 - 144) | 0x489881C7FF0A6DA0) - ((v5 - 144) & 0x489881C7FF0A6DA0)) ^ 0x60C234AE0DB99077);
  *(_DWORD *)(v5 - 104) = v7;
  int v8 = (v6 + 1205429104) ^ v7;
  *(_DWORD *)(v5 - 144) = v8;
  *(_DWORD *)(v5 - 140) = v8 ^ 0xF6;
  *(_DWORD *)(v5 - 136) = ((v6 + 1205429104) ^ 0x76) - v7;
  *(_DWORD *)(v5 - 132) = (v6 - 1606177316) ^ v7;
  *(void *)(v5 - 120) = v7 ^ 3;
  *(void *)(v5 - 112) = (v2 + 1) + v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v6 ^ (v1 + 390))))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v5 - 128)))(v9);
}

uint64_t sub_1DA707148()
{
  *(void *)(v5 - 136) = v0;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x360], 8) = v4;
  *(_DWORD *)(v5 - 120) = v2
                        + 1178560073 * ((((2 * (v5 - 136)) | 0xA4C92B98) - (v5 - 136) + 765159988) ^ 0x7FF3A969)
                        + 1634;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x6CD)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((((v2 - 246) | 0xD0) ^ 0x202) * (v3 == 1360883732)) ^ v2)))(v6);
}

uint64_t sub_1DA7071E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 8 * (v4 ^ (1999 * (v5 > 0))));
  return v7(v7, a2, a3, a4);
}

uint64_t sub_1DA707250(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((a1 + 1082340937) & 0xBF7CCAD3 ^ (a1 + 223)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1DA70728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (v15 ^ (38 * (v16 == 0)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(void *)(a1 + 8), a11, a12, a13, a14, a15);
}

uint64_t sub_1DA7072DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((29 * ((a1 | v3) != 0)) ^ v1)))();
}

uint64_t sub_1DA70732C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < 0x7FFFFFFF) * ((v1 + 142) ^ 0x14C)) ^ (v1 + 785))))();
}

uint64_t sub_1DA707370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  int v37 = a9 + 1;
  *(unsigned char *)(a5 + (v37 + a2)) = *(&a35 + a32 - 1131569347);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((253 * (((v35 - 1161054910) & 0x4534487Du) + a3 + v37 < 0x40)) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1DA707378()
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 513)))();
  _DWORD *v1 = 143750836;
  return result;
}

uint64_t sub_1DA7073AC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((213 * (v0 != ((v1 - 2890015) & 0x2C15B7 ^ 0xF451DF9D) + v2)) ^ v1)))();
}

uint64_t sub_1DA707404@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v4 = a2 - 390;
  LODWORD(STACK[0x530]) = v2 + 46;
  unint64_t v5 = STACK[0x520];
  unint64_t v6 = LODWORD(STACK[0x4CC]);
  STACK[0x4B0] = v6;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((62
                                                                * (v6 != ((v4 - 148546011) & 0x8DAA1FE ^ 0x1B4))) ^ v4)))(a1, v5);
}

uint64_t sub_1DA70745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 - 1459989398 < (a14 - 1190652819);
  if ((a14 - 1190652819) < 0xBE1D0553 != v14 - 1459989398 < ((v15 - 852) | 0x20u) - 1105394395) {
    BOOL v17 = (a14 - 1190652819) < 0xBE1D0553;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((v17 | (16 * v17)) ^ v15)))();
}

uint64_t sub_1DA7074C8@<X0>(uint64_t a1@<X8>)
{
  int v6 = (**(_DWORD **)(a1 - 0x11127EB20C1B74FELL) ^ (v1 - 159354097)) + 1;
  **(_DWORD **)(a1 - 0x11127EB20C1B74FELL) = v6 + v2 - (v4 & (2 * v6));
  BOOL v7 = v5 - 1750806606 > -268745658;
  if (v5 - 1750806606 >= 1878737989) {
    BOOL v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((23 * !v7) ^ (v1 - 9))))(2181182107);
}

uint64_t sub_1DA707590()
{
  return 4294925273;
}

uint64_t sub_1DA70759C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v26
                                                             + 8
                                                             * (int)(((v25 == 2058996701)
                                                                    * (a3
                                                                     + (((a4 ^ 0x617) + 2146663315) & 0x99DFFFFB)
                                                                     + 729)) ^ a4 ^ 0x617)))(a1, a2, a25);
}

uint64_t sub_1DA707600()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 248) ^ (1485 * (v2 > 1)))))();
}

void sub_1DA7076FC()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 242));
  JUMPOUT(0x1DA72AF0CLL);
}

uint64_t sub_1DA70771C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((637
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((v0 + ((8 * (v2 + 31)) ^ 0x5F8) - 1830) ^ (v2 + 31) ^ 0x342 ^ (*(unsigned __int8 *)(v3 + 8)
                                                                                                 - 5)) == v0)) ^ (v2 + 31))))();
}

uint64_t sub_1DA707770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v28 + 8 * v27))(a1, a27 & 0x20000000, ((v29 - 1603225760) & 0x5F8F44FA ^ 0x4A5u) - 1149);
}

uint64_t sub_1DA707784()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v2 + ((v2 + 1835423570) & 0x9299AD97) - 1524) * (v0 == v1)) ^ v2)))();
}

void sub_1DA7077C0()
{
}

uint64_t sub_1DA7078A4(int a1, unsigned __int8 a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v8 + a7)) = *(void *)(v9 + (v8 + a7));
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a6 + a7 == 8) ^ a2) & 1) * a3) ^ a1)))();
}

uint64_t sub_1DA7078DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((469 * (STACK[0x448] == 0)) ^ (v0 + 997))))();
}

void sub_1DA707914(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * (a1 ^ 0x6DF41809);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA70799C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 142_Block_object_dispose(&STACK[0x360], 8) = 1584496216;
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (int)(((*(_DWORD *)(a2 + 4) == v2) * ((v3 ^ 0xFFFFFC5A) + (v3 ^ 0x640))) ^ v3)))();
}

uint64_t sub_1DA7079F8()
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((991 * ((v0 ^ 0x108) != 47)) ^ (v0 + 1254))))(115);
}

uint64_t sub_1DA707A54@<X0>(int a1@<W8>)
{
  uint64_t v6 = 4 * (v1 - 753729832);
  unsigned int v7 = -1609296481
     * ((*(_DWORD *)(*(void *)STACK[0x408] + (*(_DWORD *)STACK[0x400] & 0x31B28B38)) ^ (v2 + v6)) & 0x7FFFFFFF);
  int v8 = (v7 >> ((-121 * (a1 ^ 0xDE)) ^ 0xCB)) ^ v7;
  uint64_t v9 = 4 * ((-1609296481 * v8) >> 24);
  *(_DWORD *)(v4 + v6) ^= *(_DWORD *)(v2 + v6) ^ *(_DWORD *)((char *)*(&off_1F34B17C0 + (a1 ^ 0x48)) + v9 - 12) ^ *(_DWORD *)((char *)*(&off_1F34B17C0 + (a1 ^ 0x65)) + v9 - 8) ^ *(_DWORD *)((char *)*(&off_1F34B17C0 + a1 - 149) + v9 - 8) ^ (362741760 * v8) ^ (-1609296481 * v8) ^ (-2081955537 * ((-1609296481 * v8) >> 24));
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((426 * (v3 + ((135 * (a1 ^ 0xDE) + 2022718748) & 0x876FBD1F) == 2084229399)) ^ (135 * (a1 ^ 0xDE)))))();
}

uint64_t sub_1DA707B50(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((28 * (a2 ^ 0x26C) + 235 * (a2 ^ 0x26A) + 1002) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1DA707BA4()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v3 ^ 0x57D)))((*(_DWORD *)(v2 + 24 * v1 + 16) - 826018275), 2970849626) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v4 * (626 * (v3 ^ 0x289) + ((v3 - 285) ^ 0xFFFFF9D3))) | v3)))();
}

uint64_t sub_1DA707C1C(char a1, int8x16_t a2, int8x8_t a3, uint64_t a4, char a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v55 = (a6 + v53 - 8);
  v57.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v53 - 8) & 0xF;
  v57.val[0].i64[1] = ((_BYTE)a6 + v52 - 8) & 0xF;
  v57.val[1].i64[0] = ((_BYTE)a6 + v51 - 8) & 0xF;
  v57.val[1].i64[1] = ((_BYTE)a6 + v50 - 8) & 0xF;
  v57.val[2].i64[0] = ((_BYTE)a6 + a5 - 8) & 0xF;
  v57.val[2].i64[1] = ((_BYTE)a6 + a1 - 8) & 0xF;
  v57.val[3].i64[0] = ((_BYTE)a6 + v47 - 8 + (a8 ^ 0x55)) & 0xF;
  v57.val[3].i64[1] = ((_BYTE)a6 + v48 - 8) & 0xF;
  *(int8x8_t *)(a10 + v55) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v46 + (v55 & 0xF) - 7), *(int8x8_t *)(a10 + v55)), veor_s8(*(int8x8_t *)((v55 & 0xF) + v45 - 5), *(int8x8_t *)((v55 & 0xF) + v44 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v57, a2), a3)));
  return (*(uint64_t (**)(void))(a44 + 8 * (((a6 != v49 + 8) * v54) ^ a8)))();
}

uint64_t sub_1DA707C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_1DA703128(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1DA707C58@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 7 + (v6 + v4 + v3 + 482 - v7)) = *(void *)(a1
                                                                            - 7
                                                                            + (v6 + v4 + v3 + 482 - v7));
  return (*(uint64_t (**)(void))(v9 + 8 * ((1904 * (v8 - (v2 & 0xFFFFFFF8) - 873 == -v7)) ^ v8)))(v5 - (v2 & 0xFFFFFFF8));
}

uint64_t sub_1DA707CBC(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v7 - a4)) = *(_DWORD *)(v5 + (v7 - a4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + 4 == v6) * a5) ^ a3)))();
}

void sub_1DA707CE8(_DWORD *a1, int a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v7 + 4) = v10;
  int v11 = v9 + v6;
  *a1 = v11 + ((v5 + (a4 ^ (v5 - 106)) - 158) ^ 0xD0554E7A);
  unint64_t v12 = a1 + 1;
  *((unsigned char *)v12 + (a2 + v6)) = v8;
  *((unsigned char *)v12 + (v4 + v6 - 2)) = 51;
  *((unsigned char *)v12 + (v11 - 1811329848)) = 65;
  *((unsigned char *)v12 + (v11 - 1811329847)) = 4;
  JUMPOUT(0x1DA73DFD4);
}

uint64_t sub_1DA707D58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 46_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 11672))(0);
}

uint64_t sub_1DA707DD4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((7
                                * (((a1 - 826018275) ^ 0x9FFEFBA8EFFF6E17)
                                 + 0x600104572A180549
                                 + ((2 * (a1 - 826018275)) & 0x1DFFEDC2ELL) != 437744480)) ^ 0x89u)))();
}

uint64_t sub_1DA707E84(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x360], 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_1DA707E9C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 16 * (a1 ^ 0x3FB)))();
}

uint64_t sub_1DA707EE4@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v68 = a5 - 8;
  uint64_t v69 = (a4 + v68);
  v71.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v68) & 0xF;
  v71.val[0].i64[1] = (v66 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[0] = (a3 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[1] = (v65 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[0] = (v62 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[1] = (v64 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[0] = (a2 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[1] = (a1 + (_BYTE)v68) & 0xF;
  *(int8x8_t *)(a6 + v69) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v59 + (v69 & 0xF) - 7), *(int8x8_t *)(*(void *)(v67 - 120) + v69)), veor_s8(*(int8x8_t *)((v69 & 0xF) + v61 - 5), *(int8x8_t *)((v69 & 0xF) + v60 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, a8), a9)));
  return (*(uint64_t (**)(void))(a59 + 8 * ((1294 * (v63 == v68)) ^ a7)))();
}

uint64_t sub_1DA707EEC()
{
  uint64_t v6 = v1 + 1;
  int v7 = (*(unsigned __int8 *)(v3 + ((v0 - 748) ^ v4) + v6) ^ 0x5F)
     - *(unsigned __int8 *)(v2 + ((v0 - 748) ^ v4) + v6);
  BOOL v9 = (v7 ^ 0x64FB769F) - 5378177 + ((2 * v7) & 0xC9F6ED3E) != 1688823326 || v6 == 19;
  return (*(uint64_t (**)(void))(v5 + 8 * ((889 * v9) ^ v0)))();
}

uint64_t sub_1DA707EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((28 * (v8 > 0x82)) ^ (v7 - 425))))(a1, a2, a3, a4, a5, a6, a7, v8);
}

uint64_t sub_1DA707F34(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 142_Block_object_dispose(&STACK[0x360], 8) = 1584496212;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((53 * (*(_DWORD *)(a2 + 4) == ((2 * (((v3 - 782) | 0x4C) ^ 0x22B)) ^ (v2 + 566)))) ^ v3)))();
}

uint64_t sub_1DA707F94(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x360], 8) = *(void *)(a2 + 8);
  return 0;
}

void sub_1DA707FAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA708090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v7
                                                                      + 8
                                                                      * (int)((((v5 + 438415135) & 0xE5DE4DFF ^ 0x4C4)
                                                                             * (v4 == v6)) ^ v5)))((v3 - v6), a2, a3, 2235994116);
}

void sub_1DA7080D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 12_Block_object_dispose(&STACK[0x360], 8) = v7;
  *(_DWORD *)(v9 - 136) = ((a7 - 79) ^ 0xFFFFFB1F) & v7;
  *(_DWORD *)(v9 - 144) = (a7 - 79) ^ 0x52E;
  JUMPOUT(0x1DA708148);
}

uint64_t sub_1DA708218(_DWORD *a1)
{
  unsigned int v1 = 1225351577 * (a1 ^ 0x239AD816);
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + (int)((*a1 + v1) & 0xB810A8CA))
          + (int)((((a1[1] ^ v1 ^ 0x7AB9CBDD) - 1 < 0x63) * (38 * ((*a1 + v1) ^ 0x286) - 1763)) ^ (*a1 + v1))
          - 1))();
}

uint64_t sub_1DA708298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 120) = v14
                         + 1178560073 * ((2 * ((v17 - 136) & 0x4468EDF8) - (v17 - 136) - 1147727354) ^ 0x16002EA3)
                         + 1123;
  *(void *)(v17 - 136) = v15;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 1222)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8 * ((26 * ((((v14 - 151) ^ (v16 == v14 + 434625928)) & 1) == 0)) ^ v14)))(v18);
}

uint64_t sub_1DA708344()
{
  int v3 = (v0 - 939683165) & 0x380267EA;
  *(_DWORD *)(v2 - 192) = 235795823 * ((((v2 - 192) | 0x3A16687B) - ((v2 - 192) & 0x3A16687B)) ^ 0xAEBB2122)
                        + 426521557
                        + v0;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 621)))(v2 - 192);
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x2E8]) + v3 - 65;
  *(unsigned char *)(v2 - 160) = (111 * ((-(char)(v2 + 64) - 1) ^ 0xA6)) ^ 0x7C;
  *(_DWORD *)(v2 - 176) = v0
                        - 235795823 * ((2 * ((v2 - 192) & 0x18780700) - (v2 - 192) + 1736964351) ^ 0xF32AB1A6)
                        + 398;
  *(void *)(v2 - 16_Block_object_dispose(&STACK[0x360], 8) = STACK[0x2A0];
  *(void *)(v2 - 184) = STACK[0x298];
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 642)))(v2 - 192);
  int v5 = *(_DWORD *)(v2 - 192);
  LODWORD(STACK[0x530]) = v5;
  LODWORD(STACK[0x2EC]) = 584638027;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((31 * (v3 ^ 0x4B) + 1052) * (v5 == 2058996701)) ^ v3)))(v4);
}

uint64_t sub_1DA70845C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((223 * (a2 + 1 == v3 + 44)) ^ a1)))();
}

void sub_1DA708524()
{
  _DWORD *v0 = -2058973175;
}

uint64_t sub_1DA708534@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v14 = v11 > 0x3C9CD923;
  *(_DWORD *)(a9 + 4 * (v9 + a1)) = *(_DWORD *)(*(void *)(v12 - 0x11127EB20C1B74FELL) + 4 * (v9 + a1));
  if (v14 == v9 - 723932073 < -1016912164) {
    BOOL v14 = v9 - 723932073 < (int)(v11 + 1130571484);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8 * ((v14 * (v10 ^ 0x4ED)) | (v10 - 244))))(221, 3571035223, 3278055132);
}

uint64_t sub_1DA7085D8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X3>, _DWORD **a3@<X4>, unsigned int a4@<W6>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22)
{
  uint64_t v25 = ((v22 - 695) | 0x90) ^ (a5 + 154) ^ *a22;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v23 + 8 * (v22 ^ (26 * (v24 <= a4)))))(a1, v25 + (**a3 ^ a5) * (unint64_t)((*a2 - 1964507579) * v25));
}

uint64_t sub_1DA7085E0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x7299FD1B0C63AD76) = 1;
  return sub_1DA7085F8();
}

uint64_t sub_1DA7085F8(uint64_t result)
{
  uint64_t v3 = *v1;
  *(void *)(v1[1] - 0x6B8F3DED50A1762ELL) = result;
  *(_DWORD *)(v3 - 0x6E2955DF8EED0C61) = v2;
  *((_DWORD *)v1 + 4) = 2058996701;
  return result;
}

void sub_1DA70866C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1DA7086B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + v3 - 1 < ((v0 + 19) ^ 0x7FFFFF5Cu)) * (v0 + 682)) ^ v0)))();
}

uint64_t sub_1DA7086F0(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v26 = v19 - 16 + 5 * (a13 ^ 0x3F0u);
  uint64_t v27 = ((_BYTE)v19 - 16 + 5 * (a13 ^ 0xF0)) & 0xF;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  int8x16_t v30 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a14 + v26), *(int8x16_t *)(v17 + (v26 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v16 + (v26 & 0xF) - 15), *(int8x16_t *)(v18 + (v26 & 0xF) - 15))));
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v30, v30, 8uLL), v25), vmulq_s8(v29, v24)));
  *(int8x16_t *)(a16 + v26) = vextq_s8(v31, v31, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * (((v20 == 16) * v21) ^ a13)))();
}

uint64_t sub_1DA7086FC()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x211)))(1576, 3012117910);
  STACK[0x458] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((13 * (((v2 == 0) ^ (v0 + 75)) & 1)) ^ v0)))();
}

uint64_t sub_1DA708758(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = STACK[0x548];
  LODWORD(STACK[0x548]) += 64;
  unsigned int v5 = (((a3 + 1318) << 7) ^ 0x5A80FC1) + v4;
  unsigned int v6 = LODWORD(STACK[0x644]) + 1050391214;
  BOOL v7 = v5 < 0x4F2ABD21;
  BOOL v8 = v5 > v6;
  if (v7 != v6 < ((a3 + 1318) ^ 0x4F2ABB1Cu)) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((177 * v8) ^ (a3 + 1318))))();
}

void sub_1DA708878()
{
}

uint64_t sub_1DA708880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(v5 + v7 + a1) = v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 & 0x7FFFFFFFFFFFFFC0) == a2) * a4) ^ (a3 + v4 + 205))))();
}

uint64_t sub_1DA7088B4(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = STACK[0x54C];
  unint64_t v5 = STACK[0x5F8];
  STACK[0x598] = (LODWORD(STACK[0x54C]) - 826018275);
  return (*(uint64_t (**)(unint64_t))(v3
                                                     + 8
                                                     * (((v4 != 826018275) * ((a3 - 1222994891) & 0x48E56FB7 ^ 0x528)) ^ (a3 + 1005))))(v5);
}

uint64_t sub_1DA708920(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((11
                                * ((*(_DWORD *)(v9 + (v8 + a2) * (uint64_t)a7 + 40) & 8) != (((v7 ^ 0x434) - 544) ^ (v7 - 1516)))) ^ v7)))();
}

uint64_t sub_1DA70896C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((v1 + 1839) ^ 0x765) * ((a1 + v2 + 2592) < 0x7FFFFFFF)) ^ v1)))();
}

void sub_1DA7089B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA708B00()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1865 * (v1 == v3)))))();
}

uint64_t sub_1DA708B24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25)
{
  uint64_t v26 = (a8 - 1582333107);
  uint64_t v27 = (a4 - 1582333260);
  *a25 = 159353952;
  uint64_t v28 = (a4 + 687);
  BOOL v30 = (int)v27 > 565150540 || (int)v27 <= (int)v26;
  int8x16_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((63 * v30) ^ v28));
  return v31(a1, v26, v27, v28, 565150540, 1, v31, a8, a9, a10);
}

uint64_t sub_1DA708BA4()
{
  int v3 = (unsigned int *)STACK[0x2F0];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v1 + 695)))(*(unsigned int *)STACK[0x2F0], &STACK[0x490], 2048);
  int v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * ((v1 - 579) ^ 0x4F7)))(*v3, &STACK[0x4A8], LODWORD(STACK[0x49C]) + ((v1 + 1075078085) & 0xBFEB97DF ^ (v0 + 237)), 1) == 0)* ((v1 - 1658403955) & 0x62D937B3 ^ 0x5E6)) ^ (v1 - 579)));
  return v4();
}

uint64_t sub_1DA708C74@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v7 = v3 + ((v5 + 870451862) & 0xCC1DF5DF ^ a1);
  long long v8 = *(_OWORD *)(v2 + v7 - 15);
  long long v9 = *(_OWORD *)(v2 + v7 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((626 * ((v4 & 0xFFFFFFE0) == 32)) ^ (v5 + 986))))(v3);
}

uint64_t sub_1DA708CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  LODWORD(STACK[0x454]) = 826018275;
  unint64_t v46 = STACK[0x4B8];
  unint64_t v47 = (((v43 + 235) | v44) ^ 0xFFFFFFFFFFFFFDE8) + 336;
  STACK[0x430] = v47;
  *(unsigned char *)(v46 + v47) = (a42 ^ v42) * (a42 + 17);
  return (*(uint64_t (**)(void))(v45 + 8 * ((491 * (STACK[0x430] == 0)) ^ (v43 - 49))))();
}

uint64_t sub_1DA708CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v20 = 1224239923 * ((v19 + 1499836837 - 2 * ((v19 - 152) & 0x5965B23D)) ^ 0xABD64FEA);
  *(void *)(v19 - 152) = a15;
  *(_DWORD *)(v19 - 144) = v20 + v17 + 99;
  *(_DWORD *)(v19 - 140) = (a17 + 746033975) ^ v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v17 + 2030)))(v19 - 152);
  uint64_t v22 = *(_DWORD *)(v19 - 184) & 0x3F ^ 0x16;
  *(unsigned char *)(v19 - 252 + v22) = -33;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1703 * (v22 > 0x37)) ^ v17)))(v21);
}

uint64_t sub_1DA708DEC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((97
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) != v0 + ((v2 + 595) | 0x98) - 920)) ^ v2)))();
}

uint64_t sub_1DA708E34@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,char a30)
{
  *(unsigned char *)(a2 + (v30 ^ 0x22 ^ (a1 - 175)) + v31) = a29;
  *(unsigned char *)(a2 + (a3 - 34911279)) = a30;
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * ((1372 * ((((v30 ^ 0x22) - 194) ^ 0x14u) > 2)) ^ v30 ^ 0x22)))(1131569344);
}

uint64_t sub_1DA708EE0@<X0>(uint64_t a1@<X0>, char a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v38 = *((_DWORD *)&a22 + ((v36 + a3) >> (((v35 + 15) & 0x5D) + a2)) + 18);
  *(unsigned char *)(a1 + (v36 + a3 + 1)) = (BYTE2(v38) ^ 0x79) - ((2 * (BYTE2(v38) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v36 + a3)) = (HIBYTE(v38) ^ 0xB6) - ((2 * (HIBYTE(v38) ^ 0xB6)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v36 + a3 + 2)) = (BYTE1(v38) ^ 0xA3) + (~(2 * (BYTE1(v38) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a1 + (v36 + a3 + 3)) = v38 ^ 0x61;
  BOOL v39 = v36 - 664642511 < (a34 + 147205794);
  if (v36 - 664642511 < v34 != a34 + 147205794 < v34) {
    BOOL v39 = a34 + 147205794 < v34;
  }
  return (*(uint64_t (**)(void))(v37 + 8 * ((1862 * v39) ^ v35)))();
}

uint64_t sub_1DA708FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v24 = v20 + 1;
  *(unsigned char *)(v19 + (a9 + v24 + 1005)) = *(unsigned char *)(v21 + a17 + v23 + v18)
                                                    - ((2 * *(unsigned char *)(v21 + a17 + v23 + v18)) & 0xBF)
                                                    + 95;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((((a5 + v24 + 1) > 0x3F) | (4 * ((a5 + v24 + 1) > 0x3F))) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1DA708FE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((283 * (v5 == v7 + a5 + a3 + 305 - 1179)) ^ (a5 + a3 + 305))))();
}

uint64_t sub_1DA709010@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 1652036550) & 0xCF182DF6) + 911215896;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((32
                                             * (((2 * v4) & 0xFFD7F76C ^ 0xCF102564) + (v4 ^ 0x1867ED4D) - 1300931332 == 845240498)) | 0x416u)))(0);
}

uint64_t sub_1DA7090A0@<X0>(int a1@<W1>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((v4 + 586230118) ^ 0x22F12FDE) + ((v4 + 586230118) & 0xDD0ED17B) - 378)
                                     * (*(_DWORD *)(v5 + (v3 + a1) * (uint64_t)a2 + 36) != a3)) ^ v4)))();
}

uint64_t sub_1DA709108(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,int *a36,uint64_t a37,uint64_t a38)
{
  uint64_t v42 = 4 * (v40 - 768172297);
  unsigned int v43 = -1609296481 * ((*(_DWORD *)(*a35 + (*a36 & 0xFFFFFFFFD9D10070)) ^ (a37 + v42)) & 0x7FFFFFFF);
  int v44 = v43 ^ HIWORD(v43);
  unsigned int v45 = -1609296481 * v44;
  *(_DWORD *)(a38 + v42) ^= *(_DWORD *)(a37 + v42) ^ *((_DWORD *)*(&off_1F34B17C0 + (v38 ^ 0x2E8)) + HIBYTE(v45) - 1) ^ *((_DWORD *)*(&off_1F34B17C0 + v38 - 530) + ((-1609296481 * v44) >> 24) + (v38 ^ 0x29E) - 3) ^ *((_DWORD *)*(&off_1F34B17C0 + v38 - 523) + HIBYTE(v45) - 1) ^ (362741760 * v44) ^ v45 ^ (-1109235783 * HIBYTE(v45));
  return (*(uint64_t (**)(void))(v39
                              + 8 * ((230 * (v41 - 1101969547 + a3 + (v38 ^ 0xE8) - 629 == 1364664920)) ^ v38 ^ 0xE8)))();
}

uint64_t sub_1DA709200@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v5 = a2;
  unint64_t v6 = (v2 ^ 0x55Du ^ (unint64_t)(a1 - 657)) + a2;
  if (v6 <= 0x38) {
    unint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3 - v5 + v6 + 1 > 7) * ((v2 + 2111044038) & 0x9BFF7E7E ^ 0x19D37EC4)) ^ v2)))();
}

uint64_t sub_1DA709278()
{
  uint64_t v6 = *(void *)(v9 + 40);
  int v7 = 1759421093 * ((2 * ((v5 - 144) & 0x7AB93DF8) - (v5 - 144) + 88523270) ^ 0xB63B7252);
  *(void *)(v5 - 144) = v10;
  *(_DWORD *)(v5 - 136) = 730294625 - v7;
  *(_DWORD *)(v5 - 132) = v7 + v4 + 950;
  (*(void (**)(uint64_t))(v0 + 8 * (v4 + 1614)))(v5 - 144);
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v10;
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 104) = v4
                        + 628203409
                        * ((((v5 - 144) ^ 0xD4AAEF75 | 0x3F0CA017)
                          - ((v5 - 144) ^ 0xD4AAEF75)
                          + (((v5 - 144) ^ 0xD4AAEF75) & 0xC0F35FE8)) ^ 0x692E4351)
                        + 1491;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x360], 8) = v2;
  (*(void (**)(uint64_t))(v0 + 8 * (v4 ^ 0x63B)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = v4
                        + 1178560073 * ((((v5 - 144) | 0xDA22FAE3) + (~(v5 - 144) | 0x25DD051C)) ^ 0x77B5C647)
                        + 414;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x360], 8) = v6;
  *(void *)(v5 - 144) = v1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 1596)))(v5 - 144);
}

uint64_t sub_1DA7093F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v79 = (((v76 | 0xD628455C) - v76 + (v76 & 0x29D7BAA0)) ^ 0xBBDC5D55) * v73;
  *(void *)(v78 - 184) = a72;
  *(_DWORD *)(v78 - 192) = 1777521034 - v79;
  *(_DWORD *)(v78 - 18_Block_object_dispose(&STACK[0x360], 8) = (v74 ^ 0x1BF) - v79 - 209;
  *(void *)(v78 - 16_Block_object_dispose(&STACK[0x360], 8) = v72;
  *(void *)(v78 - 160) = a71;
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(v77 + 8 * ((v74 ^ 0x1BF) + 1532)))(v78 - 192);
  return (*(uint64_t (**)(uint64_t))(v77
                                            + 8
                                            * (int)(((*(_DWORD *)(v78 - 176) != v75)
                                                   * ((v74 ^ 0x1BF)
                                                    - 419
                                                    + (((v74 ^ 0x1BF) + 633923454) & 0xDA3716DE)
                                                    - 151)) ^ v74 ^ 0x1BF)))(v80);
}

uint64_t sub_1DA7094AC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v9 + a7 - 1137438598;
  BOOL v11 = v10 < (((a2 - 866) | 0x628) ^ 0xB09A9FA4);
  BOOL v12 = v10 > v7 + 1526485920;
  if ((v7 + 1526485920) < 0xB09A990D != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((23 * v12) ^ a2)))();
}

uint64_t sub_1DA709528@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,char a39)
{
  unsigned int v43 = &a37 + v39;
  char v62 = &a25 + v39;
  uint64_t v59 = &a31 + v39;
  unsigned int v58 = &a29 + v39;
  int8x16x4_t v57 = &a39 + v39;
  int v56 = &a33 + v39;
  uint64_t v55 = &a27 + v39;
  uint64_t v61 = &a23 + v39;
  uint64_t v44 = a1[3];
  uint64_t v65 = a1[2];
  uint64_t v45 = a1[4];
  int v46 = a2 + 1202;
  *(void *)(v42 - 120) = *(void *)(v44 - 0x49E3D721B33288DBLL);
  *(void *)(v42 - 112) = a3;
  int v64 = a2 + 1202;
  *(_DWORD *)(v42 - 104) = a2
                         + 1202
                         + 628203409
                         * ((((v42 - 144) | 0xE41E62E) - (v42 - 144) + ((v42 - 144) & 0xF1BE19D0)) ^ 0x8CC9EA1D);
  *(void *)(v42 - 144) = v43;
  *(void *)(v42 - 136) = v44;
  uint64_t v47 = v44;
  int v48 = (a2 + 284) ^ 0x711;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  int v49 = (a2 + 284) | 0x1DA;
  uint64_t v63 = 8 * (a2 + 1300);
  uint64_t v66 = v40;
  (*(void (**)(uint64_t))(v40 + v63))(v42 - 144);
  *(_DWORD *)(v42 - 112) = (a2 - 586) ^ (1374699841 * ((v42 - 144) ^ 0x6DF41809));
  *(void *)(v42 - 144) = v45;
  *(void *)(v42 - 136) = v43;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v61;
  *(void *)(v42 - 120) = v47;
  (*(void (**)(uint64_t))(v66 + 8 * (a2 + 1331)))(v42 - 144);
  int v54 = v46 + 628203409 * ((v42 - 144) ^ 0x82880C33);
  *(_DWORD *)(v42 - 104) = v54;
  *(void *)(v42 - 144) = v62;
  *(void *)(v42 - 136) = v47;
  *(void *)(v42 - 120) = v43;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  (*(void (**)(uint64_t))(v66 + v63))(v42 - 144);
  *(void *)(v42 - 120) = v62;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 144) = v59;
  *(void *)(v42 - 136) = v47;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  *(_DWORD *)(v42 - 104) = v64
                         + 628203409
                         * ((1562453520 - ((v42 - 144) | 0x5D212610) + ((v42 - 144) | 0xA2DED9EF)) ^ 0x2056D5DC);
  uint64_t v60 = 8 * (a2 ^ 0x51C);
  (*(void (**)(uint64_t))(v66 + v60))(v42 - 144);
  *(void *)(v42 - 144) = v58;
  *(void *)(v42 - 136) = v47;
  *(_DWORD *)(v42 - 104) = v54;
  *(void *)(v42 - 120) = v59;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  (*(void (**)(uint64_t))(v66 + v63))(v42 - 144);
  *(void *)(v42 - 120) = v58;
  *(void *)(v42 - 112) = v61;
  *(_DWORD *)(v42 - 104) = v54;
  *(void *)(v42 - 144) = v57;
  *(void *)(v42 - 136) = v47;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  (*(void (**)(uint64_t))(v66 + v60))(v42 - 144);
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  *(void *)(v42 - 120) = v57;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 144) = v56;
  *(void *)(v42 - 136) = v47;
  *(_DWORD *)(v42 - 104) = v64
                         + 628203409
                         * ((((v42 - 144) | 0xD1FEDA8A) - (v42 - 144) + ((v42 - 144) & 0x2E012570)) ^ 0x5376D6B9);
  (*(void (**)(uint64_t))(v66 + v60))(v42 - 144);
  *(void *)(v42 - 144) = v55;
  *(void *)(v42 - 136) = v47;
  *(_DWORD *)(v42 - 104) = v64 + 628203409 * ((((v42 - 144) | 0x1C670123) - ((v42 - 144) & 0x1C670123)) ^ 0x9EEF0D10);
  *(void *)(v42 - 120) = v56;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  (*(void (**)(uint64_t))(v66 + v63))(v42 - 144);
  *(void *)(v42 - 120) = v55;
  *(void *)(v42 - 112) = v61;
  *(void *)(v42 - 144) = v61;
  *(void *)(v42 - 136) = v47;
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v45;
  *(_DWORD *)(v42 - 104) = v64
                         + 628203409
                         * ((-1872537782 - ((v42 - 144) | 0x9063574A) + ((v42 - 144) | 0x6F9CA8B5)) ^ 0xED14A486);
  (*(void (**)(uint64_t))(v66 + v60))(v42 - 144);
  uint64_t v51 = *(void *)(v47 - 0x49E3D721B33288E3);
  *(void *)(v42 - 12_Block_object_dispose(&STACK[0x360], 8) = v41;
  *(void *)(v42 - 144) = v51;
  *(_DWORD *)(v42 - 136) = a2
                         + 1178560073
                         * ((((v42 - 144) ^ 0x78A7E01D | 0xCAF119E9) - (((v42 - 144) ^ 0x78A7E01D) & 0xCAF119E9)) ^ 0x1FC1C551)
                         + 125;
  (*(void (**)(uint64_t))(v66 + 8 * (a2 + 1307)))(v42 - 144);
  *(_DWORD *)(v42 - 132) = a2
                         + 1224239923 * ((((v42 - 144) | 0xF2F02717) + (~(v42 - 144) | 0xD0FD8E8)) ^ 0x43DAC1)
                         + 192;
  *(void *)(v42 - 144) = v65;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v66 + 8 * (a2 + 1358)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v66
                                            + 8
                                            * ((((v48 + *(_DWORD *)(v42 - 136) - 526266697 - 783) < 0x7FFFFFFF)
                                              * (v49 - 1016)) ^ a2)))(v52);
}

uint64_t *sub_1DA709A60@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v9 = result[6];
  uint64_t v11 = *result;
  uint64_t v10 = result[1];
  *a4 = v8;
  *(_DWORD *)(v11 - 0x5DC221302E8077CDLL) = v6;
  *(_DWORD *)(v9 - 0x1154A0E2928534A4) = a2;
  *(void *)(v10 - 0xC0068C551B1E41BLL) = v4 + a3 - 331122255 + (v7 ^ v5);
  *((_DWORD *)result + _Block_object_dispose(&STACK[0x360], 8) = 2058996701;
  return result;
}

uint64_t sub_1DA709AD8()
{
  int v1 = (*(unsigned __int8 *)(STACK[0x4D0] + 1516) ^ 0x5F) - (*(unsigned char *)STACK[0x4D8] - 82);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((2 * v1) & 0x52DFDEFE) + (v1 ^ 0xA96FEF7F) == -1452281985)
                                     * ((13 * ((LODWORD(STACK[0x248]) - 923) ^ 3) + 1609881614) & 0xA00B251F ^ 0xAA)) ^ (LODWORD(STACK[0x248]) - 923))))();
}

uint64_t sub_1DA709B70()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((231 * ((((v0 + 1) ^ (v2 == 1804371659)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1DA709BA8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((206
                                * ((((*(unsigned __int8 *)(v2 + 1) - 134) << (v3 - 85)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ (v0 + 70 * (v3 ^ 0x35B) - 910)) != v0)) ^ v3)))();
}

uint64_t sub_1DA709C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 156_Block_object_dispose(&STACK[0x360], 8) = 1;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((*(_DWORD *)(a8 + 72) == (((v8 + 604066419) | 0xD2840081) ^ 0xC7B95E62))
                                     * (a5 + ((v8 - 142083244) & 0xFEFD579F) - 483)) ^ v8)))();
}

uint64_t sub_1DA709C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a31 == 2) {
    return (*(uint64_t (**)(uint64_t))(v35
  }
                                              + 8
                                              * ((1471 * (LODWORD(STACK[0x2FC]) != v36 + 1133293842)) ^ (v36 + 346))))(a16);
  if (a31 == 1) {
    return (*(uint64_t (**)(uint64_t))(v35
  }
                                              + 8
                                              * ((19 * (LODWORD(STACK[0x2FC]) != (((v36 + 248) | 0x62) ^ 0x438CB048))) ^ (v36 + 346))))(a16);
  unint64_t v38 = ((unint64_t)&a35 ^ 0x6DF37BFFDAEBFDFFLL)
      - 0x45A242E6100334FFLL
      + (((void)&a35 << (-52 * (v36 ^ 0x13u) - 99)) & 0xDBE6F7FFB5D7FBF0);
  LOBYTE(STACK[0x2FB]) = (v38 ^ 0xBA) * (v38 + 17);
  return (*(uint64_t (**)(void))(v35 + 8 * ((204 * (v36 ^ 0x13)) ^ 0xE3)))();
}

uint64_t sub_1DA709D84()
{
  uint64_t v5 = *(void *)(v7 + 32);
  *(_DWORD *)(v4 - 120) = v0 + (((~(v4 - 128) & 0x1CB9E6A6) - (~(v4 - 128) | 0x1CB9E6A7)) ^ 0xB12EDA02) * v3 - 387;
  *(void *)(v4 - 112) = v5;
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x360], 8) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 795)))(v4 - 128);
}

uint64_t sub_1DA709E34(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v11 = (a2 + a1 + a3);
  uint64_t v12 = v11 + v5;
  uint64_t v13 = v11 + v10;
  uint64_t v14 = (a2 + a1) & 0xF;
  uint64_t v15 = v14 - v13;
  uint64_t v16 = (v8 | v14) - v13;
  unint64_t v17 = (v7 | v14) - v13 + (a5 + 172) - 1045;
  BOOL v21 = (unint64_t)(v12 - v13) > 0xF
     && (unint64_t)(v15 + v6) > 0xF
     && (unint64_t)(v16 + 2) > 0xF
     && v17 >= (unint64_t)(3 * (a5 ^ 0x106u)) - 1841;
  return (*(uint64_t (**)(void))(v9 + 8 * ((255 * v21) ^ a5)))();
}

uint64_t sub_1DA709EB4()
{
  _DWORD *v1 = STACK[0x590];
  v1[85] = STACK[0x504];
  v1[86] = STACK[0x474];
  v1[87] = STACK[0x464];
  v1[88] = STACK[0x4C8];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((STACK[0x4E8] == 0)
                                     * (((v0 ^ 0x1A8) - 1696561432) ^ 0x9AE08655 ^ ((v0 ^ 0x1A8) - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ ((v0 ^ 0x1A8) + 1240))))();
}

uint64_t sub_1DA709F38(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x628]) = v3;
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 - 238)))();
}

uint64_t sub_1DA709F58@<X0>(int a1@<W2>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((27
                                * (((a1 + 53) ^ ((((((a1 - 1476) | 0x325) ^ 0x327) - (a2 + 3)) & 0x40000000) == 0)) & 1)) | a1)))();
}

uint64_t sub_1DA70A024@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v7 = 57 * (v6 ^ 0x45E);
  int v8 = v3 + v4;
  int v9 = (v7 ^ 0x2E4) + v4;
  *(_DWORD *)(*(void *)(v5 - 0x11127EB20C1B74FELL) + 4 * (v8 + 1)) = a2;
  *(_DWORD *)(v5 - 0x11127EB20C1B7502) = v9;
  if (v3 + v9 + 1 >= 0) {
    int v10 = v3 + v9 + 1;
  }
  else {
    int v10 = ~(v3 + v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3
                                                                       + 8
                                                                       * (int)((((v10 ^ 0x2B99DDE4)
                                                                               - 34652640
                                                                               + ((v10 << (v7 + 28)) & 0x5733BBC8)
                                                                               + v3 <= ((v7 - 1561595430) & 0x5D140BD2)
                                                                                     - 147)
                                                                              * ((v7 + 1789551544) & 0x95559BEE ^ 0x241)) ^ (v7 - 164))))(a1, 2733372030, 1561594834, 2505415662);
}

uint64_t sub_1DA70A138(int a1)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1577 * (*(_DWORD *)(v2 + 4 * v3) == (v1 ^ 0x415 ^ (a1 - 988)))) ^ v1)))();
}

void sub_1DA70A16C()
{
}

_DWORD *sub_1DA70A17C(_DWORD *result, uint64_t a2, uint64_t a3, int a4)
{
  *uint64_t result = a4;
  return result;
}

uint64_t sub_1DA70A184()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 102920771) & 0x622753B) - 866) ^ 0x1A8) * (v1 != 1584496196)) ^ (v0 - 102920771) & 0x622753B)))();
}

uint64_t sub_1DA70A1E4()
{
  int v4 = v2 + 980866120 + ((3 * (v0 ^ 0x293) - 1358) | 0x15);
  BOOL v6 = v4 > 315443983 || v4 < v3 - 1832039664;
  return (*(uint64_t (**)(void))(v1 + 8 * ((456 * v6) ^ v0)))();
}

uint64_t sub_1DA70A244()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((58 * (((v1 - 23) ^ (((v1 - 493) ^ v0) < 8)) & 1)) ^ v1)))();
}

uint64_t sub_1DA70A284(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v31 = *(_DWORD *)(a23 - 0x68A89052B2EA55B0) + 1780651553;
  v27.n128_u64[0] = 0xBEBEBEBEBEBEBEBELL;
  v27.n128_u64[1] = 0xBEBEBEBEBEBEBEBELL;
  v28.n128_u64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v28.n128_u64[1] = 0x5F5F5F5F5F5F5F5FLL;
  *(_DWORD *)(v26 - 140) = v25 ^ 0x47A;
  BOOL v29 = v31 < 0xB2E8A1D5;
  if (v31 >= 0xB2E8A1D5) {
    BOOL v29 = v31 > 0xB2E8A1D5;
  }
  return (*(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v24
                                                                                            + 8
                                                                                            * ((28
                                                                                              * (((v23 - 84) ^ v29) & 1)) ^ (v23 + 100))))(3517101519, a1, a2, a3, a4, v27, v28);
}

uint64_t sub_1DA70A3A8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((9 * (v3 ^ a1)) ^ 0x58u) - v2;
  long long v8 = *(_OWORD *)(a2 + v7 - 15);
  long long v9 = *(_OWORD *)(a2 + v7 - 31);
  uint64_t v10 = v5 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v2 != 288) * v4) ^ v3)))();
}

void sub_1DA70A3F4()
{
}

uint64_t sub_1DA70A40C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x11127EB20C1B7502) - 883820531;
  int v3 = *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502) - 883820531;
  int v4 = (v2 < 1960514577) ^ (v3 < 1960514577);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < 1960514577;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 20) - 1374699841 * ((a1 + 1891232920 - 2 * (a1 & 0x70B9EC98)) ^ 0x1D4DF491);
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v1 - 138) + ((v6 * ((v1 + 1061) ^ 0x567)) ^ v1) - 1))();
}

uint64_t sub_1DA70A4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((540 * (v5 == ((a5 - 243) ^ (v7 + 28)))) ^ (a5 - 243))))();
}

uint64_t sub_1DA70A508@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v1 - 1247008621) & 0x4A53D76C) - 1025)
                                * (*(_DWORD *)(v2 - 0x68A89052B2EA55A8) == 2058996701)) ^ (v1 - 1612))))();
}

uint64_t sub_1DA70A564@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v2 + v4) = (v5 ^ v1) * (v5 + 17);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ a1)))();
}

uint64_t sub_1DA70A598(int a1, int a2, uint64_t a3, const char *a4)
{
  int8x16x4_t v28 = vld4q_s8(a4);
  uint8x16_t v16 = (uint8x16_t)veorq_s8(v28.val[2], v15);
  _Q21 = vmovl_high_u8(v16);
  _Q20 = vmovl_u8(*(uint8x8_t *)v16.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  int v23 = ((a2 - 483) ^ (v13 + 1149) ^ v4)
      + v12
      + ((v6 ^ v13) & (a1 ^ 0x49865CC1) | (v5 ^ v13) & (a1 ^ v13))
      + *((_DWORD *)*(&off_1F34B17C0 + a2 - 1490) + v11 + 740185934)
      + (*(_DWORD *)(v7 + 4 * (*((unsigned char *)*(&off_1F34B17C0 + a2 - 1470) + v11 + 740185928) - 30)) ^ v10);
  uint64_t v24 = (char *)*(&off_1F34B17C0 + ((a2 - 1624) | 0x44)) - 12;
  unsigned int v25 = (v23 + v13 - (v8 & (2 * v23))) ^ v13;
  int v26 = ((v25 << (v24[v11 + 740185936] - 4)) | (v25 >> (4 - v24[v11 + 740185936]))) + (a1 ^ v13);
  return (*(uint64_t (**)(void))(v9 + 8 * ((14 * (v14 != 740185921)) ^ (a2 - 483))))(v26 + v13 - (v8 & (2 * v26)));
}

uint64_t sub_1DA70A7C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a8 - 1139) ^ 0x33C) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_1DA70A7F0(uint64_t a1, uint64_t a2)
{
  int v8 = *(_DWORD *)(v7 - 252 + ((v5 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v5 + v2)) = v8 ^ 0x61;
  *(unsigned char *)(a2 + (v5 + v2 + 1)) = (BYTE1(v8) ^ 0xA3)
                                               + ((v4 + 3) & 0xFA ^ 0x18)
                                               + (~(2 * (BYTE1(v8) ^ 0xA3)) | 0x41);
  *(unsigned char *)(a2 + (v5 + v2 + 2)) = (BYTE2(v8) ^ 0x79) - ((2 * (BYTE2(v8) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a2 + (v5 + v2 + 3)) = (HIBYTE(v8) ^ 0xB6) - ((2 * (HIBYTE(v8) ^ 0xB6)) & 0xBF) + 95;
  unsigned int v9 = *(_DWORD *)(v7 - 160) + 43135442;
  BOOL v10 = v9 < v3;
  BOOL v11 = v5 + 118984754 < v9;
  if (v5 + 118984754 < v3 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((1263 * v11) ^ v4)))();
}

void sub_1DA70A8E8()
{
}

uint64_t sub_1DA70A8F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 - 1436) ^ 0x37F ^ ((v5 - 1476) | 0x293)) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1DA70A928(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (v1 ^ (32
                                                                     * (v4 < (unint64_t)((v1 - 407) | 0x2Cu)
                                                                           - 171)))))(a1, v2, v5);
}

uint64_t sub_1DA70A95C(uint64_t a1, int a2)
{
  int v9 = 130 * (v4 ^ 0x318);
  *(_DWORD *)(v6 + v3) = v2;
  *(void *)(v8 - 144) = v7;
  *(_DWORD *)(v8 - 136) = v9 + ((((v8 - 144) | 0xA211F157) - ((v8 - 144) & 0xA211F157)) ^ 0xF86CDF2) * a2 - 305;
  *(void *)(v8 - 12_Block_object_dispose(&STACK[0x360], 8) = v6;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (v9 + 877)))(v8 - 144);
}

uint64_t sub_1DA70A978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((416 * (a3 + 1 != v10 + 16)) ^ v8)))(a8);
}

uint64_t sub_1DA70AA58(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((v8 ^ 0x30A) + 1389) ^ (16
                                                        * ((*(unsigned char *)(v9 + a8)
                                                                           + (v8 ^ 0xA ^ a1) * a2
                                                                           - *(unsigned char *)*(&off_1F34B17C0
                                                                                       + (v8 ^ 0x30A)
                                                                                       - 240)) == 123)))))();
}

void sub_1DA70AAA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 535753261 * (((a1 | 0x623F3C2F) - (a1 & 0x623F3C2F)) ^ 0x68CB3200);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = (char *)*(&off_1F34B17C0 + (v1 ^ 0x398)) - 8;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * v1 + 9664])((char *)*(&off_1F34B17C0 + v1 - 739) - 4, sub_1DA72A258);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA70AB60()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x5C8)))();
  LODWORD(STACK[0x630]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v1 == v0 + 2058996166) * (v0 ^ 0x3A0)) ^ v0)))(v3);
}

uint64_t sub_1DA70ABB0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((857
                                * (*(_DWORD *)(a22 + 4 * (a1 + v25 + 2594)) == (((v24 ^ v23) + 548) ^ (v22 + 651)))) ^ (v24 - 1839))))();
}

uint64_t sub_1DA70ACB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int32x4_t a47, int32x4_t a48, int32x4_t a49, int32x4_t a50, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  return sub_1DA71FB60(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1DA70ACBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8 * ((985 * (v6 + 1 == v10 + 20)) ^ a6)))(v7, a2, v8);
}

uint64_t sub_1DA70ADA0@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xC98));
  return v3(v1);
}

uint64_t sub_1DA70ADD4(uint64_t result)
{
  unint64_t v1 = 1224239923
     * ((2 * ((result ^ 0x63D94C3FED8F81CCLL) & 0x7D26FA604C1E86EELL)
       - (result ^ 0x63D94C3FED8F81CCLL)
       - 0x7D26FA604C1E86EFLL) ^ 0xC95AFCC9ACDD050ALL);
  unint64_t v2 = *(void *)(result + 24) ^ v1;
  unint64_t v3 = *(void *)(result + 32) - v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = (uint64_t)v2 < (uint64_t)v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 40) ^ v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  if (v5) {
    uint64_t v7 = (_DWORD *)result;
  }
  else {
    uint64_t v7 = (_DWORD *)(result + 4);
  }
  *(_DWORD *)(result + 16) = *v7 ^ v1 ^ (*(_DWORD *)(result + 8) + v1);
  return result;
}

uint64_t sub_1DA70AE88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(unsigned char *)(v26 - 252 + (a8 + v22)) = *(unsigned char *)(((v23 + 157) ^ 0x205u) + a22 + v25 - 704230089)
                                                   - ((2 * *(unsigned char *)(((v23 + 157) ^ 0x205u) + a22 + v25 - 704230089)) & 0xBF)
                                                   + 95;
  __n128 v27 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((101 * ((a6 + a8 + 1) > 0x3F)) ^ (v23 + 157)));
  return v27(v27, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1DA70AEF8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((57
                                * (v1 - 1216163889 + ~(v2 + LODWORD(STACK[0x3E0]) - 1584496399 + 29 * (v0 ^ 0x19Du)) > 2)) ^ v0)))();
}

uint64_t sub_1DA70AF94(uint64_t result)
{
  unint64_t v1 = 235795823 * (((result | 0x496F45A7F70D82F4) - result + (result & 0xB690BA5808F27D0BLL)) ^ 0x41DFFF5963A0CBADLL);
  int v2 = *(_DWORD *)(result + 40) + v1;
  uint64_t v3 = *(void *)(result + 24);
  uint64_t v4 = *(void *)(result + 32);
  int v5 = *(_DWORD *)(result + 16) + v1;
  int v6 = *(_DWORD *)result ^ v1;
  BOOL v7 = v3 + v1 > v4 + v1;
  BOOL v8 = v3 == v4;
  if ((*(_DWORD *)(result + 4) ^ v1)) {
    BOOL v9 = v7;
  }
  else {
    BOOL v9 = v8;
  }
  if (v9) {
    int v10 = v6;
  }
  else {
    int v10 = v5;
  }
  *(_DWORD *)(result + 12) = v10 ^ v2;
  return result;
}

uint64_t sub_1DA70B038(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)(result + 4) - 24687 * ((2 * (result & 0xB783) - result + 18556) ^ 0x444F);
  *(_DWORD *)(v1 - 0x4696E7753303C8D2) = v2 & 0x1FF ^ 0x5F82595A;
  *(void *)(v1 - 0x4696E7753303C8F2) = 0x41DE651695ABEA7DLL;
  *(_DWORD *)(v1 - 0x4696E7753303C8D6) = 1133293858;
  int v3 = v2 ^ 0x2A;
  if (v3 == 1)
  {
    int v4 = 1133293874;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x4696E7753303C8DALL) = 1974158030;
    int v4 = 1133293878;
LABEL_5:
    *(void *)(v1 - 0x4696E7753303C8EALL) = 0x59B408B7D13C803FLL;
    *(void *)(v1 - 0x4696E7753303C8E2) = 0xA64BF7482EC37FC0;
    *(_DWORD *)(v1 - 0x4696E7753303C8D6) = v4;
  }
  *(_DWORD *)uint64_t result = 219700594;
  return result;
}

uint64_t sub_1DA70B180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(v74 + 360) = 1227088735;
  uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v75 + 8 * (v70 + 1837)))(v73, 2, &STACK[0x444], STACK[0x490], (v72 - 826018275), v71, &STACK[0x4E8], &STACK[0x5D4]);
  int v79 = ((2 * v77) & 0xF7FE68D4) + (v77 ^ 0xFBFF346A);
  if (v79 == 201274477)
  {
    LODWORD(STACK[0x4F8]) = -2058972955;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v75
                                                                                  + 8
                                                                                  * (int)(((STACK[0x4E8] == 0)
                                                                                         * ((STACK[0x420] - 1696561432) ^ 0x9AE08655 ^ (STACK[0x420] - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (STACK[0x420] + 1240))))(v77, STACK[0x4E8], v78, 2235994116);
  }
  else
  {
    unint64_t v80 = STACK[0x420];
    if (v79 == -67160982)
    {
      STACK[0x3D0] = STACK[0x4E8];
      LODWORD(STACK[0x3C8]) = STACK[0x5D4];
      STACK[0x2D8] = STACK[0x2C0] + 2304;
      uint64_t v84 = (12 * a54) ^ 0x1894u;
      LODWORD(STACK[0x504]) = a70;
      unint64_t v85 = STACK[0x408];
      int v86 = (char *)&STACK[0x680] + STACK[0x408] - 0x74AC42827A6CFC21;
      unint64_t v87 = &v86[v84];
      STACK[0x260] = STACK[0x408] + 4144;
      STACK[0x5C0] = v85 + 4144;
      *(void *)unint64_t v87 = 0x6370646600;
      v87[8] = 1;
      STACK[0x240] = (unint64_t)&v86[v84];
      STACK[0x3D8] = (unint64_t)&v86[((16 * ((_BYTE)v86 + 60) + 16) & 0x20) + 1868];
      STACK[0x3E8] = (unint64_t)&v86[v84 + 9];
      char v88 = *(uint64_t (**)(__n128))(v75
                                             + 8
                                             * (int)((((v84 - 1669339341) & 0x63801957 ^ 0xFFFFFA21)
                                                    + ((v84 + 378) | 0x400)) ^ v84));
      STACK[0x408] = (unint64_t)*(&off_1F34B17C0 + (int)v84 - 49);
      STACK[0x400] = (unint64_t)*(&off_1F34B17C0 + ((12 * a54) ^ 0x18A1));
      return v88((__n128)0);
    }
    else
    {
      int v81 = 1225351577 * (((v76 - 192) & 0x948469F2 | ~((v76 - 192) | 0x948469F2)) ^ 0x48E14E1B);
      *(void *)(v76 - 184) = a55;
      *(_DWORD *)(v76 - 192) = v80 - v81 + 402;
      *(_DWORD *)(v76 - 18_Block_object_dispose(&STACK[0x360], 8) = (v79 - ((2 * v79 + 134321964) & 0xF57397BA) + 2126157683) ^ v81;
      int v82 = v80;
      uint64_t v83 = (*(uint64_t (**)(uint64_t))(v75 + 8 * a53))(v76 - 192);
      return (*(uint64_t (**)(uint64_t))(v75
                                                + 8
                                                * (int)(((STACK[0x4E8] == 0)
                                                       * ((v82 - 1696561432) ^ 0x9AE08655 ^ (v82 - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (v82 + 1240))))(v83);
    }
  }
}

uint64_t sub_1DA70B3BC@<X0>(int a1@<W8>)
{
  BOOL v5 = (*(_DWORD *)v2 ^ a1) != (v1 ^ 0x7EA242EA) && (*(void *)(v2 + 64) | *(void *)(v2 + 8)) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((230 * v5) ^ (v1 - 531))))();
}

void sub_1DA70B410(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v1 = 460628867 * (a1 ^ 0x4C96827D);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned int v5 = (*(_DWORD *)(a1 + 24) ^ v1) - ((2 * (*(_DWORD *)(a1 + 24) ^ v1) + 464817210) & 0xAE548ACE) - 452686972;
  int v6 = -669361595 * (*(_DWORD *)(a1 + 28) ^ v1) + 948985474;
  unsigned int v7 = 3804331 * (((~&v9 & 0x11140AA) - (~&v9 | 0x11140AB)) ^ 0x2F50C367);
  uint64_t v16 = *(void *)(a1 + 16);
  unsigned int v15 = ((v6 ^ 0x7FFDFF40) - 805635648 + ((2 * v6) & 0xFFFBFE80)) ^ v7;
  int v12 = v5 ^ v7;
  uint64_t v13 = v4;
  uint64_t v14 = v4;
  int v9 = v2 + v7 + 368399900;
  uint64_t v10 = v3;
  BOOL v8 = (char *)*(&off_1F34B17C0 + v2 - 141) - 8;
  (*(void (**)(int *))&v8[8 * v2 + 13872])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA70B5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v28 = 1755732067 * ((v27 - 120) ^ 0xDEC6BDDB);
  *(_DWORD *)(v27 - 120) = v28 + v21 + 1622;
  *(_DWORD *)(v27 - 116) = (((v21 + 1002) ^ 0x3DE8B239) + v26) ^ v28;
  *(void *)(v27 - 112) = v25;
  (*(void (**)(uint64_t))(v22 + 8 * (v21 + 1698)))(v27 - 120);
  *(_DWORD *)(v27 - 100) = v21
                         + 1002
                         + 1374699841
                         * ((486019166 - ((v27 - 120) | 0x1CF8105E) + ((v27 - 120) | 0xE307EFA1)) ^ 0x8EF3F7A8)
                         - 1086;
  *(void *)(v27 - 120) = a21;
  *(void *)(v27 - 112) = v24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 1700)))(v27 - 120);
  BOOL v30 = *(_DWORD *)(v27 - 104) + ((((v21 + 1002) ^ 0x1E8) - 689) ^ (v23 + 1713)) < 0xBB334B90;
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((v30 | (2 * v30)) ^ (v21 + 1002))))(v29);
}

uint64_t sub_1DA70B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v28 = v26 + a4;
  if (v28 <= 0x40) {
    unsigned int v28 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((55 * (a1 - v24 - v25 + v23 - 404 + v28 >= ((v23 + 145) ^ 0x4A9u))) ^ v23)))(a1, 4260056016, 4260055957, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

void sub_1DA70B73C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(_DWORD *)(v17 - 104) = a1
                         + 628203409 * ((2 * ((v17 - 144) & 0x5E2E2288) - (v17 - 144) - 1580081807) ^ 0x2359D142)
                         + 1530;
  *(void *)(v17 - 120) = a8;
  *(void *)(v17 - 112) = a7;
  *(void *)(v17 - 136) = a16;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a17;
  *(void *)(v17 - 144) = a8;
  JUMPOUT(0x1DA726D4CLL);
}

uint64_t sub_1DA70B7A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  uint64_t v9 = a3 - 32 + ((a6 + 372) | a7);
  long long v10 = *(_OWORD *)(v7 + v9 - 15);
  long long v11 = *(_OWORD *)(v7 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (a5 != 32)) | (32 * (a5 != 32))) ^ (a6 + 23))))();
}

uint64_t sub_1DA70B7B0@<X0>(int a1@<W8>)
{
  int v4 = v1 + a1;
  if (v4 >= 0) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1673) | 0x18) ^ 0x9F) * (v5 < 0x83)) ^ v2)))();
}

uint64_t sub_1DA70B7E4(uint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((*(_DWORD *)(*v7 + 4 * a5) == v5 + 1683) * a3) ^ a4)))();
}

uint64_t sub_1DA70B814(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = *(unsigned __int8 *)(v68 - 0x4696E7753303C8D2) ^ 0x70;
  if (v71 == 1)
  {
    unsigned int v79 = *(_DWORD *)(v68 - 0x4696E7753303C8EELL);
    int v76 = (a3 + 35) | 0x481;
    *(unsigned char *)(v68 - 0x4696E7753303C8FALL) = ((((a3 + 35) | 0x81) - 11) ^ (8 * v79))
                                           - ((2 * ((((a3 + 35) | 0x81) - 11) ^ (8 * v79))) & 0xB0)
                                           + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F9) = ((v79 >> 5) ^ 0x28) - ((2 * ((v79 >> 5) ^ 0x28)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F_Block_object_dispose(&STACK[0x360], 8) = ((v79 >> 13) ^ 0xF3) - ((2 * ((v79 >> 13) ^ 0xF3)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F7) = ((v79 >> 21) ^ 0xE) - ((2 * ((v79 >> 21) ^ 0xE)) & 0xBF) + 95;
    unsigned int v80 = *(_DWORD *)(v68 - 0x4696E7753303C8F2);
    HIDWORD(v81) = v80 ^ 0x1D;
    LODWORD(v81) = v79 ^ 0x40000000;
    *(unsigned char *)(v68 - 0x4696E7753303C8F6) = (v81 >> 29) - ((2 * (v81 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F5) = ((v80 >> 5) ^ 0x53) - ((2 * ((v80 >> 5) ^ 0x53)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F4) = (v69 ^ (v80 >> 13)) - ((2 * (v69 ^ (v80 >> 13))) & 0xBF) + 95;
    char v77 = -66;
    unsigned int v78 = (v80 >> 21) ^ 0xFFFFFFAD;
  }
  else
  {
    int v72 = a3;
    if (v71 != 2) {
      goto LABEL_6;
    }
    unsigned int v73 = *(_DWORD *)(v68 - 0x4696E7753303C8F2);
    *(unsigned char *)(v68 - 0x4696E7753303C8FALL) = ((v73 >> 21) ^ 0xAD) - ((2 * ((v73 >> 21) ^ 0xAD)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F9) = (v69 ^ (v73 >> 13)) - (((v69 ^ (v73 >> 13)) << (a3 ^ 0x16)) & 0xBE) + 95;
    unsigned int v74 = *(_DWORD *)(v68 - 0x4696E7753303C8EELL);
    HIDWORD(v75) = v73 ^ 0x1D;
    LODWORD(v75) = v74 ^ 0x40000000;
    *(unsigned char *)(v68 - 0x4696E7753303C8F_Block_object_dispose(&STACK[0x360], 8) = ((v73 >> 5) ^ 0x53) + (~(2 * ((v73 >> 5) ^ 0x53)) | 0x41) + 96;
    *(unsigned char *)(v68 - 0x4696E7753303C8F7) = (v75 >> 29) - ((2 * (v75 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F6) = ((v74 >> 21) ^ 0xE) + (~(2 * ((v74 >> 21) ^ 0xE)) | 0x41) + 96;
    int v76 = a3 ^ 0x4AC;
    *(unsigned char *)(v68 - 0x4696E7753303C8F5) = ((v74 >> 13) ^ 0xF3) - ((2 * ((v74 >> 13) ^ 0xF3)) & 0xBF) + 95;
    *(unsigned char *)(v68 - 0x4696E7753303C8F4) = ((v74 >> 5) ^ 0x28) - ((2 * ((v74 >> 5) ^ 0x28)) & 0xBF) + 95;
    char v77 = -80;
    LOBYTE(v7_Block_object_dispose(&STACK[0x360], 8) = (8 * v74) ^ 0xB0;
  }
  int v72 = v76 - 1188;
  *(unsigned char *)(v68 - 0x4696E7753303C8F3) = v78 + (v77 & (2 * v78) ^ (v76 + 68)) + 96;
LABEL_6:
  STACK[0x518] = *(void *)(v70 + 8 * (v72 - 267));
  STACK[0x648] = v68;
  STACK[0x650] = v68 - 0x4696E7753303C932;
  unint64_t v82 = STACK[0x5C0];
  uint64_t v83 = (char *)&a9 + STACK[0x5C0] - 0x74AC42827A6CFE95;
  STACK[0x658] = (unint64_t)v83;
  STACK[0x5C0] = v82 + 320;
  int v84 = *(_DWORD *)(v68 - 0x4696E7753303C8EALL);
  LODWORD(STACK[0x5B4]) = v84;
  int v85 = *(_DWORD *)(v68 - 0x4696E7753303C8E6);
  LODWORD(STACK[0x594]) = v85;
  int v86 = *(_DWORD *)(v68 - 0x4696E7753303C8E2);
  LODWORD(STACK[0x604]) = v86;
  int v87 = *(_DWORD *)(v68 - 0x4696E7753303C8DELL);
  LODWORD(STACK[0x55C]) = v87;
  int v88 = *(unsigned __int8 *)(v68 - 0x4696E7753303C8D2) ^ 0x70;
  if (v88 == 2)
  {
    LODWORD(STACK[0x4C0]) = *(_DWORD *)(v68 - 0x4696E7753303C8DALL);
    JUMPOUT(0x1DA70D004);
  }
  if (v88 == 1)
  {
    LODWORD(STACK[0x534]) = v67;
    BOOL v90 = v68 - 0x4696E7753303C932 < a67 + v82 && (unint64_t)v83 < v68 - 0x4696E7753303C8F2;
    return (*(uint64_t (**)(void))(v70 + 8 * (((a3 + 404 + a3 + 364 - 1086) * v90) ^ (a3 + 1365))))();
  }
  else
  {
    unsigned int v92 = (*(_DWORD *)(v68 - 0x4696E7753303C8EALL) ^ 0xB679A33E) + (v84 ^ 0xB679A33E);
    *(_DWORD *)(v68 - 0x4696E7753303C8EALL) = v92 - 1233542338 - ((2 * v92) & 0x6CF3467C);
    unsigned int v93 = (*(_DWORD *)(v68 - 0x4696E7753303C8E6) ^ 0xB679A33E) + (v85 ^ 0xB679A33E);
    *(_DWORD *)(v68 - 0x4696E7753303C8E6) = v93 - 1233542337 + ~((2 * v93) & 0x6CF3467C);
    unsigned int v94 = (*(_DWORD *)(v68 - 0x4696E7753303C8E2) ^ 0xB679A33E) + (v86 ^ 0xB679A33E);
    *(_DWORD *)(v68 - 0x4696E7753303C8E2) = v94 - 1233542338 - ((2 * v94) & 0x6CF3467C);
    *(_DWORD *)(v68 - 0x4696E7753303C8DELL) = (*(_DWORD *)(v68 - 0x4696E7753303C8DELL) ^ 0xB679A33E)
                                            + (v87 ^ 0xB679A33E)
                                            - 1233542337
                                            + ~((2
                                               * ((*(_DWORD *)(v68 - 0x4696E7753303C8DELL) ^ 0xB679A33E)
                                                + (v87 ^ 0xB679A33E))) & 0x6CF3467C);
    STACK[0x5C0] = v82;
    return ((uint64_t (*)(void))STACK[0x518])();
  }
}

void sub_1DA70BB94()
{
}

void sub_1DA70BBA8(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (a1 + v2)) == v3;
  *uint64_t v6 = (v5 ^ 0xB) - 1642334550 * (a1 - v7) - 2116659700 + v1 + v1 * (v2 + a1 - v7);
}

uint64_t sub_1DA70BBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1464 * (v7 + 1 == v9 + 64)) ^ a7)))();
}

uint64_t sub_1DA70BCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((*(_DWORD *)(*(void *)(a1 + 8) + v4) == v3) ^ ((v2 ^ 0xEB) + 36)) & 1)
                                * (v2 ^ 0x749)) ^ v2 ^ 0x5EB)))();
}

uint64_t sub_1DA70BD08(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 + a3 == 0) * ((3 * (v3 ^ v5)) ^ (v3 - 1059))) | v3)))();
}

uint64_t sub_1DA70BD3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * (v4 + v1 >= ((7 * (v0 ^ 0x3F2) - 101) | 0x12u) + v2)) | v0)))();
}

uint64_t sub_1DA70BD80(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  *(unsigned char *)(a1 + (v7 + a5)) = *(unsigned char *)(v8 + (v7 + a5));
  return (*(uint64_t (**)(void))(v9 + 8 * ((28 * (v7 - 1 == (((v6 ^ a3) * a6) ^ (a4 + 102)))) ^ (v6 + 1560))))();
}

uint64_t sub_1DA70BDC4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (1302 * ((v2 + v1 - 2) < 0x7FFFFFFF)))))();
}

void sub_1DA70BE00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X11, X17 }
}

void sub_1DA70BF18()
{
}

void sub_1DA70BF20()
{
}

uint64_t sub_1DA70BF30@<X0>(int a1@<W8>)
{
  int v4 = *v3 + 516161675;
  BOOL v5 = v1 + 516161675 < (int)(((a1 + 302922297) & 0xEDF1C57E) - 934471799);
  int v6 = v5 ^ (v4 < (int)(((a1 - 1352) | 0x500) ^ 0xC84D1989));
  BOOL v7 = v1 + 516161675 > v4;
  if (!v6) {
    BOOL v5 = v7;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((38 * !v5) ^ a1)))();
}

uint64_t sub_1DA70BFC0(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = (((a3 + 594) ^ 0x368) & v3) != 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 | (2 * v5)) ^ (a3 + 1034))))();
}

uint64_t sub_1DA70C04C@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((255 * ((a2 + a1) < 8)) ^ v2)))();
}

void sub_1DA70C054()
{
  _DWORD *v1 = v0;
}

uint64_t sub_1DA70C078()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((106 * (v0 <= ((STACK[0x420] + 437) ^ 0xD008C047))) ^ (STACK[0x420] + 399))))();
}

uint64_t sub_1DA70C0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a19) = 1157139139;
  unsigned int v33 = 628203409 * ((2 * (&a22 & 0x23AC0B90) - &a22 + 1549005932) ^ 0xDEDBF85F);
  HIDWORD(a1_Block_object_dispose(&STACK[0x360], 8) = HIDWORD(a21);
  a27 = a20;
  a28 = a14;
  a22 = a15;
  a23 = a13;
  a25 = a16;
  LODWORD(a24) = v28 - v33 + 944;
  HIDWORD(a24) = 610416840 - v33 + HIDWORD(a21) + 706;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v28 + 1620)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((1876 * (a26 == 353 * (v28 ^ 0x1BD) + 2058995995)) ^ v28)))(v34, v31, 4135933839, 826018278, 159034331, v32, 154153363, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1DA70C1DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 == v1) ^ a1) & 1) * (a1 ^ 0x460)) ^ a1)))();
}

uint64_t sub_1DA70C228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  uint64_t v31 = *(void *)(a2 + 8);
  unsigned int v32 = 628203409 * (&a22 ^ 0x82880C33);
  unsigned int v33 = *(_DWORD *)(a2 + 4) - v32;
  a22 = a15;
  a23 = a13;
  a24 = v30 - v32 - 99;
  a25 = v33 + ((v30 + 1824537517) & 0x933FBFF2 ^ 0x24623AF8);
  a28 = v31;
  a29 = a14;
  a26 = a16;
  (*(void (**)(uint64_t *))(v29 + 8 * (v30 + 577)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                + 8
                                                                                * ((46 * (a27 == 2058996701)) ^ v30)))(103, a2, 4135933839, 826018278, 159034331);
}

uint64_t sub_1DA70C330()
{
  unsigned int v3 = LODWORD(STACK[0x48C]) - 1900685161;
  unsigned int v4 = v1 + ((v0 + 398797478) ^ 0xB5B776A0);
  int v5 = (v4 < ((v0 + 398797478) & 0xE83AD67F) - 743547645) ^ (v3 < 0xD3AE635A);
  BOOL v6 = v3 < v4;
  if (v5) {
    BOOL v6 = v4 < ((v0 + 398797478) & 0xE83AD67F) - 743547645;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 | (2 * v6)) ^ v0)))();
}

void sub_1DA70C3B8()
{
}

uint64_t sub_1DA70C460()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((203 * (v0 - 1200253940 < ((v2 + 455) | 0x429u) - 1527)) ^ (v2 + 1248))))(37);
}

uint64_t sub_1DA70C4BC@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_DWORD *)(a10 + 4 * (v10 + a2)) = a1;
  int v16 = v12 + v10 + 1;
  BOOL v18 = v16 <= v13 + 844 && v16 >= v14;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v18 | (4 * v18)) ^ v11)))();
}

uint64_t sub_1DA70C508(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * (((((v3 - 792) ^ 0x1B6) + 1736)
                                                                                           * (v2 == v4)) ^ v3)))(a1, a2, 272, 418606950, 3876360338, 23);
}

uint64_t sub_1DA70C550@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (*v1 == (((a1 ^ 0x36C) + 17) ^ 0x9C))) ^ a1 ^ 0x36C)))();
}

void sub_1DA70C588(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x13939118D2D7EE7BLL) = v1;
  *(_DWORD *)(v4 - 0x591956795CC936E4) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_1DA70C5F0@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v3 = (int *)STACK[0x428];
  uint64_t v4 = (unint64_t *)STACK[0x5A0];
  STACK[0x3A0] = STACK[0x300];
  STACK[0x3F0] = *v4;
  int v5 = *v3;
  STACK[0x3E0] = *(void *)(v2 + 8 * a2);
  int v6 = (a2 ^ 0x6E3) - 1666;
  STACK[0x5C0] = STACK[0x390];
  LODWORD(STACK[0x440]) = -518512293;
  LODWORD(STACK[0x3D8]) = -1948693280;
  LODWORD(STACK[0x400]) = -229857073;
  LODWORD(STACK[0x5BC]) = 826018275;
  STACK[0x5A8] = 0;
  LODWORD(STACK[0x48C]) = 1157139139;
  LODWORD(STACK[0x3C8]) = (v6 ^ 0xC7008F8A) + 1283575097;
  LODWORD(STACK[0x3D0]) = -1430323542;
  LODWORD(STACK[0x3E8]) = v5;
  *(_DWORD *)STACK[0x408] = a1;
  BOOL v8 = *(_DWORD *)STACK[0x408] != a1
    || (((((a2 ^ 0x6E3) + 1067445906) & 0xC0600B9F) + 1295345030) ^ ((a2 ^ 0x6E3) + 1992232054) & 0x8940EFFF) != 1295345095;
  return (*(uint64_t (**)(void))(v2 + 8 * ((235 * v8) ^ v6)))();
}

void sub_1DA70C608()
{
  *v1 ^= v0;
  JUMPOUT(0x1DA70C628);
}

void sub_1DA70C67C()
{
}

uint64_t sub_1DA70C68C()
{
  int v4 = 628203409 * ((((v3 - 192) | 0x96D41AAA) - ((v3 - 192) & 0x96D41AAA)) ^ 0x145C1699);
  *(_DWORD *)(v3 - 176) = v0 - v4 + 1068;
  *(_DWORD *)(v3 - 172) = v1 - v4 + 610417546;
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = STACK[0x3C0];
  unint64_t v5 = STACK[0x3B0];
  *(void *)(v3 - 152) = STACK[0x3F0];
  *(void *)(v3 - 144) = v5;
  unint64_t v6 = STACK[0x3A8];
  *(void *)(v3 - 192) = STACK[0x3B8];
  *(void *)(v3 - 184) = v6;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0x950)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 8 * (((*(_DWORD *)(v3 - 160) == (v0 ^ 0x54) + 2058996422) * (v0 + 433)) ^ v0)))(1496, 2999622201, 1890839445, 2235994116, STACK[0x420], 179183711, 48, 3587359654, (__n128)0);
}

uint64_t sub_1DA70C794()
{
  STACK[0x4D8] = v0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((28 * (STACK[0x568] != 0)) ^ ((v1 ^ 0x159) + 1716))))();
}

uint64_t sub_1DA70C7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((STACK[0x480] == v4)
                                                                         * ((((v3 ^ 0x300) - 117) | 0x1C) - 179)) ^ ((v3 ^ 0x300) + 96))))(a1, a2, a3, 2235994116);
}

uint64_t sub_1DA70C7F0(uint64_t result)
{
  if (v2 + v1 >= (v5 + 2147483501)) {
    int v6 = 1393702920 - v4;
  }
  else {
    int v6 = v4;
  }
  *int v3 = v6;
  *(_DWORD *)(result + 2_Block_object_dispose(&STACK[0x360], 8) = 414666719;
  return result;
}

uint64_t sub_1DA70C830@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void, void, void))(v21 + 8 * v20))(((a1 - 1740282883) ^ 0x8E137DEF) + 2012147441 + ((2 * (a1 - 1740282883)) & 0x1C26FBDE), a20 & 0x20000000, ((((v20 - 4) | 0x460) - 1603225760) & 0x5F8F44FA ^ 0x4A5u) - 1149);
}

uint64_t sub_1DA70C930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v18 - 104) = v13
                         + 628203409
                         * ((-2117829029 - ((v18 - 144) | 0x81C47E5B) + ((v18 - 144) | 0x7E3B81A4)) ^ 0xFCB38D97)
                         + 1346;
  *(void *)(v18 - 120) = v14;
  *(void *)(v18 - 112) = a11;
  *(void *)(v18 - 144) = v14;
  *(void *)(v18 - 136) = v16;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = v15;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x5AC)))(v18 - 144);
  BOOL v20 = v11 + v17 + (v13 ^ 0x397u) + 1364 - 1816 > 0x7FFFFFFE;
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (((4 * v20) | (8 * v20)) ^ v13 ^ 0x397)))(v19);
}

uint64_t sub_1DA70C9E4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (((((v19 + 276915071) | 0x9521840) + ((v19 + 163779479) | 0x10106828) - 866581636)
                                * (~a18 + a3 - (unint64_t)(v18 + a2) < 0x10)) ^ v19)))();
}

uint64_t sub_1DA70CA58()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((223
                                * ((((3 * (v0 ^ 0x495) + 1737233514) << ((10 * (v0 ^ 0x77)) ^ 0x3B)) & 0xFFD7F76C ^ 0xCF102564)
                                 + ((3 * (v0 ^ 0x495) + 1737233514) ^ 0x1867ED4D)
                                 - 1300931332 != 845240498)) ^ v0)))();
}

uint64_t sub_1DA70CA60(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502);
  int v4 = v2 - 696851460;
  BOOL v3 = v2 - 696851460 < 0;
  int v5 = 696851460 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 12) - 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v1 - 796)
          + ((67
            * ((((v5 ^ 0xFEECFABB) + 2079811582 + ((v1 - 36048430) & (2 * v5)) - 2061787834 < 0x7FFFFFFF) ^ (v1 + 120) ^ 0x4D) & 1)) | (v1 + 632))
          - 1))();
}

uint64_t sub_1DA70CB78(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 ^ 0xDCF)))(a1, 0);
  if (result == 16)
  {
    --v2;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ 0x246)))(a1);
    int v9 = v2;
    goto LABEL_8;
  }
  if (result)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *int v4 = a1;
  int v9 = 1500681267;
LABEL_8:
  _DWORD *v1 = v9 - 1500681267;
  return result;
}

uint64_t sub_1DA70CC08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = (a4 - 433059543) | 0x306;
  uint64_t v11 = 84 * (v10 ^ 0x358u);
  uint64_t v12 = (v11 + 193445319) & 0xF4784277;
  uint64_t v13 = (v12 - 348);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (int)((v13 * (v8 < 0x20)) ^ v10));
  return v14(a1, v11, v14, v12, v13, a6, a7, a8);
}

uint64_t sub_1DA70CC68()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1DA70CC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((a5 - 1598209865) & 0x5F42BF23) + ((a5 + 38) ^ 0xFFFFFEC4)) * (v5 < 0x20)) ^ a5)))();
}

uint64_t sub_1DA70CCD8@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a2 ^ 0x1FC) + 24) | a1) + 907) * (v2 == 4)) ^ a2 ^ 0x1FC)))();
}

uint64_t sub_1DA70CD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v6 + a5) & a6 ^ 0x115) * (v7 != 4)) | v6)))();
}

uint64_t sub_1DA70CD34(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10 = ((*v6 & 0x7FFFFFFE | v6[623] & 0x80000000) >> ((v5 - 40) ^ 0x16)) ^ (a3 + 221);
  v6[623] = v6[396] ^ a1 ^ *(_DWORD *)(a5 + 4 * (*v6 & 1)) ^ (v8 + ((v5 - 57) | 0x11) + v10 - (v7 & (2 * v10)) - 279);
  return (*(uint64_t (**)(void))(v9 + 8 * ((641 * (LODWORD(STACK[0x584]) > 0x26F)) ^ v5)))();
}

uint64_t sub_1DA70CDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  STACK[0x490] = STACK[0x4A8];
  unsigned int v8 = LODWORD(STACK[0x49C]) - ((2 * LODWORD(STACK[0x49C]) - 1652036550) & 0xCF182DF6) + 911215896;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((22
                                * (((2 * v8) & 0xFFD7F76C ^ ((((v6 + 93) | 7) ^ 0x2EF) - 821026452))
                                 + (v8 ^ 0x1867ED4D)
                                 - 1300931332 != a6)) ^ (((v6 + 93) | 7) + 536))))();
}

uint64_t sub_1DA70CDEC@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v14 = (v12
       + (((v4 + v6 - v5) >> 30) ^ 1)
       + (((((v4 + v6 - v5) >> 30) ^ 1 | 0x7FFFFFFE) ^ ((v4 + v6 - v5) >> 30)) << (((v9 + 97) | v8) + 38))
       + 2) ^ (v4 + v6 - v5);
  *(_DWORD *)(v10 + 4 * a3) = a3 + v12 + v14 * a1 - ((v3 + 2 + v14 * a2) & v11);
  return (*(uint64_t (**)(void))(v13 + 8 * (((a3 > 0x26E) * v7) ^ v9)))();
}

uint64_t sub_1DA70CDFC@<X0>(int a1@<W1>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,arg28_1DA70CDFC a28)
{
  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a28.arr[4];
  return (*(uint64_t (**)(void))(v30 + 8 * (((((v29 + 1) & 0x1FFFFFFF0) == 16) * (v28 ^ 0x3D0)) ^ v28)))();
}

uint64_t sub_1DA70CE48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((14
                                * (*(_DWORD *)(a1 + 1424) == ((v1 + 594192829) & 0xDC95575F)
                                                           + 1216162253
                                                           + ((v1 - 993587409) & 0x3B38EDB7))) ^ v1)))();
}

void sub_1DA70D060()
{
  *(_DWORD *)(v1 + 32) = v0 - 4;
}

uint64_t sub_1DA70D078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                        + 8
                                                                                        * ((((((((a6 & 0xC5EDFA5) - 900) | 0x210)
                                                                                             - 553) & v6) != 0)
                                                                                          * ((((a6 & 0xC5EDFA5) - 933) | 0x419)
                                                                                           - 1047)) | a6 & 0xC5EDFA5)))(a1, a2, a3, a4, a5, (v7 - a5));
}

uint64_t sub_1DA70D0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((((v25 - 603) ^ 0x2BD) + 416) * (v23 == v24)) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

void sub_1DA70D104(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1DA70D16C(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 1341768283;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA70D224@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((*(_DWORD *)(*v3 + 4 * v5) == v2) * a1) ^ v4)))();
}

uint64_t sub_1DA70D250()
{
  int v5 = v0 ^ 0x3F4;
  if (v1) {
    int v6 = v4;
  }
  else {
    int v6 = v2;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 == v4) * (v5 + 1571)) ^ v5)))();
}

uint64_t sub_1DA70D270(uint64_t a1)
{
  return sub_1DA70D290(a1, -229870105);
}

uint64_t sub_1DA70D290@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v3 + v2 + a1 + a2) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1713 * ((((v5 - 733) | 0x214) ^ 0x21ELL) + a2 == v4)) ^ v5)))();
}

uint64_t sub_1DA70D2D4()
{
  BOOL v4 = v1 + v0 - 2092214265 < (((v2 - 1458) | 0x30C) ^ 0x394u);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((8 * (((v2 ^ v4) & 1) == 0)) & 0xEF | (16
                                                                      * ((v2 ^ ~v4) & 1)) | v2)))();
}

void sub_1DA70D33C(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 24) ^ (460628867 * ((a1 & 0x2C14B2F1 | ~(a1 | 0x2C14B2F1)) ^ 0x9F7DCF73));
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v3 - 0x11127EB20C1B7502) - 696851460 >= 0) {
    unsigned int v4 = *(_DWORD *)(v3 - 0x11127EB20C1B7502) - 696851460;
  }
  else {
    unsigned int v4 = 696851460 - *(_DWORD *)(v3 - 0x11127EB20C1B7502);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x11127EB20C1B7502) - 696851460 >= 0) {
    unsigned int v5 = *(_DWORD *)(v2 - 0x11127EB20C1B7502) - 696851460;
  }
  else {
    unsigned int v5 = 696851460 - *(_DWORD *)(v2 - 0x11127EB20C1B7502);
  }
  unsigned int v9 = v1 - 1178560073 * ((2 * (&v8 & 0x6F62F540) - &v8 + 278727356) ^ 0xBD0A3619) - 1653;
  uint64_t v8 = v3;
  uint64_t v6 = (char *)*(&off_1F34B17C0 + (v1 ^ 0x7CB)) - 8;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 1568])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1DA70D4F0@<X0>(int a1@<W8>)
{
  unsigned int v3 = (a1 ^ 0x3E1)
     + *(_DWORD *)(v2 - 0x68A89052B2EA55B0)
     - ((2 * *(_DWORD *)(v2 - 0x68A89052B2EA55B0) + 1853089944) & 0xD476567E)
     - 1586160075;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((52
                                * ((((((a1 ^ 0x5B8) - 1679) | 0x238) - 235414490) & (2 * v3) ^ 0xD076565E)
                                 + (v3 ^ 0x12C0C450)
                                 + 536313854 == 418606957)) ^ a1 ^ 0x5B8)))();
}

uint64_t sub_1DA70D5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (v16 + v18 + 1)) == v14
                                                                                           + ((v15 + 535949395) & 0xE00E0FDD)
                                                                                           - 1617)
                                * (((v15 - 1056) | 8) - 480)) | (v15 + 49))))();
}

uint64_t sub_1DA70D618(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 16840))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 16120))(a1);
  return v5;
}

uint64_t sub_1DA70D680@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 ^ 0x5AD) - 422) ^ 0x599) * (v2 == v1)) ^ a1 ^ 0x5AD)))();
}

uint64_t sub_1DA70D6BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((27 * (v0 < 0x597D0A04)) | (v1 - 1101969482))))();
}

uint64_t sub_1DA70D714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((482 * (a12 + v13 + 548 + (v13 ^ 0x7F1u) - 246783989 < 0x7FFFFFFF)) ^ v13)))();
}

uint64_t sub_1DA70D75C(int a1)
{
  int v8 = 58 * v4;
  int v9 = v2 + v1;
  int v10 = v9 + v3;
  if ((v9 + v3) <= 0x40) {
    int v10 = v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - v9 < (a1 + v10)) * (v8 ^ 0x2C6)) ^ 0x3D9u)))();
}

uint64_t sub_1DA70D7B4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = v3 + 1178560073 * (((~&v5 & 0x3FC20E62) - (~&v5 | 0x3FC20E63)) ^ 0x925532C6) + 325;
  uint64_t v7 = v2;
  uint64_t v5 = v1;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x5E3)))(&v5);
}

uint64_t sub_1DA70D818()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ (949 * (((v3 + v2) & 0x1F) != 0xA)))))();
}

uint64_t sub_1DA70D880(uint64_t a1, uint64_t a2)
{
  unsigned int v9 = v6 + v5 + v4 + 1540;
  uint64_t v10 = a2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v2 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * (v7 ^ 0x4DD)) ^ (v7 + 808))))(v7 ^ 0x1DEu);
}

uint64_t sub_1DA70D8E0()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((((v0 - 612) ^ 0x111) * ((v1 - 1227088735) < 0xFFFFFFFE)) ^ v0)))();
}

uint64_t sub_1DA70D914()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)
                                * ((v3 - 1394588914) & 0x531FBBDC ^ 0x501)) ^ v3)))();
}

uint64_t sub_1DA70D968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((1702 * (a19 == ((2 * (v19 ^ 0xDE)) ^ 0xE1182319))) ^ v19)))();
}

uint64_t sub_1DA70D9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  unint64_t v47 = STACK[0x4D0];
  unint64_t v48 = STACK[0x458];
  unint64_t v49 = STACK[0x398];
  STACK[0x400] = (unint64_t)&STACK[0x680] + STACK[0x398] + (v45 + 239) - 0x74AC42827A6D069CLL;
  STACK[0x408] = a45 + v49 + (v45 + 236);
  int v50 = v45 + 1032;
  int v51 = v45 + 251;
  if (v47) {
    BOOL v52 = v48 == 0;
  }
  else {
    BOOL v52 = 1;
  }
  int v53 = v52;
  return (*(uint64_t (**)(void))(v46 + 8 * ((v53 * (v50 ^ 0x441)) ^ v51)))();
}

uint64_t sub_1DA70DA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((41 * (((a9 + 1009276455) & 0xC3D7A9FF ^ (a3 + 110)) + v25 >= ((a9 - 29) | 0xBu) - 59)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1DA70DAAC@<X0>(int a1@<W8>)
{
  int v4 = v2 ^ 0x319F6;
  unsigned int v5 = ((((v4 - 1649) ^ 0x541) - 711957505) ^ ((v4 - 1649) | 0x12)) + v1;
  BOOL v6 = a1 - 1667250265 < v5;
  if ((a1 - 1667250265) < 0xE61F73C7 != v5 < 0xE61F73C7) {
    BOOL v6 = v5 < 0xE61F73C7;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((197 * v6) ^ v4)))();
}

uint64_t sub_1DA70DB54@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 ^ 0x494) * (a1 == v1)) ^ v3)))();
}

uint64_t sub_1DA70DB80@<X0>(int a1@<W8>)
{
  STACK[0x5C0] += (a1 - 891) ^ 0xFFFFFFFFFFFFFF51;
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 - 773) ^ (a1 - 891) ^ 0x17E)))();
}

uint64_t sub_1DA70DBC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = *v5;
  unint64_t v9 = 235795823 * ((~((v7 - 144) | 0x4FCABF527FE287A4) + ((v7 - 144) & 0x4FCABF527FE287A4)) ^ 0xB885FA5314B03102);
  int v10 = v4 - 582089048 - v9;
  *(_DWORD *)(v7 - 104) = v10 + 80;
  *(_DWORD *)(v7 - 144) = (v4 - 582089048) ^ v9;
  *(_DWORD *)(v7 - 140) = v9;
  *(void *)(v7 - 120) = v8 - v9;
  *(void *)(v7 - 112) = a4 - v9;
  *(_DWORD *)(v7 - 12_Block_object_dispose(&STACK[0x360], 8) = v10 + 205;
  *(_DWORD *)(v7 - 136) = 1002662104 - v9 + v4;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ (a3 - 2083))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * *(int *)(v7 - 132)))(v11, 1101970286);
}

uint64_t sub_1DA70DCC8@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  *(void *)(v4 + a2) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 0) * a1) ^ v2)))();
}

uint64_t sub_1DA70DCF0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 - 220 + a1 - 80919271) = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((596 * ((v2 ^ 0x4FBLL) == (v1 & 0xFFFFFFFFFFFFFFF8))) ^ v2)))();
}

uint64_t sub_1DA70DD4C(double a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 v5 = (__n128)vld1q_dup_f32(v4);
  return sub_1DA720424(3784263818, 115, 863073788, 1449, &STACK[0x1958], 149, 993, v5, a2, a3, a4, *(__n128 *)&STACK[0x370], *(__n128 *)&STACK[0x360], *(__n128 *)&STACK[0x340], *(__n128 *)&STACK[0x330]);
}

void sub_1DA70DD58(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 56) - 0x510F57144876C81CLL) = a1;
  JUMPOUT(0x1DA701068);
}

uint64_t sub_1DA70DD74@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 2091918290)) = ((v4 - 7) ^ 0x5B)
                                                   + *(unsigned char *)(v3 + (a2 - 2091918290));
  return (*(uint64_t (**)(void))(v5 + 8 * ((1087 * (a2 - 1 == a3)) ^ v4)))();
}

uint64_t sub_1DA70DDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29)
{
  int v35 = ((((v34 - 144) | 0xD40B744F) - ((v34 - 144) & 0xD40B744F)) ^ 0x6776C41B) * v32;
  *(_DWORD *)(v34 - 136) = 730360161 - v35;
  *(_DWORD *)(v34 - 132) = v35 + v33 + 286;
  *(void *)(v34 - 144) = &a29 + v31;
  (*(void (**)(uint64_t))(v29 + 8 * (v33 ^ 0xC4A)))(v34 - 144);
  return (*(uint64_t (**)(char *, char *, char *, char *))(v29
                                                                   + 8
                                                                   * ((957
                                                                     * ((((641 * (v33 ^ 0x459)) ^ (v30 == 0)) & 1) == 0)) ^ (v33 + 341))))(&a18, &a25, &a20, &a27);
}

uint64_t sub_1DA70DE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v12 = *(unsigned __int8 *)(v8 + ((a8 - 314) ^ v11) + v10);
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (a8 ^ (108 * (a7 != -1351746093)))))(a1, ((a8 - 1369) ^ 0xB17D08A7 ^ v12) + 2143223788 + ((2 * v12) & 0xFFFFFFEF));
}

void sub_1DA70DEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v21 - 120) = v17;
  *(void *)(v21 - 112) = a16;
  *(_DWORD *)(v21 - 104) = v16
                         + 628203409
                         * ((1389295496 - ((v21 - 144) | 0x52CEF788) + ((v21 - 144) | 0xAD310877)) ^ 0x2FB90444)
                         + 1530;
  *(void *)(v21 - 136) = v20;
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x360], 8) = v18;
  *(void *)(v21 - 144) = v17;
  (*(void (**)(uint64_t))(v19 + 8 * (v16 + 1628)))(v21 - 144);
  JUMPOUT(0x1DA726D54);
}

uint64_t sub_1DA70DF30()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((106
                                     * (v0 >= ((STACK[0x420] + 749) ^ 0xD008C6D4 ^ (STACK[0x420]
                                                                                                + 437)))) ^ (STACK[0x420] + 399))))();
}

uint64_t sub_1DA70DF74()
{
  int v1 = STACK[0x420] - 258;
  unint64_t v2 = STACK[0x588];
  STACK[0x4A0] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 208));
  STACK[0x4F0] = v2;
  STACK[0x5E8] = STACK[0x3F0];
  uint64_t v3 = *(_DWORD *)(v2 - 0x4696E7753303C8EELL) & (((v1 - 20) | 0x432u) - 1012);
  *(unsigned char *)(v2 - 0x4696E7753303C932 + (v3 ^ 0x16)) = -33;
  return (*(uint64_t (**)(void))(v0 + 8 * ((532 * ((v3 ^ 0x16) > 0x37)) ^ v1)))();
}

uint64_t sub_1DA70DF84@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 | 0x31E));
  return v3(v1);
}

uint64_t sub_1DA70DFB8@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  uint64_t v5 = v2 + v1;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a1 - 1510) | 0x114) + ((a1 - 1723023056) & 0x66B33BA7) - 1003)
                                * ((unint64_t)(v6 - v4 + 1200253940) > 7)) ^ a1)))();
}

uint64_t sub_1DA70E034(uint64_t a1, int a2, uint64_t a3, unsigned int a4, int a5, int a6, int a7, char a8)
{
  int v13 = (*(unsigned __int8 *)(v8 + (v10 + 1)) | (a2 << 8)) + a6;
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * ((126 * (a5 != 1)) ^ a4)))(a1, (v13 ^ a7) + v12 + ((v13 << a8) & v11));
}

uint64_t sub_1DA70E040(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * ((124 * ((a5 ^ 0x50Cu) + a4 + v8 > 7)) ^ v6)))(a1, *(unsigned __int8 *)(v5 + (a5 ^ 0x50Cu) + a4 + v8));
}

uint64_t sub_1DA70E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * ((1021
                                                                                 * (((((v6 + 2124553741) & 0x815DE7D3)
                                                                                    + ((v6 + 804) | 0x20)
                                                                                    - 3329) & v5) != 0)) ^ v6)))(a1, a2, a3, a4, (v4 - a4));
}

void sub_1DA70E0A0(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

void sub_1DA70E1C8()
{
}

void sub_1DA70E1E4()
{
  LODWORD(STACK[0x5B4]) = v0;
  LODWORD(STACK[0x594]) = v3;
  LODWORD(STACK[0x604]) = v1;
  LODWORD(STACK[0x55C]) = v4;
  LODWORD(STACK[0x534]) = v7 + 80;
  unint64_t v9 = STACK[0x648];
  int v10 = *(_DWORD *)(STACK[0x648] - 0x4696E7753303C8DALL);
  LODWORD(STACK[0x4C0]) = v2;
  *(_DWORD *)(v9 - 0x4696E7753303C8DALL) = (v10 ^ v8)
                                         + (v2 ^ v8)
                                         + v8
                                         - ((v6 + (v5 ^ 0x188) - 279) & (2 * ((v10 ^ v8) + (v2 ^ v8))));
  JUMPOUT(0x1DA716608);
}

uint64_t sub_1DA70E258@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v5 = *(_DWORD *)(v3 + v2 * (uint64_t)a1 + 36);
  BOOL v7 = (v5 - 1525202172 > ((a2 + 96) ^ 0x724CAB5D) || v5 - 1525202172 < SLODWORD(STACK[0x400])) && v5 != 1295345094;
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * v7) | (8 * v7)) ^ a2)))();
}

void sub_1DA70E2C4()
{
  _DWORD *v0 = 696851460;
}

uint64_t sub_1DA70E2D0@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W5>, int a4@<W8>)
{
  *(int8x16_t *)&STACK[0x2A0] = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + (v4 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + (v4 + a1)), *(int8x16_t *)(a2 + (v4 + a1))), v6)), v7);
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 == -32) * a3) ^ (a4 + 998))))();
}

uint64_t sub_1DA70E328()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1640
                                * ((((v2 + 716) ^ (v1 - 920)) & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1DA70E368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a3 + 1155273870) & 0xBB23E7EE) - 78)
                                     * ((unint64_t)(a2 - v5 - a4) < 0x20)) ^ a3)))();
}

uint64_t sub_1DA70E3AC@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,arg28_1DA70E3AC a28)
{
  *(_OWORD *)(a1 + (a2 - 42246443)) = *(_OWORD *)&a28.arr[4];
  return (*(uint64_t (**)(void))(v31 + 8 * ((((((v29 ^ 0x544) + v30) & 0x1FFFFFFF0) == 16) * (v28 - 757)) | v28)))();
}

uint64_t sub_1DA70E400()
{
  *(void *)(v2 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v0 ^ (v3 == v4)) & 1 | (2 * ((v0 ^ (v3 == v4)) & 1)) | v1)))();
}

uint64_t sub_1DA70E42C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((119 * (v0 + 1 != v3 + 16)) ^ v1)))();
}

uint64_t sub_1DA70E4FC(uint64_t a1, uint64_t a2, int a3)
{
  int v10 = a3 + (v7 ^ (v4 - 106));
  int v11 = v10 + *(unsigned __int8 *)(a2 + 9) - 159;
  BOOL v13 = (v9 & (2 * v11)) + (v11 ^ v8) == v8 && (v3 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v13 * (v10 + 598)) ^ v7)))();
}

uint64_t sub_1DA70E554@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v7 = a2 + v5 + v3 - 346;
  int v8 = *(_DWORD *)((char *)&STACK[0x2A0] + (v7 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v7) = v8 ^ 0x61;
  *(unsigned char *)(a1 + (a2 + v5 + 17)) = (BYTE1(v8) ^ 0xA3) + (~(2 * (BYTE1(v8) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a1 + (a2 + v5 + 18)) = (BYTE2(v8) ^ 0x79) - ((2 * (BYTE2(v8) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (a2 + v5 + 19)) = (HIBYTE(v8) ^ 0xB6) - ((2 * (HIBYTE(v8) ^ 0xB6)) & 0xBF) + 95;
  unsigned int v9 = LODWORD(STACK[0x2FC]) + 1103969013;
  BOOL v10 = v9 < v2;
  BOOL v11 = v5 + 1683357678 < v9;
  if (v5 + 1683357678 < v2 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v11 * v4) ^ v3)))();
}

uint64_t sub_1DA70E634@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  *(void *)(v7 - 7 + (a3 - 320)) = *(void *)(a6 + (a3 - 320) - 7);
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v6 + a1) & a2 ^ a4) == 328) * a5) ^ (v6 - 104))))();
}

uint64_t sub_1DA70E6D0()
{
  return 4294925278;
}

uint64_t sub_1DA70E6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  *a29 = 159353952;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30
                                                              + 8
                                                              * ((59 * (a7 - 937411183 >= -937411182)) ^ (v29 - 1293))))(a1, 2471057500, 1210072464);
}

uint64_t sub_1DA70E79C()
{
  int v5 = (v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
     + (v3 ^ 0x16 ^ (v0 - 910) ^ (*(unsigned __int8 *)(v2 + 4) - 247)) == v0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 << 7) | (v5 << 10)) ^ v3)))();
}

uint64_t sub_1DA70E7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int32x4_t a39, int32x4_t a40, int32x4_t a41, int32x4_t a42, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v43 = *(unsigned __int8 *)(v42 - 156) ^ 0x70;
  if (v43 == 1)
  {
    unsigned int v50 = *(_DWORD *)(v42 - 188);
    unsigned int v49 = *(_DWORD *)(v42 - 184);
    *(unsigned char *)(v42 - 196) = ((8 * v49) ^ 0xB0) - ((2 * ((8 * v49) ^ 0xB0)) & 0xBF) + 95;
    char v47 = -66;
    *(unsigned char *)(v42 - 195) = ((v49 >> 5) ^ 0x28) - ((((v49 >> 5) ^ 0x28) << (a6 + 95)) & 0xBE) + 95;
    *(unsigned char *)(v42 - 194) = ((v49 >> 13) ^ 0xF3) - ((2 * ((v49 >> 13) ^ 0xF3)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 193) = ((v49 >> 21) ^ 0xE) - ((2 * ((v49 >> 21) ^ 0xE)) & 0xBF) + 95;
    HIDWORD(v51) = v50 ^ 0x1D;
    LODWORD(v51) = v49 ^ 0x40000000;
    *(unsigned char *)(v42 - 192) = (v51 >> 29) - ((2 * (v51 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 191) = ((v50 >> 5) ^ 0x53) - ((2 * ((v50 >> 5) ^ 0x53)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 190) = ((v50 >> 13) ^ 0x5F) - ((2 * ((v50 >> 13) ^ 0x5F)) & 0xBF) + 95;
    char v46 = a6 + 9;
    unsigned int v48 = (v50 >> 21) ^ 0xFFFFFFAD;
    goto LABEL_5;
  }
  if (v43 == 2)
  {
    unsigned int v44 = *(_DWORD *)(v42 - 188);
    unsigned int v48 = *(_DWORD *)(v42 - 184);
    *(unsigned char *)(v42 - 196) = ((v44 >> 21) ^ 0xAD) - ((2 * ((v44 >> 21) ^ 0xAD)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 195) = ((v44 >> 13) ^ 0x5F) + (~(2 * ((v44 >> 13) ^ 0x5F)) | 0x41) + 96;
    *(unsigned char *)(v42 - 194) = ((v44 >> 5) ^ 0x53) - ((2 * ((v44 >> 5) ^ 0x53)) & 0xBF) + 95;
    HIDWORD(v45) = v44 ^ 0x1D;
    LODWORD(v45) = v48 ^ 0x40000000;
    *(unsigned char *)(v42 - 193) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 192) = ((v48 >> 21) ^ 0xE) - ((2 * ((v48 >> 21) ^ 0xE)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 191) = ((v48 >> 13) ^ 0xF3) - ((2 * ((v48 >> 13) ^ 0xF3)) & 0xBF) + 95;
    *(unsigned char *)(v42 - 190) = ((v48 >> 5) ^ 0x28) - ((2 * ((v48 >> 5) ^ 0x28)) & 0xBF) + 95;
    char v46 = -85;
    char v47 = -80;
    LOBYTE(v4_Block_object_dispose(&STACK[0x360], 8) = (8 * v48) ^ 0xB0;
LABEL_5:
    *(unsigned char *)(v42 - 189) = v48 + v46 - a6 + 111 - (v47 & (2 * v48)) - 25;
  }
  return sub_1DA701440(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1DA70E9FC(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v16 = (v11 + v13);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(v8 + (v16 & 0xF)) ^ (*(unsigned char *)(v14 + v16) - 50) ^ *(unsigned char *)(v10 + (v16 & 0xF)) ^ *(unsigned char *)((v16 & 0xF) + v9 + 2) ^ ((v16 & 0xF) * a4);
  LODWORD(v16) = v11 + ((v12 + a7) & a8) - 1272 == a2;
  return (*(uint64_t (**)(void))(v15 + 8 * (int)(((2 * v16) | (8 * v16)) ^ v12)))();
}

uint64_t sub_1DA70EA68()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1033
                                * (((v1 + ((v3 - 417) | 0x8C) - 204) & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA70EAB4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((174
                                * (((LODWORD(STACK[0x5BC]) - 826018275 + (v0 ^ 0x205u) + 842 - 941) ^ 0xEFF5DDFA7BED3FFFLL)
                                 + ((2 * (LODWORD(STACK[0x5BC]) - 826018275 + (v0 ^ 0x205) + 842 - 941)) & 0xF7DA7FFE)
                                 + 0x100A22063E20A9B7 == 3121473974)) ^ v0)))();
}

uint64_t sub_1DA70EB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  unsigned int v92 = (const char *)(v39 - 220);
  v93.i64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v93.i64[1] = 0x5F5F5F5F5F5F5F5FLL;
  int8x16_t v94 = (int8x16_t)vdupq_n_s32(0x7AB9CBDFu);
  a21 = v37 - 16;
  int32x4_t v95 = vdupq_n_s32(0x7AB9CBDDu);
  int v96 = (a6 - 1267126483) & 0xB48CF5FD;
  HIDWORD(a15) = v96 ^ 0x5DA;
  uint64_t v40 = *(uint64_t (**)(void, uint64_t, uint64_t, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((int)a7 + v32 - 448));
  unsigned int v41 = *(_DWORD *)(v39 - 148);
  int v42 = *(_DWORD *)(v39 - 144);
  uint64_t v43 = *(unsigned int *)(v39 - 140);
  unsigned int v44 = *(_DWORD *)(v39 - 136);
  LODWORD(v9_Block_object_dispose(&STACK[0x360], 8) = v42;
  HIDWORD(v9_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v39 - 140);
  int v45 = *(unsigned char *)(v39 - 124) ^ 0x70;
  LODWORD(v97) = *(unsigned __int8 *)(v39 - 124) ^ 0x70;
  if (v45 == 2)
  {
    int8x16x4_t v101 = vld4q_s8(v92);
    int v72 = a6 ^ (a6 + 1839);
    uint8x16_t v73 = (uint8x16_t)veorq_s8(v101.val[0], v93);
    uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v73.i8);
    uint16x8_t v75 = vmovl_high_u8(v73);
    uint8x16_t v76 = (uint8x16_t)veorq_s8(v101.val[1], v93);
    _Q21 = vmovl_u8(*(uint8x8_t *)v76.i8);
    _Q20 = vmovl_high_u8(v76);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v81 = (uint8x16_t)veorq_s8(v101.val[2], v93);
    uint16x8_t v82 = vmovl_high_u8(v81);
    uint16x8_t v83 = vmovl_u8(*(uint8x8_t *)v81.i8);
    v101.val[0] = veorq_s8(v101.val[3], v93);
    v101.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[1]);
    v101.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8);
    v101.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[0]);
    v101.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8);
    int32x4_t v84 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v83.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v74.i8), 0x18uLL)), v101.val[0]);
    int32x4_t v85 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v83, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v74), 0x18uLL)), v101.val[3]);
    int32x4_t v86 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v82.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v75.i8), 0x18uLL)), v101.val[1]);
    int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v82, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v75), 0x18uLL)), v101.val[2]);
    v101.val[0] = veorq_s8(vandq_s8((int8x16_t)v84, v94), (int8x16_t)(*(_OWORD *)v101.val & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v101.val[3] = veorq_s8(vandq_s8((int8x16_t)v85, v94), (int8x16_t)(*(_OWORD *)&v101.val[3] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v101.val[1] = veorq_s8(vandq_s8((int8x16_t)v86, v94), (int8x16_t)(*(_OWORD *)&v101.val[1] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v101.val[2] = veorq_s8(vandq_s8((int8x16_t)v87, v94), (int8x16_t)(*(_OWORD *)&v101.val[2] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a31 = vaddq_s32(vsubq_s32(v86, vaddq_s32((int32x4_t)v101.val[1], (int32x4_t)v101.val[1])), v95);
    a32 = vaddq_s32(vsubq_s32(v87, vaddq_s32((int32x4_t)v101.val[2], (int32x4_t)v101.val[2])), v95);
    a29 = vaddq_s32(vsubq_s32(v84, vaddq_s32((int32x4_t)v101.val[0], (int32x4_t)v101.val[0])), v95);
    a30 = vaddq_s32(vsubq_s32(v85, vaddq_s32((int32x4_t)v101.val[3], (int32x4_t)v101.val[3])), v95);
    int v88 = (_DWORD *)&a29 + v36 + 1207414529;
    int v89 = *(v88 - 8) ^ *(v88 - 3);
    int v90 = *(v88 - 16) ^ *(v88 - 14) ^ (v89 + v35 - ((v72 - 896 + a2) & (2 * v89)));
    HIDWORD(v91) = v90 ^ v35;
    LODWORD(v91) = v90;
    *int v88 = v35 + (v91 >> 31) - ((a2 + 945) & (2 * (v91 >> 31)));
    return (*(uint64_t (**)(uint64_t))(v34
                                              + 8 * (((2 * (v37 != 1207414466)) | ((v37 != 1207414466) << 6)) ^ v72)))(a21);
  }
  else if (v45 == 1)
  {
    int8x16x4_t v100 = vld4q_s8(v92);
    uint8x16_t v46 = (uint8x16_t)veorq_s8(v100.val[0], v93);
    uint16x8_t v47 = vmovl_u8(*(uint8x8_t *)v46.i8);
    int8x16_t v48 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v47.i8);
    int8x16_t v49 = (int8x16_t)vmovl_high_u16(v47);
    uint16x8_t v50 = vmovl_high_u8(v46);
    int8x16_t v51 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.i8);
    int8x16_t v52 = (int8x16_t)vmovl_high_u16(v50);
    uint8x16_t v53 = (uint8x16_t)veorq_s8(v100.val[1], v93);
    uint16x8_t v54 = vmovl_high_u8(v53);
    uint16x8_t v55 = vmovl_u8(*(uint8x8_t *)v53.i8);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v100.val[2], v93);
    _Q25 = (int8x16_t)vmovl_high_u8(v56);
    _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v56.i8);
    int8x16_t v59 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
    __asm { SHLL2           V24.4S, V24.8H, #0x10 }
    int8x16_t v64 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v100.val[0] = veorq_s8(v100.val[3], v93);
    v100.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v100.val[0]);
    v100.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[1]);
    v100.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v100.val[0].i8);
    v100.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[0]);
    v100.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[0].i8), 0x18uLL), v59), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v55.i8, 8uLL), v48));
    v100.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v55, 8uLL), v49));
    v100.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[1].i8), 0x18uLL), v64), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v54.i8, 8uLL), v51));
    v100.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v54, 8uLL), v52));
    int32x4_t v65 = (int32x4_t)veorq_s8(vandq_s8(v100.val[0], v94), (int8x16_t)(*(_OWORD *)&v48 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v66 = (int32x4_t)veorq_s8(vandq_s8(v100.val[3], v94), (int8x16_t)(*(_OWORD *)&v49 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v67 = (int32x4_t)veorq_s8(vandq_s8(v100.val[1], v94), (int8x16_t)(*(_OWORD *)&v51 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v68 = (int32x4_t)veorq_s8(vandq_s8(v100.val[2], v94), (int8x16_t)(*(_OWORD *)&v52 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[1], vaddq_s32(v67, v67)), v95);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[2], vaddq_s32(v68, v68)), v95);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[0], vaddq_s32(v65, v65)), v95);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[3], vaddq_s32(v66, v66)), v95);
    int v69 = (char *)*(&off_1F34B17C0 + SHIDWORD(a15)) - 8;
    uint64_t v70 = *(uint64_t (**)(uint64_t, void, void, void, void, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(void, uint64_t, uint64_t, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((755 * (a21 + 1 == v37)) ^ v96));
    HIDWORD(v97) = HIDWORD(a12) + 1479265065;
    LODWORD(v99) = v96 ^ 0x524;
    HIDWORD(v99) = v96 ^ 0x5E6;
    return v70(a21 + 1, v96 ^ 0x5E6u, (v96 + 161), v70, a29.i32[(v69[v36 - 1553 + a21 + (v96 + 161)] - 30)] ^ v35, v69, (char *)*(&off_1F34B17C0 + (v96 ^ 0x5E6)) - 8, (char *)*(&off_1F34B17C0 + (v96 ^ 0x524)) - 12, a9, a10, a11, a12, a13, a14, a15, v97, __PAIR64__(v44, v41), v40, v98,
             v99,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else
  {
    *(_DWORD *)(v39 - 14_Block_object_dispose(&STACK[0x360], 8) = 2 * (*(_DWORD *)(v39 - 148) ^ v33) + v33 - (v38 & (4 * (*(_DWORD *)(v39 - 148) ^ v33)));
    *(_DWORD *)(v39 - 144) = 2 * (v42 ^ v33) + v33 - (v38 & (4 * (v42 ^ v33)));
    *(_DWORD *)(v39 - 140) = (v43 ^ v33)
                           + (HIDWORD(v98) ^ v33)
                           + v33
                           - (v38 & (2 * ((v43 ^ v33) + (HIDWORD(v98) ^ v33))));
    *(_DWORD *)(v39 - 136) = 2 * (v44 ^ v33) + v33 - (v38 & (4 * (v44 ^ v33)));
    return v40(v40, a2, v43, v92, 1705, a6, a7, 39, a9, a10, a11, a12, a13);
  }
}

void sub_1DA70EB50(unint64_t a1)
{
  STACK[0x5F8] = a1;
  LODWORD(STACK[0x54C]) = v1;
  JUMPOUT(0x1DA70EB70);
}

uint64_t sub_1DA70EBDC(int8x8_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = v6 - 8;
  *(int8x8_t *)(a3 + (v5 + v11)) = vadd_s8(*(int8x8_t *)(v7 + (v5 + v11)), a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((((v9 + 20) ^ (a5 + v11 == 8)) & 1) * v8) ^ v9)))();
}

void sub_1DA70EBE4()
{
}

void sub_1DA70ED88(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5F8F23596C339F67) = v1 - 1;
  JUMPOUT(0x1DA70EDA0);
}

uint64_t sub_1DA70EDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                                  + 8 * (((v8 + v7 - 2146171830 >= ((v9 - 739) | 2u) - 271) * ((v9 - 739) ^ 0x6F6)) ^ v9)))(v6, a2, a3, a4, a5, a6, 3449726656);
}

void sub_1DA70EE04()
{
}

uint64_t sub_1DA70EE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * (int)((((LODWORD(STACK[0x4FC]) ^ v43) == a43 - 1791948237)
                                     * (((v44 + 413983027) & 0xE7531B3F) - 163)) ^ v44)))();
}

uint64_t sub_1DA70EE5C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,unint64_t a26)
{
  int v31 = v26 & 0x6DF046FD;
  LODWORD(STACK[0x278]) = a3;
  LODWORD(STACK[0x27C]) = a24;
  STACK[0x280] = a26;
  LODWORD(STACK[0x288]) = a25 - v28 + 85258470;
  STACK[0x290] = v30 + (((v26 & 0x6DF046FD ^ 0x25A) + 433290693) ^ 0xA2D40B45) + v28;
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * a2 + 8))(a11, a21);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((1387
                                              * (v32 + ((3 * (v31 ^ 0x25A)) ^ (v27 - 537)) - ((2 * v32) & 0xF57397BA) == v27)) ^ v31)))(a23);
}

uint64_t sub_1DA70EF3C@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, int a8@<W8>)
{
  BOOL v13 = a3 < v11;
  *(unsigned char *)(a4 + (a8 + a1)) = *(unsigned char *)(a7 + (v8 + v10))
                                           - (((a6 ^ (2 * v9)) + 108) & (2 * *(unsigned char *)(a7 + (v8 + v10))))
                                           + 95;
  unsigned int v14 = v8 + 1 + a2;
  int v15 = v13 ^ (v14 < v11);
  BOOL v16 = v14 < a3;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a5) ^ v9)))();
}

uint64_t sub_1DA70EFA8(int *a1)
{
  unsigned int v2 = a1[1] - 3804331 * ((((2 * a1) | 0xF295491C) - a1 + 112548722) ^ 0xD70B2742);
  signed int v3 = v2 - 1695027403;
  uint64_t result = (*((uint64_t (**)(char *, void (*)()))*(&off_1F34B17C0 + (int)(v2 - 1695027316))
            + (int)(v2 ^ 0x65081734)
            - 1))((char *)*(&off_1F34B17C0 + (int)(v2 ^ 0x650810BE)) - 8, sub_1DA70FD70);
  int v5 = *(_DWORD *)*(&off_1F34B17C0 + v3);
  if (result) {
    int v5 = -2058972829;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1DA70F07C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((209 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

void sub_1DA70F20C(uint64_t a1)
{
  int v1 = 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  unsigned int v2 = *(_DWORD *)(*(void *)a1 - 0x68A89052B2EA55B4) - 1573833432;
  unsigned int v3 = (*(_DWORD *)(a1 + 16) ^ v1) - 926292702;
  int v4 = (v3 < 0xF22AF783) ^ (v2 < 0xF22AF783);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v6 = v3 < 0xF22AF783;
  }
  else {
    BOOL v6 = v5;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1DA70F328@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 + 579;
  uint64_t v5 = a1 + v2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v6 - (unint64_t)v2 + 356177656 >= (unint64_t)((v4 - 194) | 0x400u)
                                                                               - 1403)
                                     * (((v4 + 1264010614) & 0xB4A8BBDE) - 899)) ^ v4)))();
}

uint64_t sub_1DA70F414()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((**(_DWORD **)(v2 + 8 * (v0 ^ 0x2DF)) == ((v0 + 161748182) ^ 0x9A413BB) - 1145)
                                     * ((v0 + 161748182) & 0xF65BEF7F ^ 0x57)) ^ v0)))();
}

uint64_t sub_1DA70F478()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 412120598) ^ 0xFEBCF9F0) + ((v2 + 412120598) | 0x1430648)) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1DA70F4C0@<X0>(uint64_t a1@<X8>)
{
  int v7 = 1224239923 * ((((v6 - 192) | 0xD40A1AE3) - ((v6 - 192) & 0xD40A1AE3)) ^ 0x26B9E734);
  int v8 = (((3 * (v4 ^ 0x1F)) ^ 0xFA5AF43) + LODWORD(STACK[0x558])) ^ v7;
  *(_DWORD *)(v6 - 144) = v7 + v4 - 2024873149;
  *(void *)(v6 - 160) = a1;
  *(void *)(v6 - 152) = v3 + 0x2F19939F047D9D74;
  *(_DWORD *)(v6 - 192) = v8;
  *(_DWORD *)(v6 - 184) = v7 + v2 - ((2 * v2 + 1840789830) & 0x98A999CC) - 2093946487;
  *(void *)(v6 - 176) = v3 + 0x1B21A8FA2BFEFC05;
  *(void *)(v6 - 16_Block_object_dispose(&STACK[0x360], 8) = v1;
  STACK[0x388] = v1;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 ^ 0x841)))(v6 - 192);
  int v10 = *(_DWORD *)(v6 - 188);
  LODWORD(STACK[0x530]) = v10;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1535 * (v10 == 2058996701)) ^ v4)))(v9);
}

uint64_t sub_1DA70F5DC@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((a1 & 8) != (v1 ^ 0x63F)) * ((v1 + 2056997210) & 0x8564B47F ^ 0x443)) ^ v1)))();
}

uint64_t sub_1DA70F634()
{
  int v4 = ((v0 + 112454450) & 0xF94C11F3 ^ 0xAC2AEE9B) + v2;
  int v5 = (v3 > (v0 ^ 0x7B7E9FC9u)) ^ (v4 < -2071894917);
  BOOL v6 = v4 < (int)(v3 + 75588731);
  if (v5) {
    BOOL v6 = v3 > (v0 ^ 0x7B7E9FC9u);
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((340 * v6) ^ v0)))();
}

uint64_t sub_1DA70F6C0@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 887));
  return v3(v1);
}

uint64_t sub_1DA70F6F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((944 * (a3 + 1 == v6 + 24)) ^ a4)))(v4);
}

void sub_1DA70F7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v7 = *(unsigned __int8 *)(v6 - 124) ^ 0x70;
  if (v7 == 1)
  {
    char v8 = 8 * (a6 ^ (a6 + 100));
    unsigned int v14 = *(_DWORD *)(v6 - 156);
    unsigned int v13 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = ((v8 + 80) ^ (8 * v13)) - ((2 * ((v8 + 80) ^ (8 * v13))) & 0xBF) + 95;
    *(unsigned char *)(v6 - 163) = ((v13 >> 5) ^ 0x28) - ((2 * ((v13 >> 5) ^ 0x28)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 162) = ((v13 >> 13) ^ 0xF3) - ((2 * ((v13 >> 13) ^ 0xF3)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 161) = ((v13 >> 21) ^ 0xE) - ((2 * ((v13 >> 21) ^ 0xE)) & 0xBF) + 95;
    HIDWORD(v15) = v14 ^ 0x1D;
    LODWORD(v15) = v13 ^ 0x40000000;
    *(unsigned char *)(v6 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 159) = ((v14 >> 5) ^ 0x53) - ((2 * ((v14 >> 5) ^ 0x53)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x360], 8) = ((v14 >> 13) ^ 0x5F) - ((2 * ((v14 >> 13) ^ 0x5F)) & 0xBF) + 95;
    char v11 = -66;
    unsigned int v12 = (v14 >> 21) ^ 0xFFFFFFAD;
  }
  else
  {
    if (v7 != 2) {
      goto LABEL_6;
    }
    char v8 = a6 ^ (a6 - 32);
    unsigned int v12 = *(_DWORD *)(v6 - 156);
    unsigned int v9 = *(_DWORD *)(v6 - 152);
    *(unsigned char *)(v6 - 164) = (v8 ^ (v12 >> 21) ^ 0xCD) - ((2 * (v8 ^ (v12 >> 21) ^ 0xCD)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 163) = ((v12 >> 13) ^ 0x5F) - ((2 * ((v12 >> 13) ^ 0x5F)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 162) = ((v12 >> 5) ^ 0x53) - ((2 * ((v12 >> 5) ^ 0x53)) & 0xBF) + 95;
    HIDWORD(v10) = v12 ^ 0x1D;
    LODWORD(v10) = v9 ^ 0x40000000;
    *(unsigned char *)(v6 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xBF) + 95;
    *(unsigned char *)(v6 - 160) = ((v9 >> 21) ^ 0xE) + (~(2 * ((v9 >> 21) ^ 0xE)) | 0x41) + 96;
    *(unsigned char *)(v6 - 159) = ((v9 >> 13) ^ 0xF3) + (~(2 * ((v9 >> 13) ^ 0xF3)) | 0x41) + 96;
    *(unsigned char *)(v6 - 15_Block_object_dispose(&STACK[0x360], 8) = ((v9 >> 5) ^ 0x28) - ((2 * ((v9 >> 5) ^ 0x28)) & 0xBF) + 95;
    char v11 = -80;
    LOBYTE(v12) = (8 * v9) ^ 0xB0;
  }
  *(unsigned char *)(v6 - 157) = v12 - (((_BYTE)v12 << ((v8 ^ (a6 - 32)) - 68)) & v11) + 95;
LABEL_6:
  JUMPOUT(0x1DA736678);
}

uint64_t sub_1DA70F9DC@<X0>(uint64_t a1@<X8>)
{
  int v4 = (v2 ^ 0x142) - 1072502696;
  unint64_t v5 = 460628867
     * ((((2 * (v3 - 168)) | 0x2DBC8CBB2EB53EB4) - (v3 - 168) + 0x6921B9A268A560A6) ^ 0xD4410B33DBCC1D27);
  *(_DWORD *)(v3 - 140) = v4 + v5;
  *(_DWORD *)(v3 - 136) = v5 + (v2 ^ 0x142) + 2021363714;
  STACK[0x340] = a1 ^ v5;
  STACK[0x348] = v5 + 1251276903;
  *(_DWORD *)(v3 - 12_Block_object_dispose(&STACK[0x360], 8) = (v4 ^ 0x41) - v5;
  *(_DWORD *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = v5;
  *(_DWORD *)(v3 - 144) = v5 ^ v4 ^ 0x38;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x935)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v3 - 132)))(v6);
}

uint64_t sub_1DA70FAC4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (16 * ((v0 ^ (*(void *)(v1 + 32) == 0x241281ADB08D9258)) & 1)))))();
}

uint64_t sub_1DA70FAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  unsigned int v31 = v27 - 1032865233 + v28 + 1074 + v29 + 325732844;
  int v32 = ((a27 - 895205832) < 0x41C7941D) ^ (v31 < ((3 * ((v28 + 1074) ^ a8)) ^ 0x41C7943Cu));
  BOOL v33 = v31 < a27 - 895205832;
  if (v32) {
    BOOL v33 = (a27 - 895205832) < 0x41C7941D;
  }
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((23 * v33) | (v28 + 1781))))(3517101519);
}

uint64_t sub_1DA70FB28(int8x16_t a1, double a2, double a3, int8x16_t a4, uint64_t a5, int a6, int8x16_t *a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *a7 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v14 + (v11 + a6)), vandq_s8(vaddq_s8(*(int8x16_t *)(v14 + (v11 + a6)), *(int8x16_t *)(v14 + (v11 + a6))), a4)), a1);
  return (*(uint64_t (**)(void))(v13 + 8 * (a11 ^ (a10 + v12 + 1112))))();
}

uint64_t sub_1DA70FB7C(uint64_t a1)
{
  int v1 = 1759421093 * ((-2 - ((a1 | 0xA0001F4D) + (~a1 | 0x5FFFE0B2))) ^ 0xEC8250E6);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  int v3 = v1 + *(_DWORD *)(a1 + 8);
  unsigned int v5 = v3 - 730294624;
  BOOL v4 = v3 - 730294624 < 0;
  LODWORD(v6) = 730294624 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + (v2 ^ 0x5F1))
          + (((v6 != ((2 * v6) & 0x655C03DA)) * ((v2 - 437) ^ 0x339)) ^ v2)
          - 1))();
}

uint64_t sub_1DA70FC3C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15 = (v12 - 1596998489) & 0x5F303FFF;
  int v16 = (v15 - 46613257) & 0x2C743BF;
  *(_DWORD *)(a10 + 4 * (int)(a2 + v11 + (v15 ^ 0xF2695FD1))) = (HIDWORD(a4) ^ (v16 + 1179723812))
                                                                + v10
                                                                - ((2 * (HIDWORD(a4) ^ (v16 + 1179723812))) & 0x12FF18C0);
  int v17 = (((v16 - 1935661886 + a1) | 2) ^ 0x8169B6BB) + v14;
  BOOL v19 = v17 > 251680533 || v17 < a3;
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((v19 * ((v16 - 1935661886) & (a1 + 1364) ^ 0x4B4)) ^ v16)))(3334767297);
}

uint64_t sub_1DA70FD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v7 + ((v9 - 1154) | 0x101) - 197) ^ (v9 - 279451613) & 0xF3FFD3FE) * (v8 == a7)) ^ v9)))();
}

void sub_1DA70FD70()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1F34B17C0
                  + ((-93 * (dword_1EA8E34F8 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA756D70[byte_1DA752540[(-93 * (dword_1EA8E34F8 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0xB8])
                  - 70);
  int v1 = (uint64_t *)*(&off_1F34B17C0
                  + ((-93 * (*v0 ^ qword_1EA8E3538 ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * (*v0 ^ qword_1EA8E3538 ^ 0xF0))] ^ 0x2A])
                  - 17);
  unint64_t v2 = (unint64_t)&v9[*v0 + *v1];
  uint64_t v3 = 192840611 * v2 - 0x2F1F548F835ED4F0;
  uint64_t v4 = 192840611 * (v2 ^ 0x2F1F548F835ED4F0);
  uint64_t *v0 = v3;
  uint64_t *v1 = v4;
  LOBYTE(v4) = -93 * (*(_DWORD *)v0 ^ 0xF0 ^ v4);
  unsigned int v5 = (char *)off_1F34B1A58 - 4;
  uint64_t v6 = (char *)off_1F34B1920 - 8;
  *(_DWORD *)*(&off_1F34B17C0
             + (*((unsigned char *)off_1F34B1920
                                               + (*((unsigned __int8 *)off_1F34B1A58 + v4 - 4) ^ 0x3Eu)
                                               - 8) ^ v4)
             + 34) = 2058996701;
  LOBYTE(v4) = -93 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0xF0);
  int v7 = (char *)*(&off_1F34B17C0
               + ((-93 * (dword_1EA8E34F8 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA757070[byte_1DA752840[(-93 * (dword_1EA8E34F8 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0x97])
               + 88)
     - 8;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))&v7[8
                                                      * (*((unsigned char *)off_1F34B1C38
                                                                          + (*((unsigned __int8 *)off_1F34B1A10
                                                                             + v4
                                                                             - 8) ^ 0x3Eu)) ^ v4)
                                                      + 14984])(512, 1509315540);
  *(void *)*(&off_1F34B17C0
             + ((-93 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xF0)) ^ v6[v5[(-93 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xF0))] ^ 0x97])
             + 132) = v8;
  __asm { BRAA            X8, X17 }
}

void sub_1DA70FFC0()
{
}

uint64_t sub_1DA7100A0@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((*(_DWORD *)(*v4 + 4 * a2) == v3) * ((a1 + 1125) ^ 0x6EF)) ^ a1)))();
}

uint64_t sub_1DA7100D0@<X0>(uint64_t a1@<X8>)
{
  int v4 = v1 - (**(unsigned char **)(v3 + 8) == 0);
  *(_DWORD *)(*(void *)(v2 + 96) + 52_Block_object_dispose(&STACK[0x360], 8) = 2082287903;
  *(_DWORD *)(*(void *)(v2 + 96) + 532) = 696851460;
  *(void *)(*(void *)(v2 + 96) + 536) = *(void *)(v2 + 96) + 544;
  uint64_t v5 = *(void *)(v2 + 96) + 0x11127EB20C1B7716;
  uint64_t v6 = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  unsigned int v7 = 535753261 * (((&v10 | 0xA6D25F5B) - (&v10 & 0xA6D25F5B)) ^ 0xAC265174);
  int v13 = (v4 + 775911648) ^ v7;
  unsigned int v14 = v7 + 1184;
  uint64_t v12 = v6;
  uint64_t v10 = v5;
  (*(void (**)(uint64_t *))(a1 + 16616))(&v10);
  int v8 = v11;
  *(void *)(*(void *)(v2 + 96) + 512) = *(void *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return v8 ^ 0x2D43950Au;
}

uint64_t sub_1DA71023C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v25 = 110 * (a4 ^ 0x232);
  uint64_t v26 = v21 + 1015111457 + v20 - a17 + ((v25 + 1262345481) & 0xB4C226F7);
  int8x8_t v27 = vrev64_s8(*(int8x8_t *)(v18 - 7 + v26));
  *(int8x8_t *)(v17 - 7 + v26) = vrev64_s8(vadd_s8(vsub_s8(v27, vand_s8(vadd_s8(v27, v27), v23)), v24));
  LODWORD(v26) = ((v25 - 558) & v19) - a17 != 8;
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((v26 | (16 * v26)) ^ v25)))();
}

uint64_t sub_1DA7102D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,int a52)
{
  if (a32 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v52
  }
                                                       + 8
                                                       * ((118 * (a52 == ((v53 - 1531828033) & 0x5B4DD7B5 ^ 0x438CB196))) ^ (v53 + 117))))(a1, a14);
  if (a32 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8 * ((685 * (a52 != 1133293858)) ^ (v53 + 131))))(a1, a14);
  }
  unint64_t v55 = ((unint64_t)&a36 ^ 0xF7AFEB0F9DADFBBBLL)
      + 0x1E5B9DF77F7C0045
      + (((void)&a36 << ((2 * v53) ^ 0x7Fu)) & 0xEF5FD61F3B5BF770);
  a51 = (v55 ^ 0xBA) * (v55 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v52
                                                     + 8
                                                     * (((((2 * v53) ^ 0x37A) - 771) | 0x40) ^ 0xE ^ (2 * v53) ^ 0x37A)))(a1, a14);
}

uint64_t sub_1DA710468()
{
  int v4 = v0 + ((v1 - 561) ^ 0xC0B41A2F);
  BOOL v6 = v4 > 2032069308 || v4 < v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * v6) ^ v1)))();
}

uint64_t sub_1DA7104B4@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  unsigned int v12 = v8 + 16;
  uint64_t v13 = v12 - 16;
  unsigned int v14 = (v13 >> 4) - (a4 & (v13 >> 3)) + a5;
  int v15 = (v14 >> (((a8 + a2) & a3) + 81)) ^ a6;
  v10[12] = v15 - ((2 * v15) & 0xBF) + 95;
  v10[13] = (BYTE2(v14) ^ 0x83) - ((2 * (BYTE2(v14) ^ 0x83)) & 0xBF) + 95;
  v10[14] = (BYTE1(v14) ^ 0x66) + (a1 | ~(2 * (BYTE1(v14) ^ 0x66))) + 96;
  v10[15] = v14 ^ 0xBA;
  int v16 = (unsigned char *)(v9 + v13);
  *v16 ^= *v10 ^ 0x5F;
  v16[1] ^= v10[1] ^ 0x5F;
  v16[2] ^= v10[2] ^ 0x5F;
  v16[3] ^= v10[3] ^ 0x5F;
  v16[4] ^= v10[4] ^ 0x5F;
  v16[5] ^= v10[5] ^ 0x5F;
  v16[6] ^= v10[6] ^ 0x5F;
  v16[7] ^= v10[7] ^ 0x5F;
  v16[8] ^= v10[8] ^ 0x5F;
  v16[9] ^= v10[9] ^ 0x5F;
  v16[10] ^= v10[10] ^ 0x5F;
  v16[11] ^= v10[11] ^ 0x5F;
  v16[12] ^= v10[12] ^ 0x5F;
  v16[13] ^= v10[13] ^ 0x5F;
  v16[14] ^= v10[14] ^ 0x5F;
  v16[15] ^= v10[15] ^ 0x5F;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v12 > 0x14F) * a7) ^ (a8 + 171))))();
}

uint64_t sub_1DA7104BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, int a4@<W8>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v13 = (const float *)(v9 + 908);
  int8x16_t v14 = (int8x16_t)vld1q_dup_f32(v13);
  uint64_t v15 = (a4 - 187) | 0x11Du;
  a5.i32[0] = *(_DWORD *)(v9 + 912);
  a5.i32[1] = *(_DWORD *)(v9 + 4 * (v15 ^ 0x1DA));
  a5.i32[2] = *(_DWORD *)(v9 + 920);
  int8x16_t v16 = vextq_s8(v14, a5, 0xCuLL);
  int8x16_t v17 = a5;
  v17.i32[3] = *(_DWORD *)(v9 + 924);
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a6), vandq_s8(v16, v11)), 1uLL), a7);
  v19.i32[0] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 912) & 1));
  v19.i32[1] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 4 * (v15 ^ 0x1DA)) & 1));
  v19.i32[2] = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v9 + 920) & 1));
  v19.i32[3] = *(_DWORD *)(a3 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)(v9 + 90_Block_object_dispose(&STACK[0x360], 8) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v9, v19), v12), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a8)), a9));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * a4))(a1, 285, a2, 474);
}

uint64_t sub_1DA710590@<X0>(int a1@<W8>)
{
  uint64_t v9 = v1 + 1;
  unsigned char *v2 = ((v5 + v9) ^ v6) * (v4 + v9 + v3);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 91) * v7) ^ a1)))();
}

void sub_1DA710598()
{
}

uint64_t sub_1DA7105A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned __int8 *a49,uint64_t a50,uint64_t a51)
{
  int v56 = v53;
  unsigned int v57 = (v53 + 373550647) & 0xE9BC153D;
  *(_DWORD *)(v55 - 120) = v57;
  uint64_t v58 = *(void *)(v54 + 8 * (v56 ^ 0xBCu));
  uint64_t v59 = *(void *)(v54 + 8 * (v56 - 32)) - 12;
  int v60 = (*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6ELL) ^ 0xD7)) ^ 0x71) << 8;
  int v61 = *(unsigned __int8 *)(v59 + (*v51 ^ (v57 - 104))) ^ 0x47;
  uint64_t v62 = *(unsigned __int8 *)(v52 - 0x2F19939F047D9D63) ^ 0x49;
  *(_DWORD *)(v55 - 216) = a1;
  uint64_t v63 = *(void *)(v54 + 8 * (v56 ^ 0xB7u)) - 8;
  LODWORD(v62) = *(unsigned __int8 *)(v63 + v62);
  int v64 = v60 | (v61 << 24);
  HIDWORD(v65) = ~v62;
  LODWORD(v65) = (v62 ^ 0xFFFFFF87) << 24;
  LOBYTE(v60) = v65 >> 26;
  uint64_t v66 = *(void *)(v54 + 8 * (v56 - 95)) - 12;
  LODWORD(v62) = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D64) ^ 0xB8));
  int v67 = *(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D67) ^ 0x6BLL));
  HIDWORD(v65) = ~v67;
  LODWORD(v65) = (v67 ^ 0xFFFFFF87) << 24;
  int v68 = ((v65 >> 26) ^ 0x53) << 16;
  unsigned __int8 v69 = *(unsigned char *)(v58 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D62) ^ 0x2ELL));
  int v70 = *(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6FLL) ^ 0x47));
  HIDWORD(v65) = ~v70;
  LODWORD(v65) = (v70 ^ 0xFFFFFF87) << 24;
  unsigned int v71 = v64 & 0xFF00FF00 | (*(unsigned char *)(v66 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6DLL) ^ 0xECLL))
                                           - 119) ^ 9 | (((v65 >> 26) ^ 0x1E) << 16);
  int v72 = v68 | ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D66) ^ 0x77)) ^ 0xBE) << 8);
  LOBYTE(v6_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(v66 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D61) ^ 0x36));
  int v73 = (*(unsigned char *)(v66 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D69) ^ 0xA9)) - 119) | ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6ALL) ^ 0x30)) ^ 0x44) << 8);
  int v74 = ((v60 ^ 0xFB) << 16) | (~v62 << 24) | ((v69 ^ 0xB4) << 8);
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = *(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6BLL) ^ 0xCBLL));
  HIDWORD(v65) = ~v58;
  LODWORD(v65) = (v58 ^ 0xFFFFFF87) << 24;
  LOBYTE(v5_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(v66 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D65) ^ 0xB5));
  LODWORD(v66) = v73 & 0xFF00FFFF | (((v65 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D6CLL) ^ 0x35)) ^ 0x88888888) << 24);
  int v75 = v72 | ((*(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v52 - 0x2F19939F047D9D68) ^ 0xBFLL)) ^ 0x91) << 24);
  LOBYTE(v6_Block_object_dispose(&STACK[0x360], 8) = v68 - 119;
  uint64_t v76 = *(void *)(v54 + 8 * (v56 + 8));
  uint64_t v77 = *(void *)(v54 + 8 * (v56 ^ 0x98u)) - 4;
  LODWORD(v59) = *(_DWORD *)(v76 + 4 * (v68 ^ 0xFDu)) ^ 0x32BE4C1E ^ *(_DWORD *)(v77
                                                                                                  + 4 * (v60 ^ 0x61u));
  LODWORD(v63) = v59 - ((2 * v59) & 0x7765DEC6);
  *(_DWORD *)(v55 - 152) = v56;
  uint64_t v78 = *(void *)(v54 + 8 * (v56 ^ 0x8Cu)) - 4;
  LODWORD(v62) = (v63 + 1001582435) ^ *(_DWORD *)(v78 + 4 * (v62 ^ 0x6Au));
  LODWORD(v63) = v62 - ((2 * v62) & 0xAC2EE568);
  uint64_t v79 = *(void *)(v54 + 8 * (v56 ^ 0xE3u)) - 8;
  int v80 = *(_DWORD *)(v79 + 4 * (v69 ^ 0x8Cu));
  HIDWORD(v522) = v71;
  LOBYTE(v6_Block_object_dispose(&STACK[0x360], 8) = v68 ^ 0x2A;
  LODWORD(v522) = v74 & 0xFFFFFF00 | v68;
  LOBYTE(v5_Block_object_dispose(&STACK[0x360], 8) = (v58 - 119) ^ 0xA8;
  unsigned int v81 = v75 & 0xFFFFFF00 | v58;
  int v82 = v80 ^ v71 ^ (v63 - 703106380) ^ v66;
  int v83 = v80 ^ v71 ^ (v63 - 703106380);
  int v405 = v83;
  *(_DWORD *)(v55 - 184) = v82;
  *(_DWORD *)(v55 - 124) = v82 ^ 0x4D ^ v81;
  unsigned __int8 v401 = v82 ^ 0x4D;
  int v84 = v82 ^ 0x4D ^ v81 ^ (v522 - 2 * ((v74 & 0x4C625000 | v68 & 0xBB) ^ v68 & 2) - 865972039);
  *(_DWORD *)(v55 - 20_Block_object_dispose(&STACK[0x360], 8) = BYTE1(v84);
  int v431 = BYTE2(v84);
  LODWORD(v63) = v84 ^ 0x76957D10;
  int v85 = *(_DWORD *)(v79 + 4 * (BYTE1(v84) ^ 0xAAu)) ^ *(_DWORD *)(v77 + 4 * (BYTE2(v84) ^ 0xDCu)) ^ 0x574918D2;
  int v441 = v84;
  int v86 = (v85 - ((2 * v85) & 0x67C04CF0) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v84 ^ 0x90u));
  unsigned int v436 = BYTE3(v63);
  int v87 = v83 ^ *(_DWORD *)(v78 + 4 * (BYTE3(v63) ^ 0x65)) ^ (v86 - ((2 * v86) & 0x7765DEC6) + 1001582435);
  unint64_t v521 = __PAIR64__(v66, v81);
  *(_DWORD *)(v55 - 200) = v87 ^ 0x3E06E727;
  *(_DWORD *)(v55 - 160) = v87;
  int v88 = v87 ^ 0x3E06E727 ^ (v81 - 2 * (v81 & 0x3E06E737 ^ v58 & 0x10) + 1040639783);
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = v88 ^ v63;
  *(_DWORD *)(v55 - 136) = v88;
  int v452 = ((v88 ^ v63) >> 16);
  int v450 = ((unsigned __int16)(v88 ^ v63) >> 8);
  int v89 = *(_DWORD *)(v79 + 4 * (v450 ^ 0x9Bu)) ^ *(_DWORD *)(v77 + 4 * (v452 ^ 0x2Eu));
  int v533 = (v88 ^ v63);
  int v90 = ((v89 ^ 0x574918D2) - 2 * ((v89 ^ 0x574918D2) & 0x33E02679 ^ v89 & 1) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v533 ^ 0xD2u));
  LODWORD(v63) = v88 ^ v63 ^ 0xCB360DD6;
  *(_DWORD *)(v55 - 224) = BYTE3(v58);
  int v91 = (v90 - ((2 * v90) & 0x7765DEC6) + 1001582435) ^ *(_DWORD *)(v78 + 4 * (BYTE3(v58) ^ 0x69));
  int v92 = v91 ^ v82 ^ 0x4D ^ 0x37A08FE;
  int v474 = v91 ^ v82 ^ 0x4D;
  int v479 = v92 ^ v88;
  LODWORD(v66) = ((v479 ^ 0x99FC0514) - ((2 * (v479 ^ 0x99FC0514)) & 0x7F23593E) - 1080972129) ^ v63;
  unsigned int v93 = v66 ^ 0x9547167F;
  int v492 = ((v66 ^ 0x9547167F) >> 16);
  int v523 = ((unsigned __int16)(v66 ^ 0x167F) >> 8);
  int v94 = *(_DWORD *)(v77 + 4 * (v492 ^ 0x89u)) ^ *(_DWORD *)(v79 + 4 * (v523 ^ 0x3Au)) ^ 0x574918D2;
  int v505 = (((v479 ^ 0x14) - ((2 * (v479 ^ 0x14)) & 0x3E) - 97) ^ v63);
  LODWORD(v66) = (v94 - ((2 * v94) & 0x67C04CF0) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v505 ^ 0xE4u));
  *(_DWORD *)(v55 - 232) = HIBYTE(v93);
  int v95 = (v66 - ((2 * v66) & 0x7765DEC6) + 1001582435) ^ *(_DWORD *)(v78 + 4 * (HIBYTE(v93) ^ 0x1D));
  unsigned int v458 = v91 ^ v87;
  int v528 = (v95 - ((2 * v95) & 0x4D0BED6) - 2107089045) ^ v91 ^ v87;
  unsigned __int8 v544 = ((unsigned __int16)((v95 - ((2 * v95) & 0xBED6) + 24427) ^ v91 ^ v87) >> 8) ^ 0x5F;
  unsigned int v536 = v528 ^ 0x82685F6B ^ v474;
  unsigned int v96 = ((v536 ^ 0xFE25CD6D) - ((2 * (v536 ^ 0xFE25CD6D)) & 0x7F23593E) - 1080972129) ^ v63;
  *(_DWORD *)(v55 - 240) = BYTE1(v96);
  LODWORD(v63) = *(_DWORD *)(v79 + 4 * (BYTE1(v96) ^ 0x6Fu));
  *(_DWORD *)(v55 - 24_Block_object_dispose(&STACK[0x360], 8) = BYTE2(v96);
  LODWORD(v63) = *(_DWORD *)(v77 + 4 * (BYTE2(v96) ^ 0xA8u)) ^ v63;
  unsigned int v515 = HIBYTE(v96);
  LODWORD(v63) = ((v63 ^ 0x574918D2) - 2 * ((v63 ^ 0x574918D2) & 0x3BB2EF6B ^ v63 & 8) + 1001582435) ^ *(_DWORD *)(v78 + 4 * (HIBYTE(v96) ^ 0x85));
  int v538 = v96;
  LODWORD(v63) = (v63 - ((2 * v63) & 0x67C04CF0) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v96 ^ 0x25u));
  unsigned int v97 = (v63 - ((2 * v63) & 0x731A4AAE) - 1181932201) ^ v92;
  unsigned int v517 = v536 ^ v92 ^ v88;
  *(_DWORD *)(v55 - 16_Block_object_dispose(&STACK[0x360], 8) = v97 ^ v517;
  unsigned int v399 = v97;
  __int16 v388 = v97 ^ v517 ^ 0x802C;
  unsigned int v541 = v96;
  unsigned int v98 = v97 ^ v517 ^ 0x61EF802C ^ v96 ^ 0xEF67323B;
  unsigned int v426 = HIBYTE(v98);
  int v414 = BYTE2(v98);
  unsigned int v99 = *(_DWORD *)(v78 + 4 * (HIBYTE(v98) ^ 0x1D)) ^ *(_DWORD *)(v77 + 4 * (BYTE2(v98) ^ 0x89u)) ^ 0xBAEC8505;
  int v417 = BYTE1(v98);
  unsigned int v100 = (v99 - ((2 * v99) & 0xAC2EE568) - 703106380) ^ *(_DWORD *)(v79 + 4 * (BYTE1(v98) ^ 0x3Au));
  *(_DWORD *)(v55 - 176) = v63 ^ v528 ^ 0x82685F6B;
  int v513 = (v97 ^ v517) ^ 0x2C ^ v96;
  int v101 = v63 ^ v528 ^ 0x82685F6B ^ *(_DWORD *)(v76 + 4 * (v513 ^ 0xA0u)) ^ (v100
                                                                            - ((2 * v100) & 0x67C04CF0)
                                                                            - 1277155720);
  unsigned __int8 v422 = BYTE2(v97) ^ 0x16;
  int v102 = v97 ^ 0x7C166C11 ^ v101;
  int v487 = v101;
  unsigned int v103 = v102 ^ v96;
  unsigned int v104 = (v102 ^ v96) >> 24;
  *(_DWORD *)(v55 - 256) = v104;
  int v502 = v103;
  unsigned int v105 = (v82 ^ 0xBAF72DE4) - ((2 * (v82 ^ 0xBAF72DE4)) & 0x7C0DCE4E) + 1040639783;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v78 + 4 * (v104 ^ 0x9B)) ^ *(_DWORD *)(v76 + 4 * (v103 ^ 0x31u)) ^ 0x8852C91B;
  int v464 = (v103 >> 8) ^ 0x86839A;
  int v470 = BYTE1(v103) ^ 0x9A;
  int v106 = (v58 - ((2 * v58) & 0xAC2EE568) - 703106380) ^ *(_DWORD *)(v79 + 4 * (BYTE1(v103) ^ 0xA0u));
  int v107 = v106 - ((2 * v106) & 0x2BCD4CC);
  int v108 = v103 ^ 0x98BF9FF;
  int v462 = BYTE2(v103);
  int v109 = (v107 - 2124518810) ^ *(_DWORD *)(v77 + 4 * (BYTE2(v103) ^ 0xAu));
  int v110 = (v109 - ((2 * v109) & 0x27F75D78) + 335261372) ^ v101;
  *(_DWORD *)(v55 - 12_Block_object_dispose(&STACK[0x360], 8) = v110;
  unsigned int v111 = v110 ^ 0xEE783416 ^ v102;
  unsigned int v112 = v110 ^ 0xEE783416;
  __int16 v428 = (v109 - ((2 * v109) & 0x5D78) - 20804) ^ v101 ^ 0x3416;
  unsigned int v482 = v102 ^ v97 ^ v517 ^ 0x61EF802C;
  int v455 = v102;
  int v113 = ((v111 ^ 0x5A137D54) - ((2 * (v111 ^ 0x5A137D54)) & 0x410CA430) - 1601809896) ^ v482 ^ 0x38987148;
  int v114 = v113;
  *(_DWORD *)(v55 - 140) = v113;
  unsigned int v115 = ((v113 ^ 0x34B7CA71) - 1895275691 - 2 * ((v113 ^ 0x34B7CA71) & 0xF08635D ^ v113 & 8)) ^ v108 ^ 0x479AB031;
  int v509 = (((v113 ^ 0x71) + 85 - 2 * ((v113 ^ 0x71) & 0x5D ^ v113 & 8)) ^ v108);
  int v530 = ((unsigned __int16)(((v113 ^ 0xCA71) + 25429 - 2 * ((v113 ^ 0xCA71) & 0x635D ^ v113 & 8)) ^ v108 ^ 0xB031) >> 8);
  int v116 = *(_DWORD *)(v79 + 4 * (v530 ^ 0x3Au)) ^ *(_DWORD *)(v76 + 4 * (v509 ^ 0xAAu)) ^ 0x65F754CC;
  int v117 = (v116 - ((2 * v116) & 0x2BCD4CC) - 2124518810) ^ *(_DWORD *)(v77 + 4 * (BYTE2(v115) ^ 0x89u));
  int v118 = (v117 - ((2 * v117) & 0x7765DEC6) + 1001582435) ^ *(_DWORD *)(v78 + 4 * (HIBYTE(v115) ^ 0x1D));
  LODWORD(v66) = v118 ^ v102;
  unsigned int v119 = ((v118 ^ v102 ^ 0xA6C48CD5) - 2 * ((v118 ^ v102 ^ 0xA6C48CD5) & 0xF08635F ^ (v118 ^ v102) & 0xA) - 1895275691) ^ v108;
  int v120 = ((unsigned __int16)(((v118 ^ v102 ^ 0x8CD5)
                                             - 2 * ((v118 ^ v102 ^ 0x8CD5) & 0x635F ^ (v118 ^ v102) & 0xA)
                                             + 25429) ^ v108) >> 8);
  unsigned int v121 = *(_DWORD *)(v78 + 4 * (HIBYTE(v119) ^ 5)) ^ *(_DWORD *)(v79 + 4 * (BYTE1(v119) ^ 0x6Fu)) ^ 0xEDA59DD7;
  int v490 = v119;
  int v122 = (v121 - ((2 * v121) & 0x67C04CF0) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v119 ^ 0x25u));
  unsigned int v123 = v112 ^ v118 ^ *(_DWORD *)(v77 + 4 * (BYTE2(v119) ^ 0xA8u)) ^ (v122 - ((2 * v122) & 0x2BCD4CC) - 2124518810);
  unsigned int v124 = v114 ^ 0xB3281271 ^ v123;
  *(_DWORD *)(v55 - 192) = v124;
  int v526 = ((unsigned __int16)(v124 ^ v119) >> 8);
  LODWORD(v79) = *(_DWORD *)(v79 + 4 * (v526 ^ 0x44u));
  unsigned int v396 = (v124 ^ v119) >> 24;
  LODWORD(v7_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v78 + 4 * (v396 ^ 0x47));
  int v433 = *(_DWORD *)(v55 - 200) ^ v105;
  int v407 = (v124 ^ v119);
  int v125 = ((v79 ^ v78 ^ 0xEDA59DD7) - ((2 * (v79 ^ v78 ^ 0xEDA59DD7)) & 0x67C04CF0) - 1277155720) ^ *(_DWORD *)(v76 + 4 * (v407 ^ 0xD5u));
  int v386 = ((v124 ^ v119) >> 16);
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (v125 - ((2 * v125) & 0x2BCD4CC) - 2124518810) ^ *(_DWORD *)(v77 + 4 * (v386 ^ 0xCBu));
  HIDWORD(v520) = v123 ^ 0x1BB21185 ^ (v58 - 1689961427 + (~(2 * v58) | 0xC97587A7));
  int v392 = v123 ^ v66;
  LODWORD(v520) = v123 ^ v66 ^ 0x5A55AB5B ^ (HIDWORD(v520) - ((2 * HIDWORD(v520)) & 0xFDEEC89E) + 2130142287);
  HIDWORD(v519) = v124 ^ 0x4018996 ^ v520;
  LODWORD(v519) = (HIDWORD(v519) - ((2 * HIDWORD(v519)) & 0xC229C178) - 518725444) ^ v124 ^ v119;
  int v126 = *(_DWORD *)(v55 - 152);
  unsigned int v127 = (char *)*(&off_1F34B17C0 + v126 - 86) - 4;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (((v112 ^ v118 ^ 0x1B9155BD) >> 16)
                + 12039717
                + ((2 * ((v112 ^ v118 ^ 0x1B9155BD) >> 16) + 88) & 0x3F0 ^ 0xFE7F6BFF)) ^ *(_DWORD *)&v127[4 * (((v112 ^ v118 ^ 0x1B9155BD) >> 16) ^ 0x2D)];
  LODWORD(v7_Block_object_dispose(&STACK[0x360], 8) = ((BYTE2(v119) ^ 0x89) + 12039717 + ((2 * (BYTE2(v119) ^ 0x89) + 88) & 0x3F0 ^ 0xFE7F6BFF)) ^ *(_DWORD *)&v127[4 * (BYTE2(v119) ^ 0xA4)];
  int v128 = (char *)*(&off_1F34B17C0 + v126 - 149) - 4;
  int v129 = (v58 - ((2 * v58) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4
                                                                        * (((unsigned __int16)(v112 ^ v118) >> 8) ^ 0x47)];
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = v78 - ((2 * v78) & 0x7FBA9178);
  uint64_t v130 = (uint64_t)*(&off_1F34B17C0 + (v126 ^ 5u));
  LODWORD(v77) = (v58 + 1071466684) ^ *(_DWORD *)(v130 + 4 * (HIBYTE(v119) ^ 0xCC));
  uint64_t v131 = (uint64_t)*(&off_1F34B17C0 + (v126 ^ 0xACu));
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = 181304767
               * *(_DWORD *)(v131
                           + 4
                           * ((((v111 ^ 0x54) - ((2 * (v111 ^ 0x54)) & 0x30) + 24) ^ v482 ^ 0x48) ^ 0x71 ^ v66 ^ 0x53u));
  unsigned int v384 = v114 ^ 0xB3281271 ^ v66;
  int v132 = *(_DWORD *)(v130 + 4 * (HIBYTE(v384) ^ 0x3E));
  *(_DWORD *)(v55 - 200) = 25203715;
  LODWORD(v76) = *(_DWORD *)&v127[4 * (BYTE2(v384) ^ 0xAA)] ^ v132 ^ ((BYTE2(v384) ^ 0x87)
                                                                    + 12039717
                                                                    + ((2
                                                                      * (((BYTE2(v384) ^ 0x87) + 44) & 0xFFFFFFF9 ^ (BYTE2(v384) ^ 0x87 | 0x7FFFFFFE))) ^ 0x1809403));
  int v133 = *(_DWORD *)(v131 + 4 * (v66 ^ 0x74u));
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = v76 ^ (v58 - 2 * ((v58 + 535070840) & 0x3FDD48BF ^ v58 & 3) - 1614687948);
  LODWORD(v76) = (181304767 * v133 - ((362609534 * v133 + 1070141680) & 0x52E2378C) + 156607550) ^ *(_DWORD *)&v128[4 * (BYTE1(v66) ^ 0x5A)];
  int v511 = v76 - ((2 * v76) & 0x7FBA9178);
  unsigned int v507 = BYTE3(v66) ^ 0xB2;
  int v476 = BYTE2(v66);
  unsigned int v498 = (BYTE2(v66) ^ 0x4C) + 12039717 + ((2 * (BYTE2(v66) ^ 0x4C) + 88) & 0x3F0 ^ 0xFE7F6BFF);
  unsigned int v485 = v120 ^ 0xB0;
  int v500 = v77 - ((2 * v77) & 0x52E2378C);
  int v496 = v58 - ((2 * v58) & 0x52E2378C);
  int v525 = (v129 - ((2 * v129) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * ((v112 ^ v118 ^ 0x1B9155BD) >> 24)) ^ (181304767 * *(_DWORD *)(v131 + 4 * ((v112 ^ v118) ^ 0x7Du)) + 1608812664);
  LODWORD(v77) = *(_DWORD *)&v127[4 * (((v433 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v433 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              + 12039717
                                                                                              + ((2
                                                                                                * (((v433 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 88) & 0x3F0 ^ 0xFE7F6BFF));
  unsigned int v134 = *(_DWORD *)(v55 - 136) ^ 0x31676F78;
  unsigned int v135 = *(_DWORD *)&v127[4 * (BYTE2(v134) ^ 0x7B)] ^ ((BYTE2(v134) ^ 0x56)
                                                     + 12039717
                                                     + ((2 * (BYTE2(v134) ^ 0x56) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  int v136 = (v135 - ((2 * v135) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * HIBYTE(v134));
  unsigned int v137 = *(_DWORD *)&v127[4 * (v452 ^ 0x34)] ^ ((v452 ^ 0x19)
                                              + 12039717
                                              + ((2 * ((unsigned __int16)v452 ^ 0x19) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (v137 - ((2 * v137) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (v450 ^ 5)];
  int v451 = v136 - ((2 * v136) & 0x52E2378C);
  int v453 = v58 - ((2 * v58) & 0x7FBA9178);
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = 181304767 * *(_DWORD *)(v131 + 4 * (*(_DWORD *)(v55 - 160) ^ 0xDFu));
  LODWORD(v76) = *(_DWORD *)(v55 - 160) ^ 0x5A18571F;
  int v138 = *(_DWORD *)(v130 + 4 * BYTE3(v76)) ^ ((BYTE2(v76) ^ 0xC1)
                                               + 12039716
                                               - ((2 * (BYTE2(v76) ^ 0xC1) + 25990232) & 0x18097F0)) ^ *(_DWORD *)&v127[4 * (BYTE2(v76) ^ 0xEC)] ^ (v58 - 2 * ((v58 + 535070840) & 0x3FDD48BE ^ v58 & 2) - 1614687948);
  int v447 = v138 - ((2 * v138) & 0x52E2378C);
  int v139 = *(_DWORD *)(v130 + 4 * ((v433 ^ 0xE9B45E6C) >> 24)) ^ (v77 - ((2 * v77) & 0x7FBA9178) + 1071466684);
  int v445 = v139 - ((2 * v139) & 0x52E2378C);
  int v140 = *(_DWORD *)&v127[4 * (BYTE2(v115) ^ 0xDE)] ^ ((BYTE2(v115) ^ 0xF3)
                                                     + 12039716
                                                     - ((2 * (BYTE2(v115) ^ 0xF3) + 25990232) & 0x18097F0));
  unsigned int v141 = *(_DWORD *)&v127[4 * (((v111 ^ 0x35C48CD5) >> 16) ^ 0xFE)] ^ ((((v111 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                      + 12039717
                                                                                      + ((2
                                                                                        * (((v111 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                        + 88) & 0x3F0 ^ 0xFE7F6BFF));
  int v142 = *(_DWORD *)(v131
                   + 4
                   * ((((v111 ^ 0x54) - ((2 * (v111 ^ 0x54)) & 0x30) + 24) ^ v482 ^ 0x48) ^ 0xB4u));
  int v143 = (v140 - ((2 * v140) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * (HIBYTE(v115) ^ 0x36));
  int v144 = BYTE2(*(_DWORD *)(v55 - 128));
  unsigned int v145 = *(_DWORD *)&v127[4 * (v144 ^ 0x54)] ^ ((v144 ^ 0x79)
                                              + 12039717
                                              + ((2 * (((v144 ^ 0x79) + 44) & 0xFFFFFFFB ^ (v144 ^ 0x79 | 0x7FFFFFFC))) ^ 0x1809407));
  int v146 = (v145 - ((2 * v145) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (HIBYTE(v428) ^ 0x8B)];
  int v438 = v143 - ((2 * v143) & 0x52E2378C);
  int v443 = v146 - ((2 * v146) & 0x7FBA9178);
  unsigned int v147 = *(_DWORD *)(v55 - 140) ^ 0xD1B7CA71;
  unsigned int v148 = *(_DWORD *)&v128[4 * (BYTE1(v147) ^ 0x20)] ^ ((BYTE2(v147) ^ 0xD7)
                                                     + 12039717
                                                     + ((2
                                                       * (((BYTE2(v147) ^ 0xD7) + 44) & 0xFFFFFFFB ^ (BYTE2(v147) ^ 0xD7 | 0x7FFFFFFC))) ^ 0x1809407)) ^ *(_DWORD *)&v127[4 * (BYTE2(v147) ^ 0xFA)] ^ (181304767 * v142 - ((362609534 * v142 + 1070141680) & 0x52E2378C) + 156607550);
  int v149 = (v141 - ((2 * v141) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * ((v111 ^ 0x35C48CD5) >> 24)) ^ (181304767 * *(_DWORD *)(v131 + 4 * (v111 ^ 0x3Du)) + 1608812664);
  unsigned int v382 = v428 ^ 0xA3;
  int v423 = v149 - ((2 * v149) & 0x52E2378C);
  unsigned int v429 = v148 - ((2 * v148) & 0x7FBA9178);
  int v150 = *(_DWORD *)(v55 - 124);
  unsigned int v400 = BYTE1(v150) ^ 0xF5;
  unsigned int v411 = v405 ^ 0x2BEAE26B;
  unsigned int v151 = *(_DWORD *)&v127[4 * (((v405 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v405 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                       + 12039717
                                                                                       + ((2
                                                                                         * (((v405 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                         + 88) & 0x3F0 ^ 0xFE7F6BFF)) ^ (181304767 * *(_DWORD *)(v131 + 4 * (v405 ^ 0x1Eu)) + 1608812664);
  int v152 = (v151 - ((2 * v151) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (BYTE1(v405) ^ 8)];
  unsigned int v153 = *(_DWORD *)&v127[4 * (v431 ^ 0x42)] ^ ((v431 ^ 0x6F)
                                              + 12039717
                                              + ((2 * (((v431 ^ 0x6F) + 44) & 0x1FA ^ (v431 ^ 0x6F | 0xFFFFFFFD))) ^ 0x1809405));
  int v154 = 181304767 * *(_DWORD *)(v131 + 4 * (v401 ^ 0x55u));
  int v406 = v152 - ((2 * v152) & 0x7FBA9178);
  int v389 = BYTE2(v150);
  unsigned int v432 = (BYTE2(v150) ^ 0xA7) + 12039717 + ((2 * (BYTE2(v150) ^ 0xA7) + 88) & 0x3F0 ^ 0xFE7F6BFF);
  unsigned int v402 = v436 ^ 0x4B;
  int v155 = (v153 - ((2 * v153) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (*(_DWORD *)(v55 - 208) ^ 0xC0)] ^ (181304767 * *(_DWORD *)(v131 + 4 * (v441 ^ 0xE3u)) + 1608812664);
  unsigned int v156 = *(_DWORD *)(v55 - 184);
  int v437 = v155 - ((2 * v155) & 0x7FBA9178);
  int v157 = (v154 - 2 * ((v154 + 535070840) & 0x3FDD48BE ^ v154 & 2) - 1614687948) ^ ((BYTE2(v156) ^ 0xBA)
                                                                                 + 12039716
                                                                                 - ((2 * (BYTE2(v156) ^ 0xBA) + 25990232) & 0x18097F0)) ^ *(_DWORD *)(v130 + 4 * (HIBYTE(v156) ^ 0x2F)) ^ *(_DWORD *)&v127[4 * (BYTE2(v156) ^ 0x97)];
  int v391 = v157 - ((2 * v157) & 0x52E2378C);
  unsigned int v158 = *(_DWORD *)(v55 - 168);
  int v159 = *(_DWORD *)(v55 - 200);
  unsigned int v160 = *(_DWORD *)&v127[4 * (BYTE2(v158) ^ 0x7F)] ^ ((BYTE2(v158) ^ 0x52)
                                                     + 12039717
                                                     + (v159 ^ (2
                                                              * (((BYTE2(v158) ^ 0x52) + 44) & 0xFFFFFFF9 ^ (HIWORD(v158) | 0x7FFFFFFE)))));
  LODWORD(v76) = *(_DWORD *)(v55 - 176);
  unsigned int v161 = *(_DWORD *)&v127[4 * (BYTE2(v76) ^ 0x56)] ^ ((BYTE2(v76) ^ 0x7B)
                                                    + 12039717
                                                    + ((2 * (BYTE2(v76) ^ 0x7B) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  unsigned int v162 = v161 - ((2 * v161) & 0x7FBA9178);
  int v163 = (v160 - ((2 * v160) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (HIBYTE(v388) ^ 0x72)] ^ (181304767 * *(_DWORD *)(v131 + 4 * (v388 ^ 0x48u)) + 1608812664);
  int v164 = *(_DWORD *)(v131 + 4 * (v399 ^ 0xFBu));
  int v165 = (181304767 * v164 - ((362609534 * v164 + 1070141680) & 0x52E2378C) + 156607550) ^ *(_DWORD *)&v128[4 * (BYTE1(v399) ^ 0xEF)];
  *(_DWORD *)(v55 - 20_Block_object_dispose(&STACK[0x360], 8) = 1071466685;
  unsigned int v442 = v163 + 1071466685 + (~(2 * v163) | 0x80456E87);
  HIDWORD(v387) = v165 - ((2 * v165) & 0x7FBA9178);
  int v166 = (v162 + 1071466684) ^ *(_DWORD *)(v130 + 4 * (BYTE3(v76) ^ 0xD9)) ^ (181304767
                                                                              * *(_DWORD *)(v131
                                                                                          + 4
                                                                                          * (v76 ^ 0x79u))
                                                                              + 1608812664);
  unsigned int v167 = *(_DWORD *)&v127[4 * (v414 ^ 0x86)] ^ ((v414 ^ 0xAB)
                                              + 12039717
                                              + ((2 * (((v414 ^ 0xAB) + 44) & 0x1FA ^ (v414 ^ 0xAB | 0xFFFFFFFD))) ^ 0x1809405));
  int v168 = (v167 - ((2 * v167) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * v426);
  unsigned int v381 = v417 ^ 0xEE;
  int v418 = v168 - ((2 * v168) & 0x52E2378C);
  int v415 = v166 - ((2 * v166) & 0x52E2378C);
  int v379 = v422;
  unsigned int v427 = (v422 ^ 0x65) + 12039717 + ((2 * (v422 ^ 0x65) + 88) & 0x3F0 ^ 0xFE7F6BFF);
  unsigned int v169 = *(_DWORD *)&v127[4 * (v386 ^ 0x8B)] ^ ((v386 ^ 0xA6)
                                              + 12039717
                                              + ((2 * ((unsigned __int16)v386 ^ 0xA6) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  int v170 = *(_DWORD *)(v55 - 192);
  LODWORD(v387) = BYTE2(v170);
  unsigned int v421 = (BYTE2(v170) ^ 0x8F) + 12039717 + ((2 * (BYTE2(v170) ^ 0x8F) + 88) & 0x3F0 ^ 0xFE7F6BFF);
  unsigned int v171 = v396 ^ 0x22;
  unsigned int v172 = *(_DWORD *)&v127[4 * (BYTE2(v123) ^ 0xE8)] ^ ((BYTE2(v123) ^ 0xC5)
                                                     + 12039717
                                                     + ((2 * (BYTE2(v123) ^ 0xC5) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  unsigned int v378 = BYTE1(v384) ^ 0x8E;
  int v173 = (181304767 * *(_DWORD *)(v131 + 4 * (v123 ^ 0xCAu)) + 1608812664) ^ *(_DWORD *)(v130 + 4 * (HIBYTE(v123) ^ 0x8E)) ^ (v172 - ((2 * v172) & 0x7FBA9178) + 1071466684);
  unsigned int v397 = v123 ^ v66 ^ 0x44039AAA;
  unsigned int v174 = (181304767 * *(_DWORD *)(v131 + 4 * (v392 ^ 0xDBu)) + 1608812664) ^ (((v392 ^ 0x44039AAAu) >> 16)
                                                                                               + 12039717
                                                                                               + ((2
                                                                                                 * ((((v392 ^ 0x44039AAAu) >> 16) + 44) & 0x1FA ^ (((v392 ^ 0x44039AAAu) >> 16) | 0xFFFFFFFD))) ^ 0x1809405)) ^ *(_DWORD *)&v127[4 * (((v392 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  unsigned int v376 = BYTE1(v123) ^ 0x16;
  int v385 = v173 - ((2 * v173) & 0x52E2378C);
  int v175 = (v174 - ((2 * v174) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4
                                                                          * (((unsigned __int16)(v123 ^ v66) >> 8) ^ 0xC0)];
  int v176 = *(_DWORD *)(v130 + 4 * v171) ^ (181304767 * *(_DWORD *)(v131 + 4 * (v407 ^ 0xFEu)) + 1608812664) ^ (v169 - ((2 * v169) & 0x7FBA9178) + 1071466684);
  int v408 = v175 - ((2 * v175) & 0x7FBA9178);
  int v393 = v176 - ((2 * v176) & 0x52E2378C);
  int v177 = *(_DWORD *)(v131 + 4 * (v458 ^ 0xECu));
  unsigned int v178 = *(_DWORD *)&v127[4 * (v492 ^ 0x32)] ^ ((v492 ^ 0x1F)
                                              + 12039717
                                              + ((2 * ((unsigned __int16)v492 ^ 0x1F) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  int v179 = 181304767 * *(_DWORD *)(v131 + 4 * (v474 ^ 0xE6u));
  unsigned int v180 = *(_DWORD *)(v130 + 4 * (HIBYTE(v458) ^ 0xCA)) ^ ((BYTE2(v458) ^ 0x2F)
                                                          + 12039717
                                                          + ((2 * (BYTE2(v458) ^ 0x2F) + 88) & 0x3F0 ^ 0xFE7F6BFF)) ^ *(_DWORD *)&v127[4 * (BYTE2(v458) ^ 2)] ^ (181304767 * v177 - ((362609534 * v177 + 1070141680) & 0x7FBA9178) - 1614687948);
  int v181 = (v178 - ((2 * v178) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (v523 ^ 0x8C)] ^ (181304767
                                                                                                * *(_DWORD *)(v131 + 4 * (v505 ^ 0xD9u))
                                                                                                + 1608812664);
  int v182 = ((v474 ^ 0x49A657C7u) >> 16);
  unsigned int v183 = *(_DWORD *)(v130 + 4 * ((v474 ^ 0x49A657C7u) >> 24)) ^ *(_DWORD *)&v127[4 * (v182 ^ 0x18)] ^ ((v182 ^ 0x35) + 12039717 + (v159 ^ (2 * (((v182 ^ 0x35) + 44) & 0xFFFFFFF9 ^ (v182 ^ 0x35 | 0x7FFFFFFE))))) ^ (v179 - 2 * ((v179 + 535070840) & 0x3FDD48BF ^ v179 & 3) - 1614687948);
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)&v127[4 * (((v479 ^ 0xA701136B) >> 16) ^ 0x2D)] ^ (((v479 ^ 0xA701136B) >> 16)
                                                                                              + 12039716
                                                                                              - ((2
                                                                                                * ((v479 ^ 0xA701136B) >> 16)
                                                                                                + 25990232) & 0x18097F0));
  int v524 = (v180 - ((2 * v180) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (BYTE1(v458) ^ 0x2E)];
  int v506 = v181 - ((2 * v181) & 0x7FBA9178);
  unsigned int v459 = BYTE1(v474) ^ 0xB9;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (v58 - ((2 * v58) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * ((v479 ^ 0xA701136B) >> 24)) ^ (181304767 * *(_DWORD *)(v131 + 4 * (v479 ^ 0xFBu)) + 1608812664);
  unsigned int v395 = BYTE1(v479) ^ 0x93;
  unsigned int v493 = v183 - ((2 * v183) & 0x52E2378C);
  int v480 = v58 - ((2 * v58) & 0x52E2378C);
  unsigned int v184 = *(_DWORD *)&v127[4 * (v462 ^ 0xC1)] ^ ((v462 ^ 0xEC)
                                              + 12039717
                                              + ((2 * ((unsigned __int16)v462 ^ 0xEC) + 88) & 0x3F0 ^ 0xFE7F6BFF));
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (v184 - ((2 * v184) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4
                                                                                  * ((v470 - ((2 * v464) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)(v131 + 4 * (v502 ^ 0xE2u)) + 1608812664);
  unsigned int v471 = BYTE1(v487) ^ 0x77;
  int v185 = 181304767 * *(_DWORD *)(v131 + 4 * (v482 ^ 0x75u));
  int v186 = *(_DWORD *)(v55 - 208);
  int v187 = (v185 - 2 * ((v185 + 535070840) & v186 ^ v185 & 1) - 1614687948) ^ *(_DWORD *)(v130
                                                                                      + 4 * (HIBYTE(v482) ^ 0xBC));
  unsigned int v465 = ((unsigned __int16)(v482 ^ 0x7148) >> 8) ^ 0x94;
  int v475 = v58 + v186 + (~(2 * v58) | 0x80456E87);
  int v468 = v187 - ((2 * v187) & 0x52E2378C);
  unsigned int v503 = v455 ^ 0xEEA2BFA8;
  int v188 = ((v455 ^ 0xEEA2BFA8) >> 16);
  unsigned int v189 = *(_DWORD *)&v127[4 * (v188 ^ 0x86)] ^ ((v188 ^ 0xAB)
                                              + 12039717
                                              + ((2 * (((v188 ^ 0xAB) + 44) & 0xFFFFFFFB ^ (v188 ^ 0xAB | 0x7FFFFFFC))) ^ 0x1809407));
  int v190 = (181304767 * *(_DWORD *)(v131 + 4 * (v455 ^ 0x68u)) + 1608812664) ^ *(_DWORD *)&v128[4 * (BYTE1(v455) ^ 0x55)] ^ (v189 - ((2 * v189) & 0x52E2378C) - 1452205114);
  unsigned int v456 = HIBYTE(*(_DWORD *)(v55 - 168)) ^ 0xC1;
  unsigned int v463 = v487 ^ 0x231B9DB5;
  int v191 = ((v487 ^ 0x231B9DB5u) >> 16);
  unsigned int v371 = v191 ^ 0xEC;
  *(_DWORD *)(v55 - 16_Block_object_dispose(&STACK[0x360], 8) = (v191 ^ 0xC1) + 12039717 + ((2 * ((unsigned __int16)v191 ^ 0xC1) + 88) & 0x3F0 ^ 0xFE7F6BFF);
  LODWORD(v375) = v190 - ((2 * v190) & 0x7FBA9178);
  int v192 = BYTE2(v482);
  unsigned int v483 = (v192 ^ 0x23) + 12039717 + ((2 * (((v192 ^ 0x23) + 44) & 0xFFFFFFFB ^ (v192 ^ 0x23 | 0x7FFFFFFC))) ^ 0x1809407);
  unsigned int v193 = v528 ^ 0x13CA907F;
  int v194 = *(_DWORD *)(v55 - 136);
  int v195 = *(_DWORD *)(v131 + 4 * v382);
  int v196 = *(_DWORD *)(v131 + 4 * (v170 ^ 0x78u));
  int v197 = *(_DWORD *)(v131 + 4 * (v487 ^ 0x75u));
  int v198 = *(_DWORD *)(v131 + 4 * (v538 ^ 0x74u));
  int v199 = *(_DWORD *)(v131 + 4 * (v536 ^ 0x2Au));
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v131 + 4 * (v528 ^ 0x46u));
  LODWORD(v373) = 181304767 * *(_DWORD *)(v131 + 4 * (v490 ^ 0x60u)) + 1608812664;
  int v534 = 181304767 * *(_DWORD *)(v131 + 4 * (v533 ^ 0xFBu)) + 1608812664;
  LODWORD(v383) = 181304767 * *(_DWORD *)(v131 + 4 * (v194 ^ 0xB8u)) + 1608812664;
  int v529 = 181304767 * *(_DWORD *)(v131 + 4 * (v433 ^ 0xACu)) + 1608812664;
  int v491 = 181304767 * v195 + 1608812664;
  int v488 = 181304767 * *(_DWORD *)(v131 + 4 * (v509 ^ 0xF0u)) + 1608812664;
  int v539 = 181304767 * *(_DWORD *)(v131 + 4 * (*(_DWORD *)(v55 - 124) ^ 0x57u)) + 1608812664;
  HIDWORD(v374) = 181304767 * *(_DWORD *)(v131 + 4 * (v513 ^ 6u)) + 1608812664;
  HIDWORD(v372) = 181304767 * v196 + 1608812664;
  HIDWORD(v373) = 181304767 * v197 + 1608812664;
  LODWORD(v374) = 181304767 * v58 + 1608812664;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = (181304767 * v198
                - 2 * ((181304767 * v198 + 535070840) & *(_DWORD *)(v55 - 208) ^ (181304767 * v198) & 1)
                - 1614687948) ^ *(_DWORD *)(v130 + 4 * (v515 ^ 0x7B));
  LODWORD(v131) = *(_DWORD *)&v127[4 * (BYTE2(v517) ^ 0x21)] ^ ((BYTE2(v517) ^ 0xC)
                                                              + 12039717
                                                              + (*(_DWORD *)(v55 - 200) ^ (2
                                                                                         * (((BYTE2(v517) ^ 0xC) + 44) & 0xFFFFFFF9 ^ (HIWORD(v517) | 0x7FFFFFFE))))) ^ (181304767 * *(_DWORD *)(v131 + 4 * (v517 ^ 0x56u)) + 1608812664);
  LODWORD(v131) = (v131 - ((2 * v131) & 0x52E2378C) - 1452205114) ^ *(_DWORD *)&v128[4 * (BYTE1(v517) ^ 0xA1)];
  unsigned int v200 = *(_DWORD *)&v127[4 * (BYTE2(v193) ^ 0x3C)] ^ ((BYTE2(v193) ^ 0x11)
                                                     + 12039717
                                                     + ((2
                                                       * (((BYTE2(v193) ^ 0x11) + 44) & 0xFFFFFFFB ^ (BYTE2(v193) ^ 0x11 | 0x7FFFFFFC))) ^ 0x1809407));
  LODWORD(v63) = (181304767 * v199 + 1608812664) ^ ((BYTE2(v536) ^ 0x37)
                                                  + 12039717
                                                  + ((2
                                                    * (((BYTE2(v536) ^ 0x37) + 44) & 0x1FA ^ (BYTE2(v536) ^ 0x37 | 0xFFFFFFFD))) ^ 0x1809405)) ^ *(_DWORD *)&v127[4 * (BYTE2(v536) ^ 0x1A)];
  int v201 = v58 - ((2 * v58) & 0x52E2378C);
  LODWORD(v63) = (v63 - ((2 * v63) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)(v130 + 4 * (HIBYTE(v536) ^ 0xF9));
  LODWORD(v66) = v530 ^ 0x1A;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v55 - 248);
  HIDWORD(v375) = *(_DWORD *)&v127[4 * (v476 ^ 0x61)];
  *(_DWORD *)(v55 - 200) = *(_DWORD *)&v127[4 * (v389 ^ 0x8A)];
  *(_DWORD *)(v55 - 24_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)&v127[4 * (v379 ^ 0x48)];
  LODWORD(v380) = *(_DWORD *)&v127[4 * (v387 ^ 0xA2)];
  LODWORD(v390) = *(_DWORD *)&v127[4 * v371];
  int v477 = *(_DWORD *)&v127[4 * (v192 ^ 0xE)];
  *(_DWORD *)(v55 - 20_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)&v127[4 * (v58 ^ 0x1A)];
  LODWORD(v127) = ((v541 >> 15) & 0x58 ^ 0x48) + (v58 ^ 0x4C64A1B);
  int v531 = v127 - 68064263 + ((2 * ((unsigned __int16)v127 & 0x1FE ^ (v58 ^ 0x4C64A1B | 0x7FFFFFF9))) ^ 0x180940D);
  LODWORD(v372) = *(_DWORD *)&v128[4 * v485];
  int v486 = *(_DWORD *)&v128[4 * v378];
  int v542 = *(_DWORD *)&v128[4 * (BYTE1(v194) ^ 0x85)];
  LODWORD(v387) = *(_DWORD *)&v128[4 * (BYTE1(*(_DWORD *)(v55 - 160)) ^ 0xBD)];
  int v434 = *(_DWORD *)&v128[4 * (BYTE1(v433) ^ 0xB4)];
  HIDWORD(v377) = *(_DWORD *)&v128[4 * v66];
  HIDWORD(v370) = *(_DWORD *)&v128[4 * (((unsigned __int16)(v111 ^ 0x8EA4) >> 8) ^ 0x14)];
  *(_DWORD *)(v55 - 160) = *(_DWORD *)&v128[4 * v400];
  LODWORD(v127) = HIBYTE(*(_DWORD *)(v55 - 140)) ^ 0xA6;
  *(_DWORD *)(v55 - 184) = *(_DWORD *)&v128[4 * (BYTE1(*(_DWORD *)(v55 - 184)) ^ 0xD6)];
  int v410 = *(_DWORD *)&v128[4 * v381];
  LODWORD(a16) = *(_DWORD *)&v128[4 * (BYTE1(*(_DWORD *)(v55 - 176)) ^ 0xD7)];
  unsigned int v202 = *(_DWORD *)(v55 - 192);
  LODWORD(v370) = *(_DWORD *)&v128[4 * (BYTE1(v202) ^ 0x76)];
  int v203 = *(_DWORD *)&v128[4 * v376];
  int v510 = *(_DWORD *)&v128[4 * (v526 ^ 0xBE)];
  *(_DWORD *)(v55 - 176) = *(_DWORD *)&v128[4 * v459];
  *(_DWORD *)(v55 - 192) = *(_DWORD *)&v128[4 * v395];
  int v204 = v131 - ((2 * v131) & 0x7FBA9178);
  HIDWORD(v380) = *(_DWORD *)&v128[4 * v471];
  int v472 = *(_DWORD *)&v128[4 * v465];
  *(_DWORD *)(v55 - 240) = *(_DWORD *)&v128[4 * (*(_DWORD *)(v55 - 240) ^ 0x84)];
  int v460 = *(_DWORD *)&v128[4 * (BYTE1(v536) ^ 0x2E)];
  LODWORD(v12_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)&v128[4 * (v544 ^ 0xC8)];
  int v501 = v500 - 1452205114;
  int v497 = v496 - 1452205114;
  int v543 = v451 - 1452205114;
  HIDWORD(v394) = v447 - 1452205114;
  int v537 = v445 - 1452205114;
  LODWORD(v377) = v438 - 1452205114;
  HIDWORD(a3) = v423 - 1452205114;
  int v527 = v391 - 1452205114;
  int v466 = v418 - 1452205114;
  HIDWORD(v390) = v415 - 1452205114;
  LODWORD(v5_Block_object_dispose(&STACK[0x360], 8) = v385 - 1452205114;
  int v205 = v393 - 1452205114;
  unsigned int v448 = v493 - 1452205114;
  int v446 = v480 - 1452205114;
  int v481 = v468 - 1452205114;
  int v439 = v63 - ((2 * v63) & 0x52E2378C) - 1452205114;
  int v494 = *(_DWORD *)(v130 + 4 * v507);
  LODWORD(v131) = v128 ^ (v200 - ((2 * v200) & 0x52E2378C) - 1452205114);
  int v424 = *(_DWORD *)(v130 + 4 * (*(_DWORD *)(v55 - 224) ^ 7u));
  HIDWORD(v383) = *(_DWORD *)(v130 + 4 * (HIBYTE(*(_DWORD *)(v55 - 128)) ^ 2u));
  LODWORD(v394) = *(_DWORD *)(v130 + 4 * v127);
  LODWORD(v12_Block_object_dispose(&STACK[0x360], 8) = HIBYTE(v411);
  int v412 = *(_DWORD *)(v130 + 4 * (HIBYTE(*(_DWORD *)(v55 - 124)) ^ 0xB8u));
  int v419 = *(_DWORD *)(v130 + 4 * v128);
  int v416 = *(_DWORD *)(v130 + 4 * v402);
  int v469 = *(_DWORD *)(v130 + 4 * v456);
  int v457 = *(_DWORD *)(v130 + 4 * (HIBYTE(v399) ^ 0xE8));
  int v206 = *(_DWORD *)(v130 + 4 * (HIBYTE(v202) ^ 0xA6));
  int v207 = *(_DWORD *)(v130 + 4 * HIBYTE(v397));
  int v403 = *(_DWORD *)(v130 + 4 * (*(_DWORD *)(v55 - 232) ^ 0xAAu));
  int v208 = *(_DWORD *)(v130 + 4 * HIBYTE(v463));
  int v209 = *(_DWORD *)(v130 + 4 * (*(_DWORD *)(v55 - 256) ^ 0x38u));
  int v210 = *(_DWORD *)(v130 + 4 * HIBYTE(v503));
  LODWORD(v39_Block_object_dispose(&STACK[0x360], 8) = *(_DWORD *)(v130 + 4 * (HIBYTE(v517) ^ 0x33));
  *(_DWORD *)(v55 - 224) = *(_DWORD *)(v130 + 4 * HIBYTE(v193));
  int v211 = v511 + 1071466684;
  HIDWORD(v39_Block_object_dispose(&STACK[0x360], 8) = v453 + 1071466684;
  *(_DWORD *)(v55 - 232) = v406 + 1071466684;
  *(_DWORD *)(v55 - 256) = v437 + 1071466684;
  int v212 = v506 + 1071466684;
  int v213 = v204 + 1071466684;
  int v214 = v131 - ((2 * v131) & 0x7FBA9178) + 1071466684;
  int v215 = v525 ^ v524 ^ 0x6285F181;
  int v216 = v58 ^ v203 ^ v215;
  int v217 = *(_DWORD *)(v55 - 152);
  uint64_t v218 = (uint64_t)*(&off_1F34B17C0 + (v217 ^ 0x8Bu));
  uint64_t v219 = (uint64_t)*(&off_1F34B17C0 + (v217 & 0x9C68E4D));
  unsigned int v220 = v217 ^ 0xB4;
  unsigned int v221 = (char *)*(&off_1F34B17C0 + (v217 ^ 0x82u)) - 8;
  int v222 = (char *)*(&off_1F34B17C0 + v220) - 8;
  unsigned int v223 = (v222[*(unsigned __int8 *)(v55 - 109) ^ 0x41] ^ 0xAC) & 0xFF00FFFF | (((v221[*(unsigned __int8 *)(v55 - 111) ^ 0x40] + 65) ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v219 + (*(unsigned __int8 *)(v55 - 110) ^ 0xBBLL)) ^ 0x17) << 8) | ((*(unsigned __int8 *)(v218 + (*(unsigned __int8 *)(v55 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v55 - 112) - ((2 * *(unsigned __int8 *)(v55 - 112)) & 0x60) - 80) ^ 0x84) << 24);
  uint64_t v516 = v219;
  uint64_t v518 = v218;
  v512 = v222;
  v514 = v221;
  unsigned int v224 = (v222[*(unsigned __int8 *)(v55 - 105) ^ 0xE4] ^ 0x9A) & 0xFF00FFFF | ((*(unsigned __int8 *)(v218 + (*(unsigned __int8 *)(v55 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v55 - 108) - ((2 * *(unsigned __int8 *)(v55 - 108)) & 0x60) - 80) ^ 0xFFFFFFE1) << 24) | (((v221[*(unsigned __int8 *)(v55 - 107) ^ 0x27] + 65) ^ 0x96) << 16) | ((*(unsigned __int8 *)(v219 + (*(unsigned __int8 *)(v55 - 106) ^ 9)) ^ 0x12) << 8);
  unsigned int v225 = (v222[*(unsigned __int8 *)(v55 - 101) ^ 0xF2] ^ 0x23) & 0xFF00FFFF | ((*(unsigned __int8 *)(v218 + (*(unsigned __int8 *)(v55 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v55 - 104) - ((2 * *(unsigned __int8 *)(v55 - 104)) & 0x60) - 80) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v219 + (*(unsigned __int8 *)(v55 - 102) ^ 0xBELL)) ^ 0xB5) << 8) & 0xFF00FFFF | (((v221[*(unsigned __int8 *)(v55 - 103) ^ 0xE9] + 65) ^ 0x8A) << 16);
  int v226 = v216 ^ 0x2497E332;
  if ((v216 & 0x80) != 0) {
    int v227 = -128;
  }
  else {
    int v227 = 128;
  }
  *(_DWORD *)(v55 - 124) = (v222[*(unsigned __int8 *)(v55 - 97) ^ 0x74] ^ 0xB | (((v221[*(unsigned __int8 *)(v55 - 99) ^ 0xF3] + 65) ^ 2) << 16) | ((*(unsigned __int8 *)(v219 + (*(unsigned __int8 *)(v55 - 98) ^ 0x20)) ^ 0xFD) << 8) | ((*(unsigned __int8 *)(v218 + (*(unsigned __int8 *)(v55 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v55 - 100) - ((2 * *(unsigned __int8 *)(v55 - 100)) & 0x60) - 80) ^ 0x85) << 24)) ^ 0xC986DBB5;
  *(_DWORD *)(v55 - 12_Block_object_dispose(&STACK[0x360], 8) = v223 ^ 0x2F9EE9A0;
  *(_DWORD *)(v55 - 136) = v224 ^ 0xF6548A50;
  *(_DWORD *)(v55 - 140) = v225 ^ 0x5503756A;
  HIDWORD(v50_Block_object_dispose(&STACK[0x360], 8) = v205 ^ v510;
  LODWORD(v50_Block_object_dispose(&STACK[0x360], 8) = v206 ^ v421 ^ v370 ^ v380 ^ HIDWORD(v372);
  HIDWORD(v504) = (v408 + 1071466684) ^ v207;
  LODWORD(v504) = v373 ^ v372 ^ v501;
  HIDWORD(v499) = v497 ^ v486;
  LODWORD(v499) = v494 ^ v498 ^ HIDWORD(v375) ^ v211;
  HIDWORD(v495) = HIDWORD(a3) ^ HIDWORD(v370);
  LODWORD(v495) = v377 ^ HIDWORD(v377) ^ v488;
  HIDWORD(v489) = (v443 + 1071466684) ^ HIDWORD(v383) ^ v491;
  LODWORD(v489) = (v429 + 1071466684) ^ v394;
  HIDWORD(v484) = HIDWORD(v380) ^ v208 ^ *(_DWORD *)(v55 - 168) ^ v390 ^ HIDWORD(v373);
  LODWORD(v484) = v472 ^ v483 ^ v477 ^ v481;
  HIDWORD(v47_Block_object_dispose(&STACK[0x360], 8) = (v375 + 1071466684) ^ v210;
  LODWORD(v47_Block_object_dispose(&STACK[0x360], 8) = v475 ^ v209;
  HIDWORD(v473) = HIDWORD(v390) ^ a16;
  LODWORD(v473) = v457 ^ v427 ^ *(_DWORD *)(v55 - 248) ^ (HIDWORD(v387) + 1071466684);
  HIDWORD(v467) = v442 ^ v469;
  LODWORD(v467) = HIDWORD(v374) ^ v410 ^ v466;
  HIDWORD(v461) = v374 ^ *(_DWORD *)(v55 - 224) ^ v214;
  LODWORD(v461) = v439 ^ v460;
  HIDWORD(v454) = v213 ^ v398;
  LODWORD(v454) = *(_DWORD *)(v55 - 240) ^ *(_DWORD *)(v55 - 208) ^ v531 ^ (v201 - 1452205114);
  HIDWORD(v449) = v212 ^ v403;
  LODWORD(v449) = v448 ^ *(_DWORD *)(v55 - 176);
  HIDWORD(v444) = v446 ^ *(_DWORD *)(v55 - 192);
  LODWORD(v444) = HIDWORD(v394) ^ v387;
  HIDWORD(v440) = v543 ^ v542 ^ v383;
  LODWORD(v440) = v529 ^ v434 ^ v537;
  HIDWORD(v435) = v534 ^ v424 ^ HIDWORD(v398);
  LODWORD(v435) = v527 ^ *(_DWORD *)(v55 - 184);
  HIDWORD(v430) = *(_DWORD *)(v55 - 160) ^ v432 ^ v412 ^ *(_DWORD *)(v55 - 200) ^ v539;
  LODWORD(v430) = *(_DWORD *)(v55 - 256) ^ v416;
  HIDWORD(v425) = *(_DWORD *)(v55 - 232) ^ v419;
  LODWORD(v425) = *(_DWORD *)(v55 - 216) - 452949471;
  HIDWORD(v420) = (v227 + v226) ^ v215;
  int v228 = *(_DWORD *)(v55 - 120);
  LODWORD(v420) = v228 ^ 0x43C;
  HIDWORD(v413) = v228 ^ 0x413;
  LODWORD(v413) = v228 ^ 0x49F;
  HIDWORD(v409) = v228 ^ 0x4A2;
  LODWORD(v409) = v228 ^ 0x437;
  HIDWORD(v404) = v228 ^ 0x4B2;
  LODWORD(v404) = v228 ^ 0x499;
  int v229 = v228;
  uint64_t v230 = v228 ^ 0x414u;
  *(void *)(v55 - 176) = v230;
  unsigned __int8 v231 = v221[a49[v230] ^ 0xF3] + 65;
  *(void *)(v55 - 152) = 1;
  int v232 = (v231 ^ 2) << 16;
  uint64_t v233 = a49[1] ^ 0x57;
  *(void *)(v55 - 160) = 10;
  uint64_t v234 = a49[10] ^ 0xB6;
  int v235 = ((v221[v233] + 65) ^ 0xF6) << 16;
  *(void *)(v55 - 192) = 4;
  int v236 = (*(unsigned __int8 *)(v219 + v234) ^ 0x98) << 8;
  uint64_t v237 = a49[4];
  int v238 = *(unsigned __int8 *)(v218 + (v237 ^ 0x9A));
  *(void *)(v55 - 224) = 7;
  LODWORD(v237) = v238 ^ (v237 - ((2 * v237) & 0x60) - 80) ^ 0xFFFFFFCF;
  uint64_t v239 = a49[7] ^ 0xD6;
  *(void *)(v55 - 216) = 2;
  LODWORD(v237) = v512[v239] ^ 0xC9 | (v237 << 24);
  LODWORD(v239) = *(unsigned __int8 *)(v219 + a49[2]);
  *(void *)(v55 - 200) = 3;
  unsigned int v240 = v235 | ((v239 ^ 0x8A) << 8);
  LODWORD(v239) = v512[a49[3] ^ 0x74];
  *(void *)(v55 - 16_Block_object_dispose(&STACK[0x360], 8) = 12;
  int v241 = v240 | v239 ^ 0xB;
  LODWORD(v239) = *(unsigned __int8 *)(v218 + (a49[12] ^ 0x6ELL)) ^ (a49[12] - ((2 * a49[12]) & 0x60) - 80) ^ 0x51;
  *(void *)(v55 - 184) = 0;
  int v242 = v232 | (v239 << 24);
  LODWORD(v239) = *(unsigned __int8 *)(v218 + (*a49 ^ 0x15)) ^ (*a49 - ((2 * *a49) & 0x60) - 80) ^ 0xAE;
  uint64_t v243 = a49[8];
  int v244 = *(unsigned __int8 *)(v218 + (v243 ^ 0x46));
  *(void *)(v55 - 20_Block_object_dispose(&STACK[0x360], 8) = 14;
  int v245 = v242 | ((*(unsigned __int8 *)(v219 + (a49[14] ^ 0xD5)) ^ 2) << 8);
  *(void *)(v55 - 24_Block_object_dispose(&STACK[0x360], 8) = 11;
  *(void *)(v55 - 240) = 5;
  LODWORD(v237) = v237 & 0xFF00FFFF | (((v221[a49[5] ^ 0x9DLL] + 65) ^ 0xF7) << 16);
  unsigned int v246 = v512[a49[11] ^ 0xC2] ^ 0x2E | v236 | ((v244 ^ (v243
                                                                         - ((2 * v243) & 0x60)
                                                                         - 80) ^ 0xFFFFFFE7) << 24);
  *(void *)(v55 - 256) = 9;
  uint64_t v247 = a49[6] ^ 0xA4;
  unsigned int v248 = v246 & 0xFF00FFFF | (((v221[a49[9] ^ 0x3ELL] + 65) ^ 0xDF) << 16);
  *(void *)(v55 - 232) = 15;
  int v535 = v237 | ((*(unsigned __int8 *)(v516 + v247) ^ 0x52) << 8);
  uint64_t v249 = (uint64_t)*(&off_1F34B17C0 + v229 - 972);
  unsigned int v250 = (char *)*(&off_1F34B17C0 + (int)v420) - 8;
  unsigned int v251 = *(_DWORD *)&v250[4 * (((unsigned __int16)(v535 ^ v520) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v535 ^ v520) >> 8) ^ 0x4C)
                                                                                                 + 1780120389
                                                                                                 - ((2 * (((v535 ^ v520) >> 8) ^ 0xB71C4C)) & 0x8A));
  int v540 = v241 | (v239 << 24);
  unsigned int v252 = v540 ^ HIDWORD(v520) ^ 0x730032AA;
  int v253 = (v251 + 151039173 - ((2 * v251) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                    + 4
                                                                    * ((v241 ^ BYTE4(v520)) ^ 0xAAu));
  int v532 = v512[a49[15] ^ 0x47] ^ 0xB | v245;
  unsigned int v254 = ((((unsigned __int16)(v519 ^ v532) >> 8) ^ 0x81)
        + 1780120389
        - 2 * ((((v519 ^ v532) >> 8) ^ 0xB7E481) & 0x47 ^ ((v519 ^ v532) >> 8) & 2)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v519 ^ v532) >> 8) ^ 0xEC)];
  unsigned int v255 = v254 - 678652517 - ((2 * v254) & 0xAF192B36);
  uint64_t v256 = (uint64_t)*(&off_1F34B17C0 + (int)v413);
  int v257 = *(_DWORD *)(v256 + 4 * (((v248 ^ HIDWORD(v519)) >> 16) ^ 0x68u));
  HIDWORD(v259) = v257 ^ 0x3B;
  LODWORD(v259) = v257 ^ 0x8080A000;
  int v258 = v259 >> 12;
  int v260 = *(_DWORD *)(v256 + 4 * ((v540 ^ HIDWORD(v520)) >> 16));
  HIDWORD(v259) = v260 ^ 0x3B;
  LODWORD(v259) = v260 ^ 0x8080A000;
  unsigned int v261 = (char *)*(&off_1F34B17C0 + SHIDWORD(v413)) - 4;
  LODWORD(v234) = v253 - 678652517 - ((2 * v253) & 0xAF192B36);
  int v262 = *(_DWORD *)(v256 + 4 * (((v519 ^ v532) >> 16) ^ 0xE4u));
  int v263 = v255 ^ *(_DWORD *)&v261[4 * (((v535 ^ v520) >> 24) ^ 0xB7)] ^ (v259 >> 12);
  HIDWORD(v259) = v262 ^ 0x3B;
  LODWORD(v259) = v262 ^ 0x8080A000;
  int v264 = *(_DWORD *)(v249 + 4 * ((v535 ^ v520) ^ 0xFBu)) ^ (BYTE1(v248) ^ BYTE5(v519)) ^ *(_DWORD *)&v250[4 * ((BYTE1(v248) ^ BYTE5(v519)) ^ 0x23)] ^ 0x631AD7CE ^ (v259 >> 12);
  unsigned int v265 = v264 - 678652517 - ((2 * v264) & 0xAF192B36);
  LODWORD(v247) = *(_DWORD *)(v256 + 4 * (((v535 ^ v520) >> 16) ^ 0x1Cu));
  HIDWORD(v259) = v247 ^ 0x3B;
  LODWORD(v259) = v247 ^ 0x8080A000;
  LODWORD(v247) = *(_DWORD *)&v261[4 * (((v248 ^ HIDWORD(v519)) >> 24) ^ 0xF6)] ^ (BYTE1(v252)
                                                                                 + 1780120389
                                                                                 - (((v540 ^ HIDWORD(v520)) >> 7) & 0x8A)) ^ *(_DWORD *)&v250[4 * (BYTE1(v252) ^ 0x6D)] ^ ((v259 >> 12) - 678652517 - ((2 * (v259 >> 12)) & 0xAF192B36));
  LODWORD(v243) = HIDWORD(v508) ^ v258 ^ *(_DWORD *)&v261[4 * (((v519 ^ v532) >> 24) ^ 0xB7)] ^ v234;
  LODWORD(v247) = v508 ^ *(_DWORD *)(v249 + 4 * ((v519 ^ v532) ^ 0xF3u)) ^ (v247
                                                                                             + 151039173
                                                                                             - ((2 * v247) & 0x1201598A));
  unsigned int v266 = HIDWORD(v504) ^ *(_DWORD *)(v249 + 4 * ((v248 ^ BYTE4(v519)) ^ 0x5Fu)) ^ (v263 + 151039173 - ((2 * v263) & 0x1201598A));
  LODWORD(v239) = HIDWORD(v420) ^ *(_DWORD *)&v261[4 * HIBYTE(v252)] ^ v265;
  unsigned int v267 = v243 ^ 0xF9388C2F;
  int v268 = *(_DWORD *)(v256 + 4 * ((v243 ^ 0xF9388C2F) >> 16));
  HIDWORD(v259) = v268 ^ 0x3B;
  LODWORD(v259) = v268 ^ 0x8080A000;
  int v269 = v259 >> 12;
  int v270 = *(_DWORD *)(v256 + 4 * (BYTE2(v247) ^ 0xD4u));
  HIDWORD(v259) = v270 ^ 0x3B;
  LODWORD(v259) = v270 ^ 0x8080A000;
  int v271 = v259 >> 12;
  int v272 = *(_DWORD *)(v256 + 4 * (BYTE2(v266) ^ 0x66u));
  HIDWORD(v259) = v272 ^ 0x3B;
  LODWORD(v259) = v272 ^ 0x8080A000;
  LODWORD(v234) = (v259 >> 12) ^ *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 5)] ^ ((BYTE1(v239) ^ 0x68)
                                                                          + 1780120389
                                                                          - 2
                                                                          * (((v239 >> 8) ^ 0x42BD68) & 0x57 ^ (v239 >> 8) & 0x12));
  int v273 = (v269 + 151039173 - ((2 * v269) & 0x1201598A)) ^ *(_DWORD *)(v249 + 4 * (v266 ^ 0xB6u));
  LODWORD(v234) = (v234 + 151039173 - ((2 * v234) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                             + 4 * (v243 ^ 0x61u));
  LODWORD(v243) = (((unsigned __int16)(v243 ^ 0x8C2F) >> 8)
                 + 1780120389
                 - (((v243 ^ 0xF9388C2F) >> 7) & 0x8A)) ^ 0xD678EAEF ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v243 ^ 0x8C2F) >> 8) ^ 0x6D)];
  int v274 = *(_DWORD *)&v261[4 * (HIBYTE(v266) ^ 0x43)] ^ 0x7596CE25;
  LODWORD(v243) = v243 + v274 - 2 * (v243 & v274);
  int v275 = *(_DWORD *)(v256 + 4 * (BYTE2(v239) ^ 0xBDu));
  HIDWORD(v259) = v275 ^ 0x3B;
  LODWORD(v259) = v275 ^ 0x8080A000;
  unsigned int v276 = *(_DWORD *)&v261[4 * HIBYTE(v267)] ^ (v271 - 678652517 - ((2 * v271) & 0xAF192B36));
  int v277 = (v276 + 151039173 - ((2 * v276) & 0x1201598A)) ^ *(_DWORD *)(v249 + 4 * (v239 ^ 0xABu));
  LODWORD(v239) = *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0x42)] ^ v525 ^ *(_DWORD *)&v250[4 * (BYTE1(v247) ^ 0xA5)] ^ ((BYTE1(v247) ^ 0xC8) + 1780120389 - ((2 * ((v247 >> 8) ^ 0x43D4C8)) & 0x8A)) ^ (v273 - 678652517 - ((2 * v273) & 0xAF192B36));
  LOBYTE(v272) = BYTE1(v266) ^ 0x54;
  unsigned int v278 = v504 ^ *(_DWORD *)&v250[4 * (BYTE1(v266) ^ 0x39)] ^ (v277 + 1780120389 - ((2 * v277) & 0xD434F68A));
  int v279 = HIDWORD(v499) ^ *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0x43)] ^ (v234 - 678652517 - ((2 * v234) & 0xAF192B36));
  unsigned int v280 = v499 ^ *(_DWORD *)(v249 + 4 * (v247 ^ 0x12u)) ^ ((v243 ^ (v259 >> 12))
                                                                           + 151039173
                                                                           - ((2 * (v243 ^ (v259 >> 12))) & 0x1201598A));
  LODWORD(v234) = *(_DWORD *)(v256 + 4 * (BYTE2(v280) ^ 0x79u));
  HIDWORD(v259) = v234 ^ 0x3B;
  LODWORD(v259) = v234 ^ 0x8080A000;
  BYTE1(v247) = BYTE1(v279) ^ 0x68;
  int v281 = ((v259 >> 12) - 678652517 - ((2 * (v259 >> 12)) & 0xAF192B36)) ^ *(_DWORD *)&v261[4
                                                                                         * ((v279 ^ 0x2261685Eu) >> 24)];
  LODWORD(v234) = ((BYTE1(v280) ^ 0xD0) + 1780120389 - ((2 * ((v280 >> 8) ^ 0x679D0)) & 0x8A)) ^ *(_DWORD *)&v250[4 * (BYTE1(v280) ^ 0xBD)];
  LODWORD(v234) = (v234 + 151039173 - ((2 * v234) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                             + 4 * (v239 ^ 0x76u));
  int v282 = ((BYTE1(v278) ^ 0xEC) + 1780120389 - ((2 * ((v278 >> 8) ^ 0xE5FEC)) & 0x8A)) ^ *(_DWORD *)&v250[4 * (BYTE1(v278) ^ 0x81)];
  LODWORD(v243) = *(_DWORD *)(v256 + 4 * (BYTE2(v278) ^ 0x5Fu));
  HIDWORD(v259) = v243 ^ 0x3B;
  LODWORD(v259) = v243 ^ 0x8080A000;
  LODWORD(v243) = v259 >> 12;
  HIDWORD(v259) = *(_DWORD *)(v249 + 4 * (v279 ^ 0x5Eu)) ^ 0xE0178B4D;
  LODWORD(v259) = HIDWORD(v259);
  int v283 = (v259 >> 28) ^ __ROR4__(*(_DWORD *)&v261[4 * (HIBYTE(v280) ^ 6)] ^ 0x7462B151 ^ (v282- 678652517- ((2 * v282) & 0xAF192B36)), 28);
  LODWORD(v243) = (v243 - 678652517 - ((2 * v243) & 0xAF192B36)) ^ *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0xD2)];
  LODWORD(v243) = (v243 + 151039173 - ((2 * v243) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                             + 4 * (v280 ^ 0x4Cu));
  int v284 = *(_DWORD *)(v256 + 4 * (BYTE2(v279) ^ 0x1Bu));
  HIDWORD(v259) = v284 ^ 0x3B;
  LODWORD(v259) = v284 ^ 0x8080A000;
  int v285 = v259 >> 12;
  int v286 = *(_DWORD *)(v256 + 4 * (BYTE2(v239) ^ 0xCCu));
  HIDWORD(v259) = v286 ^ 0x3B;
  LODWORD(v259) = v286 ^ 0x8080A000;
  int v287 = HIDWORD(a3) ^ HIDWORD(v370) ^ (v259 >> 12) ^ __ROR4__(v283 ^ 0x78071371, 4);
  LOBYTE(v283) = v278 ^ v272;
  unsigned int v288 = v495 ^ *(_DWORD *)&v261[4 * (HIBYTE(v278) ^ 0xE)] ^ v285 ^ (v234 - 678652517 - ((2 * v234) & 0xAF192B36));
  LODWORD(v234) = BYTE1(v247);
  LODWORD(v247) = HIDWORD(v489) ^ *(_DWORD *)&v250[4 * (BYTE1(v247) ^ 0x6D)] ^ (v243
                                                                              + 1780120389
                                                                              - ((2 * v243) & 0xD434F68A));
  unsigned int v289 = v489 ^ ((BYTE1(v239) ^ 0xC0)
               + 1780120389
               - 2 * (((v239 >> 8) ^ 0xD2CCC0) & 0x47 ^ (v239 >> 8) & 2)) ^ *(_DWORD *)(v249 + 4 * (v283 ^ 0xCAu)) ^ *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 0xAD)] ^ (v281 + 151039173 - ((2 * v281) & 0x1201598A));
  unsigned int v290 = v234 ^ 0x4552953C ^ v247;
  LODWORD(v234) = *(_DWORD *)(v256 + 4 * BYTE2(v290));
  HIDWORD(v259) = v234 ^ 0x3B;
  LODWORD(v259) = v234 ^ 0x8080A000;
  int v291 = v259 >> 12;
  BYTE1(v239) = BYTE1(v287) ^ 0xE7;
  LODWORD(v243) = *(_DWORD *)(v256 + 4 * ((v287 ^ 0x99FEE750) >> 16));
  HIDWORD(v259) = v243 ^ 0x3B;
  LODWORD(v259) = v243 ^ 0x8080A000;
  LODWORD(v230) = (BYTE1(v290) + 1780120389 - ((v290 >> 7) & 0x8A)) ^ *(_DWORD *)(v249
                                                                                + 4 * (v288 ^ 0x72u)) ^ *(_DWORD *)&v250[4 * (BYTE1(v290) ^ 0x6D)] ^ ((v259 >> 12) + 151039173 - ((2 * (v259 >> 12)) & 0x1201598A));
  int v292 = *(_DWORD *)(v256 + 4 * (BYTE2(v289) ^ 2u));
  HIDWORD(v259) = v292 ^ 0x3B;
  LODWORD(v259) = v292 ^ 0x8080A000;
  int v293 = *(_DWORD *)(v249 + 4 * v290) ^ *(_DWORD *)&v261[4 * (HIBYTE(v288) ^ 0xA7)] ^ (v259 >> 12) ^ 0xDE8C395E;
  int v294 = *(_DWORD *)(v256 + 4 * (BYTE2(v288) ^ 0x3Bu));
  HIDWORD(v259) = v294 ^ 0x3B;
  LODWORD(v259) = v294 ^ 0x8080A000;
  LODWORD(v234) = HIDWORD(v484) ^ ((BYTE1(v289) ^ 0xD9) + 1780120389 - ((2 * ((v289 >> 8) ^ 0x9802D9)) & 0x8A)) ^ *(_DWORD *)(v249 + 4 * (v287 ^ 0x1Eu)) ^ *(_DWORD *)&v250[4 * (BYTE1(v289) ^ 0xB4)] ^ (v259 >> 12) ^ *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0x61)];
  LODWORD(v247) = v484 ^ *(_DWORD *)&v261[4 * (HIBYTE(v289) ^ 0x98)] ^ (v230 - 678652517 - ((2 * v230) & 0xAF192B36));
  LODWORD(v230) = v293 + 1780120389 - ((2 * v293) & 0xD434F68A);
  int v295 = *(_DWORD *)(v256 + 4 * (BYTE2(v234) ^ 0xC6u));
  HIDWORD(v259) = v295 ^ 0x3B;
  LODWORD(v259) = v295 ^ 0x8080A000;
  int v296 = v259 >> 12;
  int v297 = *(_DWORD *)&v250[4 * (((unsigned __int16)(v287 ^ 0xE750) >> 8) ^ 0x6D)];
  unsigned int v298 = HIDWORD(v478) ^ ((BYTE1(v288) ^ 0x29) + 1780120389 - ((2 * ((v288 >> 8) ^ 0xA73B29)) & 0x8A)) ^ *(_DWORD *)(v249 + 4 * (v289 ^ 0x3Du)) ^ *(_DWORD *)&v261[4 * ((v287 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v250[4 * (BYTE1(v288) ^ 0x44)] ^ v291;
  int v299 = v478 ^ v297;
  int v300 = *(_DWORD *)(v256 + 4 * (BYTE2(v298) ^ 0x64u));
  unsigned int v301 = v299 ^ v230;
  HIDWORD(v259) = v300 ^ 0x3B;
  LODWORD(v259) = v300 ^ 0x8080A000;
  int v302 = BYTE1(v298) ^ 0xC6;
  int v303 = v302 + 1780120389 - ((2 * ((v298 >> 8) ^ 0xB64C6)) & 0x8A);
  LOBYTE(v299) = v234 ^ 0x84;
  LODWORD(v230) = *(_DWORD *)(v249 + 4 * ((v301 ^ BYTE1(v239)) ^ 0x41u)) ^ (((unsigned __int16)(v234 ^ 0xF284) >> 8)
                                                                                             + 1780120389
                                                                                             - (((v234 ^ 0xDEBCF284) >> 7) & 0x8A)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v234 ^ 0xF284) >> 8) ^ 0x6D)] ^ ((v259 >> 12) + 151039173 - ((2 * (v259 >> 12)) & 0x1201598A));
  int v304 = *(_DWORD *)(v256 + 4 * (BYTE2(v301) ^ 0x81u));
  HIDWORD(v259) = v304 ^ 0x3B;
  LODWORD(v259) = v304 ^ 0x8080A000;
  LODWORD(v234) = ((v259 >> 12) - 678652517 - ((2 * (v259 >> 12)) & 0xAF192B36)) ^ *(_DWORD *)&v261[4 * ((v234 ^ 0xDEBCF284) >> 24)];
  LODWORD(v234) = (v234 + 151039173 - ((2 * v234) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                             + 4 * (v298 ^ 0x5Bu));
  int v305 = ((BYTE1(v301) ^ 0xA0) + 1780120389 - ((v301 >> 7) & 0x8A)) ^ (v296 + 151039173 - ((2 * v296) & 0x1201598A)) ^ *(_DWORD *)(v249 + 4 * (v247 ^ 0xFCu)) ^ *(_DWORD *)&v250[4 * (BYTE1(v301) ^ 0xCD)];
  unsigned int v306 = *(_DWORD *)(v256 + 4 * (BYTE2(v247) ^ 0xC6u));
  LODWORD(v259) = __ROR4__((v306 >> 12) ^ 0x265D528, 17) ^ 0xEE910136;
  HIDWORD(v259) = v259;
  unsigned int v307 = HIDWORD(v390) ^ a16 ^ *(_DWORD *)&v250[4 * (BYTE1(v247) ^ 0x75)] ^ (v234
                                                                           + 1780120389
                                                                           - ((2 * v234) & 0xD434F68A));
  LODWORD(v239) = v473 ^ *(_DWORD *)&v261[4 * (HIBYTE(v298) ^ 0xB)] ^ (v305 - 678652517 - ((2 * v305) & 0xAF192B36));
  int v308 = HIDWORD(v467) ^ *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0x5A)] ^ (v230 - 678652517 - ((2 * v230) & 0xAF192B36));
  unsigned int v309 = v467 ^ v303 ^ *(_DWORD *)(v249 + 4 * v299) ^ *(_DWORD *)&v261[4 * (HIBYTE(v301) ^ 0x68)] ^ *(_DWORD *)&v250[4 * (v302 ^ 0x6D)] ^ ((v259 >> 15) + (v306 << 20));
  LODWORD(v230) = ((BYTE1(v307) ^ 0x9D) + 1780120389 - ((2 * ((v307 >> 8) ^ 0xC2489D)) & 0x8A)) ^ *(_DWORD *)&v250[4 * (BYTE1(v307) ^ 0xF0)];
  unsigned int v310 = *(_DWORD *)(v256 + 4 * (BYTE2(v239) ^ 0x8Fu));
  int v311 = *(_DWORD *)(v256 + 4 * ((v308 ^ 0xCFB8D782) >> 16));
  HIDWORD(v259) = v311 ^ 0x3B;
  LODWORD(v259) = v311 ^ 0x8080A000;
  LODWORD(v230) = *(_DWORD *)(v249 + 4 * (v309 ^ 0xD4u)) ^ (v310 << 20) ^ (v310 >> 12) ^ 0x3B8080A ^ (v230 + 151039173 - ((2 * v230) & 0x1201598A));
  LODWORD(v234) = ((v259 >> 12) + 151039173 - ((2 * (v259 >> 12)) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                                             + 4
                                                                                             * ((v307 ^ BYTE1(v247)) ^ 0x3Fu));
  int v312 = v230 - 678652517 - ((2 * v230) & 0xAF192B36);
  LODWORD(v230) = v234 - 678652517 - ((2 * v234) & 0xAF192B36);
  LODWORD(v234) = (BYTE1(v239) ^ 0xD9) + 1780120389 - ((2 * ((v239 >> 8) ^ 0xC78FD9)) & 0x8A);
  LODWORD(v247) = *(_DWORD *)(v256 + 4 * (BYTE2(v307) ^ 0x48u));
  HIDWORD(v259) = v247 ^ 0x3B;
  LODWORD(v259) = v247 ^ 0x8080A000;
  int v313 = ((BYTE1(v309) ^ 0x59) + 1780120389 - ((2 * ((v309 >> 8) ^ 0xFBB759)) & 0x8A)) ^ *(_DWORD *)(v249 + 4 * (v308 ^ 0xCCu)) ^ *(_DWORD *)&v250[4 * (BYTE1(v309) ^ 0x34)] ^ ((v259 >> 12) + 151039173 - ((2 * (v259 >> 12)) & 0x1201598A));
  int v314 = *(_DWORD *)(v256 + 4 * (BYTE2(v309) ^ 0xB7u));
  HIDWORD(v259) = v314 ^ 0x3B;
  LODWORD(v259) = v314 ^ 0x8080A000;
  LODWORD(v247) = HIDWORD(v461) ^ (((unsigned __int16)(v308 ^ 0xD782) >> 8)
                                 + 1780120389
                                 - (((v308 ^ 0xCFB8D782) >> 7) & 0x8A)) ^ *(_DWORD *)(v249
                                                                                    + 4
                                                                                    * (v239 ^ 0x50u)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v308 ^ 0xD782) >> 8) ^ 0x6D)] ^ *(_DWORD *)&v261[4 * (HIBYTE(v307) ^ 0xC2)] ^ (v259 >> 12);
  unsigned int v315 = v461 ^ *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0xC7)] ^ (v313 - 678652517 - ((2 * v313) & 0xAF192B36));
  int v316 = *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 0xB4)];
  LODWORD(v239) = HIDWORD(v454) ^ *(_DWORD *)&v261[4 * ((v308 ^ 0xCFB8D782) >> 24)] ^ v312;
  unsigned int v317 = v454 ^ v234 ^ v316 ^ *(_DWORD *)&v261[4 * (HIBYTE(v309) ^ 0xFB)] ^ v230;
  unsigned int v318 = (((unsigned __int16)(v317 ^ 0xCCA2) >> 8) + 1780120389 - (((v317 ^ 0x33C8CCA2) >> 7) & 0x8A)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v317 ^ 0xCCA2) >> 8) ^ 0x6D)];
  int v319 = *(_DWORD *)(v256 + 4 * (BYTE2(v315) ^ 0xE6u));
  HIDWORD(v259) = v319 ^ 0x3B;
  LODWORD(v259) = v319 ^ 0x8080A000;
  int v320 = v259 >> 12;
  int v321 = *(_DWORD *)(v256 + 4 * (BYTE2(v239) ^ 0x1Cu));
  HIDWORD(v259) = v321 ^ 0x3B;
  LODWORD(v259) = v321 ^ 0x8080A000;
  LODWORD(v230) = (v259 >> 12) ^ *(_DWORD *)&v250[4 * (BYTE1(v315) ^ 0xD9)] ^ ((BYTE1(v315) ^ 0xB4)
                                                                             + 1780120389
                                                                             - ((2 * ((v315 >> 8) ^ 0x4FE6B4)) & 0x8A));
  LODWORD(v230) = (v230 + 151039173 - ((2 * v230) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                             + 4 * (v247 ^ 0xB4u));
  int v322 = (v318 + 151039173 - ((2 * v318) & 0x1201598A)) ^ *(_DWORD *)(v249 + 4 * (v239 ^ 0x3Au));
  HIDWORD(v259) = *(_DWORD *)(v249 + 4 * (v315 ^ 0x96u)) ^ 0x900ACC5;
  LODWORD(v259) = *(_DWORD *)(v249 + 4 * (v315 ^ 0x96u));
  HIDWORD(v259) = (v259 >> 29) ^ 0x6615DA09;
  LODWORD(v259) = HIDWORD(v259);
  unsigned int v323 = *(_DWORD *)(v249 + 4 * (v317 ^ 0xA2u)) ^ (((unsigned __int16)(v247 ^ 0x2DB4) >> 8)
                                                                    + 1780120389
                                                                    - (((v247 ^ 0xC7BF2DB4) >> 7) & 0x8A)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v247 ^ 0x2DB4) >> 8) ^ 0x6D)] ^ (v320 + 151039173 - ((2 * v320) & 0x1201598A));
  int v324 = (v259 >> 3) + 1780120389 - ((2 * (v259 >> 3)) & 0xD434F68A);
  LODWORD(v234) = *(_DWORD *)(v256 + 4 * ((v247 ^ 0xC7BF2DB4) >> 16));
  HIDWORD(v259) = v234 ^ 0x3B;
  LODWORD(v259) = v234 ^ 0x8080A000;
  LODWORD(v234) = v259 >> 12;
  int v325 = *(_DWORD *)(v256 + 4 * ((v317 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v259) = v325 ^ 0x3B;
  LODWORD(v259) = v325 ^ 0x8080A000;
  unsigned int v326 = HIDWORD(v449) ^ *(_DWORD *)&v261[4 * (HIBYTE(v317) ^ 0x17)] ^ (v230 - 678652517 - ((2 * v230) & 0xAF192B36));
  int v327 = BYTE1(v239);
  LODWORD(v230) = v324 ^ *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 0xD1)] ^ (v259 >> 12);
  unsigned int v328 = v449 ^ *(_DWORD *)&v261[4 * (HIBYTE(v315) ^ 0x4F)] ^ v234 ^ (v322 - 678652517 - ((2 * v322) & 0xAF192B36));
  LODWORD(v239) = HIDWORD(v444) ^ *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0x1B)] ^ (v323
                                                                              - 678652517
                                                                              - ((2 * v323) & 0xAF192B36));
  LODWORD(v234) = *(_DWORD *)(v256 + 4 * (BYTE2(v239) ^ 0x7Eu));
  HIDWORD(v259) = v234 ^ 0x3B;
  LODWORD(v259) = v234 ^ 0x8080A000;
  int v329 = v259 >> 12;
  LODWORD(v234) = *(_DWORD *)(v256 + 4 * (BYTE2(v328) ^ 1u));
  HIDWORD(v259) = v234 ^ 0x3B;
  LODWORD(v259) = v234 ^ 0x8080A000;
  LODWORD(v247) = *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0xE3)] ^ v524 ^ (v230 - 678652517 - ((2 * v230) & 0xAF192B36));
  LODWORD(v230) = ((v259 >> 12) + 151039173 - ((2 * (v259 >> 12)) & 0x1201598A)) ^ *(_DWORD *)(v249
                                                                                             + 4
                                                                                             * (v326 ^ 0xC6u));
  LODWORD(v234) = ((BYTE1(v326) ^ 0x71) + 1780120389 - 2 * (((v326 >> 8) ^ 0xF25B71) & 0x4F ^ (v326 >> 8) & 0xA)) ^ *(_DWORD *)&v250[4 * (BYTE1(v326) ^ 0x1C)];
  int v330 = *(_DWORD *)(v256 + 4 * (BYTE2(v326) ^ 0x5Bu));
  HIDWORD(v259) = v330 ^ 0x3B;
  LODWORD(v259) = v330 ^ 0x8080A000;
  int v331 = v259 >> 12;
  LODWORD(v234) = (v234 - 678652517 - ((2 * v234) & 0xAF192B36)) ^ *(_DWORD *)&v261[4 * (HIBYTE(v328) ^ 0x1F)];
  unsigned int v332 = v327 ^ 0x73F4E0AF ^ v247;
  int v333 = *(_DWORD *)(v256 + 4 * BYTE2(v332));
  HIDWORD(v259) = v333 ^ 0x3B;
  LODWORD(v259) = v333 ^ 0x8080A000;
  int v334 = v259 >> 12;
  HIDWORD(v259) = v329 ^ ((BYTE1(v328) ^ 0x81) + 1780120389 - 2 * (((v328 >> 8) ^ 0x1F0181) & 0x47 ^ (v328 >> 8) & 2)) ^ 0xD678EAEF ^ *(_DWORD *)&v250[4 * (BYTE1(v328) ^ 0xEC)];
  LODWORD(v259) = HIDWORD(v259);
  LODWORD(v259) = (v259 >> 11) ^ __ROR4__(*(_DWORD *)&v261[4 * (HIBYTE(v326) ^ 0xF2)] ^ 0x7596CE25, 11) ^ 0xD490839A;
  HIDWORD(v259) = v259;
  LODWORD(v247) = HIDWORD(v394) ^ v387 ^ *(_DWORD *)(v249 + 4 * (v328 ^ 0xB8u)) ^ ((BYTE1(v239) ^ 0xAA) + 1780120389 - ((v239 >> 7) & 0x8A)) ^ *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0x57)] ^ *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 0xC7)] ^ v331;
  unsigned int v335 = HIDWORD(v440) ^ (BYTE1(v332) + 1780120389 - ((v332 >> 7) & 0x8A)) ^ *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0x96)] ^ *(_DWORD *)&v250[4 * (BYTE1(v332) ^ 0x6D)] ^ (v230 - 678652517 - ((2 * v230) & 0xAF192B36));
  LODWORD(v230) = v440 ^ *(_DWORD *)(v249 + 4 * (v239 ^ 0x88u)) ^ v334 ^ (v234
                                                                                           + 151039173
                                                                                           - ((2 * v234) & 0x1201598A));
  LODWORD(v239) = HIDWORD(v435) ^ *(_DWORD *)(v249 + 4 * v332) ^ ((v259 >> 21)
                                                                                   + 151039173
                                                                                   - ((2 * (v259 >> 21)) & 0x1201598A));
  BYTE2(v334) = BYTE2(v230) ^ 0x4A;
  int v336 = *(_DWORD *)(v256 + 4 * (BYTE2(v247) ^ 0x67u));
  HIDWORD(v259) = v336 ^ 0x3B;
  LODWORD(v259) = v336 ^ 0x8080A000;
  int v337 = v259 >> 12;
  int v338 = *(_DWORD *)&v250[4 * (BYTE1(v335) ^ 0x96)] ^ ((BYTE1(v335) ^ 0xFB)
                                                     + 1780120389
                                                     - ((2 * ((v335 >> 8) ^ 0x3EA2FB)) & 0x8A));
  int v339 = (v338 + 151039173 - ((2 * v338) & 0x1201598A)) ^ *(_DWORD *)(v249 + 4 * (v230 ^ 0x75u));
  LODWORD(v243) = *(_DWORD *)(v256 + 4 * (BYTE2(v335) ^ 0xA2u));
  HIDWORD(v259) = v243 ^ 0x3B;
  LODWORD(v259) = v243 ^ 0x8080A000;
  LODWORD(v234) = (((unsigned __int16)(v230 ^ 0xF075) >> 8)
                 + 1780120389
                 - (((v230 ^ 0xB54AF075) >> 7) & 0x8A)) ^ (v259 >> 12) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v230 ^ 0xF075) >> 8) ^ 0x6D)];
  LODWORD(v230) = *(_DWORD *)&v261[4 * (BYTE3(v230) ^ 0x91)];
  int v340 = *(_DWORD *)&v261[4 * (HIBYTE(v335) ^ 0x3E)];
  LODWORD(v234) = (v234 - 678652517 - ((2 * v234) & 0xAF192B36)) ^ *(_DWORD *)&v261[4 * (BYTE3(v239) ^ 0xED)];
  LODWORD(v261) = *(_DWORD *)&v261[4 * (BYTE3(v247) ^ 0x19)];
  LODWORD(v239) = v239 ^ 0xC9AF1D8F;
  LODWORD(v243) = *(_DWORD *)(v249 + 4 * v239);
  int v341 = *(_DWORD *)(v249 + 4 * (v335 ^ 0x9Au));
  unsigned int v342 = BYTE1(v239) + 1780120389 - ((v239 >> 7) & 0x8A);
  int v343 = *(_DWORD *)(v249 + 4 * (v247 ^ 0x31u));
  unsigned int v344 = *(_DWORD *)(v256 + 4 * BYTE2(v239));
  LODWORD(v249) = *(_DWORD *)(v256 + 4 * BYTE2(v334));
  HIDWORD(v259) = v249 ^ 0x3B;
  LODWORD(v259) = v249 ^ 0x8080A000;
  LODWORD(v249) = (v247 >> 8) ^ 0x1967F9;
  LODWORD(v247) = *(_DWORD *)&v250[4 * (BYTE1(v239) ^ 0x6D)];
  LODWORD(v239) = *(_DWORD *)&v250[4 * (v249 ^ 0x6D)];
  LODWORD(v256) = v249 + 1780120389 - ((2 * v249) & 0x8A);
  LODWORD(v249) = v435 ^ v341 ^ v337 ^ v230 ^ v342 ^ v247;
  LODWORD(v239) = HIDWORD(v430) ^ v256 ^ v340 ^ v239 ^ v243 ^ (v259 >> 12);
  LODWORD(v256) = v430 ^ v343 ^ (v234 + 151039173 - ((2 * v234) & 0x1201598A));
  unsigned int v345 = HIDWORD(v425) ^ v261 ^ (v344 >> 12) ^ (v344 << 20) ^ (v339 - 678652517 - ((2 * v339) & 0xAF192B36));
  v346 = (char *)*(&off_1F34B17C0 + SHIDWORD(v409)) - 4;
  v347 = (char *)*(&off_1F34B17C0 + (int)v409) - 12;
  LODWORD(v261) = *(_DWORD *)&v346[4 * (v256 ^ 7)] ^ *(_DWORD *)&v347[4
                                                                                     * (((unsigned __int16)(WORD2(v425) ^ (unsigned __int16)v261 ^ (v344 >> 12) ^ (v339 - 27237 - ((2 * v339) & 0x2B36))) >> 8) ^ 0x2B)] ^ 0xE7C5D0AC;
  unsigned int v348 = v261 - 280369456 - ((2 * v261) & 0xDE93CDA0);
  LODWORD(v261) = *(_DWORD *)&v347[4 * (BYTE1(v249) ^ 0x48)];
  int v349 = *(_DWORD *)&v347[4 * ((unsigned __int16)(v256 ^ 0x6F07) >> 8)];
  int v350 = *(_DWORD *)&v347[4 * (BYTE1(v239) ^ 0x2F)];
  uint64_t v351 = (uint64_t)*(&off_1F34B17C0 + SHIDWORD(v404));
  LODWORD(v247) = *(_DWORD *)(v351 + 4 * (BYTE3(v256) ^ 0xEF));
  LODWORD(v230) = *(_DWORD *)(v351 + 4 * (BYTE3(v239) ^ 0xB6));
  int v352 = *(_DWORD *)(v351 + 4 * (HIBYTE(v345) ^ 0x9E));
  LODWORD(v351) = *(_DWORD *)(v351 + 4 * (BYTE3(v249) ^ 0xEF));
  uint64_t v353 = *(unsigned int *)(v55 - 120);
  uint64_t v354 = (uint64_t)*(&off_1F34B17C0 + (int)v353 - 993);
  int v355 = *(_DWORD *)(v354 + 4 * (BYTE2(v345) ^ 4u));
  int v356 = *(_DWORD *)(v354 + 4 * (BYTE2(v256) ^ 0x2Au));
  uint64_t v357 = *(unsigned int *)(v354 + 4 * (BYTE2(v239) ^ 0xAAu));
  LODWORD(v230) = (v230 ^ v348) - 946809757 - ((2 * (v230 ^ v348)) & 0x8F21A8C6);
  uint64_t v358 = *(unsigned int *)&v346[4 * (v249 ^ 0x82)];
  int v359 = *(_DWORD *)&v346[4 * (v239 ^ 3)];
  LODWORD(v230) = *(_DWORD *)(v354 + 4 * (BYTE2(v249) ^ 7u)) ^ v230;
  int v360 = *(_DWORD *)&v346[4 * (v345 ^ 0xD1)];
  unsigned int v361 = *(_DWORD *)(v55 - 140) ^ v521 ^ (v230 - ((2 * v230) & 0xAF03EFD0) - 679348248);
  v362 = (char *)*(&off_1F34B17C0 + (int)v353 - 961) - 4;
  a49[8] = v362[HIBYTE(v361) ^ 0xD7] ^ 0x64;
  LODWORD(v230) = ((v355 ^ 0x81CAC2F3 ^ v349) - 280369456 - ((2 * (v355 ^ 0x81CAC2F3 ^ v349)) & 0xDE93CDA0)) ^ v351;
  LODWORD(v230) = (v230 - 1583364548 - ((2 * v230) & 0x433F8C78)) ^ v359;
  LODWORD(v230) = *(_DWORD *)(v55 - 136) ^ HIDWORD(v521) ^ (v230 - ((2 * v230) & 0xE9AC11A4) + 1960184018);
  v363 = (char *)*(&off_1F34B17C0 + (int)v353 - 964) - 8;
  a49[*(void *)(v55 - 224)] = v363[v230 ^ 0xC7] ^ 0xDF;
  uint64_t v364 = (uint64_t)*(&off_1F34B17C0 + (int)v353 - 1031);
  LODWORD(v351) = *(unsigned __int8 *)(v364 + (BYTE1(v230) ^ 0x13));
  HIDWORD(v259) = v351 ^ 0x2A;
  LODWORD(v259) = (v351 ^ 0x80) << 24;
  a49[6] = (v259 >> 30) ^ 0x40;
  LODWORD(v351) = ((v358 ^ 0x660F125F ^ v356) - 280369456 - ((2 * (v358 ^ 0x660F125F ^ v356)) & 0xDE93CDA0)) ^ v352;
  LODWORD(v351) = (v351 - ((2 * v351) & 0x8CB42D20) + 1180309136) ^ v350;
  int v365 = *(_DWORD *)(v55 - 128);
  unsigned int v366 = v365 ^ HIDWORD(v522) ^ (v351 - ((2 * v351) & 0x5A38D644) - 1390646494);
  LODWORD(v351) = *(unsigned __int8 *)(v364
                                     + ((unsigned __int16)(v365 ^ WORD2(v522) ^ (v351
                                                                                                - ((2 * v351) & 0xD644)
                                                                                                + 27426)) >> 8));
  HIDWORD(v259) = v351 ^ 0x2A;
  LODWORD(v259) = (v351 ^ 0x80) << 24;
  a49[*(void *)(v55 - 216)] = (v259 >> 30) ^ 0x7E;
  uint64_t v367 = (uint64_t)*(&off_1F34B17C0 + (int)v404);
  a49[*(void *)(v55 - 256)] = *(unsigned char *)(v367 + (BYTE2(v361) ^ 0xFBLL)) ^ 0xAB;
  LODWORD(v261) = ((v247 ^ v261 ^ 0xA913F040)
                 - 946809757
                 - 2 * ((v247 ^ v261 ^ 0xA913F040) & 0x4790D47B ^ (v247 ^ v261) & 0x18)) ^ v357;
  LODWORD(v261) = (v261 - 1583364548 - ((2 * v261) & 0x433F8C78)) ^ v360;
  LODWORD(v261) = *(_DWORD *)(v55 - 124) ^ v522 ^ (v261 - ((2 * v261) & 0x9608B328) + 1258576276);
  a49[*(void *)(v55 - 176)] = *(unsigned char *)(v367 + (BYTE2(v261) ^ 0xB8)) ^ 0x78;
  a49[*(void *)(v55 - 248)] = v363[v361 ^ 0x1BLL] ^ 0xFD;
  a49[*(void *)(v55 - 240)] = *(unsigned char *)(v367 + (BYTE2(v230) ^ 3)) ^ 6;
  uint64_t v368 = *(void *)(v55 - 184);
  a49[*(void *)(v55 - 192)] = v362[BYTE3(v230) ^ 0x6DLL] ^ 0x9C;
  LODWORD(v230) = *(unsigned __int8 *)(v364 + (BYTE1(v361) ^ 0x92));
  HIDWORD(v259) = v230 ^ 0x2A;
  LODWORD(v259) = (v230 ^ 0x80) << 24;
  a49[*(void *)(v55 - 160)] = (v259 >> 30) ^ 0xD2;
  a49[v368] = v362[HIBYTE(v366) ^ 0x53] ^ 0x70;
  a49[*(void *)(v55 - 200)] = v363[v366 ^ 0x95] ^ 0x2F;
  a49[*(void *)(v55 - 232)] = v363[v261 ^ 0x64] ^ 0xA7;
  a49[*(void *)(v55 - 168)] = v362[(v261 >> 24) ^ 0x6ELL] ^ 0xE6;
  LODWORD(v230) = *(unsigned __int8 *)(v364 + (BYTE1(v261) ^ 0x1FLL));
  HIDWORD(v259) = v230 ^ 0x2A;
  LODWORD(v259) = (v230 ^ 0x80) << 24;
  a49[*(void *)(v55 - 208)] = (v259 >> 30) ^ 0x58;
  a49[*(void *)(v55 - 152)] = *(unsigned char *)(v367 + (BYTE2(v366) ^ 0xC8)) ^ 0x29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(a51 + 8 * ((244 * (((v368 - 1114563167 - ((2 * v368 + 32) & 0x7B223B42) + 16) ^ 0xBD911DA1) >= v425)) ^ ((int)v353 + 339))))(v367, 2711602748, 3348157539, v357, v364, v358, 1128238200, v353, a2, a3, v370, v372, v373, v374, v375, v377, v380, v383, v387,
           v390,
           v394,
           v398,
           a16,
           a17,
           a18,
           v404,
           v409,
           v413,
           v420,
           v425,
           v430,
           v435,
           v440,
           v444,
           v449,
           v454,
           v461,
           v467,
           v473,
           v478,
           v484,
           v489,
           v495,
           v499,
           v504,
           v508,
           v512,
           v514,
           v516,
           v518,
           v519,
           v520,
           v521,
           v522);
}

uint64_t sub_1DA714CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20,unsigned int a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  BOOL v37 = a21 > a19;
  unint64_t v38 = (a5 ^ HIDWORD(v35)) + HIDWORD(v36) + (*(_DWORD *)(a31 + a13) ^ v32);
  *(_DWORD *)(a31 + 4 * a14) = v38 + v32 - ((v38 << ((v31 - 73) ^ v31 ^ 0x4B ^ 0x33)) & v33);
  *(_DWORD *)(a31 + a13) = HIDWORD(v38) | v32;
  if (v37 == a26 - 1906929258 < -2140660369) {
    BOOL v37 = a26 - 1906929258 < a20;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * (v31 ^ (1577 * v37))))();
}

uint64_t sub_1DA714D80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((196
                                * (((v3 + 110) ^ (*(_DWORD *)(a1
                                                                             + 48
                                                                             * (int)((((v3 + 17965989) | 0x18C15658) ^ 0xDF59A797)
                                                                                   + v1)) == 1222884065)) & 1)) ^ v3)))();
}

uint64_t sub_1DA714DF0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2003
                                * (*(_DWORD *)(a1 + 48 * a2 + 36) + 1183504879 < (((v2 + 268438914) | 0x9D37048) ^ 0x99D37E7B))) ^ v2)))();
}

uint64_t sub_1DA714E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16
                         + 16
                         + ((2 * ((v17 - 128) & 0x78B54030) - (v17 - 128) - 2025144375) ^ 0x2ADD836C) * v15
                         - 686;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(void *)(v17 - 112) = &STACK[0x11127EB20C1B7546];
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 512)))(v17 - 128);
  *(_DWORD *)(v17 - 10_Block_object_dispose(&STACK[0x360], 8) = v16
                         + 16
                         + 1374699841 * ((2 * ((v17 - 128) & 0x3EE63A40) - (v17 - 128) + 1092208056) ^ 0x2CEDDDB1)
                         - 1277;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(void *)(v17 - 120) = a13;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 523)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 112) == 1271275120) * ((v16 - 437) ^ 0x46D)) ^ (v16 + 16))))(v18);
}

uint64_t sub_1DA714F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v27 - 100) = v21 + ((~((v27 - 120) | v24) + ((v27 - 120) & v24)) ^ 0x224F7943) * v25 - 234;
  *(void *)(v27 - 120) = a21;
  *(void *)(v27 - 112) = v22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v21 ^ 0x9F6)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1016 * (*(_DWORD *)(v27 - 104) != v26)) ^ v21)))(v28);
}

uint64_t sub_1DA715008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52)
{
  uint64_t v60 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v58 + 8 * (v53 + 1166)))(*v56, (v52 + v54 + 2), LODWORD(STACK[0x258]), v56[13] + (v53 ^ 0xA5E73057), &STACK[0x670], STACK[0x388], (v57 - 1116194070), &STACK[0x660]);
  unint64_t v62 = STACK[0x420];
  int v63 = (v60 ^ 0x3BFCDE6E) - 690225190 + ((2 * v60) & 0x77F9BCDC);
  if (v63 == 584638027) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58
  }
                                                       + 8
                                                       * ((67
                                                         * (LODWORD(STACK[0x2E8]) - 413196278 + LODWORD(STACK[0x25C]) < (LODWORD(STACK[0x24C]) - 1643))) | ((int)v62 + 1645))))(v60, v61);
  if (v63 == 316202568)
  {
    int v67 = v62 + 1533;
    int v68 = v57;
    unint64_t v69 = (unint64_t)v56;
    int v70 = v62 - 117;
    unint64_t v71 = STACK[0x420];
    (*(void (**)(void, unint64_t, void))(v58 + 8 * (int)(v62 ^ 0x93E)))(*(unsigned int *)STACK[0x2F0], STACK[0x388], (v68 - 1116194070));
    STACK[0x2C8] = v69;
    int v72 = *(_DWORD *)(v69 + 52);
    unint64_t v73 = STACK[0x520];
    unsigned int v74 = (LODWORD(STACK[0x4CC]) ^ 0xB94FDEBD) + 2146859004 + ((2 * LODWORD(STACK[0x4CC])) & 0x729FBD7A);
    int v75 = 1178560073 * ((((v59 - 192) | 0xBDAFA89A) - (v59 - 192) + ((v59 - 192) & 0x42505760)) ^ 0x1038943F);
    *(void *)(v59 - 144) = v55;
    *(_DWORD *)(v59 - 160) = v75 + 554979129 + v72;
    *(_DWORD *)(v59 - 156) = v74 ^ v75;
    *(_DWORD *)(v59 - 152) = v75
                           + (a52 & 0x7FFFFFFF ^ 0x514704F2)
                           + ((v67 ^ 0xF7FF7A0A) & a51 ^ 0x5571741A)
                           + 2133679486;
    *(_DWORD *)(v59 - 192) = v71 - v75 - 216;
    *(void *)(v59 - 184) = v73;
    *(void *)(v59 - 16_Block_object_dispose(&STACK[0x360], 8) = &STACK[0x660];
    uint64_t v76 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (int)(v71 ^ 0x90C)))(v59 - 192);
    int v77 = *(_DWORD *)(v59 - 176);
    LODWORD(STACK[0x530]) = v77;
    return (*(uint64_t (**)(uint64_t))(v58 + 8 * ((109 * (v77 == 2058996701)) ^ v70)))(v76);
  }
  else
  {
    int v64 = v62 - 213;
    LODWORD(STACK[0x2EC]) = v63;
    int v65 = 1225351577 * ((((v59 - 192) | 0xEB6902FF) - (v59 - 192) + ((v59 - 192) & 0x1496FD00)) ^ 0xC8F3DAE9);
    *(void *)(v59 - 184) = STACK[0x250];
    *(_DWORD *)(v59 - 192) = v62 - v65 + 402;
    *(_DWORD *)(v59 - 18_Block_object_dispose(&STACK[0x360], 8) = (v63 - 2 * ((((v62 - 213) ^ 0x6D2721FA) + v63) & 0x7AB9CBDF ^ v63 & 2) + 1742794133) ^ v65;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v58 + 8 * ((int)v62 + 1804)))(v59 - 192);
    return (*(uint64_t (**)(uint64_t))(v58
                                              + 8
                                              * (((31 * (v64 ^ 0x4B) + 1052) * (LODWORD(STACK[0x530]) == 2058996701)) ^ v64)))(v66);
  }
}

uint64_t sub_1DA7150A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 - 657) | 0x192) + 1052) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1DA7150DC()
{
  int v6 = *(unsigned __int8 *)(v3 + 8) + (v2 ^ 0x342) - 914;
  return (*(uint64_t (**)(void))(v5 + 8 * ((995 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v4)))();
}

void sub_1DA715120()
{
}

uint64_t sub_1DA7151D8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 ^ v2) * (((a1 + 1) & 0x7FFFFFFC) == v4)) ^ a2)))();
}

uint64_t sub_1DA715204()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 1022) ^ 0x1CF) - 610) * ((v0 & 0xFFFFFFFE) == 1227088734)) ^ v1)))();
}

uint64_t sub_1DA71523C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 541245851) & 0x2042BFFA ^ 0xFFFFFAC6) + v0 > 0x9B)
                                * (((v1 - 1113) | 8) ^ 0x2AD)) ^ v1)))();
}

uint64_t sub_1DA715294@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v4 + a1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + 1 + a1) < 0x38) * v2) ^ v3)))();
}

uint64_t sub_1DA7152C0()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 | 0x6C8)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((STACK[0x480] == 0xB6B6F7DB9DE1514) * (((v0 - 117) | 0x1C) - 179)) ^ (v0 + 96))))(v2);
}

uint64_t sub_1DA715328@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v7 = ((2 * (a1 + v4 + (v6 ^ v3) + 1388)) & 0xF7CC5F6E) + ((a1 + v4 + (v6 ^ v3) + 1388) ^ 0x7BE62FB7) + 1308279396;
  unsigned int v8 = v5 + 2045194176;
  int v9 = (v8 < 0xC9E0F21B) ^ (v7 < ((16 * a2) ^ 0xC9E0C04B));
  BOOL v10 = v7 > v8;
  if (v9) {
    BOOL v10 = v7 < ((16 * a2) ^ 0xC9E0C04B);
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((125 * !v10) ^ a2)))();
}

uint64_t sub_1DA7153C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((857
                                * (*(_DWORD *)(v1 + 4 * (a1 + v4 + 2594)) == (((v3 ^ 0x7F1) + 548) ^ (v2 + 651)))) ^ (v3 - 1839))))();
}

uint64_t sub_1DA71540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v20 - 136) = a15;
  *(void *)(v20 - 12_Block_object_dispose(&STACK[0x360], 8) = v15;
  *(_DWORD *)(v20 - 104) = (v19 - 1590) ^ (1374699841
                                         * ((~((v20 - 136) | 0xF4A86686) + ((v20 - 136) & 0xF4A86686)) ^ 0x66A38170));
  *(void *)(v20 - 120) = v15;
  *(void *)(v20 - 112) = a11;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 + 327)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((((v16
                                                + (((((v19 - 1680) | 0x20A) - 71304038) ^ (13 * (v19 ^ 0x6C6))) & (v18 - 1951399677))
                                                + (((v18 - 1951399677) >> 1) ^ 0xFDDFFFFD)
                                                + 2) & a10) == 0) | v19)))(v21);
}

uint64_t sub_1DA7154F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((v2 + 1298) ^ (16
                                                                              * (v4
                                                                                             + v3
                                                                                             + ((((v2 + 1298) ^ 0xE357C72D)
                                                                                               + 480789470) ^ 0x8014008C) < 8)))))(a1, a2, a2);
}

uint64_t sub_1DA71555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(_DWORD *)(v30 - 12_Block_object_dispose(&STACK[0x360], 8) = -1374699841
                         * ((2 * (((v30 - 144) ^ 0x16C7926F) & 0x37D42D5D) - ((v30 - 144) ^ 0x16C7926F) + 1210831522) ^ 0x331858C4);
  *(void *)(v30 - 136) = v29;
  *(_DWORD *)(v30 - 140) = (v28 - 483) ^ (1374699841
                                        * ((2 * (((v30 - 144) ^ 0x16C7926F) & 0x37D42D5D)
                                          - ((v30 - 144) ^ 0x16C7926F)
                                          + 1210831522) ^ 0x331858C4));
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v28 | 0x364)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * ((13
                                              * (*(_DWORD *)(v30 - 144) == ((((v28 - 593) | 0x400) + 119) ^ 0x5E13F60F))) ^ (v28 + 162))))(v31);
}

void sub_1DA715628()
{
}

uint64_t sub_1DA715630()
{
  int v6 = v4 + *(unsigned __int8 *)(v2 + 5) - 923;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1516 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA71566C@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((511 * (a1 + 772 + v2 == 1340)) ^ a1)))();
}

uint64_t sub_1DA7156BC(uint64_t a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v43 = 4 * (v30 + 1 + a6);
  unint64_t v44 = (*(_DWORD *)(a29 + v43) ^ v29) + (a5 ^ HIDWORD(v38));
  unint64_t v45 = HIDWORD(v42)
      + v40 * (unint64_t)(*(_DWORD *)(*v41 + v43) ^ v29)
      + ((a3 + ((v32 - 628) | v37) + v44 - (v34 & (2 * v44)) - 227) ^ a4);
  *(_DWORD *)(a29 + 4 * (v30 + a6)) = v45 + v29 - (v31 & (2 * v45));
  int v46 = v35 + v30 + 158;
  BOOL v48 = v46 > v39 || v46 < v33;
  return (*(uint64_t (**)(void))(v36 + 8 * ((127 * v48) ^ v32)))();
}

void sub_1DA715758()
{
}

uint64_t sub_1DA715770@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((262 * (a5 == ((3 * ((v6 + 26218970) & 0xFE6FEFA9 ^ 0x5B6)) ^ a1))) ^ v6)))();
}

void sub_1DA7157BC()
{
}

uint64_t sub_1DA7157C8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x6C8)))();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v0 ^ 0x3EB) + 962) * (v1 == 2058996701)) ^ (v0 + 485))))(v3);
}

void sub_1DA71581C()
{
}

uint64_t sub_1DA715830()
{
  *(void *)(v6 - 136) = v5;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x360], 8) = v1;
  *(_DWORD *)(v6 - 116) = v4 + ((((v6 - 136) | 0xC863ADDB) + (~(v6 - 136) | 0x379C5224)) ^ 0xA597B5D3) * v0 - 1451;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 + 333)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((100
                                              * (*(_DWORD *)(v6 - 120) != ((3 * (((v4 - 1725) | 0x26C) ^ 0x36D)) ^ (v2 - 253)))) ^ v4)))(v7);
}

uint64_t sub_1DA7158E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((v8 - 560) ^ (120 * (a8 <= v8 - 1737)))))(2204923104);
}

uint64_t sub_1DA715A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((122 * (((*((_DWORD *)&a20 + 6 * (v20 - 1609527314)) - 182238939) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1DA715B6C(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 + (v4 - 8 + v3)) = *(void *)(v5 + (v4 - 8 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * (v6 == -8)) | (32 * (v6 == -8))) ^ a3)))();
}

uint64_t sub_1DA715B7C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((87 * (STACK[0x458] == 0)) ^ (v0 + 1412))))();
}

uint64_t sub_1DA715BA4@<X0>(char a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v4 + (v7 + v6)) = *(unsigned char *)(v3 + (v7 + v6));
  return (*(uint64_t (**)(void))(v2 + 8 * ((508 * (((v7 - 1 == a2) ^ (a1 + 1)) & 1)) ^ v5)))();
}

uint64_t sub_1DA715BAC@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 - 1947136563;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((998
                                * (v4 - v3 + ((v1 - 461) | 0x211u) + ((v1 + 561746354) & 0xDE846EFF ^ 0x740EF25CLL) < 8)) ^ v1)))();
}

void sub_1DA715C28()
{
}

void sub_1DA715C38()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 272));
  JUMPOUT(0x1DA72AF0CLL);
}

uint64_t sub_1DA715C5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((((v4 & 0x18) == 0) ^ (a4 - 72)) & 1)
                                             * ((201 * (a4 ^ 0xC3)) ^ 0x194)) | a4)))((v5 - v6));
}

void sub_1DA715CB4(uint64_t a1)
{
  int v1 = 3804331 * (a1 ^ 0x2E4183CC);
  int v2 = *(_DWORD *)(a1 + 12) + v1;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA715D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * ((((a39 - 1634517438) < 0x10)
                                * (a6 + ((v39 - 1109426479) & 0x5BF3FEF8) - 468)) ^ v39)))();
}

uint64_t sub_1DA715DAC@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, unint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v37 = 4 * (v32 + 1 + a5);
  unint64_t v38 = (*(_DWORD *)(a24 + v37) ^ (a7 + v36 - 925))
      + (a3 ^ HIDWORD(v31))
      + v35 * (unint64_t)(*(_DWORD *)(*v30 + v37) ^ a7);
  unint64_t v39 = HIDWORD(a1)
      + v27 * (unint64_t)(*(_DWORD *)(*v33 + v37) ^ a7)
      + ((v38 + a2 - (a6 & (2 * v38))) ^ a4);
  *(_DWORD *)(a24 + 4 * (v32 + a5)) = v39 + a7 - (v24 & (2 * v39));
  BOOL v41 = v32 + v25 > v26 || v32 + v25 < v34;
  return (*(uint64_t (**)(void))(v29 + 8 * (((2 * v41) | (4 * v41)) ^ v28)))();
}

void sub_1DA715E4C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1178560073 * ((a1 - 594316138 - 2 * (a1 & 0xDC937496)) ^ 0x71044833));
  int v2 = (char *)*(&off_1F34B17C0 + (v1 ^ 0x2D0)) - 8;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * v1 + 11136])((char *)*(&off_1F34B17C0 + (v1 ^ 0x275)) - 4, sub_1DA72A258);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA715F60@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v6 = (a2 - 418606958);
  long long v7 = *(_OWORD *)(v4 + v6 - 15);
  long long v8 = *(_OWORD *)(v4 + v6 - 31);
  uint64_t v9 = a1 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((121 * (((v3 + 1617) ^ 0x748) != (v2 & 0xFFFFFFE0))) ^ (v3 + 165))))();
}

uint64_t sub_1DA715FC4@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  *(unsigned char *)(v8 - 220 + (v4 + a3)) = *(unsigned char *)(v3 + v7 - 1182794771)
                                                 - ((a1 + v5 - 30) & (2 * *(unsigned char *)(v3 + v7 - 1182794771)))
                                                 + 95;
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 + v5 - 158) | (((a2 + v4 + 1) < 0x40) << 7))))();
}

uint64_t sub_1DA716028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ v9;
}

void pggRSNuJfiTW0g(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA716100@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = v3 - 1026434553 + (a2 << (-46 * (v2 ^ 0x5D) + 97));
  return result;
}

void sub_1DA716130()
{
}

uint64_t sub_1DA71614C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, int a6)
{
  uint64_t v14 = (v10 + a6);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(v8 + (v14 & 0xF)) ^ *(unsigned char *)(v6 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v7 + 2) ^ ((v14 & 0xF) * a4) ^ (((*(unsigned char *)(v11 + v14) - 18) | v12) - ((17 - *(unsigned char *)(v11 + v14)) & ((v9 ^ 0xDC) + 104)) - 32);
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v10 + 1 + a6) < 0x150) * a5) ^ v9)))();
}

uint64_t sub_1DA7161CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((173 * (v5 + 1 == v7 + 40)) ^ a5)))();
}

uint64_t sub_1DA716290@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = 1374699841 * (((((v23 - 144) | 0x21165438) ^ 0xFFFFFFFE) - (~(v23 - 144) | 0xDEE9ABC7)) ^ 0xB31DB3CE);
  *(_DWORD *)(v23 - 12_Block_object_dispose(&STACK[0x360], 8) = a1 - v24;
  *(void *)(v23 - 136) = v22;
  *(_DWORD *)(v23 - 140) = (v21 + 2) ^ v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 + 1353)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(a20
                                            + 8
                                            * (((*(_DWORD *)(v23 - 144) == 1578365111)
                                              * (347 * (v21 ^ 0x2A8) + 39 * (v21 ^ 0x2B3) - 2806)) ^ v21)))(v25);
}

uint64_t sub_1DA716354()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 682765701) & 0x28B22DBA) - 105) * ((v0 & 0x1F) == 0xA)) ^ v1)))();
}

uint64_t sub_1DA7163A0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2004 * (v0 + 1 == v3 + 32)) ^ v1)))((v1 - 37));
}

uint64_t sub_1DA71646C(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  char v12 = *(uint64_t (**)(void))(v8 + 8 * (v9 - 1074));
  uint64_t v13 = *v11;
  unsigned int v14 = a3 + 8 + a2;
  *(unsigned char *)(*v11 + v14) = (v6 ^ HIBYTE(a5)) - ((2 * (v6 ^ HIBYTE(a5))) & 0xBF) + 95;
  *(unsigned char *)(v13 + v14 + 1) = (BYTE2(a5) ^ 0x83) - ((2 * (BYTE2(a5) ^ 0x83)) & 0xBF) + 95;
  *(unsigned char *)(v13 + v14 + 2) = (v10 ^ BYTE1(a5)) + (v5 | ~(2 * (v10 ^ BYTE1(a5)))) + 96;
  *(unsigned char *)(v13 + v14 + 3) = a5 ^ v7;
  return v12();
}

uint64_t sub_1DA71647C()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * (int)(((((v2 + 1532809977) & 0xA4A32F3D) + 241) * (v0 == v1)) ^ v2)))(3046470713);
}

uint64_t sub_1DA7164C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (511
                                     * ((v0 ^ 0xD2037B9E ^ (v1 << ((v0 + 33) & 0xD4 ^ 0xD5)) & 0xFFF37D7E)
                                      + (v1 ^ 0x96F8411F)
                                      + 2013263478 == 2012853557)))))();
}

void sub_1DA71655C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22)
{
  int v26 = 1225351577 * ((v25 - 144) ^ 0x239AD816);
  *(void *)(v25 - 120) = v24;
  *(void *)(v25 - 136) = a22;
  *(_DWORD *)(v25 - 12_Block_object_dispose(&STACK[0x360], 8) = (a21 + 188 * ((v23 + 489) ^ 0x576) - 170153155) ^ v26;
  *(_DWORD *)(v25 - 124) = v26 + v23 + 489 - 1303;
  (*(void (**)(uint64_t))(v22 + 8 * (v23 + 1172)))(v25 - 144);
  JUMPOUT(0x1DA701F7CLL);
}

void sub_1DA7165D0()
{
  LODWORD(STACK[0x5B4]) = v0;
  LODWORD(STACK[0x604]) = v1;
  LODWORD(STACK[0x594]) = v2;
  LODWORD(STACK[0x55C]) = v3;
  LODWORD(STACK[0x534]) = v4 + 64;
  JUMPOUT(0x1DA7165FCLL);
}

uint64_t sub_1DA7166F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + 1 == v8 + 44) | (2 * (a6 + 1 == v8 + 44))) ^ v6)))();
}

uint64_t sub_1DA7167C0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  int v16 = a5 + 1;
  unsigned int v17 = ((2 * (*(_DWORD *)(*a4 + 4 * (v16 + a9 + a3 + 1)) ^ v10)) << a8) | ((*(_DWORD *)(*a4 + 4 * (v16 + a9 + a3)) ^ v10) >> v9);
  *(_DWORD *)(*a4 + 4 * (v16 + v13)) = v17 + (a1 ^ a6 ^ (v10 + 481)) - (v11 & (2 * v17));
  BOOL v19 = v16 + v14 > v15 || v16 + v14 < a2;
  return (*(uint64_t (**)(void))(v12 + 8 * (a7 ^ (2 * v19))))();
}

void sub_1DA7168C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  LODWORD(STACK[0x2F8]) = (v27 ^ v29)
                        + (a27 ^ v29)
                        + v29
                        - ((v28 + 4 * (a3 ^ 0x44B) - 16) & (2 * ((v27 ^ v29) + (a27 ^ v29))));
  JUMPOUT(0x1DA71691CLL);
}

uint64_t sub_1DA716924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, int a8)
{
  unint64_t v18 = a1 - 0x64C21D7BCB4B6B4CLL + (*(_DWORD *)(v9 + 4 * v16) ^ v10);
  *(_DWORD *)(v9 + 4 * v16) = v18
                            + v10
                            - ((v18 << ((a8 + 38 + a7) & v11 ^ v12)) & ((a8 + 294) ^ a6 ^ 0x12FF196B));
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((60 * ((v13 ^ HIDWORD(v18)) + (v14 & (v18 >> 31)) + v15 != v17)) ^ (a8 + 294))))();
}

uint64_t sub_1DA716930()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((757
                                * ((v3 ^ 0x2FEFA7F7)
                                 - 142876864
                                 + (((v1 + 93) ^ 0x5FDF4BB6) & v0)
                                 + ((v1 + 807091073) & 0xCFE4C2BF)
                                 - 661358964 < 0x7FFFFFFF)) ^ (v1 + 93))))();
}

uint64_t sub_1DA7169B4()
{
  STACK[0x288] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == 1442828356) ^ ((v1 | 0xCC) - 2)) & 1)
                                * ((((v1 | 0xCC) + 1323055358) ^ 0x4EDC3DA2) - 615)) ^ (v1 | 0xCC))))();
}

uint64_t sub_1DA716A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x4F8]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7
                                                                                         + 8
                                                                                         * (((v5 ^ 0x17D) * v6) ^ (v5 + 660))))(a1, a2, a3, a4, STACK[0x420]);
}

uint64_t sub_1DA716A58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((415 * (a2 + 1 == v4 + 32)) ^ v2)))();
}

uint64_t sub_1DA716B24()
{
  *uint64_t v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 1 == ((((v0 ^ 0x27E) + 1082919027) | 0x122B068) ^ 0xB3E1B55))
                                * ((v0 ^ 0x68) + 233)) ^ v0 ^ 0x27E)))();
}

uint64_t sub_1DA716B8C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                      + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)
                                     * ((v3 + 575638614) & 0xDDB0739F ^ 0x5A8)) ^ v3)))();
}

uint64_t sub_1DA716BDC@<X0>(int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X7>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  BOOL v27 = a15 > 0x6181A984;
  char v28 = 117 * (v22 ^ 0x98);
  int v29 = v22 ^ 0x25B;
  int v30 = v22 + 1355;
  unint64_t v31 = (a2 >> (v28 + 54)) + (*(_DWORD *)(a21 + v24) ^ a4);
  *(_DWORD *)(a21 + 4 * a3) = a4 + v29 + v31 - (v21 & (2 * v31)) - 705;
  *(_DWORD *)(a21 + v24) = HIDWORD(v31) | a4;
  if (v27 == v26 - 353869138 < -1635887493) {
    BOOL v27 = v26 - 353869138 < a1;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * (v30 ^ (v27 * v25))))();
}

uint64_t sub_1DA716C94@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v4 + (a1 ^ 0x39C) + 698) ^ a1 ^ (v4 + 566)) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_1DA716CCC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (a1 - 915506973)) = *(unsigned char *)(v2 + (a1 - 915506973)) ^ *(unsigned char *)(v4 + ((a1 - 915506973) & 0xFLL)) ^ *(unsigned char *)(v3 + ((a1 - 915506973) & 0xFLL)) ^ *(unsigned char *)(v5 + ((a1 - 915506973) & 0xFLL)) ^ (97 * ((a1 - 29) & 0xF)) ^ 0x5F;
  unsigned int v11 = ((v7 + 772) ^ 0xEA456920) + a1;
  uint64_t v12 = (a1 + 1);
  int v13 = (v8 > 0xDF290BF0) ^ (v11 < v6);
  BOOL v14 = v11 < v9;
  if (v13) {
    BOOL v14 = v8 > 0xDF290BF0;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((1145 * v14) ^ v7)))(v12);
}

uint64_t sub_1DA716D6C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 505)))(v1);
  LODWORD(STACK[0x4F8]) = -2058973175;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((STACK[0x4E8] == 0)
                                                   * ((v0 - 1696562663) ^ 0x9AE08655 ^ (v0 - 1696562663) & 0x651F7DD7 ^ 0x79C)) ^ (v0 + 9))))(v3);
}

uint64_t sub_1DA716DFC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v5 + (v2 + v4)) = *(unsigned char *)(a1 + (v2 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v2 - 1 == v3) * ((v1 - 352) ^ 0x26)) ^ v1)))();
}

uint64_t sub_1DA716E34()
{
  BOOL v5 = v0 + 1638289195 <= ((v1 - 493) | 0x100) + 1345308260 && v0 + 1638289195 >= v2 - 802174543;
  uint64_t v6 = *(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 8 * ((v5 | (4 * v5)) ^ v1));
  return v6(v6, 159353952, 0x11127EB20C1B7506);
}

uint64_t sub_1DA716EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,unint64_t a31,uint64_t a32,int *a33)
{
  if (v34 >= 0x116F6DAB) {
    int v38 = *a33 + 1;
  }
  else {
    int v38 = 1308924072;
  }
  *a33 = v38;
  int v39 = (((v33 >> 11) ^ 0xCDC5D) + v37 - ((((v33 >> 11) ^ 0xCDC5D) << a15) & 0x5DB64)) ^ v33;
  unsigned int v40 = (((v39 << 7) & 0x9D2C5680 ^ v39) << 15) & 0xEFC60000 ^ (v39 << 7) & 0x9D2C5680 ^ v39;
  *(_DWORD *)(*a30 + a31) ^= v40 ^ (v40 >> 18);
  return (*(uint64_t (**)(void))(v36 + 8 * ((v35 + 1101970205) ^ (50 * (a31 < 0x1FC)))))();
}

uint64_t sub_1DA716EB4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((31 * (v0 > 0xEA58BF0C)) ^ (v1 - 1101969888))))();
}

uint64_t sub_1DA716F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9
                                                     + 8
                                                     * (((((v6 == v7) ^ (a6 + v8 + 100)) & 1)
                                                       * (v8 - 605)) ^ v8)))(a1, 4117992457);
}

uint64_t sub_1DA716F3C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = ((((a6 + 940) | 0x352) + ((2 * a6) ^ 0x17C) - 2233) & (a1 + a2)) != -42999872;
  return (*(uint64_t (**)(void))(v6 + 8 * (((4 * v7) | (8 * v7)) ^ a6)))();
}

uint64_t sub_1DA716F8C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((917 * ((((52 * ((a1 + 987) ^ 0x593)) ^ 0x70) & v1) == ((a1 + 87) ^ 0x20D))) ^ (a1 + 987))))();
}

uint64_t sub_1DA716FD8()
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  unsigned int v0 = (uint64_t *)*(&off_1F34B17C0
                  + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3540) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - dword_1EA8E3540) ^ 0xF0))] ^ 0x2A])
                  + 70);
  int v1 = (uint64_t *)*(&off_1F34B17C0
                  + ((-93 * (*v0 ^ qword_1EA8E3538 ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * (*v0 ^ qword_1EA8E3538 ^ 0xF0))] ^ 0x4B])
                  + 16);
  unint64_t v2 = (*v1 - *v0) ^ (unint64_t)&v11;
  uint64_t v3 = 192840611 * v2 - 0x2F1F548F835ED4F0;
  uint64_t v4 = 192840611 * (v2 ^ 0x2F1F548F835ED4F0);
  uint64_t *v0 = v3;
  uint64_t *v1 = v4;
  LOBYTE(v4) = -93 * ((v4 + *(_DWORD *)v0) ^ 0xF0);
  BOOL v5 = (char *)off_1F34B19E0 - 8;
  uint64_t v6 = off_1F34B1CF8;
  BOOL v14 = (char *)*(&off_1F34B17C0
                + ((*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + v4 - 8) ^ 0x54] ^ v4)
                - 98)
      - 4;
  unsigned int v15 = 1374699841 * ((&v12 & 0xF6A24752 | ~(&v12 | 0xF6A24752)) ^ 0x64A9A0A4) + 1433;
  BOOL v7 = (char *)*(&off_1F34B17C0
               + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3540) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - dword_1EA8E3540) ^ 0xF0))] ^ 0x3C])
               - 89)
     - 8;
  (*(void (**)(unsigned int *))&v7[8
                                            * ((-93 * (*(unsigned char *)v0 ^ 0xF0 ^ *(unsigned char *)v1)) ^ (*off_1F34B1CF8)[*((unsigned __int8 *)off_1F34B19E0 + (-93 * (*(unsigned char *)v0 ^ 0xF0 ^ *(unsigned char *)v1)) - 8) ^ 0x2A])
                                            + 15560])(&v12);
  unsigned int v15 = 1374699841 * (((&v12 | 0x6755CF04) - (&v12 & 0x6755CF04)) ^ 0xAA1D70D) + 1433;
  BOOL v14 = (char *)*(&off_1F34B17C0
                + ((-93 * (*(_DWORD *)v0 ^ 0xF0 ^ *(_DWORD *)v1)) ^ (*v6)[v5[(-93 * (*(_DWORD *)v0 ^ 0xF0 ^ *(_DWORD *)v1))] ^ 0x4B])
                - 40);
  unsigned __int8 v8 = -93 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xF0);
  (*(void (**)(unsigned int *))&v7[8
                                            * (*((unsigned char *)off_1F34B19B8
                                                                + (*((unsigned __int8 *)off_1F34B1C20 + v8 - 12) ^ 0xD4u)
                                                                - 4) ^ v8)
                                            + 15664])(&v12);
  char v13 = (-125 * (((&v12 ^ 0xAB | 8) - (&v12 ^ 0xAB | 0xF7) - 9) ^ 0xDE)) ^ 0x7E;
  unsigned int v12 = (460628867
       * (((&v12 ^ 0xB2203FAB | 0xA2B48608) - (&v12 ^ 0xB2203FAB | 0x5D4B79F7) + 1565227511) ^ 0x5C023BDE)) ^ 0x753;
  unsigned __int8 v9 = -93 * (*(_DWORD *)v0 ^ 0xF0 ^ *(_DWORD *)v1);
  return (*(uint64_t (**)(unsigned int *))&v7[8
                                                      * (*((unsigned char *)off_1F34B1990
                                                                          + (*((unsigned __int8 *)off_1F34B17F8 + v9 - 12) ^ 0xDAu)
                                                                          - 4) ^ v9)
                                                      + 15264])(&v12);
}

uint64_t sub_1DA717388()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1277
                                * ((((*(unsigned __int8 *)(v2 + 8) - 11) << (((v3 + 70) & 0xAF) + 115)) & (((v3 - 532) | 0x20A) ^ (v1 - 910)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 11) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA7173F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F34B1C00 - 8 + 8 * ((122 * (*(_DWORD *)(a2 + 4) == 826018275)) ^ 0x23Du)))();
}

uint64_t sub_1DA717438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9
                                                     + 8
                                                     * ((((a6 + v7 - 229) ^ v7 ^ (a6 + 91) ^ 0x742) * (v8 == v6)) ^ v7)))(a1, 4117992457);
}

uint64_t sub_1DA71747C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 384868312) | 0x80094000) ^ 0x96F9E6AF) * (a1 == 826018284)) ^ v1)))(4294925278);
}

uint64_t sub_1DA7174CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v9 = a5 ^ 0x72F;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(((((v7 == a7) ^ (a5 - 95)) & 1) * (v9 - 484)) ^ a5));
  return v10(v9, v10, a3, (a5 - 1119), a5, 3164170108, 4294967220, 111);
}

uint64_t sub_1DA717518(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v23 + 8 * ((332 * (a22 == a4 + 7 * (((v22 - 1478) | 0x120) ^ 0x17F) - 74)) ^ v22)))();
}

uint64_t sub_1DA717560@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((50 * (v1 == 826018275)) ^ 0x3DAu)))();
}

uint64_t sub_1DA717594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + a4 + a5 + (v6 - 616) - 17) = v7;
  return (*(uint64_t (**)(void))(v8 + 8 * (((unint64_t)(v5 + a4) > 0x3F) ^ v6)))();
}

uint64_t sub_1DA7175C4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * ((((v2 + 46) ^ (v0 == v2 + 1312413465)) & 1) == 0)) & 0xEF | (16 * (((v2 - 466) ^ ~(v0 == v2 + 1312413465)) & 1))) ^ v2)))();
}

void sub_1DA71760C()
{
}

uint64_t sub_1DA7176CC@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 == ((a2 + 13) ^ 0x13)) * ((2 * (a2 - 1307)) ^ a1)) ^ (a2 - 1307))))();
}

uint64_t sub_1DA717700()
{
  (*(void (**)(void))(v1 + 8 * (v0 | 0x6C8)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((27 * (STACK[0x4D0] == 0)) ^ (v0 + 338))))();
}

uint64_t sub_1DA717744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(_DWORD *)(v10 + 48 * (v8 - v12 + v9 + a8 - 443) + 36) == v9) * (v8 - 648)) ^ v8)))();
}

uint64_t sub_1DA71778C@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v6 = ((a2 - 1198460) & 0xF8F65B95 ^ 0x357ABF58) + a1;
  *(unsigned char *)(a3 + v6) = *(unsigned char *)(v5 + v6);
  return (*(uint64_t (**)(void))(v3 + 8 * ((581 * (a1 - 1 == v4)) ^ a2)))(0);
}

uint64_t sub_1DA7177E4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 == v3) ^ (81 * ((a2 - 127) ^ 0xEB))) & 1)
                                * (((a2 - 229) | 0x104) ^ 0x197)) ^ (a2 + 641))))();
}

uint64_t sub_1DA717830(int a1)
{
  int v6 = *(unsigned __int8 *)(v3 + v4 - 0x2A586D25B77A5E74) - *(unsigned __int8 *)(v2 + v4 - 0x2A586D25B77A5E74);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((((2 * v6) & 0xD1BBCF7E) + (v6 ^ v1) == v1)
                                              * (((a1 - 109) | 0x89) ^ 0x77)) ^ a1)))(4294925278);
}

uint64_t sub_1DA717898(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v6 & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                      + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v5) == v5)
                                     * (a3 + ((v4 + 2056682320) & 0xA7EFFFF5) + 567)) ^ v4)))();
}

uint64_t sub_1DA7178EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 ^ 0xEFu;
  unint64_t v5 = ((unint64_t)&STACK[0x4B0] ^ 0xB9FFFFFEDFFBE6F7)
     + 0x4FB57ABD7075FFA0
     + ((v4 + 0x73FFFFFDBFF7CC85) & (2 * (void)&STACK[0x4B0]));
  unint64_t v6 = a2 - 1;
  STACK[0x4B0] = v6;
  *(unsigned char *)(a1 + v6) = ((v5 + ((v4 + 53) ^ 0xF9)) ^ 0xBA) * (v5 + 122);
  return (*(uint64_t (**)(void))(v3 + 8 * ((239 * (STACK[0x4B0] != 0)) ^ v4)))();
}

uint64_t sub_1DA7179C0@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v48 = *(_DWORD *)(&a31 + ((v46 + v43) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v46 + v43)) = v48 ^ 0x61;
  *(unsigned char *)(a1 + (v46 + v43 + 1)) = ((v44 - 31) ^ BYTE1(v48))
                                                 + (~(2 * ((v44 - 31) ^ BYTE1(v48))) | 0x41)
                                                 + 96;
  *(unsigned char *)(a1 + (v46 + v43 + 2)) = (BYTE2(v48) ^ 0x79) - ((2 * (BYTE2(v48) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v46 + v43 + 3)) = (HIBYTE(v48) ^ 0xB6) - ((2 * (HIBYTE(v48) ^ 0xB6)) & 0xBF) + 95;
  BOOL v49 = v46 + 1173142954 < (a43 + 1882926513);
  if (v46 + 1173142954 < a2 != a43 + 1882926513 < a2) {
    BOOL v49 = a43 + 1882926513 < a2;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * ((v49 * v45) ^ v44)))();
}

uint64_t sub_1DA717A9C(uint64_t result)
{
  unint64_t v1 = 460628867 * ((2 * (result & 0x7A45FB8C54F2057FLL) - result - 0x7A45FB8C54F20580) ^ 0xC725491DE79B78FDLL);
  int v2 = *(_DWORD *)result ^ v1;
  int v3 = *(_DWORD *)(result + 24) ^ v1;
  unint64_t v4 = *(void *)(result + 16) - v1;
  int v5 = *(_DWORD *)(result + 28) - v1;
  int v6 = *(_DWORD *)(result + 40) + v1;
  unint64_t v7 = *(void *)(result + 8) ^ v1;
  BOOL v8 = v4 >= v7;
  BOOL v9 = v4 != v7;
  int v10 = v8;
  if (v2) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v5;
  }
  else {
    int v11 = v3;
  }
  *(_DWORD *)(result + 36) = v11 ^ v6;
  return result;
}

uint64_t sub_1DA717B3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F34B1C00 + 8 * ((2 * (*(_DWORD *)(a2 + 4) != 826018276)) | 0x4C0u) - 8))();
}

uint64_t sub_1DA717B70()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x68A89052B2EA55B0) != 1220938676)
                                * ((((v0 - 466) ^ 0x5CB) + 488) ^ 0x25E)) ^ (v0 - 466))))();
}

uint64_t sub_1DA717BC0()
{
  unint64_t v3 = STACK[0x588];
  int v4 = 628203409 * ((((v2 - 192) | 0x3E866CD0) - (v2 - 192) + ((v2 - 192) & 0xC1799328)) ^ 0xBC0E60E3);
  *(_DWORD *)(v2 - 176) = v4 + v0 + 1172345424;
  *(_DWORD *)(v2 - 18_Block_object_dispose(&STACK[0x360], 8) = 2067890216 - v4;
  *(void *)(v2 - 184) = v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x84B)))(v2 - 192);
  STACK[0x468] = *(void *)(v1 + 8 * v0);
  unint64_t v6 = STACK[0x408];
  STACK[0x638] = v3;
  LODWORD(STACK[0x644]) = 277809796;
  STACK[0x540] = v6;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((50
                                              * (((((2 * *(_DWORD *)(v3 - 0x4696E7753303C8EELL)) & 0x1A ^ (((63 * ((v0 + 245) ^ 0x10B) - 609) | 0x722) - 1902))
                                                 + (*(_DWORD *)(v3 - 0x4696E7753303C8EELL) & 0x3F ^ 0xFB4FDFDB)
                                                 + 277809796) & 0xBDFFFC0) != 199158336)) ^ (v0 + 245))))(v5);
}

uint64_t sub_1DA717C6C@<X0>(unint64_t a1@<X1>, int a2@<W2>, void *a3@<X4>, int a4@<W5>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t v32 = (*(_DWORD *)(a22 + 4 * (v22 + 1 + a2)) ^ a5)
      + HIDWORD(a1)
      + v29 * (unint64_t)(*(_DWORD *)(*a3 + 4 * (v22 + 1 + a2)) ^ a5);
  *(_DWORD *)(a22 + 4 * (v22 + a2)) = v32 + (((v26 - 1646) | v30) ^ v27) - (v23 & (2 * v32));
  BOOL v34 = v22 + v31 > v24 || v22 + v31 < a4;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v34 * v25) ^ v26)))();
}

uint64_t sub_1DA717CDC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1566 * (v2 < 0xF4555DC1)) ^ (v0 - 1101969547))))();
}

void sub_1DA717D28(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) == 0x68A89052B2EA55C0
    || *(void *)(a1 + 8) == 0x4EA879534CA0F753
    || *(void *)(a1 + 16) == 0x1EC5A4A56706F2AALL;
  int v1 = *(_DWORD *)(a1 + 32) - 1178560073 * ((2 * (a1 & 0x908C2BF2) - a1 + 1869861901) ^ 0xC2E4E8A8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA717E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((751 * ((((((a5 - 1272433746) & 0x4BD7CBE7) + 610) ^ ((a5 + 500) | 0x1C)) & v5) == 0)) ^ a5)))();
}

uint64_t sub_1DA717E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a11 == (v13 ^ (v11 + 868) ^ 0x2F5)) * ((v13 - 1922121366) & 0x72913BFA ^ 0x3C3)) ^ v13)))();
}

uint64_t sub_1DA717EE0(int a1, char a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  *(_DWORD *)(v65 - 124) = v58;
  *(_DWORD *)(v65 - 120) = v66;
  unsigned int v67 = (v63 + 1144845762) & 0xBBC309EF;
  int v68 = (v67 - 491) & v58;
  int v69 = -a5;
  *(_DWORD *)(v65 - 12_Block_object_dispose(&STACK[0x360], 8) = v68;
  int v70 = a3 + a4;
  char v71 = a2 + a3 + a4;
  char v72 = v71 + 12;
  char v73 = v71 + 13;
  char v74 = v71 + 14;
  char v75 = v71 + 15;
  char v76 = v71 + 1;
  char v77 = v71 + 2;
  int v78 = a1 + v70 + 16;
  uint64_t v79 = 7 * (v67 ^ 0x1CA);
  *(void *)(v65 - 136) = v79;
  uint64_t v80 = (v69 + v78);
  v82.val[0].i64[0] = v80 & (v79 - 272);
  v82.val[0].i64[1] = ((_BYTE)v69 + v77) & 0xF;
  v82.val[1].i64[0] = ((_BYTE)v69 + v76) & 0xF;
  v82.val[1].i64[1] = ((_BYTE)v69 + v62) & 0xF;
  v82.val[2].i64[0] = ((_BYTE)v69 + v75) & 0xF;
  v82.val[2].i64[1] = ((_BYTE)v69 + v74) & 0xF;
  v82.val[3].i64[0] = ((_BYTE)v69 + v73) & 0xF;
  v82.val[3].i64[1] = ((_BYTE)v69 + v72) & 0xF;
  *(int8x8_t *)(v64 - 7 + v80) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v64 - 7 + v80), *(int8x8_t *)(v61 + v82.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v59 + v82.val[0].i64[0] - 7), *(int8x8_t *)(v60 + v82.val[0].i64[0] - 7)))), (int8x8_t)0x5F5F5F5F5F5F5F5FLL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v82, (int8x16_t)xmmword_1DA75DF10), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a58 + 8 * (int)((978 * (v69 != 8 - v68)) ^ v67)))((__n128)xmmword_1DA75DF10);
}

uint64_t sub_1DA718040@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((676 * (v1 + v3 + ((a1 - 1073) | 0x40Au) - 1213 < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_1DA718080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * ((104
                                * (((a24 - (a27 & 0x6A850AF8) - 2049892786) ^ (a60 + 387) ^ 0xFABD7D33)
                                 - 2175249
                                 + ((2 * (a24 - (a27 & 0x6A850AF8) - 2049892786)) & 0x9FFFFEFA ^ 0xA850AF8) != 1340001900)) ^ a60)))();
}

uint64_t sub_1DA718144(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v1
                                                             + 8
                                                             * ((((*(_DWORD *)(*v4 + 4 * v7) ^ (v2 + 2)) > (*(_DWORD *)(*v5 + 4 * v7) ^ ((v6 ^ 0x687u) + v2)))
                                                               * (317 * (v6 ^ 0x687) - 613)) ^ v6)))(a1, 317 * (v6 ^ 0x687u), v3);
}

uint64_t sub_1DA71819C(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v10 = v6 + v5;
  int v11 = v10 - 1853648574;
  if ((v10 - 1853648574) <= 0x40) {
    int v11 = a4;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((50 * (a5 - v10 < v8 + v7 + (((a1 - 1299) | 0x280) ^ (a5 - 580)) + v11)) ^ a1)))();
}

uint64_t sub_1DA718200@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((16 * (a2 + 1 == v4 + 4)) | ((a2 + 1 == v4 + 4) << 8) | a1)))(v2);
}

uint64_t sub_1DA7182D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((496 * (v5 + 1 == v7 + 80)) ^ a5)))();
}

uint64_t sub_1DA7183A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((a2 + 1 != v9 + 4) | (2 * (a2 + 1 != v9 + 4))) ^ a4)))(a8);
}

uint64_t sub_1DA718468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((874 * (a7 + 1 == v9 + 32)) ^ v7)))();
}

uint64_t sub_1DA718544(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x5F3FBFF7)
                       - 151169042
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xFFEF);
  return 0;
}

uint64_t sub_1DA71857C()
{
  int v8 = v0 ^ (v1 - 804);
  *uint64_t v6 = v6[623];
  unint64_t v9 = 628203409 * ((v5 - 0x5BEF108A6E6E4E83 - 2 * (v5 & 0xA410EF759191B17DLL)) ^ 0x9B4C45601319BD4ELL);
  *(void *)(v7 - 112) = v9 ^ 0xC815A334;
  *(_DWORD *)(v7 - 124) = v9 + 1;
  *(_DWORD *)(v7 - 120) = ((v8 + 1913536380) ^ 0x71) + v9;
  *(void *)(v7 - 136) = (v4 - 1706278357) + v9;
  *(_DWORD *)(v7 - 144) = v9 ^ (v8 + 1913536380) ^ 0x15;
  *(_DWORD *)(v7 - 140) = 1691311166 - v9 + v8;
  *(_DWORD *)(v7 - 104) = v8 + 1913536380 - v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 + v8 + 1314)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v7 - 128)))(v10);
}

uint64_t sub_1DA718664(unint64_t a1)
{
  STACK[0x5C0] = STACK[0x398] - 176;
  STACK[0x560] = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((11 * (v1 ^ 0x440) - 345) * (v2 > a1)) | v1)))();
}

uint64_t sub_1DA718710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((424 * (v5 + 1 == v7 + 64)) ^ a5)))();
}

uint64_t sub_1DA7187E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  unsigned int v9 = a4 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v8 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == 32) * (a6 + 1419)) ^ (a6 + 123))))();
}

void sub_1DA7187F4()
{
}

uint64_t sub_1DA7188A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, int a17, unint64_t *a18)
{
  int v20 = 1374699841 * ((&a13 - 692440864 - 2 * ((unint64_t)&a13 & 0xD6BA30E0)) ^ 0xBB4E28E9);
  a13 = v20 - 1049201531;
  a14 = (v19 + 2138961746) ^ v20;
  a15 = -566162123 - v20;
  a16 = a9;
  a18 = &STACK[0x510F57144876C824];
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 ^ 0x1A2)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * ((19 * (a17 != ((v19 - 775106335) & 0x2EF5 ^ 0x7AB9CDF8))) ^ v19)))(v21);
}

uint64_t sub_1DA718990@<X0>(uint64_t a1@<X8>)
{
  int v6 = (v4 - 477) ^ 0x7D6;
  uint64_t v8 = v1;
  unsigned int v9 = v4
     - 477
     + ((1960339960 - (&v8 | 0x74D869F8) + (&v8 | 0x8B279607)) ^ 0x26B0AAA2) * v3
     + 689;
  uint64_t v10 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(a1 + 8 * ((v4 - 477) ^ 0x74F)))(&v8);
  _DWORD *v5 = v6 - *v5 + 1393701026;
  return result;
}

uint64_t sub_1DA718A1C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, int a4@<W4>, void *a5@<X7>, uint64_t a6@<X8>)
{
  int v17 = (v12 + 903) | 0x201;
  unint64_t v18 = a1
      + v14
      + ((v9 + ((v17 - 17) | 1) - 1545) ^ *(_DWORD *)(a3 + 4 * v13))
      + v11 * (unint64_t)(*(_DWORD *)(*a5 + 4 * a2) ^ v9);
  *(_DWORD *)(a3 + 4 * v13) = v18 + (v17 ^ v16 ^ (v9 + 145)) - ((2 * v18) & 0x12FF18C0);
  uint64_t v19 = (a6 ^ HIDWORD(v18)) + (v10 & (v18 >> 31)) + v8;
  BOOL v21 = a2 - 453991944 < v6 && a2 - 453991944 >= a4;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v17 ^ (v21 * v15))))(v19);
}

uint64_t sub_1DA718A34()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((27 * (STACK[0x4D0] == 0)) ^ (v0 + 338))))();
}

uint64_t sub_1DA718A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v9 = v8 + v6 + 63 < ((((a6 + 1299) ^ 0x51D) - a6 + 937) ^ (v8 - 937)) + v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8 * ((v9 | (2 * v9)) ^ 0x51Du)))(a1, 4117992457);
}

uint64_t sub_1DA718ABC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v8 + (v5 ^ v6)) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 0) * a4) ^ v4)))();
}

uint64_t sub_1DA718AE8(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 24) - 0x9C030EB3B8C25C_Block_object_dispose(&STACK[0x360], 8) = v3;
  _DWORD *v1 = v2;
  return result;
}

uint64_t sub_1DA718B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  BOOL v9 = v6 < v7;
  unint64_t v10 = ((a3 - 1100) ^ 0xCFACFDFA2C16D84CLL) + a2;
  int v11 = v9 ^ (v10 < a6);
  BOOL v12 = v10 < v6;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * !v9) ^ a3)))();
}

uint64_t sub_1DA718B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t *, uint64_t, uint64_t, void))(v41 + 8 * ((((((v40 ^ 0x35B) - a6 - 207) ^ 0x20A65868) != 963978769) * ((v40 ^ 0x49D) + 565)) ^ v40 ^ 0x35B)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           &STACK[0x278],
           &a40,
           a28,
           a4 | 0x44F88AC300000000,
           0);
}

uint64_t sub_1DA718C08@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x241281ADB08D925_Block_object_dispose(&STACK[0x360], 8) = a2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((*(void *)(v3 + 8) == 0xDAEB4D7D86A8E34) ^ (v2 + 22) & 0x7F) & 1)
                                * (((v2 - 792854250) & 0x2F41FE7F) - 1623)) ^ (v2 - 792854250) & 0x2F41FE7F)))();
}

uint64_t sub_1DA718C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x32E0FC00A1F3CACFLL) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1702 * (*v2 == ((v4 - 304623841) & 0x1228372C ^ (v3 + 276)))) ^ v4)))();
}

uint64_t sub_1DA718CDC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (v0 ^ (25
                                     * (((2 * v3) & 0xFBFFF43E ^ (v1 + 428) ^ (((v0 + 1091) | v2) - 1177))
                                                    + (v3 ^ 0x9923525D)
                                                    - 688917010 != 1425010701)))))();
}

void sub_1DA718D44()
{
}

uint64_t sub_1DA718D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((1870 * (v29 + v28 + 23 < ((3 * (v27 ^ 0x6D)) ^ 0x3Bu))) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1DA718DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = v16;
  *(void *)(v17 - 136) = a12;
  *(_DWORD *)(v17 - 116) = v15
                         + ((1825418699 - ((v17 - 136) | 0x6CCDADCB) + ((v17 - 136) | 0x93325234)) ^ 0xFEC64A3D) * v12
                         - 1630;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 154)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v17 - 120) != v13) * ((((v15 - 559) | 0x206) - 1644) ^ 0x3A)) ^ v15)))(v18);
}

uint64_t sub_1DA718E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((v12 ^ 0x1C0) + ((v12 + 1839238593) & 0x925F77F0) - 1921)
                                     * ((a11 + 35651585) < 0x7FFFFFFE)) ^ v12)))();
}

void sub_1DA718EF0()
{
}

uint64_t sub_1DA718EFC@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,uint64_t a36,uint64_t a37)
{
  *(_DWORD *)(v39 - 120) = v37 ^ 0x46E;
  uint64_t v40 = (uint64_t)*(&off_1F34B17C0 + v37 - 946);
  int v41 = *(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6FLL) ^ 0x85));
  HIDWORD(v42) = v41 ^ ((v37 ^ 0x46E) + 104);
  LODWORD(v42) = v41 << 24;
  LOBYTE(v41) = (v42 >> 30) ^ 0x9F;
  int v43 = (char *)*(&off_1F34B17C0 + v37 - 820) - 4;
  int v44 = v43[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D65) ^ 0xBFLL];
  HIDWORD(v42) = v44 ^ 5;
  LODWORD(v42) = (v44 ^ 0x40) << 24;
  LOBYTE(v44) = v42 >> 28;
  int v45 = *(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6BLL) ^ 0x6FLL));
  HIDWORD(v42) = v45 ^ 0x3B;
  LODWORD(v42) = v45 << 24;
  int v46 = v37;
  int v47 = v41 << 16;
  int v48 = ((v42 >> 30) ^ 0x68) << 16;
  uint64_t v49 = (uint64_t)*(&off_1F34B17C0 + (v46 ^ 0x3CE));
  uint16x8_t v50 = (char *)*(&off_1F34B17C0 + (v46 ^ 0x325)) - 12;
  char v51 = v50[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D64) ^ 0xD8];
  int v52 = v43[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D61) ^ 0xBCLL];
  HIDWORD(v42) = v52 ^ 5;
  LODWORD(v42) = (v52 ^ 0x40) << 24;
  unsigned __int8 v53 = v42 >> 28;
  uint64_t v54 = v53 ^ 0x68;
  int v55 = v43[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D69) ^ 0x98];
  HIDWORD(v42) = v55 ^ 5;
  LODWORD(v42) = (v55 ^ 0x40) << 24;
  unsigned int v56 = v48 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6ALL) ^ 0xDFLL)) ^ 0xD4) << 8) | ((v50[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6CLL) ^ 0xAFLL] ^ 0x32) << 24) | (v42 >> 28);
  LODWORD(v43) = v43[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6DLL) ^ 0xD0];
  HIDWORD(v42) = v43 ^ 5;
  LODWORD(v42) = (v43 ^ 0x40) << 24;
  LOBYTE(v43) = v42 >> 28;
  int v57 = v47 | ((*(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D6ELL) ^ 0x49)) ^ 0x5E) << 8) | ((v50[*a1 ^ 0xFELL] ^ 0xEB) << 24);
  int v58 = *(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D63) ^ 0xB6));
  HIDWORD(v42) = v58 ^ 0x3B;
  LODWORD(v42) = v58 << 24;
  unsigned int v59 = v57 & 0xFFFFFF00 | v43 ^ 0x3C;
  uint64_t v60 = (v42 >> 30) ^ 0x21;
  LODWORD(v40) = *(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D67) ^ 0xC8));
  HIDWORD(v42) = v40 ^ 0x3B;
  LODWORD(v42) = v40 << 24;
  unint64_t v61 = (((*(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D62) ^ 0xC7)) ^ 0x15) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v51 ^ 0xE2u) << 24) | (v60 << 16) | v54) ^ 0x75F49EF4;
  uint64_t v62 = ((unsigned __int16)((((*(unsigned __int8 *)(v49
                                                                   + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D62) ^ 0xC7)) ^ 0x15) << 8) | v54) ^ 0x9EF4) >> 8);
  unsigned int v63 = v44 | ((*(unsigned __int8 *)(v49 + (*(unsigned __int8 *)(v38 - 0x2F19939F047D9D66) ^ 0xB7)) ^ 0xF5) << 8) & 0xFF00FFFF | (((v42 >> 30) ^ 0x37) << 16) | ((v50[*(unsigned __int8 *)(v38 - 0x2F19939F047D9D68) ^ 0x18] ^ 0xAD) << 24);
  uint64_t v64 = (uint64_t)*(&off_1F34B17C0 + (v46 ^ 0x3A8));
  int v65 = (v62 - ((2 * (v61 >> 8)) & 0x76) - 306434501) ^ *(_DWORD *)(v64 + 4 * (v62 ^ 0xF5));
  uint64_t v66 = (uint64_t)*(&off_1F34B17C0 + (v46 ^ 0x318));
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (v51 ^ 0xFDu));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  uint64_t v67 = (uint64_t)*(&off_1F34B17C0 + (v46 ^ 0x3C5));
  int v68 = (v42 >> 2) ^ *(_DWORD *)(v67 + 4 * (v60 ^ 0xDD)) ^ (v65 - ((2 * v65) & 0x5AB7628E) + 760983879);
  LODWORD(v54) = v68 - ((2 * v68) & 0xCA25B70C);
  int v69 = (char *)*(&off_1F34B17C0 + (v46 ^ 0x394)) - 12;
  unsigned int v275 = v59;
  unsigned int v276 = v56;
  int v70 = *(_DWORD *)&v69[4 * (v53 ^ 0xD9)] ^ v59 ^ (v54 + 1695734662);
  int v272 = v70 ^ v56 ^ 0x2789BBD4;
  int v71 = v63 ^ 0xE6 ^ v272;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v71 ^ v61) >> 24) ^ 0x21));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  int v72 = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xCA25B70C) + 1695734662) ^ *(_DWORD *)&v69[4
                                                                                    * ((v71 ^ v61) ^ 0xDE)];
  int v271 = v71 ^ v61;
  int v273 = v70;
  unsigned int v270 = *(_DWORD *)(v64 + 4 * (((unsigned __int16)(v71 ^ v61) >> 8) ^ 0x1Eu)) ^ *(_DWORD *)(v67 + 4 * (((v71 ^ v61) >> 16) ^ 0x8Fu)) ^ v70 ^ ((((unsigned __int16)(v71 ^ v61) >> 8) ^ 0xEB) - 306434501 + (~(2 * (((v71 ^ v61) >> 8) ^ 0x4BA6EB)) | 0xFFFFFF89) + 1) ^ (v72 - ((2 * v72) & 0x5AB7628E) + 760983879);
  int v73 = v270 ^ 0x76E748E2 ^ v70 ^ v56;
  int v274 = v61;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v73 ^ v61) >> 24) ^ 0xA2));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  unsigned int v74 = v73 ^ v61 ^ 0xC84590C6;
  LODWORD(v60) = *(_DWORD *)(v64 + 4 * (BYTE1(v74) ^ 0xF5u)) ^ *(_DWORD *)(v67
                                                                           + 4
                                                                           * (((v73 ^ v61) >> 16) ^ 0x6Cu)) ^ (BYTE1(v74) - ((v74 >> 7) & 0x76) - 306434501) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x5AB7628E) + 760983879);
  int v269 = v73 ^ v61;
  HIDWORD(v26_Block_object_dispose(&STACK[0x360], 8) = v270 ^ 0x76E748E2 ^ *(_DWORD *)&v69[4 * ((v73 ^ v61) ^ 0x83)] ^ (v60
                                                                                                  - ((2 * v60) & 0xCA25B70C)
                                                                                                  + 1695734662);
  LODWORD(v26_Block_object_dispose(&STACK[0x360], 8) = HIDWORD(v268) ^ 0x2789BBD4 ^ v73;
  HIDWORD(v267) = v73 ^ v71;
  int v75 = v268 ^ 0x8EDEEA78 ^ v73 ^ v71;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v75 ^ v74) >> 24) ^ 0x67));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  int v76 = (v42 >> 2) ^ *(_DWORD *)(v64 + 4 * (((unsigned __int16)(v75 ^ v74) >> 8) ^ 0x97u)) ^ ((((unsigned __int16)(v75 ^ v74) >> 8) ^ 0x62) - ((2 * (((v75 ^ v74) >> 8) ^ 0xD8B62)) & 0x76) - 306434501);
  unsigned int v77 = (v76 - ((2 * v76) & 0xCA25B70C) + 1695734662) ^ *(_DWORD *)&v69[4 * ((v75 ^ v74) ^ 0xE1)];
  LODWORD(v60) = HIDWORD(v268) ^ 0x2789BBD4 ^ *(_DWORD *)(v67
                                                        + 4
                                                        * (((v75 ^ v74 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v77 - ((2 * v77) & 0x5AB7628E) + 760983879);
  HIDWORD(v266) = v75 ^ v74;
  LODWORD(v267) = v75;
  v75 ^= 0x5EF1BA37u;
  HIDWORD(v265) = v60 ^ v268 ^ 0x8EDEEA78;
  LODWORD(v265) = HIDWORD(v265) ^ 0x307C325C ^ v75;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v265 ^ HIDWORD(v266)) >> 24) ^ 0xA4));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  LODWORD(v54) = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xCA25B70C) + 1695734662) ^ *(_DWORD *)&v69[4
                                                                                             * ((v265 ^ BYTE4(v266)) ^ 0x18)];
  unsigned int v78 = v265 ^ HIDWORD(v266) ^ 0xCEE37B5D;
  HIDWORD(v264) = v265 ^ HIDWORD(v266);
  LODWORD(v266) = v60;
  LODWORD(v61) = *(_DWORD *)(v67 + 4 * (((v265 ^ HIDWORD(v266)) >> 16) ^ 0xCAu)) ^ *(_DWORD *)(v64 + 4 * (BYTE1(v78) ^ 0xF5u)) ^ v60 ^ (BYTE1(v78) - ((v78 >> 7) & 0x76) - 306434501) ^ 0x6C780176 ^ (v54 - ((2 * v54) & 0x5AB7628E) + 760983879);
  int v79 = v61 ^ (v75 - ((2 * v75) & 0xD8F002EC) + 1819804022);
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v79 ^ v78) >> 24) ^ 0x70));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  LODWORD(v60) = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x5AB7628E) + 760983879) ^ *(_DWORD *)(v67
                                                                                        + 4
                                                                                        * (((v79 ^ v78 ^ 0xF3443494) >> 16) ^ 0xE4u));
  LODWORD(v60) = (v60 - ((2 * v60) & 0xCA25B70C) + 1695734662) ^ *(_DWORD *)&v69[4
                                                                               * ((v79 ^ v78) ^ 0x91)];
  LODWORD(v263) = v79 ^ v78;
  int v80 = v79 ^ v78 ^ 0x1A89BBD4;
  LODWORD(v60) = (v60 - ((2 * v60) & 0xDB785C76) - 306434501) ^ *(_DWORD *)(v64 + 4 * (BYTE1(v80) ^ 0xF5u));
  int v81 = v61 ^ BYTE1(v80) ^ (v60 - ((2 * v60) & 0xD8F002EC) + 1819804022);
  HIDWORD(v263) = v79;
  LODWORD(v264) = v61;
  LODWORD(v262) = v61 ^ ((HIDWORD(v265) ^ 0x307C325C) - ((2 * (HIDWORD(v265) ^ 0x307C325C)) & 0xD8F002EC) + 1819804022);
  HIDWORD(v261) = v81 ^ v262;
  LODWORD(v60) = v81 ^ v262 ^ 0xE6F58988;
  unsigned int v82 = v60 ^ v79;
  int v83 = v82 ^ v80;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v82 ^ v80) >> 24) ^ 0x43));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  int v84 = v82 ^ v80 ^ 0x4D501F31;
  unsigned int v85 = BYTE2(v84) ^ 0xE2;
  LODWORD(v54) = v84 ^ 0xCA;
  *(void *)((char *)&v261 + 4) = __PAIR64__(v82, v83);
  int v86 = v83 ^ 0x299B7ABE;
  int v87 = *(_DWORD *)(v64 + 4 * (((unsigned __int16)(v83 ^ 0x7ABE) >> 8) ^ 0xF5u)) ^ *(_DWORD *)(v67 + 4 * v85) ^ (((unsigned __int16)(v83 ^ 0x7ABE) >> 8) - (((v83 ^ 0x299B7ABEu) >> 7) & 0x76) - 306434501) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x5AB7628E) + 760983879);
  HIDWORD(v262) = v81;
  unsigned int v88 = v81 ^ *(_DWORD *)&v69[4 * v54] ^ (v87 - ((2 * v87) & 0xCA25B70C) + 1695734662);
  HIDWORD(v260) = v88 ^ v60;
  LODWORD(v54) = v88 ^ v60 ^ 0x5BF36347;
  LODWORD(v260) = v54 ^ v82;
  int v89 = v54 ^ v82 ^ 0x2745D0FF;
  LODWORD(v60) = v89 ^ v86 ^ 0x3DCC6B2B;
  LODWORD(v49) = (BYTE1(v60) - ((v60 >> 7) & 0x76) - 306434501) ^ *(_DWORD *)(v64
                                                                                          + 4 * (BYTE1(v60) ^ 0xF5u));
  LODWORD(v49) = (v49 - ((2 * v49) & 0xCA25B70C) + 1695734662) ^ *(_DWORD *)&v69[4
                                                                               * ((~(v54 ^ v82) ^ v86) ^ 0x6E)];
  HIDWORD(v259) = v89 ^ v86;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (((v89 ^ v86) >> 24) ^ 0x57));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  LODWORD(v261) = v88;
  LODWORD(v259) = (v42 >> 2) ^ *(_DWORD *)(v67 + 4 * (((v89 ^ v86 ^ 0x516EF336u) >> 16) ^ 0x8Bu)) ^ v88 ^ (v49 - ((2 * v49) & 0x5AB7628E) + 760983879);
  HIDWORD(v25_Block_object_dispose(&STACK[0x360], 8) = v259 ^ 0x930000ED ^ v54;
  LODWORD(v25_Block_object_dispose(&STACK[0x360], 8) = HIDWORD(v258) ^ 0x8D06EA22 ^ v89;
  unsigned int v90 = v258 ^ v60;
  LODWORD(v60) = v258 ^ v60 ^ 0x9289BB39;
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (HIBYTE(v90) ^ 0x39));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  HIDWORD(v257) = v90;
  int v91 = *(_DWORD *)&v69[4 * (v60 ^ 0x3D)] ^ *(_DWORD *)(v64
                                                                       + 4
                                                                       * (((unsigned __int16)(v90 ^ 0xAA41) >> 8) ^ 0xF5u)) ^ 0x88AEF5BD ^ (v42 >> 2);
  int v92 = *(_DWORD *)(v67 + 4 * (BYTE2(v60) ^ 0x7Eu)) ^ v259 ^ 0x930000ED ^ ((unsigned __int16)(v90 ^ 0xAA41) >> 8) ^ 0x727A7B4B ^ (v91 - ((2 * v91) & 0x5AB7628E) + 760983879);
  unsigned int v93 = v92 ^ (v89 - ((2 * v89) & 0xE4F4F696) + 1920629579);
  LODWORD(v60) = v93 ^ v90 ^ 0x53DEAA41;
  LODWORD(v49) = (HIDWORD(v258) ^ 0x8D06EA22) - ((2 * (HIDWORD(v258) ^ 0x8D06EA22)) & 0xE4F4F696);
  HIDWORD(v42) = *(_DWORD *)(v66 + 4 * (BYTE3(v60) ^ 0x44));
  LODWORD(v42) = HIDWORD(v42) ^ 0xE26B0640;
  int v94 = *(_DWORD *)(v64 + 4 * (BYTE1(v60) ^ 0xFDu)) ^ *(_DWORD *)&v69[4 * ((v93 ^ v90 ^ 0x41) ^ 0xC4)] ^ ((BYTE1(v60) ^ 8) - 2 * (((v60 >> 8) ^ 0x2E3F08) & 0x3F ^ (v60 >> 8) & 4) - 306434501) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xCA25B70C) + 1695734662);
  HIDWORD(v256) = v60 ^ 0xB6540B43;
  int v95 = (v94 - ((2 * v94) & 0x5AB7628E) + 760983879) ^ *(_DWORD *)(v67 + 4 * (BYTE2(v60) ^ 0x16u));
  int v96 = v93 ^ 0x626A2240;
  unsigned int v97 = (char *)*(&off_1F34B17C0 + v46 - 907) - 8;
  unsigned int v98 = (char *)*(&off_1F34B17C0 + (v46 ^ 0x315)) - 4;
  int v99 = v98[*(unsigned __int8 *)(v39 - 109) ^ 0xA5];
  HIDWORD(v42) = v99 ^ 0x3C;
  LODWORD(v42) = (v99 ^ 0x80) << 24;
  uint64_t v100 = (uint64_t)*(&off_1F34B17C0 + (v46 ^ 0x3C4));
  unsigned int v254 = v98;
  LODWORD(v62) = (v98[*(unsigned __int8 *)(v39 - 105) ^ 0x28] ^ 0xB6) & 0xFFFF00FF | ((((*(unsigned char *)(v39 - 106) ^ 0xAC) + v97[*(unsigned __int8 *)(v39 - 106) ^ 0xA3] - 99) ^ 0xF6) << 8);
  unsigned int v101 = (v98[*(unsigned __int8 *)(v39 - 97) ^ 0x7BLL] ^ 0xC3) & 0xFFFF00FF | ((((*(unsigned char *)(v39 - 98) ^ 0xD0) + v97[*(unsigned __int8 *)(v39 - 98) ^ 0xDFLL] - 99) ^ 0xE4) << 8) | ((*(unsigned __int8 *)(v100 + (*(unsigned __int8 *)(v39 - 99) ^ 0xAALL)) ^ 0xF2) << 16);
  unsigned int v102 = (v98[*(unsigned __int8 *)(v39 - 101) ^ 0x60] ^ 0x77) & 0xFFFF00FF | ((*(unsigned __int8 *)(v100 + (*(unsigned __int8 *)(v39 - 103) ^ 5)) ^ 0xC0) << 16) | (((v97[*(unsigned __int8 *)(v39 - 102) ^ 4] + (*(unsigned char *)(v39 - 102) ^ 0xB) - 99) ^ 0x33) << 8);
  unsigned int v255 = v97;
  unsigned int v252 = (char *)*(&off_1F34B17C0 + v46 - 864) - 12;
  uint64_t v253 = v100;
  LODWORD(v97) = (((((v42 >> 30) ^ 0xDB) >> 2) | (((v42 >> 30) ^ 0xDB) << 6)) | ((*(unsigned __int8 *)(v100 + (*(unsigned __int8 *)(v39 - 111) ^ 0x7ALL)) ^ 0x91) << 16) | ((v252[*(unsigned __int8 *)(v39 - 112) ^ 0x78] ^ 0x6D) << 24) | (((v97[*(unsigned __int8 *)(v39 - 110) ^ 0x5DLL] + (*(unsigned char *)(v39 - 110) ^ 0x52) - 99) ^ 0x5D) << 8)) ^ 0x58B90D9B;
  int v103 = (v102 | ((v252[*(unsigned __int8 *)(v39 - 104) ^ 0x1CLL] ^ 0x98) << 24)) ^ 0x56CDD024;
  LODWORD(v61) = (v62 | ((v252[*(unsigned __int8 *)(v39 - 108) ^ 0xB2] ^ 0x6F) << 24) | ((*(unsigned __int8 *)(v100 + (*(unsigned __int8 *)(v39 - 107) ^ 0x27)) ^ 0xA4) << 16)) ^ 0xAE435B5E;
  int v104 = (v101 | ((v252[*(unsigned __int8 *)(v39 - 100) ^ 0x45] ^ 0x57) << 24)) ^ 0x4E809E65;
  unsigned int v105 = v95 - ((2 * v95) & 0xE4F4F696) + 1920629579;
  int v106 = *(_DWORD *)(v39 - 120);
  LODWORD(v251) = v106 ^ 0x7AC;
  HIDWORD(v251) = (v49 + 1920629579) ^ 0x3DC8BA5D ^ v105;
  HIDWORD(v250) = v106 ^ 0x798;
  LODWORD(v250) = v106 ^ 0x793;
  LODWORD(v257) = v92;
  LODWORD(v249) = v105 ^ v92;
  HIDWORD(v249) = v92 ^ (v49 + 1920629579);
  HIDWORD(a6) = v106 ^ 0x79F;
  LODWORD(v256) = v96;
  HIDWORD(a4) = HIDWORD(v251) ^ v96;
  int v107 = v106;
  *(void *)(v39 - 200) = 7;
  int v108 = v98[a2[7] ^ 0x41];
  *(void *)(v39 - 16_Block_object_dispose(&STACK[0x360], 8) = 12;
  LOBYTE(v106) = a2[12];
  *(void *)(v39 - 160) = 8;
  *(void *)(v39 - 12_Block_object_dispose(&STACK[0x360], 8) = 1;
  int v109 = v252[(v106 ^ (((v107 + 85) | 0x41) - 9))] ^ 0xEC;
  int v110 = v252[a2[8] ^ 0xC1] ^ 0x58;
  LODWORD(v62) = *(unsigned __int8 *)(v100 + (a2[1] ^ 0x66)) ^ 0x7D;
  *(void *)(v39 - 136) = 15;
  uint64_t v111 = a2[15] ^ 0xE9;
  *(void *)(v39 - 152) = 11;
  int v112 = v98[v111] ^ 0x61 | (v109 << 24);
  LODWORD(v111) = v98[a2[11] ^ 0xC3];
  *(void *)(v39 - 176) = 0;
  LODWORD(v66) = (v62 << 16) | ((v252[*a2 ^ 0x30] ^ 0xDC) << 24);
  *(void *)(v39 - 144) = 2;
  LODWORD(v66) = v66 & 0xFFFF00FF | (((v255[a2[2] ^ 0xC0] + (a2[2] ^ 0xCF) - 99) ^ 0xF9) << 8);
  *(void *)(v39 - 216) = 4;
  int v113 = v108 ^ 0xB1 | ((v252[a2[4] ^ 0xFCLL] ^ 0x62) << 24);
  *(void *)(v39 - 20_Block_object_dispose(&STACK[0x360], 8) = 5;
  int v114 = v113 | ((*(unsigned __int8 *)(v100 + (a2[5] ^ 0xA9)) ^ 0x40) << 16);
  *(void *)(v39 - 224) = 9;
  LODWORD(v111) = v111 ^ 0xAB | (v110 << 24) | ((*(unsigned __int8 *)(v100 + (a2[9] ^ 0x5DLL)) ^ 0xAE) << 16);
  *(_DWORD *)(v39 - 252) = -1022760981;
  *(void *)(v39 - 192) = 10;
  LODWORD(v111) = v111 & 0xFFFF00FF | (((v255[a2[10] ^ 0xD5] + (a2[10] ^ 0xDA) - 99) ^ 0xCF) << 8);
  *(void *)(v39 - 184) = 14;
  unsigned int v115 = v112 & 0xFFFF00FF | ((v255[a2[14] ^ 0xE4] + (a2[14] ^ 0xEB) + 29) << 8);
  *(void *)(v39 - 232) = 3;
  int v116 = v98[a2[3] ^ 0xDCLL] ^ 0x75;
  *(void *)(v39 - 240) = 13;
  LODWORD(v49) = v115 | ((*(unsigned __int8 *)(v100 + (a2[13] ^ 0x92)) ^ 0x93) << 16);
  *(void *)(v39 - 24_Block_object_dispose(&STACK[0x360], 8) = 6;
  unsigned int v117 = v114 & 0xFFFF00FF | (((v255[a2[6] ^ 0x4FLL] + (a2[6] ^ 0x40) - 99) ^ 0xB7) << 8);
  unsigned int v118 = v97 ^ v275 ^ ((v116 | v66) - 2 * ((v116 | v66) & 0x6100B4B2 ^ v116 & 0x10) - 520047454);
  LODWORD(v66) = v61 ^ v276 ^ (v117 - ((2 * v117) & 0x2FF5C5CE) + 402318055);
  unsigned int v119 = v104 ^ v274 ^ (v49 - ((2 * v49) & 0xEE724FB8) - 147249188);
  LODWORD(v54) = v103 ^ v63 ^ (v111 - ((2 * v111) & 0xDEE8D33A) - 277583459);
  uint64_t v120 = (uint64_t)*(&off_1F34B17C0 + (int)v250);
  int v121 = *(_DWORD *)(v120 + 4 * (BYTE3(v54) ^ 0x3F));
  HIDWORD(v42) = ~v121;
  LODWORD(v42) = v121 ^ 0x4F25D27C;
  int v122 = (char *)*(&off_1F34B17C0 + (int)v251) - 12;
  int v123 = (v42 >> 1) ^ *(_DWORD *)&v122[4 * (BYTE2(v119) ^ 0x34)] ^ ((BYTE2(v119) ^ 0x68)
                                                                  - 1857596285
                                                                  - ((v119 >> 15) & 0x106));
  unsigned int v124 = (char *)*(&off_1F34B17C0 + SHIDWORD(v250)) - 4;
  unsigned int v125 = *(_DWORD *)&v124[4 * (v54 ^ 0xC6)] ^ ((BYTE2(v118) ^ 0xD5)
                                                              - 1857596285
                                                              - ((2 * (HIWORD(v118) ^ 0x6CD5)) & 0x106)) ^ ((v54 ^ 0xAB) + 466139313 + ((2 * (v54 ^ 0xAB) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v122[4 * (BYTE2(v118) ^ 0x89)];
  unsigned int v126 = *(_DWORD *)&v122[4 * (BYTE2(v66) ^ 0x8C)] ^ *(_DWORD *)&v124[4 * (v119 ^ 0xB6)] ^ ((v119 ^ 0xDB) + 466139313 + ((2 * (v119 ^ 0xDB) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ ((BYTE2(v66) ^ 0xD0) - 1857596285 - ((2 * (WORD1(v66) ^ 0xC8D0)) & 0x106));
  LODWORD(v49) = *(_DWORD *)(v120 + 4 * (BYTE3(v66) ^ 0xC8));
  HIDWORD(v42) = ~v49;
  LODWORD(v42) = v49 ^ 0x4F25D27C;
  int v127 = ((BYTE2(v54) ^ 0xAD) - 1857596285 - 2 * ((WORD1(v54) ^ 0x3FAD) & 0x93 ^ WORD1(v54) & 0x10)) ^ *(_DWORD *)&v124[4 * (v118 ^ 0x1C)] ^ ((v118 ^ 0x71) + 466139313 + ((2 * (v118 ^ 0x71) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ (v42 >> 1) ^ *(_DWORD *)&v122[4 * (BYTE2(v54) ^ 0xF1)];
  LODWORD(v111) = *(_DWORD *)(v120 + 4 * (HIBYTE(v118) ^ 0x6C));
  HIDWORD(v42) = ~v111;
  LODWORD(v42) = v111 ^ 0x4F25D27C;
  LODWORD(v111) = v42 >> 1;
  LODWORD(v49) = *(_DWORD *)(v120 + 4 * (HIBYTE(v119) ^ 0xB7));
  HIDWORD(v42) = ~v49;
  LODWORD(v42) = v49 ^ 0x4F25D27C;
  int v128 = v66;
  int v129 = (char *)*(&off_1F34B17C0 + v107 - 1914) - 4;
  LODWORD(v62) = *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0x2F)];
  LODWORD(v66) = *(_DWORD *)&v129[4 * (BYTE1(v118) ^ 0xDE)] ^ v63 ^ 0xE6 ^ v272 ^ ((v66 ^ 0x10)
                                                                                 + 466139313
                                                                                 + ((2 * (v66 ^ 0x10)
                                                                                   + 126) & 0x62 ^ 0xFFEE7BFF)) ^ (v123 - 130323328 - ((2 * v123) & 0xF076D900));
  int v130 = (v125 - 130323328 - ((2 * v125) & 0xF076D900)) ^ v62 ^ (v42 >> 1);
  LODWORD(v49) = *(_DWORD *)&v129[4 * (BYTE1(v119) ^ 0x66)];
  int v131 = v130 - ((2 * v130) & 0x2A876602);
  int v132 = *(_DWORD *)&v124[4 * (v128 ^ 0x7D)];
  int v133 = *(_DWORD *)&v129[4 * (BYTE1(v54) ^ 0x29)] ^ v273 ^ v111;
  LODWORD(v111) = v66 ^ v132;
  unsigned int v134 = v133 ^ (v126 - 130323328 - ((2 * v126) & 0xF076D900));
  unsigned int v135 = v49 ^ v272 ^ (v127 - 130323328 - ((2 * v127) & 0xF076D900));
  int v136 = *(_DWORD *)(v120 + 4 * ((v66 ^ ~v132) >> 24));
  HIDWORD(v42) = ~v136;
  LODWORD(v42) = v136 ^ 0x4F25D27C;
  int v137 = v42 >> 1;
  LODWORD(v66) = *(_DWORD *)(v120 + 4 * (HIBYTE(v134) ^ 0x91));
  HIDWORD(v42) = ~v66;
  LODWORD(v42) = v66 ^ 0x4F25D27C;
  LODWORD(v66) = v42 >> 1;
  LODWORD(v49) = *(_DWORD *)(v120 + 4 * (HIBYTE(v135) ^ 0xA3));
  HIDWORD(v42) = ~v49;
  LODWORD(v42) = v49 ^ 0x4F25D27C;
  int v138 = v66 ^ *(_DWORD *)&v122[4 * (BYTE2(v135) ^ 0xF0)] ^ ((BYTE2(v135) ^ 0xAC)
                                                           - 1857596285
                                                           - ((2 * (HIWORD(v135) ^ 0xA3AC)) & 0x106));
  int v139 = (v42 >> 1) ^ *(_DWORD *)&v122[4 * (BYTE2(v111) ^ 0x15)] ^ *(_DWORD *)&v124[4 * (v134 ^ 0x7B)] ^ ((BYTE2(v111) ^ 0x49) - 1857596285 - 2 * ((WORD1(v111) ^ 0xFF49) & 0x93 ^ WORD1(v111) & 0x10)) ^ ((v134 ^ 0x16) + 466139313 + ((2 * (v134 ^ 0x16) + 126) & 0x62 ^ 0xFFEE7BFF));
  LODWORD(v66) = v139 - 130323328 - ((2 * v139) & 0xF076D900);
  unsigned int v140 = (v131 - 1790725375) ^ v271;
  unsigned int v141 = (v138 - 130323328 - ((2 * v138) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0x2C)];
  unsigned int v142 = v137 ^ *(_DWORD *)&v124[4 * (v135 ^ 3)] ^ ((v135 ^ 0x6E)
                                                                   + 466139313
                                                                   + ((2 * (v135 ^ 0x6E) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ ((BYTE2(v140) ^ 0x7A) - 1857596285 - ((2 * (HIWORD(v140) ^ 0xFB7A)) & 0x106)) ^ *(_DWORD *)&v122[4 * (BYTE2(v140) ^ 0x26)];
  LODWORD(v62) = *(_DWORD *)&v122[4 * (BYTE2(v134) ^ 0x2E)] ^ ((BYTE2(v134) ^ 0x72)
                                                             - 1857596285
                                                             - 2 * ((HIWORD(v134) ^ 0x9172) & 0x87 ^ HIWORD(v134) & 4));
  *(_DWORD *)(v39 - 256) = -130323327;
  LODWORD(v49) = *(_DWORD *)(v120 + 4 * (HIBYTE(v140) ^ 0xFB));
  HIDWORD(v42) = ~v49;
  LODWORD(v42) = v49 ^ 0x4F25D27C;
  int v143 = ((v111 ^ 0xFC) + 466139313 + ((2 * (v111 ^ 0xFC) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v129[4 * (BYTE1(v135) ^ 0xBD)] ^ *(_DWORD *)&v124[4 * (v111 ^ 0x91)] ^ (v62 - 130323327 + ~((2 * v62) & 0xF076D900));
  LODWORD(v111) = ((((v131 + 1) ^ v271) ^ 0x4C) - 1726037377) ^ v270 ^ *(_DWORD *)&v124[4 * (((v131 + 1) ^ v271) ^ 0x21)] ^ (v141 - 2102790607 - ((2 * v141) & 0x553EC62));
  unsigned int v144 = *(_DWORD *)&v129[4 * (BYTE1(v134) ^ 0x57)] ^ HIDWORD(v267) ^ (v142 - 130323328 - ((2 * v142) & 0xF076D900));
  unsigned int v145 = ((v143 ^ (v42 >> 1)) - ((2 * (v143 ^ (v42 >> 1))) & 0xCE23C394) + 1729225162) ^ v269;
  int v146 = *(_DWORD *)(v120 + 4 * (HIBYTE(v145) ^ 0x8A));
  LODWORD(v66) = *(_DWORD *)&v129[4 * (BYTE1(v140) ^ 0x28)] ^ v73 ^ v66;
  HIDWORD(v42) = ~v146;
  LODWORD(v42) = v146 ^ 0x4F25D27C;
  unsigned int v147 = ((v66 ^ 0xA1) + 466139313 + ((2 * (v66 ^ 0xA1) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v66 ^ 0xCC)];
  int v148 = *(_DWORD *)&v122[4 * (BYTE2(v111) ^ 0xDB)] ^ ((BYTE2(v111) ^ 0x87)
                                                     - 1857596285
                                                     - 2 * ((WORD1(v111) ^ 0x3A87) & 0x9B ^ WORD1(v111) & 0x18)) ^ (v42 >> 1);
  unsigned int v149 = (v147 - 130323328 - ((2 * v147) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0xDE)];
  LODWORD(v62) = ((v111 ^ 0x9E)
                + 466139313
                + ((2 * (v111 ^ 0x9E) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v111 ^ 0xF3)];
  int v150 = v62 - 130323328 - ((2 * v62) & 0xF076D900);
  LODWORD(v49) = *(_DWORD *)(v120 + 4 * (HIBYTE(v144) ^ 0x37));
  unsigned int v151 = (v148 - 130323328 - ((2 * v148) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0x57)];
  HIDWORD(v42) = ~v49;
  LODWORD(v42) = v49 ^ 0x4F25D27C;
  LODWORD(v62) = v42 >> 1;
  LODWORD(v111) = *(_DWORD *)(v120 + 4 * (BYTE3(v111) ^ 0x3A));
  int v152 = ((v144 ^ 0x740CBC3A) >> 16);
  int v153 = v152 - 1857596285 - ((v144 >> 15) & 0x106);
  HIDWORD(v42) = ~v111;
  LODWORD(v42) = v111 ^ 0x4F25D27C;
  LODWORD(v111) = BYTE2(v66) ^ *(_DWORD *)&v122[4 * (BYTE2(v66) ^ 0xF6)] ^ *(_DWORD *)&v129[4
                                                                                          * ((unsigned __int16)(v144 ^ 0xBC3A) >> 8)] ^ 0x697C38A9 ^ (v42 >> 1);
  LODWORD(v111) = ((v145 ^ 0xDA) - 1726037377) ^ HIDWORD(v268) ^ *(_DWORD *)&v124[4
                                                                                                 * (v145 ^ 0xB7)] ^ (v111 - 2102790607 - ((2 * v111) & 0x553EC62));
  LODWORD(v66) = *(_DWORD *)(v120 + 4 * (BYTE3(v66) ^ 0x7C));
  unsigned int v154 = ((v144 ^ 0x3A) - 1726037377) ^ HIDWORD(v266) ^ *(_DWORD *)&v124[4
                                                                                        * (v144 ^ 0x57)] ^ (v151 - 2102790607 - ((2 * v151) & 0x553EC62));
  HIDWORD(v42) = ~v66;
  LODWORD(v42) = v66 ^ 0x4F25D27C;
  LODWORD(v54) = *(_DWORD *)&v122[4 * (BYTE2(v145) ^ 0x97)] ^ v267 ^ BYTE2(v145) ^ v62 ^ (v149
                                                                                        - 1857596285
                                                                                        - ((2 * v149) & 0x228EA906));
  unsigned int v155 = *(_DWORD *)&v129[4 * (BYTE1(v145) ^ 1)] ^ v268 ^ v153 ^ *(_DWORD *)&v122[4 * (v152 ^ 0x5C)] ^ (v42 >> 1) ^ v150;
  int v156 = ((v54 ^ 8) + 466139313 + ((2 * (v54 ^ 0xFA64A508) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v54 ^ 0x65)];
  int v157 = *(_DWORD *)(v120 + 4 * (BYTE3(v111) ^ 0x5B));
  unsigned int v158 = v156 - 130323328 - ((2 * v156) & 0xF076D900);
  HIDWORD(v42) = ~v157;
  LODWORD(v42) = v157 ^ 0x4F25D27C;
  int v159 = (v42 >> 1) ^ *(_DWORD *)&v124[4 * (v154 ^ 0x1F)];
  int v160 = *(_DWORD *)(v120 + 4 * (HIBYTE(v154) ^ 0x28));
  HIDWORD(v42) = ~v160;
  LODWORD(v42) = v160 ^ 0x4F25D27C;
  int v161 = v42 >> 1;
  unsigned int v162 = v159 ^ ((v154 ^ 0x72)
               + 466139313
               + ((2 * (v154 ^ 0x72) + 126) & 0x62 ^ 0xFFEE7BFF));
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * (BYTE3(v54) ^ 0xB9));
  unsigned int v163 = v162 - 130323328 - ((2 * v162) & 0xF076D900);
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  int v164 = v42 >> 1;
  LODWORD(v66) = *(_DWORD *)(v120 + 4 * (HIBYTE(v155) ^ 0xB4));
  HIDWORD(v42) = ~v66;
  LODWORD(v42) = v66 ^ 0x4F25D27C;
  unsigned int v165 = v164 ^ *(_DWORD *)&v124[4 * (v155 ^ 0x8B)] ^ ((v155 ^ 0xE6)
                                                                      + 466139313
                                                                      + ((2 * (v155 ^ 0xE6) + 126) & 0x62 ^ 0xFFEE7BFF));
  LODWORD(v49) = BYTE2(v111) ^ 0x95;
  LODWORD(v50) = v49 - 1857596285 - ((2 * (WORD1(v111) ^ 0x5B95)) & 0x106);
  LODWORD(v100) = v111;
  unsigned int v166 = (v111 ^ 0xF4) + 466139313 + ((2 * (v111 ^ 0xF4) + 126) & 0x62 ^ 0xFFEE7BFF);
  LODWORD(v66) = ((BYTE2(v154) ^ 0x14) - 1857596285 - ((v154 >> 15) & 0x106)) ^ v265 ^ *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0x1F)] ^ *(_DWORD *)&v122[4 * (BYTE2(v154) ^ 0x48)] ^ (v165 - 130323328 - ((2 * v165) & 0xF076D900));
  LODWORD(v111) = ((v54 ^ 0xFA64A508) >> 16);
  unsigned int v167 = *(_DWORD *)&v129[4 * ((unsigned __int16)(v54 ^ 0xA508) >> 8)] ^ v266 ^ ((BYTE2(v155) ^ 0x59)
                                                                                                - 1857596285
                                                                                                - ((2
                                                                                                  * (HIWORD(v155) ^ 0xB459)) & 0x106)) ^ *(_DWORD *)&v122[4 * (BYTE2(v155) ^ 5)] ^ v163;
  int v168 = (v111 - 1857596285 - ((v54 >> 15) & 0x106)) ^ HIDWORD(v265) ^ *(_DWORD *)&v124[4 * (v100 ^ 0x99)] ^ v166 ^ ((v42 >> 1) + *(_DWORD *)(v39 - 256) + ~((2 * (v42 >> 1)) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v154) ^ 0x12)];
  int v169 = *(_DWORD *)&v129[4 * (BYTE1(v155) ^ 0x34)];
  unsigned int v170 = v168 ^ *(_DWORD *)&v122[4 * (v111 ^ 0x5C)];
  unsigned int v171 = v169 ^ v265 ^ HIDWORD(v266) ^ v50 ^ *(_DWORD *)&v122[4 * (v49 ^ 0x5C)] ^ v158 ^ v161;
  int v172 = *(_DWORD *)(v120 + 4 * (HIBYTE(v171) ^ 0xEB));
  HIDWORD(v42) = ~v172;
  LODWORD(v42) = v172 ^ 0x4F25D27C;
  LODWORD(v111) = (v42 >> 1) - 130323328 - ((2 * (v42 >> 1)) & 0xF076D900);
  int v173 = ((BYTE2(v170) ^ 0x81) - 1857596285 - 2 * ((HIWORD(v170) ^ 0x1481) & 0x9B ^ HIWORD(v170) & 0x18)) ^ *(_DWORD *)&v122[4 * (BYTE2(v170) ^ 0xDD)];
  LODWORD(v62) = ((v170 ^ 0x51)
                + 466139313
                + ((2 * (v170 ^ 0x51) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v170 ^ 0x3C)];
  LODWORD(v100) = *(_DWORD *)&v122[4 * (BYTE2(v66) ^ 0xDB)] ^ ((BYTE2(v66) ^ 0x87)
                                                             - 1857596285
                                                             + (~(2 * (WORD1(v66) ^ 0x7787)) | 0xFFFFFEF9)
                                                             + 1);
  int v174 = *(_DWORD *)&v122[4 * (((v171 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v171 ^ 0xA87CE98B) >> 16) ^ (v62 - 1857596285 - ((2 * v62) & 0x228EA906));
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * (HIBYTE(v170) ^ 0x14));
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  LODWORD(v62) = v42 >> 1;
  int v175 = *(_DWORD *)(v120 + 4 * (HIBYTE(v167) ^ 0x9A));
  HIDWORD(v42) = ~v175;
  LODWORD(v42) = v175 ^ 0x4F25D27C;
  int v176 = ((v171 ^ 0x8B) + 466139313 + ((2 * (v171 ^ 0xA87CE98B) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0xDE)] ^ *(_DWORD *)&v124[4 * (v171 ^ 0xE6)] ^ (v173 - 130323328 - ((2 * v173) & 0xF076D900)) ^ (v42 >> 1);
  LODWORD(v50) = *(_DWORD *)(v120 + 4 * (BYTE3(v66) ^ 0x77));
  HIDWORD(v42) = ~v50;
  LODWORD(v42) = v50 ^ 0x4F25D27C;
  LODWORD(v66) = *(_DWORD *)&v129[4 * (BYTE1(v170) ^ 0x34)] ^ v263 ^ ((BYTE2(v167) ^ 0xE9)
                                                                    - 1857596285
                                                                    - 2
                                                                    * ((HIWORD(v167) ^ 0x9AE9) & 0x87 ^ HIWORD(v167) & 4)) ^ *(_DWORD *)&v122[4 * (BYTE2(v167) ^ 0xB5)] ^ ((v66 ^ 0x9E) + 466139313 + ((2 * (v66 ^ 0x9E) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ v111 ^ *(_DWORD *)&v124[4 * (v66 ^ 0xF3)];
  unsigned int v177 = *(_DWORD *)&v129[4 * (BYTE1(v171) ^ 0xB)] ^ v262 ^ ((v167 ^ 0xA8)
                                                           + 466139313
                                                           + ((2 * (v167 ^ 0xA8) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ v62 ^ (v100 - 130323328 - ((2 * v100) & 0xF076D900)) ^ *(_DWORD *)&v124[4 * (v167 ^ 0xC5)];
  unsigned int v178 = *(_DWORD *)&v129[4 * (BYTE1(v167) ^ 0x2D)] ^ HIDWORD(v263) ^ (v42 >> 1) ^ (v174
                                                                                  - 130323328
                                                                                  - ((2 * v174) & 0xF076D900));
  BYTE1(v170) = BYTE1(v177) ^ 0x65;
  int v179 = ((v177 ^ 0x2E0E654A) >> 16);
  unsigned int v180 = v179 - 1857596285 - (((v177 ^ 0x2E0E654A) >> 15) & 0x106);
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * (HIBYTE(v177) ^ 0x6D));
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  LODWORD(v62) = v42 >> 1;
  LODWORD(v111) = (v176 + 1819804022 - ((2 * v176) & 0xD8F002EC)) ^ v264;
  int v181 = *(_DWORD *)&v122[4 * (v179 ^ 0x5C)];
  unsigned int v182 = *(_DWORD *)(v120 + 4 * (BYTE3(v111) ^ 0xFD));
  int v183 = v181 ^ (~v182 << 31) ^ (v182 >> 1) ^ v180 ^ 0x2792E93E;
  int v184 = ((v177 ^ 0x4A) + 466139312 - ((2 * (v177 ^ 0x4A) + 1934590) & 0x118462)) ^ *(_DWORD *)&v124[4 * (v177 ^ 0x27)];
  int v185 = *(_DWORD *)(v120 + 4 * (HIBYTE(v178) ^ 0xAE));
  HIDWORD(v42) = ~v185;
  LODWORD(v42) = v185 ^ 0x4F25D27C;
  unsigned int v186 = v183 - 130323328 - ((2 * v183) & 0xF076D900);
  int v187 = (v42 >> 1) ^ *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0xA4)] ^ (v184 - 130323328 - ((2 * v184) & 0xF076D900));
  int v188 = v187 - 1857596285 - ((2 * v187) & 0x228EA906);
  int v189 = *(_DWORD *)&v122[4 * (BYTE2(v178) ^ 0x3A)] ^ v62 ^ *(_DWORD *)&v124[4 * (v111 ^ 0x4D)] ^ ((BYTE2(v178) ^ 0x66) - 1857596285 - ((2 * (HIWORD(v178) ^ 0xAE66)) & 0x106)) ^ ((v111 ^ 0x20) + 466139313 + ((2 * (v111 ^ 0x20) + 126) & 0x62 ^ 0xFFEE7BFF));
  unsigned int v190 = ((v178 ^ 0xB3) - 1856360704 + ((2 * (v178 ^ 0xB3) + 254) & 0x100 ^ 0xCFCB7FFF)) ^ *(_DWORD *)&v129[4 * BYTE1(v170)];
  int v191 = (v190 - 2102790607 - ((2 * v190) & 0x553EC62)) ^ *(_DWORD *)&v124[4 * (v178 ^ 0xDE)];
  LODWORD(v62) = *(_DWORD *)&v122[4 * (BYTE2(v111) ^ 0x40)] ^ ((BYTE2(v111) ^ 0x1C)
                                                             - 1857596285
                                                             - ((v111 >> 15) & 0x106));
  int v192 = (v62 ^ 0xD9E215AF ^ -(v62 ^ 0xD9E215AF) ^ ((v62 ^ 0x431D28D3 ^ v191) + (v191 ^ 0x6500C283) + 1))
       + (v191 ^ 0x6500C283);
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * ((v66 ^ 0x3F162902) >> 24));
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  LODWORD(v54) = ((v66 ^ 0x3F162902) >> 16) ^ DWORD2(v261) ^ *(_DWORD *)&v122[4 * (((v66 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v188;
  LODWORD(v111) = (v42 >> 1) ^ DWORD1(v261) ^ v192;
  unsigned int v193 = *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0xCB)] ^ HIDWORD(v261) ^ (v189 - 130323328 - ((2 * v189) & 0xF076D900));
  unsigned int v194 = *(_DWORD *)&v129[4 * (BYTE1(v178) ^ 0x7C)] ^ HIDWORD(v262) ^ ((v66 ^ 2)
                                                                     + 466139313
                                                                     + ((2 * (v66 ^ 0x3F162902) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v66 ^ 0x6F)] ^ v186;
  int v195 = ((BYTE2(v194) ^ 0xE9) - 1857596285 - ((2 * (HIWORD(v194) ^ 0xB8E9)) & 0x106)) ^ *(_DWORD *)&v122[4 * (BYTE2(v194) ^ 0xB5)];
  *(_DWORD *)(v39 - 256) = v195 - 130323328 - ((2 * v195) & 0xF076D900);
  LODWORD(v100) = *(_DWORD *)(v120 + 4 * (BYTE3(v54) ^ 0x9D));
  HIDWORD(v42) = ~v100;
  LODWORD(v42) = v100 ^ 0x4F25D27C;
  LODWORD(v100) = v42 >> 1;
  LODWORD(v66) = *(_DWORD *)(v120 + 4 * (HIBYTE(v193) ^ 0x61));
  HIDWORD(v42) = ~v66;
  LODWORD(v42) = v66 ^ 0x4F25D27C;
  int v196 = *(_DWORD *)&v124[4 * (v194 ^ 0xC5)] ^ *(_DWORD *)&v122[4 * (BYTE2(v54) ^ 0x28)] ^ ((v194 ^ 0xA8) + 466139313 + ((2 * (v194 ^ 0xA8) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ ((BYTE2(v54) ^ 0x74) - 1857596285 - ((v54 >> 15) & 0x106)) ^ (v42 >> 1);
  int v197 = v100 ^ ((BYTE2(v111) ^ 0xE6) - 1857596285 - 2 * ((WORD1(v111) ^ 0xB0E6) & 0x8B ^ WORD1(v111) & 8)) ^ *(_DWORD *)&v122[4 * (BYTE2(v111) ^ 0xBA)];
  LODWORD(v50) = *(_DWORD *)(v120 + 4 * (HIBYTE(v194) ^ 0xB8));
  HIDWORD(v42) = ~v50;
  LODWORD(v42) = v50 ^ 0x4F25D27C;
  int v198 = ((BYTE2(v193) ^ 8) - 1857596285 - ((v193 >> 15) & 0x106)) ^ *(_DWORD *)&v122[4 * (BYTE2(v193) ^ 0x54)] ^ *(_DWORD *)&v124[4 * (v111 ^ 0x29)] ^ ((v111 ^ 0x44) + 466139312 - ((2 * (v111 ^ 0x44) + 1934590) & 0x118462)) ^ (v42 >> 1);
  LODWORD(v66) = *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0xDD)] ^ HIDWORD(v260) ^ (v196
                                                                             - 130323328
                                                                             - ((2 * v196) & 0xF076D900));
  int v199 = *(_DWORD *)(v120 + 4 * (BYTE3(v111) ^ 0xB0));
  HIDWORD(v42) = ~v199;
  LODWORD(v42) = v199 ^ 0x4F25D27C;
  unsigned int v200 = *(_DWORD *)&v129[4 * (BYTE1(v54) ^ 0xBD)] ^ v261 ^ (v198 - 130323328 - ((2 * v198) & 0xF076D900));
  int v201 = *(_DWORD *)&v129[4 * (BYTE1(v194) ^ 0x2D)];
  unsigned int v202 = *(_DWORD *)&v129[4 * (BYTE1(v193) ^ 0x8F)] ^ HIDWORD(v259) ^ *(_DWORD *)&v124[4 * (v54 ^ 0xB4)] ^ ((v54 ^ 0xD9) + 466139313 + ((2 * (v54 ^ 0xD9) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ (v42 >> 1) ^ *(_DWORD *)(v39 - 256);
  unsigned int v203 = ((v193 ^ 0x85) + 466139313 + ((2 * (v193 ^ 0x85) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ v260 ^ *(_DWORD *)&v124[4 * (v193 ^ 0xE8)] ^ v201 ^ (v197 - 130323328 - ((2 * v197) & 0xF076D900));
  int v204 = *(_DWORD *)(v120 + 4 * (HIBYTE(v202) ^ 0x18));
  HIDWORD(v42) = ~v204;
  LODWORD(v42) = v204 ^ 0x4F25D27C;
  int v205 = ((BYTE2(v203) ^ 0x66) - 1857596285 - ((2 * (HIWORD(v203) ^ 0xAE66)) & 0x106)) ^ *(_DWORD *)&v122[4 * (BYTE2(v203) ^ 0x3A)];
  LODWORD(v111) = ((v42 >> 1) - 1857596285 - ((2 * (v42 >> 1)) & 0x228EA906)) ^ *(_DWORD *)&v122[4
                                                                                               * (BYTE2(v200) ^ 0x40)];
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * (HIBYTE(v200) ^ 0xEF));
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  int v206 = (v42 >> 1) ^ *(_DWORD *)&v124[4 * (v202 ^ 0x90)] ^ ((v202 ^ 0xFD)
                                                                            + 466139313
                                                                            + ((2 * (v202 ^ 0xFD) + 126) & 0x62 ^ 0xFFEE7BFF));
  unsigned int v207 = v205 - 130323328 - ((2 * v205) & 0xF076D900);
  unsigned int v208 = v206 - 130323328 - ((2 * v206) & 0xF076D900);
  unsigned int v209 = *(_DWORD *)&v124[4 * (v66 ^ 0x27)] ^ ((v66 ^ 0x4A)
                                                              + 466139313
                                                              + ((2 * (v66 ^ 0x4A) + 126) & 0x62 ^ 0xFFEE7BFF));
  int v210 = *(_DWORD *)(v120 + 4 * (HIBYTE(v203) ^ 0xAE));
  HIDWORD(v42) = ~v210;
  LODWORD(v42) = v210 ^ 0x4F25D27C;
  int v211 = (v42 >> 1) ^ *(_DWORD *)&v122[4 * (BYTE2(v202) ^ 0xF)] ^ (v209 - 1857596285 - ((2 * v209) & 0x228EA906));
  LODWORD(v100) = *(_DWORD *)(v120 + 4 * (BYTE3(v66) ^ 0xDC));
  HIDWORD(v42) = ~v100;
  LODWORD(v42) = v100 ^ 0x4F25D27C;
  int v212 = v111 - 130323328 - ((2 * v111) & 0xF076D900);
  LODWORD(v54) = ((BYTE2(v66) ^ 0xE) - 1857596285 - 2 * ((WORD1(v66) ^ 0xDC0E) & 0x93 ^ WORD1(v66) & 0x10)) ^ v259 ^ *(_DWORD *)&v129[4 * (BYTE1(v203) ^ 0x7C)] ^ *(_DWORD *)&v122[4 * (BYTE2(v66) ^ 0x52)] ^ v208;
  LODWORD(v111) = *(_DWORD *)&v129[4 * (BYTE1(v202) ^ 0x1B)] ^ HIDWORD(v258) ^ *(_DWORD *)&v124[4
                                                                                              * (v200 ^ 0x4D)] ^ ((v200 ^ 0x20) + 466139312 - ((2 * (v200 ^ 0x20) + 1934590) & 0x118462)) ^ (v42 >> 1) ^ v207;
  unsigned int v213 = v212 ^ HIDWORD(v257) ^ ((v203 ^ 0xB3)
                               + 466139313
                               + ((2 * (v203 ^ 0xB3) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v129[4 * (BYTE1(v66) ^ 0x65)] ^ *(_DWORD *)&v124[4 * (v203 ^ 0xDE)];
  LODWORD(v66) = v213 ^ BYTE2(v200);
  unsigned int v214 = *(_DWORD *)&v129[4 * (BYTE1(v200) ^ 0xA4)] ^ v258 ^ (v211 - 130323328 - ((2 * v211) & 0xF076D900));
  int v215 = (v214 ^ BYTE2(v202));
  LODWORD(v62) = *(_DWORD *)(v120 + 4 * ((v66 ^ 0x7641388B) >> 24));
  HIDWORD(v42) = ~v62;
  LODWORD(v42) = v62 ^ 0x4F25D27C;
  int v216 = v42 >> 1;
  LODWORD(v50) = *(_DWORD *)(v120 + 4 * ((v54 ^ 0xF7E9CFA8) >> 24));
  HIDWORD(v42) = ~v50;
  LODWORD(v42) = v50 ^ 0x4F25D27C;
  LODWORD(v50) = v42 >> 1;
  unsigned int v217 = (((v66 ^ 0x7641388B) >> 16)
        - 1857596285
        - (((v66 ^ 0x7641388B) >> 15) & 0x106)) ^ *(_DWORD *)&v122[4
                                                                               * (((v66 ^ 0x7641388B) >> 16) ^ 0x5C)];
  int v218 = *(_DWORD *)(v120 + 4 * (HIBYTE(v214) ^ 0xE7));
  HIDWORD(v42) = ~v218;
  LODWORD(v42) = v218 ^ 0x4F25D27C;
  int v219 = v42 >> 1;
  unsigned int v220 = v216 ^ *(_DWORD *)&v124[4 * (v215 ^ 0x18)] ^ (((v54 ^ 0xF7E9CFA8) >> 16)
                                                     - 1857596285
                                                     - (((v54 ^ 0xF7E9CFA8) >> 15) & 0x106)) ^ *(_DWORD *)&v122[4 * (((v54 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v215 ^ 0x75) + 466139312 - ((2 * (v215 ^ 0x75) + 1934590) & 0x118462));
  unsigned int v221 = (v220 - 130323328 - ((2 * v220) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v111) ^ 0xEC)];
  int v222 = v50 ^ *(_DWORD *)&v122[4 * (BYTE2(v111) ^ 0xA7)] ^ ((BYTE2(v111) ^ 0xFB)
                                                                         - 1857596285
                                                                         - ((2 * (WORD1(v111) ^ 0x57FB)) & 0x106)) ^ ((v66 ^ 0x8B) + 466139313 + ((2 * (v66 ^ 0x7641388B) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ *(_DWORD *)&v124[4 * (v66 ^ 0xE6)];
  LODWORD(v120) = *(_DWORD *)(v120 + 4 * (BYTE3(v111) ^ 0x57));
  HIDWORD(v42) = ~v120;
  LODWORD(v42) = v120 ^ 0x4F25D27C;
  unsigned int v223 = (v222 - 130323328 - ((2 * v222) & 0xF076D900)) ^ *(_DWORD *)&v129[4 * (BYTE1(v214) ^ 0x6D)];
  int v224 = HIWORD(v214) ^ 0xE731;
  int v225 = BYTE2(v214) ^ 0x31;
  LODWORD(v62) = *(_DWORD *)&v122[4 * (v225 ^ 0x5C)];
  int v226 = ((v54 ^ 0xA8) + 466139313 + ((2 * (v54 ^ 0xF7E9CFA8) + 126) & 0x62 ^ 0xFFEE7BFF)) ^ (v225 - 1857596285 - ((2 * v224) & 0x106)) ^ *(_DWORD *)&v124[4 * (v54 ^ 0xC5)];
  int v227 = v111;
  LODWORD(v111) = *(_DWORD *)&v124[4 * (v111 ^ 0x42)];
  LODWORD(v124) = HIDWORD(v249) ^ *(_DWORD *)&v129[4 * (BYTE1(v213) ^ 0xDA)] ^ ((v226 ^ (v42 >> 1) ^ v62)
                                                                              - 130323328
                                                                              - ((2 * (v226 ^ (v42 >> 1) ^ v62)) & 0xF076D900));
  LODWORD(v120) = (v223 + 1920629579 - ((2 * v223) & 0xE4F4F696)) ^ v257;
  LODWORD(v66) = (v221 - 1737817150 - ((2 * v221) & 0x30D60784)) ^ v60 ^ 0xB6540B43;
  unsigned int v228 = *(_DWORD *)&v129[4 * (BYTE1(v54) ^ 0x2D)] ^ v256 ^ ((v227 ^ 0x2F)
                                                           + 466139312
                                                           - ((2 * (v227 ^ 0x2F) + 1934590) & 0x118462)) ^ v219 ^ v111 ^ (v217 - 130323328 - ((2 * v217) & 0xF076D900));
  BYTE2(v180) = BYTE2(v124) ^ 0x8C;
  uint64_t v229 = *(unsigned int *)(v39 - 120);
  uint64_t v230 = (char *)*(&off_1F34B17C0 + (int)v229 - 2003) - 8;
  unsigned __int8 v231 = (char *)*(&off_1F34B17C0 + (int)v229 - 1986) - 8;
  int v232 = (char *)*(&off_1F34B17C0 + (int)v229 - 1850) - 4;
  LODWORD(v111) = *(_DWORD *)&v230[4 * (v124 ^ 0xC8)];
  int v233 = (*(_DWORD *)&v232[4 * (BYTE2(v120) ^ 0x9E)] - 1765337865) ^ (*(_DWORD *)&v230[4
                                                                                     * (v228 ^ 0xC9)]
                                                                    + 1925699623);
  LODWORD(v62) = v111 - ((2 * v111 + 1703915598) & 0x5CB61882);
  int v234 = (*(_DWORD *)&v232[4 * (BYTE2(v228) ^ 0x38)] - 1765337865) ^ (*(_DWORD *)&v231[4
                                                                                     * ((v124 ^ 0x898C5DC8) >> 24)]
                                                                    - 34076875);
  LODWORD(v50) = *(_DWORD *)&v230[4 * (v120 ^ 0xA2)];
  LODWORD(v49) = v66 ^ 0x351D74B9;
  int v235 = *(_DWORD *)&v230[4 * (v66 ^ 0xB9)];
  LODWORD(v111) = *(_DWORD *)&v231[4 * (BYTE3(v120) ^ 0xE7)];
  LODWORD(v230) = *(_DWORD *)&v231[4 * (HIBYTE(v228) ^ 0xB8)];
  int v236 = (char *)*(&off_1F34B17C0 + (int)v229 - 1917) - 4;
  LODWORD(v124) = (v233 + 777718849 - ((2 * v233) & 0x5CB61882)) ^ *(_DWORD *)&v236[4 * (BYTE1(v124) ^ 0x61)] ^ (*(_DWORD *)&v231[4 * (BYTE3(v66) ^ 0x65)] - 34076875);
  LODWORD(v231) = *(_DWORD *)&v236[4 * (BYTE1(v120) ^ 0xA0)];
  uint64_t v237 = *(unsigned int *)&v236[4 * (BYTE1(v228) ^ 0xE9)];
  int v238 = (v234 ^ (v50 + 1925699623)) + 777718849 - ((2 * (v234 ^ (v50 + 1925699623))) & 0x5CB61882);
  uint64_t v239 = *(unsigned int *)&v232[4 * BYTE2(v180)];
  LODWORD(v129) = *(_DWORD *)&v236[4 * BYTE1(v49)] ^ HIDWORD(v251) ^ v238;
  LODWORD(v120) = HIDWORD(a4) ^ v60 ^ 0xB6540B43 ^ (v124 - 1737817150 - ((2 * v124) & 0x30D60784));
  int v240 = v230 - 34076875;
  LODWORD(v230) = *(_DWORD *)&v232[4 * BYTE2(v49)] - 1765337865;
  uint64_t v241 = (uint64_t)*(&off_1F34B17C0 + (int)v229 - 1873);
  a2[*(void *)(v39 - 248)] = *(unsigned char *)(v241 + (BYTE1(v129) ^ 0x99)) ^ 0x34;
  int v242 = (char *)*(&off_1F34B17C0 + SHIDWORD(a6)) - 8;
  a2[*(void *)(v39 - 240)] = (v242[BYTE2(v120) ^ 0xADLL] + 19) ^ 0xC5;
  uint64_t v243 = (char *)*(&off_1F34B17C0 + (int)v229 - 1854) - 4;
  unsigned int v244 = v231 ^ HIDWORD(a4) ^ (v62 - 1591548824) ^ v240 ^ v230;
  a2[*(void *)(v39 - 200)] = v243[v129 ^ 0xFCLL] ^ 0xA1;
  a2[*(void *)(v39 - 224)] = (v242[BYTE2(v244) ^ 0x8CLL] + 19) ^ 0x47;
  int v245 = (char *)*(&off_1F34B17C0 + (int)v229 - 1921) - 8;
  a2[*(void *)(v39 - 216)] = (v245[(v129 >> 24) ^ 0xDELL] - 33) ^ 0x1B;
  LODWORD(v231) = v242[BYTE2(v129) ^ 0x15];
  a2[*(void *)(v39 - 208)] = (((_BYTE)v231 + (((_BYTE)v231 + 19) ^ 0xDA) + 20) ^ 0xFE) + (_BYTE)v231 + 19;
  unsigned int v246 = v249 ^ v237 ^ (v239 - 1765337865) ^ (v235 + 1925699623) ^ (v111
                                                                  - ((2 * v111 + 2079329898) & 0x5CB61882)
                                                                  + 743641974);
  a2[*(void *)(v39 - 232)] = v243[v246 ^ 5] ^ 0x53;
  uint64_t v247 = *(void *)(v39 - 176);
  a2[*(void *)(v39 - 168)] = (v245[BYTE3(v120) ^ 0x4ELL] - 33) ^ 0xE6;
  a2[*(void *)(v39 - 160)] = (v245[HIBYTE(v244) ^ 0x9CLL] - 33) ^ 0xB8;
  a2[v247] = (v245[HIBYTE(v246) ^ 0x67] - 33) ^ 0x91;
  a2[*(void *)(v39 - 152)] = v243[v244 ^ 0xF2] ^ 0x59;
  a2[*(void *)(v39 - 192)] = *(unsigned char *)(v241 + (BYTE1(v244) ^ 0x1ELL)) ^ 0x97;
  a2[*(void *)(v39 - 144)] = *(unsigned char *)(v241 + (BYTE1(v246) ^ 0x33)) ^ 0x8E;
  a2[*(void *)(v39 - 184)] = *(unsigned char *)(v241 + (BYTE1(v120) ^ 0xBCLL)) ^ 0x40;
  a2[*(void *)(v39 - 136)] = v243[v120 ^ 0x9FLL] ^ 0xA1;
  a2[*(void *)(v39 - 128)] = (v242[BYTE2(v246) ^ 0xDLL] + 19) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a37 + 8 * (int)((v229 - 657) | (4 * (((v247 - 1022760965 - 2 * ((v247 + 16) & 0x4309E7EF ^ *(_DWORD *)(v39 - 252) & 4)) ^ 0xC309E7EB) < a35)))))(v229, v247, (v231 + 19) ^ 0xDAu, v239, v237, 161, 2437371011, 4260890421, a3, a4, a2, a6, v249, v250, v251, v252, v253, v254, v255,
           v256,
           v257,
           v258,
           v259,
           v260,
           v261,
           *((void *)&v261 + 1),
           v262,
           v263,
           v264,
           v265,
           v266,
           v267,
           v268);
}

void sub_1DA71BF60(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * ((qword_1EA8E3538 - dword_1EA8E34E8) ^ 0xF0)) ^ byte_1DA752740[byte_1DA75DD10[(-93 * ((qword_1EA8E3538 - dword_1EA8E34E8) ^ 0xF0))] ^ 0xE3])
                + 100);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t *)*(&off_1F34B17C0
                  + ((-93 * ((qword_1EA8E3538 - v3) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - v3) ^ 0xF0))] ^ 0x3C])
                  - 135);
  uint64_t v5 = 192840611 * ((v3 - (void)&v7 + *v4) ^ 0x2F1F548F835ED4F0);
  *(void *)(v2 - 4) = v5;
  *uint64_t v4 = v5;
  LODWORD(v4) = *(_DWORD *)(v2 - 4);
  unint64_t v6 = (char *)*(&off_1F34B17C0
               + ((-93 * (dword_1EA8E34E8 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA757070[byte_1DA752840[(-93 * (dword_1EA8E34E8 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0x79])
               - 76)
     - 8;
  (*(void (**)(char *, uint64_t (*)()))&v6[8
                                                   * (*((unsigned char *)off_1F34B1C38
                                                                       + (*((unsigned __int8 *)off_1F34B1A10
                                                                          + (-93
                                                                                            * ((v5 - (_BYTE)v4) ^ 0xF0))
                                                                          - 8) ^ 0x7Eu)) ^ (-93
                                                                                          * ((v5 - (_BYTE)v4) ^ 0xF0)))
                                                   + 14344])((char *)*(&off_1F34B17C0+ (*((unsigned char *)off_1F34B19B8+ (*((unsigned __int8 *)off_1F34B1C20+ (-93 * (v4 ^ 0xF0 ^ v5))- 12) ^ 0xEFu)- 4) ^ (-93 * (v4 ^ 0xF0 ^ v5)))- 75)- 4, sub_1DA72A258);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA71C14C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ 0x1E6 ^ (2
                                             * (v1 - a1 < (unint64_t)((((v2 ^ 0x1E6) - 1650231269) & 0x625C83DCu)
                                                                           - 597)
                                                        - 295)))))();
}

uint64_t sub_1DA71C194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v14 = (*(uint64_t (**)(void, uint64_t))(v12 + 8 * (v13 ^ 0x5E)))(a11 ^ v11, 691728023) == 0;
  return (*(uint64_t (**)(void))(v12
                              + 8 * (((((v13 + 74) ^ v14) & 1) * (181 * (v13 ^ 0x7A0) - 1624)) ^ v13)))();
}

uint64_t sub_1DA71C208(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((*(_DWORD *)(a8 + 72) == a4 + 7) * ((a3 + a5) ^ 0x364)) ^ (a3 + a5 + 122))))();
}

uint64_t sub_1DA71C248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 116) = v16
                         + 1374699841 * ((~((v17 - 136) | 0x864C299C) + ((v17 - 136) & 0x864C299C)) ^ 0x1447CE6A)
                         - 1389;
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = v14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 395)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((225
                                              * (*(_DWORD *)(v17 - 120) - 1271275122 < ((6
                                                                                       * ((v16 - 190358657) & 0xB589EDF ^ 0xFB)) ^ 0xF1C75A3C))) ^ v16)))(v18);
}

uint64_t sub_1DA71C310@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v9 = ((v8 + v2 - 177) ^ v3) + a2;
  *(unsigned char *)(v4 + v9 + a1) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v9 + a1 + 1) < 0x38) * v6) ^ v2)))();
}

uint64_t sub_1DA71C324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v7 - 80919271) > 0x37) * (((v9 - 1851613414) & 0xD76387BB) - 1355)) ^ (a7 + v9 - 225))))();
}

uint64_t sub_1DA71C370@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v4 - 0x68A89052B2EA55C0) + (v5 + 1269656960 + v2)) = *(unsigned char *)(*(void *)(v4 - 0x68A89052B2EA55C0) + (v2 - 1220938677));
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v2 - 1 == a1) * (((v1 + 149971230) & 0xF70F9CF9) + 127)) ^ v1)))();
}

uint64_t sub_1DA71C3E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  *((unsigned char *)&STACK[0x2A0] + v9) = *(unsigned char *)(a3 + (v8 + a2))
                                 - ((2 * *(unsigned char *)(a3 + (v8 + a2))) & 0xBF)
                                 + 95;
  return (*(uint64_t (**)(void))(v11 + 8 * (((((v10 + a7) & a8 ^ 0x1CLL) + v9 == 64) * v12) ^ v10)))();
}

uint64_t sub_1DA71C43C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((1593
                                * (*(_DWORD *)(a18 + 4 * (((v20 - 131) ^ 0x737 ^ (v18 + 2210)) + v19)) == a1)) ^ v20)))();
}

void sub_1DA71C488()
{
}

uint64_t sub_1DA71C490(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F34B1C00
                                            - 8
                                            + 8
                                            * ((1337 * ((*(_DWORD *)(a2 + 4) - 826018275) < 0x15)) ^ 0x2A4u)))(4294925278);
}

uint64_t sub_1DA71C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unint64_t v53 = STACK[0x520];
  int v54 = (((v49 - 597) | 0x420) ^ 0x6590A6C2) + 1353951373 * LODWORD(STACK[0x4CC]);
  int v55 = 460628867 * ((((v52 - 192) | 0xD8825E3C) - (v52 - 192) + ((v52 - 192) & 0x277DA1C0)) ^ 0x9414DC41);
  *(_DWORD *)(v52 - 180) = v55 + v49 - 452;
  *(void *)(v52 - 176) = v48;
  *(void *)(v52 - 136) = STACK[0x238];
  *(unsigned char *)(v52 - 144) = 60 - -125 * ((((v52 + 64) | 0x3C) - (v52 + 64) + ((v52 + 64) & 0xC0)) ^ 0x41);
  *(_DWORD *)(v52 - 16_Block_object_dispose(&STACK[0x360], 8) = (v47 + 687986310) ^ v55;
  *(_DWORD *)(v52 - 164) = v54 ^ v55;
  *(void *)(v52 - 160) = v46;
  *(void *)(v52 - 152) = v53;
  *(void *)(v52 - 192) = a46;
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v49 + 1308)))(v52 - 192);
  int v57 = *(_DWORD *)(v52 - 184);
  LODWORD(STACK[0x530]) = v57;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * (((v57 != 2058996701) * v50) ^ v49)))(v56);
}

uint64_t sub_1DA71C5CC(int a1, uint64_t a2, int a3, void *a4, int a5, int a6, int a7)
{
  unsigned int v13 = *(_DWORD *)(*a4 + 4 * (a7 + v9)) ^ v8;
  *(_DWORD *)(*a4 + 4 * (v10 + v7)) = v8
                                      + a3
                                      + 573
                                      + ((v13 >> v11) | a5 ^ v8)
                                      - (a1 & (2 * ((v13 >> v11) | a5 ^ v8)))
                                      - 1592;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a7 - 1 + v9 >= 0) * a6) ^ a3)))();
}

uint64_t sub_1DA71C5D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1084 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x247u)))();
}

uint64_t sub_1DA71C604@<X0>(uint64_t a1@<X8>)
{
  int v5 = -1964833657 - v2 - ((330 * (v3 ^ 0x32F) - v4 + 526549950) & 0x36637D94);
  unsigned int v6 = 1225351577 * (&v8 ^ 0x239AD816);
  int v10 = v6 + v3 + 553;
  uint64_t v9 = v1;
  int v8 = v5 ^ v6;
  return (*(uint64_t (**)(int *))(a1 + 8 * (v3 ^ 0xB04)))(&v8);
}

uint64_t sub_1DA71C690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int32x4_t a39, int32x4_t a40, int32x4_t a41, int32x4_t a42, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return sub_1DA701440(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1DA71C6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v16 = ((v15 + 678237769) & 0xD792E63C ^ 0xE8DAE654) + a13;
  BOOL v17 = v13 - 1485843685 < v16;
  if (v16 < 0xEDEFD72E != (v13 - 1485843685) < 0xEDEFD72E) {
    BOOL v17 = v16 < 0xEDEFD72E;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((15 * !v17) ^ v15)))();
}

uint64_t sub_1DA71C724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = v16
                         + 1178560073
                         * ((-1856491855 - ((v17 - 136) | 0x91582EB1) + ((v17 - 136) | 0x6EA7D14E)) ^ 0xC330EDEB)
                         + 573;
  *(void *)(v17 - 136) = v15;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 | 0x6DB)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((106 * (a10 < ((v16 - 70) ^ 0xDF))) ^ v16)))(v18);
}

uint64_t sub_1DA71C818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v18 = (v17 + 990577327) & 0xC4F4F9F7;
  int v19 = (v18 ^ 0xD676E30D) + a16;
  if (v19 < 0) {
    int v19 = -v19;
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((473
                                                   * ((int)((v19 ^ 0xFBBF7C9C) + ((2 * v19) & 0xF77EF938) + 71336803) > (int)(((v18 + 851) | 0xA0) ^ 0xFFFFFB1B))) ^ v18)))(159353952);
}

uint64_t sub_1DA71C8CC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v6 = a2 + v4;
  *(unsigned char *)(a1 + v6) = v3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v2 - 4) ^ (4 * ((unint64_t)(v6 + 1) < 0x38)))))();
}

void sub_1DA71C914()
{
}

uint64_t sub_1DA71C920()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x17A)))(32, 0x101004023FF3BD5) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (((v1 - 333) | 0xA4) - 1445)) ^ v1)))();
}

uint64_t sub_1DA71C978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29
                                                     + 8
                                                     * ((216 * (v28 != a6 + ((a28 - a6 - 159405672) | 0x9805220) - 475)) ^ a28)))(-966000769, 966000768);
}

void sub_1DA71C9D4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x11127EB20C1B7502) = (((v3 + v2) * (v1 - 1642334550)) ^ 0x3DFDFECF)
                                         - 343204555
                                         + ((2 * (v3 + v2) * (v1 - 1642334550)) & 0x7BFBFD9E);
}

void sub_1DA71CA60()
{
}

uint64_t sub_1DA71CA6C(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v8 = v4 < v5;
  unint64_t v9 = ((a3 + 2017040612) & 0x87C666FF ^ 0xD5A792DA629D1480) + v6;
  int v10 = v8 ^ (v9 < (unint64_t)(a3 - 28) + v3);
  BOOL v11 = v9 < v4;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((7 * v8) ^ a3)))();
}

uint64_t sub_1DA71CAE8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((31 * ((v1 - 537010274) & 0x7D973E6F ^ (v3 + 21)) - 1320) * (v0 == 1609527313)) ^ v1)))();
}

void sub_1DA71CB40()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 278));
  JUMPOUT(0x1DA72AF0CLL);
}

void sub_1DA71CB54()
{
}

void sub_1DA71CBBC()
{
  LODWORD(STACK[0x530]) = v0 + 383;
  JUMPOUT(0x1DA7006A4);
}

uint64_t sub_1DA71CBD8()
{
  unsigned int v5 = (((v3 - 281) | 4) ^ 0xFFFFFF33) + *(unsigned __int8 *)(v2 + 6);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * v5)) + (v5 ^ v0) == v0) * (((v3 + 822019612) & 0xCF00F9E3) - 368)) ^ (v3 + 474))))();
}

uint64_t sub_1DA71CC3C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((170 * (v3 + 1 == v5 + 16)) | a3)))();
}

uint64_t sub_1DA71CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA71CD30(a1, a2, a3, ((v3 + 1) & 0x1FFFFFFF0) + 2014182718);
}

uint64_t sub_1DA71CD30@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>)
{
  *(int8x16_t *)(a2 + (a3 - 1477598966 + v4)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(a1 + v4), vandq_s8(vaddq_s8(*(int8x16_t *)(a1 + v4), *(int8x16_t *)(a1 + v4)), v8)), v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((97 * (v4 + (v3 ^ v6) - 1750 == v5)) ^ v3)))();
}

uint64_t sub_1DA71CD84@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v2 + (v3 + v5)) = *(unsigned char *)(*v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - 1 == a1) * v6) ^ v1)))();
}

void sub_1DA71CDB8()
{
  if (v0 == 1602200845) {
    int v1 = 2058996701;
  }
  else {
    int v1 = -2058973179;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1DA71CE1C@<X0>(int a1@<W8>)
{
  int v10 = v5 + 1;
  BOOL v11 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v10 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v10));
  if (v11 == v10 + v7 < v2) {
    BOOL v11 = v10 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v3)))();
}

uint64_t sub_1DA71CE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v51 = 3804331 * ((2 * ((v50 - 192) & 0x54056770) - (v50 - 192) + 737843337) ^ 0x5BB1B45);
  *(void *)(v50 - 136) = a48;
  *(void *)(v50 - 12_Block_object_dispose(&STACK[0x360], 8) = a39;
  *(_DWORD *)(v50 - 144) = v48 - v51 + 629;
  *(void *)(v50 - 152) = a16;
  *(_DWORD *)(v50 - 192) = v51 ^ 0x7EA241E1;
  *(void *)(v50 - 176) = STACK[0x400];
  *(void *)(v50 - 16_Block_object_dispose(&STACK[0x360], 8) = 0;
  *(void *)(v50 - 184) = 0;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v48 ^ 0x95A)))(v50 - 192);
  int v53 = *(_DWORD *)(v50 - 160);
  LODWORD(STACK[0x634]) = v53;
  return (*(uint64_t (**)(uint64_t))(v49 + 8 * (((v53 == 2058996701) * ((v48 | 1) ^ 0x454)) ^ v48)))(v52);
}

uint64_t sub_1DA71CEF8@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  BOOL v12 = a3 < v9;
  *(unsigned char *)(a5 + a7 + v10 + 5 * (v7 ^ a4)) = *(unsigned char *)(a6 + (v8 + a2))
                                            - ((2 * *(unsigned char *)(a6 + (v8 + a2))) & 0xBF)
                                            + 95;
  unsigned int v13 = v8 + 1 + a1;
  int v14 = v12 ^ (v13 < v9);
  BOOL v15 = v13 < a3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((62 * v12) ^ v7)))();
}

uint64_t sub_1DA71CF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  if (a14 < a13 != a27 - 168351197 < ((v28 + 1612) ^ 0xFF4AFBu)) {
    BOOL v29 = a27 - 168351197 < ((v28 + 1612) ^ 0xFF4AFBu);
  }
  else {
    BOOL v29 = a27 - 168351197 > a14;
  }
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((v29 * (v28 + 161)) ^ (v28 + 1343))))(3046470713);
}

uint64_t sub_1DA71CFF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1341768284;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v5 + v10);
  if (v12 == 95) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 223)
  {
    int v13 = 2058996701;
    uint64_t v14 = *(void *)(v3 + 8);
    int v15 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(void *)uint64_t result = v5;
    *(_DWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 126) {
      int v16 = 1954290419;
    }
    else {
      int v16 = 1954290418;
    }
    *(_DWORD *)(result + 16) = 1220938676;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = 2058996701;
    *(void *)(v14 - 0x611E3ECE41E918D4) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 0x23B)))();
    int v13 = -2058973180;
  }
  *(_DWORD *)uint64_t v3 = v13;
  return result;
}

uint64_t sub_1DA71D0D8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 3804331 * (((a1 | 0x50C5005E) - (a1 & 0x50C5005E)) ^ 0x7E848392);
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v1 - 794)
          + (((*(void *)(a1 + 8) == 0x68A89052B2EA55C0) * ((v1 ^ 0x1B7) - 504)) | v1)
          - 1))();
}

void sub_1DA71D16C()
{
}

void sub_1DA71D1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v33 = 1759421093 * ((((v32 - 144) | 0x15E694E) - ((v32 - 144) & 0x15E694E)) ^ 0xB223D91A);
  *(void *)(v32 - 144) = a22;
  *(_DWORD *)(v32 - 136) = 730294625 - v33;
  *(_DWORD *)(v32 - 132) = v33 + v29 + 616;
  (*(void (**)(uint64_t))(v27 + 8 * (v29 ^ 0xB00)))(v32 - 144);
  *(void *)(v32 - 12_Block_object_dispose(&STACK[0x360], 8) = v31;
  *(void *)(v32 - 120) = v28;
  *(void *)(v32 - 144) = v28;
  *(void *)(v32 - 136) = v30;
  *(_DWORD *)(v32 - 104) = v29
                         + 628203409 * ((((2 * (v32 - 144)) | 0x6EDAA2F8) - (v32 - 144) + 1217572484) ^ 0x35E55D4F)
                         + 1157;
  *(void *)(v32 - 112) = a22;
  (*(void (**)(uint64_t))(a27 + 8 * (v29 + 1255)))(v32 - 144);
  JUMPOUT(0x1DA71D28CLL);
}

uint64_t sub_1DA71D324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 136) = v17;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  *(_DWORD *)(v18 - 120) = v14 + 1178560073 * ((v18 - 136) ^ 0xAD973CA5) + 31;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 130)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((v16 == v15 + 2129461905) * (((v14 - 1447213676) & 0x5642B3FF) - 204)) ^ v14)))(v19);
}

uint64_t sub_1DA71D3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * ((26
                                                                * (a3 + ((v4 + 856098751) & 0xCCF8F9FD ^ 0x8BF10C01) < 0x38)) ^ (v4 + 731))))(a1, a2, 95);
}

uint64_t sub_1DA71D410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v9 + v8 * (uint64_t)a7 + 32) == ((33 * (v7 ^ 0x61E)) ^ 0x4D3565A5))
                                * (v7 - 1522)) ^ v7)))();
}

uint64_t sub_1DA71D454(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 < ((31 * (a2 ^ 0x523)) ^ 0x137u)) * (5 * (a2 ^ 0x40F) - 1388)) ^ a2)))();
}

void sub_1DA71D49C()
{
}

uint64_t sub_1DA71D4E8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t))
{
  int v24 = (v20 - 98) | 0x29;
  *(unsigned char *)(a1 + (a3 + v24 - 61)) = *(unsigned char *)(a2 + (v21 - 1400551916));
  int v25 = 1224239923 * ((-1189047003 - ((v23 - 168) | 0xB9209525) + ((v23 - 168) | 0x46DF6ADA)) ^ 0xB46C970D);
  STACK[0x338] = a18;
  *(_DWORD *)(v23 - 160) = v25 + v24 + 66;
  *(_DWORD *)(v23 - 156) = v25 ^ 0x5DB39D1F;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v24 ^ 0x833)))(v23 - 168);
  return a20(v26);
}

uint64_t sub_1DA71D5A0()
{
  int v6 = v0 + 78651443;
  if ((v6 + 1) > 0x40) {
    int v7 = v6 + 1;
  }
  else {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v1 - 291477254) & 0x115F97FC ^ 0x218) * ((v4 - v2 - v3 + v7) > 0xE)) ^ v1)))();
}

uint64_t sub_1DA71D660(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1DA71D678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0x5FFAF9BF3F7EED7BLL)
      - 0x18000072B7A4419
      + ((2 * (void)&a9) & 0xBFF5F37E7EFDDAF0);
  a9 = v10 - 1;
  *(unsigned char *)(a2 + a9) = (v12 + ((v9 + 117) ^ 0x71)) * ((v12 - 98) ^ 0xBA);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((1617 * (a9 == 0)) ^ v9)))(1617);
}

void sub_1DA71D720(uint64_t a1)
{
  int v1 = 3804331 * ((-817769123 - (a1 ^ 0xD605E992 | 0xCF41D55D) + (a1 ^ 0xD605E992 | 0x30BE2AA2)) ^ 0xC8FA40FC);
  BOOL v3 = *(_OWORD *)(a1 + 32) == 0 || *(_DWORD *)(a1 + 68) - v1 == 814706467;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA71D894()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((11 * (((v0 - 1300) | 0x404) ^ 0x4C1) - 14) * (LODWORD(STACK[0x4F8]) == v2)) ^ v0)))();
}

uint64_t sub_1DA71D8D4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((210 * (v4 != a3 + (v3 ^ 0x33B) - 859)) ^ v3)))();
}

uint64_t sub_1DA71D908@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1870
                                * (*(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + 4
                                                                                      * (v2 + v5 - 1)) == v3 + ((v1 + 611) | 0x20) - 948)) ^ ((v1 + 611) | 0x20))))();
}

uint64_t sub_1DA71D960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((991 * (a2 + 1 == v9 + 44)) ^ v7)))(a7);
}

uint64_t sub_1DA71DA38(int a1)
{
  void *v2 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * a1) ^ v1)))();
}

uint64_t sub_1DA71DA5C()
{
  int v6 = v3 + *(unsigned __int8 *)(v4 + 3) - 1054;
  return (*(uint64_t (**)(void))(v5 + 8 * ((345 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1DA71DA94@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v7 = (v5 - 497) | 2;
  int v8 = (v7 ^ v4) + v6;
  int v9 = v6 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x11127EB20C1B74FELL) + 4 * v_Block_object_dispose(&STACK[0x360], 8) = a2;
  int v10 = (v7 - 642) | 0x77;
  *(_DWORD *)(v3 - 0x11127EB20C1B7502) = v9;
  int v11 = v4 + v9;
  int v12 = -519 - (v11 + v10);
  if (v11 + v10 + 519 >= 0) {
    int v12 = v11 + v10 + 519;
  }
  return (*(uint64_t (**)(uint64_t, void))(a3
                                                    + 8
                                                    * (int)((241
                                                           * ((v10
                                                             + (v12 ^ 0x79CF3E75)
                                                             + ((2 * v12) & 0xF39E7CEA)
                                                             - 2043625197) >> 31)) ^ v10)))(a1, 2 * (v10 ^ 0x34u));
}

uint64_t sub_1DA71DB80(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  int v37 = LOBYTE(STACK[0x300]) ^ 0x70;
  if (v37 == 1)
  {
    unsigned int v43 = STACK[0x2E4];
    unsigned int v44 = STACK[0x2E0];
    LOBYTE(STACK[0x2D8]) = ((8 * LOBYTE(STACK[0x2E4])) ^ 0xB0)
                         + ((v36 - 58) ^ 0x89)
                         - ((2 * ((8 * LOBYTE(STACK[0x2E4])) ^ 0xB0)) & 0xBF);
    LOBYTE(STACK[0x2D9]) = ((v43 >> 5) ^ 0x28) - ((2 * ((v43 >> 5) ^ 0x28)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DA]) = ((v43 >> 13) ^ 0xF3) - ((2 * ((v43 >> 13) ^ 0xF3)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DB]) = ((v43 >> 21) ^ 0xE) - ((2 * ((v43 >> 21) ^ 0xE)) & 0xBF) + 95;
    HIDWORD(v45) = v44 ^ 0x1D;
    LODWORD(v45) = v43 ^ 0x40000000;
    LOBYTE(STACK[0x2DC]) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DD]) = ((v44 >> 5) ^ 0x53) - ((2 * ((v44 >> 5) ^ 0x53)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DE]) = (a3 ^ (v44 >> 13)) - ((2 * (a3 ^ (v44 >> 13))) & 0xBF) + 95;
    unsigned int v42 = ((v44 >> 21) ^ 0xFFFFFFAD) + (~(2 * ((v44 >> 21) ^ 0xFFFFFFAD)) | 0x41) + 96;
  }
  else
  {
    if (v37 != 2) {
      goto LABEL_6;
    }
    unsigned int v42 = STACK[0x2E0];
    unsigned int v38 = STACK[0x2E4];
    char v39 = (a3 ^ (LODWORD(STACK[0x2E0]) >> 13)) - ((2 * (a3 ^ (LODWORD(STACK[0x2E0]) >> 13))) & 0xBF);
    unsigned int v40 = ((LODWORD(STACK[0x2E0]) >> 5) ^ 0x53) - ((2 * ((LODWORD(STACK[0x2E0]) >> 5) ^ 0x53)) & 0xFFFFFFBF);
    LOBYTE(STACK[0x2D8]) = ((LODWORD(STACK[0x2E0]) >> 21) ^ 0xAD)
                         - ((((LODWORD(STACK[0x2E0]) >> 21) ^ 0xFFFFFFAD) << a10) & 0xBE)
                         + 95;
    LOBYTE(STACK[0x2D9]) = v39 + 95;
    LOBYTE(STACK[0x2DA]) = v40 + 95;
    HIDWORD(v41) = v42 ^ 0x1D;
    LODWORD(v41) = v38 ^ 0x40000000;
    LOBYTE(STACK[0x2DB]) = (v41 >> 29) - ((2 * (v41 >> 29)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DC]) = ((v38 >> 21) ^ 0xE) - ((2 * ((v38 >> 21) ^ 0xE)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DD]) = ((v38 >> 13) ^ 0xF3) - ((2 * ((v38 >> 13) ^ 0xF3)) & 0xBF) + 95;
    LOBYTE(STACK[0x2DE]) = ((v38 >> 5) ^ 0x28) - ((2 * ((v38 >> 5) ^ 0x28)) & 0xBF) + 95;
    LOBYTE(v42) = ((8 * v38) ^ 0xB0) - ((2 * ((8 * v38) ^ 0xB0)) & 0xBF) + 95;
  }
  LOBYTE(STACK[0x2DF]) = v42;
LABEL_6:
  uint64_t v27 = LODWORD(STACK[0x2EC]);
  int v28 = LOBYTE(STACK[0x300]) ^ 0x70;
  if (v28 == 2)
  {
    BOOL v33 = (unint64_t)&STACK[0x2A0] >= a27 || v34 >= (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35
                                                       + 8
                                                       * (((11 * (((v36 + 848) | 0x10) ^ 0x33F) - 859) * v33) ^ (v36 + 1988))))(v27, 108634942);
  }
  else
  {
    if (v28 != 1) {
      JUMPOUT(0x1DA71691CLL);
    }
    BOOL v30 = (unint64_t)&STACK[0x2A0] < a27 && v34 < (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t))(v35 + 8 * (((((v36 + 1080) | 0x220) ^ 0x66B) * v30) | (v36 + 388))))(v27);
  }
}

void sub_1DA71DDA8(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA71DE30@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((15
                                * (*(unsigned char *)(v4 + v2 + ((a2 + v6) & v3 ^ (a1 + a2 - 460 - 1947))) == 95)) ^ a2)))();
}

uint64_t sub_1DA71DE7C(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((*(_DWORD *)(*v4 + 4 * v5) != a2) * (a4 ^ a3)) ^ a4)))();
}

uint64_t sub_1DA71DEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v62 = v59 + v58 - 133;
  *(_DWORD *)uint64_t v61 = -421335630;
  (*(void (**)(uint64_t))(v60 + 8 * (v58 + 1882)))(a37);
  int8x16_t v63 = (int8x16_t)vld1q_dup_f32((const float *)v61);
  v64.i64[0] = 0x8000000080000000;
  v64.i64[1] = 0x8000000080000000;
  v65.i64[0] = *(void *)(v61 + 4);
  v65.i32[2] = *(_DWORD *)(v61 + 12);
  int8x16_t v66 = vextq_s8(v63, v65, 0xCuLL);
  int8x16_t v67 = v65;
  v67.i32[3] = *(_DWORD *)(v61 + 16);
  int32x4_t v68 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v67, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v66, v64)), 1uLL), (int8x16_t)vdupq_n_s32(0x337176D9u));
  v69.i32[0] = *((_DWORD *)&a58 + (*(_DWORD *)(v61 + 4) & 1));
  v69.i32[1] = *((_DWORD *)&a58 + (*(_DWORD *)(v61 + 8) & 1));
  v69.i32[2] = *((_DWORD *)&a58 + (*(_DWORD *)(v61 + 12) & 1));
  v69.i32[3] = *((_DWORD *)&a58 + (v67.i8[12] & 1));
  *(int8x16_t *)uint64_t v61 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v61 + 1588), v69), (int8x16_t)vdupq_n_s32(0xD7A9EA79)), (int8x16_t)vaddq_s32(vsubq_s32(v68, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v68, v68), (int8x16_t)vdupq_n_s32(0xCDC5DB64))), vdupq_n_s32(0x66E2EDB2u)));
  return (*(uint64_t (**)(void))(v60 + 8 * ((31 * (v62 ^ 0x41AEBB4F)) ^ 0x7FD)))();
}

void sub_1DA71E028()
{
}

uint64_t sub_1DA71E040()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((194 * ((v1 ^ ((v0 ^ v1 ^ 0x73Au) < 8)) & 1)) ^ v1)))();
}

void sub_1DA71E080()
{
}

uint64_t sub_1DA71E08C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 - 198;
  int v12 = (a1 - 2128608425) & 0x7EDFFE7D;
  unsigned int v13 = 1755732067 * (((&a4 | 0x9A98CFED) - (&a4 & 0x9A98CFED)) ^ 0x445E7236);
  a6 = (a1 + 660) ^ v13;
  a7 = &STACK[0x9C030EB3B8C25D4];
  a4 = &STACK[0x32E0FC00A1F3CACF];
  a5 = v10;
  a8 = v13 ^ 0x47D7B611;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 - 198) ^ 0xBC7)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x68A89052B2EA55A8) == v8 + v12 - 1645)
                                              * ((49 * (v11 ^ 0x3CA)) ^ 0x4AB)) ^ v11)))(v14);
}

uint64_t sub_1DA71E1A0(_DWORD *a1)
{
  *((unsigned char *)a1 + (((v2 + 1624317907) | 0x88204001) ^ 0x49C77644) + v1 + 4) = 4;
  *a1 = v1;
  return 0;
}

uint64_t sub_1DA71E1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v34
                                                     + 8
                                                     * (((141 * (((a33 - 1913) | 0x2E) ^ 0x36) - 1230) * (v33 == 63)) ^ a33)))(a1, -1200253940);
}

uint64_t sub_1DA71E240@<X0>(int a1@<W3>, int a2@<W8>)
{
  STACK[0x5C0] = ((a2 + 15) ^ 0xFFFFFFFFFFFFFEE6) + v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 != v4) * ((a2 ^ 0x10) - 262)) ^ a2)))();
}

uint64_t sub_1DA71E280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 > 0x1F) * (((a5 ^ 0x5C0) + 878) ^ 0x344)) ^ a5)))();
}

void sub_1DA71E2B4()
{
}

uint64_t sub_1DA71E2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v19 = a18 + 943;
  unint64_t v20 = STACK[0x560];
  STACK[0x610] -= 32;
  *(unsigned char *)(v20 + 335) = (v19 + 67) ^ *(unsigned char *)(a14 + 335) ^ 0xCD ^ *((unsigned char *)*(&off_1F34B17C0 + (v19 ^ 0x491)) + 3) ^ *((unsigned char *)*(&off_1F34B17C0 + (v19 & 0x3620935)) + 9) ^ *((unsigned char *)*(&off_1F34B17C0 + (v19 ^ 0x43C)) + 18);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t))(v18 + 8 * (a18 + 943)))(&off_1F34B17C0, 2235994116, 3468949021);
}

uint64_t sub_1DA71E394@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((13 * (v1 != (v2 ^ 0x313C0911))) | 0x352u)))();
}

uint64_t sub_1DA71E3C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = a5;
  return result;
}

uint64_t sub_1DA71E3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = v17;
  *(_DWORD *)(v18 - 116) = v16
                         + 1374699841 * ((8117679 - ((v18 - 136) | 0x7BDDAF) + ((v18 - 136) | 0xFF842250)) ^ 0x92703A59)
                         + 55;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8D1)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) > (v14 + 1))
                                              * ((v16 ^ 0x653) - 1199)) ^ v16)))(v19);
}

uint64_t sub_1DA71E474()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 + 1146) ^ 0x7B0 ^ ((v0 - 639) | 0x38)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1DA71E4AC(uint64_t a1, int a2)
{
  int v11 = *(uint64_t (**)(void))(v7 + 8 * (v8 - 1052));
  uint64_t v12 = *v10;
  unsigned int v13 = v2 + a2;
  *(unsigned char *)(*v10 + v13) = (v5 ^ HIBYTE(v3)) - ((2 * (v5 ^ HIBYTE(v3))) & 0xBF) + 95;
  *(unsigned char *)(v12 + v13 + 1) = (BYTE2(v3) ^ 0x83) - ((2 * (BYTE2(v3) ^ 0x83)) & 0xBF) + 95;
  *(unsigned char *)(v12 + (v2 + a2 + 2)) = (v9 ^ BYTE1(v3)) + (v4 | ~(2 * (v9 ^ BYTE1(v3)))) + 96;
  *(unsigned char *)(v12 + (v2 + a2 + 3)) = v3 ^ v6;
  return v11();
}

void sub_1DA71E4BC()
{
}

void sub_1DA71E4E0()
{
  STACK[0x3F0] = STACK[0x5A8];
  LODWORD(STACK[0x48C]) = 1157139139;
  JUMPOUT(0x1DA71E50CLL);
}

uint64_t sub_1DA71E530@<X0>(int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((((v5 + a3 + 6) ^ v5 ^ 0x77)
                                                   + *(unsigned char *)(v4 + 1 + a2)
                                                   - *(unsigned char *)(v3 + 1)) == 242)
                                * (((v5 + a3 + 262) & a1) - 527)) ^ (a3 + 314))))();
}

uint64_t sub_1DA71E53C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2 - 312 - v2 - 1752417376;
  return result;
}

uint64_t sub_1DA71E558@<X0>(uint64_t a1@<X5>, int a2@<W8>, __n128 a3@<Q0>)
{
  int v5 = (char *)&STACK[0x680] + v3 - 0x74AC42827A6D0515;
  *(_DWORD *)int v5 = 85258470;
  *((void *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 1446844389;
  *((_DWORD *)v5 + 6) = 826018275;
  *((void *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 826018275;
  STACK[0x428] = (unint64_t)(v5 + 40);
  *((void *)v5 + 6) = 0;
  STACK[0x5A0] = (unint64_t)(v5 + 48);
  *((_DWORD *)v5 + 14) = 826018275;
  STACK[0x570] = (unint64_t)(v5 + 56);
  *((void *)v5 + _Block_object_dispose(&STACK[0x360], 8) = 0;
  STACK[0x5C8] = (unint64_t)(v5 + 64);
  *((_DWORD *)v5 + 1_Block_object_dispose(&STACK[0x360], 8) = 826018275;
  STACK[0x508] = (unint64_t)(v5 + 72);
  *((void *)v5 + 10) = 0;
  STACK[0x4E0] = (unint64_t)(v5 + 80);
  v5[88] = 74;
  *(_DWORD *)a1 = 85258470;
  *(__n128 *)(a1 + 4) = a3;
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 826018275;
  *(_DWORD *)(a1 + 2_Block_object_dispose(&STACK[0x360], 8) = 1590290645;
  STACK[0x300] = a1 + 28;
  *(__n128 *)(a1 + 436) = a3;
  *(__n128 *)(a1 + 452) = a3;
  *(void *)(a1 + 46_Block_object_dispose(&STACK[0x360], 8) = 0;
  *(_DWORD *)(a1 + 232) = 1590290645;
  STACK[0x2F8] = a1 + 232;
  strcpy((char *)(a1 + 1128), "____________________");
  *(void *)(a1 + 1152) = 0;
  *(void *)(a1 + 1160) = 0;
  *(unsigned char *)(a1 + 1149) = 0;
  *(_WORD *)(a1 + 1150) = 0;
  *(__n128 *)(a1 + 116_Block_object_dispose(&STACK[0x360], 8) = a3;
  *(__n128 *)(a1 + 1184) = a3;
  int v6 = ((2 * a2) ^ 0x926) == 32;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((v6 | (v6 << 6)) ^ a2)))(142);
}

uint64_t sub_1DA71E698()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((*(_DWORD *)STACK[0x408] - 1890839445) < 0x10)
                                     * (((v0 + 1135075170) & 0xBC581B97) + 1336)) ^ (v0 - 1242))))();
}

uint64_t sub_1DA71E6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if (v7 != (((v8 & 0xF5E822ED) + 433290127) ^ 0x636AB5A5)) {
    a7 = v7;
  }
  return a7 ^ v9;
}

uint64_t sub_1DA71E760@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1020 * (a2 + 1 == v3 + 48)) ^ a1)))();
}

uint64_t sub_1DA71E834()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1414 * (v0 - 2142080121 < (((v1 - 410) | 0x400) ^ 0x7FFFFAAFu))) ^ v1)))();
}

void sub_1DA71E898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v21 - 12_Block_object_dispose(&STACK[0x360], 8) = v19;
  *(void *)(v21 - 120) = v18;
  *(_DWORD *)(v21 - 104) = v17
                         + 628203409
                         * ((((2 * ((v21 - 144) ^ 0x95F42BA4)) | 0xB1E44DAA) - ((v21 - 144) ^ 0x95F42BA4) + 655218987) ^ 0xCF8E0142)
                         + 1530;
  *(void *)(v21 - 144) = v18;
  *(void *)(v21 - 136) = v20;
  *(void *)(v21 - 112) = a17;
  JUMPOUT(0x1DA71E914);
}

uint64_t sub_1DA71E92C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v19 = (v8 ^ v17)
      + v16
      + *(_DWORD *)(a3 + 4 * (a8 + v15))
      + (((v9 ^ a1) + v17 - (v12 & (2 * (v9 ^ a1)))) ^ v10)
      + (*(_DWORD *)(v11 + 4 * (*(unsigned char *)(a2 + a8 + v15) - 30)) ^ v14);
  unsigned int v20 = (v19 + v17 - (v12 & (2 * v19))) ^ v17;
  int v21 = ((v20 << (*(unsigned char *)(a4 + a8 + v15) - 4)) | (v20 >> (4 - *(unsigned char *)(a4 + a8 + v15)))) + (a1 ^ v17);
  return (*(uint64_t (**)(void))(v13 + 8 * ((29 * (a8 + 1 != v18 + 48)) ^ a5)))(v21 + v17 - (v12 & (2 * v21)));
}

uint64_t sub_1DA71E9E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 == 24) ^ (((v1 - 59) & 0xBE) - v2 + 80)) & 1 | v1)))();
}

uint64_t sub_1DA71EA30@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((1688 * (a3 - 966000769 < 3 * (v4 ^ 0x19D37C69u) - 1531)) ^ (v4 + a2))))(a1, -966000769);
}

void sub_1DA71EA88(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -2058972952;
}

uint64_t sub_1DA71EAD0(uint64_t a1, int a2, int a3)
{
  int v8 = v5 + v6 + v7 + 525727821;
  int v9 = a3 - 982;
  unsigned int v10 = a2 + v8 - 745518986;
  unsigned int v11 = v3 - 1024815668;
  BOOL v12 = v10 < (a3 ^ 0x1888D656u);
  int v13 = (v11 < 0x1888D339) ^ v12;
  BOOL v14 = v10 > v11;
  if (v13) {
    BOOL v14 = v12;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((88 * v14) ^ v9)))();
}

uint64_t sub_1DA71EB60()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((94
                                * ((((*(unsigned __int8 *)(v2 + 2) - 72) << ((v3 - 10) ^ 0x8F)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA71EBA8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v4 - 1623651355;
  int v13 = v5 + 577;
  uint64_t v14 = 4 * (v8 + v6);
  int v15 = v9
      - 1817699968
      + (*(_DWORD *)(*(void *)(a3 - 0x11127EB20C1B74FELL) + v14) ^ v7)
      + (*(_DWORD *)(*(void *)(a4 - 0x11127EB20C1B74FELL) + v14) ^ v7);
  *(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + v14) = v15
                                                            + ((v13 + 2147157340) & 0x8004F5F5 ^ (v7 + 181))
                                                            - (v10 & (2 * v15));
  BOOL v17 = v8 + 1243055243 < 523832293 && v8 + 1243055243 >= v12;
  return (*(uint64_t (**)(void))(v11 + 8 * ((118 * v17) ^ v13)))();
}

uint64_t sub_1DA71ECAC(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 40) + (v3 - 1157139139));
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((241
                                * (((v4 - ((2 * v4) & 0xB6) - 518512293) & 0x1F) == ((11
                                                                                    * ((v1 + 200904832) & 0xF4066F7F ^ 0x570)) ^ 0x151))) ^ (v1 - 527))))();
}

uint64_t sub_1DA71ED34(int8x16_t a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int8x16_t *a8, uint64_t a9, uint64_t a10, int a11)
{
  *a8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v14 + (v11 + v15)), vandq_s8(vaddq_s8(*(int8x16_t *)(v14 + (v11 + v15)), *(int8x16_t *)(v14 + (v11 + v15))), a4)), a1);
  return (*(uint64_t (**)(void))(v13 + 8 * (a11 + v12 - 335)))();
}

void sub_1DA71ED88()
{
}

void sub_1DA71EEF8(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  int v2 = 1225351577 * ((~a1 & 0xE76E553A | a1 & 0x1891AAC5) ^ 0xC4F48D2C);
  int v3 = *(_DWORD *)(a1 + 4) ^ v2;
  int v4 = *(_DWORD *)(a1 + 28);
  int v5 = *(_DWORD *)(a1 + 24) ^ v2;
  unint64_t v15 = 1225351577 * ((~a1 & 0x4629EE80E76E553ALL | a1 & 0xB9D6117F1891AAC5) ^ 0xABBF46D8C4F48D2CLL);
  int v6 = v4 ^ v2;
  unsigned int v7 = 628203409 * ((2 * (v36 & 0x317E21C8) - v36 - 830349772) ^ 0x4C09D207);
  uint64_t v22 = &STACK[0x4696E7753303CBD2];
  unsigned int v38 = &STACK[0x4696E7753303CBD2];
  unsigned int v37 = 2067890216 - v7;
  int v39 = v3 + v7 + 1172345419;
  int v8 = (char *)*(&off_1F34B17C0 + (v3 ^ 0x98)) - 8;
  (*(void (**)(unsigned char *))&v8[8 * v3 + 16768])(v36);
  int v28 = v6 - 1002584003;
  int v14 = v6 + 1208467249;
  int v17 = v6 - 1421404221;
  int v16 = v6 + 591059851;
  int v25 = &v34;
  int v10 = (char *)&v10 - 1947137050;
  int v13 = v3 - 277104545;
  unsigned int v27 = (v3 + 2080776094) & 0x83F9E177;
  int v12 = v3 + 1239046086;
  uint64_t v11 = (v3 + 1239046129);
  uint64_t v24 = v11;
  uint64_t v29 = v11;
  int v23 = v3;
  uint64_t v18 = a1;
  int32x4_t v19 = vdupq_n_s32(0x7AB9CBDDu);
  int32x4_t v20 = vdupq_n_s32(0x7AB9CBDFu);
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)&v8[8 * v3];
  int v9 = v5 - ((2 * v5 + 1532953402) & ((v3 + 927849455) ^ 0x4E4B1635)) - 1439504254;
  char v30 = (HIBYTE(v9) ^ 0xBC) - (((v3 - 17) & 0xF0 ^ 0x4E) & (2 * (HIBYTE(v9) ^ 0xBC))) + 95;
  char v31 = (BYTE2(v9) ^ 0x83) - ((2 * (BYTE2(v9) ^ 0x83)) & 0xBF) + 95;
  char v32 = (BYTE1(v9) ^ 0x66) + (~(2 * (BYTE1(v9) ^ 0x66)) | 0x41) + 96;
  char v33 = (v5 - ((2 * v5 + 58) & ((v3 - 17) ^ 0x35)) - 126) ^ 0xBA;
  __asm { BRAA            X12, X17 }
}

void sub_1DA71F19C()
{
  STACK[0x3E0] = v0;
  unint64_t v5 = STACK[0x420];
  int v6 = STACK[0x420] + 352;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8 * (int)(STACK[0x420] + 1760)))(STACK[0x2E0], 2965982036);
  int v7 = (*(uint64_t (**)(void))(v4 + 8 * ((int)v5 + 1763)))();
  _DWORD *v1 = v7 + (v6 ^ (v3 + 531)) - (v2 & (2 * v7));
  JUMPOUT(0x1DA71F210);
}

uint64_t sub_1DA71F280(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 + 1 == (v6 ^ a3) + v6 + 16) * a4) ^ v6)))();
}

uint64_t sub_1DA71F2B8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((62
                                * (((a4 + 56) ^ (a8 + ((a4 + 915552600) & 0xC96DC7ED ^ (a2 - 751)) < 0xFFFFFFF0)) & 1)) ^ a4)))();
}

uint64_t sub_1DA71F30C@<X0>(uint64_t a1@<X8>)
{
  int v8 = v5 + v3;
  int v9 = *(_DWORD *)(a1 + 4 * (v5 + v3 + v1 + 196 - 1485)) ^ *(_DWORD *)(a1
                                                                                     + 4 * (v5 + v3 - 3));
  int v10 = *(_DWORD *)(a1 + 4 * (v8 - 16)) ^ *(_DWORD *)(a1 + 4 * (v8 - 14)) ^ (v9 + v7 - (v4 & (2 * v9)));
  HIDWORD(v11) = v10 ^ v7;
  LODWORD(v11) = v10;
  *(_DWORD *)(a1 + 4 * (v2 + v5)) = (v11 >> 31) + v7 - (v4 & (2 * (v11 >> 31)));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((4 * ((v2 + 1 + v5) > 0x4F)) | (32 * ((v2 + 1 + v5) > 0x4F))) ^ v1)))();
}

uint64_t sub_1DA71F398()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((1741 * (v0 > ((STACK[0x420] + 675) ^ 0x4842C97D))) ^ (STACK[0x420] + 675))))();
}

uint64_t sub_1DA71F3D0@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1647554680);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v6 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v4 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((19 * (a1 - 1 == v3)) ^ (a2 - 1871))))();
}

uint64_t sub_1DA71F440@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  long long v6 = *(_OWORD *)(a2 + (v4 - 845240499) - 31);
  uint64_t v7 = v2 + (v4 - 845240499);
  *(_OWORD *)(v7 - 15) = *(_OWORD *)(a2 + (v4 - 845240499) - 15);
  *(_OWORD *)(v7 - 31) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((529 * (((120 * a1 - 1040607789) & 0x3E066BEF) - 779 == (v3 & 0xFFFFFFE0))) | (120 * a1))))();
}

void sub_1DA71F4BC()
{
  _DWORD *v0 = -2058972952;
  JUMPOUT(0x1DA71F4C8);
}

void sub_1DA71F4D0()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 274));
  JUMPOUT(0x1DA72AF0CLL);
}

uint64_t sub_1DA71F4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  LODWORD(STACK[0x504]) = 767638118;
  LODWORD(STACK[0x460]) = 128;
  int v60 = 3804331 * ((((v59 - 192) | 0x7FE222DF) - (v59 - 192) + ((v59 - 192) & 0x801DDD20)) ^ 0x51A3A113);
  *(void *)(v59 - 192) = v56 + 0x11127EB20C1B78A6;
  *(void *)(v59 - 184) = a56;
  *(_DWORD *)(v59 - 124) = v60 + 814706595;
  *(void *)(v59 - 176) = 0;
  *(void *)(v59 - 16_Block_object_dispose(&STACK[0x360], 8) = v56 + 0x11127EB20C1B7796;
  *(void *)(v59 - 136) = a49;
  *(_DWORD *)(v59 - 144) = v57 - v60 + 351;
  *(void *)(v59 - 160) = v56;
  *(void *)(v59 - 152) = 0;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v57 | 0x501)))(v59 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * ((1153 * (*(_DWORD *)(v59 - 128) == (v57 ^ 0x7AB9CA49) + v57 + 44)) ^ v57)))(v61);
}

uint64_t sub_1DA71F604(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((26
                                * (((v3 + 106) ^ (a1 + a3 + ((v3 - 928) ^ 0x452u) - 1714664184 - 1434 < 8)) & 1)) ^ (v3 - 928))))();
}

uint64_t sub_1DA71F68C@<X0>(int a1@<W8>)
{
  BOOL v4 = v1[1] == 0x1DE36DA1BDD4ED79 || (v1[7] | v1[2]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((25 * (((a1 + 125) ^ v4) & 1)) ^ a1)))();
}

uint64_t sub_1DA71F6E0()
{
  uint64_t v6 = 4 * (v2 - 365416935);
  unsigned int v7 = *(_DWORD *)(v4 + 4 * (v2 - 365416936));
  int v8 = (v3 + ((v7 >> 30) ^ 1) + 2 * (((v7 >> 30) ^ 1 | 0x7FFFFFF2) ^ (v7 >> 30)) + 26) ^ v7;
  int v9 = ((v3 + 1566083941 * v8 - ((-1162799414 * v8) & 0xCDC5DB64)) ^ *(_DWORD *)(v4 + v6)) - v2;
  *(_DWORD *)(v4 + v6) = v9 - ((2 * v9 + 730833870) & 0xCDC5DB64) + 2091564953;
  unint64_t v10 = 1224239923
      * ((((2 * (v5 - 144)) | 0xAAF2818F70FC176ALL) - (v5 - 144) - 0x557940C7B87E0BB5) ^ 0x7D23F5AE4ACDF662);
  *(_DWORD *)(v5 - 104) = 1224239923 * ((((2 * (v5 - 144)) | 0x70FC176A) - (v5 - 144) + 1199699019) ^ 0x4ACDF662);
  *(_DWORD *)(v5 - 144) = (v0 - 803232409) ^ (1224239923
                                            * ((((2 * (v5 - 144)) | 0x70FC176A) - (v5 - 144) + 1199699019) ^ 0x4ACDF662));
  *(_DWORD *)(v5 - 140) = (v0 - 803232409) & 0x3FCEF196 ^ (1224239923
                                                         * ((((2 * (v5 - 144)) | 0x70FC176A) - (v5 - 144) + 1199699019) ^ 0x4ACDF662));
  *(_DWORD *)(v5 - 136) = ((v0 - 803232409) ^ 0x1B)
                        - 1224239923 * ((((2 * (v5 - 144)) | 0x70FC176A) - (v5 - 144) + 1199699019) ^ 0x4ACDF662);
  *(_DWORD *)(v5 - 132) = (v0 - 1606177316) ^ (1224239923
                                             * ((((2 * (v5 - 144)) | 0x70FC176A) - (v5 - 144) + 1199699019) ^ 0x4ACDF662));
  *(void *)(v5 - 120) = (v2 + 165425768) ^ v10;
  *(void *)(v5 - 112) = v10 + 530842702;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 - 1101968340)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v5 - 128)))(v11);
}

void sub_1DA71F874()
{
  if ((v1 + 637) >= 0x7FFFFFFF) {
    int v5 = v4 - v0;
  }
  else {
    int v5 = v3;
  }
  _DWORD *v2 = v5;
  JUMPOUT(0x1DA71F894);
}

void sub_1DA71F8A4()
{
}

uint64_t sub_1DA71F8B0@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  BOOL v3 = v2 == ((((a1 + 425227030) & 0xE6A78CF7) - 495) ^ 0x282);
  return (*(uint64_t (**)(void))(a2 + 8 * ((4 * v3) | (8 * v3) | a1)))();
}

uint64_t sub_1DA71F8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((2 * (((a6 + 629 + v6) ^ a5) >> 31)) & 0xFFFFFFF7 | (8
                                                                                          * (((a6 + 629 + v6) ^ a5) >> 31))) ^ (a6 + 629))))();
}

uint64_t sub_1DA71F934@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a2 + a3 + a1) = v4;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 ^ v5 ^ (unint64_t)(a1 + 38)) + a3 > 0x3F) * v6) ^ v3)))();
}

uint64_t sub_1DA71F96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v29
                                                             + 8
                                                             * ((472
                                                               * (((*(_DWORD *)(a27
                                                                              + 24 * (v27 - 1634517439))
                                                                  - 963978769) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v28)))(a1, a2, *(unsigned int *)(a27 + 24 * (v27 - 1634517439) + 4));
}

uint64_t sub_1DA71FA2C()
{
  return sub_1DA71FA4C();
}

uint64_t sub_1DA71FA4C(uint64_t a1)
{
  *char v4 = a1;
  *int v3 = v2;
  int v7 = v1 - 846;
  uint64_t v13 = v10;
  unsigned int v12 = v1
      + 56
      + 535753261 * ((((2 * v11) | 0xBC390A5C) - v11 - 1578927406) ^ 0x54E88B01)
      - 127;
  (*(void (**)(unsigned char *))(v6 + 8 * (v1 + 372)))(v11);
  uint64_t v13 = v9;
  unsigned int v12 = v7
      + 535753261 * ((1855094208 - (v11 | 0x6E927DC0) + (v11 | 0x916D823F)) ^ 0x9B998C10)
      + 775;
  (*(void (**)(unsigned char *))(v6 + 8 * (v7 + 1218)))(v11);
  return v5 ^ 0x7AB9CBDDu;
}

uint64_t sub_1DA71FB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int32x4_t a47,int32x4_t a48,int32x4_t a49,int32x4_t a50)
{
  LODWORD(v111) = 517123145;
  v58.n128_u64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v58.n128_u64[1] = 0x5F5F5F5F5F5F5F5FLL;
  __n128 v59 = (__n128)vdupq_n_s32(0x7AB9CBDFu);
  uint64_t v112 = v56 - 16;
  __n128 v60 = (__n128)vdupq_n_s32(0x7AB9CBDDu);
  v61.n128_u64[0] = 0xBEBEBEBEBEBEBEBELL;
  v61.n128_u64[1] = 0xBEBEBEBEBEBEBEBELL;
  HIDWORD(a22) = 170;
  int v62 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v53 + 8 * v50);
  uint64_t v63 = a37;
  int v64 = BYTE4(a38) ^ 0x70;
  if (v64 == 2)
  {
    int8x16x4_t v114 = vld4q_s8((const char *)&a26 + 4);
    uint8x16_t v92 = (uint8x16_t)veorq_s8(v114.val[0], (int8x16_t)v58);
    uint16x8_t v93 = vmovl_u8(*(uint8x8_t *)v92.i8);
    uint16x8_t v94 = vmovl_high_u8(v92);
    uint8x16_t v95 = (uint8x16_t)veorq_s8(v114.val[1], (int8x16_t)v58);
    _Q21 = vmovl_u8(*(uint8x8_t *)v95.i8);
    _Q20 = vmovl_high_u8(v95);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v100 = (uint8x16_t)veorq_s8(v114.val[2], (int8x16_t)v58);
    uint16x8_t v101 = vmovl_high_u8(v100);
    uint16x8_t v102 = vmovl_u8(*(uint8x8_t *)v100.i8);
    v114.val[0] = veorq_s8(v114.val[3], (int8x16_t)v58);
    v114.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v114.val[0]);
    v114.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[1]);
    v114.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v114.val[1].i8);
    v114.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v114.val[0].i8);
    v114.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[0]);
    v114.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v114.val[0].i8);
    int32x4_t v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v102.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.i8), 0x18uLL)), v114.val[0]);
    int32x4_t v104 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v102, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v93), 0x18uLL)), v114.val[3]);
    int32x4_t v105 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v101.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.i8), 0x18uLL)), v114.val[1]);
    int32x4_t v106 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v101, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v94), 0x18uLL)), v114.val[2]);
    v114.val[0] = veorq_s8(vandq_s8((int8x16_t)v103, (int8x16_t)v59), (int8x16_t)(*(_OWORD *)v114.val & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v114.val[3] = veorq_s8(vandq_s8((int8x16_t)v104, (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v114.val[3] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v114.val[1] = veorq_s8(vandq_s8((int8x16_t)v105, (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v114.val[1] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v114.val[2] = veorq_s8(vandq_s8((int8x16_t)v106, (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v114.val[2] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a49 = vaddq_s32(vsubq_s32(v105, vaddq_s32((int32x4_t)v114.val[1], (int32x4_t)v114.val[1])), (int32x4_t)v60);
    a50 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v114.val[2], (int32x4_t)v114.val[2])), (int32x4_t)v60);
    a47 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v114.val[0], (int32x4_t)v114.val[0])), (int32x4_t)v60);
    a48 = vaddq_s32(vsubq_s32(v104, vaddq_s32((int32x4_t)v114.val[3], (int32x4_t)v114.val[3])), (int32x4_t)v60);
    int v107 = (_DWORD *)&a47 + v55 + 2026136781;
    int v108 = *(v107 - 8) ^ *(v107 - 3);
    unsigned int v109 = *(v107 - 16) ^ *(v107 - 14) ^ (v108 + v51 - ((v108 << (((a6 + v57 - 30) ^ 0x31) + 44)) & 0xF57397BA));
    HIDWORD(v110) = v109 ^ v51;
    LODWORD(v110) = v109;
    *int v107 = (v110 >> 31) + v51 - ((2 * (v110 >> 31)) & 0xF57397BA);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8 * ((31 * (v56 == 2026136718)) ^ (a6 + v57 + 482))))(v63, v112);
  }
  else if (v64 == 1)
  {
    int8x16x4_t v113 = vld4q_s8((const char *)&a26 + 4);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v113.val[0], (int8x16_t)v58);
    uint16x8_t v66 = vmovl_u8(*(uint8x8_t *)v65.i8);
    int8x16_t v67 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v66.i8);
    int8x16_t v68 = (int8x16_t)vmovl_high_u16(v66);
    uint16x8_t v69 = vmovl_high_u8(v65);
    int8x16_t v70 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8);
    int8x16_t v71 = (int8x16_t)vmovl_high_u16(v69);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v113.val[1], (int8x16_t)v58);
    uint16x8_t v73 = vmovl_high_u8(v72);
    uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v72.i8);
    uint8x16_t v75 = (uint8x16_t)veorq_s8(v113.val[2], (int8x16_t)v58);
    _Q25 = (int8x16_t)vmovl_high_u8(v75);
    _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v75.i8);
    int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
    __asm { SHLL2           V24.4S, V24.8H, #0x10 }
    int8x16_t v83 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v113.val[0] = veorq_s8(v113.val[3], (int8x16_t)v58);
    v113.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v113.val[0]);
    v113.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[1]);
    v113.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v113.val[0].i8);
    v113.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[0]);
    v113.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v113.val[0].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v74.i8, 8uLL), v67));
    v113.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v113.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v74, 8uLL), v68));
    v113.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v113.val[1].i8), 0x18uLL), v83), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), v70));
    v113.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v113.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v71));
    int32x4_t v84 = (int32x4_t)veorq_s8(vandq_s8(v113.val[0], (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v85 = (int32x4_t)veorq_s8(vandq_s8(v113.val[3], (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v68 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v86 = (int32x4_t)veorq_s8(vandq_s8(v113.val[1], (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    int32x4_t v87 = (int32x4_t)veorq_s8(vandq_s8(v113.val[2], (int8x16_t)v59), (int8x16_t)(*(_OWORD *)&v71 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a49 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[1], vaddq_s32(v86, v86)), (int32x4_t)v60);
    a50 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[2], vaddq_s32(v87, v87)), (int32x4_t)v60);
    a47 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[0], vaddq_s32(v84, v84)), (int32x4_t)v60);
    a48 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[3], vaddq_s32(v85, v85)), (int32x4_t)v60);
    int v88 = (HIDWORD(a35) ^ v54)
        + a4
        + ((HIDWORD(a36) ^ v54) & (a36 ^ v54) | (a37 ^ v54) & (a36 ^ 0x49865CC1))
        + *((_DWORD *)off_1F34B1C70 + v112 + v55 - 2)
        + ((v51 + 329) ^ 0x6FB ^ a47.i32[(*((unsigned char *)off_1F34B1D10 + v112 + v55 - 8) - 30)]);
    unsigned int v89 = (v88 + v54 - (v52 & (2 * v88))) ^ v54;
    int v90 = ((v89 << (*((unsigned char *)off_1F34B1A60 + v112 + v55 - 12) - 4)) | (v89 >> (4
                                                                               - *((unsigned char *)off_1F34B1A60
                                                                                 + v112
                                                                                 + v55
                                                                                 - 12))))
        + (a36 ^ v54);
    HIDWORD(a17) = BYTE4(a38) ^ 0x70;
    HIDWORD(v111) = HIDWORD(a13) + 431864675;
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 14504))(a37, -(*((unsigned char *)off_1F34B1A60 + v56 + v55 - 28) - 4), 2026136781, a4, a36, v56 - 15, v90 + v54 - (v52 & (2 * v90)), HIDWORD(a36), a9, a10, a11, a12, a13, a14, a15, a16, a17, v111, __PAIR64__(a36, HIDWORD(a35)),
             __PAIR64__(a37, HIDWORD(a36)),
             v62,
             a22,
             v56 - 16,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46);
  }
  else
  {
    HIDWORD(a35) = 2 * (HIDWORD(a35) ^ v54) + v54 - (v52 & (4 * (HIDWORD(a35) ^ v54)));
    LODWORD(a36) = 2 * (a36 ^ v54) + v54 - (v52 & (4 * (a36 ^ v54)));
    HIDWORD(a36) = 2 * (HIDWORD(a36) ^ v54) + v54 - (v52 & (4 * (HIDWORD(a36) ^ v54)));
    LODWORD(a37) = 2 * (a37 ^ v54) + v54 - (v52 & (4 * (a37 ^ v54)));
    return v62(v58, v59, v60, v61);
  }
}

void sub_1DA71FBD0()
{
}

uint64_t sub_1DA71FC70()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 1141610560) & 0xBBF467FB) + 634) * (v0 == v1)) ^ v2)))();
}

void sub_1DA71FCA8()
{
}

uint64_t sub_1DA71FCF8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  __n128 v58 = (unsigned int *)(v57 + 4 * v53);
  unsigned int v59 = v54 & 0x80000000;
  uint64_t v60 = v53 + 1;
  int v61 = *(_DWORD *)(v57 + 4 * v60);
  unsigned int v62 = ((v61 & 0x7FFFFFFE | v59) >> ((a3 + 25) ^ 0x19)) ^ a1;
  *__n128 v58 = v58[397] ^ a2 ^ *((_DWORD *)&a53 + (v61 & 1)) ^ (v62 + v56 - ((2 * v62) & 0xCDC5DB64));
  return (*(uint64_t (**)(void))(v55 + 8 * ((1127 * (v60 == 227)) ^ a3)))();
}

uint64_t sub_1DA71FD78(uint64_t a1)
{
  uint64_t v7 = v1 + a1;
  *(unsigned char *)(v2 + v7) = v5;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + (unint64_t)(((v3 - 1599) | 0x309u) - 760) - 20 < 0x40) * v4) ^ ((v3 - 1599) | 0x309))))();
}

uint64_t sub_1DA71FDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1755732067 * ((2 * ((v19 - 136) & 0xB54208) - (v19 - 136) + 2135604720) ^ 0xA18C002B);
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x360], 8) = v14;
  *(_DWORD *)(v19 - 136) = v20 + v16 + 1758;
  *(_DWORD *)(v19 - 132) = (v17 + 513004970) ^ v20;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8D6)))(v19 - 136);
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x360], 8) = v18;
  *(_DWORD *)(v19 - 116) = v16
                         + 1374699841
                         * (((((v19 - 136) ^ 0x60944128 | 0xF4B9EC4) ^ 0xFFFFFFFE)
                           - ((v19 - 136) ^ 0x5099404 | 0xF0B4613B)) ^ 0xF79632DA)
                         + 52;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8D4)))(v19 - 136);
  BOOL v22 = *(_DWORD *)(v19 - 120) != ((4 * v16) ^ 0x25C) + 1271275120 + ((v16 + 34) | 4) - 552;
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((4 * v22) | (16 * v22)) ^ (v16 + 16))))(v21);
}

void sub_1DA71FEFC()
{
}

uint64_t sub_1DA71FF08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((((*(_DWORD *)(*a1 + v4) == v3) ^ (v2 + 16)) & 1)
                                     * ((v2 + 95491888) & 0xFA4EE31E ^ 0x206)) ^ (v2 - 1343))))();
}

uint64_t sub_1DA71FF64()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((54 * (v0 < ((STACK[0x420] - 276) | 0xD0) + 725811910)) ^ (STACK[0x420] + 387))))();
}

uint64_t sub_1DA71FFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((595
                                * (a20
                                 - *(_DWORD *)(a2 + 4)
                                 + ((353 * ((v20 - 1175134873) & 0x460B273E ^ 0x61A)) ^ 0x51395608) == 1693832618)) ^ v20)))();
}

uint64_t sub_1DA720020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = STACK[0x400];
  unint64_t v8 = STACK[0x2C0];
  STACK[0x3E8] = STACK[0x2C0] + 2353;
  STACK[0x3E0] = v7 + 49;
  STACK[0x3D8] = v8 + 2333;
  STACK[0x3D0] = v7 + 29;
  STACK[0x3C8] = v8 + 2313;
  STACK[0x3A0] = v7 + 9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * (v5 - 259)))(a1, a2, a3, a4, 889516850, 284957911, 78, 626233055);
}

uint64_t sub_1DA7200A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v51 = (*(uint64_t (**)(void, void, uint64_t))(v49 + 8 * (a1 ^ 0x909)))(LODWORD(STACK[0x590]), (v48 + v47 + 2), a42);
  int v58 = ((2 * v51) & 0xAFFE6DD6) + (v51 ^ 0x57FF36EB);
  unint64_t v59 = STACK[0x420];
  unint64_t v60 = STACK[0x420];
  unint64_t v61 = STACK[0x398];
  if (v58 == 1476343531)
  {
    uint64_t v63 = (char *)&STACK[0x680] + v61 - 0x74AC42827A6D0515;
    STACK[0x528] = (unint64_t)(v63 - 1824);
    STACK[0x3F0] = (unint64_t)(v63 - 1596);
    LODWORD(STACK[0x438]) = 2124562913;
    STACK[0x5C0] = v61 - 192;
    STACK[0x5F8] = 0;
    LODWORD(STACK[0x54C]) = 826018275;
    STACK[0x400] = (unint64_t)(v63 - 1824);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((((v60 ^ 0x10) - 260) * (v63 == (char *)1576)) ^ (v60 - 90))))(v51, v52, v53, 2235994116, v54, v55, v56, v57);
  }
  else if (v58 == 1744778990)
  {
    LODWORD(STACK[0x4F8]) = -2058972955;
    return (*(uint64_t (**)(void))(v49
                                + 8
                                * (int)(((STACK[0x4E8] == 0)
                                       * ((v59 - 1696561432) ^ 0x9AE08655 ^ (v59 - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (v59 + 1240))))();
  }
  else
  {
    int v64 = 1225351577 * ((v50 - 675345309 - 2 * ((v50 - 192) & 0xD7BF0D23)) ^ 0xF425D535);
    *(void *)(v50 - 184) = a47;
    *(_DWORD *)(v50 - 192) = v59 - v64 + 402;
    *(_DWORD *)(v50 - 18_Block_object_dispose(&STACK[0x360], 8) = (v58 - ((2 * v58 + 1342280234) & 0xF57397BA) + 582653170) ^ v64;
    int v65 = v59;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (int)(v59 ^ 0x934)))(v50 - 192);
    return (*(uint64_t (**)(uint64_t))(v49
                                              + 8
                                              * (int)(((STACK[0x4E8] == 0)
                                                     * ((v65 - 1696561432) ^ 0x9AE08655 ^ (v65 - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (v65 + 1240))))(v66);
  }
}

uint64_t sub_1DA720318@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 1952)))(*v4);
  _DWORD *v2 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1227088733;
  *(_DWORD *)(v1 + 56) = 1107689856;
  return result;
}

uint64_t sub_1DA720364@<X0>(uint64_t a1@<X5>, int a2@<W8>, __n128 a3@<Q0>)
{
  unint64_t v7 = (__n128 *)(a1 + v4);
  v7[73] = a3;
  v7[74] = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 + 32 == (v3 ^ v5)) | ((v4 + 32 == (v3 ^ v5)) << 6)) ^ a2)))();
}

void sub_1DA720394()
{
  _DWORD *v1 = -421335630;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 + 1995)))(v2);
  JUMPOUT(0x1DA7203E0);
}

uint64_t sub_1DA720424@<X0>(unint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v14 = 4 * a3;
  unint64_t v15 = (v9 - 147) ^ a1 | a3;
  uint64_t v16 = a3 + 4;
  a5.i32[0] = *(_DWORD *)(v10 + 4 * v15);
  a5.i32[1] = *(_DWORD *)(v10 + (v14 | 8));
  a5.i32[2] = *(_DWORD *)(v10 + (v14 | 0xC));
  int8x16_t v17 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v18 = a5;
  v18.i32[3] = *(_DWORD *)(v10 + 4 * v16);
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v18, a6), vandq_s8(v17, v12)), 1uLL), a7);
  v20.i32[0] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v10 + 4 * v15) & 1));
  v20.i32[1] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v10 + (v14 | 8)) & 1));
  v20.i32[2] = *(_DWORD *)(a2 + 4 * (*(_DWORD *)(v10 + (v14 | 0xC)) & 1));
  v20.i32[3] = *(_DWORD *)(a2 + 4 * (v18.i8[12] & 1));
  *(int8x16_t *)(v10 + v14) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 + v14 + 1588), v20), v13), (int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), a8)), a9));
  return (*(uint64_t (**)(void))(v11 + 8 * ((124 * (v16 != 224)) ^ v9)))();
}

uint64_t sub_1DA7204F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((1276 * (v4 == ((a4 + ((v5 - 78) | 5) - 14) ^ 0x98))) ^ v5)))(4294925278);
}

uint64_t sub_1DA720548@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, int a6, unint64_t *a7, int a8, uint64_t a9, unsigned int a10, char a11)
{
  int v14 = v11 ^ 0x2A;
  uint64_t v15 = *(void *)(v12 + 24);
  unsigned int v16 = 1225351577 * ((((2 * &a4) | 0x96C5D156) - &a4 - 1264773291) ^ 0x68F830BD);
  a10 = (a1 ^ 0xA08D6E77) + ((2 * a1) & 0x90FF7FFC ^ 0x90E52310) - v16 + ((v14 + 929293548) & 0xC89C1BCF) + 1066791082;
  a8 = v16 + v14 + 99;
  a7 = &STACK[0x7299FD1B0C63AD7D];
  a11 = 9 - -103 * ((((2 * &a4) | 0x56) - &a4 + 85) ^ 0xBD);
  a9 = v15;
  a4 = &STACK[0x6E2955DF8EED0C61];
  a5 = &STACK[0x6B8F3DED50A17636];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v13 + 8 * (v14 ^ 0x699)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((42 * (a6 != 2058996701)) ^ v14)))(v17);
}

uint64_t sub_1DA7206E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1020 * ((((2 * v0) ^ 0xBBE ^ (3 * (v0 ^ 0x5E8)) ^ 0xFFFFFFFE) & v1) != 1227088734)) ^ v0)))();
}

uint64_t sub_1DA720734(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + _Block_object_dispose(&STACK[0x360], 8) = 0x4FF9C25B4FF9C25BLL;
  *(void *)(result + 16) = 0x747C1AF048C60BB4;
  *(_DWORD *)(result + 24) = 2058996701;
  *(void *)(v2 - 0x3C909666FCA4338FLL) = result + 0x68A89052B2EA55C0;
  *((_DWORD *)v1 + 2) = 2058996701;
  return result;
}

uint64_t sub_1DA720798(_DWORD *a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  unsigned int v1 = *a1 - 235795823 * ((-2 - ((a1 | 0xAD0CA1C3) + (~a1 | 0x52F35E3C))) ^ 0xC65E1765);
  uint64_t v3 = *(void *)((char *)*(&off_1F34B17C0 + (int)(v1 ^ 0x196C39D8)) - 4);
  unsigned int v4 = v1 - 426522233 + 535753261 * ((&v3 & 0x31794F88 | ~(&v3 | 0x31794F88)) ^ 0xC472BE58);
  return (*((uint64_t (**)(uint64_t *))*(&off_1F34B17C0 + (int)(v1 & 0x808004D8)) + (int)(v1 - 426520973) - 1))(&v3);
}

void sub_1DA7208B0(uint64_t a1)
{
  int v1 = 1759421093 * ((2 * (a1 & 0x6BD6573D) - a1 - 1809209150) ^ 0x27541896);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA72094C()
{
  STACK[0x388] = 0;
  int v3 = *(_DWORD *)(v0 + 56);
  *(_DWORD *)(v0 + 56) = v3 + 1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1808 * (v3 + ((v1 - 2002312137) & 0x7758DAF3u) - 1107689927 < 0xFFFFFFFA)) ^ (v1 - 213))))();
}

uint64_t sub_1DA7209AC@<X0>(void *a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v7 = ((a2 ^ 0x7C) + 587686049) & 0xDCF89CE5;
  *(void *)(*a1 - 0x32E0FC00A1F3CACFLL) = v6 + v5 + v7 - 216;
  return (*(uint64_t (**)(void))(a3
                              + 8 * (int)((1702 * (*v3 == ((v7 - 304623841) & 0x1228372C ^ (v4 + 276)))) ^ v7)))();
}

uint64_t sub_1DA720A3C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(v9 - 252 + (a3 - 735100799)) = *(unsigned char *)(v8 + (v3 + a2))
                                                        - ((2 * *(unsigned char *)(v8 + (v3 + a2))) & 0xBF)
                                                        + 95;
  unsigned int v10 = a1 + v3 + 1;
  int v11 = (v4 < v5) ^ (v10 < v5);
  BOOL v12 = v10 < v4;
  if (v11) {
    BOOL v12 = v4 < v5;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((63 * v12) ^ v7)))();
}

uint64_t sub_1DA720AD0@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_1DA720AF4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1178560073 * ((-2 - ((a1 | 0x4D53A28B) + (~a1 | 0xB2AC5D74))) ^ 0x1F3B61D1);
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v1 - 729)
          + (((*(void *)a1 == *(void *)(a1 + 16)) * (((v1 - 716) | 0x622) ^ 0x663)) ^ v1)
          - 1))();
}

uint64_t sub_1DA720B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 120) = a21;
  *(void *)(v25 - 112) = v23;
  *(_DWORD *)(v25 - 100) = v21 + ((2 * ((v25 - 120) & 0x2F83ECE8) - (v25 - 120) + 1350308629) ^ 0x3D880B1C) * v24 - 80;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 1704)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * (v21 ^ (4 * (*(_DWORD *)(v25 - 104) <= ((v21 + 4) ^ 0x4BC61F17u))))))(v26);
}

void sub_1DA720C08(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA720C6C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1661 * (a4 - 1 == ((a2 + 1375) ^ (v6 + 1435)))) ^ a2)))();
}

uint64_t sub_1DA720CBC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1995 * ((v1 << (v2 + ((v0 + 61) | 1) - 44)) - v3 == 1571241951)) ^ v0)))();
}

uint64_t sub_1DA720D08()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1080
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == ((v3 - 5) ^ (v0 - 29) ^ ((v3 - 522) | 0x200)))) ^ v3)))();
}

uint64_t sub_1DA720D54()
{
  STACK[0x398] = v1;
  STACK[0x5C0] = v1 - 112;
  return v0();
}

uint64_t sub_1DA720D70@<X0>(int a1@<W8>)
{
  STACK[0x2C0] = v1;
  int v4 = a1 + 525;
  STACK[0x448] = 0;
  int v5 = 1374699841 * ((((2 * (v3 - 192)) | 0x501C8142) - (v3 - 192) - 672022689) ^ 0x45FA58A8);
  *(_DWORD *)(v3 - 192) = 1777521039 - v5;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x360], 8) = v4 - v5 - 742;
  unint64_t v6 = STACK[0x2B0];
  *(void *)(v3 - 184) = STACK[0x2B8];
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = 0x7CD37ED9EC2B0D1;
  *(void *)(v3 - 160) = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 999)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (v4 ^ (8
                                                   * (*(_DWORD *)(v3 - 176) == (((v4 ^ 0x454) + 197) ^ 0x7AB9CFB8 ^ (17 * (v4 ^ 0x454))))))))(v7);
}

uint64_t sub_1DA720E44@<X0>(int a1@<W4>, unsigned int *a2@<X5>, int a3@<W6>, int a4@<W7>, char a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v64 = (v58 - 404) | 0x5D;
  int v65 = &a58 + (v63 - 102298373);
  unsigned int v66 = ((*(_DWORD *)(*v62 + (*a2 & (((v58 - 132) | 0x200) ^ 0x5F712634))) ^ v65) & 0x7FFFFFFF)
      * a1;
  unint64_t v67 = (v66 ^ HIWORD(v66)) * a1;
  char v68 = *(unsigned char *)(*(void *)(v61 + 8 * (v58 ^ 0x59A)) + (v67 >> 24) - 8);
  char v69 = *(unsigned char *)(*(void *)(v61 + 8 * (v58 ^ 0x509)) + (v67 >> 24) - 8) ^ *(unsigned char *)(*(void *)(v61 + 8 * (v58 ^ 0x5C4))
                                                                                        + (v67 >> 24));
  LOBYTE(v67) = v67 ^ (-71 * BYTE3(v67));
  char *v65 = v68 ^ (((a3 + v64 - 1117) ^ v59) >> a5) ^ v69 ^ v67;
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * ((915
                                * (v63
                                 - (((v68 ^ (((a3 + v64 - 1117) ^ v59) >> a5) ^ v69) ^ v67) != 0) == a4)) ^ v58)))();
}

uint64_t sub_1DA720F34(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == a4)
                                * ((v8 + 336) ^ 0x126 ^ (a3 - 1673) ^ ((v8 - 435876209) | 0x1080478E))) ^ (v8 + 336))))();
}

uint64_t sub_1DA720F9C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 8) + (v3 ^ 0xFFFFFF61);
  return (*(uint64_t (**)(void))(v2 + 8 * ((1009 * ((v5 & (2 * v6)) + (v6 ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1DA720FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x260] = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((927 * (v5 == v8 + ((4 * a5) ^ 0x474) - 40)) ^ (a5 - 201))))();
}

uint64_t sub_1DA721018()
{
  if (v2 >= 0) {
    unsigned int v5 = v2;
  }
  else {
    unsigned int v5 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v6 = v1;
  }
  else {
    unsigned int v6 = -v1;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v0 + 715260078) & 0xD55DFFF7 ^ 0xFFFFFDCD) + (v0 ^ v3)) * (v5 > v6)) ^ v0)))();
}

void sub_1DA7210C0(int a1@<W8>)
{
  int v3 = a1 - 614465568;
  if (*v2 + 1450632188 < 0) {
    int v3 = ((v1 - 1112600918) & 0x4250F55B) - a1 - 882906516;
  }
  _DWORD *v2 = *v2 - 1398798287 + v3;
  JUMPOUT(0x1DA721170);
}

uint64_t sub_1DA7211C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (((((v29 - 625) | 0x42) + 239)
                                * ((unint64_t)(&a27 + a14 + (v28 + v27 - 1)) > 0xF)) ^ v29)))();
}

void sub_1DA721208(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1224239923 * (((a1 | 0xBAA17AAE) - (a1 & 0xBAA17AAE)) ^ 0x48128779) + 1252;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA721388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((488 * (((v21 - 45) ^ (((v21 - 665) ^ (v18 - 192)) + v20 < 0x7FFFFFFD)) & 1)) ^ (v21 - 235))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1DA7213E0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1736)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((87 * (STACK[0x458] == 0)) ^ (v0 + 1412))))();
}

uint64_t sub_1DA721418(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((15
                                * ((v19 + v18 - 1) + v21 - 252 + ((31 * (a1 ^ 0x3A0) - 1210) ^ a18) > 0xF)) ^ a1)))();
}

uint64_t sub_1DA721480()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v0 | (4
                                     * (((*(_DWORD *)(v1 + 48 * (v2 - 963978769) + 36) == v2) ^ (v0 - 21)) & 1)))))();
}

void sub_1DA7214D0()
{
}

uint64_t sub_1DA7214DC(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x7906C8B5DC256D3CLL) = v1;
  return result;
}

uint64_t sub_1DA7214F8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x22D) + 952) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1DA721528(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * ((249
                                                                * ((((v5 + 996964723) & 0xC49384B7 ^ 0xF1F7DE7F) & -(v3 + 2 * (v4 & 0xD476567E)) ^ 0xD076565E)
                                                                 + ((v5 + 314622426) ^ (v2
                                                                                      - (v4 & 0xD476567E)
                                                                                      - 1191239332))
                                                                 + 536313854 != 418606957)) ^ v5)))(a1, a2, 272);
}

uint64_t sub_1DA7215DC@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(unsigned char *)(a1 + (v30 + a2 + 62)) = *(&a28 + ((v28 + 4294967279) & (v29 + 3163397952)));
  int v33 = 1224239923 * ((2 * ((v32 - 168) & 0x6865AE28) - (v32 - 168) - 1751494190) ^ 0x6529AC05);
  *(void *)(v32 - 16_Block_object_dispose(&STACK[0x360], 8) = a17;
  *(_DWORD *)(v32 - 160) = v33 + v28 + 113;
  *(_DWORD *)(v32 - 156) = v33 ^ 0x5DB39D1F;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v31 + 8 * ((int)v28 + 2044)))(v32 - 168);
  return a16(v34);
}

uint64_t sub_1DA721690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == 1) * a8) ^ v8)))();
}

uint64_t sub_1DA72169C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 - 1915075045 < ((v2 - 1683) ^ 0xFFFFFEC3)) * (((v2 - 1994) | 0x218) ^ 0x212)) | v2)))();
}

uint64_t sub_1DA7216E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 ^ 0x538) + 1129) ^ 0x602) * ((v1 + a1 - 133) >= 0x7FFFFF7D)) ^ v2)))();
}

uint64_t sub_1DA72172C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1394
                                * (a1 - 1592229376 < ((v1 + 1023138242) & 0xC30424F9) + ((v1 - 346) | 0x11) + 2147483156)) ^ v1)))();
}

uint64_t sub_1DA721798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((970 * (v9 != v11)) ^ ((int)a5 + (int)a3 + 616))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DA7217DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + 1494) ^ 0x200) - 412) * (*(_DWORD *)(v1 - 144) == *(_DWORD *)(v1 - 152))) ^ v0)))();
}

void sub_1DA721ACC()
{
}

uint64_t sub_1DA721B18()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 1) < 0x14) * v2) ^ v1)))();
}

void sub_1DA721B30()
{
}

void sub_1DA721B38()
{
}

uint64_t sub_1DA721BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void))(v6
                                                                              + 8
                                                                              * (int)((((v8 - 18023879) & 0xF9F71C77 ^ (v9 + 1268))
                                                                                     * (v7 == a6)) ^ v8)))(0, a2, a3, a4, (v8 + 1175));
}

uint64_t sub_1DA721BE4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1941 * ((v1 ^ 0xBC8D0554 ^ ((v4 + a1 - 1544889612) | 0x5C152404)) == v2 - 196928541)) ^ a1)))();
}

uint64_t sub_1DA721C44(uint64_t a1, int a2, int a3, int a4, int8x16_t a5)
{
  unsigned int v8 = v6 - 32;
  uint64_t v9 = v5 + v8;
  uint64_t v10 = a1 + v8;
  int8x16_t v11 = vaddq_s8(*(int8x16_t *)(v9 - 31), a5);
  *(int8x16_t *)(v10 - 15) = vaddq_s8(*(int8x16_t *)(v9 - 15), a5);
  *(int8x16_t *)(v10 - 31) = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 == 32) * a4) ^ (a2 + 1129))))();
}

void sub_1DA721C50()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 255));
  JUMPOUT(0x1DA72AF0CLL);
}

uint64_t sub_1DA721C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v27 - 120) = a25;
  *(_DWORD *)(v27 - 112) = v26
                         + 1178560073 * (((v27 - 120) & 0x66EE352B | ~((v27 - 120) | 0x66EE352B)) ^ 0x3486F671)
                         + 214;
  *(void *)(v27 - 104) = a21;
  (*(void (**)(uint64_t))(v25 + 8 * (v26 + 1396)))(v27 - 120);
  *(void *)(v27 - 120) = a25;
  *(void *)(v27 - 112) = a23;
  *(_DWORD *)(v27 - 100) = v26
                         + 1374699841 * (((~(v27 - 120) & 0x16E36B40) - (~(v27 - 120) | 0x16E36B41)) ^ 0x7B177348)
                         - 377;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 1407)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((*(_DWORD *)(v27 - 104) == 1271275120) * ((v26 ^ 0x377) - 447)) ^ v26)))(v28);
}

uint64_t sub_1DA721D98@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(void *)(&a20 + 363 * (v21 ^ 0x2A8) + a1 - 725) = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(void))(v22 + 8 * ((432 * ((v20 & 0x38) == 8)) ^ v21)))();
}

uint64_t sub_1DA721DEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v36 = *(void *)(v33 + 24);
  *(int8x16_t *)(v34 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v33 + 40) - 0x1B21A8FA2BFEFBF1), (int8x16_t)xmmword_1DA75DF20);
  if (a8) {
    BOOL v37 = v36 == 0x2F19939F047D9D70;
  }
  else {
    BOOL v37 = 1;
  }
  int v38 = !v37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (int)((v38 * (((a5 - 395) | 0x121) - 1352)) ^ a5)))(v36 - 0x2F19939F047D9D70, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

void sub_1DA721E68(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) + 535753261 * ((-2 - ((a1 | 0x65A1D1FF) + (~a1 | 0x9A5E2E00))) ^ 0x90AA202F);
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(unint64_t **)(a1 + 24);
  int v4 = *(unint64_t **)(a1 + 32);
  uint64_t v11 = *(void *)(*(void *)a1 - 0x49E3D721B33288DBLL);
  uint64_t v12 = v2;
  unsigned int v8 = &STACK[0x11127EB20C1B7536];
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  unsigned int v13 = v1
      + 628203409 * ((1211618388 - (&v8 | 0x4837D454) + (&v8 | 0xB7C82BAB)) ^ 0x35402798)
      + 1491;
  int v6 = (char *)*(&off_1F34B17C0 + v1 - 315) - 8;
  (*(void (**)(unint64_t **))&v6[8 * (v1 ^ 0x63B)])(&v8);
  uint64_t v7 = *(unint64_t **)(v3 - 0x49E3D721B33288E3);
  LODWORD(v9) = v1
              + 1178560073 * (((&v8 | 0x7EF1CB1F) + (~&v8 | 0x810E34E0)) ^ 0xD366F7BB)
              + 414;
  uint64_t v10 = &STACK[0x11127EB20C1B7526];
  unsigned int v8 = v7;
  (*(void (**)(unint64_t **))&v6[8 * (v1 ^ 0x63C)])(&v8);
  HIDWORD(v9) = v1
              + 1224239923 * ((&v8 - 1055940362 - 2 * (&v8 & 0xC10FA0F6)) ^ 0x33BC5D21)
              + 481;
  unsigned int v8 = v5;
  (*(void (**)(unint64_t **))&v6[8 * v1 + 13176])(&v8);
  __asm { BRAA            X8, X17 }
}

void sub_1DA7220CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,_DWORD *a38)
{
  *a38 ^= a37;
  JUMPOUT(0x1DA7220F8);
}

uint64_t sub_1DA72213C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  BOOL v28 = a4 < a1;
  *(&a23 + (v23 - 32692655)) = *(unsigned char *)(v27 + (v24 + a3))
                                           + ((v25 - 52) ^ 0x71)
                                           - ((2 * *(unsigned char *)(v27 + (v24 + a3))) & 0xBF);
  unsigned int v29 = v24 + 1 + a2;
  int v30 = v28 ^ (v29 < a1);
  BOOL v31 = v29 < a4;
  if (!v30) {
    BOOL v28 = v31;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * (v28 | (16 * v28) | v25)))();
}

uint64_t sub_1DA7221BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int *a33,uint64_t a34,uint64_t a35,unsigned int *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (v61 <= 0x66406227) {
    int v62 = *a33 + 1;
  }
  else {
    int v62 = 1308924072;
  }
  *a33 = v62;
  return sub_1DA720E44(-1609296481, a36, 389832077, 102298372, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           (uint64_t)a33,
           a34,
           a35,
           (uint64_t)a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1DA722284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v34 - 120) = v31;
  *(void *)(v34 - 144) = v32;
  *(void *)(v34 - 136) = v28;
  *(_DWORD *)(v34 - 112) = (v30 - 1344) ^ (1374699841
                                         * ((((v34 - 144) | 0x18DC3D13) - ((v34 - 144) & 0x18DC3D13)) ^ 0x7528251A));
  (*(void (**)(uint64_t))(v27 + 8 * (v30 + 573)))(v34 - 144);
  int v35 = 1374699841
      * ((2 * (((v34 - 144) ^ 0x83A470D) & 0x166438A5) - ((v34 - 144) ^ 0x83A470D) - 375666854) ^ 0x8C55985E);
  *(_DWORD *)(v34 - 140) = (v30 - 811) ^ v35;
  *(_DWORD *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = v33 - v35 + v29 + 2;
  *(void *)(v34 - 136) = a25;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(a27 + 8 * (v30 + 540)))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (((*(_DWORD *)(v34 - 144) == ((v30 - 330) | 2) + 1578363941) * (v30 - 1457)) ^ v30)))(v36);
}

uint64_t sub_1DA7223A8()
{
  int v4 = 7 * (STACK[0x420] ^ 0x114);
  unint64_t v0 = STACK[0x588];
  STACK[0x4A0] = *(void *)(v3 + 8 * (int)(STACK[0x420] - 248));
  STACK[0x4F0] = v0;
  STACK[0x5E8] = STACK[0x3F0];
  uint64_t v1 = *(_DWORD *)(v0 - 0x4696E7753303C8EELL) & (((v4 - 20) | 0x432u) - 1012);
  *(unsigned char *)(v0 - 0x4696E7753303C932 + (v1 ^ 0x16)) = -33;
  return (*(uint64_t (**)(void))(v3 + 8 * ((532 * ((v1 ^ 0x16) > 0x37)) ^ v4)))();
}

uint64_t sub_1DA7223C4(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) ^ (235795823 * ((348304330 - (a1 | 0x14C2B3CA) + (a1 | 0xEB3D4C35)) ^ 0x7F90056C));
  uint64_t v2 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v5 = v1
     + 1882357600
     + 1374699841
     * (((&v4 ^ 0xFFEF5A43) & 0x762C0D61 | ~(&v4 ^ 0xFFEF5A43 | 0x762C0D61)) ^ 0x1BC8B0D4)
     + 1432;
  uint64_t v6 = v2;
  return (*((uint64_t (**)(uint64_t *))*(&off_1F34B17C0 + v1 + 1882357600) + (int)(v1 ^ 0x8FCD8969) - 1))(&v4);
}

void sub_1DA7224E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA722570()
{
  BOOL v3 = (*(_DWORD *)(v2 - 0x68A89052B2EA55ACLL) & 1) != (v0 ^ 0x130) - 787;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 | (8 * v3)) ^ v0)))();
}

uint64_t sub_1DA7225B0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((1020
                                     * ((((2 * ((v0 + 955728173) & 0xC708BFFF)) ^ 0xBBE ^ (3
                                                                                         * ((v0 + 955728173) & 0xC708BFFF ^ 0x5E8)) ^ 0xFFFFFFFE) & v1) != 1227088734)) ^ (v0 + 955728173) & 0xC708BFFF)))();
}

uint64_t sub_1DA72261C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v4 - 1550837730;
  uint64_t v13 = 4 * (v9 + v5);
  int v14 = v10
      + 1809008658
      + (*(_DWORD *)(*(void *)(a3 - 0x11127EB20C1B74FELL) + v13) ^ v6)
      - (*(_DWORD *)(*(void *)(a4 - 0x11127EB20C1B74FELL) + v13) ^ v6);
  *(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + v13) = v14 + v6 - (v8 & (2 * v14));
  BOOL v16 = v9 + 1262068620 < 596645918 && v9 + 1262068620 >= v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((29 * v16) ^ (647 * ((v11 - 740) ^ 0x45D)))))(1133, 0x5DFFEDCFFBF3DCF3, 0x1F7E7B9E6, 0xFB7ED2726FDF6B1ELL, 1262068620, 596645918);
}

void sub_1DA722738()
{
  STACK[0x5C0] = STACK[0x408];
  LODWORD(STACK[0x530]) = v0;
  JUMPOUT(0x1DA722754);
}

uint64_t sub_1DA722784@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v5 = *(_DWORD *)(v2 + 1428);
  if (v5 == 1584496216 || v5 == 1584496212) {
    return (*(uint64_t (**)(void))(v4 + 8 * ((a1 + 186) ^ (8 * (*(_DWORD *)(a2 + 476) != (a1 ^ 0xCE) + 43949881)))))();
  }
  STACK[0x5C0] = STACK[0x260];
  return v3();
}

uint64_t sub_1DA722878@<X0>(int a1@<W3>, unsigned int a2@<W5>, int a3@<W7>, int a4@<W8>)
{
  BOOL v8 = a2 < v5;
  if (v8 == a1 + a4 < v5) {
    BOOL v8 = a2 > a1 + a4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v4 ^ a3) - 467) ^ v7) * v8) ^ v4 ^ a3)))();
}

void sub_1DA7228C0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA722948@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x444]) = 2;
  STACK[0x4E8] = 0;
  LODWORD(STACK[0x5D4]) = 0;
  LODWORD(STACK[0x590]) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((85 * ((v2 & 2) != (a1 ^ v1) - 279)) ^ a1)))();
}

uint64_t sub_1DA722990@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((93 * (v1 ^ 0x3EA) + 1222452936) & 0xB722D86E) + 1562) * (a1 == 19)) ^ v1)))();
}

uint64_t sub_1DA7229DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((125 * (v0 + 1 != v3 + 48)) ^ v1)))();
}

uint64_t sub_1DA722AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int v27 = (a24 ^ v26) - ((2 * (a24 ^ v26)) & 0x5CF43436) - 1367729637;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((v25 + 445) | (4
                                              * (((2 * v27) & 0x86FD356E ^ 0x4F43426) + (v27 ^ 0x6D0480AC) + 2145910220 != 1130797187)))))();
}

uint64_t sub_1DA722B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t))(v48 + 8 * ((44 * (a17 + ((a48 << ((25 * (a28 ^ 0x7C)) ^ 0x8A)) & 0x2E ^ 0x2C) + (a48 & 0x3F ^ 0xEB7A8BC1) < 0xFFFFFFC0)) ^ (a28 + 1375))))(3046470713, a2, 2894415355, &a39, a27, &a36, a30, a31);
}

uint64_t sub_1DA722C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v10 = (unsigned __int8 *)(a4 + v5 + v9);
  int v11 = ((*v10 ^ 0x5F) << 24) | ((v10[1] ^ 0x5F) << 16) | ((v10[2] ^ ((v4 ^ 0x75) + 79)) << 8);
  *(_DWORD *)(v6 + v5 + v9) = (v11 | v10[3] ^ 0x5F) + v8 - 2 * ((v11 | v10[3] ^ 0x5F) & (v8 + 2) ^ (v10[3] ^ 0x5F) & 2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((21 * ((unint64_t)(v5 + 4 + v9) > 0x3F)) ^ v4)))();
}

uint64_t sub_1DA722C94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a6 + (a4 + v8)) = *(void *)(a2 + (a4 + v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a8 == 0) * v9) ^ a5)))();
}

uint64_t sub_1DA722CC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 44_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 8440))(0);
}

void sub_1DA722D20()
{
}

uint64_t sub_1DA722D38()
{
  uint64_t v6 = (void *)(v0 + v1 - 1372);
  STACK[0x480] = v2 + 0xB6B6F7DB9DE1514;
  *uint64_t v6 = 0xA0A0A0A0A0A0A0A0;
  v6[1] = 0x5F5F5F5F595F5F4DLL;
  int v7 = 235795823 * ((v5 - 192) ^ 0x94AD4959);
  *(_DWORD *)(v5 - 192) = v7 ^ 0x7A25A97C;
  *(_DWORD *)(v5 - 184) = v3 - v7 + 1064654772;
  (*(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0xF2B)))(v5 - 192);
  LODWORD(STACK[0x454]) = 826018611;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v3 ^ 0x88)))(336, 1925803308);
  STACK[0x4B8] = v8;
  return (*(uint64_t (**)(void))(v4 + 8
                                   * (int)(((v8 == 0) * (v3 - 862 + ((v3 + 2137575960) & 0x8097277F) - 1097)) ^ v3)))();
}

uint64_t sub_1DA722E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v35 = v34 - 144;
  *(void *)(v34 - 144) = v32;
  *(void *)(v34 - 136) = v28;
  *(_DWORD *)(v34 - 112) = (v30 - 1581) ^ (1374699841 * ((v34 - 180157681 - 2 * ((v34 - 144) & 0xF543039F)) ^ 0x98B71B96));
  *(void *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v34 - 120) = v31;
  (*(void (**)(uint64_t))(v27 + 8 * (v30 + 336)))(v34 - 144);
  *(_DWORD *)(v34 - 112) = (v30 - 1581) ^ (1374699841
                                         * ((~((v34 - 144) | 0x255A1956) + ((v34 - 144) & 0x255A1956)) ^ 0xB751FEA0));
  *(void *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v34 - 120) = v31;
  *(void *)(v34 - 144) = v32;
  *(void *)(v34 - 136) = v28;
  (*(void (**)(uint64_t))(a27 + 8 * (v30 ^ 0xED0)))(v34 - 144);
  *(_DWORD *)(v34 - 112) = (v30 - 1581) ^ (1374699841
                                         * ((v34 - 1950826312 - 2 * ((v34 - 144) & 0x8BB8C148)) ^ 0xE64CD941));
  *(void *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v34 - 120) = v31;
  *(void *)(v34 - 144) = v32;
  *(void *)(v34 - 136) = v28;
  (*(void (**)(uint64_t))(a27 + 8 * (v30 ^ 0xED0)))(v34 - 144);
  int v36 = 1374699841 * ((((2 * v35) | 0x313D44FC) - v35 - 413049470) ^ 0x756ABA77);
  *(void *)(v34 - 136) = v33;
  *(_DWORD *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = -526266697 - v36 + v29 + 1;
  *(_DWORD *)(v34 - 140) = (v30 - 1048) ^ v36;
  (*(void (**)(uint64_t))(a27 + 8 * (v30 ^ 0x131)))(v34 - 144);
  BOOL v37 = *(_DWORD *)(v34 - 144) == 1578365111;
  unsigned int v38 = 1374699841 * ((2 * (v35 & 0x4A0D4328) - v35 - 1242383148) ^ 0xD806A4DD);
  *(_DWORD *)(v34 - 140) = (v30 - 1048) ^ v38;
  *(_DWORD *)(v34 - 12_Block_object_dispose(&STACK[0x360], 8) = -526266697 - v38 + v29;
  *(void *)(v34 - 136) = v33;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(a27 + 8 * (v30 ^ 0x131)))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(a27 + 8 * ((v37 * (((v30 - 1620) | 0x400) ^ 0x5BD)) ^ v30)))(v39);
}

uint64_t sub_1DA723080@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  if ((a3 + 518512315) <= 0x12 && ((1 << (a3 - 69)) & 0x4040D) != 0) {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((14
                                  * ((*(_DWORD *)(v4 + v3 * (uint64_t)a2 + 40) & 1) == (((a1 - 243) | 0x242) ^ (7 * (a1 ^ 0x17D)) ^ 0x80))) ^ (a1 + 896))))();
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((a1 + 44) ^ (16
                                              * ((*(_DWORD *)(v4 + v3 * (uint64_t)a2 + 40) & 8) != ((a1 - 271) | 0x11)
                                                                                                - 25)))))();
}

void sub_1DA723140()
{
}

void sub_1DA7231B0()
{
}

uint64_t sub_1DA7231C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((252 * (*(_DWORD *)(v1 + 1424) != (v0 ^ 0x487D357C))) ^ v0)))();
}

uint64_t sub_1DA7231FC()
{
  *(_DWORD *)(v6 - 112) = v0 + ((v6 - 1077651409 - 2 * ((v6 - 128) & 0xBFC458AF)) ^ 0x1253640A) * v4 + 1246;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x360], 8) = v5;
  *(void *)(v6 - 120) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 | 0x541)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1249 * (v1 == ((v0 - 1084284569) & 0x40A0DDB4 ^ 0x6D9BB204))) ^ v0)))(v7);
}

uint64_t sub_1DA7232A4@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  int v14 = v9 ^ a2;
  uint64_t v15 = (v11 + v10 + 279);
  *(unsigned char *)(a4 + v15 + 36) = ((v15 & 0xF) * a1) ^ *(unsigned char *)(a5 + v15) ^ *(unsigned char *)(v7 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + a7 + 1) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ v12;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v10 + v14 - 280 != a6 + (v14 ^ a2) - 47) * a3) ^ (v14 + 1254))))();
}

uint64_t sub_1DA723320(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((305
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v4) == (v3 ^ (v4 - 158)))) ^ v3)))();
}

uint64_t sub_1DA723360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                                  + 8 * ((1997 * ((unint64_t)*(&off_1F34B17C0 + v4 - 772) + -(v4 + 189) - a1 + -13 * (v4 ^ 0x3EFu) + 2040 < 0x20)) ^ v4)))(900, 3634746950, 660220839, a4, 335, 597, 1787);
}

uint64_t sub_1DA7233F8@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x584]) = 0;
  int v4 = (_DWORD *)STACK[0x3F0];
  int v5 = LODWORD(STACK[0x584])++;
  *int v4 = v5 + 330100431;
  uint64_t v6 = (*v1 + 625973167);
  unint64_t v7 = 628203409 * ((0x9F45725840FEBEE8 - ((v3 - 192) | 0x9F45725840FEBEE8) + STACK[0x318]) ^ 0x5FE627B23D894D24);
  *(_DWORD *)(v3 - 192) = (a1 - 1518279006) & 0xE5E6FF82 ^ v7;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x360], 8) = -1501686123 - v7 + a1;
  *(void *)(v3 - 160) = v7 ^ 0x73543057;
  *(_DWORD *)(v3 - 172) = v7 + 1;
  *(_DWORD *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = v7 + a1 - 1518279006 + 35;
  *(_DWORD *)(v3 - 152) = a1 - 1518279006 - v7;
  *(void *)(v3 - 184) = v6 + v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x912)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 176)))(v8);
}

void sub_1DA723400()
{
  STACK[0x468] = *(void *)(v0 + 8 * (int)(STACK[0x420] - 245));
  JUMPOUT(0x1DA72341CLL);
}

void sub_1DA723428()
{
}

uint64_t sub_1DA723454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (v5 - 235)))(a1, a2, v6, a4, 889516850, 284957911, 78);
}

uint64_t sub_1DA723484@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x530]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((a1 - 62) ^ (STACK[0x388] == 0)) & 1) == 0) * (a1 - 27)) ^ (a1 + 1493))))();
}

uint64_t sub_1DA723490(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1162 * (v4 - 696853130 + ((a3 + 1343) | 4) >= 0)) ^ a3)))();
}

uint64_t sub_1DA7234D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = (((a7 + a6 + 184) | 0x102) ^ 0x16C0BBAA) + a14;
  BOOL v19 = v18 < 0x5D40BC0F;
  BOOL v20 = v18 > a17;
  if (a17 < 0x5D40BC0F != v19) {
    BOOL v21 = v19;
  }
  else {
    BOOL v21 = v20;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((105 * v21) ^ (a7 + a6 + 971))))();
}

uint64_t sub_1DA7234DC@<X0>(unsigned int a1@<W2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _DWORD *a19)
{
  int v22 = (*a19 ^ a2)
      + (**(_DWORD **)(v19 - 0x11127EB20C1B74FELL) ^ (a2 + v20 - 296 - 1224))
      * (**(_DWORD **)(v19 - 0x11127EB20C1B74FELL) ^ a2);
  return (*(uint64_t (**)(unint64_t))(v21 + 8 * ((v20 - 296) ^ ((2 * (a1 > 1)) | (4 * (a1 > 1))))))(((v22 + 443271679 - ((2 * v22) & 0x34D793FEu)) ^ 0x1A6BC9FFLL)+ ((v22 + 443271679 - ((2 * v22) & 0x34D793FE)) ^ 0x1A6BC9FF)* (*(_DWORD *)(a5 - 0x49E3D721B33288D3) + ((v20 - 595) ^ 0x8AE7FDD8))* (unint64_t)(**(_DWORD **)(a15 - 0x11127EB20C1B74FELL) ^ a2));
}

uint64_t sub_1DA723690()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1392
                                * (((v1 + ((v2 - 384053709) & 0x16E4371F) - 1567) & (2
                                                                                   * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0 + v2 + 716 - 920)) ^ v2)))();
}

void sub_1DA7236F0()
{
}

uint64_t sub_1DA723760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(void *)(&a27 + v29 + a2) = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(void))(v30 + 8 * ((((v28 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v27 ^ 0x303) - 113)) ^ v27)))();
}

uint64_t sub_1DA7237A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(void))(v33 + 8 * ((124 * (a33 + a3 + (v34 ^ 8u) + 26 > 0xFFFFFFFA)) ^ (v34 + 893))))();
}

void sub_1DA7237E8()
{
}

void sub_1DA723898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61,int a62)
{
  *(_DWORD *)(v62 - 124) = a59 ^ 0x903602B8;
  *(_DWORD *)(v62 - 140) = a61 ^ 0x6CD89647;
  *(_DWORD *)(v62 - 12_Block_object_dispose(&STACK[0x360], 8) = a62 ^ 0xD90AA2DA;
  *(_DWORD *)(v62 - 136) = a60 ^ 0x8D8A97CE;
  JUMPOUT(0x1DA7130E0);
}

uint64_t sub_1DA7238EC@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_1DA7239FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((28 * (a8 > 0x82)) ^ (v8 - 425))))();
}

uint64_t sub_1DA723A20()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 948) & v1) - LODWORD(STACK[0x3E8]) == -3) * (((v0 - 880) | 0x20) + 29)) ^ v0)))();
}

uint64_t sub_1DA723A58(uint64_t result)
{
  return sub_1DA7214DC(result);
}

uint64_t sub_1DA723A74@<X0>(int a1@<W8>)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((91 * (a1 ^ 0x18B) + 1173338664) & 0xFBBEFF7E ^ (v1 + 1157) ^ ((91 * (a1 ^ 0x18B) - 359) | 9))
                                     * (v3 == 552102108)) ^ (91 * (a1 ^ 0x18B)))))();
}

uint64_t sub_1DA723AEC@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v8 = v3 - 1;
  *(unsigned char *)(v5 + v_Block_object_dispose(&STACK[0x360], 8) = ((v2 + 27) ^ v4) * (v2 + 44);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 0) * ((a1 + a2 - 1555) ^ v6)) | a2)))();
}

uint64_t sub_1DA723AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  BOOL v26 = v22 + 1295676601 > 1061945490
     || v22 + 1295676601 < a22 + ((v24 - 356) | 0x23) + ((v24 - 40) | 0x21) - 1085538677;
  return (*(uint64_t (**)(void))(v23 + 8 * ((1764 * v26) ^ v24)))();
}

uint64_t sub_1DA723B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((((v4 - 229870105) > 0x37)
                                                                                           * (v5 + 193)) ^ (v5 + 479))))(a1, -229870105, a3, a4, 889516850, 284957911);
}

void sub_1DA723BA8()
{
}

uint64_t sub_1DA723BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unint64_t *a15, uint64_t a16)
{
  a13 = (v18 - 397) ^ (1374699841
                     * ((&a13 + 1783994424 - 2 * ((unint64_t)&a13 & 0x6A559838)) ^ 0x7A18031));
  a15 = &STACK[0x5F8F23596C339F7B];
  a16 = a10;
  uint64_t v19 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0xE14)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a14 == v16 + ((v18 - 539) | 0x214) - 1566)
                                              * ((v18 + 845365688) & 0xBE7F ^ 0x641)) ^ v18)))(v19);
}

uint64_t sub_1DA723C7C(int a1)
{
  unsigned int v5 = ((a1 - 1716951758) & 0x665697DE ^ 0xFFFFFFB6) + *(unsigned __int8 *)(v3 + 3);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1920 * ((v2 & (2 * v5)) + (v5 ^ v1) == ((a1 - 474) ^ (v1 - 481)))) ^ a1)))();
}

uint64_t sub_1DA723CE0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(unsigned char *)(v3 + v5 + a1) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 | (8 * ((((unint64_t)(v5 + 1 + a1) < 0x40) ^ v2) & 1)))))();
}

uint64_t sub_1DA723D14@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * ((unint64_t)(v3 - a2 - 0x4696E7753303C932 + v2) > 0xF)) ^ a1)))();
}

uint64_t sub_1DA723D5C(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x62C]) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (a3 - 226)))();
}

uint64_t sub_1DA723D78()
{
  BOOL v4 = v0 < 0xBA0DE9B6;
  if (v4 == (unint64_t)(v1 - 0x76D505FA21C37217) < 0xBA0DE9B6) {
    BOOL v4 = v1 - 0x76D505FA21C37217 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (1477 * v4))))();
}

uint64_t sub_1DA723DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 1755732067
      * ((~((v18 - 136) ^ 0xAB855F2E | 0xD6C0ADF9) + (((v18 - 136) ^ 0xAB855F2E) & 0xD6C0ADF9)) ^ 0x5C7CB0F3);
  *(_DWORD *)(v18 - 136) = v19 + v15 + 1761;
  *(_DWORD *)(v18 - 132) = (v15 + 1453 + v16 - 255575094) ^ v19;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = v17;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1837)))(v18 - 136);
  *(_DWORD *)(v18 - 116) = v15
                         + 1453
                         + 1374699841 * ((~((v18 - 136) | 0x5473D2EE) + ((v18 - 136) & 0x5473D2EE)) ^ 0xC6783518)
                         - 1398;
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * ((v15 + 1453) ^ 0xE82)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((v15 + 1453) | (2
                                                             * ((((v15 + 373) ^ (*(_DWORD *)(v18 - 120) == 1271275120)) & 1) == 0)))))(v20);
}

uint64_t sub_1DA723F0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1593
                                * (*(_DWORD *)(v2 + 4 * (((v4 + 461) ^ 0x737 ^ (v1 + 2210)) + v3)) == a1)) ^ (v4 + 592))))();
}

uint64_t sub_1DA723F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a3 - a8 + ((a5 + 606553715) & 0x8BF9F ^ 0xFFFFFFFFFFFFFCE6) > 0x1F)
                                * (((a5 - 2040665477) & 0x22170B) - 764)) ^ a5)))();
}

uint64_t sub_1DA723FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = *(unsigned __int8 *)(STACK[0x5A8] + (((v7 ^ 0x3B4) - 258914625) & 0xF6EBBEF) - 712)
      - (*(unsigned char *)(*(void *)(v9 + v8 * (uint64_t)a7 + 24)
                                   - 0x589091FC44DFD8EFLL
                                   + (((v7 ^ 0x3B4) - 258914625) & 0xF6EBBEF)
                                   - 712)
                        - 103);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((1746
                                * (((2 * v11) & 0xFF2FAFE6) + (v11 ^ 0xFF97D7F3) == (((v7 ^ 0x3B4) - 22) | 0x114)
                                                                                  - 6826276)) ^ v7 ^ 0x3B4)))();
}

void sub_1DA724080()
{
}

uint64_t sub_1DA7240E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  HIDWORD(a9) = v19;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((912 * (v18 == v21 + (a3 ^ (a3 - 1330)) + (a18 & 0xD73E1EF3) - 2196)) ^ ((int)a5 + (int)a3 - 504))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1DA724144()
{
}

uint64_t sub_1DA724150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W6>, uint64_t a5@<X8>)
{
  *(_DWORD *)(*v8 + 4 * (v5 + v6 + 638)) = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5
                                                              + 8
                                                              * (((a4 & ~((v10 - 728) ^ (v9 == v7))) * (v10 - 639)) ^ v10)))(a1, a2, 159353952);
}

void sub_1DA7241AC(unint64_t a1@<X5>, unint64_t a2@<X7>, int a3@<W8>, uint64_t a4)
{
  *(void *)(a1 + 1516) = v4;
  *(void *)(a1 + 1524) = v4;
  *(_DWORD *)(a1 + 1532) = v5;
  *(void *)(a2 + 96) = a1;
  STACK[0x288] = a1;
  *(_DWORD *)(a1 + 476) = 43950354;
  STACK[0x3F0] = STACK[0x510];
  unint64_t v6 = STACK[0x5C0];
  int v7 = (char *)&a4 + STACK[0x5C0] - 0x74AC42827A6CFE95;
  STACK[0x398] = STACK[0x5C0];
  STACK[0x390] = v6 + ((a3 + 1723) ^ 0x755);
  STACK[0x408] = (unint64_t)v7;
  STACK[0x290] = (unint64_t)(v7 + 392);
  STACK[0x200] = a2;
  STACK[0x3A0] = a2;
  JUMPOUT(0x1DA724240);
}

uint64_t sub_1DA724368@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, char a10)
{
  a10 = (-125 * ((2 * (&a9 & 0xF0) - &a9 + 14) ^ 0x73)) ^ 0x7F;
  a9 = (a1 + 780) ^ (460628867 * ((2 * (&a9 & 0x7CF621F0) - &a9 - 2096505330) ^ 0xCF9F5C73));
  (*(void (**)(unsigned int *))(v10 + 8 * (a1 + 966)))(&a9);
  return sub_1DA70F414();
}

uint64_t sub_1DA7243DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (STACK[0x550] != 0)) ^ (v0 + 1357))))();
}

uint64_t sub_1DA724404(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F34B1C00
                                            - 8
                                            + 8 * ((111 * (*(_DWORD *)(a2 + 4) == 826018288)) ^ 0x135u)))(4294925278);
}

uint64_t sub_1DA724448@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *(_DWORD *)(v47 - 144) = v46;
  *(void *)(v47 - 120) = v39 - 7;
  *(void *)(v47 - 12_Block_object_dispose(&STACK[0x360], 8) = a5 - 7;
  *(_DWORD *)(v47 - 152) = v46 & 0xFFFFFFF8;
  *(_DWORD *)(v47 - 136) = 8 - (v46 & 0xFFFFFFF8);
  int v48 = -a4;
  char v49 = v45 + a1 + a2;
  uint64_t v50 = (a1 + a2 + a3 + v48);
  v52.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a2 + (_BYTE)a3 + (_BYTE)v48) & 0xF;
  v52.val[0].i64[1] = (v43 + (_BYTE)v48 + (((_BYTE)v44 + 42) & 0xFD ^ 3)) & 0xF;
  v52.val[1].i64[0] = (v49 + 13 + (_BYTE)v48) & 0xF;
  v52.val[1].i64[1] = (v49 + 12 + (_BYTE)v48) & 0xF;
  v52.val[2].i64[0] = (v49 + 11 + (_BYTE)v48) & 0xF;
  v52.val[2].i64[1] = (v49 + 10 + (_BYTE)v48) & 0xF;
  v52.val[3].i64[0] = (v49 + 9 + (_BYTE)v48) & 0xF;
  v52.val[3].i64[1] = (v49 + 8 + (_BYTE)v48) & 0xF;
  *(int8x8_t *)(*(void *)(v47 - 128) + v50) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v47 - 120) + v50), *(int8x8_t *)(v41 + (v50 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v40 + (v50 & 0xF) - 7), *(int8x8_t *)(v42 + (v50 & 0xF) - 7)))), (int8x8_t)0x5F5F5F5F5F5F5F5FLL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v52, (int8x16_t)xmmword_1DA75DF10), (int8x8_t)0x6161616161616161)));
  return (*(uint64_t (**)(__n128))(a39
                                           + 8
                                           * (((*(_DWORD *)(v47 - 136) == v48) | (2 * (*(_DWORD *)(v47 - 136) == v48))) ^ v44)))((__n128)xmmword_1DA75DF10);
}

uint64_t sub_1DA7245B0@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((101
                                              * (a3 - a1 - 1452 < ((a2 - 403566190) & 0x180DE9D2 ^ ((unint64_t)(a2 ^ 0x3EEu)
                                                                                                  - 1041)))) ^ a2)))(v3);
}

uint64_t sub_1DA724604@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  STACK[0x518] = *(void *)(v70 + 8 * a2);
  STACK[0x648] = v69;
  STACK[0x650] = v67;
  unint64_t v61 = STACK[0x5C0];
  uint64_t v62 = (char *)&a3 + STACK[0x5C0] - 0x74AC42827A6CFE95;
  STACK[0x658] = (unint64_t)v62;
  STACK[0x5C0] = v61 + 320;
  LODWORD(STACK[0x5B4]) = *(_DWORD *)(v69 - 0x4696E7753303C8EALL);
  LODWORD(STACK[0x594]) = *(_DWORD *)(v69 - 0x4696E7753303C8E6);
  LODWORD(STACK[0x604]) = *(_DWORD *)(v69 - 0x4696E7753303C8E2);
  LODWORD(STACK[0x55C]) = *(_DWORD *)(v69 - 0x4696E7753303C8DELL);
  int v63 = *(unsigned __int8 *)(v69 - 0x4696E7753303C8D2) ^ 0x70;
  if (v63 == 2)
  {
    LODWORD(STACK[0x4C0]) = *(_DWORD *)(v69 - 0x4696E7753303C8DALL);
    JUMPOUT(0x1DA70D004);
  }
  if (v63 != 1) {
    JUMPOUT(0x1DA70D04CLL);
  }
  LODWORD(STACK[0x534]) = v68;
  BOOL v65 = v67 < a61 + v61 && (unint64_t)v62 < v67 + 64;
  return (*(uint64_t (**)(void))(v70 + 8 * (((a1 + 404 + a1 + 364 - 1086) * v65) ^ (a1 + 1365))))();
}

uint64_t sub_1DA72460C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11
                                                              + 8
                                                              * ((((a5 + 1 + v10) < 0x50) * a7) ^ v9)))(v7, a3, v8);
}

void sub_1DA7246C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  uint64_t v2 = (char *)*(&off_1F34B17C0 + v1 - 336) - 8;
  uint64_t v3 = *(void *)&v2[8
                    * ((55
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * v1 + 12536])(32, 0x101004023FF3BD5) != 0)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA724768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((a5 - 315687743) & 0x12D102FF ^ 0x1741240A) + *(_DWORD *)(a2 + 4);
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

void sub_1DA7247B8()
{
}

uint64_t sub_1DA7247C4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v1 + 8 * ((v2 + 1) ^ 0x2F4)) == 0) * ((v2 ^ 0x685) + 423)) ^ (v2 + 1))))();
}

void sub_1DA724804()
{
}

uint64_t sub_1DA724820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v14 = *(unsigned char *)(a7 + ((v9 + v11) & v12 ^ (v10 - 39)) + v7);
  *(unsigned char *)(a4 + v_Block_object_dispose(&STACK[0x360], 8) = v14 - ((2 * v14) & 0xBF) + 95;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1448 * (v8 == 63)) ^ v9)))();
}

uint64_t sub_1DA724878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v6 = v2;
  uint64_t v7 = v1;
  unsigned int v8 = (v3 + 1319) ^ (460628867
                    * (((&v5 ^ 0x7470E57E)
                      + 2038877446
                      - 2 * ((&v5 ^ 0x7470E57E) & 0x7986CD06)) ^ 0x4160AA05));
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x5A7)))(&v5);
}

void sub_1DA7248EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~a1 | 0xAAB70323))) ^ 0xC7431B2A));
  __asm { BRAA            X15, X17 }
}

_DWORD *sub_1DA724A10@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_1DA724A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DA724A90(a1, 3801072839, 493894877, a4, a5, 0xACFB31B60DD9FD5DLL, 1212, 79);
}

uint64_t sub_1DA724A90(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(unsigned __int8 *)(v6 + v9 + a6) == *(unsigned __int8 *)(v7 + v9 + a6))
                                * (((v8 + a3) & (a2 + 56)) + ((v8 + a3 + a2) | 0x10) - 1932)) ^ v8)))();
}

uint64_t sub_1DA724AD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, char a4)
{
  int v8 = v5 ^ 0xE3;
  (*(void (**)(void, uint64_t, void))(v6 + 8 * (v5 ^ 0xDF7)))(**(unsigned int **)(a2 + 8 * (v5 & 0x5148327D)), a1, (v5 ^ 0xE3u) + v4 + *(_DWORD *)(v7 - 0x68A89052B2EA55B8));
  unint64_t v9 = ((unint64_t)&a4 ^ 0x2D0FCDE8FF7FC7DFLL)
     - 0x20030800205100DFLL
     + ((2 * (void)&a4) & 0x5A1F9BD1FEFF8FB0);
  *(unsigned char *)(v7 - 0x68A89052B2EA55A1) = ((-17 * (v8 ^ 0x3F)) ^ v9 ^ 0x64) * (v9 + 17);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * v8))(v7 - 0x68A89052B2EA55C0);
}

void sub_1DA724BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v15 - 120) = v12;
  *(_DWORD *)(v15 - 112) = v14 + 1178560073 * ((v15 - 325185722 - 2 * ((v15 - 120) & 0xEC9E0FBE)) ^ 0x4109331B) + 669;
  *(void *)(v15 - 104) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 ^ 0x73B)))(v15 - 120);
  JUMPOUT(0x1DA724C48);
}

uint64_t sub_1DA724C84(uint64_t a1, uint64_t a2)
{
  int v5 = v3 + 543;
  uint64_t v6 = 13 * ((v3 + 543) ^ 0x375u);
  uint64_t v7 = v2;
  unint64_t v8 = (((v5 ^ 0x375u) + 815) ^ (unint64_t)(a2 + 179)) + v2;
  if (v8 <= 0x38) {
    unint64_t v8 = 56;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((126 * (v8 - v7 + 229870105 >= v6 - 863)) ^ v5)))();
}

void sub_1DA724D04()
{
}

uint64_t sub_1DA724D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x11127EB20C1B74FELL) + 4 * (v7 + v5)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * ((106 * ((v6 ^ 0x6CB ^ (v5 + 14)) + v7 >= 0)) ^ v6)))();
}

uint64_t sub_1DA724D74@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3)) = *(_DWORD *)(v2 - 3 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 4) * (a1 ^ 0xAED)) ^ ((a1 ^ 0xA5E) + 915))))(a1 ^ 0x94Au);
}

uint64_t sub_1DA724DCC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((692
                                * ((((*(unsigned __int8 *)(v2 + 2) - 72) << (((v3 + 35) | 0xC8) ^ 0xCD)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0 + (v3 ^ 0x25A) - 955)) ^ v3)))();
}

uint64_t sub_1DA724E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((LODWORD(STACK[0x248]) ^ 0xE5) * (v5 == v7)) ^ (a5 - 201))))();
}

void sub_1DA724E5C()
{
}

uint64_t sub_1DA724E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15 = v12 - 3;
  *(void *)(a10 + v11) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((v15 + 121) ^ (((v15 ^ 0x544) & v10) == 8)) & 1 | (2 * (((v15 + 121) ^ (((v15 ^ 0x544) & v10) == 8)) & 1)) | v15)))();
}

uint64_t sub_1DA724ED8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v0 == 0x235) * (((((v0 + 1172) ^ 0x365) + 921471474) & 0xC913746F) - 1082)) ^ (v0 + 1172) ^ 0x365)))();
}

void sub_1DA724F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = a9[3] ^ 0x5F;
  int v13 = ((*a9 ^ 0x5F) << 24) | ((a9[1] ^ 0x5F) << 16) | ((a9[2] ^ 0x5F) << 8) | v12;
  *(_DWORD *)(*(void *)(v10 + 8) - 0x5F8F23596C339F67) = v13
                                                           + v11
                                                           - 2 * (v13 & ((v9 + 198) ^ (v11 + 874)) ^ v12 & 2);
  JUMPOUT(0x1DA71EA94);
}

uint64_t sub_1DA724FA8@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v9 = v7 + a1;
  uint64_t v10 = v9 + v3;
  uint64_t v11 = v9 + a3;
  unint64_t v12 = v10 - v11;
  uint64_t v13 = (((a2 - 131) | 0x780) ^ 0x7DC) & v7;
  uint64_t v14 = v5 - v11;
  unint64_t v15 = (v13 | v4) - v11;
  unint64_t v16 = (v13 | v6) - v11;
  BOOL v20 = v12 < 0x10 || (unint64_t)(v14 + v13) < 0x10 || v15 < 0x10 || v16 < 0x10;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v20 * (((a2 - 214) | 0x206) - 471)) ^ a2)))();
}

uint64_t sub_1DA725020()
{
  ++*(_DWORD *)(v2 + 52);
  unint64_t v5 = (v0 ^ 0xFFFFFFFFFFFFF247) + v1;
  STACK[0x408] = v5;
  STACK[0x5C0] = v5;
  LODWORD(STACK[0x530]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((22 * (((v0 + 24) ^ (STACK[0x608] == 0)) & 1)) ^ v0)))();
}

uint64_t sub_1DA725088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (v6 ^ (2
                                                                                       * (v5 != (((v6 + 395) | 0x128) ^ 0x5FF))))))(a1, a2, a3, a4, a5);
}

uint64_t sub_1DA7250BC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((2 * (((v3 + 134226693) | 0x55950002) ^ (v5 + 461))) ^ 0x1B1)
                                * (v1 - v2 - 864711019 == v0 - 1228673505)) | v3)))();
}

void sub_1DA725128()
{
}

uint64_t sub_1DA725150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * ((((v6 - 356177656) < 0x38) * (a6 + v7 + 796)) ^ (a6 + v7 + 175))))(a1, -356177656);
}

uint64_t sub_1DA72518C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v7 = (int8x16_t *)((char *)&STACK[0x680] + v4 - 0x74AC42827A6D0515);
  v7[-12] = veorq_s8(*v5, (int8x16_t)xmmword_1DA75DF50);
  STACK[0x610] = (a4 + 33) + STACK[0x610] - 1272;
  STACK[0x618] = a1;
  STACK[0x620] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * ((495 * (((&v7[-12] == (int8x16_t *)a1) ^ a4) & 1)) ^ a4)))(a1, 113, a2, 237, 44, a3, 230);
}

uint64_t sub_1DA725214(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v25 = v17 - 16;
  uint64_t v26 = v25 & 0xF;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v21, a5).u64[0];
  int8x16_t v29 = vrev64q_s8(vmulq_s8(v28, a6));
  *(int8x16_t *)(a12 + v25) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v26 - 15), *(int8x16_t *)(a12 + v25)), *(int8x16_t *)(v26 + v14 - 11)), *(int8x16_t *)(a14 + v26 + v15 - 321)), vextq_s8(v29, v29, 8uLL));
  return (*(uint64_t (**)(void))(v20 + 8 * (((v18 == 16) * v19) ^ a11)))();
}

uint64_t sub_1DA725220@<X0>(unsigned int a1@<W8>, double a2@<D0>)
{
  *(double *)(v5 + a1) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ v2)))();
}

void sub_1DA725248()
{
}

uint64_t sub_1DA725250@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unsigned int v48 = v46 + a2 + ((v44 - 126) | 9);
  int v49 = *(_DWORD *)(&a31 + (v48 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v4_Block_object_dispose(&STACK[0x360], 8) = (HIBYTE(v49) ^ 0xB6) - ((2 * (HIBYTE(v49) ^ 0xB6)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v46 + a2 + 64)) = (BYTE2(v49) ^ 0x79) - ((2 * (BYTE2(v49) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v46 + a2 + 65)) = (BYTE1(v49) ^ 0xA3) + (~(2 * (BYTE1(v49) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a1 + (v46 + a2 + 66)) = v49 ^ 0x61;
  BOOL v50 = v46 + 151196289 < (a43 - 947085226);
  if (v46 + 151196289 < v43 != a43 - 947085226 < v43) {
    BOOL v50 = a43 - 947085226 < v43;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * ((!v50 * v45) ^ v44)))();
}

uint64_t sub_1DA72533C()
{
  int v3 = (char *)&STACK[0x680] + STACK[0x408] + (((v0 ^ 0x1BB) + 715592910) & 0xD558EDFF ^ 0x8B53BD7D8592FE2CLL);
  LODWORD(STACK[0x4F8]) = v2;
  STACK[0x490] = (unint64_t)v3;
  uint64_t v4 = *(uint64_t (**)(void))(v1
                           + 8
                           * ((7
                             * ((((v0 ^ 0xBB) + 14) ^ (*(_DWORD *)*(&off_1F34B17C0 + (v0 ^ 0x1BB) - 363) == 0)) & 1)) ^ v0 ^ 0x1BB));
  STACK[0x2F0] = (unint64_t)*(&off_1F34B17C0 + (v0 ^ 0x1E));
  return v4();
}

uint64_t sub_1DA725348@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x11127EB20C1B7502);
  int v5 = 696851755 - (v3 - 1424 + v4);
  if (v3 - 1424 + v4 - 696851755 >= 0) {
    int v5 = v3 - 1424 + v4 - 696851755;
  }
  *(_DWORD *)(v1 - 0x11127EB20C1B7502) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (v3 | (8 * ((v5 ^ 0x707FF2BD) - 1342234676 + ((2 * v5) & 0xE0FFE57A) != 545198729)))))();
}

uint64_t sub_1DA7253CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v14 + v15) ^= *(unsigned char *)(v12 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v11 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0x5F;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1144 * (a6 - 1 == v8)) ^ (a8 - 546))))();
}

uint64_t sub_1DA725434(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x765) + a1 - 618 - 1265) * (v1 != v2)) ^ a1)))();
}

void sub_1DA725494()
{
}

uint64_t sub_1DA7254D4@<X0>(int a1@<W4>, unsigned int a2@<W5>, unint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int8x16_t a10@<Q7>)
{
  uint64_t v18 = 4 * a5;
  uint64_t v19 = v13 + 4 * a5;
  uint64_t v20 = a5 + 4;
  a7.i32[0] = *(_DWORD *)(v13 + (v18 | 4));
  a7.i32[1] = *(_DWORD *)(v13 + (v18 | 8));
  a7.i32[2] = *(_DWORD *)(v13 + (v18 | 0xC));
  int8x16_t v21 = vextq_s8(a6, a7, 0xCuLL);
  int8x16_t v22 = a7;
  v22.i32[3] = *(_DWORD *)(v13 + 4 * v20);
  int8x16_t v23 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v22, a9), vandq_s8(v21, a8)), 1uLL);
  int32x4_t v24 = (int32x4_t)veorq_s8(v23, a10);
  int32x4_t v25 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v24, v14), vandq_s8(v23, v15));
  int32x4_t v26 = vsubq_s32(v24, vaddq_s32(v25, v25));
  v24.i32[0] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + (v18 | 4)) & 1));
  v24.i32[1] = *(_DWORD *)(v12 + 4 * (*(unsigned int *)(v13 + (v18 | 8)) & ((v10 + a1) & a2 ^ a3)));
  v24.i32[2] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + (v18 | 0xC)) & 1));
  v24.i32[3] = *(_DWORD *)(v12 + 4 * (v22.i8[12] & 1));
  *(int8x16_t *)uint64_t v19 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v19 + 1588), (int8x16_t)v24), v17), (int8x16_t)vaddq_s32(v26, v16));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v20 == 224) * a4) ^ v10)))();
}

void sub_1DA7256C0(uint64_t a1)
{
  int v1 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  __asm { BRAA            X14, X17 }
}

void sub_1DA72575C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (235795823 * (((a1 | 0x10ED3232) - a1 + (a1 & 0xEF12CDCD)) ^ 0x84407B6B));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1DA725858@<X0>(uint64_t a1@<X8>)
{
  int v8 = *(unsigned __int8 *)(v1 + (v3 + v4)) ^ v5;
  int v9 = ((*(unsigned __int8 *)(v1 + v3 + v4 + ((v2 - 624) | 0x104u) - 277) ^ v5) << 16) | ((*(unsigned __int8 *)(v1 + (v3 + v4 + 3)) ^ v5) << 24) | v8 | ((*(unsigned __int8 *)(v1 + (v3 + v4 + 1)) ^ v5) << 8);
  *(_DWORD *)(a1 + ((v3 + v4) & 0xFFFFFFFC)) = v9 + v7 - 2 * (v9 & (v7 + 2) ^ v8 & 2);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((8 * ((v3 + 4 + v4) > 0x3F)) | (32 * ((v3 + 4 + v4) > 0x3F)) | v2)))();
}

uint64_t sub_1DA7258F8(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  unsigned int v8 = a2 + ((a3 - 1761741192) & 0xFFFBE8F5) - 91639555;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((a5 - v5 - v6 + v8 > 0xE) * ((a3 - 1761741192) ^ 0x96FDF681)) ^ a3)))();
}

uint64_t sub_1DA725984()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (int)(((((9 * (v3 ^ 0x578) - 255) & v1) == 0)
                                                  * (((v3 + 90816658) & 0xFA963FBF) - 831)) ^ v3)))((v0 - v2));
}

uint64_t sub_1DA7259D0()
{
  uint64_t v3 = v0;
  unint64_t v4 = ((v1 - 794) | 0xF2u) + (unint64_t)v0 + ((v1 - 1074009116) & 0xD6FDED45 ^ 0xFFFFFFFF6DD4A062);
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((53 * (v4 - v3 + 80919271 < 8)) ^ v1)))();
}

uint64_t sub_1DA725A48@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3)
{
  *(void *)(a3 + a2 + 3 * (v4 ^ 0x691u)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & 0x38) == 8) * a1) ^ v4 ^ 0x26E)))();
}

uint64_t sub_1DA725A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v13 = *(_DWORD *)(v12 - 220 + ((v10 + v7) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v10 + v7)) = v13 ^ 0x61;
  *(unsigned char *)(a2 + (v10 + v7 + 1)) = (BYTE1(v13) ^ 0xA3)
                                                + ((v9 - a7 - 56) ^ 0x25)
                                                + (~(2 * (BYTE1(v13) ^ 0xA3)) | 0x41);
  *(unsigned char *)(a2 + (v10 + v7 + 2)) = (BYTE2(v13) ^ 0x79) - ((2 * (BYTE2(v13) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a2 + (v10 + v7 + 3)) = (HIBYTE(v13) ^ 0xB6) - ((2 * (HIBYTE(v13) ^ 0xB6)) & 0xBF) + 95;
  unsigned int v14 = *(_DWORD *)(v12 - 128) - 478341984;
  BOOL v15 = v14 < v8;
  BOOL v16 = v10 - 415428441 < v14;
  if (v10 - 415428441 < v8 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1496 * v16) ^ v9)))();
}

uint64_t sub_1DA725B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, unsigned int a14, uint64_t a15, int a16)
{
  int v24 = v21 ^ 0x28;
  char v25 = *(unsigned char *)(v16 + 48) + v20;
  unsigned int v26 = 1759421093 * ((~&a11 & 0x1263E600 | &a11 & 0xED9C19FF) ^ 0xA11E5654);
  a16 = v24 - v26 + 1191;
  a12 = &STACK[0x611E3ECE41E918DC];
  a13 = (((v24 ^ 0xED) + 105) * v25 + 35) ^ (-91 * (&a11 ^ 0x54));
  a15 = v19;
  a14 = v26 + (v22 ^ 0xEFFBC37F) + ((((v24 - 45) | 5) ^ 0xDFF787EB) & v23) + 1610481372;
  uint64_t v27 = (*(uint64_t (**)(int *))(v18 + 8 * (v24 ^ 0x97A)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1324 * (a11 == v17)) ^ v24)))(v27);
}

uint64_t sub_1DA725C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return (*(uint64_t (**)(void))(v36 + 8 * ((27 * (v34 > (a34 & 0x67D2877Eu) + 1501366607)) ^ (v35 - 1101969482))))();
}

uint64_t sub_1DA725CFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x388] = v5;
  LODWORD(STACK[0x530]) = a4 + 46;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((v4 - 62) ^ (STACK[0x388] == 0)) & 1) == 0) * (v4 - 27)) ^ (v4 + 1493))))();
}

uint64_t sub_1DA725D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unsigned int v34 = (v29 + 1144748158) & 0xBBC485FE;
  int v35 = ((v33 + 1047381665 - 2 * ((v33 - 144) & 0x3E6DC731)) ^ 0x5399DF38) * v30;
  *(_DWORD *)(v33 - 12_Block_object_dispose(&STACK[0x360], 8) = (v34 ^ (v32 - 1201)) + v28 - v35;
  *(_DWORD *)(v33 - 140) = (v34 - 527) ^ v35;
  *(void *)(v33 - 136) = v31;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (int)(v34 ^ 0x348)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (int)(((*(_DWORD *)(v33 - 144) == 1578365111)
                                                   * (((4 * v34) ^ 0x1364) - 321)) ^ v34)))(v36);
}

uint64_t sub_1DA725DD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return sub_1DA7072DC(v5 == v6 + a3 + a5 - 874);
}

void sub_1DA725DF4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA725E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a11 == v11) * (((((v13 - 588) | 0x125) + 1521) | 0x21) ^ 0x75D)) ^ ((v13 - 588) | 0x125))))();
}

uint64_t sub_1DA725E94()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((141 * (((v1 ^ 0x2FD ^ (v2 + v0 + 17 * (v1 ^ 0x237u) < 0x7FFFFFFF)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1DA725EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(&a27 + v28 + a2) = 95;
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * ((5 * (v27 ^ 0x5D)) | (8
                                                     * ((((unint64_t)(v28 + 1 + a2) < 0x40) ^ (5 * (v27 ^ 0x5D) - 24)) & 1)))))();
}

uint64_t sub_1DA725F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (v15 - 1051));
  uint64_t v23 = *v21;
  unsigned int v24 = a2 + 823850539;
  *(unsigned char *)(*v21 + v24) = (v17 ^ 0xBC) - ((2 * (v17 ^ 0xBC)) & 0xBF) + 95;
  *(unsigned char *)(v23 + v24 + 1) = -92;
  *(unsigned char *)(v23 + (a2 + 823850541)) = (v20 ^ 0x7F) + (v16 | ~(2 * (v20 ^ 0x7F))) + 96;
  *(unsigned char *)(v23 + (a2 + 823850542)) = v18 ^ 0xBD;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

void sub_1DA725F5C(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = 235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = (*(unsigned char *)(a1 + 32) ^ v1);
  int v4 = (char *)*(&off_1F34B17C0 + v2 - 1722) - 8;
  (*(void (**)(char *, uint64_t (*)()))&v4[8 * (v2 ^ 0x8A)])((char *)*(&off_1F34B17C0 + v2 - 1799) - 8, sub_1DA716FD8);
  uint64_t v5 = *(void *)((char *)*(&off_1F34B17C0 + (v2 ^ 0x713)) - 4);
  unsigned int v6 = (1178560073 * ((1571867190 - (&v6 | 0x5DB0CA36) + (&v6 | 0xA24F35C9)) ^ 0xFD8096C)) ^ (v2 - 1258);
  uint64_t v7 = v5;
  (*(void (**)(unsigned int *))&v4[8 * v2 + 1648])(&v6);
  __asm { BRAA            X9, X17 }
}

void sub_1DA7260DC()
{
  *(_DWORD *)(v0 + 16) = 2058996701;
}

void sub_1DA726128(uint64_t a1, int a2)
{
  _DWORD *v2 = a2;
}

uint64_t sub_1DA726130(uint64_t a1)
{
  int v1 = 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x11127EB20C1B7502);
  unsigned int v6 = v4 - 696851460;
  BOOL v5 = v4 - 696851460 < 0;
  unsigned int v7 = 696851460 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v2 - 551) + ((1699 * (v3 >> 5 < v7)) ^ v2) - 1))();
}

uint64_t sub_1DA7261EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,int a42)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v42
  }
                                                       + 8
                                                       * ((77
                                                         * ((((3 * (v43 ^ (v43 + 164))) ^ (a42 == 1133293858)) & 1) == 0)) ^ (a6 + v43 + 1151))))(a10, 3071850585);
  if (a18 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42
  }
                                                                + 8
                                                                * (int)(((a42 == 1133293858)
                                                                       * ((v43 - 1702388826) & 0xAE5FADBD ^ 0x1EC)) ^ (a6 + v43 + 443))))(a1, 3071850585, a10);
  uint64_t v45 = (-1223115579 - v43);
  unint64_t v46 = ((unint64_t)&a25 ^ 0xDFE6FFDF56F47AC3 ^ v45)
      + ((2 * (void)&a25) & 0xBFCDFFBEADE8FD50)
      + 0x7D5DBFF5EF2FDE51;
  a41 = (v46 ^ 0xBA) * (v46 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)v45))(a1, 3071850585, a10);
}

void sub_1DA726388(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v17 - 144) = a8;
  *(void *)(v17 - 136) = a16;
  *(_DWORD *)(v17 - 104) = a1
                         + 628203409 * ((((v17 - 144) | 0x1B38E9DB) + (~(v17 - 144) | 0xE4C71624)) ^ 0x99B0E5E9)
                         + 1530;
  *(void *)(v17 - 120) = a8;
  *(void *)(v17 - 112) = a5;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a17;
  JUMPOUT(0x1DA7263F8);
}

uint64_t sub_1DA726404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,long long a51)
{
  unint64_t v55 = *(void *)(a18 + 48);
  memset(&a51, 95, sizeof(a51));
  int v56 = 235795823 * ((((2 * (v54 - 168)) | 0x6194EA74) - (v54 - 168) - 818574650) ^ 0xA4673C63);
  STACK[0x360] = (unint64_t)&STACK[0x1B21A8FA2BFEFD41];
  STACK[0x338] = (unint64_t)&a49;
  STACK[0x348] = v54 - 188;
  STACK[0x350] = v55;
  *(_DWORD *)(v54 - 160) = v56 + 779007285;
  *(_DWORD *)(v54 - 132) = (v51 + 1938) ^ v56;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v51 ^ 0x84F)))(v54 - 168);
  return (*(uint64_t (**)(uint64_t))(v52
                                            + 8
                                            * (((*(_DWORD *)(v54 - 136) == (((v51 - 41) | 0x27) ^ (v53 + 5)))
                                              * (v51 ^ 0x17D)) ^ v51)))(v57);
}

uint64_t sub_1DA726520(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x360], 8) = 74;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1DA726540@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v16 = v9 + 4;
  uint64_t v17 = (a3 - 896) | 8u;
  a5.i64[0] = *(void *)(v10 + 4);
  a5.i32[2] = *(_DWORD *)(v13 + 4 * (v16 + (v17 ^ a1)));
  int8x16_t v18 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v19 = a5;
  v19.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v19, a8), vandq_s8(v18, a7)), 1uLL), a9);
  v21.i32[0] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v10 + 4) & 1));
  v21.i32[1] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v10 + 8) & 1));
  v21.i32[2] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 4 * (v16 + (v17 ^ a1))) & 1));
  v21.i32[3] = *(_DWORD *)(v12 + 4 * (v19.i8[12] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 908), v21), v15), (int8x16_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), a6)), v14));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v16 == 392) * a2) ^ a3)))();
}

uint64_t sub_1DA72654C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 == 0) ^ (v0 - 58)) & 1) * (v0 - 1417)) | (v0 - 982))))();
}

uint64_t sub_1DA726580()
{
  BOOL v6 = v0 == v4 && v2 != (v1 ^ 0x4D3564FF);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * (v1 ^ 0x5AC)) ^ v1)))();
}

void sub_1DA726620()
{
  int v2 = 628203409 * ((~((v1 - 192) | 0xDBC4E177) + ((v1 - 192) & 0xDBC4E177)) ^ 0xA6B312BB);
  *(void *)(v1 - 184) = STACK[0x588];
  *(_DWORD *)(v1 - 18_Block_object_dispose(&STACK[0x360], 8) = 2067890216 - v2;
  *(_DWORD *)(v1 - 176) = v0 + 1172345424 + v2 + 8;
  JUMPOUT(0x1DA717C30);
}

void sub_1DA7266AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) - 628203409 * (a1 ^ 0x82880C33);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1DA7267A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + v7) = *(void *)(v8 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 == 0) ^ a5)))();
}

uint64_t sub_1DA7267CC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 - 418606958)) = *(unsigned char *)(a2 + (v4 - 418606958));
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 - 1 != a3) * (((a1 - 1387445617) & 0x52B2BFDB) - 706)) ^ (a1 + 485))))();
}

uint64_t sub_1DA726820(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((453 * (v2 ^ 0x388) + 1061) ^ v2 ^ 0x219)))(a1, 1906244675);
}

uint64_t sub_1DA726898(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 75;
  }
  else {
    char v2 = 74;
  }
  *(unsigned char *)(a1 + 8_Block_object_dispose(&STACK[0x360], 8) = v2;
  return 0;
}

uint64_t sub_1DA7268BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  HIDWORD(v26) = v22 & (2 * a8);
  LODWORD(v26) = v19 + v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v24 + 8 * ((990 * (v20 == ((v21 + 97165827) & 0xFA355DEE ^ 0x5E2))) ^ v21)))(a1, a2, a19, a4, a5, a6, a7, a8, a9, v26, *(void *)(a1 + 24));
}

uint64_t sub_1DA72692C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x68A89052B2EA55B0) + 956633839;
  unsigned int v4 = (((v1 - 1772) | 0xA0) ^ 0x31D15CA0) + *(_DWORD *)(v2 - 0x68A89052B2EA55B4);
  int v5 = (v3 < 0x81CB1E9B) ^ (v4 < 0x81CB1E9B);
  BOOL v6 = v3 > v4;
  if (v5) {
    BOOL v6 = v3 < 0x81CB1E9B;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((73 * ((((v1 + 436188354) ^ v6) & 1) == 0)) ^ (v1 - 680))))();
}

void sub_1DA7269E0(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x11127EB20C1B74FELL) = (3 * (v3 ^ 0x217) + 1003587604) ^ (v2 + 850264557);
  *(_DWORD *)(v1 - 0x11127EB20C1B7502) = a1 + 1;
}

uint64_t sub_1DA726A30@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((((v2 + 146999167) | 0x11107410) - 951803165) ^ a2) == v3 - 1239661281)
                                * (a1 + ((v2 + 419579783) | 0xD13408) + 1029)) ^ v2)))();
}

void sub_1DA726AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v14 = 1755732067 * ((((v13 - 144) | 0xA3F7C6DB) - (v13 - 144) + ((v13 - 144) & 0x5C083920)) ^ 0x7D317B00);
  *(_DWORD *)(v13 - 116) = v9 - v14 + 497707652 + v12 - 580;
  *(_DWORD *)(v13 - 144) = (v12 + 983) ^ v14;
  *(void *)(v13 - 136) = a9;
  *(void *)(v13 - 12_Block_object_dispose(&STACK[0x360], 8) = v11;
  (*(void (**)(uint64_t))(v10 + 8 * (v12 + 1370)))(v13 - 144);
  JUMPOUT(0x1DA726B28);
}

uint64_t sub_1DA726B7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10
                                                             + 8
                                                             * ((15 * ((v9 & 0x18) == ((a7 - v7 - 145) ^ v8 ^ 0xB6))) ^ a7)))(a1, a2, (a2 - a4));
}

uint64_t sub_1DA726BB8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned int a42)
{
  unsigned int v47 = a2 ^ ((v46[623] & 0x80000000 | *v46 & 0x7FFFFFFE) >> 1);
  v46[623] = v46[396] ^ a4 ^ *(_DWORD *)(v44 + 4 * (*v46 & 1)) ^ (v47 + v45 - ((2 * v47) & 0xCDC5DB64));
  return (*(uint64_t (**)(void))(v43 + 8 * ((41 * (a42 > 0x26F)) ^ v42)))();
}

uint64_t sub_1DA726C24()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((54 * (v0 > (((STACK[0x420] - 215) | 0x93) ^ 0x2B43034F))) ^ (STACK[0x420] + 387))))();
}

uint64_t sub_1DA726C6C(uint64_t a1, int a2)
{
  int v6 = 55 * (v2 ^ 0x2A3);
  int v7 = v4 + v3;
  unsigned int v8 = v7 + ((v6 - 588) ^ 0x4B0225A);
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  BOOL v9 = !__CFADD__(v7 + 78651443, a2 + v8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * (v6 - 1203)) ^ v6)))();
}

void sub_1DA726CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v25 - 120) = a15;
  *(void *)(v25 - 112) = a19;
  *(void *)(v25 - 144) = a15;
  *(void *)(v25 - 136) = a23;
  *(void *)(v25 - 12_Block_object_dispose(&STACK[0x360], 8) = a24;
  *(_DWORD *)(v25 - 104) = v24
                         + 628203409
                         * ((((v25 - 144) | 0xE61CAE74) - (v25 - 144) + ((v25 - 144) & 0x19E35188)) ^ 0x6494A247)
                         + 772;
  JUMPOUT(0x1DA726D40);
}

uint64_t sub_1DA726DBC()
{
  BOOL v4 = v2 - 1064776489 > (v0 - 1344073173);
  if ((v0 - 1344073173) < 0x5815798 != v2 - 1064776489 < ((v3 - 2111353706) & 0x7DD8B3BD ^ 0x5815631u)) {
    BOOL v4 = v2 - 1064776489 < ((v3 - 2111353706) & 0x7DD8B3BD ^ 0x5815631u);
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((221 * ((v3 ^ v4) & 1)) ^ v3)))();
}

uint64_t sub_1DA726E48()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ 0x229) + 527) ^ (8 * (v2 ^ 0x229)) ^ 0x5CA) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1DA726E7C(int a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = a3 + a4 + (((a5 + 753) | 9) ^ (a1 + 1065));
  unint64_t v11 = v10 + v9 + 1;
  uint64_t v12 = v10 & (17 * (a5 ^ 0x150) - 1328);
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v7 + v13;
  ++v12;
  unint64_t v15 = v7 + v12;
  unint64_t v16 = v5 + v13;
  unint64_t v17 = v5 + v12;
  unint64_t v18 = v6 + v13;
  unint64_t v19 = v6 + v12;
  BOOL v21 = v15 > v9 && v14 < v11;
  if (v17 > v9 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > v9 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v8 + 8 * ((51 * (v24 ^ 1)) ^ a5)))();
}

uint64_t sub_1DA726F18@<X0>(int a1@<W8>)
{
  if ((a1 + 518512315) > 0x12 || ((1 << (a1 - 69)) & 0x4040D) == 0) {
    JUMPOUT(0x1DA71E720);
  }
  return sub_1DA726F4C();
}

uint64_t sub_1DA726F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((87
                                * (((v7 + 115) ^ ((v6 & 0xFFFFFFFFFFFFFFFLL) == ((6 * (v7 ^ 0x19D37E65u)) ^ 0xAELL))) & 1)) ^ (a6 + v7 + 762))))();
}

uint64_t sub_1DA726FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x3C909666FCA4338F];
  a15 = v17
      - 460628867
      * ((((&a13 | 0x79A029F4) ^ 0xFFFFFFFE) - (~&a13 | 0x865FD60B)) ^ 0xCAC95476)
      - 255;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 ^ 0xAF7u)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((a14 == v15) * (v17 + ((v17 - 1956082648) & 0x174E) - 1090)) ^ v17)))(v18);
}

void sub_1DA727070()
{
}

uint64_t sub_1DA7270A0(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = v4 - 848;
  unsigned __int8 v8 = v4 - 85;
  BOOL v10 = v3 == a3 || LODWORD(STACK[0x48C]) - v5 != 331120864;
  return (*(uint64_t (**)(void))(v6 + 8 * ((210 * ((v8 ^ v10) & 1)) ^ v7)))();
}

void sub_1DA7270E8()
{
}

void sub_1DA7270F4()
{
}

uint64_t sub_1DA727104()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1113
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ (v0 + ((v2 + 1284119247) & 0xB375E7FC) - 920)) == v0)) ^ v2)))();
}

uint64_t sub_1DA727158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, int a8)
{
  uint64_t v15 = ((v9 - 436) ^ ((v9 ^ a7) * a8) ^ v11) + v8;
  BOOL v17 = v10 == 4 || v15 == v13 + 200;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v17 * v12) ^ v9)))();
}

uint64_t sub_1DA727194(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((287 * ((a8 + 1 + v8) < 0x30)) ^ a1)))();
}

uint64_t sub_1DA72725C()
{
  uint64_t v3 = **(unsigned int **)(v1 + 992);
  unint64_t v4 = 235795823 * ((v2 - 0x17E1446124DB2337 - 2 * ((v2 - 144) & 0xE81EBB9EDB24DD59)) ^ 0xE0AE01604F899400);
  *(_DWORD *)(v2 - 140) = v4;
  *(_DWORD *)(v2 - 136) = 2104632390 - v4;
  *(_DWORD *)(v2 - 12_Block_object_dispose(&STACK[0x360], 8) = 1009202901 - v4;
  *(_DWORD *)(v2 - 104) = 1009202876 - v4;
  *(void *)(v2 - 120) = 1308924072 - v4;
  *(void *)(v2 - 112) = v3 - v4;
  *(_DWORD *)(v2 - 144) = v4 ^ 0x3C2736F4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v0 + 16680))(v2 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v2 - 132)))(v5);
}

void sub_1DA727510()
{
}

uint64_t sub_1DA727518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((v5 + 518512315) <= 0x12 && ((1 << (v5 - 69)) & 0x4040D) != 0) {
    __asm { BRAA            X11, X17 }
  }
  return a5 ^ 0x85469003;
}

uint64_t sub_1DA72759C(unsigned int a1, int a2)
{
  int v9 = a2 - 1;
  *(_DWORD *)(*v6 + 4 * (v9 + v2 + 1)) = v3;
  return (*(uint64_t (**)(void))(v8 + 8 * ((120 * (v9 + v2 < v4 + (v7 & a1) + 248)) ^ (v5 + 324))))();
}

uint64_t sub_1DA7275A4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((v1 - a1 < (unint64_t)(((v3 ^ 0x6A2) - 1958) | 0x106u) - 247)
                                              * (661 * (v3 ^ 0x117) - 1312)) ^ v3 ^ 0x6A2)))(v2);
}

uint64_t sub_1DA7275F4@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (a3 + a1 + 141)) = *(unsigned char *)(v4 + (a3 + a1 + 141));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 != a2) * v6) ^ (v5 + 484))))();
}

uint64_t sub_1DA727628@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 - 675827633);
  *(unsigned char *)(a3 + v9) = *(unsigned char *)(v3 + v9) ^ (a2 + 32) & 0xDF ^ *(unsigned char *)(v5 + (v9 & 0xF)) ^ *(unsigned char *)(v4 + (v9 & 0xF)) ^ *(unsigned char *)(v6 + (v9 & 0xF)) ^ (97 * (v9 & 0xF)) ^ 0x8C;
  return (*(uint64_t (**)(void))(v8 + 8 * ((2026 * (a1 - 1 == v7)) ^ (a2 - 1757))))();
}

uint64_t sub_1DA7276B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  BOOL v52 = (((v49 ^ 0x38 ^ (a6 + 96)) + (BYTE4(a25) & 0xBE) + 1) & 0xF) == 0
     && (v49 ^ 0x1AFF7438 ^ (a6 - 928)) + (HIDWORD(a25) & 0x35FEEBBE) != ((a6 - 1672708307) & 0x63B37BEF ^ 0x1AFF70D4 ^ (485 * ((a6 - 928) ^ 0x1E4)));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * (((4 * v52) | (8 * v52)) ^ ((int)a6 - 928))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1DA727740(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v6 = (v3 ^ 0x1C5) + a3 - 2092960402;
  BOOL v7 = v4 + 1870886204 < v6;
  if ((v4 + 1870886204) < 0xB47BFFFF != v6 < 0xB47BFFFF) {
    BOOL v7 = v6 < 0xB47BFFFF;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((!v7 * ((v3 ^ 0x7B) - 243)) ^ v3)))();
}

uint64_t sub_1DA7277B4()
{
  LODWORD(STACK[0x4F8]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(STACK[0x2C8] + 360) - 1227088735) < 0xFFFFFFFE)
                                * (((v0 - 1704) | 0x14) ^ 0x156)) ^ v0)))();
}

uint64_t sub_1DA7277FC@<X0>(int a1@<W0>, int32x4_t *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int32x4_t a51,int8x16_t a52)
{
  int8x16x4_t v80 = vld4q_s8(v52);
  v55.i64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v55.i64[1] = 0x5F5F5F5F5F5F5F5FLL;
  uint8x16_t v56 = (uint8x16_t)veorq_s8(v80.val[0], v55);
  uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
  int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
  int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
  uint16x8_t v60 = vmovl_high_u8(v56);
  int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
  int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
  uint8x16_t v63 = (uint8x16_t)veorq_s8(v80.val[1], v55);
  uint16x8_t v64 = vmovl_high_u8(v63);
  uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
  uint8x16_t v66 = (uint8x16_t)veorq_s8(v80.val[2], v55);
  _Q21 = (int8x16_t)vmovl_high_u8(v66);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
  int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v80.val[0] = veorq_s8(v80.val[3], v55);
  v80.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v80.val[0]);
  v80.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v80.val[1]);
  v80.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v80.val[0].i8);
  v80.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v80.val[0]);
  v80.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v80.val[0].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
  v80.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v80.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
  v80.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v80.val[1].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
  v80.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v80.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
  int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v80.val[0], a52), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v80.val[3], a52), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v80.val[1], a52), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v80.val[2], a52), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
  a2[2] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[1], vaddq_s32(v77, v77)), a51);
  a2[3] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[2], vaddq_s32(v78, v78)), a51);
  *a2 = vaddq_s32(vsubq_s32((int32x4_t)v80.val[0], vaddq_s32(v75, v75)), a51);
  a2[1] = vaddq_s32(vsubq_s32((int32x4_t)v80.val[3], vaddq_s32(v76, v76)), a51);
  return (*(uint64_t (**)(void))(v54 + 8 * ((19 * ((v53 + 929119496) > 0xF)) | ((a1 ^ 0x3BC) + 981))))();
}

uint64_t sub_1DA727A40(uint64_t a1, int a2)
{
  return sub_1DA727AD8(a1, a2 + ((v2 + 1917125314) & 0x8DBAFBFB) - 724656210, 2873460053, 1422827864, 1128, 890, 1990552718);
}

uint64_t sub_1DA727AD8(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v13 = v8 + a3 > a4 || v8 + a3 < a2;
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * (((a8 ^ v9) * v11) ^ a5)) ^ a8)))();
}

uint64_t sub_1DA727B14()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((38
                                * (((((v0 ^ 0x6D2) + 965687530) & 0xC670C74D ^ 0x345) & *(_DWORD *)(v2
                                                                                                  - 0x68A89052B2EA55ACLL)) != (((v0 ^ 0x6D2) + 965687530) ^ 0x398F3BF6))) ^ v0 ^ 0x6D2)))();
}

uint64_t sub_1DA727B84@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((38 * ((((v1 + 138) ^ 0x7C1 ^ (v2 == 1037212390)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1DA727BE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F34B1C00
                                            - 8
                                            + 8 * ((938 * (*(_DWORD *)(a2 + 4) == 826018288)) ^ 0x42Fu)))(4294925278);
}

uint64_t sub_1DA727C24()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 370) ^ 0x3E9 ^ (659 * (v0 ^ 0x52D))) * (v2 != v1)) ^ v0)))();
}

uint64_t sub_1DA727C78(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((v7 == a3) ^ (2 * (a6 - 34) + 1)) & 1 ^ (a6 + 1580))))(a1, a2);
}

uint64_t sub_1DA727CB8(int a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((118 * (((a4 - (v4 & 3) + ((2 * a1) ^ 0xA3E ^ a3)) & 0xFFFFFFFC) > a3 + a4 + 323)) ^ a1)))();
}

uint64_t sub_1DA727D08@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W8>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>)
{
  unsigned int v9 = a2 - 32;
  uint64_t v10 = v7 + v9;
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v6 + v9;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a5)), a6));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a5)), a6));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a3 == 32) * ((a1 + 690) ^ a4)) ^ a1)))();
}

uint64_t sub_1DA727D14@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v5 + v6)) = *(_DWORD *)(*v4 + 4 * (v5 + v6));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v6 - 1 == v1) * v7) ^ v2)))();
}

uint64_t sub_1DA727D4C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  STACK[0x5C0] -= 1616;
  LODWORD(STACK[0x4F8]) = a4 + 230;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((STACK[0x4E8] == 0)
                                     * ((a3 - 1696561432) ^ 0x9AE08655 ^ (a3 - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (a3 + 1240))))();
}

void sub_1DA727DBC()
{
}

uint64_t sub_1DA727DD8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((240
                                * ((v3 ^ ((a3 - 377) | 0x10) ^ (21 * (a3 ^ 0x639)) ^ 0xD3A9237A)
                                 + ((2 * v3) & 0xFADFBF7E ^ 0x588DB806) != -42999873)) ^ a3)))();
}

uint64_t sub_1DA727E54@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v6 + a3 + v3 - 57 - 62)) = *(unsigned char *)(a2 + (v5 - 1400551917));
  return (*(uint64_t (**)(void))(v7 + 8 * (v3 ^ (656 * ((v4 & 0xFFFFFFFC) == 1400551916)))))();
}

uint64_t sub_1DA727EA8@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a1) = 95;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2036 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (v3 + a2))))();
}

uint64_t sub_1DA727EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (v6 | (16 * (((v5 == a5) ^ (v6 - 103)) & 1)))))();
}

uint64_t sub_1DA727F10(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 3804331 * (a1 ^ 0x2E4183CC);
  int v3 = *(_DWORD *)a1 - v2;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  unsigned int v7 = 1224239923 * ((1202267949 - (&v10 | 0x47A9272D) + (&v10 | 0xB856D8D2)) ^ 0x4AE52505);
  unsigned int v8 = (*(_DWORD *)(a1 + 40) ^ v2) - v7;
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = v4;
  unsigned int v11 = v8 - 545755602;
  int v16 = v3 - 368400041 + v7 + 913;
  uint64_t v14 = v5;
  uint64_t v10 = v6;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1F34B17C0 + v3 - 368400041) + (v3 ^ 0x15F550CF) - 1))(&v10);
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

uint64_t sub_1DA728048(uint64_t a1)
{
  int v1 = 1755732067 * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 28) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x11127EB20C1B7502);
  unsigned int v6 = v4 - 696851460;
  BOOL v5 = v4 - 696851460 < 0;
  unsigned int v7 = 696851460 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v2 - 1551)
          + ((102
            * (((-123 * (v2 ^ 0x95) + 1) ^ ((v3 - 1312414243) < 4 * (unint64_t)v8)) & 1)) ^ v2)
          - 1))();
}

uint64_t sub_1DA728158@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v3 - 1323) ^ 0xFFFFFA15) + v3 - 565) * (a1 == v1)) ^ (v3 - 510))))();
}

void sub_1DA72818C()
{
}

void sub_1DA728244()
{
}

void sub_1DA728674(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v18 = (a15 ^ 0x2080437B ^ (a4 - 1090786883) & 0xD7FDF4E7) + (a1 ^ v15);
  *(_DWORD *)(v17 - 132) = v18 + v15 - (v16 & (2 * v18));
  JUMPOUT(0x1DA7286E4);
}

uint64_t sub_1DA728770(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v5 ^ (2
                                     * (((v5 - 117) ^ (v4 + a4 + (v5 ^ 0x314u) - 2113928035 + 36 < 0xC)) & 1)))))();
}

void sub_1DA7287C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v29 - 144) = a24;
  *(void *)(v29 - 136) = v25;
  *(_DWORD *)(v29 - 112) = ((v26 ^ 0x522) - 258) ^ (((v29 + 1961557337 - 2 * ((v29 - 144) & 0x74EAFDE9)) ^ 0x191EE5E0)
                                                  * v27);
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = v25;
  *(void *)(v29 - 120) = v28;
  uint64_t v30 = v28;
  uint64_t v31 = v24;
  (*(void (**)(uint64_t))(v24 + 8 * (v26 ^ 0xCA9)))(v29 - 144);
  *(void *)(v29 - 120) = v25;
  *(void *)(v29 - 112) = a20;
  *(_DWORD *)(v29 - 104) = (v26 ^ 0x522)
                         + 628203409 * ((v29 + 212173746 - 2 * ((v29 - 144) & 0xCA58442)) ^ 0x8E2D8871)
                         + 1530;
  *(void *)(v29 - 144) = v25;
  *(void *)(v29 - 136) = v30;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = a24;
  (*(void (**)(uint64_t))(v31 + 8 * ((v26 ^ 0x522) + 1628)))(v29 - 144);
  JUMPOUT(0x1DA726D58);
}

uint64_t sub_1DA7288A8(unsigned int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((52 * ((a4 + 1 + v4) > 0x3F)) ^ a1)))();
}

void sub_1DA728980()
{
  LODWORD(STACK[0x3C8]) = 0;
  STACK[0x3D0] = 0;
  JUMPOUT(0x1DA7289A4);
}

uint64_t sub_1DA728AD8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1DA728AF0()
{
  int v5 = ~(v3 - 1555) + *(unsigned __int8 *)(v2 + 5);
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((51 * (((v1 + ((v3 - 1555) | 0x620) - 1580) & (2 * v5)) + (v5 ^ v0) != v0)) ^ v3)))();
}

uint64_t sub_1DA728B44(uint64_t result)
{
  unint64_t v1 = 628203409 * ((2 * (result & 0x1BF1622518597E72) - result - 0x1BF1622518597E73) ^ 0xDB5237CF652E8DBELL);
  int v2 = *(_DWORD *)(result + 40) + v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  int v4 = *(_DWORD *)(result + 20) - v1;
  int v5 = *(_DWORD *)(result + 24) - v1;
  unint64_t v6 = *(void *)(result + 32) ^ v1;
  int v7 = *(_DWORD *)result ^ v1;
  BOOL v8 = v6 > v3;
  BOOL v9 = v6 == v3;
  int v10 = v8;
  if (v4) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 16) = v7 ^ v5;
  return result;
}

void sub_1DA728BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3480) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 - dword_1EA8E3480) ^ 0xF0))] ^ 0x4B])
                + 110);
  uint64_t v4 = *(void *)(v3 - 4);
  int v5 = (char *)off_1F34B1A10 - 8;
  unint64_t v6 = off_1F34B1C38;
  int v7 = (unint64_t *)*(&off_1F34B17C0
                           + (*((unsigned char *)off_1F34B1C38
                                                             + (*((unsigned __int8 *)off_1F34B1A10
                                                                + (-93 * (v4 ^ qword_1EA8E3538 ^ 0xF0))
                                                                - 8) ^ 0xE3u)) ^ (-93 * (v4 ^ qword_1EA8E3538 ^ 0xF0)))
                           + 88);
  unint64_t v8 = 192840611 * (v4 ^ (unint64_t)&v10 ^ 0x2F1F548F835ED4F0 ^ *v7);
  *(void *)(v3 - 4) = v8;
  *int v7 = v8;
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v_Block_object_dispose(&STACK[0x360], 8) = 628203409 * ((v12 - 2049255028 - 2 * (v12 & 0x85DAD98C)) ^ 0x752D5BF);
  int v15 = v8 + 1172345435;
  int v13 = 2067890216 - v8;
  uint64_t v14 = &STACK[0x4696E7753303C9BE];
  LODWORD(v7) = 192840611 * ((*(_DWORD *)v7 - *(_DWORD *)(v3 - 4)) ^ 0x835ED4F0);
  BOOL v9 = (char *)*(&off_1F34B17C0
               + ((-93 * ((qword_1EA8E3538 - dword_1EA8E3480) ^ 0xF0)) ^ byte_1DA756F70[byte_1DA752640[(-93 * ((qword_1EA8E3538 - dword_1EA8E3480) ^ 0xF0))] ^ 0xEF])
               + 16)
     - 8;
  (*(void (**)(unsigned char *))&v9[8
                                     * (v7 ^ v6[v5[v7] ^ 0x72])
                                     + 16408])(v12);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA728EF8(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 24) = a3;
  return result;
}

uint64_t sub_1DA728F00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((28
                                * (((a5 - 83) ^ (a7 + a1 < ((a5 + 2086483629) & 0x83A2C33F ^ 0xFFFFFEEF))) & 1)) ^ (a5 - 1284))))();
}

uint64_t sub_1DA728F5C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1109 * ((v1 ^ 0xCEu) - 696851740 + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF)) ^ v1)))();
}

void sub_1DA728FA4()
{
}

uint64_t sub_1DA728FB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1644 * ((((((v0 - 992323373) & 0x3B25A45F) + 1540) ^ 0x61F) & v1) == 0)) ^ v0)))();
}

uint64_t sub_1DA728FF4()
{
  int v2 = (LODWORD(STACK[0x25C]) - 1809246499) & 0x6BD6E9F7;
  LODWORD(STACK[0x530]) = v0 + 225;
  return (*(uint64_t (**)(void))(v1 + 8
                                   * ((((((v2 - 275) ^ (STACK[0x388] == 0)) & 1) == 0) * (v2 - 240)) ^ (v2 + 1280))))();
}

uint64_t sub_1DA72901C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a4 ^ (470 * (v4 - v6 == 408873462)))))();
}

unsigned int *sub_1DA7290A8@<X0>(unsigned int *result@<X0>, int a2@<W8>)
{
  *uint64_t result = ((*(_DWORD *)(*(void *)(v3 - 0x11127EB20C1B74FELL) + 4 * v4) ^ 0x97F8C60u) >> v2) & 1 ^ a2;
  return result;
}

uint64_t sub_1DA7290E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v4 + ((a4 - 1296) | 0xD0u) + 42999872 - 212 > 7)
                                     * (((a4 + 1078162122) & 0xBFBC8FF3) - 1988)) ^ a4)))();
}

void sub_1DA72913C()
{
}

uint64_t sub_1DA7291A0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)(((2 * ((v2 >> v3) & 1)) & 0xFFFFFFF7 | (8 * ((v2 >> v3) & 1))) ^ v1)))();
}

uint64_t sub_1DA7291C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  uint64_t v27 = LODWORD(STACK[0x2EC]);
  int v28 = LOBYTE(STACK[0x300]) ^ 0x70;
  if (v28 == 2)
  {
    BOOL v33 = (unint64_t)&STACK[0x2A0] >= a27 || v34 >= (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35
                                                       + 8
                                                       * (((11 * (((v36 + 848) | 0x10) ^ 0x33F) - 859) * v33) ^ (v36 + 1988))))(v27, 108634942);
  }
  else
  {
    if (v28 != 1) {
      JUMPOUT(0x1DA71691CLL);
    }
    BOOL v30 = (unint64_t)&STACK[0x2A0] < a27 && v34 < (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t))(v35 + 8 * (((((v36 + 1080) | 0x220) ^ 0x66B) * v30) | (v36 + 388))))(v27);
  }
}

uint64_t sub_1DA7291D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 ^ 0x509) * (a6 >> 4 == 268409836)) ^ a5)))();
}

uint64_t sub_1DA729210@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((482
                                * (((((180 * (v3 & 0x56D64DE7 ^ 0x4C6)) ^ 0xD676E1E0) + v2)
                                  * ((((v3 & 0x56D64DE7) + 1043802617) & 0xC1C8D35D ^ 0xD676E1E0) + v1)) >> 31)) ^ v3 & 0x56D64DE7)))();
}

uint64_t sub_1DA72927C(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((51 * (a2 + a1 + ((v2 - 699) ^ 0x64558) >= (((v2 - 1232) | 0x169) ^ 0x365))) ^ v2)))();
}

uint64_t sub_1DA7292F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((457
                                * (((v5 + v3 - 158) & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1DA729338(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34)
{
  *(unsigned char *)(a5 + (v38 + v36 + 45)) = *(&a34 + (v37 - 1131569345));
  return (*(uint64_t (**)(void))(v39 + 8 * (v34 ^ (936 * ((v35 & 0xFFFFFFFC) == a1)))))();
}

uint64_t sub_1DA729380@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 ^ 0x105) + 366) ^ 0x3E0) * (v1 == 0)) ^ v2)))();
}

void sub_1DA7293AC()
{
}

uint64_t sub_1DA729414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  int v20 = (v17 - 403359318) & 0x180AC7EF;
  int v21 = a12 - 2045096643 + v20;
  int v22 = (v20 - 1957996905) & 0x34B4A7CE;
  int v23 = (((v22 - 803) | 0x5D6) - 1964509114 + *(_DWORD *)(*a13 - 0x49E3D721B33288D3)) * (*a17 ^ 0x97F8C60);
  int v24 = 235795823 * ((v19 - 1523134813 - 2 * ((v19 - 128) & 0xA536CF23)) ^ 0x319B867A);
  *(void *)(v19 - 104) = a14;
  *(_DWORD *)(v19 - 12_Block_object_dispose(&STACK[0x360], 8) = (v22 + 442) ^ v24;
  *(_DWORD *)(v19 - 124) = 696851460 - v24;
  *(_DWORD *)(v19 - 112) = (v23 ^ 0xBEFFFEF5) - v24 + ((2 * v23) & 0x7DFFFDEA) + 1402613756;
  *(void *)(v19 - 120) = a15;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v22 + 1240)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1076 * (v21 > -2045095388)) ^ v22)))(v25);
}

void sub_1DA7295A0()
{
}

void sub_1DA7295D0()
{
  int v5 = (void *)STACK[0x400];
  unint64_t v6 = STACK[0x400] + 264;
  v5[31] = 0x29891C047C1D311FLL;
  v5[32] = v6;
  v5[65] = 0x29891C047C1D311FLL;
  v5[66] = v5 + 67;
  STACK[0x3D8] = (unint64_t)v5 + 0x11127EB20C1B770ELL;
  v5[99] = 0x29891C047C1D311FLL;
  v5[100] = v5 + 101;
  STACK[0x3E0] = (unint64_t)v5 + 0x11127EB20C1B781ELL;
  v5[133] = 0x29891C047C1D311FLL;
  v5[134] = v5 + 135;
  STACK[0x3E8] = (unint64_t)v5 + 0x11127EB20C1B792ELL;
  v5[167] = 0x29891C047C1D311FLL;
  v5[168] = v5 + 169;
  STACK[0x408] = (unint64_t)v5 + 0x11127EB20C1B7A3ELL;
  int v7 = 1759421093 * ((((v4 - 192) | 0xE168F4C2) - ((v4 - 192) & 0xE168F4C2)) ^ 0x52154496);
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = v1 + 124 - v7;
  unint64_t v8 = STACK[0x5F8] + 4;
  *(_DWORD *)(v4 - 192) = v7 + (v0 ^ 0x456A3033) - 33644808 + ((2 * v0) & 0x7FA7F7DC ^ 0x75239798);
  *(void *)(v4 - 184) = v8;
  *(void *)(v4 - 176) = (char *)v5 + 0x11127EB20C1B75FELL;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x486)))(v4 - 192);
  uint64_t v9 = v8 + v2;
  int v10 = 1759421093 * (((v4 - 192) & 0x4C60DD0 | ~((v4 - 192) | 0x4C60DD0)) ^ 0x4844427B);
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = v1 + 124 - v10;
  unint64_t v11 = STACK[0x3D8];
  *(void *)(v4 - 184) = v9;
  *(void *)(v4 - 176) = v11;
  *(_DWORD *)(v4 - 192) = v10 + (v0 ^ 0x8547143A) + 1037286143 + (((v1 ^ 0x27E) - 147785) & (2 * v0) ^ 0xF571978A);
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x486)))(v4 - 192);
  uint64_t v12 = v9 + v2;
  int v13 = 1759421093 * ((v4 - 1974126814 - 2 * ((v4 - 192) & 0x8A5537E2)) ^ 0x392887B6);
  *(_DWORD *)(v4 - 192) = v13 + (v0 ^ 0x476B1522) - 17433 + ((2 * v0) & 0x7BA5BDFE ^ 0x712195BA);
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = v1 + 124 - v13;
  unint64_t v14 = STACK[0x3E0];
  *(void *)(v4 - 184) = v12;
  *(void *)(v4 - 176) = v14;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x486)))(v4 - 192);
  uint64_t v15 = v12 + v2;
  int v16 = 1759421093 * (((((v4 - 192) | 0x46CC571E) ^ 0xFFFFFFFE) - (~(v4 - 192) | 0xB933A8E1)) ^ 0xA4E18B5);
  *(_DWORD *)(v4 - 192) = v16 + (v0 ^ 0xC562353A) + 2113313791 + ((2 * v0) & 0x7FB7FDCE ^ 0x7533958A);
  unint64_t v17 = STACK[0x3E8];
  *(void *)(v4 - 184) = v15;
  *(void *)(v4 - 176) = v17;
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = v1 + 124 - v16;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x486)))(v4 - 192);
  int v18 = 1759421093
      * ((((v4 - 192) ^ 0xDC5C80A7) - 1432301377 - 2 * (((v4 - 192) ^ 0xDC5C80A7) & 0xAAA0D0BF)) ^ 0xC581E04C);
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = v1 + 124 - v18;
  *(_DWORD *)(v4 - 192) = v18 + (v0 ^ 0x87663122) + 1072865255 + ((2 * v0) & 0xFBBFF5FE ^ 0xF13395BA);
  unint64_t v19 = STACK[0x408];
  *(void *)(v4 - 184) = v15 + v2;
  *(void *)(v4 - 176) = v19;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 | 0x486)))(v4 - 192);
  JUMPOUT(0x1DA7088D0);
}

void sub_1DA7299E8(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502) == 696851460
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x11127EB20C1B7502) == 696851460;
  int v1 = *(_DWORD *)(a1 + 8) - 1374699841 * ((2 * (a1 & 0x61E99D06) - a1 + 504783609) ^ 0x73E27AF0);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA729B08@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  return sub_1DA729B30(a1, 0, a3 - 3, 884, v4 ^ 0x144u, 1776, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a4))));
}

uint64_t sub_1DA729B30(float a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  *(float *)(a4 + (v10 + v7 - a3)) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a6 + a3 == v9) * a7) ^ v8)))(v8 ^ a5);
}

uint64_t sub_1DA729B60@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  BOOL v16 = v11 > v8;
  uint64_t v17 = 4 * (v12 + v9);
  int v18 = v3 + v13 + (*(_DWORD *)(*(void *)(a3 - 0x11127EB20C1B74FELL) + v17) ^ v10);
  *(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + v17) = v10
                                                            + ((v5 + 1250) ^ 0x526)
                                                            + v18
                                                            - (v14 & (2 * v18))
                                                            - 627;
  int v19 = v12 + 1 + v6;
  LODWORD(v17) = v16 ^ (v19 < v4);
  BOOL v20 = v19 < v7;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((25 * !v16) ^ (v5 - 263))))();
}

void sub_1DA729C34()
{
}

uint64_t sub_1DA729DA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1510
                                * ((((*(unsigned __int8 *)(a2 + 1) - 146) << ((v2 + v4 + 98) ^ (v2 + 1))) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1DA729DF0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 543) ^ 0x6D4) * (v0 == 0xE4DCA842)) ^ v1)))();
}

uint64_t sub_1DA729E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v24 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 - 1131) ^ (1804 * ((a22 & 0x20000000) == 0))));
  return v24(a1, v24, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1DA729E80()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1733654407) & 0x675573E7 ^ 0x357) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1DA729EC4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = v4 + v5 + ((a1 - 896010835) & 0x35680FFFu) - 1741;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((v5 - 1 != v3) | (2 * (v5 - 1 != v3)) | (a1 - 68))))();
}

uint64_t sub_1DA729F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v14 = v11 < v7;
  int v15 = v8 + 1;
  *(unsigned char *)(*v13 + (v15 + a7)) = 95;
  if (v14 == v15 + v9 < v7) {
    BOOL v14 = v15 + v9 < v11;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * (((v10 + 668) | 1) - 1194)) ^ v10)))();
}

uint64_t sub_1DA729F74@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v15 = a1 + 331;
  BOOL v17 = a11 - v14 != 331120864 || v11 == (v15 ^ (v13 - 513) ^ (31 * (v15 ^ 0x62A) + 41570025));
  return (*(uint64_t (**)(void))(v12 + 8 * ((13 * v17) ^ v15)))();
}

uint64_t sub_1DA729FDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((25 * (a1 != ((v2 + 354088436) & 0xEAE506EF) + 0x64C21D7BCB4B685FLL)) ^ v2)))();
}

uint64_t sub_1DA72A044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((572 * (((v19 - v21 + 264) ^ 0xA0108EE7) + a19 < 0x10)) ^ (v19 + v22))))();
}

uint64_t sub_1DA72A088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a7 + v7 - 156 + ((v7 - 1745226720) & 0xFEFFEB4D) + 662) * (v8 == a1)) ^ v7)))();
}

uint64_t sub_1DA72A110()
{
  STACK[0x238] = v0;
  STACK[0x298] = (unint64_t)&STACK[0x386FBAA55BF10F];
  *(void *)(v3 - 184) = &STACK[0x386FBAA55BF10F];
  *(_DWORD *)(v3 - 176) = v1
                        + 18
                        - 235795823 * ((-2 - ((~(v3 - 192) | 0xD50FCEE3) + ((v3 - 192) | 0x2AF0311C))) ^ 0x41A287BA)
                        + 1561;
  STACK[0x2A0] = (unint64_t)&STACK[0x70F770302E924523];
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = &STACK[0x70F770302E924523];
  *(unsigned char *)(v3 - 160) = (111 * ((-2 - ((~(v3 + 64) | 0xE3) + ((v3 + 64) | 0x1C))) ^ 0xBA)) ^ 0x7B;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v1 + 18) ^ 0x91F)))(v3 - 192);
  int v5 = *(_DWORD *)(v3 - 192);
  LODWORD(STACK[0x530]) = v5;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v5 == 2058996701) * ((((v1 + 18) ^ 0x77) + 1043) ^ 0x575)) ^ (v1 + 18))))(v4);
}

uint64_t sub_1DA72A20C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((238 * ((((v0 - 690017919) & 0x2920D6BC ^ 0xFFFFF952) & v1) == 1227088734)) ^ v0)))();
}

uint64_t sub_1DA72A258()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F34B17C0
                + ((-93 * (dword_1EA8E34F0 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA756D70[byte_1DA752540[(-93 * (dword_1EA8E34F0 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0x54])
                - 150);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t *)*(&off_1F34B17C0
                  + (*((unsigned char *)off_1F34B1920
                                                    + (*((unsigned __int8 *)off_1F34B1A58
                                                       + (-93 * ((qword_1EA8E3538 + v1) ^ 0xF0))
                                                       - 4) ^ 0x97u)
                                                    - 8) ^ (-93 * ((qword_1EA8E3538 + v1) ^ 0xF0)))
                  + 42);
  uint64_t v3 = *v2 - v1 - (void)&v7;
  uint64_t v4 = (192840611 * v3) ^ 0x2F1F548F835ED4F0;
  uint64_t v5 = 192840611 * (v3 ^ 0x2F1F548F835ED4F0);
  *(void *)(v0 - 4) = v4;
  uint64_t *v2 = v5;
  LOBYTE(v5) = -93 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0xF0);
  uint64_t v9 = (uint64_t)*(&off_1F34B17C0
                + (*((unsigned char *)off_1F34B1A38
                                                  + (*((unsigned __int8 *)off_1F34B1940 + v5 - 8) ^ 0xDDu)) ^ v5)
                + 145);
  unsigned int v10 = 1374699841 * ((2 * (v8 & 0x4A5519C0) - v8 + 900392510) ^ 0x585EFE37) + 1433;
  LOBYTE(v0) = -93 * (*(_DWORD *)(v0 - 4) ^ 0xF0 ^ *(_DWORD *)v2);
  return (*((uint64_t (**)(char *))*(&off_1F34B17C0
                                             + ((-93
                                                                              * (dword_1EA8E34F0 ^ 0xF0 ^ qword_1EA8E3538)) ^ byte_1DA757070[byte_1DA752840[(-93 * (dword_1EA8E34F0 ^ 0xF0 ^ qword_1EA8E3538))] ^ 0x3E])
                                             + 121)
          + (*((unsigned char *)off_1F34B1C38
                                            + (*((unsigned __int8 *)off_1F34B1A10 + v0 - 8) ^ 0xE3u)) ^ v0)
          + 2049))(v8);
}

uint64_t sub_1DA72A490(uint64_t a1)
{
  int v1 = 1225351577 * ((a1 & 0xAF7C96C5 | ~(a1 | 0xAF7C96C5)) ^ 0x7319B12C);
  int v2 = *(_DWORD *)(a1 + 20) - v1;
  int v3 = *(_DWORD *)(*(void *)(a1 + 24) - 0x11127EB20C1B7502);
  int v4 = *(_DWORD *)(a1 + 16) ^ v1;
  unsigned int v6 = v3 - 696851460;
  BOOL v5 = v3 - 696851460 < 0;
  unsigned int v7 = 696851460 - v3;
  if (v5) {
    unsigned int v6 = v7;
  }
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + (v2 ^ 0xD5))
          + ((((v4 - 1954410006) < 4 * (unint64_t)v6) * (v2 ^ 0xAC)) ^ v2)
          - 1))();
}

uint64_t sub_1DA72A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * (((v8 >= ((a7 - 1606784215) | 0x4180000Eu) + 507874642)
                                                               * (((a7 - 847) | 0x20) - 1075)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1DA72A5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a2
                                                    + 8 * (int)((241 * (((v3 ^ 0x49Cu) + v2 - 1) >> 31)) ^ v3 ^ 0x49C)))(a1, 2 * (v3 ^ 0x4A8u));
}

void sub_1DA72A5EC()
{
}

uint64_t sub_1DA72A5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,int a21)
{
  uint64_t v29 = &a21 + 6 * v22;
  v29[2] = v24;
  v29[3] = v27;
  *((void *)v29 + 2) = v28;
  v29[6] = a19;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (int)(((*(_DWORD *)(v25 + 48 * v23 + 32) + 1965244709 < ((a9 - 577276633) & 0x7FFDADDFu) + 577428469) * ((a9 + 1345254896) & 0xAFD10BFF ^ 0x2B4)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

void sub_1DA72A690()
{
}

uint64_t sub_1DA72A8AC()
{
  return sub_1DA72ACC8();
}

uint64_t sub_1DA72ACC8@<X0>(unsigned int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  BOOL v6 = a1 < v5;
  unsigned int v7 = v5 + a3 + 1;
  int v8 = v6 ^ (v7 < v5);
  BOOL v9 = v7 < a1;
  if (!v8) {
    BOOL v6 = v9;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((63 * (((((v3 ^ a2) + 340) ^ v6) & 1) == 0)) ^ v3)))();
}

uint64_t sub_1DA72AD20(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x454]) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v4 + a3) < 4) ^ (v3 + 59)) & 1)
                                * (((v3 - 1477) | 0xA0) ^ 0xAB)) ^ v3)))();
}

uint64_t sub_1DA72AD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((196 * (a10 + 4 >= a10)) ^ v10)))();
}

void sub_1DA72ADE0()
{
}

uint64_t sub_1DA72AE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a1) = 95;
  return (*(uint64_t (**)(void))(v4 + 8 * ((506 * ((a3 & 0x7FFFFFFFFFFFFFC0) == a2)) ^ (v3 + 205))))();
}

uint64_t sub_1DA72AE8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  *(void *)(a1 - 7 + v10 + v9 + v8 - a4 + ((a5 + 1040) ^ v6)) = *(void *)(v5
                                                                            - 7
                                                                            + v10
                                                                            + v9
                                                                            + v8
                                                                            - a4
                                                                            + ((a5 + 1040) ^ v6));
  return (*(uint64_t (**)(void))(v11 + 8 * ((1303 * (a4 - (v7 & 0xFFFFFFF8) == -8)) ^ a5)))();
}

void sub_1DA72AEE8()
{
}

uint64_t sub_1DA72AFAC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + (v5 + v3)) = *(unsigned char *)(a1 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * (v5 - 1 != v2)) | (16 * (v5 - 1 != v2))) ^ v4)))();
}

uint64_t sub_1DA72AFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v25;
  v34[0] = v25 - 23;
  int v35 = v25 - 47;
  int v31 = v25 + 1035;
  *(_DWORD *)(v29 - 104) = v25
                         + 1035
                         + 628203409 * ((((v29 - 144) | 0x3EE1B2EB) + (~(v29 - 144) | 0xC11E4D14)) ^ 0xBC69BED9);
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  *(void *)(v29 - 120) = a25;
  *(void *)(v29 - 112) = v27;
  *(void *)(v29 - 144) = v27;
  *(void *)(v29 - 136) = a23;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1133)))(v29 - 144);
  *(_DWORD *)(v29 - 104) = v31
                         + 628203409
                         * ((((v29 - 144) | 0x8BC5C813) - (v29 - 144) + ((v29 - 144) & 0x743A37E8)) ^ 0x94DC420);
  *(void *)(v29 - 120) = v27;
  *(void *)(v29 - 112) = a17;
  *(void *)(v29 - 144) = v27;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = v28;
  (*(void (**)(uint64_t))(v26 + 8 * (v30 + 1133)))(v29 - 144);
  *(_DWORD *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = (v30 - 1882358371) ^ (235795823
                                               * (((((v29 - 144) | 0x19836934) ^ 0xFFFFFFFE)
                                                 - (~(v29 - 144) | 0xE67C96CB)) ^ 0x72D1DF92));
  *(void *)(v29 - 144) = v27;
  *(void *)(v29 - 136) = a22;
  (*(void (**)(uint64_t))(v26 + 8 * (v30 + 1184)))(v29 - 144);
  *(_DWORD *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = (v30 + 1090) ^ (1759421093
                                         * ((((v29 - 144) | 0xBD2D622E) - (v29 - 144) + ((v29 - 144) & 0x42D29DD0)) ^ 0xE50D27A));
  *(void *)(v29 - 144) = v27;
  *(void *)(v29 - 136) = a16;
  (*(void (**)(uint64_t))(v26 + 8 * (v30 + 1183)))(v29 - 144);
  *(_DWORD *)(v29 - 136) = v30 + 1178560073 * ((v29 + 1554233686 - 2 * ((v29 - 144) & 0x5CA3B9E6)) ^ 0xF1348543) - 42;
  *(void *)(v29 - 144) = v27;
  *(void *)(v29 - 12_Block_object_dispose(&STACK[0x360], 8) = a16;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v30 + 1140)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((195 * (((a21 == 0) ^ (v34[0] ^ (v30 - 22))) & 1)) ^ v35)))(v32);
}

uint64_t sub_1DA72AFE4()
{
  *(_DWORD *)(v6 - 10_Block_object_dispose(&STACK[0x360], 8) = v0 + ((((v6 - 128) | 0x2CBCFA2C) - ((v6 - 128) & 0x2CBCFA2C)) ^ 0x4148E225) * v3 - 374;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x360], 8) = v4;
  *(void *)(v6 - 120) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xA82)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (v0 ^ (32
                                                   * (*(_DWORD *)(v6 - 112) != v5
                                                                             + ((v0 + 1846024492) & 0x91F7E5EF)
                                                                             - 420)))))(v7);
}

uint64_t sub_1DA72B088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v19 = -v16;
  unsigned int v20 = v14 - 1878376318;
  if (v20 <= 0x40) {
    unsigned int v20 = 64;
  }
  BOOL v21 = v19 - v15 + ((v17 + 907) ^ (a8 + 164)) + v20 > 0xE;
  unsigned int v22 = *(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((v21 | (2 * v21)) ^ (v17 + 2017)));
  return v22(v22, -v15, v19, 64, a5, a6, 3559866497, a8, a9, a10, a11, a12, a13, a14);
}

void sub_1DA72B10C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1DA72B180(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a4 = v8 - 1755732067 * (&a3 ^ 0xDEC6BDDB) + 1337;
  a5 = v6;
  a6 = v7;
  a3 = v7;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 ^ 0xA56)))(&a3);
  JUMPOUT(0x1DA72B1C4);
}

void sub_1DA72B1EC(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a3 = v7;
  a4 = v7;
  a5 = v6;
  a6 = (v8 + 1683) ^ (460628867
                    * ((1983984067 - (&a3 | 0x764131C3) + (&a3 | 0x89BECE3C)) ^ 0xC5284C41));
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 + 1803)))(&a3);
  JUMPOUT(0x1DA72B258);
}

void sub_1DA72B284()
{
  LODWORD(STACK[0x500]) = v0;
  STACK[0x518] = *(void *)(v2 + 8 * v1);
  JUMPOUT(0x1DA70CEB0);
}

uint64_t sub_1DA72B2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v5 + v7) = v6;
  return (*(uint64_t (**)(void))(v8 + 8 * (v4 ^ (4 * ((unint64_t)(v5 + v7 + 1) < 0x38)))))();
}

void sub_1DA72B2D0()
{
  uint64_t v3 = (v7 + 1698759507) | 0x480u;
  int v4 = *v9;
  if (((((v7 + 1698759234) | 0x480u) - 1152) & (unint64_t)*v9) == (v3 ^ 0x594))
  {
    uint64_t v5 = *(void **)(v2 + 8 * (v7 + 1698759322));
    if (!*v5)
    {
      int v6 = (v3 - 1987782198) & 0x767B27B1;
      void *v5 = v4;
      **(_DWORD **)(v2 + 8 * (int)(v3 ^ 0x52D)) = 255;
      *v4 |= ~v4[*v4 & 0x3ELL] << 16;
      v4[4] |= ~v4[v4[4] & 0x3ELL] << 16;
      v4[8] |= (v6 ^ 0xF8EF ^ v4[v4[8] & 0x3ELL]) << 16;
      v4[12] |= ~v4[v4[12] & 0x3ELL] << 16;
      v4[16] |= ~v4[v4[16] & 0x3ELL] << 16;
      v4[20] |= ~v4[v4[20] & 0x3ELL] << 16;
      v4[24] |= ~v4[v4[24] & 0x3ELL] << 16;
      v4[28] |= ~v4[v4[28] & 0x3ELL] << 16;
      v4[32] |= ~v4[v4[32] & 0x3ELL] << 16;
      v4[36] |= ~v4[v4[36] & 0x3ELL] << 16;
      v4[40] |= ~v4[v4[40] & 0x3ELL] << 16;
      v4[44] |= ~v4[v4[44] & 0x3ELL] << 16;
      v4[48] |= ~v4[v4[48] & 0x3ELL] << 16;
      v4[52] |= ~v4[v4[52] & 0x3ELL] << 16;
      v4[56] |= ~v4[v4[56] & 0x3ELL] << 16;
      v4[60] |= ~v4[v4[60] & 0x3ELL] << 16;
      (*(void (**)(uint64_t *, void, uint64_t))(v1 + 8 * (int)(v3 ^ 0xDA0)))(&v10, 0, 1024);
      __asm { BRAA            X11, X17 }
    }
  }
  _DWORD *v8 = -2058973086;
}

uint64_t sub_1DA72B60C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * (v2 ^ 0x51E) - 64) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1DA72B640@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return sub_1DA720C6C(a1, a2, *(_DWORD *)(*v4 + 4 * (v5 - 410188026)), v3, a3);
}

uint64_t sub_1DA72B66C()
{
  int v5 = 1755732067 * ((2 * ((v4 - 128) & 0x4CB89D10) - (v4 - 128) + 860316398) ^ 0xED81DF35);
  *(void *)(v4 - 120) = v2;
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x360], 8) = v5 + v3 + 1560;
  *(_DWORD *)(v4 - 124) = (((11 * (v3 ^ 0x129)) ^ 0x2159411) + v0) ^ v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 1636)))(v4 - 128);
  return sub_1DA72B6F4(v6);
}

uint64_t sub_1DA72B6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 10_Block_object_dispose(&STACK[0x360], 8) = v14
                         + 1374699841 * ((~((v18 - 128) | 0xA3E9FF9B) + ((v18 - 128) & 0xA3E9FF9B)) ^ 0x31E2186D)
                         - 1277;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(void *)(v18 - 120) = v16;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 ^ 0xE05)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)(((*(_DWORD *)(v18 - 112) == v17)
                                                   * (((8 * v14) ^ 0x32F0) + ((v14 + 1259142719) & 0xB4F2FFFB) - 1707)) ^ v14)))(v19);
}

void sub_1DA72B7AC(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x4696E7753303C8F2) = ((v1 + 38) ^ 0x26)
                                         + (*(_DWORD *)(a1 - 0x4696E7753303C8F2) ^ 0x95ABEA7D)
                                         - 1783895555
                                         - ((2 * (*(_DWORD *)(a1 - 0x4696E7753303C8F2) ^ 0x95ABEA7D) + 2) & 0x2B57D4FA);
}

uint64_t sub_1DA72B808()
{
  int v3 = v0 + 885;
  unsigned int v4 = (v0 + 403202727) & 0xE7F79FE9;
  int v5 = v0 - 89;
  *(_DWORD *)(v2 - 18_Block_object_dispose(&STACK[0x360], 8) = v0
                        + 885
                        - 1734042137
                        * (((((v2 - 192) | 0x731CCB0A) ^ 0xFFFFFFFE) - (~(v2 - 192) | 0x8CE334F5)) ^ 0xD02DF7B8)
                        - 231789954;
  (*(void (**)(uint64_t))(v1 + 8 * ((v0 + 885) ^ 0xCB9)))(v2 - 192);
  BOOL v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 ^ 0x37B)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v6 * (v4 + (v5 ^ 0xFFFFFCD6))) ^ v3)))();
}

uint64_t sub_1DA72B8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v54 = *(void *)(v50 + 24);
  *(int8x16_t *)(v53 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v50 + 16) - 0x26D69B633F54DF1FLL), (int8x16_t)xmmword_1DA75DF40);
  if (v52) {
    BOOL v55 = v54 == 0x2F19939F047D9D70;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = v55;
  HIDWORD(a25) = 2 * v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)((v56 * (((a6 - 922297736) & 0x36F925AF) - 1424)) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_1DA72B974()
{
}

uint64_t sub_1DA72B9E0(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((118 * (a3 + a4 + (((a5 - 1818) | 0x401) ^ 0xB000049A) >= a5 - 1834)) ^ a5)))();
}

uint64_t sub_1DA72BA5C()
{
  int v5 = v1 + v0;
  unsigned int v6 = v5 + (((v2 - 947) | 0x30) ^ 0x1485701B);
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((118 * (v3 + v6 > ((v5 + 344290345) ^ v2 ^ 0xFFFFF84B))) ^ v2)))();
}

uint64_t sub_1DA72BAD4(uint64_t a1)
{
  int v3 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 945)))(a1, 4182676990) != 0)
                             * ((v1 - 464) ^ (v1 - 815) ^ 0x377)) ^ v1));
  return v3();
}

uint64_t sub_1DA72BB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v25 - 112) = v21 + 1178560073 * ((v25 - 120) ^ 0xAD973CA5) - 495;
  *(void *)(v25 - 104) = v24;
  *(void *)(v25 - 120) = a21;
  (*(void (**)(uint64_t))(v22 + 8 * (v21 | 0x2AF)))(v25 - 120);
  *(_DWORD *)(v25 - 100) = v21
                         + 1374699841 * ((((v25 - 120) | 0x8590F274) - ((v25 - 120) & 0x8590F274)) ^ 0xE864EA7D)
                         - 1086;
  *(void *)(v25 - 120) = a21;
  *(void *)(v25 - 112) = v23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0xD5A)))(v25 - 120);
  BOOL v27 = 302 * (v21 ^ 0x554u) + *(_DWORD *)(v25 - 104) - 1271276329 < 0xBB334B90;
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (v27 | (2 * v27) | v21)))(v26);
}

uint64_t sub_1DA72BC38@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8F4u));
  return v3(v1);
}

void sub_1DA72BC6C()
{
}

uint64_t sub_1DA72BDD0@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return sub_1DA72BE30(a2 - 0x11127EB20C1B74FELL, (v2 + 211945800), 4083021564, 0x775FBFE1FFF8BF97, 0x1FFF17F2ELL, 0xFEBDF5FF93AF59E9, (a1 + 595));
}

uint64_t sub_1DA72BE30(void *a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v20 = 4 * (v15 + v13);
  int v21 = v7 + v16 + (*(_DWORD *)(*v9 + v20) ^ v14);
  *(_DWORD *)(*a1 + v20) = v21 + v14 - ((v21 << ((a2 & a3) + 105)) & v17);
  BOOL v22 = v19 > v12;
  int v23 = v15 + 1 + v8;
  int v24 = v22 ^ (v23 < a7);
  BOOL v25 = v23 < v11;
  if (!v24) {
    BOOL v22 = v25;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * (v10 | (32 * !v22))))();
}

uint64_t sub_1DA72BEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (int)((((((v4 - 1070) | 0x10) ^ 0xFFFFFE5D)
                                                                                                 + v4
                                                                                                 - 541)
                                                                                                * (v5 != 63)) ^ v4)))(-229870105, a2, a3, a4, 889516850, 284957911);
}

uint64_t sub_1DA72BF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 3804331
      * (((&a13 | 0x2DFEBACD) - &a13 + (&a13 & 0xD2014530)) ^ 0x3BF3901)
      + 1695027452;
  uint64_t v16 = (*(uint64_t (**)(int *))(v15 + 16528))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((107 * (a13 != ((v14 - 723) ^ 0x2D7))) ^ 0x2BCu)))(v16);
}

uint64_t sub_1DA72BFB4()
{
  int v4 = (v0 - 1951193321) & 0x744CD463;
  int v5 = 1178560073 * ((((2 * (v3 - 192)) | 0x26DCC90) - (v3 - 192) - 20375112) ^ 0xACA1DAED);
  unint64_t v6 = STACK[0x270];
  *(void *)(v3 - 184) = STACK[0x278];
  *(void *)(v3 - 176) = v6;
  int v7 = LODWORD(STACK[0x26C]) ^ v5;
  *(_DWORD *)(v3 - 160) = v5 + v4 + 1083;
  *(_DWORD *)(v3 - 156) = v7;
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = STACK[0x280];
  *(_DWORD *)(v3 - 192) = v1 - v5 + v4 - 1000555873;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0x854u)))(v3 - 192);
  int v9 = *(_DWORD *)(v3 - 188);
  LODWORD(STACK[0x530]) = v9;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((497 * (v9 == v4 + 2058996635)) ^ v4)))(v8);
}

void sub_1DA72C0A4()
{
}

uint64_t sub_1DA72C0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v9 ^ 0x6ED) + 41 * (v9 ^ 0x478) - 742) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_1DA72C0EC()
{
  int v3 = v2 + 426;
  unsigned int v4 = ((v3 - 784498080) & 0x2EC27BF5 ^ 0xE436B46D) + *(_DWORD *)(v1 - 0x68A89052B2EA55B0);
  unsigned int v5 = *(_DWORD *)(v1 - 0x68A89052B2EA55B4) - 587005999;
  BOOL v6 = v5 < 0x2CFCC22C;
  BOOL v7 = v4 < v5;
  if (v6 != v4 < ((v3 - 29) ^ 0x2CFCC18Eu)) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1925 * v7) ^ v3)))();
}

void sub_1DA72C1A0(uint64_t a1, uint64_t a2)
{
  int v7 = (v2 + 18) ^ 0x77;
  (*(void (**)(void, uint64_t, void))(v5 + 8 * (v2 + 1810)))(*(unsigned int *)STACK[0x2F0], a2, ((v2 + 18) ^ 0xBD783BC3) + v4);
  *(_DWORD *)(v6 - 192) = ((((v6 - 192) | 0xA56AA89E) - (v6 - 192) + ((v6 - 192) & 0x5A955760)) ^ 0x31C7E1C7) * v3
                        + 426521557
                        + v7
                        + 1110;
  (*(void (**)(uint64_t))(v5 + 8 * (v7 + 1731)))(v6 - 192);
  JUMPOUT(0x1DA72C238);
}

uint64_t sub_1DA72C280@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a2 + 723432893) & 0xD4E14DE7) + 205) ^ (a2 + 118))
                                     * (*(unsigned __int8 *)(v2 + a1) == 223)) | a2)))();
}

uint64_t sub_1DA72C2C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2005 * (*v1 == ((2 * a1) ^ 0x7CE))) ^ a1)))();
}

void sub_1DA72C300()
{
}

uint64_t sub_1DA72C314(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  unsigned int v47 = (v44 ^ (v46 - 123) ^ a44) + (LODWORD(STACK[0x62C]) ^ v46);
  *(_DWORD *)(STACK[0x2C8] + 52) = ((v47 % 0x2710) ^ 0x7F9AFFDF) - 629289739 + ((2 * (v47 % 0x2710)) & 0x7FBE);
  int v48 = STACK[0x634];
  LODWORD(STACK[0x4F8]) = STACK[0x634];
  return (*(uint64_t (**)(void))(v45 + 8 * ((1279 * (v48 == v46)) ^ (a3 - 88))))();
}

uint64_t sub_1DA72C3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1982 * (v6 + 1 == v8 + 24)) ^ a6)))();
}

uint64_t sub_1DA72C460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(v39 + 8 * (v38 + 1482)))(a27, 0);
  unsigned int v42 = a38[4] + v40 - ((a38[4] << (v38 - 116)) & 0xCDC5DB64);
  a38[1] = a38[6] + v40 - ((2 * a38[6]) & 0xCDC5DB64);
  a38[2] = v42;
  int v43 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v38 ^ 0x58Fu)))(v41);
  a38[3] = v43 + v40 - ((2 * v43) & 0xCDC5DB64);
  uint64_t v44 = (*(uint64_t (**)(void))(v39 + 8 * (v38 + 1413)))();
  *a38 = v44 + v40 - ((2 * v44) & 0xCDC5DB64);
  return sub_1DA72C560(v44, v45, 1101970286, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1DA72C560(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v47 = 4 * (v41 - 365416935);
  int v48 = (v44
       + ((*(_DWORD *)(v45 + 4 * (v41 - 365416936)) >> 30) ^ 1)
       + 2
       * (((*(_DWORD *)(v45 + 4 * (v41 - 365416936)) >> 30) ^ 1 | 0x7FFFFFFA) ^ (*(_DWORD *)(v45 + 4 * (v41 - 365416936)) >> 30))
       + 10) ^ *(_DWORD *)(v45 + 4 * (v41 - 365416936));
  unsigned int v49 = (*(_DWORD *)(a38 + 4 * (v42 - 768172298)) ^ v44)
      + v42
      - 768172298
      + ((v44 + 1664525 * v48 - ((3329050 * v48) & 0xCDC5DB64)) ^ *(_DWORD *)(v45 + v47));
  *(_DWORD *)(v45 + v47) = v49 + v44 - ((2 * v49) & 0xCDC5DB64);
  unint64_t v50 = 1224239923 * ((0xB0B6BC4B47DDF0FDLL - (v43 | 0xB0B6BC4B47DDF0FDLL) + v38) ^ 0x6713F6DD4A91F2D5);
  *(void *)(v46 - 120) = (v41 + 1135949854) ^ v50;
  *(void *)(v46 - 112) = v50 + 1501366788;
  *(_DWORD *)(v46 - 136) = ((v39 - 1362011912) ^ 0x49) - v50;
  *(_DWORD *)(v46 - 132) = (v39 - 1606177316) ^ v50;
  *(_DWORD *)(v46 - 104) = v50;
  *(_DWORD *)(v46 - 144) = (v39 - 1362011912) ^ v50;
  *(_DWORD *)(v46 - 140) = (v39 - 1362011946) ^ v50;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 ^ (a3 + 390))))(v46 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v46 - 128)))(v51);
}

uint64_t sub_1DA72C6DC(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((*(_DWORD *)(v5 - 140) + 1249) ^ (a2 == a3)) & 1) == 0)
                                * (2 * *(_DWORD *)(v5 - 140) - 12)) | (v4 - 685))))();
}

uint64_t sub_1DA72C718(uint64_t a1)
{
  *(void *)(a1 - 7 + (v3 + 117706896 + v2 - v4)) = *(void *)(v6
                                                                             - 7
                                                                             + (v3 + 117706896 + v2 - v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 - (v1 & 0xFFFFFFF8) == -8) * ((v5 ^ 0x75) - 951)) ^ v5)))();
}

uint64_t sub_1DA72C774()
{
  uint64_t v5 = 4 * (v2 - 1405273340);
  unsigned int v6 = *(_DWORD *)(v1 + 4 * (v2 - 1405273341));
  int v7 = (((v6 >> 30) ^ 1) + 1726148018 - 4 * (v6 >> 31)) ^ v6;
  int v8 = ((1566083941 * v7 + 1726148018 - ((-1162799414 * v7) & 0xCDC5DB64)) ^ *(_DWORD *)(v1 + v5)) - v2;
  *(_DWORD *)(v1 + v5) = v8 - ((2 * v8 - 1484420616) & 0xCDC5DB64) - 1163545938;
  unint64_t v9 = STACK[0x418];
  int v10 = (v0 + 1779911909) ^ STACK[0x418];
  *(_DWORD *)(v4 - 192) = v10;
  *(_DWORD *)(v4 - 18_Block_object_dispose(&STACK[0x360], 8) = v10 ^ 0x26;
  *(_DWORD *)(v4 - 184) = ((v0 + 1779911909) & 0x7B17DFA7) - v9;
  *(_DWORD *)(v4 - 180) = (v0 - 504207309) ^ v9;
  unint64_t v11 = STACK[0x410];
  *(void *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = (v2 + 2084961057) ^ v9;
  *(void *)(v4 - 160) = v11;
  *(_DWORD *)(v4 - 152) = v9;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0x68D)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 176)))(v12);
}

uint64_t sub_1DA72C894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((v7 + 44) ^ (16
                                            * ((*(_DWORD *)(v9 + v8 * (uint64_t)a7 + 40) & 8) != ((v7 - 271) | 0x11) - 25)))))();
}

void sub_1DA72C8D0()
{
}

uint64_t sub_1DA72C8DC(uint64_t a1, int a2)
{
  BOOL v9 = v4 < v3;
  if (v9 == v5 + ((v2 - 866) ^ v6) > v7) {
    BOOL v9 = v3 + v5 + 1 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * a2) ^ v2)))();
}

uint64_t sub_1DA72C94C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v37 = 4 * (v31 - 1949362395);
  unsigned int v38 = *(_DWORD *)(v35 + 4 * (v31 - 1949362396));
  int v39 = (((v38 >> 30) ^ 1) + v34 - 4 * (v38 >> 31)) ^ v38;
  int v40 = ((v34 + 1566083941 * v39 - ((-1162799414 * v39) & 0xCDC5DB64)) ^ *(_DWORD *)(v35 + v37)) - v31;
  *(_DWORD *)(v35 + v37) = v40 - ((2 * v40 - 396242506) & 0xCDC5DB64) - 619456883;
  *(_DWORD *)(v36 - 124) = v33 + 1;
  *(_DWORD *)(v36 - 120) = ((a1 + 1520268742) ^ 0x6E) + v33;
  *(void *)(v36 - 112) = a30;
  *(_DWORD *)(v36 - 104) = a1 + 1520268742 - v33;
  *(void *)(v36 - 136) = (v31 + 1982321603) + v33;
  *(_DWORD *)(v36 - 144) = v33 ^ (a1 + 1520268742) ^ 0x79;
  *(_DWORD *)(v36 - 140) = 1691311166 - v33 + a1;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (a1 ^ (v30 - 2051))))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * *(int *)(v36 - 128)))(v41);
}

uint64_t sub_1DA72CA70@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 7 + (v4 - 2146171831 + v3 - v5)) = *(void *)(v1
                                                                              - 7
                                                                              + (v4 - 2146171831 + v3 - v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((709 * (v6 - (v2 & 0xFFFFFFF8) - 1457 == -v5)) ^ v6)))();
}

void sub_1DA72CAD4()
{
  STACK[0x538] = v0;
  STACK[0x578] = v2;
  STACK[0x478] = *(void *)(v3 + 8 * v1);
  JUMPOUT(0x1DA72CB6CLL);
}

uint64_t sub_1DA72CBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v27 - 104) = v23
                         + 1178560073 * ((2 * ((v27 - 120) & 0xF3A8730) - (v27 - 120) + 1891989706) ^ 0xDD52446F)
                         + 1386;
  *(void *)(v27 - 120) = v26;
  *(void *)(v27 - 112) = a23;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0x635)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((((v23 - 234) | 0x200) ^ 0x32C ^ (v23 - 1450717921) & 0x567833F6)
                                              * (v25 == 799057448)) ^ v23)))(v28);
}

uint64_t sub_1DA72CC84()
{
  return ((uint64_t (*)(void))STACK[0x4A0])();
}

uint64_t sub_1DA72CCB4()
{
  int v5 = 1755732067 * (((((v4 - 120) | 0x5F1E3904) ^ 0xFFFFFFFE) - (~(v4 - 120) | 0xA0E1C6FB)) ^ 0x7E277B20);
  *(void *)(v4 - 112) = v3;
  *(_DWORD *)(v4 - 120) = v5 + v1 + 1194;
  *(_DWORD *)(v4 - 116) = (((v1 - 1227214903) & 0x4925CFAF ^ 0x40109D1D) + v0) ^ v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 1270)))(v4 - 120);
  return sub_1DA72CD44(v6);
}

uint64_t sub_1DA72CD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v29 - 100) = v26
                         + ((1659477659 - ((v29 - 120) | 0x62E99E9B) + ((v29 - 120) | 0x9D166164)) ^ 0xF0E2796D) * v27
                         - 377;
  *(void *)(v29 - 120) = a25;
  *(void *)(v29 - 112) = a23;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 ^ 0xA81)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((61
                                              * (*(_DWORD *)(v29 - 104) == ((28 * (v26 ^ 0x28C)) ^ (v28 - 448))
                                                                         + ((v26 + 829977971) & 0xCE8789FD))) ^ v26)))(v30);
}

uint64_t sub_1DA72CE08()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((31 * (v0 < ((v1 + 1707766417) & 0x5886D38Eu) - 363283697)) ^ (v1 - 1101969888))))();
}

void sub_1DA72CE68()
{
}

uint64_t sub_1DA72CF0C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a3 + 1762029456) & 0x96F98DD3) + 1661) ^ (a3 - 962)) * (v3 == v4)) ^ a3)))();
}

uint64_t sub_1DA72CF58@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x48C];
  uint64_t v8 = (_DWORD *)STACK[0x408];
  unint64_t v9 = STACK[0x408] + 24 * v2;
  *(_DWORD *)(v9 + _Block_object_dispose(&STACK[0x360], 8) = v4;
  *(_DWORD *)(v9 + 12) = v5;
  *(void *)(v9 + 16) = STACK[0x3F0];
  *(_DWORD *)(v9 + 24) = v7;
  _DWORD *v8 = a1 + 1;
  int v10 = v3 + ((v1 - 275) | 0x109) - 968034786;
  BOOL v12 = v10 > -1820173027 && v10 < SLODWORD(STACK[0x3C8]);
  return (*(uint64_t (**)(void))(v6 + 8 * ((847 * v12) ^ (v1 - 224))))();
}

uint64_t sub_1DA72CFD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  BOOL v34 = a30 - a3 != 18 * (v31 ^ 0x35) + 331119586 || v30 == (((v31 ^ 0x35) - a6 + 467) ^ 0x78BFBFC6);
  return (*(uint64_t (**)(void))(v32 + 8 * ((220 * v34) ^ v31)))();
}

uint64_t sub_1DA72D034()
{
  return sub_1DA72D044();
}

uint64_t sub_1DA72D044()
{
  int v5 = v0 + 1294242472;
  int v6 = 1224239923 * ((2 * ((v4 - 192) & 0x234C0E80) - (v4 - 192) - 592187012) ^ 0x2E000CAB);
  *(_DWORD *)(v4 - 184) = v6 + v1 - 150;
  *(_DWORD *)(v4 - 180) = v5 ^ v6;
  *(void *)(v4 - 192) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x91B)))(v4 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x468])(v7);
}

void sub_1DA72D0D0()
{
}

uint64_t sub_1DA72D0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x68A89052B2EA55C0);
  int v8 = *(unsigned __int8 *)(v7 + (v3 - 1220938673)) ^ 0x5F;
  int v9 = ((*(unsigned __int8 *)(v7 + (((v6 & 0xE6004659) - 1220939164) ^ ((v6 & 0xE6004659) - 360)) + v3) ^ 0x5F) << 24) | ((*(unsigned __int8 *)(v7 + (v3 - 1220938675)) ^ 0x5F) << 16) | ((*(unsigned __int8 *)(v7 + (v3 - 1220938674)) ^ 0x5F) << 8) | v8;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((((v2 + v9 - 2 * (v9 & (v2 + 2) ^ v8 & 2) + 0x1000000) & 0xFFFFFF ^ 0xB9CBDD)
                                     - (*(_DWORD *)(a1 + 32) ^ v5) == -1188863161) | v6 & 0xE6004659)))();
}

uint64_t sub_1DA72D1C0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((74 * (v4 + 1 != v5 + 60)) ^ a3)))();
}

uint64_t sub_1DA72D2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1DA72D2E8(0, a2, v5 & 0xFFFFFFE0, (a5 + 513099498) & 0xE886A37B, (a5 + 119270503), 3449726797, 565);
}

uint64_t sub_1DA72D2E8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v10 = (v9 - a1 + a5);
  long long v11 = *(_OWORD *)(v8 + v10 - 15);
  long long v12 = *(_OWORD *)(v8 + v10 - 31);
  uint64_t v13 = a7 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 + a3 - 603 == a2) * a6) ^ a4)))();
}

uint64_t sub_1DA72D32C@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  LODWORD(STACK[0x3F0]) = a2;
  if (v38 == 1584496216)
  {
    int v41 = 15;
  }
  else
  {
    if (v38 != 1584496212)
    {
      LODWORD(STACK[0x3D8]) = 0;
      LODWORD(STACK[0x3E0]) = 0;
      goto LABEL_7;
    }
    int v41 = 18;
  }
  LODWORD(STACK[0x3E0]) = v41;
  LODWORD(STACK[0x3D8]) = 1;
LABEL_7:
  uint64_t v42 = a3 + 0x11127EB20C1B7716;
  LODWORD(STACK[0x3E8]) = a1 + 194;
  int v43 = 3804331 * ((v40 - 192) ^ 0x2E4183CC);
  *(_DWORD *)(v40 - 124) = v36 + ((a1 + 131) ^ 0xE8123F68) + v43;
  *(void *)(v40 - 136) = 0;
  *(_DWORD *)(v40 - 144) = a1 - v43 + 836;
  *(void *)(v40 - 192) = a3 + 0x11127EB20C1B7826;
  unint64_t v44 = STACK[0x400];
  *(void *)(v40 - 184) = a36;
  *(void *)(v40 - 176) = v44;
  *(void *)(v40 - 16_Block_object_dispose(&STACK[0x360], 8) = v42;
  *(void *)(v40 - 160) = v37 + 1168;
  *(void *)(v40 - 152) = 0;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (a1 + 1766)))(v40 - 192);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * ((1364 * (*(_DWORD *)(v40 - 128) == 2058996701)) ^ LODWORD(STACK[0x3E8]))))(v45);
}

void sub_1DA72D484()
{
  *(_DWORD *)(v3 - 136) = v0;
  *(_DWORD *)(v3 - 124) = v2;
  *(void *)(v3 - 120) = v1 - 7;
  *(_DWORD *)(v3 - 12_Block_object_dispose(&STACK[0x360], 8) = v2 & 0xFFFFFFF8;
  JUMPOUT(0x1DA72D4F8);
}

uint64_t sub_1DA72D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((1429 * (v9 == v11)) ^ ((int)a5 + (int)a3 - 427))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DA72D5FC@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 ^ 0x18A) - 1366) ^ a1) > 7) * (((v1 - 601361722) & 0x23D809C7) + 76)) ^ v1)))();
}

uint64_t sub_1DA72D64C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(a5 + 8 * ((((v6 + a1) & a2 ^ a3 ^ (16 * v6) ^ a4) * (v5 == 0)) ^ v6)))();
}

uint64_t sub_1DA72D680(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((29 * (v4 - v5 - (a3 ^ 0x5AEuLL) < 0x20)) ^ a3)))();
}

void sub_1DA72D6C0()
{
}

uint64_t sub_1DA72D750()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((220 * (v0 == ((((v1 + 1050) | 0x72) + 433289594) ^ 0x78BFBFC6))) ^ v1)))();
}

uint64_t sub_1DA72D7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((44 * (a8 + 1 != v9 + 48)) | v10)))();
}

uint64_t sub_1DA72D888(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, uint64_t a20,unsigned char *a21)
{
  int v23 = *(unsigned char **)(a8 + 96);
  v23[1167] = a21[19];
  v23[1166] = a21[18];
  v23[1165] = a21[17];
  v23[1164] = a21[16];
  v23[1163] = a21[15];
  v23[1162] = a21[14];
  v23[1161] = a21[13];
  v23[1160] = a21[12];
  v23[1159] = a21[11];
  v23[1158] = a21[10];
  v23[1157] = a21[9];
  v23[1156] = a21[8];
  v23[1155] = a21[7];
  v23[1154] = a21[6];
  v23[1153] = a21[5];
  v23[1152] = a21[4];
  v23[1151] = a21[3];
  v23[1150] = a21[2];
  v23[1149] = a21[1];
  v23[1148] = *a21;
  return (*(uint64_t (**)(void))(v22
                                           + 8
                                           * (int)((((v21 + 894813481) ^ 0xC3D09064 ^ (a3 - 1591) ^ (v21 + 894813481) & 0xCAAA3B7E)
                                                  * (*(_DWORD *)(a8 + 72) == a4 + 7)) ^ (v21 + 290))))(a18);
}

uint64_t sub_1DA72D9B4@<X0>(int a1@<W6>, int a2@<W8>)
{
  unint64_t v8 = STACK[0x408];
  *(_DWORD *)(v8 + 392) = a2;
  *(_DWORD *)(v8 + 396) = STACK[0x5BC];
  *(void *)(v8 + 400) = STACK[0x5A8];
  *(_DWORD *)(v8 + 40_Block_object_dispose(&STACK[0x360], 8) = 85258470 - v4 + LODWORD(STACK[0x48C]);
  *(void *)(v8 + 416) = STACK[0x3F0] + (v4 - 1157139139);
  int v9 = (*(uint64_t (**)(unint64_t, unint64_t))(v6 + v3 * (uint64_t)a1 + 8))(STACK[0x3A0], STACK[0x290]);
  return (*(uint64_t (**)(__n128))(v7
                                           + 8
                                           * ((767
                                             * (v2 + 2058996701 + v9 - ((v5 ^ 0xF57397A3) & (2 * v9)) == 2058998266)) ^ v5)))((__n128)0);
}

uint64_t sub_1DA72DA80()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((473 * (v1 - 1 > (int)(((v0 + 851) | 0xA0) ^ 0xFFFFFB1B))) ^ v0)))();
}

void sub_1DA72DAC0()
{
}

uint64_t sub_1DA72DB84(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + 1 == ((v8 + a5) & a6 ^ a3) + ((v8 + a5) & a6) + 16) * a4) ^ (v8 + a5) & a6)))();
}

uint64_t sub_1DA72DBDC@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v8 = ((a3 + 1331233527) & 0xCD4F3D65 ^ (v6 + 637)) + a2;
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(v5 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((11 * (a2 - 1 != a4)) ^ (a3 + v4))))();
}

uint64_t sub_1DA72DC30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * ((419
                                                               * (((v5 + 2) ^ (v3
                                                                                              + v2
                                                                                              + ((v5 + 924) ^ 0x80140267) < 8)) & 1)) ^ v5)))(v4, a2, (v5 - 255));
}

void sub_1DA72DC88()
{
}

void sub_1DA72DCFC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v6 = 535753261 * (((v5 - 144) & 0xBF3BDFB1 | ~((v5 - 144) | 0xBF3BDFB1)) ^ 0x4A302E61);
  *(_DWORD *)(v5 - 120) = (v3 - 522633461 + ((v2 + 179) | 0x15)) ^ v6;
  *(_DWORD *)(v5 - 116) = v6 + v2 + 785;
  *(void *)(v5 - 12_Block_object_dispose(&STACK[0x360], 8) = a2;
  *(void *)(v5 - 144) = a1;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 + 1678)))(v5 - 144);
  JUMPOUT(0x1DA703730);
}

uint64_t sub_1DA72DD84(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v13 = (unsigned int *)(v9 + 4 * v8);
  uint64_t v14 = v8 + 1;
  int v15 = *(_DWORD *)(v9 + 4 * v14);
  unsigned int v16 = (((v6 - 1376) | a6) + a3) ^ ((v15 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *uint64_t v13 = v13[397] ^ a1 ^ *(_DWORD *)(a5 + 4 * (v15 & 1)) ^ (v16 + v11 - (v10 & (2 * v16)));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v14 != 227) * a2) ^ v6)))();
}

uint64_t sub_1DA72DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int v49 = 1224239923 * ((((v48 - 168) | 0xB5513BC8) - ((v48 - 168) & 0xB5513BC8)) ^ 0x47E2C61F);
  STACK[0x338] = a23;
  *(_DWORD *)(v48 - 160) = v49 + v46 + 47;
  *(_DWORD *)(v48 - 156) = v49 ^ a12;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(v47 + 8 * (v46 + 1978)))(v48 - 168);
  uint64_t v51 = a46 & 0x3F;
  *(&a37 + (v51 ^ 0x16)) = -33;
  return (*(uint64_t (**)(uint64_t))(v47 + 8 * ((874 * ((v51 ^ 0x16) > 0x37)) ^ v46)))(v50);
}

uint64_t sub_1DA72DEE8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v17 = (a7 ^ v15)
      - 330819051
      + ((v9 ^ v15) & (a1 ^ v15) | (v9 ^ 0x49865CC1) & (v8 ^ v15))
      + *(_DWORD *)(a3 + 4 * (v7 + v14))
      + ((a6 - 150) ^ (v13 - 939) ^ *(_DWORD *)(v10 + 4 * (*(unsigned char *)(a2 + v7 + v14) - 30)));
  unsigned int v18 = (v17 + v15 - (v11 & (2 * v17))) ^ v15;
  int v19 = ((v18 << (*(unsigned char *)(a4 + v7 + v14) - 4)) | (v18 >> (4 - *(unsigned char *)(a4 + v7 + v14)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v12 + 8 * ((282 * (v7 + 1 == v16 + 32)) ^ a6)))(v19 + v15 - (v11 & (2 * v19)));
}

uint64_t sub_1DA72DFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  return (*(uint64_t (**)(void))(a58
                              + 8
                              * (int)(((*(void *)(v58 - 136)
                                      + ((*(void *)(v58 - 136) + 1342086048) & 0xB0016759)
                                      - 520)
                                     * (*(_DWORD *)(v58 - 124) == *(_DWORD *)(v58 - 128))) ^ *(void *)(v58 - 136))))();
}

void sub_1DA72E01C()
{
}

uint64_t sub_1DA72E028@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  BOOL v36 = v33 != ((a2 - a1 - 207) ^ 0x20A65868) || a33 != 1634517438;
  return (*(uint64_t (**)(void))(v34 + 8 * ((v36 * ((a2 ^ 0x7C6) + 565)) ^ a2)))();
}

uint64_t sub_1DA72E07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  BOOL v25 = HIDWORD(a12) < 0x40168735;
  if (v25 == v22 + 890135720 < (((v23 - 1659) | 0x42) ^ 0x40168767u)) {
    BOOL v25 = (v22 + 890135720) < HIDWORD(a12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((43 * !v25) ^ v23)))(a1, 890135720, HIDWORD(a12), a4, 43, 3396, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_1DA72E100()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 977)))(16);
  uint64_t v4 = *(unsigned char ***)(v1 + 8 * (int)(v2 & 0xF5565B27));
  *(unsigned char **)((char *)v4 - 4) = (unsigned char *)v3;
  uint64_t v4 = (unsigned char **)((char *)v4 - 4);
  (*(void (**)(void))(v0 + 8 * (v2 + 983)))();
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 977)))(8);
  uint64_t v6 = *(void *)(v1 + 8 * (v2 ^ 0x437));
  *(void *)(v6 - 4) = v5;
  void *v5 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v7 = *(void *)(v1 + 8 * (v2 - 1022));
  *(_DWORD *)uint64_t v7 = 0;
  **(_DWORD **)(v1 + 8 * (v2 ^ 0x434)) = 0;
  int v8 = *v4;
  int v9 = *(unsigned char **)(v6 - 4);
  v9[6] = 26;
  unsigned char *v8 = -77;
  void v9[4] = -34;
  uint64_t v10 = *(unsigned char **)(v1 + 8 * (v2 - 941));
  v10[6] = 81;
  v10[13] = 126;
  *(unsigned char *)(v7 + 25) = 68;
  v10[18] = -90;
  void v8[4] = 73;
  v10[8] = 15;
  *(unsigned char *)(v7 + 24) = 83;
  **(unsigned char **)(v1 + 8 * (v2 - 943)) = -113;
  v8[1] = 80;
  **(unsigned char **)(v1 + 8 * (v2 - 1018)) = 88;
  v10[17] = 49;
  **(unsigned char **)(v1 + 8 * (v2 - 1017)) = 1;
  void v8[2] = -44;
  **(unsigned char **)(v1 + 8 * (v2 - 994)) = 51;
  v9[2] = 80;
  v8[6] = -11;
  **(unsigned char **)(v1 + 8 * (v2 - 982)) = 25;
  **(unsigned char **)(v1 + 8 * (v2 ^ 0x43C)) = 39;
  uint64_t v8[5] = -22;
  v8[3] = -15;
  v10[12] = 120;
  *(unsigned char *)(v7 + 10) = -52;
  v10[19] = -37;
  **(unsigned char **)(v1 + 8 * (v2 ^ 0x403)) = -109;
  v8[13] = 99;
  **(unsigned char **)(v1 + 8 * (v2 ^ 0x420)) = 119;
  v9[7] = -80;
  *int v9 = -122;
  char v8[8] = 34;
  v10[11] = -103;
  v8[11] = 54;
  *(unsigned char *)(v7 + 11) = 3;
  v9[1] = 73;
  v9[5] = -5;
  *(unsigned char *)(v7 - 4) = 23;
  *(unsigned char *)(v7 + 12) = -36;
  v9[3] = 59;
  int v11 = *v4;
  v11[10] = 45;
  v11[15] = -87;
  v10[15] = -110;
  v10[4] = 58;
  *(unsigned char *)(v7 + 21) = -92;
  v10[9] = -57;
  v10[14] = 62;
  *(unsigned char *)(v7 + 23) = 52;
  *uint64_t v10 = -17;
  *(_WORD *)(v7 + 6) = -3774;
  *(unsigned char *)(v7 + 1_Block_object_dispose(&STACK[0x360], 8) = -121;
  *(unsigned char *)(v7 + 16) = 77;
  *(unsigned char *)(v7 + 22) = 113;
  v11[9] = 31;
  v10[20] = 17;
  v10[10] = -18;
  *(unsigned char *)(v7 + 4) = -85;
  v10[5] = -57;
  v10[2] = 119;
  *(unsigned char *)(v7 - 2) = 34;
  v10[16] = 19;
  v11[12] = -86;
  v10[3] = -20;
  v11[7] = -90;
  v11[14] = -33;
  *(unsigned char *)(v7 - 1) = -98;
  *(unsigned char *)(v7 + 17) = -105;
  v10[7] = 62;
  *(unsigned char *)(v7 + 20) = -119;
  *(unsigned char *)(v7 + 26) = 58;
  *(unsigned char *)(v7 + _Block_object_dispose(&STACK[0x360], 8) = 73;
  *(unsigned char *)(v7 - 3) = -15;
  v10[1] = 86;
  *(unsigned char *)(v7 + 15) = 120;
  *(unsigned char *)(v7 + 9) = 69;
  *(_WORD *)(v7 + 13) = -4168;
  *(unsigned char *)(v7 + 5) = -105;
  *(unsigned char *)(v7 + 19) = 79;
  JUMPOUT(0x1DA72E998);
}

uint64_t sub_1DA72E9D8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((8 * (v1 != 826018275)) ^ 0x767u)))();
}

uint64_t sub_1DA72EA04(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  unsigned int v45 = ((a4 - 6505935) & 0xB77BFDF9) - v39 + 1378;
  int v40 = 1224239923 * ((((2 * (v38 - 128)) | 0xF7AB24B2) - (v38 - 128) + 69889447) ^ 0x9666F8E);
  *(_DWORD *)(v38 - 120) = v40 + a4 + 83;
  *(_DWORD *)(v38 - 116) = (a14 + 1486793781) ^ v40;
  *(void *)(v38 - 12_Block_object_dispose(&STACK[0x360], 8) = a11;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (a4 ^ 0x822)))(v38 - 128);
  uint64_t v42 = a37 & 0x3F;
  *(&a28 + (v42 ^ 0x16)) = -33;
  return (*(uint64_t (**)(uint64_t))(v37
                                            + 8 * (int)((((v42 ^ 0x16) > 0x37) * (v45 ^ 0xC6)) ^ a4)))(v41);
}

uint64_t sub_1DA72EB1C()
{
  LODWORD(STACK[0x2AC]) = v2;
  STACK[0x2C8] = v0;
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((224 * (((v1 - 1115) ^ 0xCEC3EF0B) + LODWORD(STACK[0x49C]) < v1 - 3443)) ^ v1)))();
}

uint64_t sub_1DA72EB64()
{
  STACK[0x5C0] = STACK[0x398];
  return ((uint64_t (*)(void))STACK[0x3E0])();
}

void sub_1DA72EB78()
{
}

void sub_1DA72EBC0()
{
}

void sub_1DA72EC4C()
{
}

uint64_t sub_1DA72EC54(uint64_t a1, int a2, int a3)
{
  BOOL v6 = v3 > 0x7F5A6F80;
  if (v6 == a2 - 1895394244 < (int)(((a3 + 68178519) & 0xFBEFAF9F) - 2136634123)) {
    BOOL v6 = a2 - 1895394244 < v5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((43 * v6) ^ a3)))();
}

uint64_t sub_1DA72ECD8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1876
                                * (((((a1 << (v5 - 35)) ^ (v4 + 2)) + v2 - (v4 & (2 * ((a1 << (v5 - 35)) ^ (v4 + 2))))) ^ v2) > v1)) ^ v5)))();
}

uint64_t sub_1DA72ED18()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 226) | 0xE2) ^ 0xA7) * (v2 != 0)) ^ (v0 + 815))))();
}

uint64_t sub_1DA72ED4C()
{
  BOOL v5 = v1 + 1244562167 > 392423613 || v1 + 1244562167 < v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 - 44) ^ 0x577) * v5) ^ v0)))();
}

uint64_t sub_1DA72ED8C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((**(void **)(v2 + 8 * (v0 - 633)) == 0) * (((v0 - 22) ^ 0x7B1) + 742)) ^ v0)))();
}

void sub_1DA72EDC4()
{
}

uint64_t sub_1DA72EE38@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (int)((((a1 & 0xF2B62F5F ^ 0x3B9) - 163) * (v3 != v2)) ^ a1 & 0xF2B62F5F)))();
}

uint64_t sub_1DA72EE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  if (a25 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v25
  }
                                                                                 + 8
                                                                                 * ((21
                                                                                   * (*(_DWORD *)(v26 - 160) == 1133293858)) ^ (a6 + 433290701))))(a1, a2, a10, 826018275, a15);
  if (a25 != 1) {
    JUMPOUT(0x1DA72F020);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v25
                                                                      + 8
                                                                      * ((202
                                                                        * (((*(_DWORD *)(v26 - 160) == 1133293858) ^ 0x7B) & 1)) ^ (a6 + 433291706))))(a1, a15, a10, 826018275);
}

uint64_t sub_1DA72F054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,int a42,int a43)
{
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((245
                                * (((((a43 - 1071230354) & 0x3FD9AFFB) - 1898891675) ^ (a10
                                                                                      - ((2 * a41) & 0xD1C5199E)
                                                                                      - 1166813270))
                                 - 67109504
                                 + ((2 * (a10 - ((2 * a41) & 0xD1C5199E) - 1166813270)) & 0xCC6765EE ^ 0xC045018E) != 1647554679)) ^ a43)))();
}

uint64_t sub_1DA72F120(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 + 1165) ^ 0x7E1) + 583) ^ ((a1 + 1165) | 0xC)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1DA72F154@<X0>(uint64_t a1@<X8>)
{
  int v6 = v5 - 1;
  uint64_t v7 = 4 * (int)(((v2 + 570) ^ 0xDF80EE17) + v5);
  *(_DWORD *)(*(void *)(v3 - 0x11127EB20C1B74FELL) + v7) = *(_DWORD *)(*(void *)(v4 - 0x11127EB20C1B74FELL) + v7);
  return (*(uint64_t (**)(void))(a1 + 8 * ((166 * (v6 == v1)) ^ v2)))();
}

uint64_t sub_1DA72F1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (((((v9 + 757) | 0x45) - 99) * (v7 == v8)) ^ v9)))(a1, a2, a3, a4, a5, a6, a7, v8 + 1400551919);
}

uint64_t sub_1DA72F1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 112) = (v17 - 1661) ^ (1374699841
                                         * ((((v18 - 144) | 0xA42EBFDA) - ((v18 - 144) & 0xA42EBFDA)) ^ 0xC9DAA7D3));
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = v13;
  *(void *)(v18 - 120) = v15;
  *(void *)(v18 - 144) = v14;
  *(void *)(v18 - 136) = v13;
  (*(void (**)(uint64_t))(v12 + 8 * (v17 ^ 0xF00)))(v18 - 144);
  int v19 = 1374699841 * ((((v18 - 144) | 0xA95C0B48) - (v18 - 144) + ((v18 - 144) & 0x56A3F4B0)) ^ 0xC4A81341);
  *(_DWORD *)(v18 - 140) = (v17 - 1128) ^ v19;
  *(_DWORD *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = -526266695 - v19 + v16;
  *(void *)(v18 - 136) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v17 + 223)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((58 * (*(_DWORD *)(v18 - 144) != ((v17 - 1799) | 0x244) + 1578364515)) ^ v17)))(v20);
}

void sub_1DA72F304()
{
}

uint64_t sub_1DA72F330()
{
  int v7 = v0 + v4;
  *(_DWORD *)(*v2 + 4 * (v7 - 1)) = v1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 - 2 >= 0) * v5) ^ v3)))();
}

uint64_t sub_1DA72F370(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((281
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v4) == v4 + v3 - 158)) ^ v3)))();
}

void sub_1DA72F3B0()
{
}

uint64_t sub_1DA72F744(uint64_t a1)
{
  int v6 = *(char *)(v1 + (v3 + v4 + 1262));
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((86
                                                      * (((v6 >= 0) ^ (11 * (((v5 + 88) | 0x6E) ^ 0x70))) & 1)) | v5)))(a1, ((2 * v6) & 0x1C6) + (*(unsigned __int8 *)(v1 + (v3 + v4 + 1262)) ^ 0xBD7C4FE3) + 1941944832);
}

void sub_1DA72F7C8(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 12) + 1178560073 * ((525534974 - (a1 | 0x1F5306FE) + (a1 | 0xE0ACF901)) ^ 0x4D3BC5A4);
  uint64_t v3 = *(void *)a1;
  unsigned int v5 = v1 + 460628867 * ((&v3 & 0x3D7BEA1D | ~(&v3 | 0x3D7BEA1D)) ^ 0x8E12979F) + 693;
  uint64_t v2 = (char *)*(&off_1F34B17C0 + (int)(v1 & 0xBE761888)) - 8;
  (*(void (**)(uint64_t *))&v2[8 * v1 + 14736])(&v3);
  __asm { BRAA            X8, X17 }
}

void sub_1DA72F8E8()
{
}

uint64_t sub_1DA72F8FC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = v9 + v8;
  int v14 = v13 + v10;
  if ((v13 + v10) <= 0x40) {
    int v14 = a4;
  }
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a8 - v13 + 817 >= a8 + a2 + a3 + ((v11 - 911) | 0x1A2u) + v14 + 399)
                                * (((v11 - 1271600040) & 0x4BCB139F) + 1040)) ^ v11)))();
}

void sub_1DA72F974(uint64_t a1)
{
  uint64_t v2 = (unint64_t *)*(&off_1F34B17C0
                           + (*((unsigned char *)off_1F34B19B8
                                                             + (*((unsigned __int8 *)off_1F34B1C20
                                                                + (-93
                                                                                  * (dword_1EA8E36D8 ^ 0xF0 ^ qword_1EA8E3538))
                                                                - 12) ^ 0xEFu)
                                                             - 4) ^ (-93 * (dword_1EA8E36D8 ^ 0xF0 ^ qword_1EA8E3538)))
                           + 2);
  unsigned __int8 v3 = -93 * ((qword_1EA8E3538 + *v2) ^ 0xF0);
  int v4 = (unint64_t *)*(&off_1F34B17C0
                           + (*((unsigned char *)off_1F34B1A38
                                               + (*((unsigned __int8 *)off_1F34B1940 + v3 - 8) ^ 0x24u)) ^ v3)
                           - 155);
  unint64_t v5 = 192840611 * (*v2 ^ (unint64_t)&v7 ^ 0x2F1F548F835ED4F0 ^ *v4);
  unint64_t *v2 = v5;
  *int v4 = v5;
  LODWORD(v4) = 192840611 * ((v5 + *(_DWORD *)v2) ^ 0x835ED4F0);
  LODWORD(v2) = *((unsigned __int8 *)off_1F34B19E0 + (-93 * ((v5 + *(unsigned char *)v2) ^ 0xF0)) - 8);
  uint64_t v6 = (char *)*(&off_1F34B17C0
               + ((-93 * ((qword_1EA8E3538 + dword_1EA8E36D8) ^ 0xF0)) ^ byte_1DA756D70[byte_1DA752540[(-93 * ((qword_1EA8E3538 + dword_1EA8E36D8) ^ 0xF0))] ^ 0xB8])
               - 4)
     - 8;
  (*(void (**)(char *, uint64_t (*)()))&v6[8
                                                   * ((*off_1F34B1CF8)[v2 ^ 0xB8] ^ v4)
                                                   + 14816])((char *)*(&off_1F34B17C0 + (v4 ^ (*off_1F34B1CF8)[v2 ^ 0x3C]) - 180)- 4, sub_1DA72A258);
  __asm { BRAA            X9, X17 }
}

void sub_1DA72FB34()
{
  *(_DWORD *)(v1 - 12_Block_object_dispose(&STACK[0x360], 8) = v0 - 1;
  JUMPOUT(0x1DA72FC30);
}

uint64_t sub_1DA72FCAC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 - 866) ^ 0x1A8) * (v1 != 1584496196)) ^ v0)))();
}

uint64_t sub_1DA72FCEC(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((208 * (((v1 == 0x2EC6FC03) ^ (a1 + 122)) & 1)) ^ a1)))(915506973);
}

uint64_t sub_1DA72FD40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1883 * (v5 == v7 + ((a3 + 1825786991) & 0x9CA75EDB) + 449 - 1179)) ^ (a5 + a3 - 304))))();
}

uint64_t sub_1DA72FD90(uint64_t a1)
{
  int v1 = 1224239923 * (((a1 ^ 0x84C2A454) & 0x3874D31 | ~(a1 ^ 0x84C2A454 | 0x3874D31)) ^ 0x8A09EB4D);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = (*(_DWORD *)(a1 + 12) ^ v1) - 1572052251;
  unsigned int v4 = v3 + (*(_DWORD *)(*(void *)a1 - 0x4696E7753303C8EELL) ^ 0x41DE6516);
  unsigned int v5 = v4 - ((2 * v4) & 0x83BCCA2C) + 1105093910;
  *(_DWORD *)(*(void *)a1 - 0x4696E7753303C8EELL) = v5;
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + v2 + 7) + ((((v5 ^ 0x41DE6516) >= v3) * (v2 - 91)) ^ v2) - 1))();
}

uint64_t sub_1DA72FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v75 = v72 & 0xB123C7F5;
  int v76 = 1374699841 * ((2 * ((v74 - 192) & 0x7D4C2088) - (v74 - 192) - 2102141071) ^ 0xEF47C778);
  *(void *)(v74 - 16_Block_object_dispose(&STACK[0x360], 8) = 0x7CD37ED9EC2B0D1;
  *(void *)(v74 - 184) = a72;
  *(void *)(v74 - 160) = a71;
  *(_DWORD *)(v74 - 192) = 1777521034 - v76;
  *(_DWORD *)(v74 - 18_Block_object_dispose(&STACK[0x360], 8) = (v72 & 0xB123C7F5) - v76 - 209;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (int)(v72 & 0xB123C7F5 ^ 0x61C)))(v74 - 192);
  BOOL v78 = *(_DWORD *)(v74 - 176) != (((v75 ^ 0x1FC) + 65) ^ 0x7AB9CB93);
  return (*(uint64_t (**)(uint64_t))(v73 + 8 * (int)((v78 | (4 * v78)) ^ v75)))(v77);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_1DA72FF7C()
{
}

void sub_1DA72FF84()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 16) == 0x510F57144876C81CLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 4) ^ (1755732067 * ((-2 - ((~v0 | 0x8E5EE2FA) + (v0 | 0x71A11D05))) ^ 0x50985F21));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1DA7300A4@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(void *)(v8 + 8);
  uint64_t v4 = *(void *)(v8 + 40);
  unsigned int v5 = (void *)(v2 - 184);
  memset((void *)(v2 - 184), 95, 16);
  int v6 = 235795823 * ((((v2 - 168) | 0x51267A54) - (v2 - 168) + ((v2 - 168) & 0xAED985A8)) ^ 0xC58B330D);
  _DWORD v5[2] = v3;
  v5[7] = v2 + 0x1B21A8FA2BFEFB39;
  *(_DWORD *)(v2 - 132) = (a1 + 1987) ^ v6;
  *(_DWORD *)(v2 - 160) = v6 + 779007285;
  void v5[4] = v2 - 204;
  v5[5] = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x81E)))(v2 - 168);
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(v2 - 136);
  return result;
}

void sub_1DA7301A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned char *a18, uint64_t a19, unsigned char *a20,uint64_t a21,unsigned char *a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned char *a32,unsigned char *a33,unsigned char *a34,uint64_t a35,unsigned char *a36,unsigned char *a37,unsigned char *a38,unsigned char *a39)
{
  unint64_t v44 = ((a6 ^ 0x90F8DB6F27A829B2)
       + 0x678CFE9BAA288574
       - (((v43 + 1084) - 0x30E602C8ABAEFA60) & (2 * (a6 ^ 0x90F8DB6F27A829B2)))) ^ v42;
  uint64_t v45 = v40 ^ (((a11 - 1900188695) | (unint64_t)(a12 << 32))
             - 0x7AFA1930FC3C1258
             - ((2 * ((a11 - 1900188695) | (unint64_t)(a12 << 32))) & 0xA0BCD9E0787DB50));
  unint64_t v46 = v45 ^ 0xA173397C065C8DEALL;
  uint64_t v47 = v45 ^ 0x5E8CC683F9A37215;
  unint64_t v48 = ((v45 ^ 0x5E8CC683F9A37215) - 0x4C5DF1BA0166B5ELL - ((2 * (v45 ^ 0x5E8CC683F9A37215)) & 0xF67441C8BFD32944)) ^ v41;
  uint64_t v49 = v48 ^ 0x629A61E2FE92CDE4;
  unint64_t v50 = v44 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v51 = v44 ^ 0x8ABB7B075CE8A96ELL ^ (v48 ^ 0x629A61E2FE92CDE4) & v46;
  unint64_t v52 = (v48 ^ 0x9D659E1D016D321BLL) & (v39 ^ 0x16B8E6E205B88D24) ^ v47 ^ v51;
  *((void *)&v53 + 1) = v52 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v53 = v52 ^ 0x8000000000000000;
  uint64_t v54 = v52 ^ __ROR8__(v52, 39) ^ (v53 >> 61);
  uint64_t v55 = (v44 ^ 0x754484F8A3175691) & v47;
  uint64_t v56 = v51 ^ 0xF38BFF733C051F6;
  unint64_t v57 = a6 ^ 0x90F8DB6F27A829B2 ^ v39 ^ 0x16B8E6E205B88D24;
  unint64_t v58 = v55 ^ v57;
  unint64_t v59 = ((v55 ^ v57) & 0x200000000 ^ 0xA47FBFFEB6FFF65FLL) + 2 * ((v55 ^ v57) & 0x200000000);
  unint64_t v60 = v59 + 0x5B804001490009A1;
  unint64_t v61 = v59 + 0x7FBDECAF5FFFA000;
  unint64_t v62 = 0xC8BD6CACCDFF8CBELL - v59;
  if ((v60 & v56) == 0) {
    unint64_t v62 = v61;
  }
  unint64_t v63 = ((v56 + v62 - 0x243DACAE16FF965FLL) ^ (0x243DACAE16FF965FLL - (v56 + v62)) ^ ((v58 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v56 + v62 - 0x243DACAE16FF965FLL) ^ v58 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v58 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v64 = v63 - ((2 * v63) & 0xACC280CF1BF29E7ELL) - 0x299EBF987206B0C1;
  *((void *)&v65 + 1) = v64 ^ 0x14F3F;
  *(void *)&long long v65 = v64 ^ 0xD66140678DF80000;
  uint64_t v66 = ((v65 >> 19) - ((2 * (v65 >> 19)) & 0xACC280CF1BF29E7ELL) - 0x299EBF987206B0C1) ^ v64;
  uint64_t v67 = (v58 << 23) ^ (v58 >> 7) ^ ((v58 >> 41) | (v58 << 57)) ^ 0x1EC655AF97FB0312;
  uint64_t v68 = v58 ^ 0x11F3BF598A5F6DFLL ^ (v67 - ((2 * v67) & 0x6C4C380591D46C5ALL) - 0x49D9E3FD3715C9D3);
  unint64_t v69 = v68 ^ (v64 << 36) ^ (v66 & 0x88A7E47BC54E7E29 ^ ((v64 >> 28) ^ 0xD66140678) & 0xBC54E7E29 | v66 & 0x77581B843AB181D6 ^ ((v64 >> 28) ^ 0xD66140678) & 0x43AB181D6);
  unint64_t v70 = v50 & ~v57;
  unint64_t v71 = v49 ^ v57 & (v39 ^ 0xE947191DFA4772DBLL);
  unint64_t v72 = v71 ^ v39 ^ 0x16B8E6E205B88D24 ^ v70;
  unint64_t v73 = ((v72 >> 10) ^ (v72 >> 17) | (v72 << 54)) ^ 0xF5EC3F377C10F093;
  uint64_t v74 = (v73 - ((2 * v73) & 0x4404AF57D33E40B2) - 0x5DFDA8541660DFA7) ^ v72;
  unint64_t v75 = (v74 ^ 0x139DB59FC20A478ELL) & 0x4C1D4E44A4B3031DLL ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | (v74 ^ 0x139DB59FC20A478ELL) & 0xB3E2B1BB5B4CFCE2 ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v76 = v75 - 2 * (v75 & 0x49E67F9AF178ACB9 ^ v74 & 0x20) + 0x49E67F9AF178AC99;
  unint64_t v77 = v76 ^ (v68 - ((2 * v68) & 0x93CCFF35E2F15932) + 0x49E67F9AF178AC99);
  unint64_t v78 = v69 ^ 0xDF94F3F000000000;
  *((void *)&v65 + 1) = ~v71;
  *(void *)&long long v65 = v71 ^ 0x92CFC162FD513142;
  unint64_t v79 = v71 ^ 0xFA8C1B5242234448 ^ (((v71 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v71 << 58) ^ 0xC00000000000000)) & 0xD000000000000000)
                                    + 0x6843DA30BF72750BLL);
  uint64_t v80 = (v79 - ((2 * v79) & 0x21C80F131372A00ELL) - 0x6F1BF8767646AFF9) ^ (v65 >> 1) ^ ((v71 ^ 0x92CFC162FD513166) >> (v58 & 6 ^ 2) >> (v58 & 6 ^ 4)) ^ v54 ^ 0xE34AEE6C6AA4E142;
  unint64_t v81 = (v76 ^ 0xB61980650E875366) & v68 ^ v80;
  unint64_t v82 = v81 ^ v76 ^ (((v69 ^ 0xDF94F3F000000000) & ~v77)
                   - ((2 * ((v69 ^ 0xDF94F3F000000000) & ~v77)) & 0x93CCFF35E2F15932)
                   + 0x49E67F9AF178AC99);
  unint64_t v83 = ((v82 >> 10) & 0x2000000000000 | (((((v82 >> 10) & 0x2000000000000) >> 49) & 1) << 50)) ^ 0x6FBBF7FFC4BFCFFFLL;
  BOOL v84 = ((v83 - 0x6FBBF7FFC4BFCFFFLL) & (v82 ^ 0x28E000000000000)) == 0;
  unint64_t v85 = (v69 ^ 0x206B0C0FFFFFFFFFLL) & (v54 ^ 0x73AEE9E5E31DB145) ^ v77;
  unint64_t v86 = ((v85 >> 41) ^ (v85 >> 7) | (v85 << 57)) ^ (v85 << 23) ^ 0xF774B04353CE1CF4;
  unint64_t v87 = v86 - ((2 * v86) & 0xE9F16EA956A74094) + 0x74F8B754AB53A04ALL;
  unint64_t v88 = v83 - 0x21211F240004849;
  unint64_t v89 = 0xDD65DE0D497F57B5 - v83;
  if (!v84) {
    unint64_t v88 = v89;
  }
  unint64_t v90 = (v82 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v82 ^ 0x28FA59BDD48D0B6) - 0x6DA9E60D84BF87B6 + v88);
  uint64_t v91 = ((v90 >> 38) & 0x2A35FE4) + (v90 >> 39) - 2 * ((v90 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v92 + 1) = v82 ^ 0xD0B6;
  *(void *)&long long v92 = v82 ^ 0x28FA59BDD480000;
  uint64_t v93 = (((v91 << 39) ^ (v82 << 54)) & 0xFFFFFF8000000000 | ((v91 ^ (v90 << 25)) >> 25)) ^ (v92 >> 17);
  unint64_t v94 = (((v76 ^ 0x49E67F9AF178AC99) & ~v80)
       - ((2 * ((v76 ^ 0x49E67F9AF178AC99) & ~v80)) & 0x21C80F131372A00ELL)
       - 0x6F1BF8767646AFF9) ^ v54 ^ 0xE34AEE6C6AA4E142;
  unint64_t v95 = v78 ^ v80 & (v54 ^ 0x8C51161A1CE24EBALL);
  unint64_t v96 = v94 ^ v95;
  unint64_t v97 = (8 * v96) ^ (v96 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a17
                                                                                     + (((v96 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v96 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v96 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v98 = v96 ^ 0xC645A35C26D77CBFLL ^ (v97 - ((2 * v97) & 0x2204C4158305A4D2) - 0x6EFD9DF53E7D2D97);
  unint64_t v99 = v98 + ((v96 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v98 & ((v96 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v100 = v87 ^ v85;
  unint64_t v101 = v85 ^ v95;
  *(void *)&long long v92 = __ROR8__(__ROR8__(v101 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v102 = v101 ^ 0xAC7C0FF4012565E3 ^ ((v101 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v92 >> 28) ^ ((void)v92 << 36) ^ ((void)v92 << 45) ^ v87 ^ v85;
  *((void *)&v92 + 1) = v102 ^ 0xFFFFFF0F;
  *(void *)&long long v92 = v102 ^ 0xEEC08BAC2AD3D400;
  unint64_t v103 = (((unint64_t)(v92 >> 9) ^ 0x284B28057C49B8D1) >> (v71 & 0x37 ^ 3) >> (v71 & 0x37 ^ 0x34)) ^ (((unint64_t)(v92 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL;
  uint64_t v104 = v99 - 2 * (v99 & 0x7C1AB28A5E34EF7BLL ^ v98 & 9) - 0x3E54D75A1CB108ELL;
  unint64_t v105 = v93 ^ 0x8557F9309BB51A6BLL;
  unint64_t v106 = v93 ^ 0x8557F9309BB51A6BLL ^ v100;
  unint64_t v107 = v106 ^ 0xEEC08BAC2AD3D50FLL ^ (v104 ^ 0xFC1AB28A5E34EF72) & v103;
  *((void *)&v92 + 1) = v107 ^ 0x118501E2B14;
  *(void *)&long long v92 = v107 ^ 0x26974A0000000000;
  uint64_t v108 = v107 ^ 0x1EAD1C5D9B6851CELL ^ (((v92 >> 41) ^ (v107 << 57) ^ 0x2800000000000000)
                                      - 2
                                      * (((v92 >> 41) ^ (v107 << 57) ^ 0x2800000000000000) & 0x383A5745CB767ADBLL ^ (v92 >> 41) & 1)
                                      + 0x383A5745CB767ADALL);
  uint64_t v109 = v108 + ((v107 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v108 & ((v107 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v110 = v81 ^ 0x1E251EFE9011540ELL ^ (((v81 >> 1) ^ (v81 >> 6) ^ (v81 << 58) ^ 0xDE1FAE11AA0A9F1DLL)
                                     - 2
                                     * (((v81 >> 1) ^ (v81 >> 6) ^ (v81 << 58) ^ 0xDE1FAE11AA0A9F1DLL) & 0x71606961394E9436 ^ ((v81 >> 1) ^ (v81 >> 6)) & 2)
                                     + 0x71606961394E9434);
  unint64_t v111 = v110 & 0xF47FF077890F9720 ^ (v81 << 63) | v110 & 0xB800F8876F068DFLL;
  unint64_t v112 = (v106 ^ 0xEEC08BAC2AD3D50FLL) & (v93 ^ 0x7AA806CF644AE594);
  unint64_t v113 = ((v106 ^ 0x113F7453D52C2AF0) & (v102 ^ 0xEEC08BAC2AD3D50FLL))
       - ((2 * ((v106 ^ 0x113F7453D52C2AF0) & (v102 ^ 0xEEC08BAC2AD3D50FLL))) & 0xDD51B799A16F7D06);
  unint64_t v114 = v104 ^ (v111
               - 0x3E54D75A1CB108ELL
               - 2
               * (((v110 & 0xF47FF077890F9720 ^ (v81 << 63)) & 0x7C1AB28A5E34EF7ELL | v110 & 0x80002885630685ELL) ^ v110 & 0xC));
  unint64_t v115 = v112 ^ v114;
  uint64_t v116 = v112 ^ v114 ^ v105 ^ (v113 - 0x115724332F48417DLL);
  *((void *)&v92 + 1) = v116 ^ 0x1B5;
  *(void *)&long long v92 = v116 ^ 0x9DD877A480877400;
  uint64_t v117 = v116 ^ 0xEEA8DBCCD0B7BE83 ^ ((v116 ^ 0xEEA8DBCCD0B7BE83) >> 17) ^ (v92 >> 10) ^ ((v116 ^ 0xEEA8DBCCD0B7BE83) << 47);
  uint64_t v118 = v109 + (v117 ^ 0x16EB95D00604E32ELL) - 2 * (v109 & (v117 ^ 0x16EB95D00604E32ELL));
  unint64_t v119 = v102 ^ 0x1D782A4B5929F570 ^ (((v104 ^ 0x3E54D75A1CB108DLL) & v111)
                                      - ((2 * ((v104 ^ 0x3E54D75A1CB108DLL) & v111)) & 0xE77143CEE7F440FELL)
                                      - 0xC475E188C05DF81);
  unint64_t v120 = ((v119 ^ v105 & ~v114) - ((2 * (v119 ^ v105 & ~v114)) & 0xF8356514BC69DEE4) - 0x3E54D75A1CB108ELL) ^ v104;
  *((void *)&v92 + 1) = v120 ^ 0x38FE43D2BCLL;
  *(void *)&long long v92 = v120 ^ 0x3278F80000000000;
  unint64_t v121 = __ROR8__(v120, 61) ^ (v120 << 25) ^ __ROR8__((v92 >> 38) ^ (v120 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v92 + 1) = v115 ^ 0x548B80C;
  *(void *)&long long v92 = v115 ^ 0x7955EAEC48000000;
  unint64_t v122 = ((v115 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v92 >> 27);
  unint64_t v123 = (v115 >> 6) ^ (v115 >> 1) ^ (((v122 << 27) ^ (v115 << 63)) & 0xFFFFFFFFF8000000 | (v122 >> 37));
  unint64_t v124 = v121 ^ v123;
  unint64_t v125 = v121 ^ v123 ^ 0xC51AEF5B5CC303B1;
  unint64_t v126 = v118 & (v117 ^ 0xE9146A2FF9FB1CD1) ^ v125;
  unint64_t v127 = (v126 >> 1) ^ (v126 >> 6);
  unint64_t v128 = (v127 | (v126 << 63)) ^ (v126 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v129 = v126 ^ 0x43EF266BA097FE9DLL ^ (v128 - 2 * (v128 & 0x10353858C0287AB7 ^ v127 & 0x10) - 0x6FCAC7A73FD78559);
  uint64_t v130 = v129 - ((2 * v129) & 0x7176B88E82892E0);
  unint64_t v131 = (v123 ^ 0x853759C940934A2BLL) + (v125 | v121 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v132 = v119 ^ v107;
  uint64_t v133 = (v132 >> 19) ^ (v132 << 36) ^ (v132 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v134 = (v132 >> 28) ^ 0x6E04C1591;
  unint64_t v135 = v132 ^ 0x835F4CBA58982471 ^ (v133 - ((2 * v133) & 0xDAB71BC69A6744F6) - 0x12A4721CB2CC5D85);
  unint64_t v136 = (v135 & 0x26452CB7C950B7B6 ^ v134 & 0x7C950B7B6 | v135 & 0xD9BAD34836AF4849 ^ v134 & 0x836AF4849) ^ v109;
  unint64_t v137 = v131 & 1;
  unint64_t v138 = (v131 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v131) & 0x89C662ABFD208ADCLL) + 0x44E33155FE90456ELL;
  if ((v137 & v136) != 0) {
    uint64_t v139 = v136 - v137 - ((2 * (v136 - v137)) & 0x89C662ABFD208ADCLL) + 0x44E33155FE90456ELL;
  }
  else {
    uint64_t v139 = v136 ^ 0x44E33155FE90456ELL ^ v137;
  }
  unint64_t v140 = v139 ^ v138;
  unint64_t v141 = (v124 ^ 0x3AE510A4A33CFC4ELL) & (v117 ^ 0x16EB95D00604E32ELL) ^ v121 ^ 0x402DB6921C50499ALL ^ v139 ^ v138;
  unint64_t v142 = ((8 * v141) ^ 0x12BB25DAC3BED128) & (v141 ^ 0x425764BB5877DA20) ^ __ROR8__(v141, 39) ^ (v141 ^ 0x2E3936D3396BB027 ^ (((v141 >> 61) ^ 2) + ((v141 >> 60) | 0xFFFFFFFFFFFFFFFBLL) + 0x6C6E5268611C6A03) | (8 * v141) ^ 0x12BB25DAC3BED128);
  unint64_t v143 = ((v142 ^ 0xF53B5A703E90E7B9 ^ (v130 - 0x7C744A3B8BEBB690)) & 0xA9AD36174A77719DLL | (v142 ^ 0xF53B5A703E90E7B9 ^ (v130 + 0x38BB5C474144970)) & 0x5652C9E8B5888E62)
       - 2
       * (((v142 ^ 0xF53B5A703E90E7B9 ^ (v130 - 0x7C744A3B8BEBB690)) & 0x2828101502744095 | (v142 ^ 0xF53B5A703E90E7B9 ^ (v130 + 0x38BB5C474144970)) & 0x4042010885000C62) ^ (v142 ^ 0xF53B5A703E90E7B9 ^ (v130 - 0x7C744A3B8BEBB690)) & 5);
  uint64_t v144 = (v121 ^ 0x402DB6921C50499ALL) & ~v136 ^ v118;
  unint64_t v145 = ((v144 + (v144 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v144;
  unint64_t v146 = v145 - ((2 * v145) & 0xF8820D0A2651458ELL) + 0x7C4106851328A2C7;
  uint64_t v147 = (v146 & 0x10000000000000 ^ 0x7E7FFBFFBB279EFCLL) + 2 * (v146 & 0x10000000000000);
  uint64_t v148 = v147 + 0x180040044D86104;
  uint64_t v149 = v147 - 0x1011103128030630;
  unint64_t v150 = 0xECEEE7CE4E4C37C8 - v147;
  uint64_t v151 = (v146 >> 7) ^ 0xF8820D0A265145;
  if ((v148 & v151) == 0) {
    unint64_t v150 = v149;
  }
  unint64_t v152 = v146 & 0xFFEFFFFFFFFFFFFFLL ^ (v146 >> 41) ^ (v151 - 0x6E6EEBCE932498CCLL + v150);
  unint64_t v153 = (v146 << 23) ^ (v146 << 57) ^ 0xB0C892D470968244 ^ v152;
  unint64_t v154 = v126 ^ v117 ^ ((v136 & ~v118) - ((2 * (v136 & ~v118)) & 0x906EBF3724026176) + 0x48375F9B920130BBLL);
  unint64_t v155 = (v154 & 0x1000000000 | (v154 << 47)) ^ v154 & 0xFFFFFFEFFFFFFFFFLL ^ ((v154 >> 10) ^ (v154 >> 17) | (v154 << 54));
  *((void *)&v156 + 1) = v155 ^ 0x3770D01E34;
  *(void *)&long long v156 = v155 ^ 0x317174000000000;
  uint64_t v157 = v155 ^ 0x3CDDDC3B39C6B428;
  uint64_t v158 = (v153 - 2 * (v153 & 0x3FCACB4C4916AA1ELL ^ v152 & 2) + 0x3FCACB4C4916AA1CLL) ^ v155 ^ 0x3CDDDC3B39C6B428;
  uint64_t v159 = (v143 + 0x686A111D87744CF2) ^ v158 & (__ROR8__((v156 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v160 = ((v159 ^ 0xFA5115E9AC744C49) + 0x6DC4FB0BD4FFFF45) ^ ((v159 ^ 0x9795EEE2788BB30DLL) + 1);
  unint64_t v161 = v160 - ((2 * v160) & 0xEFA810E869F2441CLL);
  unint64_t v162 = v159 ^ 0x9FBE1969B38D6EFCLL;
  unint64_t v163 = (v161 - 0x82BF78BCB06DDF2) ^ v159 ^ 0x9FBE1969B38D6EFCLL;
  unint64_t v164 = v163 - ((2 * v163 - 0x247609E856000178) & 0xAD37A720ABD31FE0) - 0x3B9F3163D51670CCLL;
  *((void *)&v156 + 1) = (v163 - ((2 * v163 - 1442840952) & 0xABD31FE0) + 719949620) ^ 0x30;
  *(void *)&long long v156 = v164 ^ 0x569BD39055E98FC0;
  uint64_t v165 = (((v156 >> 6) ^ (v164 >> 1) ^ ((v163 << 63) | 0x2B4DE9C82AF4C7F8))
        + 0x569BD39055E98FC0
        - 2
        * (((v156 >> 6) ^ (v164 >> 1) ^ ((v163 << 63) | 0x2B4DE9C82AF4C7F8)) & 0x569BD39055E98FF1 ^ ((v156 >> 6) ^ (v164 >> 1)) & 1)
        + 48) ^ v164;
  uint64_t v166 = (v143 + 0x686A111D87744CF2) ^ 0x686A111D87744CF2;
  uint64_t v167 = (((2 * (v143 + 0x686A111D87744CF2)) ^ 0x2F2BDDC4F117661BLL) + v166) & (v155 ^ 0x317177770D01E34);
  uint64_t v168 = v167 - ((2 * v167) & 0x7176B88E82892E0) - 0x7C744A3B8BEBB690;
  unint64_t v169 = (v140 - ((2 * v140) & 0x26502C468B914B38) + 0x1328162345C8A59CLL) ^ v144;
  uint64_t v170 = ((v169 ^ 0x1328162345C8A59CLL) << 45) ^ ((v169 ^ 0x1328162345C8A59CLL) << 36) ^ v153 ^ __ROR8__((((v169 ^ 0x1328162345C8A59CLL) >> 30) | ((unint64_t)~(v169 >> 28) << 62)) ^ __ROR8__(v169 ^ 0xC280844CB863FFF3 ^ (((v169 >> 19) ^ 0x109BD638D664) - ((2 * ((v169 >> 19) ^ 0x109BD638D664)) & 0x2B1416875FCALL) + 0x465E358A0B43AFE5), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v171 = v166 & (v142 ^ 0x894F104BB57B5136) ^ v170 ^ 0xE87B635F1624B3E6;
  unint64_t v172 = v171 ^ v142 ^ 0xF53B5A703E90E7B9 ^ v168;
  *((void *)&v156 + 1) = v172 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v156 = v172 ^ 0x6000000000000000;
  uint64_t v173 = v172 ^ __ROR8__(v172, 39) ^ (v156 >> 61);
  unint64_t v174 = ((v170 ^ 0x3D9656FDEA6A2FLL ^ -(v170 ^ 0x3D9656FDEA6A2FLL) ^ ((v170 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v142 ^ 0x76B0EFB44A84AEC9) ^ v158;
  unint64_t v175 = v174 ^ 0x2DB5B6AF87F64351 ^ ((v174 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v174 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v174 ^ 0x2DB5B6AF87F64351) >> 41) | ((v174 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v176 = (((v170 ^ 0xE87B635F1624B3E6) & ~v158)
        - ((2 * ((v170 ^ 0xE87B635F1624B3E6) & ~v158)) & 0x7F959698922D5438)
        + 0x3FCACB4C4916AA1CLL) ^ v157;
  unint64_t v177 = (v176 - ((2 * v176) & 0xEFA810E869F2441CLL) - 0x82BF78BCB06DDF2) ^ v162;
  unint64_t v178 = v177 ^ (v177 << 54) ^ (v177 << 47) ^ (v177 >> 10) ^ (v177 >> 17);
  unint64_t v179 = v174 ^ __ROR8__(__ROR8__(v171, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v180 = ((v179 >> 19) ^ (v179 >> 28) | (v179 << 45)) ^ 0x21278C61855392E3;
  uint64_t v181 = v179 ^ (v179 << 36) ^ v175 ^ (v180 - ((2 * v180) & 0x1865EDB5F3A8169ELL) + 0xC32F6DAF9D40B4FLL);
  uint64_t v182 = v181 ^ 0x2B1FD15C4D950273;
  unint64_t v183 = v178 ^ 0xB773BAECF1386B27 ^ (v175 - ((2 * v175) & 0xD4B57CFEE599BE14) + 0x6A5ABE7F72CCDF0ALL);
  unint64_t v184 = (v181 ^ 0xD4E02EA3B26AFD8CLL) & (v173 ^ 0xA9109542E9BBBCELL) ^ v183;
  unint64_t v185 = v165 & (v173 ^ 0xF56EF6ABD1644431) ^ v181 ^ 0x2B1FD15C4D950273;
  *((void *)&v156 + 1) = v185 ^ v184 ^ 0x62F93;
  *(void *)&long long v156 = v185 ^ v184 ^ 0x69309AC4CA80000;
  uint64_t v186 = v185 ^ v184 ^ 0xA9A936131397B90 ^ (((v156 >> 19) ^ ((v185 ^ v184) << 36) ^ 0xCAE2F93000000000)
                                            - 2
                                            * (((v156 >> 19) ^ ((v185 ^ v184) << 36) ^ 0xCAE2F93000000000) & 0xC099ACD7D97541BLL ^ (v156 >> 19) & 0x18)
                                            + 0xC099ACD7D975403);
  uint64_t v187 = (v186 ^ -v186 ^ ((((v185 ^ v184) >> 28) ^ 0x69309AC4) - (v186 ^ ((v185 ^ v184) >> 28) ^ 0x69309AC4)))
       + (((v185 ^ v184) >> 28) ^ 0x69309AC4);
  unint64_t v188 = v187 + 0x678CFE9BAA288574 - ((2 * v187) & 0xCF19FD3754510AE8);
  LOBYTE(v187) = *(unsigned char *)(a31 + ((v187 + 116 - ((2 * v187) & 0xE8)) ^ 0x32));
  *a36 = BYTE1(v188) ^ 0x85;
  a22[5] = ((v187 ^ 0x94) >> 6) | (4 * (v187 ^ 0x94));
  uint64_t v189 = (v188 >> 12) & 0xF0 | (v188 >> 20) & 0xF;
  char v190 = (v189 ^ 0xC9) + (v189 ^ 0x5C);
  v189 ^= 0x7CuLL;
  *a37 = (*(unsigned char *)(a17 + v189) ^ 0xA1) + v190 - 2 * (v190 & (*(unsigned char *)(a17 + v189) ^ 0xA1)) - 122;
  unsigned __int8 v191 = *(unsigned char *)(a31 + (BYTE3(v188) ^ 0xECLL)) ^ 0x94;
  *a38 = (v191 >> 6) | (4 * v191);
  v173 ^= 0x9C0208CC104EA601;
  uint64_t v192 = (v165 - ((2 * v165) & 0x2D2603307DAA3B9ELL) - 0x696CFE67C12AE231) ^ v173;
  unint64_t v193 = (((v178 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v185)
        - ((2 * ((v178 ^ 0xDD29049383F4B42DLL) & ~v192 ^ v185)) & 0x2D2603307DAA3B9ELL)
        - 0x696CFE67C12AE231) ^ v173;
  *(void *)&long long v156 = __ROR8__((v193 >> 13) & 0x7000000000000 ^ __ROR8__(v193 ^ 0x28AFD6B669C383EBLL ^ (((8 * v193) ^ (v193 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v193) ^ (v193 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0x9559B1C3CD741D60)+ 0x4AACD8E1E6BA0EB1), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v194 = (v156 ^ -(uint64_t)v156 ^ (((v193 >> 39) ^ 0xC4061C) - (v156 ^ (v193 >> 39) ^ 0xC4061C)))
       + ((v193 >> 39) ^ 0xC4061C);
  LODWORD(v185) = *(unsigned __int8 *)(a16
                                     + ((((v188 >> 31) & 0xB8 ^ 0x30) + (BYTE4(v188) ^ 0x47)) ^ 0x77));
  DWORD1(v156) = (v185 >> 6) ^ 0x7F ^ -((v185 >> 6) ^ 0x7F) ^ (((v185 >> 6) | (8 * v185))
                                                                                         - 127);
  LODWORD(v156) = (DWORD1(v156) + 4 * v185) << 24;
  a22[1] = v194 ^ 0xAC;
  a26[6] = (BYTE6(v188) ^ 0x8C) - 2 * ((BYTE6(v188) ^ 0x8C) & 0x1F ^ BYTE6(v188) & 1) + 30;
  a22[4] = BYTE2(v194) ^ 0x24;
  *a20 = (unint64_t)v156 >> 26;
  unint64_t v195 = v192 ^ (v178 ^ 0x22D6FB6C7C0B4BD2) & v175;
  unint64_t v196 = ((v195 ^ v182 & ~v183) + 0x6A5ABE7F72CCDF0ALL + (~(2 * (v195 ^ v182 & ~v183)) | 0x2B4A83011A6641EBLL) + 1) ^ v178 ^ 0xB773BAECF1386B27;
  unint64_t v197 = v196
       - ((2 * v196) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v196 - ((2 * v196) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xF2A878DF669FFEFELL)
       + 0x79543C6FB34FFF7FLL;
  unint64_t v198 = v184 ^ (v184 << 23) ^ ((v184 >> 7) ^ (v184 >> 41) | (v184 << 57));
  unint64_t v199 = (v195 >> 1) ^ (v195 >> 6) ^ ((v195 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v195 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v195 & 0x183B3BDBC4516A26 | v195 & 0xE7C4C4243BAE95D9 ^ (v195 << 63));
  a26[12] = (BYTE3(v194) ^ 0x72) - ((2 * (BYTE3(v194) ^ 0x72)) & 0x3C) + 30;
  *(unsigned char *)(a24 + 29) = HIBYTE(v188) ^ 0x67;
  a26[13] = (BYTE5(v188) ^ 0xFE) - ((2 * (BYTE5(v188) ^ 0xFE)) & 0x3C) + 30;
  a18[6] = (v194 ^ 0x12027FFB722459ACuLL) >> (v189 & 8) >> (~(_BYTE)v189 & 8);
  LODWORD(v184) = *(unsigned __int8 *)(a16 + (((BYTE4(v194) ^ 0xFB) - 36) ^ 0x77));
  a18[4] = BYTE6(v194) ^ 2;
  *a22 = HIBYTE(v194) ^ 0x12;
  a18[2] = ((unsigned __int16)((v195 >> 1) ^ (v195 >> 6) ^ v195) >> 8) ^ 5;
  *a39 = BYTE5(v194) ^ 0x7F;
  unint64_t v200 = v197 ^ (v197 << 47) ^ (v197 >> 10) ^ (v197 << 54);
  unint64_t v201 = v200 ^ (v197 >> 17);
  a22[2] = v199 ^ 0xDB;
  *a18 = ((((v184 >> 6) | (4 * v184)) ^ 0x7F) >> 2) | ((((v184 >> 6) | (4 * v184)) ^ 0x7F) << 6);
  LOBYTE(v184) = *(unsigned char *)(a13
                          + (((BYTE2(v199) ^ 0x76) + (BYTE2(v199) ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (BYTE2(v199) ^ 0x76));
  *a32 = BYTE3(v199) ^ 0x87;
  a22[3] = BYTE6(v199) ^ 0x5D;
  LOBYTE(v194) = (v184 ^ 0xF2 ^ (16 * v184) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v184 ^ 0xF2 ^ (16 * v184) & 0x40) >> 3) << ((v194 ^ 0xAC) & (v194 ^ 0x50)) << ((v194 ^ 0xAC) & (v194 ^ 0x50) ^ 3));
  LOBYTE(v184) = (HIBYTE(v199) ^ 0xA1) - ((2 * HIBYTE(v199)) & 0x3C);
  char v202 = (BYTE4(v199) ^ 0x3C) - 2 * ((BYTE4(v199) ^ 0x3C) & 0x1F ^ BYTE4(v199) & 1);
  a22[11] = v201 ^ 0x27;
  *(unsigned char *)(a24 + 2_Block_object_dispose(&STACK[0x360], 8) = BYTE5(v199) ^ 0x22;
  a22[13] = ((v194 >> 3) | (32 * v194)) ^ 0xA6;
  *a33 = BYTE2(v201) ^ 0x94;
  uint64_t v203 = (v201 >> 20) & 0xF0 | (v201 >> 28);
  a26[8] = v184 + 30;
  a26[17] = v202 + 30;
  a26[11] = (BYTE1(v201) ^ 0xF5) - ((2 * (BYTE1(v201) ^ 0xF5)) & 0x3C) + 30;
  LOBYTE(v201) = (v203 ^ 0xB5) + (v203 ^ 0x20);
  LOBYTE(v203) = *(unsigned char *)(a17 + (v203 ^ 0x95));
  *(unsigned char *)a24 = BYTE6(v200) ^ 0x35;
  *a34 = BYTE5(v201) ^ 0xD5;
  *(unsigned char *)(a24 + 15) = BYTE3(v198) ^ 0x79;
  a26[19] = v198 ^ 0x8C;
  a18[5] = BYTE1(v198) ^ 0x3D;
  a22[8] = BYTE2(v198) ^ 3;
  a26[18] = (v201 ^ v203 ^ 0xA1) - ((2 * (v201 ^ v203) + 12) & 0x3C) - 92;
  a22[6] = BYTE4(v201) ^ 0xCA;
  a18[7] = HIBYTE(v200) ^ 0x59;
  LOBYTE(v180) = *(unsigned char *)(a31 + (BYTE4(v198) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a24 + 14) = BYTE5(v198) ^ 0x49;
  a18[3] = HIBYTE(v198) ^ 0xBE;
  a18[1] = BYTE6(v198) ^ 0x75;
  *(unsigned char *)(a24 + 16) = (v180 >> 6) | (4 * v180);
  *(_DWORD *)(a24 + 4) = a14 - 242321202;
  JUMPOUT(0x1DA732430);
}

uint64_t sub_1DA732534@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v4 > v6;
  *(unsigned char *)(a1 + (v7 - 1793899650)) = *(unsigned char *)(v1 + (v7 - 1793899650));
  if (v9 == v7 - 751373016 < v2) {
    BOOL v9 = v7 - 751373016 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * (((v3 + 1388) | 0x85) - 84)) ^ v3)))();
}

uint64_t sub_1DA7325A0()
{
  BOOL v4 = v1 - 702533899 < (int)(v3 + 725726800);
  if (v3 > 0x54BE49AF != v1 - 702533899 < ((v0 - 49) | 0x11) - 1421757443) {
    BOOL v4 = v3 > 0x54BE49AF;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 - 627) | 0x298) ^ 0x774)) ^ v0)))();
}

uint64_t sub_1DA732624@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v38 = *(_DWORD *)(&a21 + ((v35 + v33) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v35 + v33)) = v38 ^ 0x61;
  *(unsigned char *)(a1 + (v35 + v33 + 1)) = (v34 ^ (v37 - 117))
                                                 + (BYTE1(v38) ^ 0xA3)
                                                 + (~(2 * (BYTE1(v38) ^ 0xA3)) | 0x41)
                                                 + 7;
  *(unsigned char *)(a1 + (v35 + v33 + 2)) = (BYTE2(v38) ^ 0x79) - ((2 * (BYTE2(v38) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a1 + (v35 + v33 + 3)) = (HIBYTE(v38) ^ 0xB6) - ((2 * (HIBYTE(v38) ^ 0xB6)) & 0xBF) + 95;
  BOOL v39 = v35 - 1789797759 < (a33 - 1143967590);
  if (v35 - 1789797759 < a2 != a33 - 1143967590 < a2) {
    BOOL v39 = a33 - 1143967590 < a2;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((81 * !v39) ^ v34)))();
}

uint64_t sub_1DA732710@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 220 + a2 - 80919271) = 95;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1462 * ((unint64_t)(a2 - 80919270) < 0x38)) ^ (a1 + v2 - 177))))();
}

uint64_t sub_1DA732758@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(a3 - 0x49E3D721B33288D3) = ((v8 + 1420400888) ^ 0xD8CC6A34) - a1;
  int v11 = 1759421093 * ((v9 - 136) ^ 0xB37DB054);
  *(void *)(v9 - 136) = a4;
  *(_DWORD *)(v9 - 12_Block_object_dispose(&STACK[0x360], 8) = 730294625 - v11;
  *(_DWORD *)(v9 - 124) = v11 + v8 + 1163;
  (*(void (**)(uint64_t))(v7 + 8 * (v8 + 1827)))(v9 - 136);
  int v12 = 1755732067 * ((2 * ((v9 - 136) & 0x4DEE2648) - (v9 - 136) - 1307453004) ^ 0x6CD7646F);
  *(void *)(v9 - 12_Block_object_dispose(&STACK[0x360], 8) = a4;
  *(_DWORD *)(v9 - 136) = v12 + v8 + 1742;
  *(_DWORD *)(v9 - 132) = (((32 * v10) ^ 0xEFFBFFFF)
                         + 2142586302
                         + (((v8 + 1420400888) & 0xAB56671D ^ 0xDFF7FEC0) & (v10 << 6))) ^ v12;
  (*(void (**)(uint64_t))(v7 + 8 * (v8 ^ 0x8E6)))(v9 - 136);
  *(void *)(v9 - 136) = a7;
  *(void *)(v9 - 120) = &STACK[0x11127EB20C1B7536];
  *(_DWORD *)(v9 - 12_Block_object_dispose(&STACK[0x360], 8) = v8 + 1178560073 * ((v9 - 136) ^ 0xAD973CA5) + 627;
  (*(void (**)(uint64_t))(v7 + 8 * (v8 ^ 0x711)))(v9 - 136);
  *(void *)(v9 - 136) = a7;
  *(void *)(v9 - 12_Block_object_dispose(&STACK[0x360], 8) = a4;
  *(_DWORD *)(v9 - 116) = v8 + 1374699841 * (((v9 - 136) & 0x4C5E16CD | ~((v9 - 136) | 0x4C5E16CD)) ^ 0xDE55F13B) + 36;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v8 ^ 0x8E4)))(v9 - 136);
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * (((4 * (*(_DWORD *)(v9 - 120) != 1271275120)) | (16
                                                                                             * (*(_DWORD *)(v9 - 120) != 1271275120))) ^ v8)))(v13);
}

uint64_t sub_1DA732978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  unsigned int v14 = (((v13 & 0x2F7D7FBF) - 2107560766) & 0x7D9ED6AF) + (a11 ^ v11) - ((2 * (a11 ^ v11)) & 0xCF182DF6) + 1737232598;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((122
                                * (((2 * v14) & 0xFFD7F76C ^ 0xCF102564) + (v14 ^ 0x1867ED4D) - 1300931332 != 845240498)) ^ v13 & 0x2F7D7FBFu)))();
}

uint64_t sub_1DA732A20@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  *(unsigned char *)(v6 + (a2 + a3)) = *(unsigned char *)(v7 + (a2 + a3))
                                           - ((2 * *(unsigned char *)(v7 + (a2 + a3))) & 0xBF)
                                           + 95;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a1 - 254) | a6) ^ a4) + a2 == v9) * a5) ^ a1)))();
}

uint64_t sub_1DA732A68()
{
  return sub_1DA732A94(v0);
}

uint64_t sub_1DA732A94@<X0>(int a1@<W1>, int a2@<W6>, void *a3@<X7>, unint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = 4 * (v15 + v12);
  unint64_t v25 = (v13 ^ HIDWORD(a4))
      + v21 * (unint64_t)(*(_DWORD *)(*a3 + 4 * v12) ^ (v11 + (v20 ^ v22) * v23 - 1111))
      + (*(_DWORD *)(a10 + v24) ^ v11);
  *(_DWORD *)(a10 + v24) = (v25 + v16 - (v14 & (2 * v25))) ^ v17;
  int v26 = a1 + v12 + 255;
  BOOL v28 = v26 > v10 || v26 < a2;
  return (*(uint64_t (**)(void))(v19 + 8 * ((v28 * v18) ^ v20)))();
}

uint64_t sub_1DA732B10@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31
                                * (*(unsigned __int8 *)(a1 + v2) == ((((v1 - 109) | 0x81) - 63) & 0xFE))) ^ v1)))();
}

uint64_t sub_1DA732B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((15
                                * (((a18 - 826018275) ^ 0x7DCF397FF7DB37FDLL)
                                 - 0x7DCF397FEEAB0674
                                 + ((2 * (a18 - 826018275)) & 0x1EFB66FFALL) == a6)) ^ v18)))();
}

uint64_t sub_1DA732BF8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 != (v2 ^ 0x4BC) + 1954408757) * ((((v2 ^ 0x4BC) - 1245) | 0x59) ^ 0x52)) ^ v2 ^ 0x4BC)))();
}

uint64_t sub_1DA732C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((134 * ((v8 & 0x18) != (a7 ^ 0xFFFFF83E) + (a7 ^ 0x7C0))) ^ a7)))();
}

uint64_t sub_1DA732C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((((a5 - 280695060) & 0x10BB0EFF) - 1602224047) | 0x56055504) ^ 0xF685574F)
                                     * (*(_DWORD *)(a8 + 72) == 826018286)) ^ (a5 - 280695060) & 0x10BB0EFF)))();
}

uint64_t sub_1DA732D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1581 * (v5 + 1 == v7 + 4)) ^ a5)))();
}

void sub_1DA732DD8()
{
}

void sub_1DA732E28()
{
}

uint64_t sub_1DA732E58(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,uint64_t a22,int a23,int a24)
{
  BOOL v27 = a21 - a19 == 331120864 && a24 == a4 + 17;
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * (353 * (v24 ^ 0x1BD) + 229)) ^ v24)))();
}

uint64_t sub_1DA732EA8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((32
                                 * (((v1 + 14) ^ (v0 == ((v1 - 421) ^ 0x597EC0426BD34881))) & 1)) & 0xBF | ((((v1 + 14) ^ (v0 == ((v1 - 421) ^ 0x597EC0426BD34881))) & 1) << 6)) ^ v1)))();
}

void sub_1DA732EF4()
{
}

uint64_t sub_1DA7330A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, unsigned int a6@<W5>, uint64_t a7@<X8>)
{
  unsigned int v15 = a6 + 1;
  int v16 = *(unsigned __int8 *)(*(void *)(a2 + 8) + a6);
  *(unsigned char *)(a1 + (v7 + v11) + 4) = (v16 ^ v12) + ((v16 << ((v8 ^ v10) + 102)) & v13) - 25;
  unsigned int v17 = *(_DWORD *)(a2 + 4) + a3;
  BOOL v18 = v17 < v9;
  BOOL v19 = v15 + v9 < v17;
  if (v15 > a4 != v18) {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(void))(a7 + 8 * ((!v19 * a5) ^ v8)))();
}

uint64_t sub_1DA7330AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * (((&a11 | 0xC5DC4A97) - (&a11 & 0xC5DC4A97)) ^ 0x1B1AF74C);
  a14 = &STACK[0x9C030EB3B8C25D4];
  a15 = v19 ^ 0x473C5D41;
  a11 = &STACK[0x32E0FC00A1F3CACF];
  a12 = v18;
  a13 = (v17 + 1248) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1481)))(&a11);
  BOOL v21 = *(_DWORD *)(v18 - 0x68A89052B2EA55A8) != (((v17 + 485) | 0x306) ^ (v15 + 269));
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((2 * v21) | (16 * v21) | v17)))(v20);
}

uint64_t sub_1DA733198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (((v8 < ((a8 + 376) ^ 0x36Eu))
                                                                        * ((a8 ^ 0x1D3) - 973)) | a8)))(a1, a2, a3, 0);
}

void sub_1DA7331D0()
{
}

uint64_t sub_1DA7331E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (v8 + v5);
  int v12 = *(_DWORD *)(v10 - 252 + v11 + 72);
  *(unsigned char *)(a5 + (v11 + 1)) = (BYTE2(v12) ^ 0x79) - ((2 * (BYTE2(v12) ^ 0x79)) & 0xBF) + 95;
  *(unsigned char *)(a5 + (v11 + 2)) = (BYTE1(v12) ^ 0xA3) + (~(2 * (BYTE1(v12) ^ 0xA3)) | 0x41) + 96;
  *(unsigned char *)(a5 + v11) = ((v7 + 9) ^ HIBYTE(v12) ^ 0xCE) - ((2 * ((v7 + 9) ^ HIBYTE(v12) ^ 0xCE)) & 0xBF) + 95;
  *(unsigned char *)(a5 + (v11 + 3)) = v12 ^ 0x61;
  LODWORD(v11) = *(_DWORD *)(v10 - 160) - 1054091665;
  BOOL v13 = v11 < v6;
  BOOL v14 = v8 - 2044558211 < v11;
  if (v8 - 2044558211 < v6 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((21 * !v14) ^ v7)))();
}

void sub_1DA7332D0()
{
}

uint64_t sub_1DA7332E4()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((2027 * (v0 > ((v1 + 1101970206) ^ 0x27Eu) + 530843088)) ^ (v1 + 1101969784))))();
}

void sub_1DA733330()
{
  int v7 = ((27393956 - ((v6 - 144) | 0x1A1FFA4) + ((v6 - 144) | 0xFE5E005B)) ^ 0x4D23B00F) * v5;
  *(_DWORD *)(v6 - 144) = v7 + v2 + (v0 ^ 0xD432EC1);
  *(_DWORD *)(v6 - 120) = v0 - v7 - 285;
  *(void *)(v6 - 136) = v4;
  *(void *)(v6 - 12_Block_object_dispose(&STACK[0x360], 8) = v1;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 + 749)))(v6 - 144);
  JUMPOUT(0x1DA700B20);
}

uint64_t sub_1DA7333BC(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = (a3 ^ 0xC9796384) + v5;
  BOOL v8 = v6 > 1642880103 || v6 < v4;
  return (*(uint64_t (**)(uint64_t, void))(v3 + 8 * ((484 * v8) ^ a3)))(a1, a3 ^ 0x1D2u);
}

uint64_t sub_1DA733410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a3 + (v6 + a6)) = *(void *)(v7 + (v6 + a6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == a6) * a5) ^ v9)))();
}

void sub_1DA73343C()
{
}

uint64_t sub_1DA733500()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0x24F) + 1355 + 5 * (v1 ^ 0x24F) - 3003) * (v0 == 0x6901FFA0)) ^ v1)))();
}

uint64_t sub_1DA733554(double a1)
{
  *(double *)(v2 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) | v1)))();
}

uint64_t sub_1DA733578()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((975 * (v0 - 826018340 < ((v1 - 2103609079) & 0x7D6287DB ^ (v1 - 1168)))) ^ v1)))();
}

void sub_1DA7335D0()
{
}

void sub_1DA733A14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = (a20 ^ (v20 + 2146958209) & 0x99DB7FFD ^ 0xAFAADD46) + (a3 ^ v21);
  *(_DWORD *)(v23 - 164) = v24 + v21 - (v22 & (2 * v24));
  JUMPOUT(0x1DA733A80);
}

void sub_1DA733B04()
{
}

void sub_1DA733F48()
{
}

uint64_t sub_1DA734030@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7 = a5 + 1;
  *(unsigned char *)(a4 + (((v5 - 769) + 4294967248) & (v7 + 2817368330))) = *(unsigned char *)(a3 + a2 - 2014182718)
                                                                                     - ((2
                                                                                       * *(unsigned char *)(a3 + a2 - 2014182718)) & 0xBF)
                                                                                     + 95;
  return (*(uint64_t (**)(void))(v6 + 8 * ((119 * ((a1 + v7 + 51) < 0x40)) ^ v5)))();
}

uint64_t sub_1DA734038@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((125 * (a3 != a2 + v3 - 469 + a1 + v3 - 698 - 642)) ^ v3)))();
}

void sub_1DA734070()
{
}

void sub_1DA73408C()
{
}

void sub_1DA734338(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0xDAEB4D7D86A8E34) = v2;
  *(_DWORD *)(v1 + 16) = 2058996701;
}

uint64_t sub_1DA734394()
{
  int v4 = v1 + v0 + 117706897 >= ((((v2 - 1571356361) & 0x5DA8FFFB) - 899) ^ 0x60u);
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v4) | (v4 << 6)) ^ v2)))();
}

uint64_t sub_1DA7343FC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  a4 = (v9 + 634) ^ (1374699841
                   * ((&a4 - 695477157 - 2 * ((unint64_t)&a4 & 0xD68BDC5B)) ^ 0xBB7FC452));
  a6 = a1;
  a7 = a3;
  uint64_t v10 = (*(uint64_t (**)(int *))(v8 + 8 * (v9 + 1555)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * (int)(((a5 == v7) * (((v9 + 818752351) & 0xCF32D3BF) - 224)) ^ v9)))(v10);
}

uint64_t sub_1DA73449C()
{
  return 0;
}

uint64_t sub_1DA7344DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v36 = (_DWORD *)(a27 + 24 * v31);
  *uint64_t v36 = v33;
  v36[1] = a3;
  *(void *)(v32 + 24 * v31 + 16) = v35;
  unsigned char v36[4] = HIDWORD(a29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((((*(_DWORD *)(a1 + 48 * (int)a2 + 32) + 1183504879) < 0x80000003) * (((v30 + 406981506) | 0x1917248) ^ (v30 + 433290677))) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_1DA734574()
{
}

uint64_t sub_1DA7345E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v12 = v9 + 2125;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (a2 ^ (988 * (v10 - v7 - v8 + v12 < 0xF)))))(a1, 4252720854, 2894415355, a4, a5, a6, a7, 1400551919);
}

uint64_t sub_1DA7346E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v19 = 628203409 * ((v18 - 152) ^ 0x82880C33);
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  *(void *)(v18 - 112) = v17;
  *(void *)(v18 - 104) = a11;
  *(void *)(v18 - 152) = a12;
  *(void *)(v18 - 144) = a10;
  *(_DWORD *)(v18 - 136) = v16 - v19 + 1217;
  *(_DWORD *)(v18 - 132) = a3 - v19 + ((((v16 + 199832913) & 0xF416CE7B) - a6 - 609) ^ 0x3DB145F2);
  uint64_t v21 = v13;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8BD)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((127 * (*(_DWORD *)(v18 - 120) == v14)) ^ v16)))(v21);
}

void sub_1DA7347B8()
{
}

uint64_t sub_1DA734818(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v17 = ((a5 - 991) ^ (v15 - 16) ^ v6)
      + v14
      + *(_DWORD *)(a3 + 4 * (v5 + v13))
      + (((v8 ^ 0x49865CC1 | a1 ^ v15) + v15 - (v10 & (2 * (v8 ^ 0x49865CC1 | a1 ^ v15)))) ^ v7)
      + (*(_DWORD *)(v9 + 4 * (*(unsigned char *)(a2 + v5 + v13) - 30)) ^ v12);
  unsigned int v18 = (v17 + v15 - (v10 & (2 * v17))) ^ v15;
  int v19 = ((v18 << (*(unsigned char *)(a4 + v5 + v13) - 4)) | (v18 >> (4 - *(unsigned char *)(a4 + v5 + v13)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((1189 * (v5 + 1 == v16 + 64)) ^ a5)))(v19 + v15 - (v10 & (2 * v19)));
}

uint64_t sub_1DA7348EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((39 * (v9 >= ((13 * (a8 ^ 0x757)) ^ v8 ^ (v8 + 106)))) ^ a8)))();
}

uint64_t sub_1DA73492C()
{
  uint64_t v9 = (v5 - 533709270);
  *(unsigned char *)(v8 + v9) = *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x611)) + (v9 & 0xF) - 8) ^ *(unsigned char *)(v0 + v9) ^ (23 * ((v5 + 42) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x66F)) + (v9 & 0xF) - 8) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x60A)) + (v9 & 0xF) - 7);
  unsigned int v10 = v5 + 1858694590;
  int v11 = (v3 > 0x7166D06C) ^ (v10 < v1);
  BOOL v12 = v10 < v4;
  if (v11) {
    BOOL v12 = v3 > 0x7166D06C;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((162 * v12) ^ v2)))();
}

uint64_t sub_1DA7349F8()
{
  int v5 = 1755732067 * ((((v4 - 136) | 0x2D6110C6) - ((v4 - 136) & 0x2D6110C6)) ^ 0xF3A7AD1D);
  *(_DWORD *)(v4 - 136) = v5 + v1 + 1360;
  *(_DWORD *)(v4 - 132) = (((v1 - 34) ^ 0x55C96779) + v2) ^ v5;
  *(void *)(v4 - 12_Block_object_dispose(&STACK[0x360], 8) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xA64)))(v4 - 136);
  return sub_1DA734A74(v6);
}

uint64_t sub_1DA734A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 136) = a14;
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = a13;
  *(_DWORD *)(v16 - 116) = v15
                         + 1374699841 * ((((v16 - 136) | 0x4D2E3E7F) + (~(v16 - 136) | 0xB2D1C180)) ^ 0x20DA2677)
                         - 312;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0xA40)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v16 - 120) == (v15 ^ 0x4BC61C3A)) * ((v15 ^ 0x4F7) - 1721)) | v15)))(v17);
}

uint64_t sub_1DA734B1C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1358
                                * ((((6 * (v3 ^ 0x1C3)) ^ v2) & (2 * (*(unsigned __int8 *)(v1 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v1 + 7) - 1) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1DA734B68()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 24) + v0 - 0x40AEAB2C94B84846)
     - *(unsigned __int8 *)(v5 + v0 - 0x40AEAB2C94B84846);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0xFEFCFB6F) + 1268251896 + ((v6 << (v4 ^ 0x7C)) & 0xFDF9F6DE) != 1251276903 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1897 * v9) ^ v4)))();
}

uint64_t sub_1DA734BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v29 - 100) = v26 + ((((v29 - 120) | 0x5428CE33) + (~(v29 - 120) | 0xABD731CC)) ^ 0x39DCD63B) * v28 - 512;
  *(void *)(v29 - 120) = a25;
  *(void *)(v29 - 112) = v27;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 1272)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((225
                                              * (*(_DWORD *)(v29 - 104) - 1271275122 < ((v26 - 1263944503) & 0x4B5642AF ^ 0xEDB73D75))) ^ v26)))(v30);
}

uint64_t sub_1DA734CA4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>)
{
  uint64_t v9 = (a1 + v7 + v8 + 1530 - a2);
  *(void *)(a4 - 7 + v9) = *(void *)(v5 - 7 + v9);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((482 * ((((((a3 - 30) ^ 0xFFFFFB12) & v6) - a2 == 8) ^ (a3 - 31)) & 1)) ^ (a3 - 30))))();
}

uint64_t sub_1DA734D14@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return sub_1DA71566C(272 * (a1 ^ 0x526u), a2);
}

uint64_t sub_1DA734D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1327 * (a3 + 1 == v5 + 64)) ^ v3)))();
}

uint64_t sub_1DA734E50(uint64_t a1, uint64_t a2)
{
  *(void *)(v6 - 252 + v3 + a2) = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((78 * ((((160 * (v4 ^ 0x36Bu)) ^ 0xFFFFFFFFFFFFFCD8) & v2) != 8)) | (160 * (v4 ^ 0x36B)))))();
}

uint64_t sub_1DA734EBC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(int8x16_t *)(a1 + (((v2 + 162) ^ 0xFFFFFE05) & (a2 + 16))) = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v7)), v6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1972 * (v3 == 16)) ^ v2)))();
}

uint64_t sub_1DA735038(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v28 = a13 + v21;
  uint64_t v29 = (v20 + v28);
  uint64_t v30 = ((_BYTE)v20 + (_BYTE)v28) & 0xF;
  uint64_t v31 = v18;
  v32.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v32.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  int8x16_t v33 = vrev64q_s8(vmulq_s8(v32, a6));
  *(int8x16_t *)(v19 + v29) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + (v29 & 0xF) - 15), *(int8x16_t *)(a14 + v29)), veorq_s8(*(int8x16_t *)((v29 & 0xF) + v16 - 13), *(int8x16_t *)((v29 & 0xF) + v15 - 11))), vextq_s8(v33, v33, 8uLL));
  return (*(uint64_t (**)(void))(v17 + 8 * (((v22 == v28) * v23) ^ a12)))();
}

uint64_t sub_1DA735040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 628203409 * ((((v18 - 152) | 0x6BEF4A65) - ((v18 - 152) & 0x6BEF4A65)) ^ 0xE9674656);
  *(void *)(v18 - 112) = v17;
  *(void *)(v18 - 104) = a12;
  *(void *)(v18 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(_DWORD *)(v18 - 136) = v14 - v19 + 1127;
  *(_DWORD *)(v18 - 132) = v16 - v19 + 610417546;
  *(void *)(v18 - 152) = a13;
  *(void *)(v18 - 144) = a11;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 ^ 0x91B)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) == 2058996701)
                                              * ((92 * (v14 ^ 0x100)) ^ (v14 + 1135))) ^ v14)))(v20);
}

void sub_1DA735124()
{
}

void sub_1DA735130()
{
}

uint64_t sub_1DA735138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  uint64_t v27 = LODWORD(STACK[0x2EC]);
  int v28 = LOBYTE(STACK[0x300]) ^ 0x70;
  if (v28 == 2)
  {
    BOOL v33 = (unint64_t)&STACK[0x2A0] >= a27 || v34 >= (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35
                                                       + 8
                                                       * (((11 * (((v36 + 848) | 0x10) ^ 0x33F) - 859) * v33) ^ (v36 + 1988))))(v27, 108634942);
  }
  else
  {
    if (v28 != 1) {
      JUMPOUT(0x1DA71691CLL);
    }
    BOOL v30 = (unint64_t)&STACK[0x2A0] < a27 && v34 < (unint64_t)&STACK[0x2E0];
    return (*(uint64_t (**)(uint64_t))(v35 + 8 * (((((v36 + 1080) | 0x220) ^ 0x66B) * v30) | (v36 + 388))))(v27);
  }
}

uint64_t sub_1DA735140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v28 = v25 + v24 + a4;
  if (v28 <= 0x40) {
    int v29 = 64;
  }
  else {
    int v29 = v28;
  }
  BOOL v30 = __CFADD__(v28 - 1, v26 + ((v23 - 215) ^ 0x14E) + v29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((122 * v30) ^ v23)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1DA735198@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 4) = -2058972952;
  return result;
}

uint64_t sub_1DA7351AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unsigned int a19)
{
  if (a19 < a18 != v19 + 162528160 < ((25 * (v21 ^ (v21 + 738) ^ 0x324)) ^ 0x1ED2AA9Fu)) {
    BOOL v22 = v19 + 162528160 < ((25 * (v21 ^ (v21 + 738) ^ 0x324)) ^ 0x1ED2AA9Fu);
  }
  else {
    BOOL v22 = v19 + 162528160 > a19;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((v22 | (16 * v22)) ^ (a6 + v21 + 296))))();
}

void sub_1DA73523C()
{
}

void sub_1DA735460()
{
}

uint64_t sub_1DA735468@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = 4 * (v13 + v9);
  unsigned int v15 = v4 - 1809008657 + (*(_DWORD *)(*(void *)(a4 - 0x11127EB20C1B74FELL) + v14) ^ 0xF680739F);
  *(_DWORD *)(*(void *)(a1 - 0x11127EB20C1B74FELL) + v14) = v15 + v10 - ((v15 << (((v8 + 58) | 0x41) + 24)) & v12);
  int v16 = v5 + v13 + 566;
  BOOL v18 = v16 > v6 || v16 < v7;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1863 * v18) ^ ((v8 - 1734) | 0x41))))();
}

uint64_t sub_1DA735554()
{
  int v2 = v1 - ((2 * v1 + 495447096) & 0x4E9039F4) - 166980842;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((218
                                * (((2 * v2) & 0x75BDDFFE ^ 0x449019F4) + (v2 ^ 0x1D96F305) - 278405824 != 709283135)) ^ 0x75Cu)))();
}

uint64_t sub_1DA7355FC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((58
                                * (a13
                                 + v15
                                 - 220
                                 + (unint64_t)(v13
                                                    + (((a7 + a6 + a2 - 708 - 90) | 0x278) ^ (a3 + 377))) < 0x10)) ^ a2)))();
}

uint64_t sub_1DA735650@<X0>(int8x16_t *a1@<X3>, uint64_t a2@<X6>, int a3@<W8>)
{
  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + (v3 + v5)), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + (v3 + v5)), *(int8x16_t *)(a2 + (v3 + v5))), v8)), v7);
  return (*(uint64_t (**)(void))(v6 + 8 * (v4 ^ ((a3 & 0x6EF4807F) + 1710))))((v3 + 64));
}

uint64_t sub_1DA7356A8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((57 * ((v2 + v1 - 2146171830) < 8)) ^ 0x71Fu)))();
}

void sub_1DA73570C()
{
}

void sub_1DA73576C()
{
}

uint64_t sub_1DA735778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((45
                                * ((a11 ^ 0x76EFFEFD) - 44040192 + ((2 * a11) & 0xEDDFFDFA) - 1951399679 < (v12 ^ 0x7CEu) + 2147481902)) ^ v12)))();
}

void sub_1DA7357F0()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1DA73580CLL);
}

uint64_t sub_1DA7358C4(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((297 * (((v6 << (((v4 - 68) | 0x10) + 105)) & v3) + (v6 ^ v2) == v2)) ^ v4)))();
}

void sub_1DA735910()
{
}

uint64_t sub_1DA735998()
{
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 112) = v3;
  *(_DWORD *)(v6 - 100) = v0 + ((((v6 - 120) | 0x74A96C87) - ((v6 - 120) & 0x74A96C87)) ^ 0x195D748E) * v5 - 245;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1539)))(v6 - 120);
  BOOL v8 = (v2 + *(_DWORD *)(v6 - 104) + 1208) < 0xE85183F0;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((4 * ((((((v0 - 2067496688) & 0x7B3B7EFB) - 177) ^ v8) & 1) == 0)) & 0xEF | (16 * (((((v0 + 16) & 0xFB) + 79) ^ ~v8) & 1))) ^ v0)))(v7);
}

uint64_t sub_1DA735A5C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a4 - 335590272) & 0x1400B33F ^ 0x2E4) * (v5 == a3)) ^ a4)))(0);
}

void sub_1DA735A9C()
{
}

void sub_1DA735ABC()
{
}

uint64_t sub_1DA735AC8@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v5 + v6)) = *(unsigned char *)(v4 + (v5 + v6));
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 - 1 != v2) | (16 * (v6 - 1 != v2)) | v3)))(0);
}

uint64_t sub_1DA735AF8(uint64_t result)
{
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x360], 8) = 526266694;
  return result;
}

uint64_t sub_1DA735B08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  unsigned int v9 = v7 + 1645431378 + a4;
  BOOL v10 = v9 < 0x8C0D03B7;
  BOOL v11 = v9 > v6;
  if (v6 < 0x8C0D03B7 != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((a6 + 433291066) | (2 * !v12))))(a1, 3590737265);
}

uint64_t sub_1DA735B80@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  BOOL v16 = v14 > v8;
  uint64_t v17 = 4 * (v13 + v9);
  int v18 = v4 + v15 + (*(_DWORD *)(*(void *)(a4 - 0x11127EB20C1B74FELL) + v17) ^ v10);
  *(_DWORD *)(*(void *)(a2 - 0x11127EB20C1B74FELL) + v17) = v18 + v10 - (v12 & (2 * v18));
  int v19 = v5 + v13 + 334;
  LODWORD(v17) = v16 ^ (v19 < v6);
  BOOL v20 = v19 < v7;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((112 * !v16) ^ ((a1 - 327) | 0x411))))();
}

uint64_t sub_1DA735C6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1982
                                * ((((*(unsigned __int8 *)(a2 + 5) - 242) << (v3 ^ 0x9F)) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1DA735CB0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 - 409) ^ 0x544) * (v0 == v1)) ^ (v3 - 409))))();
}

uint64_t sub_1DA735CF8()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0xFFFEFDE ^ 0x1B30BCC) + (((v4 ^ v3) >> 5) ^ 0x77267A19) - 1284285688;
  BOOL v7 = v5 > (((v0 ^ 0x773) - 1232) ^ 0x2B735274u) && v5 < v2 + 728978167;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2026 * v7) ^ v0)))();
}

uint64_t sub_1DA735D74@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  int v5 = 2 * v3;
  BOOL v6 = (*(uint64_t (**)(void, char *, void, uint64_t))(v4 + 8 * (v5 + 434)))(**(unsigned int **)(v2 + 8 * (v5 ^ 0x67A)), va, v5- 2147212449+ (((v5 - 963) ^ 0xFFF7A262) & (2 * (a1 - 694223458)))+ ((a1 - 694223458) & 0xFFFFF000 ^ 0x7FFBD67B), 1) == 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((102 * v6) ^ v5)))();
}

void sub_1DA735E08(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v5 + 4) = 89;
  sub_1DA707CE8(a1, v4 + 1, a3, a4);
}

uint64_t sub_1DA735E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  signed int v22 = v21 - 353869885 + ((v20 + 412801564) & 0xE76522EB);
  int v23 = (a19 > 0x6181A984) ^ (v22 < -1635887493);
  BOOL v24 = v22 < (int)(((v20 - 456) ^ 0x1E7E5261) + a19);
  if (v23) {
    BOOL v24 = a19 > 0x6181A984;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((7 * !v24) ^ v20)))();
}

uint64_t sub_1DA735ECC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v10 = *(unsigned __int8 *)(v7 + a2 - 0x30530205DD195846)
      - (*(unsigned __int8 *)(v8 + a2 - 0x30530205DD195846) ^ 0x5F);
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((1644
                                * ((((((a1 + 1610064743) & 0xFD9D7F9F) - 1649758565) ^ (44 * (a1 ^ 0x117))) & (2 * v10))
                                 + (v10 ^ a7) == a7)) ^ a1)))();
}

uint64_t sub_1DA735F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  unsigned int v6 = v3 - 1755732067 * (((&v5 | 0x7FB82E1E) - (&v5 & 0x7FB82E1E)) ^ 0xA17E93C5) + 1701;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 + 1946)))(&v5);
}

uint64_t sub_1DA735FC0@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v14 = (v12
       + (((v4 + v5 + v12 - v6) >> 30) ^ 1)
       + 2
       * ((((v4 + v5 + v12 - v6) >> 30) ^ 1 | ((v9 - 954) | 0x180) ^ (v8 + 576)) ^ ((v4 + v5 + v12 - v6) >> 30))
       + 26) ^ (v4 + v5 + v12 - v6);
  *(_DWORD *)(v13 + 4 * a3) = a3 + v11 + v14 * a1 - ((v3 + 2 + v14 * v7) & 0xCDC5DB64) - 1;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 < 0x26F) * a2) ^ v9)))();
}

uint64_t sub_1DA735FD4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 899) ^ 0xB2) * (v3 < 0x20)) ^ (a3 + 352))))();
}

void sub_1DA73600C(int a1@<W8>)
{
  *(void *)(v5 - 0x4EA879534CA0F753) = *v2;
  *(_DWORD *)(v6 - 0x1EC5A4A56706F2AALL) = a1;
  void *v2 = 0;
  *(void *)(v9 - 0x68A89052B2EA55B_Block_object_dispose(&STACK[0x360], 8) = 0x4FF9C25B4FF9C25BLL;
  int v3 = *(_DWORD *)(v9 - 0x68A89052B2EA55ACLL);
  *uint64_t v4 = 1220938676;
  *(_DWORD *)(v9 - 0x68A89052B2EA55ACLL) = ((v3 & 0xFFFFFFFE ^ 0x185CB2F2)
                                          + (v3 & (((v1 - 1112) | 0x414) ^ 0xBF1E3359) ^ 0xA7020504)
                                          - ((v3 & 0xFFFFFFFE ^ 0x185CB2F2) & 0xBF1E3724)) ^ 0xA74285D7;
  *(_DWORD *)(v8 + 4) = *v7;
}

uint64_t sub_1DA736138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, uint64_t a15)
{
  int v19 = v17 - 388;
  a15 = a10;
  a13 = v19 + (((&a13 | 0xACDD9CED) + (~&a13 | 0x53226312)) ^ 0x829C1F20) * v18 - 643;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v19 + 481)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((164 * (a14 == ((v19 + 56) ^ (v15 + 419)))) ^ v19)))(v20);
}

uint64_t sub_1DA7361C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a1 - 1318) ^ 0x14A) - 61) * (v5 == a5)) ^ a1)))();
}

uint64_t sub_1DA736200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((56 * (v7 + 1 == v9 + 24)) ^ a7)))();
}

void sub_1DA7362BC()
{
  *(_DWORD *)(v4 - 12_Block_object_dispose(&STACK[0x360], 8) = (v1 + 1090) ^ (1759421093
                                       * ((1606373337 - ((v4 - 144) | 0x5FBF4FD9) + ((v4 - 144) | 0xA040B026)) ^ 0x133D0072));
  *(void *)(v4 - 144) = v2;
  *(void *)(v4 - 136) = v3;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 ^ 0xBA1)))(v4 - 144);
  JUMPOUT(0x1DA736328);
}

uint64_t sub_1DA736568()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1566 * (v2 > v0 - 1297701694)) ^ (v0 - 1101969547))))();
}

void sub_1DA7365B0()
{
}

uint64_t sub_1DA736708@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>)
{
  v11.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v11.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  v12.i64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v12.i64[1] = 0x5F5F5F5F5F5F5F5FLL;
  uint64_t v13 = 3 * (v5 ^ 0x18Cu);
  *(int8x16_t *)(v6 + (v8 + a5 + v13)) = vaddq_s8(vsubq_s8(*v10, vandq_s8(vaddq_s8(*v10, *v10), v11)), v12);
  unsigned int v14 = *(uint64_t (**)(uint64_t, int8x16_t *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((955 * (((v7 + 1) & 0x1FFFFFFF0) == 16)) ^ v5));
  return v14(955, v10 + 1, v13, v14, a1, a2, a3, a4);
}

void sub_1DA736780(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = a17;
  *(void *)(v17 - 120) = a8;
  *(void *)(v17 - 112) = a6;
  *(_DWORD *)(v17 - 104) = a1
                         + 628203409 * ((((v17 - 144) | 0x451E9E07) + (~(v17 - 144) | 0xBAE161F8)) ^ 0xC7969235)
                         + 1530;
  *(void *)(v17 - 144) = a8;
  *(void *)(v17 - 136) = a16;
  JUMPOUT(0x1DA726D4CLL);
}

uint64_t sub_1DA7367F4@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(a2 + (a5 - 42246443)) = *(unsigned char *)(a4 + a3 - 1400551919);
  return (*(uint64_t (**)(void))(v6 + 8 * ((84 * ((a5 + a1) < 0x40)) ^ ((v5 - 68) | 0x10))))();
}

uint64_t sub_1DA736858()
{
  BOOL v4 = (v0 + v3 + v2 + 1219 - 1816) > 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v1 + 8 * (((4 * v4) | (8 * v4)) ^ (v2 - 145))))();
}

uint64_t sub_1DA736894@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(a23 + 4 * a5) = a6;
  BOOL v25 = a2 + a5 > a4 || a2 + a5 <= a1;
  return (*(uint64_t (**)(void))(v23 + 8 * ((63 * v25) ^ a3)))();
}

void sub_1DA7368C8()
{
}

uint64_t sub_1DA7368F8()
{
  *(void *)(v4 - 220 + v1 - 80919271) = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(void))(v3 + 8 * ((113 * (((v2 - 1195) ^ 0xEDLL) == (v0 & 0x38))) ^ v2)))();
}

uint64_t sub_1DA736950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int8x16_t v12 = (_DWORD *)(v7 + 4 * (a7 + v10));
  int v13 = *(v12 - 8) ^ *(v12 - 3);
  unsigned int v14 = *(v12 - 16) ^ *(v12 - 14) ^ (v9 + a5 + 1232 + v13 - ((2 * v13) & 0xF57397BA) - 1248);
  HIDWORD(v15) = v14 ^ v9;
  LODWORD(v15) = v14;
  *int8x16_t v12 = (v15 >> 31) + v9 - ((2 * (v15 >> 31)) & 0xF57397BA);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1357 * (a7 + 1 == v11 + 80)) ^ (a5 + 413))))();
}

void sub_1DA7369E4()
{
}

uint64_t sub_1DA7369F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(unsigned char *)(v7 + v6) = *(unsigned char *)(v11 + (v9 + a3))
                      - ((2 * *(unsigned char *)(v11 + (v9 + a3))) & 0xBF)
                      + 95;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v6 == 63) * a5) ^ (a6 + v8 + 115))))();
}

uint64_t sub_1DA736A3C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((a1 - 1142) ^ (a1 + 2047272695) & 0x85F916FA ^ 0x25C) * (v2 == v1)) ^ a1)))();
}

void sub_1DA736A84()
{
}

uint64_t sub_1DA736A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,uint64_t a32,unsigned int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v220 = a5 ^ 0x401;
  uint64_t v44 = ((a5 ^ 0x401u) + 887 - 0x2BE4CEE39A4951C8) ^ a3;
  uint64_t v45 = (v44 + v41 - ((2 * v44) & 0x5F967618E3B3A9B0)) ^ v38;
  uint64_t v46 = __ROR8__(__ROR8__(v43 ^ a32, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v47 = v46 ^ 0x322397601515A6F7;
  uint64_t v48 = ((v46 ^ 0x322397601515A6F7)
       - 0x6B312BE47BCA2CBFLL
       - (((((a5 ^ 0x401) - 344693139) & 0x148B9DCE) + 0x299DA837086BA13ALL) & (2 * (v46 ^ 0x322397601515A6F7)))) ^ v39;
  uint64_t v49 = v44 ^ v40;
  unint64_t v50 = (v45 ^ 0x97FBFBAE09CFCCD0) & (v46 ^ 0x322397601515A6F7);
  uint64_t v51 = v45 ^ 0x68040451F630332FLL;
  unint64_t v52 = (v48 ^ 0xE4C1C31231B4037DLL) & (v46 ^ 0xCDDC689FEAEA5908) ^ v45 ^ 0x68040451F630332FLL;
  unint64_t v53 = v48 ^ 0xE4C1C31231B4037DLL ^ (v49 ^ 0xD5D1DFCA9EC8F947) & (v40 ^ 0x2A2E2035613706B8);
  unint64_t v54 = (v48 ^ 0x1B3E3CEDCE4BFC82) & (v40 ^ 0xD5D1DFCA9EC8F947);
  *((void *)&v55 + 1) = v40 ^ 0xF947;
  *(void *)&long long v55 = v40 ^ 0xD5D1DFCA9EC80000;
  unint64_t v56 = ((v50 + 0x4B4ECD1AF137A073 - ((2 * v50) & 0x969D9A35E26F40E6)) ^ v49 ^ 0x9E9F12D06FFF5934) & 0x90DEF08A367683D6 | ((v50 + 0x4B4ECD1AF137A073 - ((2 * v50) & 0x169D9A35E26F40E6)) ^ v49 ^ 0x9E9F12D06FFF5934) & 0x6F210F75C9897C29;
  unint64_t v57 = v54 ^ v47 ^ v52;
  uint64_t v58 = v51 & (v49 ^ 0x2A2E2035613706B8);
  unint64_t v59 = __ROR8__(__ROR8__(v52, 38) ^ __ROR8__(v56, 38) ^ 0xB8AB4977971512F1, 26);
  LOBYTE(v47) = *(unsigned char *)(a34 + ((((v57 >> 61) ^ 4) + 241) ^ 0x78));
  char v60 = 4 * (v47 ^ 0xDD) - ((8 * (v47 ^ 0xDD)) & 0x8F) + 71;
  char v61 = (v47 ^ 0xDD) - ((2 * (v47 ^ 0xDD)) & 0x8F) + 71;
  char v62 = v47 ^ 0xE5;
  char v63 = v62 + (v61 ^ v60 ^ 0xC7) + 1;
  unint64_t v64 = v53 ^ __ROR8__((v55 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v58;
  char v65 = (v60 ^ 0xB8) - 115;
  char v66 = v65 - ((2 * (v60 ^ 0xB8) + 2) & 0x18) + (v63 & 0x40);
  if ((v63 & 0x40 & ((v60 ^ 0xB8) + 1)) != 0) {
    char v66 = v65 - (v63 & 0x40) - ((2 * ((v60 ^ 0xB8) + 1)) & 0x18);
  }
  char v67 = v66 ^ ((v63 & 0xBF) - ((2 * v63) & 0x18) - 116);
  unsigned __int8 v68 = ((v67 - ((2 * v67) & 0x8F) + 71) ^ v60) + v62;
  *((void *)&v69 + 1) = ~v53;
  *(void *)&long long v69 = v53 ^ 0x92CFC162FD513142;
  unint64_t v70 = __ROR8__(v53, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v69 + 1) = v53 ^ 0xD453BB5BDE9DEED1 ^ ((v69 >> 1)
                                                      - ((2 * (v69 >> 1)) & 0x8D38F4724799BF24)
                                                      + 0x469C7A3923CCDF92);
  *(void *)&long long v69 = *((void *)&v69 + 1) ^ (v53 << 58) ^ 0xC00000000000000;
  uint64_t v71 = v69 >> 51;
  uint64_t v72 = v57 ^ (v57 >> 39) ^ (8 * v57) ^ (((v68 >> 1) | (v68 << 7)) | (v57 << 25));
  uint64_t v73 = v72 ^ 0x44F556184A13348CLL;
  uint64_t v74 = v71 + (v70 ^ 0x8F8AC7F1FBA51795);
  unint64_t v75 = v56 << 23;
  unint64_t v76 = (v56 << 23) ^ 0xFBA827E079000000;
  unint64_t v77 = (((v59 << 45) ^ (v59 << 36)) & 0xFFFFFFF000000000 | (v59 >> 28)) ^ (v59 >> 19) ^ 0xD0A2B87327B31AB3;
  uint64_t v78 = v77 - ((2 * v77) & 0x27EF80AB0B859AAELL) + 0x13F7C05585C2CD57;
  unint64_t v79 = v56 ^ (v56 >> 41) ^ (v56 >> 7) ^ (((v56 << 57) ^ 0xE400000000000000)
                                        - ((2 * ((v56 << 57) ^ 0xE400000000000000)) & 0x3800000000000000)
                                        - 0x63453DB989501C3FLL);
  uint64_t v80 = v79 & 0x10000000000000;
  uint64_t v81 = v79 & 0x10000000000000 | 0x76A2223DF1793897;
  uint64_t v82 = __ROR8__(v74 - 2 * (v71 & (v70 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v83 = v79 & 0xFFEFFFFFFFFFFFFFLL;
  unint64_t v84 = v64 ^ (v64 >> 10) ^ (v64 << 47) ^ ((v64 >> 17) | (v64 << 54));
  if ((v80 & v75) != 0) {
    uint64_t v85 = 0xED44447BE2F2712ELL - v81;
  }
  else {
    uint64_t v85 = v81;
  }
  uint64_t v86 = (v76 - 0x76A2223DF1793897 + v85) ^ v83;
  uint64_t v87 = ((v86 ^ 0x2AED97FEC81B2021)
       - 2 * ((v86 ^ 0x2AED97FEC81B2021) & 0x2824D2824E53CF0DLL ^ v86 & 8)
       - 0x57DB2D7DB1AC30FBLL) ^ v84;
  uint64_t v88 = __ROR8__(__ROR8__(v87 ^ 0x9F4CE0BCFD39A0BCLL, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v89 = v73 ^ (v82 + 0x62AC7C19E948E061 - ((2 * v82) & 0xC558F833D291C0C2));
  uint64_t v90 = v78 ^ v59 ^ v86;
  unint64_t v91 = v88 & (v84 ^ 0x1CAE3FE19723B7B4) ^ v89;
  unint64_t v92 = (v90 ^ 0xF366543254CBE165 | ~v88)
      + ((v88 + 0x7F35DACCE8260E7ALL - ((2 * v88) & 0xFE6BB599D04C1CF4)) ^ v90 ^ 0x8C538EFEBCEDEF1FLL)
      + 1;
  unint64_t v93 = v90 ^ 0x8C538EFEBCEDEF1FLL ^ (((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))
                                    + 0x7F35DACCE8260E7ALL
                                    - ((2 * ((v89 ^ 0xBEE74353B47A99EDLL) & (v72 ^ 0xD9A6D5FE5CA42B12))) & 0xFE6BB599D04C1CF4));
  unint64_t v94 = v87 ^ (v90 ^ 0xC99ABCDAB341E9ALL) & (v72 ^ 0x26592A01A35BD4EDLL);
  unint64_t v95 = ((v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))
       + 0x62AC7C19E948E061
       - ((2 * (v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))) & 0xC558F833D291C0C2)) ^ v73;
  *((void *)&v97 + 1) = v94 ^ v93 ^ 0x7AAE2AD;
  *(void *)&long long v97 = v94 ^ v93 ^ 0xE7091D6820000000;
  uint64_t v96 = v97 >> 28;
  unint64_t v98 = v92 ^ __ROR8__(((v91 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v84 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v91 ^ 0xBEE74353B47A99EDLL) << 37)- (((v91 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v97 = __ROR8__(v94 ^ v93, 19);
  uint64_t v99 = (v96 ^ v97 ^ 0x5C55BCE123AD04F5)
      - ((2 * (v96 ^ v97 ^ 0x5C55BCE123AD04F5)) & 0x76E91A039CB13CBCLL)
      + 0x3B748D01CE589E5ELL;
  unint64_t v100 = (v91 ^ 0xD1A234CC1D2559D7) << 58;
  unint64_t v101 = v100 & (v91 ^ 0xD000000000000000);
  unint64_t v102 = v100 | v91 ^ 0xD1A234CC1D2559D7;
  *((void *)&v97 + 1) = v95 ^ 0x1747C156E755AED6;
  *(void *)&long long v97 = v95 ^ 0x4000000000000000;
  unint64_t v103 = (v94 >> 7) ^ (v94 >> 41);
  uint64_t v104 = v95 ^ __ROR8__(v95, 39) ^ (v97 >> 61);
  unint64_t v105 = v104 ^ 0x886846567A7A532FLL;
  uint64_t v106 = v104 & 0x7C09B5691D153F3ALL;
  uint64_t v107 = (v103 | (v94 << 57)) ^ (v94 << 23) ^ 0x25F11DA5CCA6B973;
  uint64_t v108 = v107 + 0x2A68414BDB440A9BLL - 2 * (v107 & 0x2A68414BDB440A9FLL ^ v103 & 4);
  unint64_t v109 = v94 ^ 0xFB256F2F7C4BF890 ^ v108;
  unint64_t v110 = v99 ^ v93 ^ v108;
  unint64_t v111 = v98 ^ (v98 << 47) ^ (v98 >> 10) ^ (v98 >> 17) ^ (v98 << 54);
  uint64_t v112 = (v109 & 0x100000000 ^ 0x7FD5FBFFBB7FBBFFLL) + 2 * (v109 & 0x100000000);
  uint64_t v113 = v112 - 0x41801069AB26184CLL;
  unint64_t v114 = v109 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v115 = v104 ^ 0x886846567A7A532FLL ^ (v91 >> 1) ^ ((v91 ^ 0xD1A234CC1D2559D7) >> 6) ^ v102 ^ ((v101 ^ ((v91 ^ 0xD1A234CC1D2559D7) << 63))
                                                                                                + 0x72E12C5D3181727BLL
                                                                                                - (v101 >> 60 << 61));
  uint64_t v116 = v115 ^ 0x68D11A660E92ACEBLL;
  uint64_t v117 = v112 - 0x7FD5FBFFBB7FBBFFLL;
  unint64_t v118 = 0xBE2BE795CBD95FB2 - v112;
  if (((v111 ^ 0xBEE8B63400000000) & v117) == 0) {
    unint64_t v118 = v113;
  }
  *((void *)&v119 + 1) = v110 ^ 0x95B98463;
  *(void *)&long long v119 = v110 ^ 0x2758FF4600000000;
  unint64_t v120 = ((v111 ^ 0xBEE8B6349A795903) - 0x3E55EB961059A3B3 + v118) ^ v114;
  uint64_t v121 = (v119 >> 33) ^ __ROR8__((v115 ^ 0x68D11A660E92ACEBLL) & (v104 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184;
  uint64_t v122 = (v110 ^ 0x2758FF4695B98463) & ~v120;
  char v123 = v120 & 1;
  unint64_t v124 = (v110 ^ 0xD8A700B96A467B9CLL) & (v104 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v119 = __ROR8__(v121, 31);
  uint64_t v125 = v120 & (v111 ^ 0x411749CB6586A6FCLL);
  unint64_t v126 = v120 ^ (v124 - ((2 * v124) & 0xF368806B758E1AD0) - 0x64BBFCA4538F298);
  unint64_t v127 = v115 ^ 0x972EE599F16D5314;
  unint64_t v128 = v125 ^ v116;
  unint64_t v129 = (v111 ^ 0xBEE8B6349A795903) & v127;
  unint64_t v130 = v125 ^ v116 ^ v111 ^ (v122 - ((2 * v122) & 0xA2C7C52B0CE53AACLL) + 0x5163E29586729D56);
  unint64_t v131 = v119 ^ v105 ^ (v129 + 0x72E12C5D3181727BLL + (~(2 * v129) | 0x1A3DA7459CFD1B09) + 1);
  unint64_t v132 = (v125 ^ v116 ^ 0x7955EAEC4D48B80CuLL) >> v123 >> (v123 ^ 1u);
  unint64_t v133 = v131 ^ 0xAA608D3CEEB2D43FLL ^ (((v131 >> 61) ^ (v131 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v131 >> 61) ^ (v131 >> 39) ^ 0xAFF5F4)) & 0xDF18DE)
                                      - 0x26589F271907391);
  uint64_t v134 = (((v131 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v131 << 25) ^ 0x62C1BAB0A0000000) ^ (v133
                                                                                                  - (v133 ^ (v131 << 25) ^ 0x62C1BAB0A0000000)))
        + v133) ^ (8 * v131);
  unint64_t v135 = ((v126 >> 41) | (v126 << 57)) ^ (v126 >> 7) ^ (((v126 << 23) ^ 0x96F56C933E000000)
                                                      - ((2 * ((v126 << 23) ^ 0x96F56C933E000000)) & 0x315EB8E147000000)
                                                      - 0x6750A38F5C0A50B4);
  uint64_t v136 = (v130 >> 10) ^ (v130 << 47) ^ (v130 >> 17) ^ (v130 << 54) ^ 0x3ACDF083CE37A8DELL;
  uint64_t v137 = (v136 - ((2 * v136) & 0x712484B7B01F9132) + 0x3892425BD80FC899) ^ v130;
  unint64_t v138 = v137 ^ 0xC1F2BA929434C7FALL;
  unint64_t v139 = ((v126 ^ (unint64_t)v119) << 36) ^ ((v126 ^ (unint64_t)v119) << 45) ^ ((v126 ^ (unint64_t)v119) >> 19) ^ ((v126 ^ (unint64_t)v119) >> 28) ^ 0x5F11C6A97364806DLL;
  unint64_t v140 = v135 ^ v126 ^ v137;
  unint64_t v141 = v135 ^ v119 ^ (v139 - ((2 * v139) & 0xDEE8F857F083FF38) - 0x108B83D407BE0064);
  unint64_t v142 = (((v128 << 58) ^ (v128 << 63)) & 0xFC00000000000000 | (v128 >> 6)) ^ v132;
  uint64_t v143 = ((v142 ^ 0x31E557ABB13522E0)
        - 2 * ((v142 ^ 0x31E557ABB13522E0) & 0x5E023972E688B45FLL ^ v142 & 0xB)
        - 0x21FDC68D19774BACLL) ^ v128;
  unint64_t v144 = v143 ^ 0xA757D39EABC00C58;
  unint64_t v145 = ((v143 ^ 0xA757D39EABC00C58)
        + 0x3EA97B8D290965DCLL
        - 2 * ((v143 ^ 0xA757D39EABC00C58) & 0x3EA97B8D290965FDLL ^ v143 & 0x21)) ^ v134 ^ 0x817EA2062FE3A75CLL;
  uint64_t v146 = (v134 ^ 0x40282674F9153D7FLL) & v144;
  unint64_t v147 = ((v138 & ~v145) + 0x3EA97B8D290965DCLL - ((2 * (v138 & ~v145)) & 0x7D52F71A5212CBB8)) ^ v134 ^ 0x817EA2062FE3A75CLL;
  unint64_t v148 = v145 ^ (v140 ^ 0x7FC0ABD986A26D03) & (v137 ^ 0x3E0D456D6BCB3805);
  unint64_t v149 = (v146 - ((v146 - 0x16EA949F12B91C0BLL - ((2 * v146) & 0xD22AD6C1DA8DC7EALL)) ^ v141 ^ 0x4A6184653663B71ELL)) ^ ((v141 ^ 0x5C8B10FA24DAAB14) + 1);
  unint64_t v150 = ((v149 - 0x16EA949F12B91C0BLL - ((2 * v149) & 0xD22AD6C1DA8DC7EALL)) ^ v141 ^ 0x4A6184653663B71ELL) + v146;
  unint64_t v151 = v147 ^ v150;
  unint64_t v152 = (((2 * v140) ^ 0x7EA84CF2BB25F9) + (v140 ^ 0x7FC0ABD986A26D03)) & (v141 ^ 0xA374EF05DB2554EBLL);
  unint64_t v153 = (((v134 ^ 0xBFD7D98B06EAC280) & (v141 ^ 0x5C8B10FA24DAAB14))
        - ((2 * ((v134 ^ 0xBFD7D98B06EAC280) & (v141 ^ 0x5C8B10FA24DAAB14))) & 0xFB1E42B5428159B0)
        - 0x270DEA55EBF5328) ^ v140;
  unint64_t v154 = v150 ^ v153;
  unint64_t v155 = v148 ^ v138 ^ v152;
  *((void *)&v119 + 1) = v151 ^ 0x1877DA25;
  *(void *)&long long v119 = v151 ^ 0x425764BB40000000;
  uint64_t v156 = v119 >> 30;
  *((void *)&v119 + 1) = v150 ^ v153 ^ 0x23451;
  *(void *)&long long v119 = v150 ^ v153 ^ 0x15B92D66D1080000;
  uint64_t v157 = (v151 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v158 = v148 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v148 & 0x2011531CB0A0EE4 | (v148 << 58));
  uint64_t v159 = (v153 >> 41) ^ 0x794411;
  uint64_t v160 = (v119 >> 19) ^ ((v150 ^ v153 ^ 0x824F8A8327E2C1DBLL) << 36) ^ ((v150 ^ v153 ^ 0x824F8A8327E2C1DBLL) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v161 = v154 ^ 0xFCBFEE8356AE3366 ^ (v160 - ((2 * v160) & 0xD20D87CB0F480E6ELL) - 0x16F93C1A785BF8C9);
  unint64_t v162 = (-2
        - ((~(((v148 >> 1) ^ 0x285DC4025910456DLL) & 0x4D6CE94E99AEC21DLL) | 0x239D0BEE00326232)
         + (((v148 >> 1) ^ 0x285DC4025910456DLL) & 0x10C094E00224210 | 0xDC62F411FFCD9DCDLL))) ^ ((v148 >> 1) ^ 0x285DC4025910456DLL) & 0x4D6CE14E99AEC21DLL;
  uint64_t v163 = __ROR8__(v156 ^ (v151 >> 61 << 34) ^ 0x84F57132E3442245, 34);
  unint64_t v164 = v158 ^ (v148 << 63);
  *((void *)&v119 + 1) = v153 ^ 0x26;
  *(void *)&long long v119 = v153 ^ 0xF2882250D486FC00;
  uint64_t v165 = v153 ^ 0xF2D68359D2CA9494 ^ ((v119 >> 7) - ((2 * (v119 >> 7)) & 0xBD42120C98D164) + 0x5EA109064C68B2);
  uint64_t v166 = (v163 ^ (v151 >> 39) ^ 0x84AEC9) + v157;
  uint64_t v167 = v163 & v157;
  uint64_t v168 = v165 & v159;
  uint64_t v169 = v165 + v159;
  uint64_t v170 = v166 - 2 * v167;
  unint64_t v171 = v162 ^ 0x5492B954A2624D5BLL ^ (v164 + 0x770FBABAA2502F69 - ((2 * v158) & 0xEE1F757544A05ED2));
  BOOL v172 = v106 == 0x7809200909112110;
  uint64_t v173 = v171 ^ 0x8F045455DAFD096;
  if (v172) {
    uint64_t v173 = v162 ^ 0x5492B954A2624D5BLL;
  }
  uint64_t v174 = v170 ^ (8 * v151);
  uint64_t v175 = v169 - 2 * v168;
  uint64_t v176 = v171 + 2 * ((v173 ^ 0x770FBABAA2502F69) & v158) + 0x4FE685EAB3166D74;
  if (((v162 ^ 0x239D03EE00326232) & v164) != 0) {
    unint64_t v177 = ((v164 + (v162 ^ 0xDC62FC11FFCD9DCDLL) + 1) ^ 0x7FF6E5FEBBD6FDF4)
  }
         - 0x3010601408C09080
         + ((2 * (v164 + (v162 ^ 0xDC62FC11FFCD9DCDLL) + 1)) & 0xFFEDCBFD77ADFBE8);
  else {
    unint64_t v177 = v176;
  }
  unint64_t v178 = v175 ^ (v153 << 23);
  unint64_t v179 = v155 ^ (v155 >> 10) ^ (v155 >> 17) ^ (v155 << 47) ^ (v155 << 54);
  unint64_t v180 = v178 ^ v179;
  *((void *)&v181 + 1) = v177 + 0x10197A154CE9928CLL;
  *(void *)&long long v181 = v177 - 0x4FE685EAB3166D74;
  unint64_t v182 = v174 ^ 0xAA6A2D4BA2838D66;
  uint64_t v183 = __ROR8__(__ROR8__(v178, 57) ^ __ROR8__(v161, 57) ^ 0x4BD8CB40E7C8671FLL, 7);
  unint64_t v184 = v174 ^ 0xAA6A2D4BA2838D66 ^ (v148 >> 6) ^ __ROR8__(__ROR8__(v148, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v181 >> 61), 3);
  *((void *)&v181 + 1) = v183 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v181 = v183;
  unint64_t v185 = (v184 ^ 0xC341B7A7BB59AAAALL) & (v174 ^ 0x5595D2B45D7C7299) ^ v183 ^ 0x16FDF2E892CF90CELL;
  unint64_t v186 = v184 ^ 0xC341B7A7BB59AAAALL ^ (v178 ^ 0x286A437E13000000) & (v179 ^ 0xAEA93A9FECEAF928);
  unint64_t v187 = (v183 ^ 0x16FDF2E892CF90CELL) & (v180 ^ 0x86C379E1FFEAF928);
  unint64_t v188 = (__ROR8__((v181 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v182 ^ v180;
  unint64_t v189 = v188 ^ v185;
  unint64_t v190 = v188 ^ v185 ^ 0x793C861E001506D7;
  unint64_t v191 = (v184 ^ 0x3CBE485844A65555) & (v179 ^ 0x5156C560131506D7) ^ v182 ^ v185;
  unint64_t v192 = v186 ^ 0x6DC4FB0BD4FFFF44;
  unint64_t v193 = ((v186 ^ v187) - 0x4AF195DE85CA1926 + (~(2 * (v186 ^ v187)) | 0x95E32BBD0B94324DLL)) ^ v179;
  *((void *)&v181 + 1) = v189 ^ 0x3D2C8;
  *(void *)&long long v181 = v189 ^ 0x7000A55D1B600000;
  unint64_t v194 = __ROR8__(__ROR8__(v186 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v195 = v191 ^ (v191 >> 39) ^ (8 * v191) ^ (v191 << 25) ^ (v191 >> 61);
  uint64_t v196 = (v181 >> 19) ^ (v190 << 36) ^ (v190 >> 28) ^ 0xB76D41F000000000;
  uint64_t v197 = (v196 - ((2 * v196) & 0x45B97F33EF7C417ELL) - 0x5D2340660841DF41) ^ v189;
  *((void *)&v181 + 1) = v188 ^ 0xB187E34586;
  *(void *)&long long v181 = v188 ^ 0xA811E00000000000 ^ (((v188 << 57) ^ 0xC00000000000000)
                                                  - (((v188 << 57) ^ 0xC00000000000000) >> 58 << 59)
                                                  - 0x3672E1DC8F1A4A5);
  uint64_t v198 = ((v195 ^ 0xABCF8FE7C463E5DLL)
        + (v192 ^ (v192 >> 1) ^ (v194 << 58))
        - 2 * ((v195 ^ 0xABCF8FE7C463E5DLL) & (v192 ^ (v192 >> 1) ^ (v194 << 58)))) ^ ((v194 >> 6) | (v194 << 63));
  uint64_t v199 = __ROR8__(__ROR8__(v188, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x4296262F68E2B576 ^ (v181 >> 42), 22);
  unint64_t v200 = v193 ^ (v193 >> 10) ^ (((v193 << 54) ^ (v193 << 47)) & 0xFFFF800000000000 | (v193 >> 17));
  uint64_t v201 = v200 ^ 0x83DBB274F399258;
  if (v74) {
    unint64_t v202 = v199 ^ 0xDD74CA3F78583B7ELL;
  }
  else {
    unint64_t v202 = 0x228B35C087A7C481;
  }
  uint64_t v203 = (v200 ^ 0x4ACFCFD56D2EA88BLL) & ~v198;
  unint64_t v204 = v199 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v188, 41) ^ v202 & v199;
  unint64_t v205 = v204 ^ 0xD2BF3AC9F8BD3FB0;
  unint64_t v206 = v197 ^ v204 ^ 0xD2BF3AC9F8BD3FB0;
  unint64_t v207 = ((v204 ^ 0xD2BF3AC9F8BD3FB0)
        + 0x42F274F222173AD3
        - 2 * ((v204 ^ 0xD2BF3AC9F8BD3FB0) & 0x42F274F222173ADBLL ^ v204 & 8)) ^ v201;
  unint64_t v208 = v198 & (v195 ^ 0xF543070183B9C1A2);
  unint64_t v209 = v205 & (v200 ^ 0xB530302A92D15774) ^ v198;
  unint64_t v210 = v206 ^ 0xD2DC1AC47F1FC646 ^ v208;
  unint64_t v211 = v207 ^ (v206 ^ 0x2D23E53B80E039B9) & (v195 ^ 0xABCF8FE7C463E5DLL);
  unint64_t v212 = v211 ^ v210;
  *((void *)&v213 + 1) = v211 ^ v210 ^ 0x862;
  *(void *)&long long v213 = v211 ^ v210 ^ 0x6E829E585CD8000;
  unint64_t v214 = ((v210 ^ v203) - ((2 * (v210 ^ v203)) & 0xB108724070D315B2) - 0x277BC6DFC7967527) ^ v195;
  unint64_t v215 = v209 ^ v201 ^ (((v206 ^ 0xD2DC1AC47F1FC646) & ~v207)
                      + 0x42F274F222173AD3
                      - ((2 * ((v206 ^ 0xD2DC1AC47F1FC646) & ~v207)) & 0x85E4E9E4442E75A6));
  *(void *)&long long v213 = __ROR8__((v213 >> 14) ^ __ROR8__(v212, 33) & 0xFFFC00007FFFFFFFLL ^ 0x7A565A2AF4F5B45ELL, 50);
  unint64_t v216 = (v213 ^ 0x968ABDE0682B2E2CLL) & 0x6181A3FA608E1D1DLL ^ ((v212 << 45) ^ 0xB10C400000000000) & 0x6181A00000000000 | (v213 ^ 0x968ABDE0682B2E2CLL) & 0x9E7E5C059F71E2E2 ^ ((v212 << 45) ^ 0xB10C400000000000) & 0x9E7E400000000000;
  BOOL v217 = a38 + 1163779500 < a31;
  if (a33 > 0xB5FF629C != (a38 + 1163779500) < 0x4A009D63) {
    BOOL v217 = a33 > 0xB5FF629C;
  }
  *((void *)&v218 + 1) = v215 ^ 0x149E7;
  *(void *)&long long v218 = v215 ^ 0x29E1AB0124FE0000;
  return (*(uint64_t (**)(unint64_t, void, unint64_t, void, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (v220 ^ (69 * !v217))))(v216, *((void *)&v218 + 1), v214 ^ (8 * v214) ^ (v214 << 25) ^ (v214 >> 39) ^ (v214 >> 61), v215 ^ __ROR8__(v215, 10) ^ (v218 >> 17), v216 ^ (v212 >> 28) ^ (v212 << 36), a6, (v211 ^ 0xEEC88552DF07F87FLL ^ (((v211 << 57) ^ 0xAE00000000000000)- ((2 * ((v211 << 57) ^ 0xAE00000000000000)) & 0x5000000000000000)- 0x56034B973FD32FD8)) & ((v211 >> 41) ^ 0x239A18), 0x62AC7C19E948E061, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1DA73831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a19) = 1157139139;
  int v29 = 628203409 * ((&a22 - 210220656 - 2 * ((unint64_t)&a22 & 0xF3784990)) ^ 0x71F045A3);
  int v30 = 610416840 - v29 + *(_DWORD *)(a2 + 4) + 706;
  a27 = *(void *)(a2 + 8);
  a28 = a14;
  LODWORD(a24) = 1391 - v29;
  HIDWORD(a24) = v30;
  a23 = a13;
  a22 = a15;
  a25 = a16;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v28 + 16536))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((1343 * (a26 == 2058996701)) ^ 0x1BFu)))(v34, a2, 4135933839, 826018278, 159034331, a6, 154153363, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1DA73843C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a14 + 4 * (v17 - 1876367480)) = v14;
  BOOL v20 = v17 - 1445378209 > v15 - 1716495798 && v17 - 1445378209 < v16;
  return (*(uint64_t (**)(void))(v18 + 8 * ((45 * v20) ^ v15)))();
}

void sub_1DA738490()
{
}

uint64_t sub_1DA738548@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W4>, int a4@<W5>, unsigned int a5@<W8>)
{
  unsigned int v9 = ((v7 + (a2 ^ 0x3D7) - 93) ^ a3) >> v8;
  *(unsigned char *)(*(void *)(a1 + 8) + ((13 * (a2 ^ 0x395)) ^ a5) + a4) = v9 - ((2 * v9) & 0xBF) + 95;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (1966 * (a4 - 1 == v6 + 906)))))();
}

uint64_t sub_1DA7385C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, int32x4_t a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v51 = BYTE4(a42) ^ 0x70;
  if (v51 == 1)
  {
    BYTE4(a37) = ((8 * a39) ^ 0xB0) - ((((8 * a39) ^ 0xFFFFFFB0) << (a6 + v50 - 1)) & 0xB0) + 95;
    BYTE5(a37) = ((a39 >> 5) ^ 0x28) + (~(2 * ((a39 >> 5) ^ 0x28)) | 0x41) + 96;
    BYTE6(a37) = ((a39 >> 13) ^ 0xF3) + (~(2 * ((a39 >> 13) ^ 0xF3)) | 0x41) + 96;
    HIBYTE(a37) = ((a39 >> 21) ^ 0xE) - ((2 * ((a39 >> 21) ^ 0xE)) & 0xBF) + 95;
    HIDWORD(v54) = HIDWORD(a38) ^ 0x1D;
    LODWORD(v54) = a39 ^ 0x40000000;
    LOBYTE(a3_Block_object_dispose(&STACK[0x360], 8) = (v54 >> 29) + (~(2 * (v54 >> 29)) | 0x41) + 96;
    BYTE1(a3_Block_object_dispose(&STACK[0x360], 8) = ((HIDWORD(a38) >> 5) ^ 0x53) - ((2 * ((HIDWORD(a38) >> 5) ^ 0x53)) & 0xBF) + 95;
    BYTE2(a3_Block_object_dispose(&STACK[0x360], 8) = ((HIDWORD(a38) >> 13) ^ 0x5F) - ((2 * ((HIDWORD(a38) >> 13) ^ 0x5F)) & 0xBF) + 95;
    unsigned int v53 = ((HIDWORD(a38) >> 21) ^ 0xFFFFFFAD) - ((2 * ((HIDWORD(a38) >> 21) ^ 0xFFFFFFAD)) & 0xFFFFFFBF) + 95;
    goto LABEL_5;
  }
  if (v51 == 2)
  {
    unsigned int v53 = (HIDWORD(a38) >> (v50 ^ (v50 + 124) ^ 0x99)) ^ 0xFFFFFFAD;
    BYTE4(a37) = v53 - ((2 * v53) & 0xBF) + 95;
    BYTE5(a37) = ((HIDWORD(a38) >> 13) ^ 0x5F) - ((2 * ((HIDWORD(a38) >> 13) ^ 0x5F)) & 0xBF) + 95;
    BYTE6(a37) = ((HIDWORD(a38) >> 5) ^ 0x53) - ((2 * ((HIDWORD(a38) >> 5) ^ 0x53)) & 0xBF) + 95;
    HIDWORD(v52) = HIDWORD(a38) ^ 0x1D;
    LODWORD(v52) = a39 ^ 0x40000000;
    HIBYTE(a37) = (v52 >> 29) - ((2 * (v52 >> 29)) & 0xBF) + 95;
    LOBYTE(a3_Block_object_dispose(&STACK[0x360], 8) = ((a39 >> 21) ^ 0xE) - ((2 * ((a39 >> 21) ^ 0xE)) & 0xBF) + 95;
    BYTE1(a3_Block_object_dispose(&STACK[0x360], 8) = ((a39 >> 13) ^ 0xF3) - ((2 * ((a39 >> 13) ^ 0xF3)) & 0xBF) + 95;
    BYTE2(a3_Block_object_dispose(&STACK[0x360], 8) = ((a39 >> 5) ^ 0x28) - ((2 * ((a39 >> 5) ^ 0x28)) & 0xBF) + 95;
    LOBYTE(v53) = ((8 * a39) ^ 0xB0) + (~(2 * ((8 * a39) ^ 0xB0)) | 0x4F) + 96;
LABEL_5:
    BYTE3(a3_Block_object_dispose(&STACK[0x360], 8) = v53;
  }
  return sub_1DA71FB60(a1, a2, a3, a4, a5, a6, a7, a8, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a9,
           a10,
           a11,
           a12);
}

void sub_1DA7387F8()
{
  if (v0 == 1394970334) {
    int v1 = 2058996701;
  }
  else {
    int v1 = -2058973179;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1DA73885C()
{
}

uint64_t sub_1DA738868(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, int a5, uint64_t a6)
{
  int8x16x4_t v18 = vld4q_s8(a4);
  uint8x16_t v8 = (uint8x16_t)veorq_s8(v18.val[1], v7);
  _Q17 = vmovl_u8(*(uint8x8_t *)v8.i8);
  _Q16 = vmovl_high_u8(v8);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  return sub_1DA736950(a1, a2, a3, (uint64_t)a4, a5 - 864, a6, v6 + 16);
}

void sub_1DA738990()
{
}

uint64_t sub_1DA738A68(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v4 - 644) | 0x591) - 1482) * (v5 == a4)) | v4)))();
}

void sub_1DA738A98()
{
}

uint64_t sub_1DA738B0C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 ^ 0x29u) < 8) ^ (v1 + 1)) & 1)
                                * ((v1 - 2081747991) & 0x7C14F3EA ^ 0x321)) ^ v1)))();
}

uint64_t sub_1DA738B68@<X0>(uint64_t a1@<X8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>, int32x4_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x16_t a9@<Q7>)
{
  uint64_t v16 = v10 + 4;
  int v17 = v13 + 1;
  a9.i64[0] = v17[57].i64[0];
  a9.i32[2] = v17[57].i32[2];
  int8x16_t v18 = vextq_s8(a2, a9, 0xCuLL);
  int8x16_t v19 = a9;
  v19.i32[3] = v17[57].i32[3];
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v19, a3), vandq_s8(v18, a7)), 1uLL), a4);
  v21.i32[0] = *(_DWORD *)(v11 + 4 * (v17[57].i32[0] & 1));
  v21.i32[1] = *(_DWORD *)(v11 + 4 * (v17[57].i32[1] & 1));
  v21.i32[2] = *(_DWORD *)(v11 + 4 * (v17[57].i32[2] & 1));
  v21.i32[3] = *(_DWORD *)(v11 + 4 * (v19.i8[12] & 1));
  *(int8x16_t *)(v15 + 4 * (v16 + a1)) = veorq_s8(veorq_s8(veorq_s8(*v17, v21), a8), (int8x16_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), a5)), a6));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v16 == -25) * v12) ^ v9)))();
}

uint64_t sub_1DA738B74()
{
  return sub_1DA738C50(0x64C21D7BCB4B6B4CLL);
}

uint64_t sub_1DA738C50(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v12 = a2 > 0x4B66E428;
  int v13 = v6 + a3 + ((v8 - 138305910) & 0x83E66FD ^ v9);
  int v14 = v12 ^ (v13 < v10);
  BOOL v15 = v13 < a6;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v11) ^ v8)))();
}

uint64_t sub_1DA738CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(void *)(v19 - 120) = v16;
  *(_DWORD *)(v19 - 10_Block_object_dispose(&STACK[0x360], 8) = v18 + ((v19 - 128) ^ 0x6DF41809) * v15 - 146;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v18 + 1638)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v19 - 112) > (v17 + 1))
                                              * (((v18 + 103) | 0x404) ^ 0x418)) ^ v18)))(v20);
}

uint64_t sub_1DA738D34()
{
  int v6 = (v0 - 1460166263) ^ 0x68CC75B;
  unsigned int v7 = (v0 - 1460166263) & 0xF9733B6F;
  int v8 = v4 + v0 + 1524;
  BOOL v9 = v1 + 1039523936 < (v3 + 1370644800);
  if (v3 + 1370644800 < (v5 + 587) != v1 + 1039523936 < (v6 ^ v5) + v7) {
    BOOL v9 = v3 + 1370644800 < (v5 + 587);
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((435 * v9) ^ v8)))();
}

void sub_1DA738DC4()
{
}

void sub_1DA738DD8()
{
}

uint64_t sub_1DA738DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16
  }
                                                                + 8
                                                                * ((968
                                                                  * (*(_DWORD *)(v17 - 128) == 17 * (a6 ^ (a6 + 20))
                                                                                             + 1133293382)) ^ (a6 + a7))))(a1, a2, a9);
  if (a16 != 1) {
    JUMPOUT(0x1DA738F40);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8
                                                     * (((*(_DWORD *)(v17 - 128) != 1133293858)
                                                       * ((76 * (a6 ^ (a6 - 3))) ^ 0x23E)) ^ (a7 + a6 + 513))))(a1, a9);
}

uint64_t sub_1DA738F7C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1870 * (*(_DWORD *)(v1 + 4 * (v2 + v5 - 1)) == v3 + v0 - 948)) ^ v0)))();
}

void sub_1DA73902C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(v4 - 120) = a4 - 1;
  *(_DWORD *)(v4 - 124) = a4 + 14;
  JUMPOUT(0x1DA739130);
}

uint64_t sub_1DA7391A4(uint64_t result)
{
  return sub_1DA7214DC(result);
}

uint64_t sub_1DA739200(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 == 24) * (453 * (a3 ^ 0x191) + 1061)) ^ a3)))();
}

uint64_t sub_1DA739238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (((a5 == 2058996701) * (v12 + ((v9 - 496) ^ (v11 + 248)) - 35)) | (v9 - 496))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DA739288(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16_t v21 = *(unsigned __int8 **)(v20 + 8 * (v11 ^ (a3 + 73)));
  uint64_t v7 = (v11 - a3 + 1424) | 0x67u;
  BOOL v9 = ((**v14 - (*v21 ^ v12)) ^ (v7 + v15)) + (v17 & (2 * (**v14 - (*v21 ^ v12)))) + v18 != v19
    || a7 - 0x30530205DD19584DLL + (v7 ^ 0x30530205D3E9234BLL) == 0;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (int)((v9 * v13) ^ v7)))(103);
}

uint64_t sub_1DA7392AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * (((((a7 - 778) ^ 0x6E1) - 1285) * (v7 < 0x10)) ^ (a7 - 778))))(a1, a2, a3, 0);
}

uint64_t sub_1DA7392DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2027 * (v0 < v1 + 1632812249)) ^ (v1 + 1101969784))))();
}

uint64_t sub_1DA739334()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1265
                                * (((((v1 - 45) | 0x8C) ^ 0xFB3FD732) & (2 * (*v0 - 42))) + ((*v0 - 42) ^ 0xFD9FEBFF) == -39851009)) ^ (v1 + 372))))();
}

uint64_t sub_1DA7393A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  *(unsigned char *)(a4 + v_Block_object_dispose(&STACK[0x360], 8) = *(unsigned char *)(v11 + (v9 + v12))
                      - ((2 * *(unsigned char *)(v11 + (v9 + v12))) & 0xBF)
                      + 95;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 63) * a5) ^ (a7 + v7 - 217))))();
}

void sub_1DA7393F0()
{
}

uint64_t sub_1DA739400()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1430 * (*off_1F34B1D28 == 0)) ^ 0x1DEu)))();
}

void sub_1DA73946C(uint64_t a1)
{
  int v1 = 460628867 * ((~a1 & 0x515CA2D5 | a1 & 0xAEA35D2A) ^ 0x1DCA20A8);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1DA739524()
{
  return (*(uint64_t (**)(unint64_t))(v1
                                                     + 8
                                                     * ((v0 ^ (((v0 - 268) ^ 0x18F36F66) == 418606973)) & 1 | (4 * ((v0 ^ (((v0 - 268) ^ 0x18F36F66) == 418606973)) & 1)) | (v0 + 129))))(STACK[0x3F0]);
}

void sub_1DA739578()
{
}

uint64_t sub_1DA739588()
{
  STACK[0x1958] = 0x1E6515E7876DA538;
  int v4 = *(_DWORD **)(v1 + 8 * (v0 & 0x11953A06));
  STACK[0x3F0] = (unint64_t)v4;
  LODWORD(STACK[0x584]) = *v4 - 330100430;
  uint64_t v5 = **(unsigned int **)(v1 + 8 * (v0 ^ 0x16Bu));
  unint64_t v6 = STACK[0x358];
  int v7 = (v0 + 2034273248) ^ STACK[0x358];
  *(_DWORD *)(v3 - 152) = v0 + 2034273248 - STACK[0x358] - 85;
  unint64_t v8 = STACK[0x308];
  *(void *)(v3 - 16_Block_object_dispose(&STACK[0x360], 8) = v5 - v6;
  *(void *)(v3 - 160) = v8;
  *(_DWORD *)(v3 - 192) = v7;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x360], 8) = v6;
  *(_DWORD *)(v3 - 176) = ((v0 + 2034273248) & 0x795C8CBE) - v6;
  *(_DWORD *)(v3 - 184) = 2104632111 - v6 + v0;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x932u)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 180)))(v9);
}

void sub_1DA73965C()
{
}

uint64_t sub_1DA739664(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(*v12 + (v11 + a7)) = *(unsigned char *)(*v12 + (v9 + a1));
  return (*(uint64_t (**)(void))(v10 + 8 * ((976 * (v8 == 1032864085)) ^ v7)))();
}

uint64_t sub_1DA7396C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((v3 ^ 0x3EB) + 962) * (v4 == 2058996701)) ^ (v3 + 485))))(a1, a2, a3, 2235994116);
}

uint64_t sub_1DA739708(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1763 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x2E9u)))();
}

uint64_t sub_1DA739734(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4
                                                                      + 8
                                                                      * (int)(((((((a4 & 0xDA59BE65) + 1079804763) & 0xBFA37B4B ^ 0x313) & v5) == 0)
                                                                             * (((a4 & 0xDA59BE65) - 1218709350) & 0x48A40769 ^ 0x467)) ^ a4 & 0xDA59BE65)))(a1, a2, a3, (v6 - a3));
}

uint64_t sub_1DA7397A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,unsigned int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unint64_t v64 = STACK[0x4F0];
  int v65 = *(unsigned __int8 *)(STACK[0x4F0] - 0x4696E7753303C8D2) ^ 0x70;
  if (v65 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (((*(_DWORD *)(v64 - 0x4696E7753303C8D6) == 1133293858) * ((a3 + 941) ^ 0x4A4)) ^ (a3 + 1425))))(a1, 420384365, 1325, a4, 271, 237, 740, 4294967222);
  }
  if (v65 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v63
  }
                                                       + 8
                                                       * ((25
                                                         * (*(_DWORD *)(v64 - 0x4696E7753303C8D6) == (a56 ^ 0x438CB0F6))) ^ (a3 + 754))))(11205605, 61);
  int v67 = 163 * (a3 ^ 0x110);
  STACK[0x5F0] = 91;
  *(unsigned char *)(v64 - 0x4696E7753303C8D7) = ((a63 + ((v67 - 94) ^ 0xED)) ^ 0xBA) * (a63 + 11);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v63
                                                                                        + 8
                                                                                        * ((740 * (STACK[0x5F0] == 0)) ^ v67)))(11205605, 61, a56, a4, 198757329, 237);
}

uint64_t sub_1DA73996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * ((30
                                                                                 * (v4 >= ((v5 - 1467) ^ 0x2EA ^ (2 * v5) ^ 0xDFEu))) | v5)))(a1, a2, a3, a4, 0);
}

void sub_1DA7399A8()
{
  unint64_t v4 = STACK[0x528] + 0x4696E7753303C9B2;
  STACK[0x588] = v4;
  int v5 = 628203409 * ((((2 * (v3 - 192)) | 0xD665260C) - (v3 - 192) + 349007098) ^ 0x69BA9F35);
  *(_DWORD *)(v3 - 176) = v1 + 1172345424 + v5 + 9;
  *(void *)(v3 - 184) = v4;
  *(_DWORD *)(v3 - 18_Block_object_dispose(&STACK[0x360], 8) = 2067890216 - v5;
  unint64_t v6 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * ((int)v1 + 2110)))(v3 - 192);
  STACK[0x468] = *(void *)(v2 + 8 * v1);
  STACK[0x408] = v6;
  JUMPOUT(0x1DA717C60);
}

uint64_t sub_1DA739A70()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 == ((v1 - 1449810721) & 0x566A5FDD ^ 0x761DB5E193A81ED5))
                                * (((v1 - 115) | 0x80) - 616)) ^ v1)))();
}

uint64_t sub_1DA739AC8(uint64_t a1, void *a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v42 = (*(_DWORD *)(a29 + 4 * (((v41 + v34) & v36 ^ (v32 + 90)) + v31)) ^ v29)
      + HIDWORD(v40)
      + v39 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (((v41 + v34) & v36 ^ (v32 + 90)) + v31)) ^ v29);
  *(_DWORD *)(a29 + 4 * (v31 + v32)) = v42 + v29 - (v30 & (2 * v42));
  BOOL v43 = v31 + v37 < a3;
  if (a5 > v33 != v31 + v37 < v38) {
    BOOL v43 = a5 > v33;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((2 * !v43) | (32 * !v43) | v41)))();
}

uint64_t sub_1DA739B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                         + 8
                                                                                         * ((1380
                                                                                           * (*(_DWORD *)(a19 - 0x68A89052B2EA55A8) == ((v20 - 1394963858) & 0x5325775F ^ 0x7AB9CD96))) ^ (v20 - 964))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1DA739BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = (((a8 + 1954247134) & 0x8B848F8F) - 1400) & (a7 - 2012853942);
  *(unsigned char *)(v14 + (a7 - 2012853942)) = *(unsigned char *)(v10 + v15) ^ *(unsigned char *)(v8
                                                                                       + (a7 - 2012853942)) ^ *(unsigned char *)(v15 + v12 + 2) ^ *(unsigned char *)(v15 + v11 + 4) ^ (-87 * ((((a8 - 34) & 0x8F) - 120) & (a7 + 74)));
  return (*(uint64_t (**)(void))(v13 + 8 * ((254 * (a7 - 1 != v9)) ^ (a8 + 589))))();
}

uint64_t sub_1DA739C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((7 * (a1 + 1 != v9 + 4)) ^ a8)))();
}

uint64_t sub_1DA739D34()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v0 == (v1 ^ 0x5ACLL)) * (((v1 + 921471474) & 0xC913746F) - 1082)) ^ v1)))();
}

uint64_t sub_1DA739D80@<X0>(unint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, unsigned int a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  BOOL v27 = a15 > a13;
  unint64_t v28 = (a2 ^ HIDWORD(v25)) + HIDWORD(a1) + (*(_DWORD *)(a23 + a8) ^ a3);
  *(_DWORD *)(a23 + 4 * a9) = v28 + a3 - ((v28 << (v26 + 124 + ((v26 - 74) | 0xE0) + 87)) & v23);
  *(_DWORD *)(a23 + a_Block_object_dispose(&STACK[0x360], 8) = HIDWORD(v28) | a3;
  if (v27 == a18 - 498120202 < -1780138557) {
    BOOL v27 = a18 - 498120202 < a14;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (v26 ^ (22 * !v27))))();
}

uint64_t sub_1DA739E44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + v13 + v11) = v15;
  return (*(uint64_t (**)(void))(v14 + 8 * ((((v12 & 0xFFFFFFFFFFFFFFF8) == 8) * a1) ^ v11)))();
}

uint64_t sub_1DA739E80@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v12 = (((19 * ((a2 + 629711581) & 0xDA7756F3 ^ 0x74)) ^ 0xFFFFFF8E) & a1) - a11 == -4;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v12) | (8 * v12)) ^ a2)))();
}

void sub_1DA739EE0(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  int v2 = 1178560073 * (((a1 | 0x5D6FE364) - (a1 | 0xA2901C9B) - 1567613797) ^ 0xF0F8DFC1);
  int v3 = *(_DWORD *)a1 + v2;
  int v4 = *(_DWORD *)(a1 + 36);
  int v31 = *(_DWORD *)(a1 + 40) - v2;
  unint64_t v21 = 1178560073
      * (((a1 | 0x291B24D45D6FE364) - (a1 | 0xD6E4DB2BA2901C9BLL) - 0x291B24D45D6FE365) ^ 0x8F1E909AF0F8DFC1);
  int v5 = v4 ^ v2;
  unsigned int v6 = 628203409 * ((v39 + 69161288 - 2 * (v39 & 0x41F5148)) ^ 0x86975D7B);
  unint64_t v25 = &STACK[0x4696E7753303CA0E];
  int v41 = &STACK[0x4696E7753303CA0E];
  int v42 = v3 + v6 + 1172345372;
  unsigned int v40 = 2067890216 - v6;
  int v7 = (char *)*(&off_1F34B17C0 + v3 + 73) - 8;
  (*(void (**)(unsigned char *))&v7[8 * v3 + 16392])(v39);
  int v8 = v31;
  int v17 = v5 - 944179785;
  int v20 = v5 - 616620752;
  int v15 = v5 + 114307196;
  int v16 = 16731248;
  int v14 = v5 + 611141218;
  v13[2] = (char *)&v13[-150031812] + 1;
  v13[1] = &v13[-150031715];
  int v9 = 19 * (v3 ^ 0x64);
  int v33 = v9 ^ 0x66B;
  int v30 = v9;
  int v32 = v9 ^ 0x657;
  uint64_t v29 = v9 ^ 0x657u;
  uint64_t v22 = a1;
  int v27 = v3;
  int32x4_t v23 = vdupq_n_s32(0x7AB9CBDDu);
  int32x4_t v24 = vdupq_n_s32(0x7AB9CBDFu);
  unsigned int v18 = (v3 + 156292512) & 0xF6AF2BF7;
  int v19 = v3 ^ 0x6F9;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v26 = *(void *)&v7[8 * v3];
  unsigned int v11 = (v3 ^ 0x6F9) + v8 - ((2 * v8 + 161859558) & 0x7906CDCA) + 1096172562;
  char v34 = (HIBYTE(v11) ^ 0xBC) - (((HIBYTE(v11) ^ 0xFFFFFFBC) << (((v3 - 96) & 0xF7) + 42)) & 0xBE) + 95;
  char v35 = (BYTE2(v11) ^ 0x83) - ((2 * (BYTE2(v11) ^ 0x83)) & 0xBF) + 95;
  char v36 = (BYTE1(v11) ^ 0x66) + (~(2 * (BYTE1(v11) ^ 0x66)) | 0x41) + 96;
  char v37 = ((v3 ^ 0xF9) + v8 - ((2 * v8 - 26) & 0xCA) + 18) ^ 0xBA;
  uint64_t v12 = *(void *)&v7[8
                     * ((83 * (((2 * v38) & 0x5E ^ 0xC) + (v38 & 0x3F ^ 0x56FDE3B9u) - 1459479531 < 0xFFFFFFC0)) ^ (v3 + 979))];
  uint64_t v28 = v10;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1DA73A180@<X0>(uint64_t a1@<X8>)
{
  int v4 = v3 ^ 0x600;
  unsigned int v5 = v2 - 555888737 + ((2 * v2 + 123216296) & 0x36637D94 ^ 0xFFFFFBE2 ^ (27 * (v3 ^ 0x2F)));
  unsigned int v6 = 1225351577 * ((&v8 & 0x17A97877 | ~(&v8 | 0x17A97877)) ^ 0xCBCC5F9E);
  int v8 = v5 ^ v6;
  int v10 = v6 + v4 - 182;
  uint64_t v9 = a1;
  return (*(uint64_t (**)(int *))(v1 + 8 * (v4 + 549)))(&v8);
}

void sub_1DA73A258(uint64_t a1@<X8>, int a2, unsigned int a3, uint64_t a4)
{
  int v8 = (v7 - 1468) | 0x129;
  unsigned int v9 = 235795823 * (&a2 ^ 0x94AD4959);
  a4 = v4;
  a2 = v9 + v8 - 561;
  a3 = v5 - v9 - (((3 * (v8 ^ 0x1BD)) ^ 0xC9FF3528) & (v6 + 547189894)) - 179416179;
  (*(void (**)(int *))(a1 + 8 * (v8 + 1214)))(&a2);
  JUMPOUT(0x1DA73A2E0);
}

uint64_t sub_1DA73A308()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((v3 + 700982379) & 0xD637DB99 ^ (v0 - 920) ^ (*(unsigned __int8 *)(v2 + 7) - 1)) != v0)
                                * (((v3 - 913) | 0x38C) ^ 0x385)) ^ v3)))();
}

void sub_1DA73A36C()
{
}

uint64_t sub_1DA73A42C(uint64_t a1, int a2)
{
  *(void *)(v6 + v3) = *(void *)(v5 + v3);
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * (((a2 == 0) * v2) ^ v4)))(a1, (a2 + 8));
}

uint64_t sub_1DA73A45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((v8 + 234) | 0x40) + 145) ^ (v8 + a8) & 0x2A2D3D57)
                                * (*(_DWORD *)(v10 + v9 * (uint64_t)a7 + 36) != 1295345094)) ^ v8)))();
}

uint64_t sub_1DA73A4AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((101 * (v0 < 0xC815A334)) ^ (v1 + 1101970883))))();
}

void sub_1DA73A4FC()
{
}

void sub_1DA73A5F8()
{
}

uint64_t sub_1DA73A604()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((*(_DWORD *)(v0 - 144) + 1546) ^ 0xFFFFFC02) + *(_DWORD *)(v0 - 144) + 1546)
                                     * (*(_DWORD *)(v0 - 128) == *(_DWORD *)(v0 - 136))) ^ *(_DWORD *)(v0 - 144))))();
}

uint64_t sub_1DA73A640@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((a1 - 22) ^ 0x244) + 594) ^ 0x353) * ((5 * v3) + 4 != v2 + v1)) ^ (a1 - 22))))();
}

uint64_t sub_1DA73A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((13 * (a22 - a1 - v22 + ((a18 + 433057850) & 0xE63009D1 ^ 0xFEEA503C0E939B35) < 0x20)) ^ a18)))();
}

void sub_1DA73A6EC()
{
}

uint64_t sub_1DA73A78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                                         + 8
                                                                                         * (((a19 == -518512289)
                                                                                           * (353 * (v19 ^ 0x170) - 469)) ^ v19)))(a1, a2, a3, a4, a5, 2058996701);
}

uint64_t sub_1DA73A7DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v2 + a1) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((unint64_t)(v2 + 1 + a1) < 0x38) * ((9 * (v3 ^ 0x36D)) ^ 0x14B)) ^ v3 ^ 0x5C)))();
}

uint64_t sub_1DA73A824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a5 ^ 0x111) + 1646) * (v5 == v7)) ^ (a5 - 243))))();
}

uint64_t sub_1DA73A850(unsigned int a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x260] = v11;
  *(_DWORD *)(a7 + 1424) = 1216163889;
  *(_DWORD *)(a7 + 142_Block_object_dispose(&STACK[0x360], 8) = 1584496196;
  *(void *)(a7 + 1432) = v9;
  *(void *)(a7 + 1440) = v9;
  *(_DWORD *)(a7 + 144_Block_object_dispose(&STACK[0x360], 8) = v10;
  *(__n128 *)(a7 + 1452) = a2;
  return (*(uint64_t (**)(void))(v12 + 8 * (int)((((((v7 ^ a1) - 1590) ^ v8) != 64) * a1) | v7 ^ a1)))();
}

uint64_t sub_1DA73A8B0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  STACK[0x5D8] = 104 - a2;
  uint64_t v2 = (uint64_t (*)(void))STACK[0x478];
  STACK[0x5C0] = a1 - 112;
  return v2();
}

void sub_1DA73A8D0()
{
}

void sub_1DA73A8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,unint64_t *a42,unint64_t a43,int a44,int a45,unint64_t a46,char *a47,unint64_t *a48,int a49,int a50,unint64_t *a51,uint64_t a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,unint64_t *a61,int a62,int a63)
{
  STACK[0x280] = v83;
  STACK[0x388] = 0;
  a42 = &STACK[0x1DE36DA1BDD4F349];
  STACK[0x3C0] = (unint64_t)&STACK[0x4677F5251DE957DB];
  STACK[0x3B8] = (unint64_t)&STACK[0x5DC221302E807C0D];
  STACK[0x3B0] = (unint64_t)&STACK[0x1154A0E292853A60];
  STACK[0x3A8] = (unint64_t)&STACK[0xC0068C551B1E9C3];
  a78 = &STACK[0xDAEB4D7D86A9384];
  a77 = &STACK[0x241281ADB08D971C];
  a76 = &STACK[0xDAEB4D7D86A939C];
  a75 = &STACK[0x241281ADB08D9810];
  a51 = &STACK[0x5C88151B32906895];
  a64 = &STACK[0x1DE36DA1BDD4F1D9];
  STACK[0x2B8] = (unint64_t)&STACK[0xDAEB4D7D86A927C];
  STACK[0x2B0] = (unint64_t)&STACK[0x241281ADB08D96F4];
  a61 = &STACK[0x7906C8B5DC257234];
  STACK[0x250] = (unint64_t)&STACK[0x7906C8B5DC25726C];
  STACK[0x278] = (unint64_t)&STACK[0x4EA879534CA0FD5B];
  STACK[0x270] = (unint64_t)&STACK[0x1EC5A4A56706F802];
  a48 = &STACK[0x5F8F23596C33A463];
  int v85 = v81[2] - v78;
  STACK[0x230] = (unint64_t)v81;
  int v86 = *v81 + v78;
  unint64_t v87 = ((unint64_t)&STACK[0x5D8] ^ 0xDFEFD67F9777FCAFLL)
      + 0x68BF7FB679E94FDDLL
      + (((void)&STACK[0x5D8] << (101 * (v79 ^ 0x74u) + 8)) & 0xBFDFACFF2EEFF950);
  a69 = ((unint64_t)&STACK[0x5F0] ^ 0xFFB9DBA3EFFF4DF6)
      + 0x75E6E77DF995FF10
      + ((2 * (void)&STACK[0x5F0]) & 0xFF73B747DFFE9BE0);
  a46 = ((unint64_t)&STACK[0x598] ^ 0xF4C7FFFA6CDFC7EBLL)
      + 0xB7F2F77FFEF7DDELL
      + ((2 * (void)&STACK[0x598]) & 0xE98FFFF4D9BF8FD0);
  a44 = v85;
  LODWORD(STACK[0x26C]) = v85 - ((2 * v85 + 711070822) & 0x50F1F354) - 1112931363;
  a54 = 2 * v86;
  LODWORD(STACK[0x2D4]) = (v86 ^ 0xFD6B4412) - 1166245900 + ((2 * v86) & 0xAFA7FCDE ^ 0x52174DA);
  a43 = ((unint64_t)&STACK[0x430] ^ 0x7AEB2FBE5C4AB5BDLL)
      - 0x320100B01C020FBDLL
      + ((2 * (void)&STACK[0x430]) & 0xF5D65F7CB8956B70);
  LODWORD(STACK[0x24C]) = 823 * (v80 ^ 0x115);
  *(int32x4_t *)&STACK[0x360] = vdupq_n_s32(0x337176D9u);
  *(int32x4_t *)&STACK[0x370] = vdupq_n_s32(0x7FFFFFFEu);
  a65 = vdupq_n_s32(0x7AB9CBDDu);
  a66 = vdupq_n_s32(0x7AB9CBDFu);
  a45 = (v80 - 2132571480) & 0x7F1C74FF;
  int v88 = 21 * (v80 ^ 0x102);
  LODWORD(STACK[0x224]) = v88;
  STACK[0x2E0] = (unint64_t)&STACK[0x584] % 0x25 + 16;
  a55 = v86;
  LODWORD(STACK[0x258]) = v86 ^ 0xAAB8BA7D;
  a73 = (char *)&a9 - 0x74AC42827A6CFE55;
  STACK[0x218] = (unint64_t)&a9 - 0x74AC42827A6CFE2ELL;
  a47 = (char *)&a9 - 0x74AC42827A6D0017;
  LODWORD(STACK[0x25C]) = v80 ^ 0x155;
  a60 = v80 ^ 0x315;
  a74 = 767638398;
  unint64_t v89 = ((2 * (v84 & 0x52F273A3335D2140) - v84 - 0x52F273A3335D2148) ^ 0xA5BD36A2580F97E1) * v82;
  LODWORD(STACK[0x3FC]) = v80 + 963282596;
  unint64_t v90 = 1224239923 * ((2 * (v84 & 0x3A495C5FF7F14A18) - v84 - 0x3A495C5FF7F14A1ELL) ^ 0xEDEC16C9FABD4835);
  STACK[0x418] = v90;
  STACK[0x410] = v90 + 3490234396u;
  *(int32x4_t *)&STACK[0x330] = vdupq_n_s32(0x66E2EDB2u);
  *(int32x4_t *)&STACK[0x340] = vdupq_n_s32(0xCDC5DB64);
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0xE18F488A);
  STACK[0x318] = v84 | 0x60BA8DA7BF014117;
  LODWORD(STACK[0x314]) = v80 ^ 0x9D2C5780;
  a72 = v80 + 1513936071;
  a68 = v80 - 977498842;
  a58 = v80 + 1800409804;
  a57 = 16 * (v80 ^ 0x107);
  a56 = v80 - 1691093929;
  LODWORD(STACK[0x248]) = 91 * (v80 ^ 0x11C);
  a41 = v80 ^ 0x187;
  LODWORD(STACK[0x214]) = (v88 - 1974657477) & 0x75B2E2BB ^ 0x35;
  STACK[0x228] = v87;
  STACK[0x208] = v87 + 116;
  LODWORD(STACK[0x2E8]) = 413196212;
  STACK[0x408] = 0x74AC42827A6D0575;
  a59 = v80 ^ 0x934;
  a70 = (int)v80;
  a63 = v80 ^ 0xC3;
  a50 = 100822241;
  STACK[0x358] = v89;
  STACK[0x308] = 1308924072 - v89;
  LODWORD(STACK[0x2EC]) = 316202568;
  STACK[0x420] = v80;
  JUMPOUT(0x1DA73AF98);
}

uint64_t sub_1DA73B03C(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((47
                                * (((a1 - 1308) ^ (a3 - 43)) + v3 < ((v5 + a1 - 1750) ^ 0x5DC5F74Eu) + v3)) ^ a1)))();
}

uint64_t sub_1DA73B08C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return (*(uint64_t (**)(void))(a53
                              + 8
                              * (((((a3 == a1) ^ (3 * ((a2 + 48) ^ 0xB9))) & 1) * ((a2 + 523) ^ 0x5EB)) ^ (a2 - 464))))();
}

uint64_t sub_1DA73B0DC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v2 - 901908951) & 0x35C20EDD) + ((v2 - 1726754403) & 0x66EC2DFD) - 638)
                                * (v1 == 687865856)) ^ v2)))();
}

uint64_t sub_1DA73B134()
{
  BOOL v4 = v2 + 612126511 < (int)(v1 + 2040387210);
  if (v2 + 612126511 < -107096438 != v1 > (v0 ^ 0x306u) + 107095810) {
    BOOL v4 = v1 > (v0 ^ 0x306u) + 107095810;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * v4) ^ v0)))();
}

void sub_1DA73B1A4()
{
}

void sub_1DA73B1B4()
{
}

uint64_t sub_1DA73B20C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (8 * (((v1 == 182238938) ^ (((v0 - 57) & 0xF7) - v3 + 82)) & 1u)))))();
}

uint64_t sub_1DA73B26C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 358) | 7) ^ 0x144) * ((v1 + v0 + 117706897) < 8)) ^ (v2 + 32))))();
}

void sub_1DA73B2B4()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1DA73B30CLL);
}

void sub_1DA73B3BC()
{
}

uint64_t sub_1DA73B3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((44 * (a3 + 1 == v5 + 48)) ^ v3)))();
}

uint64_t sub_1DA73B4BC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(void *)(v2 + 24) == 0x7299FD1B0C63AD76)
                                     * ((a2 - 1035) ^ 0x3AE ^ (a2 + 721651945) & 0xD4FC71FF)) ^ a2)))();
}

uint64_t sub_1DA73B514@<X0>(char a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>)
{
  int v14 = v10 + 230;
  uint64_t v15 = (v11 + a7 + v10 + 230);
  *(unsigned char *)(a4 + v15 + 4) = *(unsigned char *)(a5 + v15) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + a8 + 1) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ ((v15 & 0xF) * a1) ^ v12;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v11 - 1 != a6 + (v14 ^ a2) - 46 - 19) * a3) ^ (v14 + 1182))))();
}

uint64_t sub_1DA73B58C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1797 * ((a4 + 1 + v5) < 0x3C)) ^ v4)))();
}

void sub_1DA73B658()
{
}

void sub_1DA73B660()
{
}

uint64_t sub_1DA73B7C8@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v6 = (a2 - 392) | 0x180;
  *(unsigned char *)(v3 + (a1 - 845240499)) = *(unsigned char *)(a3 + (a1 - 845240499));
  BOOL v7 = a1 - 1 != (((v6 - 328) | 0x40C) ^ (v4 + 1098));
  return (*(uint64_t (**)(void))(v5 + 8 * (((8 * v7) | (16 * v7)) ^ v6)))();
}

uint64_t sub_1DA73B81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((221 * (a4 + 1 != v7 + 32)) ^ a5)))(v6);
}

void sub_1DA73B8F4()
{
  STACK[0x550] = 0;
  LODWORD(STACK[0x4C4]) = 826018275;
  STACK[0x568] = 0;
  LODWORD(STACK[0x5B8]) = 826018275;
  JUMPOUT(0x1DA73B974);
}

void sub_1DA73B9B4()
{
}

void sub_1DA73BA04()
{
}

void sub_1DA73BA18(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x4677F5251DE9534FLL) + 758284587;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 + 478987904;
  BOOL v4 = v2 < 0x722B0BED;
  BOOL v5 = v2 > v3;
  if (v3 < 0x722B0BED != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1DA73BB08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((((a8 - 478570849) & 0x1C866FFF ^ 0xFFFFF9C5) + 6 * (a8 ^ 0x167)) * (v8 == a4)) | a8)))();
}

uint64_t sub_1DA73BB5C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 1101970216) ^ 0x2F8) * (v0 > 0xC815A337)) ^ (v1 + 1101970883))))();
}

uint64_t sub_1DA73BBA4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a2 - 251) & v2) != 0) * (((a2 - 257) | 0x105) - 264)) ^ a2)))();
}

uint64_t sub_1DA73BBDC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((1741 * (v0 < (STACK[0x3FC] & 0xC6957BFE ^ 0x4842CBE2))) ^ (STACK[0x420] + 675))))();
}

void sub_1DA73BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 10_Block_object_dispose(&STACK[0x360], 8) = v13
                         - 314
                         - 1178560073 * ((((2 * (v14 - 120)) | 0xAEF778DA) - (v14 - 120) - 1467726957) ^ 0xFAEC80C8);
  *(void *)(v14 - 120) = a4;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0xA0F)))(v14 - 120);
  *(void *)(v14 - 120) = a12;
  *(_DWORD *)(v14 - 10_Block_object_dispose(&STACK[0x360], 8) = v13
                         - 314
                         - 1178560073
                         * ((((v14 - 120) | 0xDC63DF64) - (v14 - 120) + ((v14 - 120) & 0x239C2098)) ^ 0x71F4E3C1);
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0xA0F)))(v14 - 120);
  *(_DWORD *)(v14 - 112) = v13
                         + 1178560073 * (((v14 - 120) & 0x67AE094A | ~((v14 - 120) | 0x67AE094A)) ^ 0x35C6CA10)
                         + 345;
  *(void *)(v14 - 104) = a12;
  *(void *)(v14 - 120) = a9;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0x5F7)))(v14 - 120);
  JUMPOUT(0x1DA73BD74);
}

uint64_t sub_1DA73BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  int v17 = 3804331 * ((((2 * (v16 - 128)) | 0xAFC6C6EE) - (v16 - 128) + 672963721) ^ 0xF9A2E0BB);
  *(void *)(v16 - 12_Block_object_dispose(&STACK[0x360], 8) = a14;
  *(_DWORD *)(v16 - 120) = ((32 * a12) ^ 0xBD73EFED) - v17 + ((v15 + 2062014913) & (a12 << 6)) + 2128609087;
  *(_DWORD *)(v16 - 116) = v15 - v17 - 482;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0xDE6)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((1018 * (*a10 - 696851460 + 9 * (v15 ^ 0x585u) - 1099 > 0x7FFFFFFE)) ^ v15)))(v18);
}

uint64_t sub_1DA73BE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v21 + 8 * ((14 * ((a19 + 1015109933 + v20 + v19 + 1319) < 8)) ^ a14)))();
}

void sub_1DA73BF04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) + 1225351577 * (((a1 | 0xD93F93E1) - a1 + (a1 & 0x26C06C1E)) ^ 0xFAA54BF7);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1DA73C04C()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v0 + 1306072749) & 0xB226E7FF) - 173) * (v1 == 1032864084)) ^ v0)))(3517101519);
}

void sub_1DA73C09C()
{
  *(_DWORD *)(v2 - 192) = 235795823
                        * ((((v2 - 192) | 0x8BE4F887) - (v2 - 192) + ((v2 - 192) & 0x741B0778)) ^ 0x1F49B1DE)
                        + 426521557
                        + v0
                        + 1394;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x863u)))(v2 - 192);
  *(unsigned char *)(v2 - 160) = (111 * ((v2 + 64) ^ 0x59)) ^ 0x7C;
  *(void *)(v2 - 184) = STACK[0x298];
  *(_DWORD *)(v2 - 176) = v0 - 235795823 * ((v2 - 192) ^ 0x94AD4959) + 1792;
  *(void *)(v2 - 16_Block_object_dispose(&STACK[0x360], 8) = STACK[0x2A0];
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x874u)))(v2 - 192);
  STACK[0x388] = 0;
  JUMPOUT(0x1DA73C15CLL);
}

uint64_t sub_1DA73C1A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v12 = (a5 + v10 + v9 + v11 - a3);
  *(void *)(v7 - 7 + v12) = *(void *)(v6 - 7 + v12);
  return (*(uint64_t (**)(void))(v5 + 8 * ((a3 - (v8 & 0xFFFFFFF8) == -8) ^ a5)))();
}

uint64_t sub_1DA73C1F8()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 | 0x6C8)))();
  LODWORD(STACK[0x4F8]) = v0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v1 ^ 0x17D) * v2) ^ (v1 + 660))))(v4);
}

uint64_t sub_1DA73C250@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  unint64_t v70 = STACK[0x540] + (((v67 + 225) | 2) ^ 0xB68052F7) + a2;
  unint64_t v71 = STACK[0x638];
  STACK[0x518] = *(void *)(v69 + 8 * v67);
  STACK[0x648] = v71;
  STACK[0x650] = v70;
  unint64_t v61 = STACK[0x5C0];
  char v62 = (char *)&a3 + STACK[0x5C0] - 0x74AC42827A6CFE95;
  STACK[0x658] = (unint64_t)v62;
  STACK[0x5C0] = v61 + 320;
  LODWORD(STACK[0x5B4]) = *(_DWORD *)(v71 - 0x4696E7753303C8EALL);
  LODWORD(STACK[0x594]) = *(_DWORD *)(v71 - 0x4696E7753303C8E6);
  LODWORD(STACK[0x604]) = *(_DWORD *)(v71 - 0x4696E7753303C8E2);
  LODWORD(STACK[0x55C]) = *(_DWORD *)(v71 - 0x4696E7753303C8DELL);
  int v63 = *(unsigned __int8 *)(v71 - 0x4696E7753303C8D2) ^ 0x70;
  if (v63 == 2)
  {
    LODWORD(STACK[0x4C0]) = *(_DWORD *)(v71 - 0x4696E7753303C8DALL);
    JUMPOUT(0x1DA70D004);
  }
  if (v63 != 1) {
    JUMPOUT(0x1DA70D04CLL);
  }
  LODWORD(STACK[0x534]) = v68;
  BOOL v65 = v70 < a61 + v61 && (unint64_t)v62 < v70 + 64;
  return (*(uint64_t (**)(void))(v69 + 8 * (((a1 + 404 + a1 + 364 - 1086) * v65) ^ (a1 + 1365))))();
}

uint64_t sub_1DA73C27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((a13 + ((2 * (STACK[0x2E4] & 0x3F)) ^ 0x2C) + (STACK[0x2E4] & 0x3F ^ 0x7D7F7EE9u) < 0xFFFFFFC0) * (((v30 ^ 0x289) - 334) ^ 0x71E)) ^ (v30 + 533))))(a1, 2280784578, a29, a4, &STACK[0x2A0], 1100, 3994376318, 300590751);
}

void sub_1DA73C324()
{
}

uint64_t sub_1DA73C408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = v8 + v7 - 1459481595;
  unsigned int v13 = v12 + v9 - 381 + ((v9 - 962) | 8);
  if (v13 <= 0x40) {
    unsigned int v13 = 64;
  }
  BOOL v14 = __CFADD__(v12 + 2124, v10 + v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((21 * v14) | v9)))(a1, a2, a3, a4, a5, a6, a7, 1400551919);
}

uint64_t sub_1DA73C468()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1404
                                * (*(_DWORD *)(v1 - 0x68A89052B2EA55A8) == ((v2 + 1161011686) & 0xBACC5FA6 ^ 0x7AB9C87F))) ^ v2)))();
}

uint64_t sub_1DA73C4C4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 + v7 < ((7 * (a1 ^ v5)) ^ a5)) * v6) ^ a1)))();
}

uint64_t sub_1DA73C504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v8 = v4 + v3 - 2105508421;
  int v9 = v8 + 839;
  if ((v8 + 839) <= 0x40) {
    int v9 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (v5 | (4
                                                                              * (v6 + v9 > (v5 ^ 0x649 ^ (v5 - 1934) ^ (v8 + 838)))))))(a1, a2, a3, 2014182718);
}

uint64_t sub_1DA73C564()
{
  int v5 = *(_DWORD *)(v0 + 52);
  int v6 = 1225351577 * (((((v4 - 192) | 0x7A9BC4F0) ^ 0xFFFFFFFE) - (~(v4 - 192) | 0x85643B0F)) ^ 0xA6FEE319);
  *(void *)(v4 - 152) = v0 + 0x2F19939F047D9D94;
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = LODWORD(STACK[0x2D4]) ^ v6;
  *(_DWORD *)(v4 - 164) = (v2 - 135201670) ^ v6;
  *(_DWORD *)(v4 - 192) = v5 + v6 + ((v1 + 446887741) & 0xE55D0997 ^ 0xB837B098);
  *(_DWORD *)(v4 - 18_Block_object_dispose(&STACK[0x360], 8) = (v1 - 50) ^ v6;
  *(void *)(v4 - 184) = &STACK[0x670];
  *(void *)(v4 - 176) = STACK[0x388];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x800)))(v4 - 192);
  int v8 = *(_DWORD *)(v4 - 160);
  LODWORD(STACK[0x530]) = v8;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v8 == 2058996701) * ((27 * (v1 ^ 0x63)) ^ 0x5E6)) ^ v1)))(v7);
}

void sub_1DA73C684(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,int a21,uint64_t a22,unsigned char *a23,uint64_t a24,unsigned char *a25,uint64_t a26,_DWORD *a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  a25[3] = (HIBYTE(v34) ^ 0x6E) - 2 * ((HIBYTE(v34) ^ 0x6E) & 0x1F ^ HIBYTE(v34) & 1) + 30;
  a19[9] = (a5 >> (a30 ^ 0xABu)) ^ 0x86;
  a19[15] = BYTE1(v34) ^ 0x9E;
  a23[8] = v34 ^ 0x58;
  a25[9] = (BYTE2(v34) ^ 0x82) - ((2 * (BYTE2(v34) ^ 0x82)) & 0x3C) + 30;
  a23[26] = BYTE4(a5) ^ 0x20;
  if ((a3 ^ 0x1D899D706AC1AEC9uLL) >= 0x8134422366A90F03) {
    char v39 = (a3 ^ 0xC9) + ((2 * (a3 ^ 0xC9)) | 0xFD) + 127;
  }
  else {
    char v39 = v38;
  }
  char v40 = v39 ^ 0x81;
  if ((a3 ^ 0x1D899D706AC1AEC9uLL) >= 0x8134422366A90F03) {
    char v41 = 3;
  }
  else {
    char v41 = 0;
  }
  char v42 = *(unsigned char *)(a34 + 531 + (BYTE6(a5) ^ 0xDLL));
  a19[7] = HIBYTE(a5) ^ 0x5C;
  a23[27] = BYTE1(a3) ^ 0xAE;
  a25[10] = (~(14 * (v42 ^ 0x9C)) | 0xC3) - (v42 ^ 0x9C) + 8 * (v42 ^ 0x9C) + 31;
  a19[10] = v40 + v41;
  HIDWORD(v43) = *(unsigned __int8 *)(a34 + (((BYTE2(a3) ^ 0xC1) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v43) = (HIDWORD(v43) << 26) ^ (HIDWORD(v43) << 24);
  a23[10] = BYTE4(a3) ^ 0x70;
  a25[14] = (BYTE3(a3) ^ 0x6A) - 2 * ((BYTE3(a3) ^ 0x6A) & 0x1F ^ BYTE3(a3) & 1) + 30;
  a25[20] = (v43 >> 25) ^ 2;
  a25[4] = (BYTE6(a3) ^ 0x89) - ((2 * (BYTE6(a3) ^ 0x89)) & 0x3C) + 30;
  a25[16] = (BYTE5(a3) ^ 0x9D) - ((2 * (BYTE5(a3) ^ 0x9D)) & 0x3C) + 30;
  unsigned int v44 = *(unsigned __int8 *)(a34 + (((HIBYTE(a3) ^ 0x1D) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a23[20] = v36 ^ 0x42;
  HIDWORD(v43) = v44;
  LODWORD(v43) = (v44 << 26) ^ (v44 << 24);
  a25[15] = (v43 >> 25) ^ 2;
  unsigned int v45 = *(unsigned __int8 *)(a17 + (((v36 >> 1) & 0x80 | ((unsigned __int16)v36 >> 9)) ^ 0xE1));
  a23[17] = BYTE3(v36) ^ 0x48;
  a19[14] = BYTE4(v36) ^ 0xCC;
  *a25 = BYTE5(v36) + (~(2 * BYTE5(v36)) | 0xC3) - 97;
  a23[21] = HIBYTE(v36) ^ 0x1F;
  a23[13] = BYTE2(v36) ^ 0x50;
  a23[3] = (v45 ^ 0x8A ^ (v45 >> 2) & 0x17) + 32;
  a19[12] = BYTE6(v36) ^ 6;
  char v46 = *(unsigned char *)(a34 + 531 + (a4 ^ 0x35) + 2 * (a4 & 0xD5 ^ 0x15) - 4 * (a4 & 0xD5 ^ 0x15) + 213);
  a23[11] = BYTE2(a4) ^ 0xB6;
  a25[5] = 7 * (v46 ^ 0x9C) - ((16 * v46 - 2 * (v46 ^ 0x9C)) & 0x3C) + 30;
  a25[2] = (BYTE3(a4) ^ 0xE4) - ((2 * (BYTE3(a4) ^ 0xE4)) & 0x3C) + 30;
  a23[25] = BYTE1(a4) ^ 0x76;
  unsigned int v47 = *(unsigned __int8 *)(a17 + (((a4 >> 25) & 0x80 | (a4 >> 33) & 0x7F) ^ 0xB1));
  a23[22] = BYTE5(a4) ^ 0xD3;
  a23[18] = HIBYTE(a4) ^ 0x50;
  a23[2] = BYTE1(v37) ^ 0x56;
  a25[1] = v37 ^ 0x4E;
  a23[30] = BYTE3(v35) ^ 0x5F;
  a23[9] = BYTE2(v37) ^ 0xBE;
  a23[19] = (v47 ^ 0x8A ^ (v47 >> 2) & 0x17) + 32;
  a25[7] = (BYTE6(a4) ^ 0x2B) - ((2 * (BYTE6(a4) ^ 0x2B)) & 0x3C) + 30;
  unsigned int v48 = *(unsigned __int8 *)(a34 + (((BYTE4(v35) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a23[24] = BYTE6(v35) ^ 0x81;
  a23[12] = BYTE5(v35) ^ 0xFD;
  HIDWORD(v43) = v48;
  LODWORD(v43) = (v48 << 26) ^ (v48 << 24);
  a23[1] = HIBYTE(v35) ^ 0x9D;
  a23[23] = (v43 >> 25) ^ 0x1C;
  *a27 = a21 - 795723746;
  JUMPOUT(0x1DA73CAE0);
}

uint64_t sub_1DA73CB1C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((110
                                     * (((v2 - 696851636 + (((v3 ^ 0x589) - 387812689) ^ 0xE8E27903))
                                       * ((((v3 ^ 0x589) - 387812689) & 0x171D86FC ^ 0xD676E34C) + v1)) >> 31)) ^ v3 ^ 0x589)))();
}

uint64_t sub_1DA73CB7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = 1374699841 * ((v66 + 1870203168 - 2 * (v66 & 0x6F790920)) ^ 0x28D1129);
  *(void *)(v68 - 184) = a63;
  *(void *)(v68 - 16_Block_object_dispose(&STACK[0x360], 8) = 0x7CD37ED9EC2B0D1;
  *(void *)(v68 - 160) = a62;
  *(_DWORD *)(v68 - 192) = a1 - v69;
  *(_DWORD *)(v68 - 18_Block_object_dispose(&STACK[0x360], 8) = v63 - v69 + 210;
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(v67 + 8 * (v63 ^ 0x7A3)))(v68 - 192);
  int v71 = *(_DWORD *)(v68 - 176);
  STACK[0x4D8] = v64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, __n128))(v67
                                                                                                 + 8
                                                                                                 * (((v71 == v65) * (((v63 - 1870190839) & 0x6F78D9BF) + 247)) ^ v63)))(v70, 2999622201, 1890839445, 2235994116, STACK[0x420], (__n128)0);
}

uint64_t sub_1DA73CC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  BOOL v35 = a10 != 779007269
     && (((_BYTE)a10 + 11) & 0xF) == (((a6 - 1475) | 0x3AD) ^ 0xFFFFF92A)
                                   + ((a6 + 988764184) & 0xC510A77D);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((a6 + 66) ^ (32 * v35))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1DA73CCE0(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 1224239923 * (((a1 | 0x53DFEB40) - (a1 & 0x53DFEB40)) ^ 0xA16C1697);
  int v3 = *(_DWORD *)(a1 + 48) - v2;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 16);
  unsigned int v7 = 235795823
     * (((&v10 | 0xE8ABEFB3) - &v10 + (&v10 & 0x17541048)) ^ 0x7C06A6EA);
  unsigned int v8 = (*(_DWORD *)a1 ^ v2) + v7;
  v3 += 2024873219;
  uint64_t v10 = *(void *)(a1 + 24);
  int v15 = v7 ^ (v3 + 1867);
  uint64_t v16 = v6;
  unsigned int v11 = v8 - 599703109;
  uint64_t v12 = v5;
  uint64_t v13 = v4;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1F34B17C0 + v3) + v3 + 1925))(&v10);
  *(_DWORD *)(a1 + 4) = v14;
  return result;
}

uint64_t sub_1DA73CE20(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v2 = 1374699841 * (((a1 | 0x6A54D4C0) - a1 + (a1 & 0x95AB2B3F)) ^ 0x7A0CCC9);
  int v3 = *(_DWORD *)(a1 + 4) ^ v2;
  int v4 = *(_DWORD *)(a1 + 8) + v2;
  int v5 = *(_DWORD *)a1 - v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned int v8 = 1755732067 * (v10 ^ 0xDEC6BDDB);
  v3 -= 2138963224;
  v10[0] = (v4 ^ 0x7C026E30) - v8;
  v10[1] = v8 ^ (v3 + 143);
  v10[2] = (v5 ^ 0x2AA98B5B) + v8 + 2129589742 + ((2 * v5) & 0xD7BFFFBE ^ 0x82ACE908);
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  uint64_t result = (*((uint64_t (**)(_DWORD *))*(&off_1F34B17C0 + v3) + v3 + 1955))(v10);
  *(_DWORD *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1DA73CF78@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, unint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v34 = v30 + a5;
  int v35 = v30 + 1;
  uint64_t v36 = 4 * (v35 + a5);
  unint64_t v37 = (*(_DWORD *)(a25 + v36) ^ a8) + (a3 ^ HIDWORD(v29));
  unint64_t v38 = HIDWORD(a1)
      + v26 * (unint64_t)(*(_DWORD *)(*v31 + v36) ^ a8)
      + ((a2 + v33 + 175 + v37 - ((2 * v37) & v27) - 1100) ^ a4);
  *(_DWORD *)(a25 + 4 * v34) = v38 + a8 - (v25 & (2 * v38));
  BOOL v40 = v35 + a6 > a7 || v35 + a6 < v32;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v40 | (2 * v40)) ^ v33)))();
}

uint64_t sub_1DA73D00C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1061
                                * (((v5 + v3 - 158) & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v4) == v4)) ^ v3)))();
}

void sub_1DA73D054(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 1178560073 * (((a1 ^ 0x8E5DD809) & 0x35218925 | ~(a1 ^ 0x8E5DD809 | 0x35218925)) ^ 0xE9149276);
  __asm { BRAA            X15, X17 }
}

void sub_1DA73D114(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  unint64_t v59 = *(unsigned int **)(v57 + 8 * (a1 - 1786));
  uint64_t v60 = *v59;
  unint64_t v61 = *(void **)(v57 + 8 * (a1 ^ 0x72A));
  char v62 = (unsigned char *)*v61;
  a4 = *(unsigned char *)*v61 - 108;
  a5 = v62[1] - 108;
  a6 = v62[2] - 108;
  a7 = v62[3] - 108;
  a8 = v62[4] - 108;
  a9 = v62[5] - 108;
  a10 = v62[6] - 108;
  a11 = v62[7] - 108;
  a12 = v62[8] - 108;
  a13 = v62[9] - 108;
  a14 = v62[10] - 108;
  a15 = v62[11] - 108;
  a16 = v62[12] - 108;
  a17 = v62[13] - 108;
  a18 = v62[14] - 108;
  a19 = v62[15] - 108;
  a20 = v62[16] - 108;
  a21 = v62[17] - 108;
  a22 = v62[18] - 108;
  a23 = v62[19] - 108;
  a24 = v62[20] - 108;
  a25 = v62[21] - 108;
  int v63 = (unsigned char *)*v61;
  a26 = v63[22] - 108;
  a27 = v63[23] - 108;
  a28 = v63[24] - 108;
  a29 = v63[25] - 108;
  a30 = v63[26] - 108;
  a31 = v63[27] - 108;
  a32 = v63[28] - 108;
  a33 = v63[29] - 108;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (a1 | 0x90)))(v60, &a4, v53);
  int v71 = ((2 * v64) & 0xE77D7F7E) + (v64 ^ 0x73BEBFBF);
  if (v71 == 1941880767)
  {
    *(_DWORD *)(v58 + 356) |= ((v55 - 1801) | 0x440) - 1135;
    *(_DWORD *)(v58 + 56) = 1107689856;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (v55 ^ 0xF4D)))(*v53, v58 + 344, v58 + 348, v58 + 352, v54);
    sub_1DA702608();
  }
  else
  {
    if (v71 == 1941881869)
    {
      uint64_t v72 = *v59;
      uint64_t v73 = *(unsigned char **)(*(void *)(v57 + 8 * (v55 ^ 0x733)) - 4);
      a34 = *v73 - 106;
      a35 = v73[1] - 106;
      a36 = v73[2] - 106;
      a37 = v73[3] - 106;
      a38 = v73[4] - 106;
      a39 = v73[5] - 106;
      a40 = v73[6] - 106;
      a41 = v73[7] - 106;
      a42 = v73[8] - 106;
      a43 = v73[9] - 106;
      a44 = v73[10] - 106;
      a45 = v73[11] - 106;
      a46 = v73[12] - 106;
      a47 = v73[13] - 106;
      a48 = v73[14] - 106;
      a49 = v73[15] - 106;
      a50 = v73[16] - 106;
      a51 = v73[17] - 106;
      a52 = v73[18] - 106;
      a53 = v73[19] - 106;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (v55 + 144)))(v72, &a34, v53);
      int v74 = (2 * v64) & 0xEBFF6F6A;
      int v71 = (v64 ^ 0xF5FFB7B5) + 2059336672;
    }
    else
    {
      int v74 = -50334762;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                          + 8
                                                                                          * (((v71 + v74 == 1891546005)
                                                                                            * (((v55 - 769) | 0x38) - 300)) ^ (v55 - 713))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

uint64_t sub_1DA73D4C4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a2 + (v8 + a4)) = *(void *)(a1 + (v8 + a4));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 == a4) * a8) ^ v9)))();
}

uint64_t sub_1DA73D4F0()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * ((((v2 ^ 0x455) + ((v2 - 534) | 0x15) - 1341) * (v1 == v0)) ^ v2)))(-229870105);
}

uint64_t sub_1DA73D538()
{
  unsigned int v5 = (v0 + 938976165) & 0xC80859B7;
  _DWORD *v2 = v2[623];
  uint64_t v6 = 628203409 * ((((v4 - 192) | 0x23236474E8752B71) - ((v4 - 192) & 0x23236474E8752B71)) ^ 0x1C7FCE616AFD2742);
  *(void *)(v4 - 160) = v6 ^ 0x2B430399;
  *(void *)(v4 - 184) = (v1 - 27917711) + v6;
  *(_DWORD *)(v4 - 152) = v5 + 186132869 - v6;
  *(_DWORD *)(v4 - 172) = v6 + 1;
  *(_DWORD *)(v4 - 16_Block_object_dispose(&STACK[0x360], 8) = ((v5 + 186132869) ^ 0x4D) + v6;
  *(_DWORD *)(v4 - 192) = (v5 + 186132875) ^ v6;
  *(_DWORD *)(v4 - 18_Block_object_dispose(&STACK[0x360], 8) = -1501686123 - v6 + v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v5 ^ 0x912)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 176)))(v7);
}

void sub_1DA73D638(uint64_t a1@<X8>, int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v7 = 235795823 * ((&a2 & 0x77B8FB38 | ~(&a2 | 0x77B8FB38)) ^ 0x1CEA4D9E);
  a4 = a1;
  a2 = v7 + v6 - 1296;
  a3 = (((v6 - 516) | 0x19) ^ 0xA1538C6B) - (v5 + v7 + ((2024267352 - 2 * v5) & 0xC9FF3294));
  (*(void (**)(int *))(v4 + 8 * (v6 + 479)))(&a2);
  JUMPOUT(0x1DA73A22CLL);
}

uint64_t sub_1DA73D6D4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((((v2 - 140083386) ^ 0xD5200400) + 918) ^ (v2 - 140083386) & 0x2ADFFBFF)
                                     * (*(unsigned char *)(v1 + 1) == 4)) ^ v2)))();
}

void sub_1DA73D724()
{
}

uint64_t sub_1DA73D72C()
{
  int v4 = (v1 ^ 0xB3D61ED0) + v2;
  BOOL v5 = v4 < 1566521323;
  BOOL v6 = v3 - 1277813785 < v4;
  if (v3 - 1277813785 < ((v1 - 1061) ^ 0x5D5F36F9) != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((104 * !v6) ^ v1)))();
}

void sub_1DA73D7A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

void sub_1DA73D838()
{
}

uint64_t sub_1DA73D840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v9 = v7 + (v4 ^ 0x13F) + ((((v4 ^ 0x769) - 465) | 0x420) ^ 0x14856847);
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  BOOL v10 = -v5 - 344290346 - v6 + v9 < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                + 8
                                                                                * (((8 * v10) | (16 * v10)) ^ v4 ^ 0x769)))(a1, a2, a3, a4, 185082509);
}

uint64_t sub_1DA73D8C4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((25
                                                       * (a2 == ((6 * (v2 ^ 0x51B) - 145050199) & 0xBFBDFFD9 ^ (v4 + 13)))) ^ v2)))(a1, -356177656);
}

uint64_t sub_1DA73D91C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * ((28
                                * (((v30 + a2 + 63 < (v30 + a2)) ^ (a30 - 22) ^ 0xEF) & 1)) ^ a30)))();
}

uint64_t sub_1DA73D960(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a2 + 1782169436) & 0x95C63F6B) + 1390) * (v5 < a4)) ^ a2)))();
}

uint64_t sub_1DA73D998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((1430
                                * (((v9 + 29) & 0x7F ^ 0xAF6DFDD2) + ((2 * (v9 + 29)) & 0xA4) + 1351746093 < ((a8 - 2003951966) & 0x7771E3EBu) - 991)) ^ a8)))();
}

uint64_t sub_1DA73DA0C()
{
  *(void *)(v3 + v2 - 0x4696E77540B7534BLL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v0 ^ 0x51) + 1019)) ^ v0)))();
}

uint64_t sub_1DA73DA5C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  v27.n128_u64[0] = 0xBEBEBEBEBEBEBEBELL;
  v27.n128_u64[1] = 0xBEBEBEBEBEBEBEBELL;
  v28.n128_u64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v28.n128_u64[1] = 0x5F5F5F5F5F5F5F5FLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (int)((((((((v25 + 1161919506) & 0xBABE837F) - 1636381390) & 0x618936FF) - 912) ^ (((v25 + 1161919506) & 0xBABE837F) + 1074)) * (HIDWORD(a16) < a16)) | (v25 + 1161919506) & 0xBABE837F)))(3517101519, 3471116757, 823850539, 368992315, a25, a10, 3925974981, 1142, a1, a2, a3, a4, v27, v28, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20);
}

uint64_t sub_1DA73DB18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v70 = a1 ^ 0x5A8;
  int v71 = 6 * (a1 ^ 0x454);
  int v72 = ((2 * (v67 & 0x7D6F46C0) - v67 + 43039034) ^ 0x6F64A133) * v66;
  *(void *)(v69 - 16_Block_object_dispose(&STACK[0x360], 8) = v65;
  *(void *)(v69 - 160) = a64;
  *(void *)(v69 - 184) = a65;
  *(_DWORD *)(v69 - 192) = 1777521032 - v72;
  *(_DWORD *)(v69 - 18_Block_object_dispose(&STACK[0x360], 8) = v70 - v72 - 209;
  uint64_t v73 = (*(uint64_t (**)(uint64_t))(v68 + 8 * (v70 ^ 0x61C)))(v69 - 192);
  return (*(uint64_t (**)(uint64_t))(v68
                                            + 8
                                            * ((((v70 + 66) ^ (*(_DWORD *)(v69 - 176) == (v71 ^ 0x7AB9CB93))) & 1 | (4 * (((v70 + 66) ^ (*(_DWORD *)(v69 - 176) == (v71 ^ 0x7AB9CB93))) & 1))) ^ v70)))(v73);
}

uint64_t sub_1DA73DBF8@<X0>(int a1@<W6>, int a2@<W8>)
{
  *(unsigned char *)(v4 - 220 + v2 - 80919271) = 95;
  return (*(uint64_t (**)(void))(v3 + 8 * ((484 * ((unint64_t)(v2 - 80919270) < 0x40)) ^ (a1 + a2 - 231))))();
}

void sub_1DA73DC44()
{
}

uint64_t sub_1DA73DD48()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 - 1206 + v1 - 882 + 233) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1DA73DD80()
{
  int v3 = (v2 - 568) | 0x100;
  if (v1 + 1450632188 < 0) {
    int v4 = v1;
  }
  else {
    int v4 = (v3 ^ 0x5312394A) - v1;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1162 * (v4 + ((v3 + 1343) | 4) - 696853130 >= 0)) ^ v3)))();
}

uint64_t sub_1DA73DE14(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1EA8E3538 - qword_1EA8E3558) ^ (unint64_t)&v8;
  qword_1EA8E3558 = 192840611 * v2 - 0x2F1F548F835ED4F0;
  qword_1EA8E3538 = 192840611 * (v2 ^ 0x2F1F548F835ED4F0);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = -93 * ((-93 * v2 + 16) ^ 0xF0 ^ qword_1EA8E3538);
  uint64_t v5 = (char *)*(&off_1F34B17C0 + (v4 ^ byte_1DA752740[byte_1DA75DD10[v4] ^ 0x3E]) - 30) - 8;
  if (v3 == 826018278) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 826018285)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_1DA73DFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v17 - 116) = v15 + ((v17 - 136) ^ 0x6DF41809) * v12 + 14;
  *(void *)(v17 - 136) = a12;
  *(void *)(v17 - 12_Block_object_dispose(&STACK[0x360], 8) = v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x90E)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * (v15 ^ (2 * (*(_DWORD *)(v17 - 120) != v13 + v15 + 1403 - 1663)))))(v18);
}

void sub_1DA73E050()
{
}

void sub_1DA73E05C()
{
}

void sub_1DA73E068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t))(v14 + 16312))(a13, 2965982036);
  int v17 = (*(uint64_t (**)(void))(v14 + 8 * (v13 + 1101971589)))();
  _DWORD *v16 = v17 + v15 - ((v13 + 259298287) & (2 * v17));
  JUMPOUT(0x1DA73E0F0);
}

uint64_t sub_1DA73E170()
{
  LODWORD(STACK[0x630]) = -2058973175;
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x480] == v1) * (((v0 - 117) | 0x1C) - 179)) ^ (v0 + 96))))();
}

void sub_1DA73E1E0(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X10, X17 }
}

void sub_1DA73E2C4()
{
}

uint64_t sub_1DA73E344()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1781 * (*off_1F34B1D28 == 0)) ^ 0x2D2u)))();
}

void sub_1DA73E374()
{
}

uint64_t sub_1DA73E4B0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  LOBYTE(STACK[0x2A0]) = *(&a27 + a1);
  return (*(uint64_t (**)(void))(v29 + 8 * ((2042 * (v28 - 1131569362 + ((v27 + 102288994) & 0xF9E730DB) < 4)) ^ v27)))();
}

uint64_t sub_1DA73E504()
{
  (*(void (**)(void))(v1 + 8 * (v0 | 0x6C8)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (STACK[0x550] != 0)) ^ (v0 + 1357))))();
}

uint64_t sub_1DA73E540()
{
  v1.n128_u64[0] = 0xBEBEBEBEBEBEBEBELL;
  v1.n128_u64[1] = 0xBEBEBEBEBEBEBEBELL;
  v2.n128_u64[0] = 0x5F5F5F5F5F5F5F5FLL;
  v2.n128_u64[1] = 0x5F5F5F5F5F5F5F5FLL;
  return sub_1DA73E588(((v0 - 1074) | 0x308u) ^ 0x39FLL, 825, v1, v2);
}

uint64_t sub_1DA73E588@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>)
{
  *(int8x16_t *)(v7 + (a3 + v5 + v8)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v11 + v8), vandq_s8(vaddq_s8(*(int8x16_t *)(v11 + v8), *(int8x16_t *)(v11 + v8)), a4)), a5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a1 + v8 == v9) * a2) ^ v6)))();
}

uint64_t sub_1DA73E5C8()
{
  int v3 = v1 + ((v2 - 1218) | 0x401) - ((((18 * (v2 ^ 0x70F)) ^ 0x1D87EA78) + 2 * v1) & 0x2CB74CBA) - 450914843;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((47 * (((2 * v3) & 0xF9694FF2 ^ 0x28214CB2) + (v3 ^ 0x6AEF01A4) - 295976 != 2091918289)) ^ v2)))();
}

uint64_t sub_1DA73E66C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((54
                                * ((a4 ^ 0x5D ^ (v6 + v5 + 4 * (a4 ^ 0x537) - 987690088 + 741 < 8)) & 1)) ^ a4)))();
}

uint64_t sub_1DA73E6D0()
{
  _DWORD *v1 = v1[623];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((49
                                     * ((((((v0 + 295199843) & 0xEE679CD4) - 1008) ^ (v2
                                                                                    + ((v0 + 295199843) & 0xEE679CD4)
                                                                                    - 749 == 1145813040)) & 1) == 0)) ^ (v0 + 295199843) & 0xEE679CD4)))();
}

uint64_t sub_1DA73E740(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) - 460628867 * ((a1 - 865980286 - 2 * (a1 & 0xCC623082)) ^ 0x80F4B2FF) + 1;
  signed int v2 = (v1 ^ 0xD676E078) + *(_DWORD *)(*(void *)a1 - 0x11127EB20C1B7502);
  if (v2 < 0) {
    signed int v2 = -v2;
  }
  return (*((uint64_t (**)(void))*(&off_1F34B17C0 + (v1 ^ 0x30C))
          + ((1624
            * ((v2 ^ 0xFE2DDFFE) + 30547969 + ((2 * v2) & 0xFC5BBFFC) < ((v1 - 1) ^ (v1 + 1023693827) & 0xC2FBABFB ^ 0x7FFFFFFF))) ^ v1)
          - 1))();
}

uint64_t sub_1DA73E858@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((9 * (v2 ^ 0x7C)) ^ ((v2 ^ 0x67E) + 220)) * (a1 - v1 == -176870313)) ^ v2)))();
}

void sub_1DA73E8A8(_DWORD *a1)
{
  unsigned int v1 = 1374699841 * ((-2 - ((a1 | 0x32995F76) + (~a1 | 0xCD66A089))) ^ 0xA092B880);
  unsigned int v2 = a1[1] + v1;
  unsigned int v3 = *a1 + v1;
  BOOL v5 = (v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 687865856;
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1DA73E98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * ((1992 * (a19 == v19 - 518512724)) ^ v19)))();
}

uint64_t sub_1DA73E9C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  return sub_1DA738548(a1, (a3 - 209852884) & 0xC821BCA, *(_DWORD *)(*v5 + 4 * (int)(((a3 - 209852884) & 0xC821BCA ^ 0x8E610037) + a2)), v4, a4);
}

uint64_t sub_1DA73EA08(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 + a1 - 660 - 920) & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)
                                * ((a1 - 1407) ^ 0x75)) ^ a1)))();
}

uint64_t sub_1DA73EA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v13 = v9 + 1791099080 > a8 || v9 + 1791099080 < v10;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v13 * ((v11 - 1547781279) & 0x5C41454D ^ 0x44F)) ^ v11)))();
}

uint64_t sub_1DA73EA9C(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1265 * ((v1 & 0x18) == (((a1 - 852) | 0x206) ^ 0x237))) ^ a1)))();
}

void sub_1DA73EAE4()
{
  int v8 = v4 + v0 + 1;
  uint64_t v9 = *(void *)(v5 - 0x11127EB20C1B74FELL);
  unsigned int v10 = (*(_DWORD *)(v9 + 4 * (v6 - 1)) ^ v2) >> v1;
  *(_DWORD *)(v9 + 4 * v_Block_object_dispose(&STACK[0x360], 8) = v10 + ((681 * (v7 ^ 0x223)) ^ (v2 - 814)) - (v3 & (2 * v10));
  JUMPOUT(0x1DA73EB70);
}

uint64_t sub_1DA73EBB0()
{
  int v3 = v0 ^ 0x590;
  BOOL v5 = *(void *)(v1 + 56) == 0x5C88151B3290645DLL || *(_OWORD *)(v1 + 16) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((122 * v5) ^ v3)))();
}

uint64_t sub_1DA73EC00()
{
  return sub_1DA73EC08();
}

uint64_t sub_1DA73EC08(int8x16_t a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int8x16_t v17 = *(int8x16_t *)(v16 + (v14 + a7 + v11));
  *(int8x16_t *)(v12 + v11) = vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a4)), a1);
  return (*(uint64_t (**)(void))(v15 + 8 * (((v11 == 48) * a11) ^ (a10 + v13 + 636))))();
}

uint64_t sub_1DA73EC54()
{
  int v4 = ((v0 ^ 0x3FC) - 943) | 8;
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xFF2)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((23 * (*v1 == ((v4 + 17) ^ 0x9C))) ^ v4)))(v5);
}

uint64_t sub_1DA73ECA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a5 - 142) | 0x66) ^ 0x7FA) * (v5 == v7)) ^ (a5 + 485))))();
}

uint64_t sub_1DA73ECE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = v6 + v5 - 2105507913;
  if (v8 <= 0x40) {
    int v9 = 64;
  }
  else {
    int v9 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((58
                                                                         * (2105507582 - v3 - v4 + v9 < ((2 * v5) ^ 0x474u) - 1747)) ^ v5)))(2817368280, a2, a3, 2014182718);
}

uint64_t sub_1DA73ED5C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((22
                                * (((v0 - 185082446 < (v0 - 185082509)) ^ (v2 + 0x80)) & 1)) ^ (v2 + 899))))();
}

void sub_1DA73EDBC()
{
}

uint64_t sub_1DA73EDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  BOOL v18 = a15 < 0xE5BFD953;
  if (v18 == v16 + 1840372757 < ((2 * v15) ^ 0x500u) - 440411871) {
    BOOL v18 = v16 + 1840372757 < a15;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((62 * v18) ^ v15)))();
}

uint64_t sub_1DA73EE3C@<X0>(int a1@<W8>)
{
  int v4 = a1 - 694;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 ^ 0x4AB)))(v1 - 0xB6B6F7DB9DE1514);
  int v6 = (v4 - 184) | 0x101;
  STACK[0x5C0] += (v6 + 15) ^ 0xFFFFFFFFFFFFFEE6;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 != 2058996701) * ((v6 ^ 0x10) - 262)) ^ v6)))(v5);
}

void sub_1DA73EEC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1759421093 * ((a1 + 1535483482 - 2 * (a1 & 0x5B859E5A)) ^ 0xE8F82E0E));
  __asm { BRAA            X13, X17 }
}

void sub_1DA73EF84()
{
}

uint64_t sub_1DA73EFB4()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x26E)))(200, 1616997413) != 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 * (((v0 ^ 0x76C) + 676) ^ 0x457)) ^ v0 ^ 0x76C)))();
}

uint64_t sub_1DA73F010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v21
                              + 8 * ((1085 * (a20 + ((v20 + 193) | 0x42) - *(_DWORD *)(a2 + 4) == 331121570)) ^ v20)))();
}

void sub_1DA73F054()
{
}

uint64_t sub_1DA73F05C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v22 = 1734042137 * ((((v21 - 136) | 0xDCA6705A) - (v21 - 136) + ((v21 - 136) & 0x23598FA0)) ^ 0x8068B317);
  *(void *)(v21 - 136) = a19;
  *(_DWORD *)(v21 - 120) = (((a2 - 1998804453) & 0xFFFFFFF0) + 694227569) ^ v22;
  *(_DWORD *)(v21 - 12_Block_object_dispose(&STACK[0x360], 8) = v19 - v22 - 81;
  *(_DWORD *)(v21 - 124) = a2 - a13 - v22 + 1026505882;
  int v25 = v19;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0x8B2)))(v21 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((*a14 == 2058996701) | (4 * (*a14 == 2058996701))) ^ v25)))(v23);
}

uint64_t sub_1DA73F138(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((STACK[0x4E8] == 0)
                                     * ((a3 - 1696561432) ^ 0x9AE08655 ^ (a3 - 1696561432) & 0x651F7DD7 ^ 0x79C)) ^ (a3 + 1240))))();
}

void sub_1DA73F18C()
{
  LODWORD(STACK[0x4F8]) = v0;
  sub_1DA722738();
}

uint64_t sub_1DA73F19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = *(_DWORD *)(v9 + v8 * (uint64_t)a7 + 36) + 1569298655;
  BOOL v13 = v11 > 717160101 || v11 < SLODWORD(STACK[0x3D0]);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v13 * (v7 + 1948)) ^ v7)))();
}

uint64_t sub_1DA73F1F4(uint64_t a1)
{
  BOOL v4 = *(_DWORD *)(v3 - 0x68A89052B2EA55B4) + ((v1 + 666) ^ 0xB006387B) == 0;
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((((v1 + 37) ^ v4) & 1 | (8
                                                                                               * (((v1 + 37) ^ v4) & 1))) ^ v1)))(a1, *(void *)(v3 - 0x68A89052B2EA55C0));
}

uint64_t sub_1DA73F264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (unsigned __int8 *)(a4 + v5 + v9);
  int v11 = *v10 ^ 0x5F;
  LODWORD(v10) = ((*(unsigned __int8 *)(a4 + ((v4 - 1623) ^ (unint64_t)(v9 - 14)) + v5) ^ 0x5F) << 16) | ((v10[3] ^ 0x5F) << 24) | v11 | ((v10[1] ^ 0x5F) << 8);
  *(_DWORD *)(v6 + v5 + v9) = v10 + v8 - 2 * (v10 & (v8 + 2) ^ v11 & 2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((15 * ((unint64_t)(v5 + 4 + v9) > 0x3F)) ^ v4)))();
}

uint64_t sub_1DA73F2FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  BOOL v69 = *v63 != 95 || LODWORD(STACK[0x628]) != (a63 ^ 0x1CDDBAA9) || v64 != v66 - 1;
  return (*(uint64_t (**)(void))(v65 + 8 * ((31 * v69) ^ (a3 - 111))))();
}

unsigned char *sub_1DA73F34C(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DA73F438()
{
}

uint64_t sub_1DA73F440(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 == v3) ^ (3 * (a2 ^ 0xD0))) & 1) * ((3 * (a2 ^ 0x40)) ^ 0x526)) ^ a2)))();
}

void sub_1DA73F488()
{
}

void __VSOpenURL_block_invoke_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl(&dword_1DA674000, a2, OS_LOG_TYPE_ERROR, "Failed to open URL: %@", (uint8_t *)&v3, 0xCu);
}

void __VSOpenURL_block_invoke_3_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl(&dword_1DA674000, log, OS_LOG_TYPE_ERROR, "Error opening URL %@: %@", (uint8_t *)&v4, 0x16u);
}

void VSCheckEntitlementForTask_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_1DA674000, v0, v1, "The task %@ does NOT have the %@ entitlement.");
}

void VSCheckEntitlementForTask_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_1DA674000, v0, v1, "Task %@ did not have any value for the %@ entitlement.");
}

void VSCheckEntitlementForTask_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_1DA674000, v0, v1, "Task %@ has a false value for the %@ entitlement.");
}

void VSCheckEntitlementForTask_cold_4()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_1DA674000, v0, v1, "The value for the %@ entitlement of %@ is not a BOOLean value.");
}

void __VSSharedSAMLParserController_block_invoke_2_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_1DA674000, a2, OS_LOG_TYPE_ERROR, "Error loading SAML framework: %@", (uint8_t *)&v2, 0xCu);
}

void VSDisplayNameForBundleWithIdentifier_cold_1(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = [a2 localizedDescription];
  int v6 = 138412546;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl(&dword_1DA674000, a3, OS_LOG_TYPE_ERROR, "Error finding bundle record for bundleID %@ : %@", (uint8_t *)&v6, 0x16u);
}

void VSLoadBundleAtPath_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_1DA674000, a2, OS_LOG_TYPE_FAULT, "Failed to lookup bundle at path %@", (uint8_t *)&v2, 0xCu);
}

void VSLocalizedDescriptionForPublicErrorCode_cold_1(int a1, int a2, os_log_t log)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 67109376;
  v3[1] = a1;
  __int16 v4 = 1024;
  int v5 = a2;
  _os_log_fault_impl(&dword_1DA674000, log, OS_LOG_TYPE_FAULT, "No error string found for error with type %d and code %d", (uint8_t *)v3, 0xEu);
}

uint64_t sub_1DA744878()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1DA744888()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1DA744898()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1DA7448A8()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1DA7448B8()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1DA7448C8()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1DA7448D8()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1DA7448E8()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1DA7448F8()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1DA744908()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1DA744918()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_1DA744928()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1DA744938()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1DA744948()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1DA744958()
{
  return MEMORY[0x1F40E05E0]();
}

uint64_t sub_1DA744968()
{
  return MEMORY[0x1F40E05E8]();
}

uint64_t sub_1DA744978()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1DA744988()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1DA744998()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1DA7449A8()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1DA7449B8()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1DA7449C8()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1DA7449D8()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1DA7449E8()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1DA7449F8()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1DA744A08()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1DA744A18()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1DA744A28()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1DA744A38()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1DA744A48()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1DA744A58()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1DA744A68()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1DA744A78()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1DA744A88()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1DA744A98()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1DA744AA8()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1DA744AB8()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1DA744AC8()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1DA744AD8()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1DA744AE8()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1DA744AF8()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1DA744B08()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1DA744B18()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1DA744B28()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1DA744B38()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1DA744B48()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1DA744B58()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1DA744B68()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1DA744B78()
{
  return MEMORY[0x1F4184C10]();
}

uint64_t sub_1DA744B88()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1DA744B98()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1DA744BA8()
{
  return MEMORY[0x1F4184C28]();
}

uint64_t sub_1DA744BB8()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1DA744BC8()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1DA744BD8()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1DA744BE8()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1DA744BF8()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1DA744C08()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1DA744C18()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1DA744C28()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1DA744C38()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1DA744C48()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1DA744C58()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1DA744C68()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1DA744C78()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1DA744C98()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1DA744CA8()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1DA744CB8()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1DA744CD8()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1DA744CE8()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1DA744CF8()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1DA744D08()
{
  return MEMORY[0x1F4185EF8]();
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1F40D71B8](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1F40D71F0](theArray, idx);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1F40D7420]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return (CFStringRef)MEMORY[0x1F40D7568](bundle);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1F40D7968](theDict, key);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x1F40D7A18](theDict, key, value);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1F40D7A68](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

CFDictionaryRef CFNetworkCopySystemProxySettings(void)
{
  return (CFDictionaryRef)MEMORY[0x1F40D5368]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80B0]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x1F40D8128](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1F40D8140](allocator, order, context);
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
}

void CFRunLoopStop(CFRunLoopRef rl)
{
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1F40D8388](theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x1F40D83F0](alloc, theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSLog(NSString *format, ...)
{
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1F40E7258](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DD8](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DE0](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1F40F6DE8](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1F40F6E20](query, attributesToUpdate);
}

CFArrayRef SecTrustCopyCertificateChain(SecTrustRef trust)
{
  return (CFArrayRef)MEMORY[0x1F40F7190](trust);
}

uint64_t SecTrustCopyInfo()
{
  return MEMORY[0x1F40F71B0]();
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x1F40F7210](trust, error);
}

uint64_t SecTrustStoreContains()
{
  return MEMORY[0x1F40F72B0]();
}

uint64_t SecTrustStoreForDomain()
{
  return MEMORY[0x1F40F72C0]();
}

uint64_t TCCAccessCheckAuditToken()
{
  return MEMORY[0x1F415CB60]();
}

uint64_t TCCAccessCopyInformation()
{
  return MEMORY[0x1F415CB78]();
}

uint64_t TCCAccessCopyInformationForBundle()
{
  return MEMORY[0x1F415CB88]();
}

uint64_t TCCAccessCopyInformationForBundleId()
{
  return MEMORY[0x1F415CB90]();
}

uint64_t TCCAccessReset()
{
  return MEMORY[0x1F415CBF0]();
}

uint64_t TCCAccessSetForAuditToken()
{
  return MEMORY[0x1F415CC20]();
}

uint64_t TCCAccessSetForBundleId()
{
  return MEMORY[0x1F415CC30]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFBundleCopyBundleURLForExecutableURL()
{
  return MEMORY[0x1F40D8BB0]();
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1F40D8C30]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void abort(void)
{
}

void bzero(void *a1, size_t a2)
{
}

compression_status compression_stream_destroy(compression_stream *stream)
{
  return MEMORY[0x1F417F0C0](stream);
}

compression_status compression_stream_init(compression_stream *stream, compression_stream_operation operation, compression_algorithm algorithm)
{
  return MEMORY[0x1F417F0D0](stream, *(void *)&operation, *(void *)&algorithm);
}

compression_status compression_stream_process(compression_stream *stream, int flags)
{
  return MEMORY[0x1F417F0E0](stream, *(void *)&flags);
}

uint64_t container_system_group_path_for_identifier()
{
  return MEMORY[0x1F40CB7F8]();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBAC0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1F40CBEC8]();
}

void free(void *a1)
{
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1F40CC3B0](a1);
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1F40CC970](msg, *(void *)&option, *(void *)&send_size, *(void *)&rcv_size, *(void *)&rcv_name, *(void *)&timeout, *(void *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1F40CCD70]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x1F40CD048](*(void *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1F40CD8B8](*(void *)&pid, buffer, *(void *)&buffersize);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2F0](__str, __endptr, *(void *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1F40CE758](msg);
}