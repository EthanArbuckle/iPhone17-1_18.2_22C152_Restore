uint64_t sub_191B8B924()
{
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  return sub_191CF64A8();
}

uint64_t sub_191B8B9B8()
{
  return sub_191CF64C8();
}

uint64_t sub_191B8BA78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B8BABC()
{
  unint64_t result = qword_1EB44BD30;
  if (!qword_1EB44BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BD30);
  }
  return result;
}

unint64_t sub_191B8BB14()
{
  unint64_t result = qword_1E92E3A18;
  if (!qword_1E92E3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3A18);
  }
  return result;
}

uint64_t sub_191B8BB68@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ActivityViewMetrics.init(from:)(a1, a2);
}

uint64_t sub_191B8BB80(void *a1)
{
  return ActivityViewMetrics.encode(to:)(a1);
}

uint64_t sub_191B8BB9C(CGRect *a1, CGRect *a2)
{
  double x = a1[1].origin.x;
  double v3 = a2[1].origin.x;
  LODWORD(result) = CGRectEqualToRect(*a1, *a2);
  if (x == v3) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t getEnumTagSinglePayload for ActivityViewMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActivityViewMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewMetrics()
{
  return &type metadata for ActivityViewMetrics;
}

unsigned char *storeEnumTagSinglePayload for ActivityViewMetrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B8BD0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewMetrics.CodingKeys()
{
  return &type metadata for ActivityViewMetrics.CodingKeys;
}

unint64_t sub_191B8BD48()
{
  unint64_t result = qword_1E92E3A20;
  if (!qword_1E92E3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3A20);
  }
  return result;
}

unint64_t sub_191B8BDA0()
{
  unint64_t result = qword_1E92E1D00[0];
  if (!qword_1E92E1D00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E1D00);
  }
  return result;
}

unint64_t sub_191B8BDF8()
{
  unint64_t result = qword_1E92E1CF8;
  if (!qword_1E92E1CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CF8);
  }
  return result;
}

uint64_t sub_191B8BE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73646E756F62 && a2 == 0xE600000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t ControlError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4058();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for ControlError(0);
  MEMORY[0x1F4188790](v6);
  v8 = (void **)&v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_191B8FF54(v1, (uint64_t)v8, type metadata accessor for ControlError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v10 = *v8;
      v11 = v8[1];
      unint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_191CF5D88();
      sub_191CF53B8();
      v20 = v10;
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      v20 = v11;
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      return v21;
    }
    else
    {
      return 0xD00000000000002CLL;
    }
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
    v14 = *(void **)((char *)v8 + *(int *)(v13 + 48));
    unint64_t v15 = *(unint64_t *)((char *)v8 + *(int *)(v13 + 64));
    (*(void (**)(unsigned char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v22 = 0x8000000191D0E980;
    v20 = v14;
    unsigned __int8 v19 = 1;
    uint64_t v16 = WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)((uint64_t)v5, v15, &v19);
    swift_bridgeObjectRelease();
    MEMORY[0x192FE42B0](v16, MEMORY[0x1E4FBB1A0]);
    sub_191CF53B8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v12 = v21;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v12;
}

uint64_t type metadata accessor for ControlError(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3A78);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = type metadata accessor for BundleStub();
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v86 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AC8);
  MEMORY[0x1F4188790](v88);
  v91 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1B08);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v87 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v92 = (uint64_t)&v85 - v10;
  MEMORY[0x1F4188790](v9);
  v89 = (char *)&v85 - v11;
  uint64_t v12 = sub_191CF3178();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v94 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AC0);
  MEMORY[0x1F4188790](v98);
  uint64_t v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v95 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v85 - v21;
  MEMORY[0x1F4188790](v20);
  v24 = (char *)&v85 - v23;
  uint64_t v96 = a1;
  sub_191B01614(a1, (uint64_t)v115, &qword_1E92E1AD0);
  uint64_t v25 = v116;
  if (v116)
  {
    uint64_t v26 = a2;
    uint64_t v27 = v117;
    __swift_project_boxed_opaque_existential_1(v115, v116);
    v28 = *(void (**)(uint64_t, uint64_t))(v27 + 56);
    uint64_t v29 = v27;
    a2 = v26;
    v28(v25, v29);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v24, 0, 1, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
  }
  else
  {
    sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v24, 1, 1, v12);
  }
  uint64_t v97 = a2;
  sub_191B01614(a2, (uint64_t)v115, &qword_1E92E1AD0);
  uint64_t v31 = v116;
  if (v116)
  {
    uint64_t v32 = v117;
    __swift_project_boxed_opaque_existential_1(v115, v116);
    (*(void (**)(uint64_t, uint64_t))(v32 + 56))(v31, v32);
    v30(v22, 0, 1, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
  }
  else
  {
    sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);
    v30(v22, 1, 1, v12);
  }
  uint64_t v33 = (uint64_t)&v16[*(int *)(v98 + 48)];
  sub_191B01614((uint64_t)v24, (uint64_t)v16, &qword_1EB44B520);
  sub_191B01614((uint64_t)v22, v33, &qword_1EB44B520);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v34((uint64_t)v16, 1, v12) == 1)
  {
    sub_191B01770((uint64_t)v22, &qword_1EB44B520);
    sub_191B01770((uint64_t)v24, &qword_1EB44B520);
    int v35 = v34(v33, 1, v12);
    uint64_t v36 = v96;
    if (v35 == 1)
    {
      sub_191B01770((uint64_t)v16, &qword_1EB44B520);
      sub_191B01614(v36, (uint64_t)v115, &qword_1E92E1AD0);
      uint64_t v37 = v97;
      sub_191B01614(v97, (uint64_t)v114, &qword_1E92E1AD0);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  uint64_t v38 = v95;
  sub_191B01614((uint64_t)v16, v95, &qword_1EB44B520);
  if (v34(v33, 1, v12) == 1)
  {
    sub_191B01770((uint64_t)v22, &qword_1EB44B520);
    sub_191B01770((uint64_t)v24, &qword_1EB44B520);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
    uint64_t v36 = v96;
LABEL_12:
    sub_191B01770((uint64_t)v16, &qword_1E92E1AC0);
    sub_191B01614(v36, (uint64_t)v115, &qword_1E92E1AD0);
    uint64_t v37 = v97;
    sub_191B01614(v97, (uint64_t)v114, &qword_1E92E1AD0);
LABEL_16:
    sub_191B01770((uint64_t)v114, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);
LABEL_17:
    sub_191B01614(v36, (uint64_t)v111, &qword_1E92E1AD0);
    sub_191B01614(v37, (uint64_t)v110, &qword_1E92E1AD0);
LABEL_18:
    sub_191B01770((uint64_t)v110, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
LABEL_19:
    sub_191B01614(v36, (uint64_t)v107, &qword_1E92E1AD0);
    sub_191B01614(v37, (uint64_t)v106, &qword_1E92E1AD0);
LABEL_20:
    sub_191B01770((uint64_t)v106, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v107, &qword_1E92E1AD0);
    goto LABEL_21;
  }
  uint64_t v39 = v38;
  v40 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v94, v33, v12);
  sub_191B8FF0C((unint64_t *)&qword_1E92E1AB8, MEMORY[0x1E4F27928]);
  char v41 = sub_191CF52F8();
  v42 = *(void (**)(char *, uint64_t))(v13 + 8);
  v42(v40, v12);
  sub_191B01770((uint64_t)v22, &qword_1EB44B520);
  sub_191B01770((uint64_t)v24, &qword_1EB44B520);
  v42((char *)v39, v12);
  sub_191B01770((uint64_t)v16, &qword_1EB44B520);
  uint64_t v36 = v96;
  sub_191B01614(v96, (uint64_t)v115, &qword_1E92E1AD0);
  uint64_t v37 = v97;
  sub_191B01614(v97, (uint64_t)v114, &qword_1E92E1AD0);
  if ((v41 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  sub_191B01614((uint64_t)v115, (uint64_t)v111, &qword_1E92E1AD0);
  uint64_t v43 = v112;
  if (v112)
  {
    uint64_t v44 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    v45 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 72))(v43, v44);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  }
  else
  {
    sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
    v45 = 0;
  }
  sub_191B01614((uint64_t)v114, (uint64_t)v111, &qword_1E92E1AD0);
  uint64_t v50 = v112;
  if (!v112)
  {
    sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
    if (v45) {
      goto LABEL_32;
    }
    v52 = 0;
LABEL_34:
    sub_191B01770((uint64_t)v114, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);
    if (!v52)
    {
      sub_191B01614(v36, (uint64_t)v111, &qword_1E92E1AD0);
      sub_191B01614(v37, (uint64_t)v110, &qword_1E92E1AD0);
      goto LABEL_37;
    }

    goto LABEL_17;
  }
  uint64_t v51 = v113;
  __swift_project_boxed_opaque_existential_1(v111, v112);
  v52 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 72))(v50, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  if (!v45) {
    goto LABEL_34;
  }
  if (!v52)
  {
LABEL_32:
    id v55 = v45;
    sub_191B01770((uint64_t)v114, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);

    goto LABEL_17;
  }
  sub_191B016E0(0, &qword_1E92E2AF0);
  id v53 = v45;
  char v54 = sub_191CF5B58();
  sub_191B01770((uint64_t)v114, &qword_1E92E1AD0);
  sub_191B01770((uint64_t)v115, &qword_1E92E1AD0);

  sub_191B01614(v36, (uint64_t)v111, &qword_1E92E1AD0);
  sub_191B01614(v37, (uint64_t)v110, &qword_1E92E1AD0);
  if ((v54 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_37:
  sub_191B01614((uint64_t)v111, (uint64_t)v107, &qword_1E92E1AD0);
  uint64_t v56 = v108;
  if (v108)
  {
    uint64_t v57 = v109;
    __swift_project_boxed_opaque_existential_1(v107, v108);
    uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 80))(v56, v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  }
  else
  {
    sub_191B01770((uint64_t)v107, &qword_1E92E1AD0);
  }
  sub_191B01614((uint64_t)v110, (uint64_t)v107, &qword_1E92E1AD0);
  uint64_t v58 = v108;
  if (!v108)
  {
    sub_191B01770((uint64_t)v107, &qword_1E92E1AD0);
    if (v56) {
      goto LABEL_46;
    }
    uint64_t v60 = 0;
LABEL_48:
    sub_191B01770((uint64_t)v110, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
    if (!v60)
    {
      sub_191B01614(v36, (uint64_t)v107, &qword_1E92E1AD0);
      sub_191B01614(v37, (uint64_t)v106, &qword_1E92E1AD0);
      goto LABEL_51;
    }
    swift_release();
    goto LABEL_19;
  }
  uint64_t v59 = v109;
  __swift_project_boxed_opaque_existential_1(v107, v108);
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 80))(v58, v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  if (!v56) {
    goto LABEL_48;
  }
  v107[0] = v56;
  if (!v60)
  {
LABEL_46:
    swift_retain();
    sub_191B01770((uint64_t)v110, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
    swift_release_n();
    goto LABEL_19;
  }
  v106[0] = v60;
  sub_191CF34B8();
  sub_191B8FF0C(&qword_1E92E3A30, MEMORY[0x1E4F58930]);
  swift_retain();
  char v61 = sub_191CF52F8();
  swift_release();
  sub_191B01770((uint64_t)v110, &qword_1E92E1AD0);
  sub_191B01770((uint64_t)v111, &qword_1E92E1AD0);
  swift_release();
  swift_release();
  sub_191B01614(v36, (uint64_t)v107, &qword_1E92E1AD0);
  sub_191B01614(v37, (uint64_t)v106, &qword_1E92E1AD0);
  if ((v61 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_51:
  sub_191B01614((uint64_t)v107, (uint64_t)v103, &qword_1E92E1AD0);
  uint64_t v62 = v104;
  if (v104)
  {
    uint64_t v63 = v105;
    __swift_project_boxed_opaque_existential_1(v103, v104);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v63 + 48))(v102, v62, v63);
    uint64_t v64 = v102[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  }
  else
  {
    sub_191B01770((uint64_t)v103, &qword_1E92E1AD0);
    uint64_t v64 = 0;
  }
  sub_191B01614((uint64_t)v106, (uint64_t)v103, &qword_1E92E1AD0);
  uint64_t v65 = v104;
  if (v104)
  {
    uint64_t v66 = v105;
    __swift_project_boxed_opaque_existential_1(v103, v104);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v66 + 48))(v102, v65, v66);
    sub_191B01770((uint64_t)v106, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v107, &qword_1E92E1AD0);
    int v67 = v102[0];
    int v68 = HIDWORD(v102[0]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    if (v62 && v67 == v64)
    {
      sub_191B01614(v36, (uint64_t)v103, &qword_1E92E1AD0);
      sub_191B01614(v37, (uint64_t)v102, &qword_1E92E1AD0);
      if (v68 == HIDWORD(v64)) {
        goto LABEL_61;
      }
LABEL_22:
      sub_191B01770((uint64_t)v102, &qword_1E92E1AD0);
      v46 = v103;
      v47 = &qword_1E92E1AD0;
      goto LABEL_23;
    }
LABEL_21:
    sub_191B01614(v36, (uint64_t)v103, &qword_1E92E1AD0);
    sub_191B01614(v37, (uint64_t)v102, &qword_1E92E1AD0);
    goto LABEL_22;
  }
  sub_191B01770((uint64_t)v106, &qword_1E92E1AD0);
  sub_191B01770((uint64_t)v107, &qword_1E92E1AD0);
  sub_191B01770((uint64_t)v103, &qword_1E92E1AD0);
  if (v62) {
    goto LABEL_21;
  }
  sub_191B01614(v36, (uint64_t)v103, &qword_1E92E1AD0);
  sub_191B01614(v37, (uint64_t)v102, &qword_1E92E1AD0);
LABEL_61:
  sub_191B01614((uint64_t)v103, (uint64_t)v99, &qword_1E92E1AD0);
  uint64_t v69 = v100;
  if (v100)
  {
    uint64_t v70 = v101;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    uint64_t v71 = (uint64_t)v89;
    (*(void (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
    uint64_t v72 = v90;
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
    v73(v71, 0, 1, v93);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  }
  else
  {
    sub_191B01770((uint64_t)v99, &qword_1E92E1AD0);
    uint64_t v71 = (uint64_t)v89;
    uint64_t v72 = v90;
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
    v73((uint64_t)v89, 1, 1, v93);
  }
  uint64_t v74 = (uint64_t)v91;
  sub_191B01614((uint64_t)v102, (uint64_t)v99, &qword_1E92E1AD0);
  uint64_t v75 = v100;
  if (v100)
  {
    uint64_t v76 = v101;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    uint64_t v77 = v92;
    (*(void (**)(uint64_t, uint64_t))(v76 + 40))(v75, v76);
    uint64_t v78 = v93;
    v73(v77, 0, 1, v93);
    uint64_t v79 = v78;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  }
  else
  {
    sub_191B01770((uint64_t)v99, &qword_1E92E1AD0);
    uint64_t v77 = v92;
    uint64_t v80 = v93;
    v73(v92, 1, 1, v93);
    uint64_t v79 = v80;
  }
  uint64_t v81 = v74 + *(int *)(v88 + 48);
  sub_191B01614(v71, v74, (uint64_t *)&unk_1E92E1B08);
  sub_191B01614(v77, v81, (uint64_t *)&unk_1E92E1B08);
  v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v82(v74, 1, v79) == 1)
  {
    sub_191B01770(v77, (uint64_t *)&unk_1E92E1B08);
    sub_191B01770(v71, (uint64_t *)&unk_1E92E1B08);
    sub_191B01770((uint64_t)v102, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v103, &qword_1E92E1AD0);
    if (v82(v81, 1, v79) == 1)
    {
      sub_191B01770(v74, (uint64_t *)&unk_1E92E1B08);
      char v48 = 1;
      return v48 & 1;
    }
  }
  else
  {
    uint64_t v83 = v87;
    sub_191B01614(v74, v87, (uint64_t *)&unk_1E92E1B08);
    if (v82(v81, 1, v79) != 1)
    {
      uint64_t v84 = v86;
      sub_191B9003C(v81, v86, (uint64_t (*)(void))type metadata accessor for BundleStub);
      char v48 = _s9WidgetKit10BundleStubV2eeoiySbAC_ACtFZ_0(v83, v84);
      sub_191B8FFBC(v84, (uint64_t (*)(void))type metadata accessor for BundleStub);
      sub_191B01770(v92, (uint64_t *)&unk_1E92E1B08);
      sub_191B01770(v71, (uint64_t *)&unk_1E92E1B08);
      sub_191B01770((uint64_t)v102, &qword_1E92E1AD0);
      sub_191B01770((uint64_t)v103, &qword_1E92E1AD0);
      sub_191B8FFBC(v83, (uint64_t (*)(void))type metadata accessor for BundleStub);
      sub_191B01770(v74, (uint64_t *)&unk_1E92E1B08);
      return v48 & 1;
    }
    sub_191B01770(v92, (uint64_t *)&unk_1E92E1B08);
    sub_191B01770(v71, (uint64_t *)&unk_1E92E1B08);
    sub_191B01770((uint64_t)v102, &qword_1E92E1AD0);
    sub_191B01770((uint64_t)v103, &qword_1E92E1AD0);
    sub_191B8FFBC(v83, (uint64_t (*)(void))type metadata accessor for BundleStub);
  }
  v47 = &qword_1E92E1AC8;
  v46 = (void *)v74;
LABEL_23:
  sub_191B01770((uint64_t)v46, v47);
  char v48 = 0;
  return v48 & 1;
}

BOOL != infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (== infix(_:_:)(a1, a2) & 1) == 0;
}

uint64_t ControlArchive.template(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(a3 + 120))(a1, MEMORY[0x1E4FBC860], a2);
}

uint64_t ControlArchive.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3178();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  uint64_t v12 = 60;
  unint64_t v13 = 0xE100000000000000;
  sub_191CF6568();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  id v9 = objc_msgSend(v8, sel_description);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  v11[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  sub_191CF34B8();
  sub_191B8FF0C(&qword_1E92E2FF0, MEMORY[0x1E4F58930]);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_191B8FF0C(&qword_1E92E3A38, MEMORY[0x1E4F27928]);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_191CF53B8();
  return v12;
}

void sub_191B8D73C()
{
  uint64_t v1 = v0;
  sub_191CF3178();
  sub_191B8FF0C(&qword_1E92E3480, MEMORY[0x1E4F27928]);
  sub_191CF5278();
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
  sub_191CF5B68();

  (*(void (**)(void))(*(void *)v1 + 136))();
  sub_191CF34B8();
  sub_191B8FF0C(&qword_1E92E3A40, MEMORY[0x1E4F58930]);
  sub_191CF5278();
  swift_release();
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  WidgetEnvironment.Storage.hash.getter();
  sub_191CF6478();
}

void ControlArchive.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  sub_191B8FF0C(&qword_1E92E3480, MEMORY[0x1E4F27928]);
  sub_191CF5278();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  sub_191CF5B68();

  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  sub_191CF34B8();
  sub_191B8FF0C(&qword_1E92E3A40, MEMORY[0x1E4F58930]);
  sub_191CF5278();
  swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 64))(&v12, a2, a3);
  uint64_t v10 = (void *)v12;
  WidgetEnvironment.Storage.hash.getter();
  sub_191CF6478();
}

uint64_t ControlArchiveMock.__allocating_init(control:state:environment:template:)(void *a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v45 = type metadata accessor for ControlArchiveStorage(0);
  MEMORY[0x1F4188790](v45);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF3178();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v42 = (uint64_t)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v21 = *a3;
  id v22 = a1;
  uint64_t v44 = a2;
  id v23 = v22;
  swift_retain();
  sub_191CF3168();
  BundleStub.init(_:)((uint64_t)objc_msgSend(v23, sel_extensionIdentity), (uint64_t)v11);
  if (qword_1EB44BA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(void *)&v20[v16[6]] = v23;
  uint64_t v24 = qword_1EB44BA48;
  v40 = type metadata accessor for BundleStub;
  sub_191B8FF54((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v25 = &v20[v16[8]];
  id v39 = v23;
  char v41 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v41(v25, v15, v12);
  *(void *)&v20[v16[5]] = v24;
  v46 = v21;
  id v26 = v21;
  WidgetEnvironment.filterForControlArchiving()();
  sub_191B8FFBC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BundleStub);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  *(void *)&v20[v16[7]] = v46;
  *(void *)&v20[v16[9]] = v44;
  uint64_t v27 = v42;
  sub_191B8FF54((uint64_t)v20, v42, type metadata accessor for ControlArchiveStorageMetadata);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92E24E0);
  uint64_t v28 = *(void *)(type metadata accessor for ControlTemplateType() - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_191CF8410;
  sub_191B9003C(v43, v30 + v29, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);

  swift_release();
  sub_191B8FFBC((uint64_t)v20, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191B9003C(v27, (uint64_t)v8, type metadata accessor for ControlArchiveStorageMetadata);
  uint64_t v31 = v45;
  *(void *)&v8[*(int *)(v45 + 20)] = v30;
  *(_DWORD *)&v8[*(int *)(v31 + 24)] = 2;
  type metadata accessor for ControlArchiveMock(0);
  uint64_t v32 = swift_allocObject();
  sub_191B8FF54((uint64_t)v8, v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))v40);
  *(void *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(void *)&v8[v16[5]];
  v41((char *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate), &v8[v16[8]], v12);
  uint64_t v33 = *(void **)&v8[v16[7]];
  *(void *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment) = v33;
  v34 = *(void **)&v8[v16[6]];
  *(void *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v34;
  *(void *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(void *)&v8[v16[9]];
  sub_191B9003C((uint64_t)v8, v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  id v35 = v33;
  id v36 = v34;
  swift_retain();
  return v32;
}

uint64_t sub_191B8E018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t result = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v5 = *(void *)(v3 + *(int *)(result + 20));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *(void *)(type metadata accessor for ControlTemplateType() - 8);
    return sub_191B8FF54(v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B8E0C8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_191B8EFAC(a1);
  return v2;
}

uint64_t ControlArchiveMock.deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return v0;
}

uint64_t StorageBackedControlArchive.deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return v0;
}

uint64_t ControlArchiveMock.__deallocating_deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);

  return swift_deallocClassInstance();
}

uint64_t sub_191B8E3D8()
{
  return swift_retain();
}

uint64_t sub_191B8E424()
{
  type metadata accessor for ControlArchiveStorage(0);

  return swift_bridgeObjectRetain();
}

uint64_t sub_191B8E46C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  sub_191B8FF54(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, (uint64_t)&v21 - v8, type metadata accessor for ControlArchiveStorageMetadata);
  *(void *)&v9[*(int *)(v4 + 28)] = MEMORY[0x1E4FBC860];
  *(_DWORD *)&v9[*(int *)(v4 + 32)] = 2;
  sub_191B8FF54((uint64_t)v9, (uint64_t)v7, type metadata accessor for ControlArchiveStorage);
  uint64_t v10 = type metadata accessor for StorageBackedControlArchive(0);
  uint64_t v11 = swift_allocObject();
  sub_191B8FF54((uint64_t)v7, v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v12 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)(v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(void *)&v7[v12[5]];
  uint64_t v13 = &v7[v12[8]];
  uint64_t v14 = v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v15 = sub_191CF3178();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  uint64_t v16 = *(void **)&v7[v12[7]];
  *(void *)(v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment) = v16;
  uint64_t v17 = *(void **)&v7[v12[6]];
  *(void *)(v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v17;
  *(void *)(v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(void *)&v7[v12[9]];
  sub_191B9003C((uint64_t)v7, v11 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  a1[3] = v10;
  a1[4] = sub_191B8FF0C(&qword_1E92E21D8, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
  *a1 = v11;
  id v18 = v16;
  id v19 = v17;
  swift_retain();
  return sub_191B8FFBC((uint64_t)v9, type metadata accessor for ControlArchiveStorage);
}

uint64_t sub_191B8E6FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t result = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v5 = *(void *)(v3 + *(int *)(result + 20));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *(void *)(type metadata accessor for ControlTemplateType() - 8);
    return sub_191B8FF54(v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B8E79C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v1 + 200))(a1, MEMORY[0x1E4FBC860]);
}

uint64_t sub_191B8E7DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ControlArchiveStorage(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B8FF54(v2 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, (uint64_t)v7, type metadata accessor for ControlArchiveStorage);
  uint64_t v8 = type metadata accessor for StateOverridenControlArchive(0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + OBJC_IVAR____TtC9WidgetKit28StateOverridenControlArchive__state) = a1;
  sub_191B8FF54((uint64_t)v7, v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v10 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)(v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(void *)&v7[v10[5]];
  uint64_t v11 = &v7[v10[8]];
  uint64_t v12 = v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v13 = sub_191CF3178();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
  uint64_t v14 = *(void **)&v7[v10[7]];
  *(void *)(v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment) = v14;
  uint64_t v15 = *(void **)&v7[v10[6]];
  *(void *)(v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v15;
  *(void *)(v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(void *)&v7[v10[9]];
  sub_191B9003C((uint64_t)v7, v9 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  a2[3] = v8;
  a2[4] = sub_191B8FF0C(&qword_1E92E3A50, (void (*)(uint64_t))type metadata accessor for StateOverridenControlArchive);
  *a2 = v9;
  swift_retain();
  id v16 = v14;
  id v17 = v15;
  return swift_retain();
}

void *StorageBackedControlArchive.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v18 = (uint64_t)&v16 - v7;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A58);
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B900E4();
  sub_191CF6508();
  if (!v1)
  {
    uint64_t v12 = v8;
    sub_191B8FF0C(&qword_1E92E2198, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorage);
    uint64_t v13 = v17;
    sub_191CF6178();
    uint64_t v15 = v18;
    sub_191B8FF54(v18, (uint64_t)v6, type metadata accessor for ControlArchiveStorage);
    uint64_t v11 = (void *)(*(uint64_t (**)(char *))(v16 + 168))(v6);
    sub_191B8FFBC(v15, type metadata accessor for ControlArchiveStorage);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v13);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_191B8EC98(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B900E4();
  sub_191CF6528();
  type metadata accessor for ControlArchiveStorage(0);
  sub_191B8FF0C(&qword_1E92E2488, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorage);
  sub_191CF6278();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191B8EE18()
{
  return sub_191CF64C8();
}

uint64_t StorageBackedControlArchive.originatingBundle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B8FF54(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

double StorageBackedControlArchive.systemVersion.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion);
  *a1 = result;
  return result;
}

uint64_t StorageBackedControlArchive.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v4 = sub_191CF3178();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id StorageBackedControlArchive.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *a1 = v2;
  return v2;
}

id StorageBackedControlArchive.control.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
}

uint64_t sub_191B8EF40(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_191B8EFAC(uint64_t a1)
{
  sub_191B8FF54(a1, v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v3 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(void *)(a1 + v3[5]);
  uint64_t v4 = a1 + v3[8];
  uint64_t v5 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v4, v6);
  uint64_t v7 = *(void **)(a1 + v3[7]);
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment) = v7;
  uint64_t v8 = *(void **)(a1 + v3[6]);
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v8;
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(void *)(a1 + v3[9]);
  sub_191B9003C(a1, v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  id v9 = v7;
  id v10 = v8;
  swift_retain();
  return v1;
}

uint64_t sub_191B8F0EC@<X0>(uint64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  id v8 = *(id *)(v3 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  uint64_t v9 = (uint64_t)WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2);
  char v11 = v10;

  if (v11)
  {
    type metadata accessor for ControlError(0);
    sub_191B8FF0C(&qword_1E92E3A70, (void (*)(uint64_t))type metadata accessor for ControlError);
    swift_allocError();
    uint64_t v17 = v16;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = *(int *)(v18 + 64);
    uint64_t v21 = sub_191CF4058();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v17, a1, v21);
    *(void *)(v17 + v19) = v8;
    *(void *)(v17 + v20) = a2;
    swift_storeEnumTagMultiPayload();
    id v22 = v8;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v12 = v4 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t result = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v14 = *(void *)(v12 + *(int *)(result + 20));
  if (v9 >= *(void *)(v14 + 16))
  {
    type metadata accessor for ControlError(0);
    sub_191B8FF0C(&qword_1E92E3A70, (void (*)(uint64_t))type metadata accessor for ControlError);
    swift_allocError();
    uint64_t v23 = *(void *)(v14 + 16);
    uint64_t *v24 = v9;
    v24[1] = v23;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  if (v9 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = *(void *)(type metadata accessor for ControlTemplateType() - 8);
    return sub_191B8FF54(v14+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v9, a3, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  }
  return result;
}

uint64_t sub_191B8F370()
{
  return 0x656761726F7473;
}

uint64_t sub_191B8F388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191B8F420(uint64_t a1)
{
  unint64_t v2 = sub_191B900E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B8F45C(uint64_t a1)
{
  unint64_t v2 = sub_191B900E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t StorageBackedControlArchive.__deallocating_deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);

  return swift_deallocClassInstance();
}

uint64_t sub_191B8F5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_191B8FF54(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

double sub_191B8F5F0@<D0>(double *a1@<X8>)
{
  double result = *(double *)(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion);
  *a1 = result;
  return result;
}

uint64_t sub_191B8F608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v4 = sub_191CF3178();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id sub_191B8F680@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *a1 = v2;
  return v2;
}

id sub_191B8F698()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
}

uint64_t sub_191B8F6AC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_191B8F6F0()
{
  type metadata accessor for ControlArchiveStorage(0);

  return swift_bridgeObjectRetain();
}

uint64_t sub_191B8F73C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t result = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v5 = *(void *)(v3 + *(int *)(result + 20));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *(void *)(type metadata accessor for ControlTemplateType() - 8);
    return sub_191B8FF54(v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B8F7E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_191B8E46C(a1);
}

uint64_t sub_191B8F804@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_191B8E7DC(a1, a2);
}

uint64_t sub_191B8F828()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

uint64_t sub_191B8F86C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 216))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_191B8F8A8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B900E4();
  sub_191CF6528();
  type metadata accessor for ControlArchiveStorage(0);
  sub_191B8FF0C(&qword_1E92E2488, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorage);
  sub_191CF6278();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_191B8FA30(uint64_t *a1, uint64_t *a2)
{
  return _s9WidgetKit27StorageBackedControlArchiveC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_191B8FA3C()
{
  return sub_191CF64C8();
}

void sub_191B8FA80(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  ControlArchive.hash(into:)(a1, a2, WitnessTable);
}

uint64_t sub_191B8FAE0(uint64_t a1, uint64_t a2)
{
  sub_191CF6468();
  uint64_t WitnessTable = swift_getWitnessTable();
  ControlArchive.hash(into:)((uint64_t)v5, a2, WitnessTable);
  return sub_191CF64C8();
}

uint64_t sub_191B8FB44(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ControlArchive.description.getter(a1, WitnessTable);
}

uint64_t sub_191B8FB98()
{
  return swift_retain();
}

void StateOverridenControlArchive.__allocating_init(from:)()
{
}

void sub_191B8FC04()
{
}

uint64_t sub_191B8FC34()
{
  return swift_release();
}

uint64_t StateOverridenControlArchive.deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_release();
  return v0;
}

uint64_t StateOverridenControlArchive.__deallocating_deinit()
{
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_191B8FFBC(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_release();

  return swift_deallocClassInstance();
}

BOOL _s9WidgetKit27StorageBackedControlArchiveC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_191CF3158() & 1) == 0) {
    return 0;
  }
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  if ((sub_191CF5B58() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t v5 = a1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  uint64_t v6 = type metadata accessor for ControlArchiveStorage(0);
  return *(void *)(*(void *)(v5 + *(int *)(v6 + 20)) + 16) == *(void *)(*(void *)(a2 + v4 + *(int *)(v6 + 20))
                                                                              + 16);
}

uint64_t sub_191B8FF0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B8FF54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B8FFBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ControlArchiveMock(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3A88);
}

uint64_t sub_191B9003C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for StorageBackedControlArchive(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E21E0);
}

uint64_t type metadata accessor for StateOverridenControlArchive(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3A98);
}

unint64_t sub_191B900E4()
{
  unint64_t result = qword_1E92E3A60;
  if (!qword_1E92E3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3A60);
  }
  return result;
}

uint64_t sub_191B90138()
{
  return sub_191B8FF0C(&qword_1E92E3A70, (void (*)(uint64_t))type metadata accessor for ControlError);
}

uint64_t sub_191B90180(void *a1)
{
  a1[1] = sub_191B8FF0C(&qword_1E92E21D0, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
  a1[2] = sub_191B8FF0C(&qword_1E92E21C8, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
  a1[3] = sub_191B8FF0C(&qword_1E92E21B0, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
  uint64_t result = sub_191B8FF0C(&qword_1E92E21B8, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
  a1[4] = result;
  return result;
}

uint64_t sub_191B90254()
{
  return sub_191B8FF0C(&qword_1E92E21C0, (void (*)(uint64_t))type metadata accessor for StorageBackedControlArchive);
}

uint64_t sub_191B9029C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_191CF4058();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
      uint64_t v10 = *(int *)(v9 + 48);
      char v11 = *(void **)((char *)a2 + v10);
      *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 64));
      id v12 = v11;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ControlError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_191CF4058();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);

    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ControlError(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = *(void **)&a2[v8];
    *(void *)&a1[v8] = v9;
    *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
    id v10 = v9;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for ControlError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191B8FFBC((uint64_t)a1, type metadata accessor for ControlError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = *(void **)&a2[v8];
      *(void *)&a1[v8] = v9;
      *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
      id v10 = v9;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for ControlError(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for ControlError(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191B8FFBC((uint64_t)a1, type metadata accessor for ControlError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3A28);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ControlError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_191B908C8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191B908D8()
{
  uint64_t result = sub_191CF4058();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_191CFD000;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ControlArchive.originatingBundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ControlArchive.systemVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlArchive.creationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ControlArchive.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlArchive.control.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ControlArchive.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ControlArchive.templates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ControlArchive.anyTemplate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ControlArchive.copyAsStateOnlyArchive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ControlArchive.copyWithState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of ControlArchive.template(in:ignoringEnvironmentKeys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t sub_191B90A7C()
{
  return type metadata accessor for ControlArchiveMock(0);
}

uint64_t sub_191B90A84()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_191B90ABC()
{
  return type metadata accessor for StorageBackedControlArchive(0);
}

uint64_t sub_191B90AC4()
{
  uint64_t result = type metadata accessor for BundleStub();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF3178();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ControlArchiveStorage(319);
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for StorageBackedControlArchive(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StorageBackedControlArchive);
}

uint64_t dispatch thunk of StorageBackedControlArchive.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.templates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.copyAsStateOnlyArchive()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.anyTemplate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.template(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.template(in:ignoringEnvironmentKeys:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.copyWithState(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_191B90DAC()
{
  return type metadata accessor for StateOverridenControlArchive(0);
}

uint64_t sub_191B90DB4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for StateOverridenControlArchive(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateOverridenControlArchive);
}

unsigned char *storeEnumTagSinglePayload for StorageBackedControlArchive.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191B90EB0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorageBackedControlArchive.CodingKeys()
{
  return &type metadata for StorageBackedControlArchive.CodingKeys;
}

unint64_t sub_191B90EEC()
{
  unint64_t result = qword_1E92E3AA8;
  if (!qword_1E92E3AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3AA8);
  }
  return result;
}

unint64_t sub_191B90F44()
{
  unint64_t result = qword_1E92E3AB0;
  if (!qword_1E92E3AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3AB0);
  }
  return result;
}

unint64_t sub_191B90F9C()
{
  unint64_t result = qword_1E92E3AB8;
  if (!qword_1E92E3AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3AB8);
  }
  return result;
}

void static WidgetAccentedRenderingMode.accented.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetAccentedRenderingMode.desaturated.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetAccentedRenderingMode.accentedDesaturated.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static WidgetAccentedRenderingMode.fullColor.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t WidgetAccentedRenderingMode.hash(into:)()
{
  return sub_191CF6478();
}

BOOL static WidgetAccentedRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetAccentedRenderingMode.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t Image.widgetAccentedRenderingMode(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a1;
  *(void *)a3 = a2;
  *(unsigned char *)(a3 + 8) = v3;
  return swift_retain();
}

unint64_t sub_191B910BC()
{
  unint64_t result = qword_1E92E3AC0;
  if (!qword_1E92E3AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3AC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetAccentedRenderingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B911DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingMode()
{
  return &type metadata for WidgetAccentedRenderingMode;
}

unint64_t sub_191B91218()
{
  unint64_t result = qword_1EB449250;
  if (!qword_1EB449250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB448FA8);
    sub_191B91294();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449250);
  }
  return result;
}

unint64_t sub_191B91294()
{
  unint64_t result = qword_1EB449300;
  if (!qword_1EB449300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449300);
  }
  return result;
}

uint64_t sub_191B912E8()
{
  uint64_t v0 = sub_191CF3A88();
  __swift_allocate_value_buffer(v0, qword_1EB44C800);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB44C800);
  return sub_191CF3A78();
}

uint64_t sub_191B91350()
{
  if (qword_1E92E2D08 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E92F25E0;
  uint64_t v1 = type metadata accessor for ControlCenterClient();
  v10[3] = v1;
  v10[4] = &off_1EE29FCE8;
  v10[0] = v0;
  type metadata accessor for ControlCenter();
  unint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v1);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (void *)((char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v6 + 16))(v5);
  uint64_t v7 = *v5;
  v2[5] = v1;
  void v2[6] = &off_1EE29FCE8;
  v2[2] = v7;
  swift_retain_n();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t result = swift_release();
  qword_1E92E3AC8 = (uint64_t)v2;
  return result;
}

uint64_t static ControlCenter.shared.getter()
{
  if (qword_1E92E2C30 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191B91514()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_191B91534, 0, 0);
}

uint64_t sub_191B91534()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  uint64_t v1 = (int *)off_1EE29FD00;
  uint64_t v2 = type metadata accessor for ControlCenterClient();
  uint64_t v5 = (int *)((char *)v1 + *v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_191B91DAC;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **))v5)(v2, &off_1EE29FCE8);
}

uint64_t sub_191B9165C(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  return sub_191CA3E0C(a1, a2);
}

uint64_t sub_191B916A4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_191CA3ABC(0, 0);
}

uint64_t ControlCenter.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ControlCenter.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t ControlCenter.getCurrentConfigurations()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_191B91754, 0, 0);
}

uint64_t sub_191B91754()
{
  uint64_t v1 = *__swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 24) + 16), *(void *)(*(void *)(v0 + 24) + 40));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3AE0);
  *uint64_t v2 = v0;
  v2[1] = sub_191B91854;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000017, 0x8000000191D0EB00, sub_191B91C2C, v1, v3);
}

uint64_t sub_191B91854()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191B91984;
  }
  else {
    uint64_t v2 = sub_191B91968;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191B91968()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_191B91984()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ControlCenter.allControls()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_191B919BC, 0, 0);
}

uint64_t sub_191B919BC()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  uint64_t v1 = (int *)off_1EE29FD00;
  uint64_t v2 = type metadata accessor for ControlCenterClient();
  uint64_t v5 = (int *)((char *)v1 + *v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_191B91AE4;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **))v5)(v2, &off_1EE29FCE8);
}

uint64_t sub_191B91AE4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

Swift::Void __swiftcall ControlCenter.reloadAllControls(forBundleIdentifier:)(Swift::String forBundleIdentifier)
{
  object = forBundleIdentifier._object;
  uint64_t countAndFlagsBits = forBundleIdentifier._countAndFlagsBits;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_191CA3ABC(countAndFlagsBits, (uint64_t)object);
}

uint64_t sub_191B91C2C(uint64_t a1)
{
  return sub_191CA4154(a1, v1);
}

uint64_t type metadata accessor for ControlCenter()
{
  return self;
}

uint64_t method lookup function for ControlCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlCenter);
}

uint64_t dispatch thunk of ControlCenter.currentControls()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 96) + **(int **)(*(void *)v0 + 96));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191B8A874;
  return v4();
}

uint64_t dispatch thunk of ControlCenter.reloadControls(ofKind:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ControlCenter.reloadAllControls()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t ControlInfo.init(control:pushInfo:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  *(_OWORD *)(v3 + 104) = *a3;
  return MEMORY[0x1F4188298](sub_191B91DD8, 0, 0);
}

uint64_t sub_191B91DD8()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v4 = *(uint64_t **)(v0 + 88);
  uint64_t v3 = *(void **)(v0 + 96);
  v4[4] = (uint64_t)v3;
  id v5 = v3;
  id v6 = objc_msgSend(v5, sel_kind);
  uint64_t v7 = sub_191CF5338();
  uint64_t v9 = v8;

  *uint64_t v4 = v7;
  v4[1] = v9;
  v4[2] = v2;
  v4[3] = v1;
  id v10 = objc_msgSend(v5, sel_intentReference);
  if (v10)
  {
    char v11 = v10;
    id v12 = objc_msgSend(v10, sel_intent);
    *(void *)(v0 + 120) = v12;

    if (v12)
    {
      self;
      uint64_t v13 = (void *)swift_dynamicCastObjCClass();
      if (v13)
      {
        uint64_t v14 = (_OWORD *)(v0 + 56);
        id v15 = objc_msgSend(v13, sel_linkAction);
        if (v15)
        {
          id v16 = v15;
          *(void *)(v0 + 80) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
          *(void *)(v0 + 56) = v16;
        }
        else
        {
          _OWORD *v14 = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
        }
        uint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 128) = v20;
        void *v20 = v0;
        v20[1] = sub_191B91FD8;
        return MEMORY[0x1F40D3A38](v0 + 16, v14);
      }
    }
  }
  uint64_t v17 = *(void *)(v0 + 88);

  *(void *)(v17 + 72) = 0;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_191B91FD8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_191B92174;
  }
  else
  {
    sub_191B88CAC(v2 + 56);
    uint64_t v3 = sub_191B920F8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191B920F8()
{
  uint64_t v1 = *(void **)(v0 + 120);

  sub_191B65CFC(v0 + 16, *(void *)(v0 + 88) + 40);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B92174()
{
  uint64_t v1 = *(void **)(v0 + 120);

  sub_191B88CAC(v0 + 56);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_191B65CFC(v0 + 16, *(void *)(v0 + 88) + 40);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t ControlInfo.configurationIntent<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_191B64A78(v2 + 40, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FF8);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t ControlInfo.kind.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlInfo.pushInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_191B169E8(v2, v3);
}

uint64_t ControlInfo.pushInfo.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_191B170C8(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ControlInfo.pushInfo.modify())()
{
  return nullsub_1;
}

id ControlInfo.control.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t ControlInfo.id.getter()
{
  return sub_191CF62C8();
}

uint64_t static ControlInfo.== infix(_:_:)()
{
  return sub_191CF5B58() & 1;
}

void ControlInfo.hash(into:)()
{
  id v1 = *(id *)(v0 + 32);
  sub_191CF5B68();
}

uint64_t ControlInfo.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t sub_191B92474@<X0>(uint64_t *a1@<X8>)
{
  sub_191CF5B78();
  uint64_t result = sub_191CF62C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_191B924C4()
{
  return sub_191CF64C8();
}

uint64_t sub_191B92508()
{
  return sub_191CF5B68();
}

uint64_t sub_191B9252C()
{
  return sub_191CF64C8();
}

uint64_t sub_191B9256C()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_191B9257C()
{
  unint64_t result = qword_1E92E3B00;
  if (!qword_1E92E3B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3B00);
  }
  return result;
}

uint64_t sub_191B925D0()
{
  return sub_191CF5B58() & 1;
}

void destroy for ControlInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >> 60 != 15) {
    sub_191B1603C(*(void *)(a1 + 16), v2);
  }

  if (*(void *)(a1 + 64))
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
}

uint64_t initializeWithCopy for ControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_191B15F88(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  id v10 = v8;
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for ControlInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *v4;
      sub_191B15F88(*v4, *(void *)(a2 + 24));
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_191B928E8(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v7 = *v4;
  sub_191B15F88(*v4, *(void *)(a2 + 24));
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v5;
  sub_191B1603C(v8, v9);
LABEL_8:
  id v10 = *(void **)(a2 + 32);
  uint64_t v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v10;
  id v12 = v10;

  uint64_t v13 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v13)
    {
      *(void *)(a1 + 64) = v13;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 40);
    long long v15 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v14;
    *(_OWORD *)(a1 + 56) = v15;
    return a1;
  }
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t sub_191B928E8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    sub_191B928E8(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v5;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v5;
  *(void *)(a1 + 24) = v7;
  sub_191B1603C(v8, v6);
LABEL_6:
  unint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v10 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v10;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlInfo()
{
  return &type metadata for ControlInfo;
}

uint64_t sub_191B92AAC()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CA50 = result;
  return result;
}

uint64_t sub_191B92AD4()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A880);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA38 = v0;
  unk_1EB44CA40 = 0xD000000000000010;
  qword_1EB44CA48 = 0x8000000191D0DC70;
  return result;
}

ValueMetadata *type metadata accessor for LegibilityWeightKey()
{
  return &type metadata for LegibilityWeightKey;
}

unint64_t sub_191B92B60()
{
  unint64_t result = qword_1EB44A970;
  if (!qword_1EB44A970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A970);
  }
  return result;
}

unint64_t sub_191B92BB8()
{
  unint64_t result = qword_1EB44A988;
  if (!qword_1EB44A988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A988);
  }
  return result;
}

unint64_t sub_191B92C10()
{
  unint64_t result = qword_1EB44A968;
  if (!qword_1EB44A968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A968);
  }
  return result;
}

uint64_t sub_191B92C64(char *a1, unsigned __int8 *a2)
{
  return sub_191CD5FAC(*a1, *a2);
}

uint64_t sub_191B92C70()
{
  return sub_191CF64C8();
}

uint64_t sub_191B92D04()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B92D84()
{
  return sub_191CF64C8();
}

uint64_t sub_191B92E14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B938B8();
  *a1 = result;
  return result;
}

void sub_191B92E44(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1684828002;
  if (v2 != 1) {
    uint64_t v4 = 1701736302;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x72616C75676572;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_191B92E94()
{
  return sub_191CF54F8();
}

uint64_t sub_191B92EF4()
{
  return sub_191CF54D8();
}

uint64_t sub_191B92F44(char *a1, unsigned __int8 *a2)
{
  return sub_191B93204(*a1, *a2);
}

uint64_t sub_191B92F50(char *a1, char *a2)
{
  return sub_191CA271C(*a1, *a2);
}

uint64_t sub_191B92F5C(char *a1, unsigned __int8 *a2)
{
  return sub_191CA2AE0(*a1, *a2);
}

uint64_t sub_191B92F68(char *a1, char *a2)
{
  return sub_191CA2DE8(*a1, *a2);
}

uint64_t sub_191B92F74()
{
  if (qword_1EB44A998 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191B92FD0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3CD08];
    goto LABEL_5;
  }
  if (*a1 == 1)
  {
    unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3CD00];
LABEL_5:
    uint64_t v4 = *v3;
    uint64_t v5 = sub_191CF3C18();
    uint64_t v6 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a2, v4, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
  }
  uint64_t v8 = sub_191CF3C18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

uint64_t sub_191B93100@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_191B93354(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191B9312C()
{
  if (qword_1EB44A960 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA38;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191B931B0()
{
  unint64_t result = qword_1EB44A978;
  if (!qword_1EB44A978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A978);
  }
  return result;
}

uint64_t sub_191B93204(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1684828002;
    }
    else {
      uint64_t v2 = 1701736302;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1684828002;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x72616C75676572;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    char v7 = sub_191CF6348();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_191B93300()
{
  unint64_t result = qword_1EB44A980;
  if (!qword_1EB44A980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A980);
  }
  return result;
}

uint64_t sub_191B93354(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF3C18();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v21 - v10;
  sub_191B936E4(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_191B9374C((uint64_t)v4);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v13(v9, v11, v5);
    int v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if (v14 == *MEMORY[0x1E4F3CD08])
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return 0;
    }
    else if (v14 == *MEMORY[0x1E4F3CD00])
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return 1;
    }
    else
    {
      v22[3] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
      v13((char *)boxed_opaque_existential_1, v11, v5);
      uint64_t v16 = sub_191CF5E58();
      swift_allocError();
      uint64_t v18 = v17;
      v21[1] = v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08) + 48);
      sub_191B4F964((uint64_t)v22, v18);
      v21[2] = sub_191CF5DC8();
      v21[3] = v19;
      sub_191CF53B8();
      v22[5] = 39;
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF5E18();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBAA0], v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      swift_willThrow();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20(v11, v5);
      return ((uint64_t (*)(char *, uint64_t))v20)(v9, v5);
    }
  }
}

uint64_t sub_191B936E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B9374C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for LegibilityWeightKey.CodableLegibilityWeight(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B93880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegibilityWeightKey.CodableLegibilityWeight()
{
  return &type metadata for LegibilityWeightKey.CodableLegibilityWeight;
}

uint64_t sub_191B938B8()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_191B93904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_191B93918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191B9392C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191B8A874;
  return v7(a1, a2);
}

uint64_t EnvironmentValues._widgetFamily.getter()
{
  sub_191B4F2C8();

  return sub_191CF4068();
}

uint64_t EnvironmentValues._widgetFamily.setter()
{
  return sub_191CF4078();
}

uint64_t sub_191B93AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08);
  sub_191B4F964(a1, a2);
  sub_191CF5DC8();
  sub_191CF53B8();
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  uint64_t v4 = *MEMORY[0x1E4FBBAA0];
  uint64_t v5 = sub_191CF5E58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t sub_191B93BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191B9409C();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.widgetFamily.getter@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F2C8();
  uint64_t result = sub_191CF4068();
  if (v3 < 0xDu && ((0x13BFu >> v3) & 1) != 0)
  {
    *a1 = byte_191CFD632[(char)v3];
  }
  else
  {
    uint64_t result = sub_191CF6338();
    __break(1u);
  }
  return result;
}

uint64_t EnvironmentValues.chsWidgetFamily.getter()
{
  sub_191B4F2C8();
  sub_191CF4068();
  if (v1 < 0xDu && ((0x13BFu >> v1) & 1) != 0) {
    return qword_191CFD640[(char)v1];
  }
  uint64_t result = sub_191CF6338();
  __break(1u);
  return result;
}

uint64_t EnvironmentValues.internalWidgetFamily.getter()
{
  sub_191B4F2C8();

  return sub_191CF4068();
}

uint64_t (*EnvironmentValues._widgetFamily.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_191B4F2C8();
  sub_191CF4068();
  return sub_191B93DDC;
}

uint64_t sub_191B93DDC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *type metadata accessor for WidgetFamilyKey()
{
  return &type metadata for WidgetFamilyKey;
}

uint64_t sub_191B93E2C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CC48 = result;
  return result;
}

uint64_t sub_191B93E54()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BEA0);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CC30 = v0;
  strcpy(algn_1EB44CC38, "widgetFamily");
  BYTE5(qword_1EB44CC40) = 0;
  HIWORD(qword_1EB44CC40) = -5120;
  return result;
}

uint64_t sub_191B93ED0()
{
  if (qword_1EB44BCF8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191B93F2C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (CHSWidgetFamilyIsValid())
  {
    uint64_t result = InternalWidgetFamily.init(_:)(v3, v6);
    *a2 = v6[0];
  }
  else
  {
    v6[3] = MEMORY[0x1E4FBB550];
    v6[0] = v3;
    sub_191CF5E58();
    swift_allocError();
    sub_191B93AA4((uint64_t)v6, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_191B93FF0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_191B940F0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191B9401C()
{
  if (qword_1EB44BCF0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CC30;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191B9409C()
{
  unint64_t result = qword_1EB449A30;
  if (!qword_1EB449A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449A30);
  }
  return result;
}

uint64_t sub_191B940F0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0) {
    return qword_191CFD640[(char)v1];
  }
  uint64_t result = sub_191CF6338();
  __break(1u);
  return result;
}

uint64_t sub_191B94148@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  *a3 = v9;
  uint64_t v10 = type metadata accessor for CommonActivityArchivingModifiers();
  uint64_t v11 = (uint64_t)&a3[*(int *)(v10 + 20)];
  sub_191B96104(a2, v11);
  uint64_t v12 = type metadata accessor for MetricsRequest(0);
  sub_191B01614(v11 + *(int *)(v12 + 40), (uint64_t)v8, &qword_1E92E1F80);
  uint64_t v13 = sub_191CF43F8();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v8, 1, v13);
  sub_191B01770((uint64_t)v8, &qword_1E92E1F80);
  if (a2 == 1)
  {
    switch(v9)
    {
      case 1:
      case 2:
      case 3:
        uint64_t v14 = type metadata accessor for CompactJindoActivityFontDefinition();
        long long v15 = (unint64_t *)&unk_1E92E17B0;
        uint64_t v16 = type metadata accessor for CompactJindoActivityFontDefinition;
        break;
      case 4:
        uint64_t v14 = type metadata accessor for DefaultActivityFontDefinition();
        long long v15 = (unint64_t *)&unk_1E92E1708;
        uint64_t v16 = type metadata accessor for DefaultActivityFontDefinition;
        break;
      default:
        uint64_t v14 = type metadata accessor for ExpandedJindoActivityFontDefinition();
        long long v15 = (unint64_t *)&unk_1E92E17B8;
        uint64_t v16 = type metadata accessor for ExpandedJindoActivityFontDefinition;
        break;
    }
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v14 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition();
    long long v15 = (unint64_t *)&unk_1E92E3B18;
    uint64_t v17 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition;
  }
  uint64_t result = sub_191B96168(v15, (void (*)(uint64_t))v17);
  uint64_t v19 = (uint64_t *)&a3[*(int *)(v10 + 24)];
  *uint64_t v19 = v14;
  v19[1] = result;
  return result;
}

uint64_t sub_191B94380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v75 = a1;
  uint64_t v82 = a2;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A28);
  MEMORY[0x1F4188790](v79);
  uint64_t v81 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A20);
  MEMORY[0x1F4188790](v80);
  uint64_t v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v78 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for MetricsRequest(0) - 8;
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF43F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  uint64_t v74 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF3C78();
  uint64_t v64 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1348);
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  MEMORY[0x1F4188790](v14);
  int v68 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1210);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1240) - 8;
  MEMORY[0x1F4188790](v69);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1260) - 8;
  MEMORY[0x1F4188790](v70);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1280);
  MEMORY[0x1F4188790](v66);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CommonActivityArchivingModifiers();
  uint64_t v67 = v2 + *(int *)(v26 + 20);
  uint64_t v27 = *(void *)(v67 + 48);
  uint64_t v28 = (char *)v13 + *(int *)(v11 + 20);
  uint64_t v29 = *MEMORY[0x1E4F3D4A0];
  uint64_t v30 = sub_191CF4368();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  *uint64_t v13 = v27;
  v13[1] = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1320);
  sub_191B00398(&qword_1E92E1318, &qword_1E92E1320);
  sub_191B96168((unint64_t *)&qword_1EB44B908, MEMORY[0x1E4F3CDB8]);
  uint64_t v31 = v68;
  sub_191CF4C28();
  uint64_t v32 = (uint64_t)v13;
  uint64_t v33 = (uint64_t)v25;
  sub_191B95B68(v32, MEMORY[0x1E4F3CDB8]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = *(int *)(v26 + 24);
  uint64_t v36 = v66;
  uint64_t v38 = v71;
  uint64_t v37 = v72;
  id v39 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  long long v75 = *(_OWORD *)(v65 + v35);
  v39(v19, v31, v72);
  uint64_t v40 = *(int *)(v17 + 44);
  uint64_t v41 = v73;
  uint64_t v42 = &v19[v40];
  *(void *)uint64_t v42 = KeyPath;
  *(_OWORD *)(v42 + 8) = v75;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v37);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = v67;
  double v45 = *(double *)(v67 + 104);
  sub_191B01614((uint64_t)v19, (uint64_t)v21, &qword_1E92E1210);
  v46 = &v21[*(int *)(v69 + 44)];
  *(void *)v46 = v43;
  v46[8] = v45 == 1.0;
  uint64_t v47 = (uint64_t)v19;
  uint64_t v48 = v74;
  sub_191B01770(v47, &qword_1E92E1210);
  uint64_t v49 = swift_getKeyPath();
  sub_191B01614((uint64_t)v21, (uint64_t)v23, &qword_1E92E1240);
  uint64_t v50 = &v23[*(int *)(v70 + 44)];
  *(void *)uint64_t v50 = v49;
  v50[8] = v45 != 1.0;
  sub_191B01770((uint64_t)v21, &qword_1E92E1240);
  uint64_t v51 = swift_getKeyPath();
  sub_191B01614((uint64_t)v23, v33, &qword_1E92E1260);
  uint64_t v52 = v33 + *(int *)(v36 + 36);
  *(void *)uint64_t v52 = v51;
  uint64_t v53 = (uint64_t)v78;
  *(unsigned char *)(v52 + 8) = 0;
  sub_191B01770((uint64_t)v23, &qword_1E92E1260);
  uint64_t v54 = v76;
  sub_191B94E54(v44, v76);
  sub_191B95C78(v54 + *(int *)(v77 + 48), v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v53, 1, v41) == 1)
  {
    sub_191B01770(v53, &qword_1E92E1F80);
    sub_191B01614(v33, v81, &qword_1E92E1280);
    swift_storeEnumTagMultiPayload();
    sub_191B95CE0();
    sub_191B95D80();
    sub_191CF44D8();
  }
  else
  {
    id v55 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v62, v53, v41);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = (uint64_t)v63;
    uint64_t v58 = (uint64_t *)&v63[*(int *)(v80 + 36)];
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A48);
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v58 + *(int *)(v59 + 28), v55, v41);
    *uint64_t v58 = v56;
    sub_191B01614(v33, v57, &qword_1E92E1280);
    sub_191B01614(v57, v81, &qword_1E92E1A20);
    swift_storeEnumTagMultiPayload();
    sub_191B95CE0();
    sub_191B95D80();
    sub_191CF44D8();
    sub_191B01770(v57, &qword_1E92E1A20);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v55, v41);
  }
  return sub_191B01770(v33, &qword_1E92E1280);
}

uint64_t sub_191B94BFC(uint64_t a1)
{
  uint64_t v2 = sub_191CF43F8();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_191CF4038();
}

uint64_t View.applyCommonEnvironment(viewTag:metricsRequest:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for CommonActivityArchivingModifiers();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v16 = *a1;
  sub_191B94E54(a2, (uint64_t)v10);
  sub_191B94148(&v16, (uint64_t)v10, v13);
  MEMORY[0x192FE3AA0](v13, a3, v11, a4);
  return sub_191B95B68((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
}

uint64_t type metadata accessor for CommonActivityArchivingModifiers()
{
  uint64_t result = qword_1E92E1A80;
  if (!qword_1E92E1A80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191B94E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B94EB8()
{
  return swift_getWitnessTable();
}

void *sub_191B94F54(unsigned char *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    v8[16] = *((unsigned char *)a2 + v7 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
    v8[40] = *((unsigned char *)a2 + v7 + 40);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    *((void *)v8 + 6) = *(void *)((char *)a2 + v7 + 48);
    v8[88] = *((unsigned char *)a2 + v7 + 88);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)a2 + v7 + 72);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
    uint64_t v10 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
    uint64_t v11 = &v8[v10];
    uint64_t v12 = &v9[v10];
    uint64_t v13 = sub_191CF43F8();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_191B95130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  uint64_t v4 = sub_191CF43F8();
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v3, 1, v4);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v6(v3, v4);
  }
  return result;
}

unsigned char *sub_191B95200(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  unsigned char v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((void *)v7 + 6) = *(void *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  uint64_t v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_191CF43F8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_191B9538C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  long long v9 = *(_OWORD *)&a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)uint64_t v7 = v9;
  long long v10 = *(_OWORD *)&a2[v6 + 24];
  unsigned char v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = v10;
  *((void *)v7 + 6) = *(void *)&a2[v6 + 48];
  long long v11 = *(_OWORD *)&a2[v6 + 56];
  long long v12 = *(_OWORD *)&a2[v6 + 72];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((void *)v7 + 12) = *(void *)&a2[v6 + 96];
  *((void *)v7 + 13) = *(void *)&a2[v6 + 104];
  uint64_t v13 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_191CF43F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_191B95584(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  unsigned char v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((void *)v7 + 6) = *(void *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  uint64_t v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  long long v10 = &v7[v9];
  long long v11 = &v8[v9];
  uint64_t v12 = sub_191CF43F8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_191B95710(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  unsigned char v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((void *)v7 + 6) = *(void *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  uint64_t v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  long long v10 = &v7[v9];
  long long v11 = &v8[v9];
  uint64_t v12 = sub_191CF43F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_191B95900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B95914);
}

uint64_t sub_191B95914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_191B959D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B959EC);
}

uint64_t sub_191B959EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for MetricsRequest(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_191B95AAC()
{
  uint64_t result = type metadata accessor for MetricsRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191B95B4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191B95B68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B95BD8@<X0>(unsigned char *a1@<X8>)
{
  sub_191B960B0();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B95C28()
{
  return sub_191CF4078();
}

uint64_t sub_191B95C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191B95CE0()
{
  unint64_t result = qword_1E92E1A18;
  if (!qword_1E92E1A18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1A20);
    sub_191B95D80();
    sub_191B00398(&qword_1E92E1A40, &qword_1E92E1A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1A18);
  }
  return result;
}

unint64_t sub_191B95D80()
{
  unint64_t result = qword_1E92E1278;
  if (!qword_1E92E1278)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1280);
    sub_191B95E48(&qword_1E92E1258, &qword_1E92E1260, (void (*)(void))sub_191B95E20);
    sub_191B96034();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1278);
  }
  return result;
}

uint64_t sub_191B95E20()
{
  return sub_191B95E48(&qword_1E92E1238, &qword_1E92E1240, (void (*)(void))sub_191B95EEC);
}

uint64_t sub_191B95E48(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B95EEC()
{
  unint64_t result = qword_1E92E1208;
  if (!qword_1E92E1208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1210);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1320);
    sub_191CF3C78();
    sub_191B00398(&qword_1E92E1318, &qword_1E92E1320);
    sub_191B96168((unint64_t *)&qword_1EB44B908, MEMORY[0x1E4F3CDB8]);
    swift_getOpaqueTypeConformance2();
    sub_191B00398(&qword_1EB44B950, &qword_1EB44B958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1208);
  }
  return result;
}

unint64_t sub_191B96034()
{
  unint64_t result = qword_1EB44A560;
  if (!qword_1EB44A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A560);
  }
  return result;
}

uint64_t sub_191B96088()
{
  return sub_191CF4028();
}

unint64_t sub_191B960B0()
{
  unint64_t result = qword_1E92E1290;
  if (!qword_1E92E1290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1290);
  }
  return result;
}

uint64_t sub_191B96104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B96168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B961B4()
{
  unint64_t result = qword_1E92E1A30;
  if (!qword_1E92E1A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1A38);
    sub_191B95CE0();
    sub_191B95D80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1A30);
  }
  return result;
}

uint64_t JindoViewTag.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t JindoViewTag.description.getter(char a1)
{
  uint64_t result = 0x6465646E61707865;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4C746361706D6F63;
      break;
    case 2:
      uint64_t result = 0x54746361706D6F63;
      break;
    case 3:
      uint64_t result = 0x4D746361706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

void *static JindoViewTag.allCases.getter()
{
  return &unk_1EE29DA38;
}

unint64_t sub_191B96300@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9WidgetKit12JindoViewTagO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_191B9632C(void *a1@<X8>)
{
  *a1 = &unk_1EE29DAF0;
}

uint64_t sub_191B9633C()
{
  return sub_191CF5508();
}

uint64_t sub_191B9639C()
{
  return sub_191CF54E8();
}

uint64_t sub_191B963EC()
{
  uint64_t result = 0x6465646E61707865;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4C746361706D6F63;
      break;
    case 2:
      uint64_t result = 0x54746361706D6F63;
      break;
    case 3:
      uint64_t result = 0x4D746361706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t _s9WidgetKit12JindoViewTagO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_191B964B4()
{
  unint64_t result = qword_1E92E3B20;
  if (!qword_1E92E3B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3B20);
  }
  return result;
}

unint64_t sub_191B9650C()
{
  unint64_t result = qword_1E92E3B28;
  if (!qword_1E92E3B28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E3B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3B28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JindoViewTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B96634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoViewTag()
{
  return &type metadata for JindoViewTag;
}

unint64_t sub_191B9666C()
{
  unint64_t result = qword_1E92E3B38;
  if (!qword_1E92E3B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3B38);
  }
  return result;
}

__n128 sub_191B966C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 17);
  char v4 = *(unsigned char *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = v2;
  *(unsigned char *)(a2 + 17) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(unsigned char *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  __n128 result = *(__n128 *)(a1 + 72);
  *(__n128 *)(a2 + 72) = result;
  return result;
}

uint64_t sub_191B96704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 328) = a2;
  *(void *)(v4 + 336) = a3;
  *(void *)(v4 + 320) = a1;
  *(void *)(v4 + 344) = type metadata accessor for ControlTemplateButton(0);
  *(void *)(v4 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  *(void *)(v4 + 360) = swift_task_alloc();
  type metadata accessor for ControlTemplateButton.Option(0);
  *(void *)(v4 + 368) = swift_task_alloc();
  *(void *)(v4 + 376) = swift_task_alloc();
  *(void *)(v4 + 384) = swift_task_alloc();
  *(void *)(v4 + 392) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  *(void *)(v4 + 400) = swift_task_alloc();
  *(void *)(v4 + 408) = type metadata accessor for ExtractedControlValueMetadata(0);
  *(void *)(v4 + 416) = swift_task_alloc();
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(v4 + 424) = v6;
  *(void *)(v4 + 432) = *(void *)(v6 - 8);
  *(void *)(v4 + 440) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E28);
  uint64_t v7 = sub_191CF3BA8();
  *(void *)(v4 + 448) = v7;
  *(void *)(v4 + 456) = *(void *)(v7 - 8);
  *(void *)(v4 + 464) = swift_task_alloc();
  uint64_t v8 = sub_191CF3BA8();
  *(void *)(v4 + 472) = v8;
  *(void *)(v4 + 480) = *(void *)(v8 - 8);
  *(void *)(v4 + 488) = swift_task_alloc();
  long long v9 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 136) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v4 + 152) = v9;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)(v3 + 64);
  *(void *)(v4 + 184) = *(void *)(v3 + 80);
  long long v10 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 120) = v10;
  sub_191CF5698();
  *(void *)(v4 + 496) = sub_191CF5688();
  uint64_t v12 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B96A24, v12, v11);
}

uint64_t sub_191B96A24()
{
  uint64_t v55 = *(void *)(v0 + 488);
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v74 = *(void *)(v0 + 472);
  uint64_t v57 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v52 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v71 = *(void *)(v0 + 416);
  uint64_t v76 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v60 = *(void *)(v0 + 328);
  swift_release();
  uint64_t v6 = *(void (**)(void))(v0 + 160);
  uint64_t v69 = *(void *)(v0 + 152);
  long long v7 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 208) = v7;
  *(_OWORD *)(v0 + 217) = *(_OWORD *)(v0 + 129);
  int v78 = *(unsigned __int8 *)(v0 + 208);
  uint64_t v79 = swift_allocObject();
  *(unsigned char *)(v79 + 16) = 0;
  uint64_t v67 = (char *)(v79 + 16);
  v6();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 233) = 1;
  uint64_t v65 = v0 + 104;
  uint64_t v8 = *(char **)(v5 + 32);
  sub_191CF4BC8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  unint64_t v9 = sub_191B971C4();
  uint64_t v63 = v8;
  *(void *)(v0 + 280) = v8;
  *(void *)(v0 + 288) = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C9D210(v78, v52, WitnessTable);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v1, v52);
  swift_getWitnessTable();
  unint64_t v11 = sub_191B97220();
  *(void *)(v0 + 296) = WitnessTable;
  *(void *)(v0 + 304) = v11;
  swift_getWitnessTable();
  v12.n128_f64[0] = sub_191C9D244(v55, v60, v74, v71);
  if (*(unsigned char *)(v71 + *(int *)(v76 + 24)) == 1) {
    *uint64_t v67 = 1;
  }
  uint64_t v13 = *(void *)(v0 + 400);
  uint64_t v75 = (*(uint64_t (**)(void, __n128))(v0 + 192))(*(void *)(v0 + 328), v12);
  uint64_t v61 = v14;
  unsigned __int8 v16 = v15 & 1;
  sub_191CF4758();
  uint64_t v17 = sub_191CF47A8();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17);
  uint64_t v20 = *(void *)(v0 + 400);
  if (v19 == 1)
  {
    sub_191B01770(*(void *)(v0 + 400), &qword_1E92E2338);
    uint64_t v77 = 0;
    uint64_t v58 = 0;
  }
  else
  {
    uint64_t v21 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    id v22 = objc_msgSend(v21, sel_string);

    uint64_t v77 = sub_191CF5338();
    uint64_t v58 = v23;
  }
  uint64_t v25 = *(void *)(v0 + 416);
  uint64_t v24 = *(void *)(v0 + 424);
  uint64_t v53 = *(void **)(v0 + 392);
  uint64_t v56 = *(void **)(v0 + 384);
  uint64_t v26 = *(void *)(v0 + 336);
  uint64_t v72 = *(void *)(v0 + 328);
  uint64_t v27 = (uint64_t *)(v25 + *(int *)(*(void *)(v0 + 408) + 20));
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  uint64_t v50 = *v27;
  uint64_t v31 = v27[2];
  uint64_t v30 = (char *)v27[3];
  uint64_t v32 = *(void *)(v26 + 24);
  uint64_t v33 = *(void *)(v26 + 40);
  uint64_t v48 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191B97274(0, v65, v78, v72, v25, v79, v77, v58, v53, v75, v61, v16, v28, v29, v31, v30, v24, v32, v63, v33);
  char v34 = 1;
  sub_191B97274(1, v65, v78, v72, v25, v79, v77, v58, v56, v75, v61, v16, v50, v29, v31, v30, v24, v32, v63, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v78 & 1) == 0)
  {
    swift_beginAccess();
    char v34 = *v67;
  }
  char v51 = v34;
  uint64_t v66 = *(void *)(v0 + 480);
  uint64_t v68 = *(void *)(v0 + 472);
  uint64_t v73 = *(void *)(v0 + 488);
  uint64_t v62 = *(void *)(v0 + 392);
  uint64_t v64 = *(void *)(v0 + 416);
  uint64_t v35 = *(void *)(v0 + 384);
  uint64_t v54 = v35;
  uint64_t v36 = *(void *)(v0 + 360);
  uint64_t v37 = *(void *)(v0 + 368);
  uint64_t v46 = *(void *)(v0 + 376);
  uint64_t v47 = v36;
  id v39 = *(int **)(v0 + 344);
  uint64_t v38 = *(void *)(v0 + 352);
  uint64_t v59 = *(void *)(v0 + 320);
  sub_191B97FAC(v62, v46, type metadata accessor for ControlTemplateButton.Option);
  sub_191B97FAC(v35, v37, type metadata accessor for ControlTemplateButton.Option);
  *(void *)(v0 + 312) = v69;
  uint64_t v40 = sub_191CF3078();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  v41(v36, 1, 1, v40);
  char v49 = *(unsigned char *)(v0 + 209);
  sub_191B97EA0(v0 + 216, v0 + 264);
  char v70 = *(unsigned char *)(v0 + 232);
  uint64_t v42 = v38 + v39[7];
  v41(v42, 1, 1, v40);
  uint64_t v43 = (void *)(v38 + v39[10]);
  *uint64_t v43 = 0;
  v43[1] = 0;
  sub_191B88724(v46, v38, type metadata accessor for ControlTemplateButton.Option);
  sub_191B88724(v37, v38 + v39[5], type metadata accessor for ControlTemplateButton.Option);
  *(void *)(v38 + v39[6]) = *(void *)(v0 + 312);
  sub_191B6B980((id *)(v0 + 312));
  sub_191B97F08(v0 + 264);
  sub_191B28FA4(v47, v42, (uint64_t *)&unk_1EB44BBA8);
  *(unsigned char *)(v38 + v39[8]) = v51;
  *(unsigned char *)(v38 + v39[9]) = v49;
  sub_191B28FA4(v0 + 264, (uint64_t)v43, &qword_1EB44B528);
  *(unsigned char *)(v38 + v39[11]) = v70;
  sub_191B88724(v38, v59, type metadata accessor for ControlTemplateButton);
  sub_191B97F34(v54, type metadata accessor for ControlTemplateButton.Option);
  sub_191B97F34(v62, type metadata accessor for ControlTemplateButton.Option);
  sub_191B97F34(v64, type metadata accessor for ExtractedControlValueMetadata);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v73, v68);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_191B971AC()
{
  return swift_deallocObject();
}

unint64_t sub_191B971C4()
{
  unint64_t result = qword_1EB449E20;
  if (!qword_1EB449E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449E20);
  }
  return result;
}

unint64_t sub_191B97220()
{
  unint64_t result = qword_1E92E2048;
  if (!qword_1E92E2048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2048);
  }
  return result;
}

uint64_t sub_191B97274@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char *a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20)
{
  uint64_t v110 = a8;
  uint64_t v121 = a7;
  uint64_t v100 = a6;
  uint64_t v107 = a5;
  uint64_t v119 = a4;
  int v114 = a3;
  LODWORD(v112) = a1;
  v120 = a9;
  uint64_t v117 = a19;
  uint64_t v115 = a17;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v109 = (uint64_t)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v101 = (uint64_t)&v100 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v122 = (char *)&v100 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v103 = (char *)&v100 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v105 = (char *)&v100 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v104 = (char *)&v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v113 = (char *)&v100 - v34;
  uint64_t v102 = type metadata accessor for ExtractedControlValueMetadata(0);
  uint64_t v35 = MEMORY[0x1F4188790](v102);
  uint64_t v116 = (uint64_t)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v106 = (uint64_t)&v100 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v123 = (uint64_t)&v100 - v40;
  uint64_t v41 = *(void *)(a18 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)&v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E28);
  uint64_t v44 = sub_191CF3BA8();
  uint64_t v111 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v100 - v45;
  uint64_t v47 = sub_191CF3BA8();
  uint64_t v118 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  char v49 = (char *)&v100 - v48;
  int v108 = *(unsigned __int8 *)(a2 + 40);
  (*(void (**)(void))(a2 + 72))(v112);
  swift_getKeyPath();
  LOBYTE(v126) = 1;
  sub_191CF4BC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, a18);
  unint64_t v50 = sub_191B971C4();
  uint64_t v130 = a20;
  unint64_t v131 = v50;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C9D210(v114, v44, WitnessTable);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v46, v44);
  uint64_t v126 = v115;
  uint64_t v127 = a18;
  v128 = v117;
  uint64_t v129 = a20;
  type metadata accessor for ControlWidgetButtonParser();
  swift_getWitnessTable();
  unint64_t v52 = sub_191B97220();
  uint64_t v124 = WitnessTable;
  unint64_t v125 = v52;
  uint64_t v53 = v123;
  swift_getWitnessTable();
  uint64_t v117 = v49;
  uint64_t v54 = v119;
  uint64_t v55 = (uint64_t)v113;
  uint64_t v119 = v47;
  sub_191C9D244((uint64_t)v49, v54, v47, v53);
  sub_191CF4758();
  uint64_t v56 = sub_191CF47A8();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v58(v55, 1, v56) == 1)
  {
    sub_191B01770(v55, &qword_1E92E2338);
    uint64_t v59 = v107;
    uint64_t v60 = v106;
    sub_191B97FAC(v107, v106, type metadata accessor for ExtractedControlValueMetadata);
    goto LABEL_5;
  }
  uint64_t v61 = (void *)sub_191CF4798();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
  id v62 = objc_msgSend(v61, sel_string);

  uint64_t v63 = sub_191CF5338();
  uint64_t v65 = v64;

  uint64_t v59 = v107;
  uint64_t v60 = v106;
  sub_191B97FAC(v107, v106, type metadata accessor for ExtractedControlValueMetadata);
  if (!v65)
  {
LABEL_5:
    uint64_t v67 = (uint64_t)v104;
    sub_191CF4768();
    unsigned int v68 = v58(v67, 1, v56);
    uint64_t v66 = (uint64_t)v105;
    if (v68 == 1)
    {
      sub_191B97F34(v60, type metadata accessor for ExtractedControlValueMetadata);
      sub_191B01770(v67, &qword_1E92E2338);
      uint64_t v111 = 0;
      uint64_t v104 = 0;
    }
    else
    {
      uint64_t v69 = (void *)sub_191CF4798();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v67, v56);
      id v70 = objc_msgSend(v69, sel_string);

      uint64_t v111 = sub_191CF5338();
      uint64_t v104 = v71;

      sub_191B97F34(v60, type metadata accessor for ExtractedControlValueMetadata);
    }
    goto LABEL_8;
  }
  uint64_t v104 = v65;
  uint64_t v111 = v63;
  sub_191B97F34(v60, type metadata accessor for ExtractedControlValueMetadata);
  uint64_t v66 = (uint64_t)v105;
LABEL_8:
  uint64_t v72 = (uint64_t)v122;
  uint64_t v73 = (uint64_t)v103;
  uint64_t v74 = v102;
  sub_191CF4878();
  uint64_t v75 = v116;
  sub_191B97FAC(v59, v116, type metadata accessor for ExtractedControlValueMetadata);
  uint64_t v76 = sub_191CF4868();
  uint64_t v77 = *(void *)(v76 - 8);
  int v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  if (v78(v73, 1, v76) == 1)
  {
    sub_191CF4878();
    sub_191B97F34(v75, type metadata accessor for ExtractedControlValueMetadata);
    sub_191B01770(v73, qword_1EB4496F8);
  }
  else
  {
    sub_191B97F34(v75, type metadata accessor for ExtractedControlValueMetadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v66, v73, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v66, 0, 1, v76);
  }
  char v79 = v108;
  if (*(unsigned char *)(v53 + *(int *)(v74 + 24)) == 1)
  {
    uint64_t v80 = (unsigned char *)(v100 + 16);
    swift_beginAccess();
    *uint64_t v80 = 1;
    uint64_t v72 = (uint64_t)v122;
  }
  uint64_t v116 = a15;
  int v114 = a12;
  uint64_t v113 = a11;
  uint64_t v112 = a10;
  sub_191B98014(v66, v72);
  v122 = a16;
  uint64_t v115 = a13;
  if (v79)
  {
    sub_191B01770(v72, qword_1EB4496F8);
    uint64_t v85 = v110;
  }
  else
  {
    uint64_t v81 = v72;
    uint64_t v82 = v72;
    uint64_t v83 = v101;
    sub_191B98014(v81, v101);
    unsigned int v84 = v78(v83, 1, v76);
    uint64_t v85 = v110;
    if (v84 == 1)
    {
      sub_191B01770(v82, qword_1EB4496F8);
      sub_191B01770(v83, qword_1EB4496F8);
LABEL_19:
      uint64_t v87 = a14;
      uint64_t v88 = v109;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v109, 1, 1, v76);
      goto LABEL_20;
    }
    char v86 = sub_191CF4858();
    sub_191B01770(v82, qword_1EB4496F8);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v83, v76);
    if ((v86 & 1) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v87 = a14;
  uint64_t v88 = v109;
  sub_191B98014(v66, v109);
LABEL_20:
  uint64_t v89 = v66;
  uint64_t v90 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v91 = v120;
  uint64_t v92 = (uint64_t)v120 + v90[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v92, 1, 1, v76);
  uint64_t v93 = (char *)v91 + v90[7];
  *(void *)uint64_t v93 = 0;
  *((void *)v93 + 1) = 0;
  v93[16] = 1;
  v94 = (void *)((char *)v91 + v90[8]);
  void *v94 = 0;
  v94[1] = 0;
  uint64_t v95 = (void *)((char *)v91 + v90[9]);
  *uint64_t v95 = 0;
  v95[1] = 0;
  void *v91 = v121;
  v91[1] = v85;
  uint64_t v96 = v104;
  v91[2] = v111;
  v91[3] = v96;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v97 = v122;
  swift_bridgeObjectRetain();
  sub_191B28FA4(v88, v92, qword_1EB4496F8);
  uint64_t v98 = v113;
  *(void *)uint64_t v93 = v112;
  *((void *)v93 + 1) = v98;
  v93[16] = v114 & 1;
  swift_bridgeObjectRelease();
  void *v94 = v115;
  v94[1] = v87;
  swift_bridgeObjectRelease();
  *uint64_t v95 = v116;
  v95[1] = v97;
  sub_191B01770(v89, qword_1EB4496F8);
  sub_191B97F34(v123, type metadata accessor for ExtractedControlValueMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v117, v119);
}

uint64_t sub_191B97EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B97F08(uint64_t a1)
{
  return a1;
}

uint64_t sub_191B97F34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ControlWidgetButtonParser()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B97FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B98014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B9807C(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t sub_191B980D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 48);
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  id v6 = (id)v8;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191B98164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  id v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  id v7 = v6;

  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_191B9824C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineProviderPreviewSource(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineProviderPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_191B9837C()
{
  unint64_t result = qword_1E92E27E0;
  if (!qword_1E92E27E0)
  {
    type metadata accessor for ControlTemplateButton(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ResolvedWidgetConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolvedWidgetConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedWidgetConfiguration()
{
  return &type metadata for ResolvedWidgetConfiguration;
}

uint64_t sub_191B9846C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191B984B8(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v4 = objc_msgSend(v3, sel__className);

  sub_191CF5338();
  return a2;
}

uint64_t sub_191B9854C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_191CF43A8();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_191B985B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191CF43A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_191B98624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A288);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_191CF43A8();
  __n128 v12 = *(void **)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x1F4188790](v15);
  int v19 = (char *)&v32 - v18;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v2 + 144))(a1);
  (*(void (**)(uint64_t))(v2 + 128))(v20);
  uint64_t v21 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v21(v10, 1, v11) == 1)
  {
    uint64_t v22 = sub_191B01770((uint64_t)v10, &qword_1EB44A288);
  }
  else
  {
    uint64_t v32 = a2;
    uint64_t v23 = v10;
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v12[4];
    v24(v17, v23, v11);
    BOOL v25 = sub_191B99650((uint64_t)v19, (uint64_t)v17);
    uint64_t v26 = (void (*)(char *, uint64_t))v12[1];
    if (v25)
    {
      v26(v19, v11);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v32, v17, v11);
    }
    uint64_t v22 = ((uint64_t (*)(char *, uint64_t))v26)(v17, v11);
    a2 = v32;
  }
  (*(void (**)(uint64_t))(v2 + 136))(v22);
  if (v21(v8, 1, v11) == 1)
  {
    sub_191B01770((uint64_t)v8, &qword_1EB44A288);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v12[4])(a2, v19, v11);
  }
  else
  {
    uint64_t v28 = (void (*)(char *, char *, uint64_t))v12[4];
    uint64_t v29 = (uint64_t)v33;
    v28(v33, v8, v11);
    BOOL v30 = sub_191B99A68((uint64_t)v19, v29);
    uint64_t v31 = (void (*)(char *, uint64_t))v12[1];
    if (v30)
    {
      v31(v19, v11);
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(a2, v29, v11);
    }
    else
    {
      v31((char *)v29, v11);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(a2, v19, v11);
    }
  }
}

CTFontDescriptorRef sub_191B98974()
{
  uint64_t v1 = v0;
  if (qword_1EB44A060 != -1)
  {
    swift_once();
    uint64_t v1 = v0;
  }
  if (byte_1EB44C860 != 2 && (byte_1EB44C860 & 1) != 0)
  {
    original = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191CF8410;
    uint64_t v4 = (void *)*MEMORY[0x1E4F24580];
    *(void *)(inited + 64) = MEMORY[0x1E4FBB3D0];
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = 0x3FD51EB851EB851FLL;
    id v5 = v4;
    sub_191B2D3B8(inited);
    type metadata accessor for CFString(0);
    sub_191B9A44C();
    CFDictionaryRef v6 = (const __CFDictionary *)sub_191CF5238();
    swift_bridgeObjectRelease();
    CTFontDescriptorRef CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(original, v6);

    return CopyWithAttributes;
  }
  else
  {
    return v1;
  }
}

uint64_t sub_191B98ABC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v63 = a8;
  int v61 = a7;
  int v62 = a2;
  v57[0] = a3;
  v57[1] = a6;
  int v59 = a4;
  uint64_t v58 = a1;
  uint64_t v11 = sub_191CF3C18();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v60 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B038);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_191CF49C8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v8 + 176))(v21);
  sub_191B01614(a5, (uint64_t)v18, &qword_1EB44B038);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4F3E088], v19);
    uint64_t result = sub_191B01770((uint64_t)v18, &qword_1EB44B038);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
  }
  if (*MEMORY[0x1E4F24660])
  {
    id v26 = (id)*MEMORY[0x1E4F24660];
    id v27 = sub_191C432DC();
    type metadata accessor for CFString(0);
    uint64_t v69 = v28;
    *(void *)&long long v68 = v27;
    sub_191B4F9C0(&v68, v67);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v24;
    sub_191B4B2C0(v67, v26, isUniquelyReferenced_nonNull_native);
    uint64_t v30 = v66;

    uint64_t v31 = swift_bridgeObjectRelease();
    if ((v61 & 1) == 0)
    {
      double v32 = sub_191C434C4();
      uint64_t v33 = (void *)*MEMORY[0x1E4F246D8];
      uint64_t v69 = MEMORY[0x1E4FBC958];
      *(double *)&long long v68 = v32;
      sub_191B4F9C0(&v68, v67);
      id v34 = v33;
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v30;
      sub_191B4B2C0(v67, v34, v35);
      uint64_t v30 = v66;

      uint64_t v31 = swift_bridgeObjectRelease();
    }
    uint64_t v36 = (*(uint64_t (**)(uint64_t))(v9 + 168))(v31);
    uint64_t v37 = (void *)*MEMORY[0x1E4F24620];
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B7B8);
    *(void *)&long long v68 = v30;
    sub_191B4F9C0(&v68, v67);
    id v38 = v37;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v36;
    sub_191B4B2C0(v67, v38, v39);
    uint64_t v40 = v66;

    swift_bridgeObjectRelease();
    if (v62)
    {
      uint64_t v46 = v64;
      uint64_t v45 = v65;
    }
    else
    {
      uint64_t v41 = (void *)*MEMORY[0x1E4F245F0];
      uint64_t v42 = MEMORY[0x1E4FBC958];
      uint64_t v69 = MEMORY[0x1E4FBC958];
      *(void *)&long long v68 = v58;
      sub_191B4F9C0(&v68, v67);
      id v43 = v41;
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v40;
      sub_191B4B2C0(v67, v43, v44);
      uint64_t v40 = v66;

      swift_bridgeObjectRelease();
      uint64_t v46 = v64;
      uint64_t v45 = v65;
      if ((v59 & 1) == 0)
      {
        uint64_t v47 = (void *)*MEMORY[0x1E4F24598];
        uint64_t v69 = v42;
        *(void *)&long long v68 = v57[0];
        sub_191B4F9C0(&v68, v67);
        id v48 = v47;
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v66 = v40;
        sub_191B4B2C0(v67, v48, v49);
        uint64_t v40 = v66;

        swift_bridgeObjectRelease();
      }
    }
    sub_191B01614(v63, (uint64_t)v15, &qword_1EB44A280);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v15, 1, v45) == 1)
    {
      sub_191B01770((uint64_t)v15, &qword_1EB44A280);
LABEL_19:
      sub_191B9A44C();
      uint64_t v56 = sub_191CF5238();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      return v56;
    }
    unint64_t v50 = v60;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v60, v15, v45);
    int v51 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v50, v45);
    if (v51 != *MEMORY[0x1E4F3CD08])
    {
      if (v51 == *MEMORY[0x1E4F3CD00])
      {
        uint64_t v52 = 1;
LABEL_18:
        (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v45);
        uint64_t v53 = (void *)*MEMORY[0x1E4F24590];
        uint64_t v69 = MEMORY[0x1E4FBB550];
        *(void *)&long long v68 = v52;
        sub_191B4F9C0(&v68, v67);
        id v54 = v53;
        char v55 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v66 = v40;
        sub_191B4B2C0(v67, v54, v55);

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v60, v45);
    }
    uint64_t v52 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B99130()
{
  return 0;
}

uint64_t sub_191B99148()
{
  return MEMORY[0x1E4FBC868];
}

uint64_t type metadata accessor for BaseWidgetFontDefinition()
{
  return self;
}

CTFontDescriptorRef sub_191B99178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_191B99E80(a1, a2, a5);
}

uint64_t sub_191B99180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  v18[1] = a4;
  uint64_t v8 = sub_191CF43A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v18 - v13;
  sub_191CF4A98();
  sub_191B98624((uint64_t)v12, (uint64_t)v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  (*(void (**)(uint64_t, char *))(v4 + 160))(a1, v14);
  CTFontDescriptorRef v16 = sub_191B99E80(a1, a2, a3);
  sub_191B98974();

  sub_191CF49A8();
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
}

CTFontDescriptorRef sub_191B99300(uint64_t a1, uint64_t a2, char a3, double a4)
{
  int v7 = a3 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4AB8();
  uint64_t v11 = (void *)sub_191B98ABC(*(uint64_t *)&a4, 0, 0, 1, a1, a2, v7, (uint64_t)v10);
  sub_191B01770((uint64_t)v10, &qword_1EB44A280);
  uint64_t v12 = (void *)CTFontDescriptorCreateWithAttributesAndOptions();
  CTFontDescriptorRef v13 = sub_191B98974();

  return v13;
}

CTFontDescriptorRef sub_191B9940C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[0] = a2;
  v19[1] = a3;
  uint64_t v5 = sub_191CF43A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_191CF4AD8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  sub_191CF4A98();
  sub_191B98624((uint64_t)v9, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_191CF4AA8();
  sub_191CF45F8();
  CTFontDescriptorRef v16 = (void *)sub_191CF3B28();
  CTFontDescriptorRef v17 = sub_191B98974();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

uint64_t sub_191B99630(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return MEMORY[0x1F40F8690](a1, a2, a3, a4 & 1);
}

uint64_t sub_191B99638(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return MEMORY[0x1F40F8698](a1, a2, a3, a4 & 1);
}

BOOL sub_191B99650(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_191CF43A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = *MEMORY[0x1E4F3D588];
  if (v12 != *MEMORY[0x1E4F3D588])
  {
    if (v12 == *MEMORY[0x1E4F3D5C0])
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5C8])
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5B8]) {
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x1E4F3D580])
    {
      unint64_t v13 = 4;
    }
    else if (v12 == *MEMORY[0x1E4F3D590])
    {
      unint64_t v13 = 5;
    }
    else if (v12 == *MEMORY[0x1E4F3D560])
    {
      unint64_t v13 = 6;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A0])
    {
      unint64_t v13 = 7;
    }
    else if (v12 == *MEMORY[0x1E4F3D598])
    {
      unint64_t v13 = 8;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A8])
    {
      unint64_t v13 = 9;
    }
    else if (v12 == *MEMORY[0x1E4F3D570])
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != *MEMORY[0x1E4F3D578])
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C0])
  {
    unint64_t v16 = 1;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C8])
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != *MEMORY[0x1E4F3D5B8])
    {
      if (v15 == *MEMORY[0x1E4F3D580])
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D590])
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D560])
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A0])
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D598])
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A8])
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D570])
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D578])
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

BOOL sub_191B99A68(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_191CF43A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a2, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = *MEMORY[0x1E4F3D588];
  if (v12 != *MEMORY[0x1E4F3D588])
  {
    if (v12 == *MEMORY[0x1E4F3D5C0])
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5C8])
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5B8]) {
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x1E4F3D580])
    {
      unint64_t v13 = 4;
    }
    else if (v12 == *MEMORY[0x1E4F3D590])
    {
      unint64_t v13 = 5;
    }
    else if (v12 == *MEMORY[0x1E4F3D560])
    {
      unint64_t v13 = 6;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A0])
    {
      unint64_t v13 = 7;
    }
    else if (v12 == *MEMORY[0x1E4F3D598])
    {
      unint64_t v13 = 8;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A8])
    {
      unint64_t v13 = 9;
    }
    else if (v12 == *MEMORY[0x1E4F3D570])
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != *MEMORY[0x1E4F3D578])
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C0])
  {
    unint64_t v16 = 1;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C8])
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != *MEMORY[0x1E4F3D5B8])
    {
      if (v15 == *MEMORY[0x1E4F3D580])
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D590])
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D560])
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A0])
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D598])
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A8])
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D570])
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == *MEMORY[0x1E4F3D578])
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

CTFontDescriptorRef sub_191B99E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v39 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF4AE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF43A8();
  uint64_t v37 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  CTFontDescriptorRef v17 = (char *)&v36 - v16;
  sub_191CF4A98();
  sub_191B98624((uint64_t)v15, (uint64_t)v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v36 = v12 + 8;
  id v38 = v18;
  v18(v15, v11);
  uint64_t v19 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v40, v7);
  uint64_t v20 = sub_191C41E40((uint64_t)v10);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, char *))(v3 + 152))(v20, v17);
  uint64_t v23 = v22;
  LOWORD(v7) = v24;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, char *))(v3 + 160))(v19, v17);
  BOOL v27 = (v7 & 0x101) != 0;
  unsigned int v28 = v7 & 0x100;
  if ((v7 & 0x100) != 0)
  {
    uint64_t v23 = 0;
    uint64_t v21 = 0;
  }
  int v29 = v25 & 1;
  sub_191CF4AB8();
  uint64_t v30 = (void *)sub_191B98ABC(v21, v28 >> 8, v23, v27, v39, v26, v29, (uint64_t)v6);
  sub_191B01770((uint64_t)v6, &qword_1EB44A280);
  id v31 = sub_191C42D7C();
  id v32 = sub_191C4301C();
  uint64_t v33 = (void *)CTFontDescriptorCreateWithTextStyleAndAttributes();

  CTFontDescriptorRef v34 = sub_191B98974();
  v38(v17, v37);
  return v34;
}

const __CTFontDescriptor *sub_191B9A19C()
{
  sub_191CF45F8();
  uint64_t v0 = (const __CTFontDescriptor *)sub_191CF3B58();
  if (qword_1EB44A060 != -1) {
    swift_once();
  }
  if (byte_1EB44C860)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191CF8410;
    uint64_t v2 = (void *)*MEMORY[0x1E4F24580];
    *(void *)(inited + 64) = MEMORY[0x1E4FBB3D0];
    *(void *)(inited + 32) = v2;
    *(void *)(inited + 40) = 0x3FD51EB851EB851FLL;
    id v3 = v2;
    sub_191B2D3B8(inited);
    type metadata accessor for CFString(0);
    sub_191B9A44C();
    CFDictionaryRef v4 = (const __CFDictionary *)sub_191CF5238();
    swift_bridgeObjectRelease();
    CTFontDescriptorRef CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(v0, v4);

    return CopyWithAttributes;
  }
  return v0;
}

const __CTFontDescriptor *sub_191B9A304()
{
  sub_191CF45F8();
  uint64_t v0 = (const __CTFontDescriptor *)sub_191CF3B78();
  if (qword_1EB44A060 != -1) {
    swift_once();
  }
  if (byte_1EB44C860)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191CF8410;
    uint64_t v2 = (void *)*MEMORY[0x1E4F24580];
    *(void *)(inited + 64) = MEMORY[0x1E4FBB3D0];
    *(void *)(inited + 32) = v2;
    *(void *)(inited + 40) = 0x3FD51EB851EB851FLL;
    id v3 = v2;
    sub_191B2D3B8(inited);
    type metadata accessor for CFString(0);
    sub_191B9A44C();
    CFDictionaryRef v4 = (const __CFDictionary *)sub_191CF5238();
    swift_bridgeObjectRelease();
    CTFontDescriptorRef CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(v0, v4);

    return CopyWithAttributes;
  }
  return v0;
}

unint64_t sub_191B9A44C()
{
  unint64_t result = qword_1EB44B920;
  if (!qword_1EB44B920)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B920);
  }
  return result;
}

uint64_t ActivityViewContext.activityID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityViewContext.attributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ActivityViewContext.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t ActivityViewContext.isStale.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_191B9A59C()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_191B9A6A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  if ((v12 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v11 + 80) | v7) & 0x100000) != 0
    || v14 + ((v13 + ((v7 + 16) & ~(unint64_t)v7)) & ~v12) + 1 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17
                   + (((v12 | v7) & 0xF8 ^ 0x1F8) & ((v12 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v12;
    uint64_t v25 = AssociatedTypeWitness;
    uint64_t v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    uint64_t v20 = (char *)a2 + v8;
    uint64_t v21 = ((unint64_t)a1 + v8 + 16) & ~v8;
    uint64_t v22 = (unint64_t)(v20 + 16) & ~v8;
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v23(v21, v22, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v21 + v13) & v18, (v22 + v13) & v18, v25);
    *(unsigned char *)(((v21 + v13) & v18) + v14) = *(unsigned char *)(((v22 + v13) & v18) + v14);
  }
  return a1;
}

uint64_t sub_191B9A884(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t, void))(v4 + 8))(v6, *(void *)(a2 + 16));
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = AssociatedTypeWitness;
  unint64_t v12 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v12, v11);
}

void *sub_191B9A96C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v17, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v14 + 48) + v16) = *(unsigned char *)(*(void *)(v14 + 48) + v17);
  return a1;
}

void *sub_191B9AA84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, void))(v6 + 24))(v9, v10, *(void *)(a3 + 16));
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, v17, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v14 + 40) + v16) = *(unsigned char *)(*(void *)(v14 + 40) + v17);
  return a1;
}

_OWORD *sub_191B9ABAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t, void))(v4 + 32))(v7, v8, *(void *)(a3 + 16));
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v9 + v13 + v7) & ~v13;
  uint64_t v15 = (v9 + v13 + v8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v15, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v12 + 32) + v14) = *(unsigned char *)(*(void *)(v12 + 32) + v15);
  return a1;
}

void *sub_191B9ACC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t, void))(v7 + 40))(v10, v11, *(void *)(a3 + 16));
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v12 + v16 + v10) & ~v16;
  uint64_t v18 = (v12 + v16 + v11) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(v17, v18, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v15 + 24) + v17) = *(unsigned char *)(*(void *)(v15 + 24) + v18);
  return a1;
}

uint64_t sub_191B9ADD8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = v7;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) + 1;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_28:
      if ((v13 & 0x80000000) != 0)
      {
        uint64_t v24 = ((unint64_t)a1 + v10 + 16) & ~v10;
        if (v7 == v14)
        {
          uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          return v25(v24, v7, v5);
        }
        else
        {
          uint64_t v26 = (v24 + v11 + v12) & ~v12;
          BOOL v27 = *(uint64_t (**)(uint64_t))(v9 + 48);
          return v27(v26);
        }
      }
      else
      {
        unint64_t v23 = *((void *)a1 + 1);
        if (v23 >= 0xFFFFFFFF) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_28;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v21 = v15;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v14 + (v22 | v20) + 1;
}

void sub_191B9B0B4(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  if (v9 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v15 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v15 = v9;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  size_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + ((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) + 1;
  if (a3 <= v16)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v21 = ((a3 - v16 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v19 = ~v16 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (*(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 64)
         + ((v13 + v14 + ((v12 + 16) & ~v12)) & ~v14) != -1)
      {
        int v22 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *a1 = v22;
          *((unsigned char *)a1 + 2) = BYTE2(v22);
        }
        else if (v17 == 2)
        {
          *a1 = v22;
        }
        else
        {
          *(unsigned char *)a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        *((unsigned char *)a1 + v17) = v20;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v17) = v20;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)((char *)a1 + v17) = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)((char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x191B9B418);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if ((v15 & 0x80000000) != 0)
        {
          uint64_t v23 = ((unint64_t)a1 + v12 + 16) & ~v12;
          if (v9 == v16)
          {
            uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
            v24(v23, a2, v9, v7);
          }
          else
          {
            uint64_t v25 = (v23 + v13 + v14) & ~v14;
            uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v11 + 56);
            v26(v25, a2);
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ActivityViewContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191B9B458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  uint64_t v12 = (int *)type metadata accessor for ActivityViewContext();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[v12[9]], a3, a6);
  uint64_t v13 = &a7[v12[10]];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v13, a4, AssociatedTypeWitness);
  a7[v12[11]] = a5;
  return result;
}

void static DynamicIslandMode.expanded.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandMode.compactLeading.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static DynamicIslandMode.compactTrailing.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static DynamicIslandMode.minimal.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

BOOL static DynamicIslandMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

double DynamicIsland.init<A, B, C, D>(expanded:compactLeading:compactTrailing:minimal:)@<D0>(void (*a1)(void)@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X3>, void (*a4)(void)@<X4>, uint64_t a5@<X5>, void (*a6)(void)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v46 = a7;
  uint64_t v47 = a6;
  uint64_t v42 = a5;
  id v43 = a4;
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  char v35 = a1;
  uint64_t v45 = a16;
  uint64_t v41 = a15;
  uint64_t v37 = a14;
  v34[1] = a13;
  uint64_t v36 = a11;
  uint64_t v44 = a12;
  v34[2] = a10;
  uint64_t v17 = MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v34[3] = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DynamicIslandExpandedContent();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)v34 - v26;
  uint64_t v28 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a8, 1, 1, v28);
  int v29 = (int *)type metadata accessor for DynamicIsland();
  *(void *)(a8 + v29[5]) = 0;
  v35();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v27, a9);
  *(void *)(a8 + v29[8]) = sub_191CF5038();
  v39();
  *(void *)(a8 + v29[9]) = sub_191CF5038();
  v43();
  *(void *)(a8 + v29[10]) = sub_191CF5038();
  v47();
  uint64_t v30 = sub_191CF5038();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(a8 + v29[11]) = v30;
  char v63 = 1;
  char v62 = 1;
  char v61 = 1;
  char v60 = 1;
  char v59 = 1;
  char v58 = 1;
  char v57 = 1;
  char v56 = 1;
  char v55 = 1;
  char v54 = 1;
  char v53 = 1;
  char v52 = 1;
  char v51 = 1;
  char v50 = 1;
  char v49 = 1;
  char v48 = 1;
  uint64_t v31 = a8 + v29[6];
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  *(void *)(v31 + 16) = 0;
  *(unsigned char *)(v31 + 24) = 1;
  *(void *)(v31 + 32) = 0;
  *(unsigned char *)(v31 + 40) = v61;
  *(void *)(v31 + 48) = 0;
  *(unsigned char *)(v31 + 56) = v60;
  *(void *)(v31 + 64) = 0;
  *(unsigned char *)(v31 + 72) = v59;
  *(void *)(v31 + 80) = 0;
  *(unsigned char *)(v31 + 88) = v58;
  *(void *)(v31 + 96) = 0;
  *(unsigned char *)(v31 + 104) = v57;
  *(void *)(v31 + 112) = 0;
  *(unsigned char *)(v31 + 120) = v56;
  *(void *)(v31 + 128) = 0;
  *(unsigned char *)(v31 + 136) = v55;
  *(void *)(v31 + 144) = 0;
  *(unsigned char *)(v31 + 152) = v54;
  *(void *)(v31 + 160) = 0;
  *(unsigned char *)(v31 + 168) = v53;
  *(void *)(v31 + 176) = 0;
  *(unsigned char *)(v31 + 184) = v52;
  *(void *)(v31 + 192) = 0;
  *(unsigned char *)(v31 + 200) = v51;
  *(void *)(v31 + 208) = 0;
  *(unsigned char *)(v31 + 216) = v50;
  *(void *)(v31 + 224) = 0;
  *(unsigned char *)(v31 + 232) = v49;
  *(void *)(v31 + 240) = 0;
  *(unsigned char *)(v31 + 248) = v48;
  id v32 = (_OWORD *)(a8 + v29[7]);
  double result = 0.0;
  *id v32 = xmmword_191CFDBC0;
  v32[1] = xmmword_191CFDBC0;
  v32[2] = xmmword_191CFDBC0;
  v32[3] = xmmword_191CFDBC0;
  return result;
}

uint64_t type metadata accessor for DynamicIsland()
{
  uint64_t result = qword_1E92E1408;
  if (!qword_1E92E1408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DynamicIsland.widgetURL(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_191B9E048(v2, a2, (uint64_t (*)(void))type metadata accessor for DynamicIsland);

  return sub_191B9BB24(a1, a2);
}

uint64_t sub_191B9BB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t DynamicIsland.keylineTint(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_191B9E048(v2, a2, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  uint64_t v5 = *(int *)(type metadata accessor for DynamicIsland() + 20);
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + v5) = a1;
  return result;
}

uint64_t DynamicIsland.contentMargins(_:_:for:)@<X0>(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = *a1;
  sub_191B9E048(v3, a2, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  sub_191BDF160((uint64_t)v63, a3);
  uint64_t v7 = (void *)(a2 + *(int *)(type metadata accessor for DynamicIsland() + 24));
  uint64_t v8 = (char *)(v7 + 1);
  uint64_t v9 = v7 + 2;
  uint64_t v10 = (unsigned __int8 *)(v7 + 3);
  uint64_t v11 = v7 + 4;
  uint64_t v12 = v7 + 5;
  uint64_t v13 = v7 + 6;
  uint64_t v14 = v7 + 7;
  char v60 = v7 + 20;
  char v61 = v7 + 19;
  char v58 = v7 + 22;
  char v59 = v7 + 21;
  char v57 = v7 + 23;
  char v55 = v7 + 26;
  char v56 = v7 + 25;
  char v53 = v7 + 28;
  char v54 = v7 + 27;
  char v51 = v7 + 30;
  char v52 = v7 + 29;
  char v50 = v7 + 31;
  unsigned int v15 = v7;
  char v62 = v7 + 1;
  unsigned int v16 = v7 + 2;
  uint64_t v17 = v7 + 3;
  uint64_t v18 = v7 + 4;
  uint64_t v19 = (unsigned __int8 *)(v7 + 5);
  uint64_t v20 = v7 + 6;
  uint64_t v21 = (unsigned __int8 *)(v7 + 7);
  switch(v6)
  {
    case 1:
      unsigned int v15 = v7 + 8;
      uint64_t v8 = (char *)(v7 + 9);
      uint64_t v9 = v7 + 10;
      uint64_t v10 = (unsigned __int8 *)(v7 + 11);
      uint64_t v18 = v7 + 12;
      uint64_t v19 = (unsigned __int8 *)(v7 + 13);
      uint64_t v20 = v7 + 14;
      uint64_t v21 = (unsigned __int8 *)(v7 + 15);
      break;
    case 2:
      unsigned int v15 = v7 + 16;
      uint64_t v8 = (char *)(v7 + 17);
      uint64_t v9 = v7 + 18;
      uint64_t v18 = v7 + 20;
      uint64_t v10 = (unsigned __int8 *)(v7 + 19);
      uint64_t v20 = v7 + 22;
      uint64_t v19 = (unsigned __int8 *)(v7 + 21);
      uint64_t v21 = (unsigned __int8 *)(v7 + 23);
      break;
    case 3:
      uint64_t v8 = (char *)(v7 + 25);
      unsigned int v15 = v7 + 24;
      uint64_t v10 = (unsigned __int8 *)(v7 + 27);
      uint64_t v9 = v7 + 26;
      uint64_t v19 = (unsigned __int8 *)(v7 + 29);
      uint64_t v18 = v7 + 28;
      uint64_t v21 = (unsigned __int8 *)(v7 + 31);
      uint64_t v20 = v7 + 30;
      break;
    default:
      break;
  }
  char v48 = v7 + 18;
  char v49 = v7 + 17;
  uint64_t v44 = v7 + 15;
  uint64_t v45 = v7 + 14;
  uint64_t v46 = v7 + 13;
  uint64_t v47 = v7 + 12;
  uint64_t v22 = v7 + 11;
  uint64_t v23 = v7 + 10;
  uint64_t v24 = v7 + 9;
  int v25 = *v21;
  uint64_t v26 = *v20;
  int v27 = *v19;
  uint64_t v28 = *v18;
  int v29 = *v10;
  uint64_t v30 = *v9;
  char v31 = *v8;
  char v32 = v63[8];
  uint64_t v33 = (uint64_t *)v63;
  if (!*v8) {
    uint64_t v33 = v15;
  }
  uint64_t v34 = *v33;
  uint64_t v35 = v64;
  char v36 = v65;
  uint64_t result = v66;
  char v38 = v67;
  uint64_t v39 = v6;
  char v40 = v69;
  switch(v39)
  {
    case 1:
      v7 += 8;
      char v62 = v24;
      unsigned int v16 = v23;
      uint64_t v17 = v22;
      uint64_t v12 = v46;
      uint64_t v11 = v47;
      uint64_t v14 = v44;
      uint64_t v13 = v45;
      break;
    case 2:
      v7 += 16;
      unsigned int v16 = v48;
      char v62 = v49;
      uint64_t v11 = v60;
      uint64_t v17 = v61;
      uint64_t v13 = v58;
      uint64_t v12 = v59;
      uint64_t v14 = v57;
      break;
    case 3:
      v7 += 24;
      char v62 = v56;
      uint64_t v17 = v54;
      unsigned int v16 = v55;
      uint64_t v12 = v52;
      uint64_t v11 = v53;
      uint64_t v14 = v50;
      uint64_t v13 = v51;
      break;
    default:
      break;
  }
  if (v25) {
    uint64_t v41 = v68;
  }
  else {
    uint64_t v41 = v26;
  }
  *uint64_t v7 = v34;
  *char v62 = v31 & v32;
  if (v27) {
    uint64_t v42 = result;
  }
  else {
    uint64_t v42 = v28;
  }
  if (v29) {
    uint64_t v43 = v35;
  }
  else {
    uint64_t v43 = v30;
  }
  *unsigned int v16 = v43;
  *uint64_t v17 = v29 & v36;
  void *v11 = v42;
  *uint64_t v12 = v27 & v38;
  *uint64_t v13 = v41;
  unsigned char *v14 = v25 & v40;
  return result;
}

uint64_t DynamicIsland.contentMargins(_:_:forMode:)@<X0>(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = *a1;
  sub_191B9E048(v3, a2, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  sub_191BDF160((uint64_t)v63, a3);
  uint64_t v7 = (void *)(a2 + *(int *)(type metadata accessor for DynamicIsland() + 24));
  uint64_t v8 = (char *)(v7 + 1);
  uint64_t v9 = v7 + 2;
  uint64_t v10 = (unsigned __int8 *)(v7 + 3);
  uint64_t v11 = v7 + 4;
  uint64_t v12 = v7 + 5;
  uint64_t v13 = v7 + 6;
  uint64_t v14 = v7 + 7;
  char v60 = v7 + 20;
  char v61 = v7 + 19;
  char v58 = v7 + 22;
  char v59 = v7 + 21;
  char v57 = v7 + 23;
  char v55 = v7 + 26;
  char v56 = v7 + 25;
  char v53 = v7 + 28;
  char v54 = v7 + 27;
  char v51 = v7 + 30;
  char v52 = v7 + 29;
  char v50 = v7 + 31;
  unsigned int v15 = v7;
  char v62 = v7 + 1;
  unsigned int v16 = v7 + 2;
  uint64_t v17 = v7 + 3;
  uint64_t v18 = v7 + 4;
  uint64_t v19 = (unsigned __int8 *)(v7 + 5);
  uint64_t v20 = v7 + 6;
  uint64_t v21 = (unsigned __int8 *)(v7 + 7);
  switch(v6)
  {
    case 1:
      unsigned int v15 = v7 + 8;
      uint64_t v8 = (char *)(v7 + 9);
      uint64_t v9 = v7 + 10;
      uint64_t v10 = (unsigned __int8 *)(v7 + 11);
      uint64_t v18 = v7 + 12;
      uint64_t v19 = (unsigned __int8 *)(v7 + 13);
      uint64_t v20 = v7 + 14;
      uint64_t v21 = (unsigned __int8 *)(v7 + 15);
      break;
    case 2:
      unsigned int v15 = v7 + 16;
      uint64_t v8 = (char *)(v7 + 17);
      uint64_t v9 = v7 + 18;
      uint64_t v18 = v7 + 20;
      uint64_t v10 = (unsigned __int8 *)(v7 + 19);
      uint64_t v20 = v7 + 22;
      uint64_t v19 = (unsigned __int8 *)(v7 + 21);
      uint64_t v21 = (unsigned __int8 *)(v7 + 23);
      break;
    case 3:
      uint64_t v8 = (char *)(v7 + 25);
      unsigned int v15 = v7 + 24;
      uint64_t v10 = (unsigned __int8 *)(v7 + 27);
      uint64_t v9 = v7 + 26;
      uint64_t v19 = (unsigned __int8 *)(v7 + 29);
      uint64_t v18 = v7 + 28;
      uint64_t v21 = (unsigned __int8 *)(v7 + 31);
      uint64_t v20 = v7 + 30;
      break;
    default:
      break;
  }
  char v48 = v7 + 18;
  char v49 = v7 + 17;
  uint64_t v44 = v7 + 15;
  uint64_t v45 = v7 + 14;
  uint64_t v46 = v7 + 13;
  uint64_t v47 = v7 + 12;
  uint64_t v22 = v7 + 11;
  uint64_t v23 = v7 + 10;
  uint64_t v24 = v7 + 9;
  int v25 = *v21;
  uint64_t v26 = *v20;
  int v27 = *v19;
  uint64_t v28 = *v18;
  int v29 = *v10;
  uint64_t v30 = *v9;
  char v31 = *v8;
  char v32 = v63[8];
  uint64_t v33 = (uint64_t *)v63;
  if (!*v8) {
    uint64_t v33 = v15;
  }
  uint64_t v34 = *v33;
  uint64_t v35 = v64;
  char v36 = v65;
  uint64_t result = v66;
  char v38 = v67;
  uint64_t v39 = v6;
  char v40 = v69;
  switch(v39)
  {
    case 1:
      v7 += 8;
      char v62 = v24;
      unsigned int v16 = v23;
      uint64_t v17 = v22;
      uint64_t v12 = v46;
      uint64_t v11 = v47;
      uint64_t v14 = v44;
      uint64_t v13 = v45;
      break;
    case 2:
      v7 += 16;
      unsigned int v16 = v48;
      char v62 = v49;
      uint64_t v11 = v60;
      uint64_t v17 = v61;
      uint64_t v13 = v58;
      uint64_t v12 = v59;
      uint64_t v14 = v57;
      break;
    case 3:
      v7 += 24;
      char v62 = v56;
      uint64_t v17 = v54;
      unsigned int v16 = v55;
      uint64_t v12 = v52;
      uint64_t v11 = v53;
      uint64_t v14 = v50;
      uint64_t v13 = v51;
      break;
    default:
      break;
  }
  if (v25) {
    uint64_t v41 = v68;
  }
  else {
    uint64_t v41 = v26;
  }
  *uint64_t v7 = v34;
  *char v62 = v31 & v32;
  if (v27) {
    uint64_t v42 = result;
  }
  else {
    uint64_t v42 = v28;
  }
  if (v29) {
    uint64_t v43 = v35;
  }
  else {
    uint64_t v43 = v30;
  }
  *unsigned int v16 = v43;
  *uint64_t v17 = v29 & v36;
  void *v11 = v42;
  *uint64_t v12 = v27 & v38;
  *uint64_t v13 = v41;
  unsigned char *v14 = v25 & v40;
  return result;
}

uint64_t DynamicIsland.contentBackground<A>(for:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  sub_191B9E048(v3, a3, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  uint64_t v26 = sub_191CEE264(a2);
  unint64_t v27 = v7;
  uint64_t v8 = (uint64_t *)(a3 + *(int *)(type metadata accessor for DynamicIsland() + 28));
  uint64_t v9 = *v8;
  uint64_t v11 = (unint64_t *)(v8 + 1);
  unint64_t v10 = v8[1];
  unint64_t v19 = v10;
  uint64_t v12 = v8 + 3;
  uint64_t v25 = v8[4];
  uint64_t v13 = v8 + 5;
  uint64_t v23 = v8[2];
  uint64_t v24 = v8[6];
  uint64_t v14 = v8 + 7;
  uint64_t v20 = *v8;
  switch(v6)
  {
    case 1:
      uint64_t v9 = v8[2];
      unint64_t v10 = v8[3];
      break;
    case 2:
      uint64_t v9 = v8[4];
      unint64_t v10 = v8[5];
      break;
    case 3:
      uint64_t v9 = v8[6];
      unint64_t v10 = v8[7];
      break;
    default:
      break;
  }
  unint64_t v21 = v8[7];
  unint64_t v22 = v8[5];
  unint64_t v18 = v8[3];
  if (v10 >> 62 == 3 && v9 == 0 && v10 == 0xC000000000000000)
  {
    uint64_t v9 = v26;
    unint64_t v10 = v27;
  }
  else
  {
    sub_191B9CDAC(v9, v10);
    sub_191B9CDF8(v26, v27);
  }
  switch((int)v6)
  {
    case 1:
      uint64_t result = sub_191B9CDF8(v23, v18);
      v8 += 2;
      uint64_t v11 = (unint64_t *)v12;
      break;
    case 2:
      uint64_t result = sub_191B9CDF8(v25, v22);
      v8 += 4;
      uint64_t v11 = (unint64_t *)v13;
      break;
    case 3:
      uint64_t result = sub_191B9CDF8(v24, v21);
      v8 += 6;
      uint64_t v11 = (unint64_t *)v14;
      break;
    default:
      uint64_t result = sub_191B9CDF8(v20, v19);
      break;
  }
  *uint64_t v8 = v9;
  unint64_t *v11 = v10;
  return result;
}

uint64_t DynamicIsland.contentBackground<A>(forMode:content:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4 = *a1;
  return DynamicIsland.contentBackground<A>(for:content:)(&v4, a2, a3);
}

uint64_t DynamicIsland.contentBackground<A>(_:for:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  sub_191B9E048(v3, a3, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  uint64_t v26 = sub_191CEE2F8(a1);
  unint64_t v27 = v7;
  uint64_t v8 = (uint64_t *)(a3 + *(int *)(type metadata accessor for DynamicIsland() + 28));
  uint64_t v9 = *v8;
  uint64_t v11 = (unint64_t *)(v8 + 1);
  unint64_t v10 = v8[1];
  unint64_t v19 = v10;
  uint64_t v12 = v8 + 3;
  uint64_t v25 = v8[4];
  uint64_t v13 = v8 + 5;
  uint64_t v23 = v8[2];
  uint64_t v24 = v8[6];
  uint64_t v14 = v8 + 7;
  uint64_t v20 = *v8;
  switch(v6)
  {
    case 1:
      uint64_t v9 = v8[2];
      unint64_t v10 = v8[3];
      break;
    case 2:
      uint64_t v9 = v8[4];
      unint64_t v10 = v8[5];
      break;
    case 3:
      uint64_t v9 = v8[6];
      unint64_t v10 = v8[7];
      break;
    default:
      break;
  }
  unint64_t v21 = v8[7];
  unint64_t v22 = v8[5];
  unint64_t v18 = v8[3];
  if (v10 >> 62 == 3 && v9 == 0 && v10 == 0xC000000000000000)
  {
    uint64_t v9 = v26;
    unint64_t v10 = v27;
  }
  else
  {
    sub_191B9CDAC(v9, v10);
    sub_191B9CDF8(v26, v27);
  }
  switch((int)v6)
  {
    case 1:
      uint64_t result = sub_191B9CDF8(v23, v18);
      v8 += 2;
      uint64_t v11 = (unint64_t *)v12;
      break;
    case 2:
      uint64_t result = sub_191B9CDF8(v25, v22);
      v8 += 4;
      uint64_t v11 = (unint64_t *)v13;
      break;
    case 3:
      uint64_t result = sub_191B9CDF8(v24, v21);
      v8 += 6;
      uint64_t v11 = (unint64_t *)v14;
      break;
    default:
      uint64_t result = sub_191B9CDF8(v20, v19);
      break;
  }
  *uint64_t v8 = v9;
  unint64_t *v11 = v10;
  return result;
}

uint64_t DynamicIsland.contentBackground<A>(_:forMode:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4 = *a2;
  return DynamicIsland.contentBackground<A>(_:for:)(a1, &v4, a3);
}

uint64_t DynamicIsland.contentBackground<A, B>(_:in:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *a3;
  sub_191B9E048(v6, a6, (uint64_t (*)(void))type metadata accessor for DynamicIsland);
  uint64_t v32 = sub_191CEE3C4(a1, a2, a4, a5);
  unint64_t v33 = v13;
  uint64_t v14 = (uint64_t *)(a6 + *(int *)(type metadata accessor for DynamicIsland() + 28));
  uint64_t v15 = *v14;
  uint64_t v17 = (unint64_t *)(v14 + 1);
  unint64_t v16 = v14[1];
  unint64_t v25 = v16;
  unint64_t v18 = v14 + 3;
  uint64_t v31 = v14[4];
  unint64_t v19 = v14 + 5;
  uint64_t v29 = v14[2];
  uint64_t v30 = v14[6];
  uint64_t v20 = v14 + 7;
  uint64_t v26 = *v14;
  switch(v12)
  {
    case 1:
      uint64_t v15 = v14[2];
      unint64_t v16 = v14[3];
      break;
    case 2:
      uint64_t v15 = v14[4];
      unint64_t v16 = v14[5];
      break;
    case 3:
      uint64_t v15 = v14[6];
      unint64_t v16 = v14[7];
      break;
    default:
      break;
  }
  unint64_t v27 = v14[7];
  unint64_t v28 = v14[5];
  unint64_t v24 = v14[3];
  if (v16 >> 62 == 3 && v15 == 0 && v16 == 0xC000000000000000)
  {
    uint64_t v15 = v32;
    unint64_t v16 = v33;
  }
  else
  {
    sub_191B9CDAC(v15, v16);
    sub_191B9CDF8(v32, v33);
  }
  switch((int)v12)
  {
    case 1:
      uint64_t result = sub_191B9CDF8(v29, v24);
      v14 += 2;
      uint64_t v17 = (unint64_t *)v18;
      break;
    case 2:
      uint64_t result = sub_191B9CDF8(v31, v28);
      v14 += 4;
      uint64_t v17 = (unint64_t *)v19;
      break;
    case 3:
      uint64_t result = sub_191B9CDF8(v30, v27);
      v14 += 6;
      uint64_t v17 = (unint64_t *)v20;
      break;
    default:
      uint64_t result = sub_191B9CDF8(v26, v25);
      break;
  }
  uint64_t *v14 = v15;
  *uint64_t v17 = v16;
  return result;
}

uint64_t DynamicIsland.contentBackground<A, B>(_:in:forMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 v7 = *a3;
  return DynamicIsland.contentBackground<A, B>(_:in:for:)(a1, a2, &v7, a4, a5, a6);
}

uint64_t sub_191B9C8C4(char a1)
{
  switch(a1)
  {
    case 1:
      swift_getKeyPath();
      uint64_t v8 = v1 + *(int *)(type metadata accessor for DynamicIsland() + 28);
      uint64_t v5 = *(void *)(v8 + 16);
      unint64_t v6 = *(void *)(v8 + 24);
      goto LABEL_6;
    case 2:
      swift_getKeyPath();
      uint64_t v4 = v1 + *(int *)(type metadata accessor for DynamicIsland() + 28);
      uint64_t v5 = *(void *)(v4 + 32);
      unint64_t v6 = *(void *)(v4 + 40);
      goto LABEL_6;
    case 3:
      swift_getKeyPath();
      uint64_t v7 = v1 + *(int *)(type metadata accessor for DynamicIsland() + 28);
      uint64_t v5 = *(void *)(v7 + 48);
      unint64_t v6 = *(void *)(v7 + 56);
LABEL_6:
      swift_retain();
      sub_191B9CDAC(v5, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E11C0);
      sub_191B9E168();
      break;
    default:
      swift_getKeyPath();
      uint64_t v2 = *(int *)(type metadata accessor for DynamicIsland() + 28);
      unint64_t v3 = *(void *)(v1 + v2 + 8);
      uint64_t v10 = *(void *)(v1 + v2);
      swift_retain();
      sub_191B9CDAC(v10, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E11D0);
      sub_191B9E25C();
      break;
  }
  return sub_191CF5038();
}

uint64_t sub_191B9CA70(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v7 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_191CFDCB8[a2];
  uint64_t v11 = type metadata accessor for JindoMetricsDefinition(0);
  sub_191B9E048((uint64_t)a3 + *(int *)(v11 + 4 * v10), (uint64_t)v9, type metadata accessor for MetricsRequest);
  uint64_t v12 = *((void *)v9 + 7);
  uint64_t v13 = *((void *)v9 + 8);
  uint64_t v14 = *((void *)v9 + 9);
  uint64_t v15 = *((void *)v9 + 10);
  LOBYTE(v10) = v9[88];
  sub_191B9E0B0((uint64_t)v9);
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if ((v10 & 1) == 0)
  {
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    uint64_t v19 = v15;
  }
  uint64_t v20 = (void *)(v3 + *(int *)(type metadata accessor for DynamicIsland() + 24));
  unint64_t v21 = v20 + 1;
  unint64_t v22 = v20 + 2;
  uint64_t v23 = v20 + 3;
  unint64_t v24 = v20 + 4;
  unint64_t v25 = v20 + 5;
  uint64_t v26 = v20 + 6;
  unint64_t v27 = (unsigned __int8 *)(v20 + 7);
  switch(a2)
  {
    case 1:
      unint64_t v27 = (unsigned __int8 *)(v20 + 15);
      uint64_t v26 = v20 + 14;
      unint64_t v25 = v20 + 13;
      unint64_t v24 = v20 + 12;
      uint64_t v23 = v20 + 11;
      unint64_t v22 = v20 + 10;
      unint64_t v21 = v20 + 9;
      v20 += 8;
      break;
    case 2:
      unint64_t v27 = (unsigned __int8 *)(v20 + 23);
      uint64_t v26 = v20 + 22;
      unint64_t v25 = v20 + 21;
      unint64_t v24 = v20 + 20;
      uint64_t v23 = v20 + 19;
      unint64_t v22 = v20 + 18;
      unint64_t v21 = v20 + 17;
      v20 += 16;
      break;
    case 3:
      unint64_t v27 = (unsigned __int8 *)(v20 + 31);
      uint64_t v26 = v20 + 30;
      unint64_t v25 = v20 + 29;
      unint64_t v24 = v20 + 28;
      uint64_t v23 = v20 + 27;
      unint64_t v22 = v20 + 26;
      unint64_t v21 = v20 + 25;
      v20 += 24;
      break;
    default:
      break;
  }
  int v28 = *v27;
  if (!*v21) {
    uint64_t v16 = *v20;
  }
  if (!*v23) {
    uint64_t v17 = *v22;
  }
  if (!*v25) {
    uint64_t v18 = *v24;
  }
  if (!v28) {
    uint64_t v19 = *v26;
  }
  uint64_t v29 = *a3;
  uint64_t v30 = a3[1];
  uint64_t v31 = *(uint64_t *)((char *)a3 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 32) + 48);
  v33[0] = v29;
  v33[1] = v30;
  v33[2] = v31;
  v33[3] = v16;
  v33[4] = v17;
  v33[5] = v18;
  v33[6] = v19;
  char v34 = 0;
  sub_191B9E10C();
  return sub_191CF4078();
}

uint64_t sub_191B9CCE0@<X0>(uint64_t a1@<X8>)
{
  sub_191B9E10C();
  uint64_t result = sub_191CF4068();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = v3;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v5;
    *(void *)(a1 + 48) = v6;
  }
  return result;
}

uint64_t sub_191B9CD4C()
{
  return sub_191CF4078();
}

uint64_t sub_191B9CDAC(uint64_t a1, unint64_t a2)
{
  if ((a2 >> 62) >= 2)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_191B9CDF8(uint64_t a1, unint64_t a2)
{
  if ((a2 >> 62) >= 2)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for DynamicIslandMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B9CF10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandMode()
{
  return &type metadata for DynamicIslandMode;
}

char *initializeBufferWithCopyOfBuffer for DynamicIsland(char *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    unsigned int v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_191CF3078();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(void *)&v4[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v12 = &v4[v11];
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    long long v14 = v13[13];
    *((_OWORD *)v12 + 12) = v13[12];
    *((_OWORD *)v12 + 13) = v14;
    *((_OWORD *)v12 + 14) = v13[14];
    *(_OWORD *)(v12 + 233) = *(_OWORD *)((char *)v13 + 233);
    long long v15 = v13[9];
    *((_OWORD *)v12 + 8) = v13[8];
    *((_OWORD *)v12 + 9) = v15;
    long long v16 = v13[11];
    *((_OWORD *)v12 + 10) = v13[10];
    *((_OWORD *)v12 + 11) = v16;
    long long v17 = v13[5];
    *((_OWORD *)v12 + 4) = v13[4];
    *((_OWORD *)v12 + 5) = v17;
    long long v18 = v13[7];
    *((_OWORD *)v12 + 6) = v13[6];
    *((_OWORD *)v12 + 7) = v18;
    long long v19 = v13[1];
    *(_OWORD *)uint64_t v12 = *v13;
    *((_OWORD *)v12 + 1) = v19;
    long long v20 = v13[3];
    *((_OWORD *)v12 + 2) = v13[2];
    *((_OWORD *)v12 + 3) = v20;
    uint64_t v21 = a3[7];
    unint64_t v22 = (uint64_t *)&v4[v21];
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21);
    unint64_t v25 = *(uint64_t *)((char *)a2 + v21 + 8);
    swift_retain();
    sub_191B9CDAC(v24, v25);
    *unint64_t v22 = v24;
    v22[1] = v25;
    uint64_t v26 = v23[2];
    unint64_t v27 = v23[3];
    sub_191B9CDAC(v26, v27);
    v22[2] = v26;
    v22[3] = v27;
    uint64_t v28 = v23[4];
    unint64_t v29 = v23[5];
    sub_191B9CDAC(v28, v29);
    v22[4] = v28;
    v22[5] = v29;
    uint64_t v30 = v23[6];
    unint64_t v31 = v23[7];
    sub_191B9CDAC(v30, v31);
    uint64_t v22[6] = v30;
    v22[7] = v31;
    uint64_t v32 = a3[9];
    *(void *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)&v4[v32] = *(uint64_t *)((char *)a2 + v32);
    uint64_t v33 = a3[11];
    *(void *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)&v4[v33] = *(uint64_t *)((char *)a2 + v33);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for DynamicIsland(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_191B9CDF8(*(void *)v6, *(void *)(v6 + 8));
  sub_191B9CDF8(*(void *)(v6 + 16), *(void *)(v6 + 24));
  sub_191B9CDF8(*(void *)(v6 + 32), *(void *)(v6 + 40));
  sub_191B9CDF8(*(void *)(v6 + 48), *(void *)(v6 + 56));
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

char *initializeWithCopy for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *((_OWORD *)v11 + 13);
  *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
  *((_OWORD *)v10 + 13) = v12;
  *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
  *(_OWORD *)(v10 + 233) = *(_OWORD *)(v11 + 233);
  long long v13 = *((_OWORD *)v11 + 9);
  *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
  *((_OWORD *)v10 + 9) = v13;
  long long v14 = *((_OWORD *)v11 + 11);
  *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
  *((_OWORD *)v10 + 11) = v14;
  long long v15 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v15;
  long long v16 = *((_OWORD *)v11 + 7);
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  *((_OWORD *)v10 + 7) = v16;
  long long v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  long long v18 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v18;
  uint64_t v19 = a3[7];
  long long v20 = (uint64_t *)&a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)&a2[v19];
  unint64_t v23 = *(void *)&a2[v19 + 8];
  swift_retain();
  sub_191B9CDAC(v22, v23);
  uint64_t *v20 = v22;
  v20[1] = v23;
  uint64_t v24 = *((void *)v21 + 2);
  unint64_t v25 = *((void *)v21 + 3);
  sub_191B9CDAC(v24, v25);
  v20[2] = v24;
  v20[3] = v25;
  uint64_t v26 = *((void *)v21 + 4);
  unint64_t v27 = *((void *)v21 + 5);
  sub_191B9CDAC(v26, v27);
  v20[4] = v26;
  v20[5] = v27;
  uint64_t v28 = *((void *)v21 + 6);
  unint64_t v29 = *((void *)v21 + 7);
  sub_191B9CDAC(v28, v29);
  v20[6] = v28;
  v20[7] = v29;
  uint64_t v30 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  uint64_t v31 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v31] = *(void *)&a2[v31];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_retain();
  swift_release();
  uint64_t v12 = a3[6];
  long long v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)long long v13 = v15;
  uint64_t v16 = *((void *)v14 + 2);
  v13[24] = v14[24];
  *((void *)v13 + 2) = v16;
  uint64_t v17 = *((void *)v14 + 4);
  v13[40] = v14[40];
  *((void *)v13 + 4) = v17;
  uint64_t v18 = *((void *)v14 + 6);
  v13[56] = v14[56];
  *((void *)v13 + 6) = v18;
  uint64_t v19 = *((void *)v14 + 8);
  v13[72] = v14[72];
  *((void *)v13 + 8) = v19;
  uint64_t v20 = *((void *)v14 + 10);
  v13[88] = v14[88];
  *((void *)v13 + 10) = v20;
  uint64_t v21 = *((void *)v14 + 12);
  v13[104] = v14[104];
  *((void *)v13 + 12) = v21;
  uint64_t v22 = *((void *)v14 + 14);
  v13[120] = v14[120];
  *((void *)v13 + 14) = v22;
  uint64_t v23 = *((void *)v14 + 16);
  v13[136] = v14[136];
  *((void *)v13 + 16) = v23;
  uint64_t v24 = *((void *)v14 + 18);
  v13[152] = v14[152];
  *((void *)v13 + 18) = v24;
  uint64_t v25 = *((void *)v14 + 20);
  v13[168] = v14[168];
  *((void *)v13 + 20) = v25;
  uint64_t v26 = *((void *)v14 + 22);
  v13[184] = v14[184];
  *((void *)v13 + 22) = v26;
  uint64_t v27 = *((void *)v14 + 24);
  v13[200] = v14[200];
  *((void *)v13 + 24) = v27;
  uint64_t v28 = *((void *)v14 + 26);
  v13[216] = v14[216];
  *((void *)v13 + 26) = v28;
  uint64_t v29 = *((void *)v14 + 28);
  v13[232] = v14[232];
  *((void *)v13 + 28) = v29;
  uint64_t v30 = *((void *)v14 + 30);
  v13[248] = v14[248];
  *((void *)v13 + 30) = v30;
  uint64_t v31 = a3[7];
  uint64_t v32 = (uint64_t *)&a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)&a2[v31];
  unint64_t v35 = *(void *)&a2[v31 + 8];
  sub_191B9CDAC(v34, v35);
  uint64_t v36 = *v32;
  unint64_t v37 = v32[1];
  *uint64_t v32 = v34;
  v32[1] = v35;
  sub_191B9CDF8(v36, v37);
  uint64_t v38 = *((void *)v33 + 2);
  unint64_t v39 = *((void *)v33 + 3);
  sub_191B9CDAC(v38, v39);
  uint64_t v40 = v32[2];
  unint64_t v41 = v32[3];
  v32[2] = v38;
  v32[3] = v39;
  sub_191B9CDF8(v40, v41);
  uint64_t v42 = *((void *)v33 + 4);
  unint64_t v43 = *((void *)v33 + 5);
  sub_191B9CDAC(v42, v43);
  uint64_t v44 = v32[4];
  unint64_t v45 = v32[5];
  v32[4] = v42;
  v32[5] = v43;
  sub_191B9CDF8(v44, v45);
  uint64_t v46 = *((void *)v33 + 6);
  unint64_t v47 = *((void *)v33 + 7);
  sub_191B9CDAC(v46, v47);
  uint64_t v48 = v32[6];
  unint64_t v49 = v32[7];
  v32[6] = v46;
  v32[7] = v47;
  sub_191B9CDF8(v48, v49);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *((_OWORD *)v11 + 13);
  *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
  *((_OWORD *)v10 + 13) = v12;
  *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
  *(_OWORD *)(v10 + 233) = *(_OWORD *)(v11 + 233);
  long long v13 = *((_OWORD *)v11 + 9);
  *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
  *((_OWORD *)v10 + 9) = v13;
  long long v14 = *((_OWORD *)v11 + 11);
  *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
  *((_OWORD *)v10 + 11) = v14;
  long long v15 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v15;
  long long v16 = *((_OWORD *)v11 + 7);
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  *((_OWORD *)v10 + 7) = v16;
  long long v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)int v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  long long v18 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  long long v24 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v24;
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v25 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

char *assignWithTake for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  long long v14 = &a1[v12];
  long long v15 = &a2[v12];
  *(void *)long long v14 = *(void *)v15;
  v14[8] = v15[8];
  *((void *)v14 + 2) = *((void *)v15 + 2);
  v14[24] = v15[24];
  *((void *)v14 + 4) = *((void *)v15 + 4);
  v14[40] = v15[40];
  v14[56] = v15[56];
  *((void *)v14 + 6) = *((void *)v15 + 6);
  v14[72] = v15[72];
  *((void *)v14 + 8) = *((void *)v15 + 8);
  v14[88] = v15[88];
  *((void *)v14 + 10) = *((void *)v15 + 10);
  v14[104] = v15[104];
  *((void *)v14 + 12) = *((void *)v15 + 12);
  v14[120] = v15[120];
  *((void *)v14 + 14) = *((void *)v15 + 14);
  v14[136] = v15[136];
  *((void *)v14 + 16) = *((void *)v15 + 16);
  v14[152] = v15[152];
  *((void *)v14 + 18) = *((void *)v15 + 18);
  v14[168] = v15[168];
  *((void *)v14 + 20) = *((void *)v15 + 20);
  v14[184] = v15[184];
  *((void *)v14 + 22) = *((void *)v15 + 22);
  v14[200] = v15[200];
  *((void *)v14 + 24) = *((void *)v15 + 24);
  v14[216] = v15[216];
  *((void *)v14 + 26) = *((void *)v15 + 26);
  v14[232] = v15[232];
  *((void *)v14 + 28) = *((void *)v15 + 28);
  uint64_t v16 = *((void *)v15 + 30);
  v14[248] = v15[248];
  *((void *)v14 + 30) = v16;
  long long v17 = &a1[v13];
  long long v18 = &a2[v13];
  uint64_t v19 = *(void *)&a1[v13];
  unint64_t v20 = *(void *)&a1[v13 + 8];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  sub_191B9CDF8(v19, v20);
  uint64_t v21 = *((void *)v17 + 2);
  unint64_t v22 = *((void *)v17 + 3);
  *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
  sub_191B9CDF8(v21, v22);
  uint64_t v23 = *((void *)v17 + 4);
  unint64_t v24 = *((void *)v17 + 5);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  sub_191B9CDF8(v23, v24);
  uint64_t v25 = *((void *)v17 + 6);
  unint64_t v26 = *((void *)v17 + 7);
  *((_OWORD *)v17 + 3) = *((_OWORD *)v18 + 3);
  sub_191B9CDF8(v25, v26);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_release();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicIsland(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B9DD9C);
}

uint64_t sub_191B9DD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DynamicIsland(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B9DE74);
}

uint64_t sub_191B9DE74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

void sub_191B9DF34()
{
  sub_191B9DFF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_191B9DFF0()
{
  if (!qword_1EB44C548)
  {
    sub_191CF3078();
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB44C548);
    }
  }
}

uint64_t sub_191B9E048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B9E0B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191B9E10C()
{
  unint64_t result = qword_1E92E1598;
  if (!qword_1E92E1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1598);
  }
  return result;
}

unint64_t sub_191B9E168()
{
  unint64_t result = qword_1E92E11B8;
  if (!qword_1E92E11B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E11C0);
    sub_191B00398(&qword_1E92E1638, &qword_1E92E1640);
    sub_191B9E208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E11B8);
  }
  return result;
}

unint64_t sub_191B9E208()
{
  unint64_t result = qword_1E92E17A0;
  if (!qword_1E92E17A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E17A0);
  }
  return result;
}

unint64_t sub_191B9E25C()
{
  unint64_t result = qword_1E92E11C8;
  if (!qword_1E92E11C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E11D0);
    sub_191B00398(&qword_1E92E1790, &qword_1E92E1798);
    sub_191B9E208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E11C8);
  }
  return result;
}

uint64_t sub_191B9E2FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3DA8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_191B9E328()
{
  return sub_191CF3DB8();
}

uint64_t sub_191B9E354@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_54Tm((void (*)(void))sub_191BA09FC, a1);
}

uint64_t sub_191B9E374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_55Tm(a1, a2, a3, a4, (void (*)(void))sub_191BA09FC);
}

uint64_t CommonServerEnvironmentModifier.init(widget:metrics:environment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for CommonServerEnvironmentModifier();
  return sub_191B015B0(a3, (uint64_t)a4 + *(int *)(v6 + 24), (uint64_t *)&unk_1EB44BBB8);
}

uint64_t type metadata accessor for CommonServerEnvironmentModifier()
{
  uint64_t result = qword_1E92E1970;
  if (!qword_1E92E1970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CommonServerEnvironmentModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v196 = a2;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0A10);
  MEMORY[0x1F4188790](v194);
  uint64_t v195 = (uint64_t)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v5 - 8);
  v191 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF43A8();
  uint64_t v189 = *(void *)(v7 - 8);
  uint64_t v190 = v7;
  MEMORY[0x1F4188790](v7);
  v188 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF3C68();
  uint64_t v186 = *(void *)(v9 - 8);
  uint64_t v187 = v9;
  MEMORY[0x1F4188790](v9);
  v185 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF39E8();
  uint64_t v183 = *(void *)(v11 - 8);
  uint64_t v184 = v11;
  MEMORY[0x1F4188790](v11);
  v182 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_191CF4388();
  uint64_t v179 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  v177 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_191CF3998();
  uint64_t v157 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  v155 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1888);
  MEMORY[0x1F4188790](v139);
  uint64_t v142 = (uint64_t)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1898);
  MEMORY[0x1F4188790](v138);
  uint64_t v143 = (uint64_t)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0958);
  MEMORY[0x1F4188790](v140);
  uint64_t v146 = (uint64_t)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0978);
  MEMORY[0x1F4188790](v141);
  v148 = (char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0998);
  MEMORY[0x1F4188790](v144);
  uint64_t v150 = (uint64_t)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09B8);
  MEMORY[0x1F4188790](v147);
  uint64_t v153 = (uint64_t)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09C8);
  MEMORY[0x1F4188790](v149);
  uint64_t v154 = (uint64_t)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09D8);
  MEMORY[0x1F4188790](v151);
  uint64_t v158 = (uint64_t)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09E8);
  MEMORY[0x1F4188790](v152);
  v160 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09F8);
  MEMORY[0x1F4188790](v156);
  v162 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0A08);
  MEMORY[0x1F4188790](v163);
  uint64_t v164 = (uint64_t)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0A50);
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  v166 = (char *)&v136 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0928);
  MEMORY[0x1F4188790](v161);
  v169 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0938);
  MEMORY[0x1F4188790](v165);
  v171 = (char *)&v136 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0948);
  MEMORY[0x1F4188790](v170);
  uint64_t v173 = (uint64_t)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0968);
  MEMORY[0x1F4188790](v172);
  uint64_t v175 = (uint64_t)&v136 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0988);
  MEMORY[0x1F4188790](v174);
  uint64_t v178 = (uint64_t)&v136 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E09A8);
  uint64_t v32 = MEMORY[0x1F4188790](v193);
  uint64_t v176 = (uint64_t)&v136 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v181 = (uint64_t)&v136 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v35 - 8);
  unint64_t v37 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_191CF4058();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  v145 = (char *)&v136 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1878);
  MEMORY[0x1F4188790](v41);
  unint64_t v43 = (char *)&v136 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void **)(v2 + 8);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)v2, sel_family), &v201);
  uint64_t v45 = sub_191CB3E6C(v44, &v201);
  uint64_t v47 = v46;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E18D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v43, a1, v49);
  uint64_t v192 = v41;
  uint64_t v50 = (uint64_t)v43;
  char v51 = (uint64_t *)&v43[*(int *)(v41 + 36)];
  *char v51 = KeyPath;
  v51[1] = v45;
  v51[2] = v47;
  uint64_t v52 = v39;
  uint64_t v53 = type metadata accessor for CommonServerEnvironmentModifier();
  sub_191B01614(v2 + *(int *)(v53 + 24), (uint64_t)v37, (uint64_t *)&unk_1EB44BBB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_191B01770((uint64_t)v37, (uint64_t *)&unk_1EB44BBB8);
    sub_191B01614((uint64_t)v43, v195, &qword_1E92E1878);
    swift_storeEnumTagMultiPayload();
    sub_191B9FC98();
    sub_191BA0728();
    sub_191CF44D8();
  }
  else
  {
    char v54 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    char v55 = v145;
    uint64_t v137 = v38;
    v54(v145, v37, v38);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = v142;
    sub_191B01614(v50, v142, &qword_1E92E1878);
    uint64_t v58 = v57 + *(int *)(v139 + 36);
    *(void *)uint64_t v58 = v56;
    *(unsigned char *)(v58 + 8) = 0;
    uint64_t v59 = swift_getKeyPath();
    uint64_t v60 = v143;
    sub_191B01614(v57, v143, &qword_1E92E1888);
    uint64_t v61 = v60 + *(int *)(v138 + 36);
    *(void *)uint64_t v61 = v59;
    *(unsigned char *)(v61 + 8) = 0;
    sub_191B01770(v57, &qword_1E92E1888);
    uint64_t v62 = swift_getKeyPath();
    id v63 = *(id *)v2;
    uint64_t v64 = v146;
    sub_191B01614(v60, v146, &qword_1E92E1898);
    char v65 = (uint64_t *)(v64 + *(int *)(v140 + 36));
    *char v65 = v62;
    v65[1] = (uint64_t)v63;
    id v66 = v63;
    sub_191B01770(v60, &qword_1E92E1898);
    uint64_t v67 = swift_getKeyPath();
    uint64_t v68 = v155;
    sub_191CF3D28();
    uint64_t v69 = (uint64_t)v148;
    id v70 = (uint64_t *)&v148[*(int *)(v141 + 36)];
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E18F0);
    uint64_t v72 = v157;
    uint64_t v73 = v159;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))((char *)v70 + *(int *)(v71 + 28), v68, v159);
    *id v70 = v67;
    sub_191B01614(v64, v69, &qword_1E92E0958);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v68, v73);
    sub_191B01770(v64, &qword_1E92E0958);
    uint64_t v74 = swift_getKeyPath();
    LOBYTE(v70) = sub_191CF3F58();
    uint64_t v75 = v150;
    sub_191B01614(v69, v150, &qword_1E92E0978);
    uint64_t v76 = v75 + *(int *)(v144 + 36);
    *(void *)uint64_t v76 = v74;
    *(unsigned char *)(v76 + 8) = v70 & 1;
    sub_191B01770(v69, &qword_1E92E0978);
    uint64_t v77 = swift_getKeyPath();
    LOBYTE(v70) = sub_191CF3EC8();
    uint64_t v78 = v153;
    sub_191B01614(v75, v153, &qword_1E92E0998);
    uint64_t v79 = v78 + *(int *)(v147 + 36);
    *(void *)uint64_t v79 = v77;
    *(unsigned char *)(v79 + 8) = v70 & 1;
    sub_191B01770(v75, &qword_1E92E0998);
    uint64_t v80 = swift_getKeyPath();
    LOBYTE(v70) = sub_191CF3ED8();
    uint64_t v81 = v154;
    sub_191B01614(v78, v154, &qword_1E92E09B8);
    uint64_t v82 = v81 + *(int *)(v149 + 36);
    *(void *)uint64_t v82 = v80;
    *(unsigned char *)(v82 + 8) = v70 & 1;
    sub_191B01770(v78, &qword_1E92E09B8);
    uint64_t v83 = swift_getKeyPath();
    LOBYTE(v70) = sub_191CF3F28();
    uint64_t v84 = v158;
    sub_191B01614(v81, v158, &qword_1E92E09C8);
    uint64_t v85 = v84 + *(int *)(v151 + 36);
    *(void *)uint64_t v85 = v83;
    *(unsigned char *)(v85 + 8) = v70 & 1;
    sub_191B01770(v81, &qword_1E92E09C8);
    uint64_t v86 = swift_getKeyPath();
    uint64_t v87 = v177;
    sub_191CF3E98();
    uint64_t v88 = (uint64_t)v160;
    uint64_t v89 = (uint64_t *)&v160[*(int *)(v152 + 36)];
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1920);
    uint64_t v91 = v179;
    uint64_t v92 = v180;
    (*(void (**)(char *, char *, uint64_t))(v179 + 16))((char *)v89 + *(int *)(v90 + 28), v87, v180);
    uint64_t *v89 = v86;
    sub_191B01614(v84, v88, &qword_1E92E09D8);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v92);
    sub_191B01770(v84, &qword_1E92E09D8);
    uint64_t v93 = swift_getKeyPath();
    v94 = v182;
    sub_191CF3D48();
    uint64_t v95 = (uint64_t)v162;
    uint64_t v96 = (uint64_t *)&v162[*(int *)(v156 + 36)];
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1900);
    uint64_t v99 = v183;
    uint64_t v98 = v184;
    (*(void (**)(char *, char *, uint64_t))(v183 + 16))((char *)v96 + *(int *)(v97 + 28), v94, v184);
    *uint64_t v96 = v93;
    sub_191B01614(v88, v95, &qword_1E92E09E8);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v94, v98);
    sub_191B01770(v88, &qword_1E92E09E8);
    uint64_t v100 = swift_getKeyPath();
    sub_191CF3D68();
    uint64_t v102 = v101;
    uint64_t v103 = v164;
    sub_191B01614(v95, v164, &qword_1E92E09F8);
    uint64_t v104 = (uint64_t *)(v103 + *(int *)(v163 + 36));
    *uint64_t v104 = v100;
    v104[1] = v102;
    sub_191B01770(v95, &qword_1E92E09F8);
    uint64_t v105 = v185;
    sub_191CF3E28();
    sub_191BA008C();
    uint64_t v106 = v166;
    sub_191CF4D48();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v105, v187);
    sub_191B01770(v103, &qword_1E92E0A08);
    uint64_t v107 = swift_getKeyPath();
    int v108 = v188;
    sub_191CF3D88();
    uint64_t v109 = (uint64_t)v169;
    uint64_t v110 = (uint64_t *)&v169[*(int *)(v161 + 36)];
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1930);
    uint64_t v113 = v189;
    uint64_t v112 = v190;
    (*(void (**)(char *, char *, uint64_t))(v189 + 16))((char *)v110 + *(int *)(v111 + 28), v108, v190);
    *uint64_t v110 = v107;
    uint64_t v114 = v167;
    uint64_t v115 = v168;
    (*(void (**)(uint64_t, char *, uint64_t))(v167 + 16))(v109, v106, v168);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v108, v112);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v106, v115);
    uint64_t v116 = swift_getKeyPath();
    uint64_t v117 = (uint64_t)v191;
    sub_191CF3E08();
    uint64_t v118 = (uint64_t)v171;
    uint64_t v119 = (uint64_t *)&v171[*(int *)(v165 + 36)];
    uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1910);
    sub_191B01614(v117, (uint64_t)v119 + *(int *)(v120 + 28), &qword_1EB44A280);
    *uint64_t v119 = v116;
    sub_191B01614(v109, v118, &qword_1E92E0928);
    sub_191B01770(v117, &qword_1EB44A280);
    sub_191B01770(v109, &qword_1E92E0928);
    uint64_t v121 = swift_getKeyPath();
    sub_191BA09FC();
    sub_191CF4068();
    LOBYTE(v119) = v200;
    uint64_t v122 = v173;
    sub_191B01614(v118, v173, &qword_1E92E0938);
    uint64_t v123 = v122 + *(int *)(v170 + 36);
    *(void *)uint64_t v123 = v121;
    *(unsigned char *)(v123 + 8) = (_BYTE)v119;
    sub_191B01770(v118, &qword_1E92E0938);
    uint64_t v124 = swift_getKeyPath();
    sub_191AF6A58();
    sub_191CF4068();
    LOBYTE(v119) = v199;
    uint64_t v125 = v175;
    sub_191B01614(v122, v175, &qword_1E92E0948);
    uint64_t v126 = v125 + *(int *)(v172 + 36);
    *(void *)uint64_t v126 = v124;
    *(unsigned char *)(v126 + 8) = (_BYTE)v119;
    sub_191B01770(v122, &qword_1E92E0948);
    uint64_t v127 = swift_getKeyPath();
    sub_191BA0A90();
    sub_191CF4068();
    LOBYTE(v119) = v198;
    uint64_t v128 = v178;
    sub_191B01614(v125, v178, &qword_1E92E0968);
    uint64_t v129 = v128 + *(int *)(v174 + 36);
    *(void *)uint64_t v129 = v127;
    *(unsigned char *)(v129 + 8) = (_BYTE)v119;
    sub_191B01770(v125, &qword_1E92E0968);
    uint64_t v130 = swift_getKeyPath();
    sub_191B4EC44();
    sub_191CF4068();
    uint64_t v131 = v197;
    uint64_t v132 = v176;
    sub_191B01614(v128, v176, &qword_1E92E0988);
    v133 = (uint64_t *)(v132 + *(int *)(v193 + 36));
    uint64_t *v133 = v130;
    v133[1] = v131;
    sub_191B01770(v128, &qword_1E92E0988);
    uint64_t v134 = v181;
    sub_191B015B0(v132, v181, &qword_1E92E09A8);
    sub_191B01614(v134, v195, &qword_1E92E09A8);
    swift_storeEnumTagMultiPayload();
    sub_191B9FC98();
    sub_191BA0728();
    sub_191CF44D8();
    sub_191B01770(v134, &qword_1E92E09A8);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v137);
  }
  return sub_191B01770(v50, &qword_1E92E1878);
}

uint64_t sub_191B9FA1C@<X0>(void *a1@<X8>)
{
  sub_191BA15D4();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B9FA6C(void **a1)
{
  uint64_t v1 = *a1;
  sub_191BA15D4();
  id v2 = v1;
  return sub_191CF4078();
}

uint64_t sub_191B9FAC8()
{
  return sub_191CF4078();
}

uint64_t sub_191B9FB14@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_54Tm((void (*)(void))sub_191BA0A90, a1);
}

uint64_t keypath_get_54Tm@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_191CF4068();
  *a2 = v4;
  return result;
}

uint64_t sub_191B9FB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_55Tm(a1, a2, a3, a4, (void (*)(void))sub_191BA0A90);
}

uint64_t keypath_set_55Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_191CF4078();
}

uint64_t sub_191B9FC04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.widgetFamily.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_191B9FC40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3DA8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_191B9FC6C()
{
  return sub_191CF3DB8();
}

unint64_t sub_191B9FC98()
{
  unint64_t result = qword_1E92E09A0;
  if (!qword_1E92E09A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09A8);
    sub_191B9FD38();
    sub_191B00398(&qword_1E92E0A40, &qword_1E92E0A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09A0);
  }
  return result;
}

unint64_t sub_191B9FD38()
{
  unint64_t result = qword_1E92E0980;
  if (!qword_1E92E0980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0988);
    sub_191B9FDD8();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0980);
  }
  return result;
}

unint64_t sub_191B9FDD8()
{
  unint64_t result = qword_1E92E0960;
  if (!qword_1E92E0960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0968);
    sub_191B9FE78();
    sub_191B00398(&qword_1EB449AB0, (uint64_t *)&unk_1EB449AB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0960);
  }
  return result;
}

unint64_t sub_191B9FE78()
{
  unint64_t result = qword_1E92E0940;
  if (!qword_1E92E0940)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0948);
    sub_191B9FF18();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0940);
  }
  return result;
}

unint64_t sub_191B9FF18()
{
  unint64_t result = qword_1E92E0930;
  if (!qword_1E92E0930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0938);
    sub_191B9FFB8();
    sub_191B00398(&qword_1E92E1908, &qword_1E92E1910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0930);
  }
  return result;
}

unint64_t sub_191B9FFB8()
{
  unint64_t result = qword_1E92E0920;
  if (!qword_1E92E0920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0928);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0A08);
    sub_191BA008C();
    swift_getOpaqueTypeConformance2();
    sub_191B00398(&qword_1E92E1928, &qword_1E92E1930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0920);
  }
  return result;
}

unint64_t sub_191BA008C()
{
  unint64_t result = qword_1E92E0A00;
  if (!qword_1E92E0A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0A08);
    sub_191BA012C();
    sub_191B00398(&qword_1E92E18D8, &qword_1E92E18E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A00);
  }
  return result;
}

unint64_t sub_191BA012C()
{
  unint64_t result = qword_1E92E09F0;
  if (!qword_1E92E09F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09F8);
    sub_191BA01CC();
    sub_191B00398(&qword_1E92E18F8, &qword_1E92E1900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09F0);
  }
  return result;
}

unint64_t sub_191BA01CC()
{
  unint64_t result = qword_1E92E09E0;
  if (!qword_1E92E09E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09E8);
    sub_191BA026C();
    sub_191B00398(&qword_1E92E1918, &qword_1E92E1920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09E0);
  }
  return result;
}

unint64_t sub_191BA026C()
{
  unint64_t result = qword_1E92E09D0;
  if (!qword_1E92E09D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09D8);
    sub_191BA030C();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09D0);
  }
  return result;
}

unint64_t sub_191BA030C()
{
  unint64_t result = qword_1E92E09C0;
  if (!qword_1E92E09C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09C8);
    sub_191BA03AC();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09C0);
  }
  return result;
}

unint64_t sub_191BA03AC()
{
  unint64_t result = qword_1E92E09B0;
  if (!qword_1E92E09B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E09B8);
    sub_191BA044C();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E09B0);
  }
  return result;
}

unint64_t sub_191BA044C()
{
  unint64_t result = qword_1E92E0990;
  if (!qword_1E92E0990)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0998);
    sub_191BA04EC();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0990);
  }
  return result;
}

unint64_t sub_191BA04EC()
{
  unint64_t result = qword_1E92E0970;
  if (!qword_1E92E0970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0978);
    sub_191BA058C();
    sub_191B00398(&qword_1E92E18E8, &qword_1E92E18F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0970);
  }
  return result;
}

unint64_t sub_191BA058C()
{
  unint64_t result = qword_1E92E0950;
  if (!qword_1E92E0950)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0958);
    sub_191BA06A0(&qword_1E92E1890, &qword_1E92E1898, (void (*)(void))sub_191BA0664, (void (*)(void))sub_191BA07EC);
    sub_191B00398(&qword_1EB44A098, &qword_1EB44A0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0950);
  }
  return result;
}

uint64_t sub_191BA0664()
{
  return sub_191BA06A0(&qword_1E92E1880, &qword_1E92E1888, (void (*)(void))sub_191BA0728, (void (*)(void))sub_191B96034);
}

uint64_t sub_191BA06A0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191BA0728()
{
  unint64_t result = qword_1E92E1870;
  if (!qword_1E92E1870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1878);
    sub_191B00398(&qword_1E92E18C8, &qword_1E92E18D0);
    sub_191B00398(&qword_1EB44B950, &qword_1EB44B958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1870);
  }
  return result;
}

unint64_t sub_191BA07EC()
{
  unint64_t result = qword_1EB44A500;
  if (!qword_1EB44A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A500);
  }
  return result;
}

uint64_t sub_191BA0840@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.widgetFamily.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_191BA087C@<X0>(unsigned char *a1@<X8>)
{
  sub_191AF6A58();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BA08CC()
{
  return sub_191CF4078();
}

uint64_t sub_191BA0918@<X0>(void *a1@<X8>)
{
  sub_191BA15D4();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BA09BC@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_54Tm((void (*)(void))sub_191BA09FC, a1);
}

uint64_t sub_191BA09DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_55Tm(a1, a2, a3, a4, (void (*)(void))sub_191BA09FC);
}

unint64_t sub_191BA09FC()
{
  unint64_t result = qword_1EB44A4B0;
  if (!qword_1EB44A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A4B0);
  }
  return result;
}

uint64_t sub_191BA0A50@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_54Tm((void (*)(void))sub_191BA0A90, a1);
}

uint64_t sub_191BA0A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_55Tm(a1, a2, a3, a4, (void (*)(void))sub_191BA0A90);
}

unint64_t sub_191BA0A90()
{
  unint64_t result = qword_1E92E1950;
  if (!qword_1E92E1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1950);
  }
  return result;
}

uint64_t sub_191BA0AEC()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for CommonServerEnvironmentModifier(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  char v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_191CF4058();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    uint64_t v14 = v6;
    if (v12(v9, 1, v10))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t destroy for CommonServerEnvironmentModifier(id *a1, uint64_t a2)
{
  char v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_191CF4058();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for CommonServerEnvironmentModifier(void *a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF4058();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v4;
  id v13 = v5;
  if (v11(v8, 1, v9))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for CommonServerEnvironmentModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_191CF4058();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *initializeWithTake for CommonServerEnvironmentModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_191CF4058();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for CommonServerEnvironmentModifier(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF4058();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonServerEnvironmentModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BA12EC);
}

uint64_t sub_191BA12EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CommonServerEnvironmentModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BA13B4);
}

void *sub_191BA13B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191BA1460()
{
  sub_191BA14FC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_191BA14FC()
{
  if (!qword_1EB44B1A8)
  {
    sub_191CF4058();
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB44B1A8);
    }
  }
}

unint64_t sub_191BA1558()
{
  unint64_t result = qword_1E92E0A28;
  if (!qword_1E92E0A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0A30);
    sub_191B9FC98();
    sub_191BA0728();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A28);
  }
  return result;
}

unint64_t sub_191BA15D4()
{
  unint64_t result = qword_1EB449B58;
  if (!qword_1EB449B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B58);
  }
  return result;
}

uint64_t CHSWidget.logDescription.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_extensionBundleIdentifier);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v3 = objc_msgSend(v1, sel_kind);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 91;
}

uint64_t CHSWidgetPersonality.logDescription.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_extensionBundleIdentifier);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v3 = objc_msgSend(v1, sel_kind);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 91;
}

uint64_t WidgetAccentedRenderingModeViewModifier.body(content:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = (unint64_t (*)())a1;
  uint64_t v90 = a2;
  uint64_t v2 = sub_191CF4638();
  MEMORY[0x1F4188790](v2 - 8);
  char v65 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449238);
  MEMORY[0x1F4188790](v89);
  id v70 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449280);
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449260);
  MEMORY[0x1F4188790](v68);
  uint64_t v66 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492D0);
  uint64_t v7 = MEMORY[0x1F4188790](v77);
  id v63 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v64 = (uint64_t)&v60 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (uint64_t)&v60 - v11;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449278);
  MEMORY[0x1F4188790](v74);
  uint64_t v75 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492C0);
  MEMORY[0x1F4188790](v83);
  uint64_t v78 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449248);
  MEMORY[0x1F4188790](v73);
  uint64_t v76 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449270);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449228);
  MEMORY[0x1F4188790](v61);
  int v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492B0);
  uint64_t v20 = MEMORY[0x1F4188790](v72);
  uint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v62 = (uint64_t)&v60 - v23;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449290);
  MEMORY[0x1F4188790](v86);
  uint64_t v88 = (uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449288);
  MEMORY[0x1F4188790](v79);
  uint64_t v81 = (uint64_t)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449268);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492A0);
  MEMORY[0x1F4188790](v80);
  uint64_t v30 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492E0);
  MEMORY[0x1F4188790](v87);
  uint64_t v82 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4492F8);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v60 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v84)
  {
    case 1:
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v41 = swift_getKeyPath();
      uint64_t v42 = (uint64_t)v76;
      (*(void (**)(char *, unint64_t (*)(), uint64_t))(v33 + 16))(v76, v85, v32);
      uint64_t v43 = v42 + *(int *)(v73 + 36);
      *(void *)uint64_t v43 = KeyPath;
      *(unsigned char *)(v43 + 8) = 0;
      *(void *)(v43 + 16) = v41;
      *(_WORD *)(v43 + 24) = 0;
      uint64_t v44 = &qword_1EB449248;
      sub_191B01614(v42, v75, &qword_1EB449248);
      swift_storeEnumTagMultiPayload();
      sub_191BA2984();
      sub_191BA2A54();
      uint64_t v45 = (uint64_t)v78;
      sub_191CF44D8();
      sub_191B01614(v45, v81, &qword_1EB4492C0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2788();
      sub_191BA2908();
      uint64_t v46 = (uint64_t)v82;
      sub_191CF44D8();
      sub_191B01770(v45, &qword_1EB4492C0);
      sub_191B01614(v46, v88, &qword_1EB4492E0);
      swift_storeEnumTagMultiPayload();
      sub_191BA270C();
      sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))sub_191BA2804);
      sub_191CF44D8();
      sub_191B01770(v46, &qword_1EB4492E0);
      uint64_t v38 = v42;
      goto LABEL_7;
    case 2:
      uint64_t v47 = swift_getKeyPath();
      uint64_t v48 = swift_getKeyPath();
      uint64_t v49 = (uint64_t)v76;
      (*(void (**)(char *, unint64_t (*)(), uint64_t))(v33 + 16))(v76, v85, v32);
      uint64_t v50 = v49 + *(int *)(v73 + 36);
      *(void *)uint64_t v50 = v47;
      *(unsigned char *)(v50 + 8) = 0;
      *(void *)(v50 + 16) = v48;
      *(_WORD *)(v50 + 24) = 256;
      uint64_t v51 = v66;
      sub_191B01614(v49, v66, &qword_1EB449248);
      sub_191B01614(v51, v69, &qword_1EB449260);
      swift_storeEnumTagMultiPayload();
      sub_191BA2AFC(&qword_1EB449258, &qword_1EB449260, (void (*)(void))sub_191BA2984);
      sub_191BA2984();
      uint64_t v52 = (uint64_t)v63;
      sub_191CF44D8();
      sub_191B01770(v51, &qword_1EB449260);
      uint64_t v44 = &qword_1EB4492D0;
      uint64_t v53 = v64;
      sub_191B015B0(v52, v64, &qword_1EB4492D0);
      sub_191B01770(v49, &qword_1EB449248);
      uint64_t v54 = v71;
      sub_191B015B0(v53, v71, &qword_1EB4492D0);
      sub_191B01614(v54, v75, &qword_1EB4492D0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2A54();
      uint64_t v55 = (uint64_t)v78;
      sub_191CF44D8();
      sub_191B01614(v55, v81, &qword_1EB4492C0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2788();
      sub_191BA2908();
      uint64_t v56 = (uint64_t)v82;
      sub_191CF44D8();
      sub_191B01770(v55, &qword_1EB4492C0);
      sub_191B01614(v56, v88, &qword_1EB4492E0);
      swift_storeEnumTagMultiPayload();
      sub_191BA270C();
      sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))sub_191BA2804);
      sub_191CF44D8();
      sub_191B01770(v56, &qword_1EB4492E0);
      goto LABEL_6;
    case 3:
      sub_191CF4628();
      uint64_t v54 = (uint64_t)v70;
      sub_191CF4908();
      (*(void (**)(uint64_t, unint64_t (*)(), uint64_t))(v33 + 16))(v54, v85, v32);
      uint64_t v44 = &qword_1EB449238;
      sub_191B01614(v54, v88, &qword_1EB449238);
      swift_storeEnumTagMultiPayload();
      sub_191BA270C();
      sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))sub_191BA2804);
      sub_191CF44D8();
LABEL_6:
      uint64_t v38 = v54;
LABEL_7:
      uint64_t v39 = v44;
      return sub_191B01770(v38, v39);
    case 4:
      uint64_t v58 = *(void (**)(char *, unint64_t (*)(), uint64_t))(v33 + 16);
      v58(v35, v85, v32);
      v58(v28, (unint64_t (*)())v35, v32);
      swift_storeEnumTagMultiPayload();
      sub_191BA2804();
      sub_191BA2860();
      sub_191CF44D8();
      sub_191B01614((uint64_t)v30, v81, &qword_1EB4492A0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2788();
      sub_191BA2908();
      uint64_t v59 = (uint64_t)v82;
      sub_191CF44D8();
      sub_191B01770((uint64_t)v30, &qword_1EB4492A0);
      sub_191B01614(v59, v88, &qword_1EB4492E0);
      swift_storeEnumTagMultiPayload();
      sub_191BA270C();
      sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))sub_191BA2804);
      sub_191CF44D8();
      sub_191B01770(v59, &qword_1EB4492E0);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    default:
      (*(void (**)(char *, unint64_t (*)(), uint64_t))(v33 + 16))(v19, v85, v32);
      sub_191B01614((uint64_t)v19, (uint64_t)v17, &qword_1EB449228);
      swift_storeEnumTagMultiPayload();
      uint64_t v85 = sub_191BA2804;
      sub_191BA2AFC(&qword_1EB449220, &qword_1EB449228, (void (*)(void))sub_191BA2804);
      sub_191BA2804();
      sub_191CF44D8();
      sub_191B01770((uint64_t)v19, &qword_1EB449228);
      uint64_t v36 = v62;
      sub_191B015B0((uint64_t)v22, v62, &qword_1EB4492B0);
      sub_191B01614(v36, (uint64_t)v28, &qword_1EB4492B0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2860();
      sub_191CF44D8();
      sub_191B01614((uint64_t)v30, v81, &qword_1EB4492A0);
      swift_storeEnumTagMultiPayload();
      sub_191BA2788();
      sub_191BA2908();
      uint64_t v37 = (uint64_t)v82;
      sub_191CF44D8();
      sub_191B01770((uint64_t)v30, &qword_1EB4492A0);
      sub_191B01614(v37, v88, &qword_1EB4492E0);
      swift_storeEnumTagMultiPayload();
      sub_191BA270C();
      sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))v85);
      sub_191CF44D8();
      sub_191B01770(v37, &qword_1EB4492E0);
      uint64_t v38 = v36;
      uint64_t v39 = &qword_1EB4492B0;
      return sub_191B01770(v38, v39);
  }
}

unint64_t sub_191BA270C()
{
  unint64_t result = qword_1EB4492D8;
  if (!qword_1EB4492D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492E0);
    sub_191BA2788();
    sub_191BA2908();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492D8);
  }
  return result;
}

unint64_t sub_191BA2788()
{
  unint64_t result = qword_1EB449298;
  if (!qword_1EB449298)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492A0);
    sub_191BA2804();
    sub_191BA2860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449298);
  }
  return result;
}

unint64_t sub_191BA2804()
{
  unint64_t result = qword_1EB4492F0;
  if (!qword_1EB4492F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492F0);
  }
  return result;
}

unint64_t sub_191BA2860()
{
  unint64_t result = qword_1EB4492A8;
  if (!qword_1EB4492A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492B0);
    sub_191BA2AFC(&qword_1EB449220, &qword_1EB449228, (void (*)(void))sub_191BA2804);
    sub_191BA2804();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492A8);
  }
  return result;
}

unint64_t sub_191BA2908()
{
  unint64_t result = qword_1EB4492B8;
  if (!qword_1EB4492B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492C0);
    sub_191BA2984();
    sub_191BA2A54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492B8);
  }
  return result;
}

unint64_t sub_191BA2984()
{
  unint64_t result = qword_1EB449240;
  if (!qword_1EB449240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449248);
    sub_191BA2804();
    sub_191BA2A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449240);
  }
  return result;
}

unint64_t sub_191BA2A00()
{
  unint64_t result = qword_1EB449570;
  if (!qword_1EB449570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449570);
  }
  return result;
}

unint64_t sub_191BA2A54()
{
  unint64_t result = qword_1EB4492C8;
  if (!qword_1EB4492C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB4492D0);
    sub_191BA2AFC(&qword_1EB449258, &qword_1EB449260, (void (*)(void))sub_191BA2984);
    sub_191BA2984();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492C8);
  }
  return result;
}

uint64_t sub_191BA2AFC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BA2B7C@<X0>(void *a1@<X8>)
{
  sub_191BA3084();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BA2BCC@<X0>(void *a1@<X8>)
{
  sub_191BA3084();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BA2C1C()
{
  return sub_191CF4078();
}

uint64_t sub_191BA2C68()
{
  return sub_191CF4078();
}

uint64_t sub_191BA2CBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  if (*a1 <= 4u) {
    int v6 = 4;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 5;
  if (*a1 < 4u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BA2E44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingModeViewModifier()
{
  return &type metadata for WidgetAccentedRenderingModeViewModifier;
}

unint64_t sub_191BA2E80()
{
  unint64_t result = qword_1EB4492E8;
  if (!qword_1EB4492E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB448FA0);
    sub_191BA270C();
    sub_191BA2AFC(&qword_1EB449230, &qword_1EB449238, (void (*)(void))sub_191BA2804);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4492E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BA2FF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingModeViewModifier.Style()
{
  return &type metadata for WidgetAccentedRenderingModeViewModifier.Style;
}

unint64_t sub_191BA3030()
{
  unint64_t result = qword_1E92E3B48[0];
  if (!qword_1E92E3B48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E3B48);
  }
  return result;
}

unint64_t sub_191BA3084()
{
  unint64_t result = qword_1E92E0EF0;
  if (!qword_1E92E0EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0EF0);
  }
  return result;
}

uint64_t WidgetRelevanceAttribute<A>.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191CF2D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E27F0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceAttribute<A>.init(group:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E27F0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for WidgetRelevanceEntry.Attribute();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = sub_191CF2D68();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  swift_storeEnumTagMultiPayload();
  return sub_191CC5FFC(a1, (uint64_t)v10, a3, a4);
}

{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  uint64_t v8 = type metadata accessor for WidgetRelevanceEntry.Attribute();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v14 = a1;
  uint64_t v11 = sub_191CF2D68();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  swift_storeEnumTagMultiPayload();
  return sub_191CC5FFC((uint64_t)&v14, (uint64_t)v10, a3, a4);
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v5 = *a2;
  return WidgetRelevanceEntry<A>.init(configuration:group:)(a1, (uint64_t *)&v5, a3, a4);
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  long long v4 = *a2;
  return WidgetRelevanceEntry<A>.init(configuration:group:)(a1, (uint64_t *)&v4, a3);
}

uint64_t sub_191BA33E8()
{
  uint64_t result = type metadata accessor for WidgetRelevanceEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191BA3478(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(sub_191CF2D68() - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 & 0xF8 | 7;
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  if (*(void *)(v8 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unint64_t v14 = v13 + v12 + 1;
  uint64_t v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  int v16 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v15 != 7 || v16 != 0 || v14 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v21 = (void *)(((unint64_t)a1 + v11) & v20);
    uint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v11) & v20);
    unsigned int v23 = v22[v13];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v25 = v13;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v22;
          goto LABEL_22;
        case 2:
          int v26 = *(unsigned __int16 *)v22;
          goto LABEL_22;
        case 3:
          int v26 = *(unsigned __int16 *)v22 | (*(unsigned __int8 *)((((unint64_t)a2 + v11) & v20) + 2) << 16);
          goto LABEL_22;
        case 4:
          int v26 = *(_DWORD *)v22;
LABEL_22:
          int v27 = (v26 | (v24 << (8 * v13))) + 2;
          unsigned int v23 = v26 + 2;
          if (v13 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
      if (*(void *)((((unint64_t)a2 + v11) & v20) + 8) >= 2uLL)
      {
        *uint64_t v21 = *(void *)v22;
        *(void *)((((unint64_t)a1 + v11) & v20) + 8) = *(void *)((((unint64_t)a2 + v11) & v20) + 8);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      }
      *((unsigned char *)v21 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20);
      *((unsigned char *)v21 + v13) = 0;
    }
  }
  return a1;
}

unint64_t sub_191BA36D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v7 = (unsigned __int8 *)((v4 + a1 + v6) & ~v6);
  unint64_t v8 = *(void *)(v5 + 64);
  if (v8 <= 0x10) {
    unint64_t v8 = 16;
  }
  unsigned int v9 = v7[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *v7;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)v7;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)v7 | (v7[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)v7;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    unint64_t result = *((void *)v7 + 1);
    if (result >= 2)
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = *(uint64_t (**)(void))(v5 + 8);
    return v15();
  }
  return result;
}

uint64_t sub_191BA3880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    if (*((void *)v12 + 1) >= 2uLL)
    {
      void *v11 = *(void *)v12;
      v11[1] = *((void *)v12 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    }
    char v19 = 1;
  }
  else
  {
    (*(void (**)(void *))(v8 + 16))(v11);
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_191BA3A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_191CF2D68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 0x10uLL) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      if (*((void *)v11 + 1) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_29;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_29:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      if (*((void *)v12 + 1) >= 2uLL)
      {
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = *((void *)v12 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      }
      char v26 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 16))(v11, v12, v13);
      char v26 = 0;
    }
    v11[v15] = v26;
  }
  return a1;
}

uint64_t sub_191BA3CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (_OWORD *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    _OWORD *v11 = *(_OWORD *)v12;
    char v19 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v8 + 32))(v11);
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_191BA3E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_191CF2D68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 0x10uLL) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      if (*((void *)v11 + 1) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_29;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_29:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      char v26 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 32))(v11, v12, v13);
      char v26 = 0;
    }
    v11[v15] = v26;
  }
  return a1;
}

uint64_t sub_191BA40C8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v9 = 16;
  if (*(void *)(v8 + 64) > 0x10uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  if (v7 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v12 = *(void *)(v6 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_27;
  }
  uint64_t v13 = v9 + (v12 & ~v11) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_27:
      if (v7 < 0xFE)
      {
        unsigned int v22 = *(unsigned __int8 *)((((unint64_t)a1 + v12) & ~v11) + v9);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v21 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v21(a1, v7, v5);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_27;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v19 = v13;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_191BA4334(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_191CF2D68() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= 0x10) {
    unint64_t v11 = 16;
  }
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v9;
  }
  uint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v14 = *(void *)(v8 + 64) + v13;
  size_t v15 = v11 + 1;
  size_t v16 = (v14 & ~v13) + v11 + 1;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x191BA469CLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFE)
        {
          uint64_t v23 = (unsigned char *)((unint64_t)&a1[v14] & ~v13);
          if (a2 > 0xFE)
          {
            if (v15 <= 3) {
              int v24 = ~(-1 << (8 * v15));
            }
            else {
              int v24 = -1;
            }
            if (v15)
            {
              int v25 = v24 & (a2 - 255);
              if (v15 <= 3) {
                int v26 = v15;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v15);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  *uint64_t v23 = v25;
                  break;
              }
            }
          }
          else
          {
            v23[v11] = -(char)a2;
          }
        }
        else
        {
          unsigned int v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v22(a1, a2, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for WidgetRelevanceAttribute()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191BA46EC()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CA90 = result;
  return result;
}

uint64_t sub_191BA4714()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A890);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA78 = v0;
  unk_1EB44CA80 = 0xD000000000000012;
  qword_1EB44CA88 = 0x8000000191D0DD80;
  return result;
}

ValueMetadata *type metadata accessor for IsLuminanceReducedKey()
{
  return &type metadata for IsLuminanceReducedKey;
}

unint64_t sub_191BA47A0()
{
  unint64_t result = qword_1EB44B4F8;
  if (!qword_1EB44B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4F8);
  }
  return result;
}

unint64_t sub_191BA47F8()
{
  unint64_t result = qword_1EB44B508;
  if (!qword_1EB44B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B508);
  }
  return result;
}

unint64_t sub_191BA4850()
{
  unint64_t result = qword_1EB44B4F0;
  if (!qword_1EB44B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4F0);
  }
  return result;
}

uint64_t sub_191BA48A4()
{
  if (qword_1EB44A9B8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BA4900()
{
  if (qword_1EB44A9B0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA78;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*ActivityConfiguration.init<A>(for:content:dynamicIsland:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9))@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_191CF33B8();
  int v17 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v17 + 2) = a5;
  *((void *)v17 + 3) = a6;
  *((void *)v17 + 4) = a7;
  *((void *)v17 + 5) = a9;
  *((void *)v17 + 6) = a1;
  *((void *)v17 + 7) = a2;
  uint64_t v18 = type metadata accessor for ActivityConfiguration();
  int v19 = (uint64_t (**)(uint64_t))(a8 + *(int *)(v18 + 36));
  *int v19 = sub_191BA4B54;
  v19[1] = v17;
  unint64_t result = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  *((void *)result + 2) = a5;
  *((void *)result + 3) = a6;
  *((void *)result + 4) = a7;
  *((void *)result + 5) = a9;
  *((void *)result + 6) = a3;
  *((void *)result + 7) = a4;
  int v21 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(a8 + *(int *)(v18 + 40));
  *int v21 = sub_191BA4B7C;
  v21[1] = result;
  return result;
}

uint64_t sub_191BA4A8C(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191BA4B1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BA4B54(uint64_t a1)
{
  return sub_191BA4A8C(a1);
}

uint64_t type metadata accessor for ActivityConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191BA4B7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 48);
  a2[3] = type metadata accessor for DynamicIsland();
  a2[4] = (uint64_t)&off_1EE29DE10;
  __swift_allocate_boxed_opaque_existential_1(a2);
  return v5(a1);
}

uint64_t ActivityConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v34 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5 - 8;
  uint64_t v37 = v35;
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v30 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unsigned int v12 = (char *)&v29 - v11;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v29((char *)&v29 - v11, v2, a1);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v31 = v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(v14 + 16) = v16;
  *(void *)(v14 + 24) = v15;
  int v17 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v17(v14 + v13, v12, a1);
  uint64_t v18 = v30;
  v29(v30, v39, a1);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  *(void *)(v19 + 24) = v15;
  v17(v19 + v13, v18, a1);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
  uint64_t v21 = (uint64_t)v32;
  unsigned int v22 = (uint64_t (**)(uint64_t))&v32[*(int *)(v20 + 48)];
  uint64_t v23 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v39, v23);
  int v24 = (uint64_t (*)(uint64_t))v31;
  *unsigned int v22 = sub_191BA510C;
  v22[1] = v24;
  v22[2] = (uint64_t (*)(uint64_t))sub_191BA53E0;
  v22[3] = (uint64_t (*)(uint64_t))v19;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v25 = v33;
  sub_191C92C0C(v21, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  unint64_t v26 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_191CF8410;
  sub_191BA732C(v25, v27 + v26, type metadata accessor for WidgetDescriptor);
  uint64_t v40 = v27;
  sub_191B5D22C();
  sub_191CF4418();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_191BA7394(v25, type metadata accessor for WidgetDescriptor);
}

uint64_t sub_191BA4FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for ActivityViewContext();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v17 - v11;
  unint64_t v13 = *(uint64_t (**)(char *))(a2 + *(int *)(type metadata accessor for ActivityConfiguration() + 36));
  uint64_t v14 = a4;
  uint64_t v15 = a1;
  sub_191BFD424(a3, v14, v12);
  if (!v4)
  {
    uint64_t v15 = v13(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v15;
}

uint64_t sub_191BA510C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for ActivityConfiguration() - 8);
  return sub_191BA4FC4(a1, v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v3, v4);
}

uint64_t sub_191BA5194@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v14[1] = a4;
  uint64_t v8 = type metadata accessor for ActivityViewContext();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - v10;
  unsigned int v12 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for ActivityConfiguration() + 40));
  uint64_t result = sub_191BFD424(a2, a3, v11);
  if (!v4)
  {
    v12(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ActivityConfiguration() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 32) & ~v1);
  uint64_t v3 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BA53E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for ActivityConfiguration() - 8);
  return sub_191BA5194(v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v3, v4, a1);
}

BOOL static ActivityPreviewSourceStaleModifications.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityPreviewSourceStaleModifications.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t ActivityPreviewSourceStaleModifications.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ActivityConfiguration.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 168) = a6;
  *(void *)(v7 + 176) = v6;
  *(void *)(v7 + 152) = a2;
  *(void *)(v7 + 160) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
  *(void *)(v7 + 184) = swift_task_alloc();
  *(void *)(v7 + 192) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for JindoViewCollection();
  *(void *)(v7 + 200) = v11;
  *(void *)(v7 + 208) = *(void *)(v11 - 8);
  *(void *)(v7 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  *(void *)(v7 + 224) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ActivityViewCollection();
  *(void *)(v7 + 232) = v12;
  *(void *)(v7 + 240) = *(void *)(v12 - 8);
  *(void *)(v7 + 248) = swift_task_alloc();
  *(void *)(v7 + 256) = swift_task_alloc();
  *(void *)(v7 + 264) = swift_task_alloc();
  uint64_t v13 = *(void *)(a6 + 16);
  *(void *)(v7 + 272) = v13;
  uint64_t v14 = *(void *)(a6 + 24);
  *(void *)(v7 + 280) = v14;
  uint64_t v15 = type metadata accessor for ActivityViewContext();
  *(void *)(v7 + 288) = v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(void *)(v7 + 296) = TupleTypeMetadata2;
  uint64_t v17 = *(void *)(TupleTypeMetadata2 - 8);
  *(void *)(v7 + 304) = v17;
  *(void *)(v7 + 312) = *(void *)(v17 + 64);
  *(void *)(v7 + 320) = swift_task_alloc();
  *(void *)(v7 + 328) = swift_task_alloc();
  *(void *)(v7 + 336) = *(void *)(v13 - 8);
  *(void *)(v7 + 344) = swift_task_alloc();
  *(void *)(v7 + 352) = *(void *)(v15 - 8);
  *(void *)(v7 + 360) = swift_task_alloc();
  *(void *)(v7 + 368) = swift_task_alloc();
  *(void *)(v7 + 376) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v7 + 384) = AssociatedTypeWitness;
  *(void *)(v7 + 392) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v7 + 400) = swift_task_alloc();
  *(void *)(v7 + 408) = swift_task_alloc();
  *(void *)(v7 + 416) = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_191CF5BC8();
  *(void *)(v7 + 424) = v19;
  *(void *)(v7 + 432) = *(void *)(v19 - 8);
  *(void *)(v7 + 440) = swift_task_alloc();
  *(void *)(v7 + 448) = swift_task_alloc();
  uint64_t v20 = type metadata accessor for ActivityPreviewSource.Content();
  *(void *)(v7 + 456) = v20;
  *(void *)(v7 + 464) = *(void *)(v20 - 8);
  uint64_t v21 = swift_task_alloc();
  uint64_t v22 = *a3;
  *(void *)(v7 + 472) = v21;
  *(void *)(v7 + 480) = v22;
  *(unsigned char *)(v7 + 520) = *a4;
  *(void *)(v7 + 488) = sub_191CF5698();
  *(void *)(v7 + 496) = sub_191CF5688();
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v7 + 504) = v23;
  *uint64_t v23 = v7;
  v23[1] = sub_191BA5A3C;
  return ActivityPreviewSource.makeContent<A>(for:)(v21, v13, v13, v14);
}

uint64_t sub_191BA5A3C()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191BA6C74;
  }
  else {
    uint64_t v4 = sub_191BA5B94;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191BA5B94()
{
  int v140 = *(unsigned __int8 *)(v0 + 520);
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v137 = *(void *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 296);
  swift_release();
  uint64_t v122 = v7;
  uint64_t v143 = sub_191CF5228();
  *(void *)(v0 + 120) = *(void *)(v1 + *(int *)(v2 + 36));
  uint64_t v8 = sub_191CF5618();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x192FE41D0](v8, WitnessTable);
  *(void *)(v0 + 96) = *(void *)(v0 + 112);
  sub_191CF6008();
  sub_191CF5FD8();
  uint64_t v112 = v4 - 8;
  uint64_t v114 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  uint64_t v107 = (void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v109 = v4;
  uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16);
  uint64_t v117 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v124 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v104 = (void (**)(void, void))(v5 + 8);
  uint64_t v106 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  sub_191CF5FF8();
  for (i = (void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16); ; uint64_t v10 = i)
  {
    uint64_t v12 = *(void *)(v0 + 440);
    uint64_t v11 = *(void *)(v0 + 448);
    uint64_t v14 = *(void *)(v0 + 416);
    uint64_t v13 = *(void *)(v0 + 424);
    sub_191CF5FE8();
    (*v114)(v11, v12, v13);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v112 + 48))(v11, 1, v14) == 1) {
      break;
    }
    uint64_t v125 = *(void *)(v0 + 472);
    uint64_t v15 = *(char **)(v0 + 448);
    uint64_t v17 = *(void *)(v0 + 400);
    uint64_t v16 = *(void *)(v0 + 408);
    uint64_t v18 = *(char **)(v0 + 376);
    uint64_t v19 = *(void *)(v0 + 384);
    uint64_t v20 = *(void *)(v0 + 344);
    uint64_t v21 = *(void **)(v0 + 328);
    uint64_t v134 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 272);
    uint64_t v23 = *(void *)v15;
    (*v107)(v16, &v15[*(int *)(v109 + 48)], v19);
    uint64_t v24 = v125;
    uint64_t v126 = *v10;
    (*v10)(v20, v24, v22);
    uint64_t v115 = *v106;
    (*v106)(v17, v16, v19);
    sub_191B9B458(0xD000000000000016, 0x8000000191D0EC70, v20, v17, v140 == 1, v22, v18);
    uint64_t v25 = (char *)v21 + *(int *)(v122 + 48);
    uint64_t v132 = v23;
    *uint64_t v21 = v23;
    unint64_t v26 = *v117;
    (*v117)(v25, v18, v134);
    sub_191CF5618();
    sub_191CF55F8();
    if (v140 == 2)
    {
      uint64_t v27 = *(void *)(v0 + 400);
      uint64_t v129 = *(void *)(v0 + 408);
      uint64_t v101 = *(void *)(v0 + 384);
      uint64_t v28 = *(char **)(v0 + 368);
      uint64_t v29 = *(void *)(v0 + 344);
      uint64_t v30 = *(void **)(v0 + 328);
      uint64_t v31 = *(void *)(v0 + 288);
      uint64_t v138 = *(char **)(v0 + 376);
      uint64_t v32 = v26;
      uint64_t v33 = *(void *)(v0 + 272);
      v126(v29, *(void *)(v0 + 472), v33);
      v115(v27, v129, v101);
      sub_191B9B458(0xD000000000000016, 0x8000000191D0EC70, v29, v27, 1, v33, v28);
      uint64_t v34 = (char *)v30 + *(int *)(v122 + 48);
      *uint64_t v30 = v132;
      v32(v34, v28, v31);
      sub_191CF55F8();
      uint64_t v35 = *v124;
      (*v124)(v28, v31);
      v35(v138, v31);
    }
    else
    {
      (*v124)(*(char **)(v0 + 376), *(void *)(v0 + 288));
    }
    (*v104)(*(void *)(v0 + 408), *(void *)(v0 + 384));
  }
  swift_bridgeObjectRelease();
  if (!MEMORY[0x192FE4370]())
  {
    unint64_t v42 = MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v74 = *(void *)(v42 + 16);
    if (v74)
    {
      uint64_t v75 = *(void *)(v0 + 240);
      uint64_t v76 = v42 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      uint64_t v119 = *(void *)(v75 + 72);
      uint64_t v77 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v78 = *(void *)(v0 + 512);
      while (1)
      {
        uint64_t v79 = *(void **)(v0 + 192);
        sub_191BA732C(v76, *(void *)(v0 + 248), (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
        sub_191B270E4(v79);
        if (v78) {
          break;
        }
        uint64_t v128 = v74;
        uint64_t v141 = v77;
        uint64_t v136 = *(void *)(v0 + 248);
        uint64_t v80 = *(void *)(v0 + 184);
        uint64_t v131 = *(void *)(v0 + 192);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E14D8);
        uint64_t v81 = swift_allocObject();
        swift_weakInit();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B030);
        uint64_t v82 = sub_191CF3738();
        uint64_t v83 = *(void *)(v82 - 8);
        uint64_t v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_191CF8440;
        sub_191CF3728();
        sub_191CF36F8();
        sub_191CF3718();
        sub_191CF3708();
        uint64_t v85 = sub_191BA73F4(v84);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v81 + 24) = v85;
        uint64_t v86 = v81 + qword_1E92E1450;
        sub_191CF36F8();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v86, 0, 1, v82);
        *(void *)(v0 + 128) = sub_191CF5038();
        *(void *)(v0 + 136) = v81;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E12A8);
        swift_allocObject();
        swift_retain();
        uint64_t v87 = sub_191CF4318();
        sub_191B01614(v131, v80, &qword_1E92E1588);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E13F8);
        uint64_t v88 = swift_allocObject();
        sub_191BA76E4(v80, v88 + *(void *)(*(void *)v88 + 96));
        *(void *)(v88 + *(void *)(*(void *)v88 + 104)) = v87;
        swift_retain();
        sub_191CF42F8();
        sub_191CF42C8();
        sub_191B01770(v131, &qword_1E92E1588);
        swift_weakAssign();
        swift_release();
        sub_191BA7394(v136, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
        *(void *)(v0 + 80) = v88;
        *(void *)(v0 + 88) = v87;
        sub_191BA774C();
        swift_retain();
        uint64_t v89 = sub_191CF4238();
        uint64_t v91 = v90;
        swift_release();
        uint64_t v77 = v141;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v77 = sub_191B40F78(0, v141[2] + 1, 1, v141);
        }
        unint64_t v93 = v77[2];
        unint64_t v92 = v77[3];
        if (v93 >= v92 >> 1) {
          uint64_t v77 = sub_191B40F78((void *)(v92 > 1), v93 + 1, 1, v77);
        }
        v77[2] = v93 + 1;
        v94 = &v77[2 * v93];
        v94[4] = v89;
        v94[5] = v91;
        swift_release();
        swift_release();
        uint64_t v78 = 0;
        v76 += v119;
        uint64_t v74 = v128 - 1;
        if (v128 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v142 = v77;
          goto LABEL_38;
        }
      }
      uint64_t v96 = *(void *)(v0 + 464);
      uint64_t v95 = *(void *)(v0 + 472);
      uint64_t v97 = *(void *)(v0 + 456);
      sub_191BA7394(*(void *)(v0 + 248), (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v98 = *(uint64_t (**)(void))(v0 + 8);
      return v98();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v142 = (void *)MEMORY[0x1E4FBC860];
LABEL_38:
      (*(void (**)(void, void))(*(void *)(v0 + 464) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 456));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v99 = *(uint64_t (**)(void *))(v0 + 8);
      return v99(v142);
    }
  }
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v100 = *(void *)(v0 + 312);
  uint64_t v37 = *(void *)(v0 + 304);
  uint64_t v111 = *(int **)(v0 + 232);
  uint64_t v113 = *(void *)(v0 + 240);
  uint64_t v39 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 216);
  uint64_t v105 = *(void *)(v0 + 200);
  uint64_t v40 = *(void *)(v0 + 152);
  uint64_t v118 = *(void *)(v0 + 320) + *(int *)(v122 + 48);
  uint64_t v103 = *(void *)(v0 + 168);
  uint64_t v110 = (uint64_t (**)(uint64_t))(*(void *)(v0 + 176) + *(int *)(v103 + 36));
  uint64_t v41 = 0;
  uint64_t v108 = v40 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v121 = v37;
  uint64_t v123 = (void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  uint64_t v116 = (uint64_t (**)(void, uint64_t, void))(v36 + 32);
  uint64_t v127 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
  uint64_t v102 = v38 + 8;
  unint64_t v42 = MEMORY[0x1E4FBC860];
  while (1)
  {
    char v43 = sub_191CF55C8();
    sub_191CF5578();
    if ((v43 & 1) == 0) {
      break;
    }
    uint64_t result = (*(uint64_t (**)(void, unint64_t, void))(v121 + 16))(*(void *)(v0 + 320), v143+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(void *)(v121 + 72) * v41, *(void *)(v0 + 296));
    uint64_t v45 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      goto LABEL_41;
    }
LABEL_11:
    uint64_t v46 = **(void **)(v0 + 320);
    uint64_t result = (*v116)(*(void *)(v0 + 360), v118, *(void *)(v0 + 288));
    if (__OFADD__(v46, 1)) {
      goto LABEL_42;
    }
    uint64_t v133 = v45;
    uint64_t v135 = v41;
    unint64_t v139 = v42;
    uint64_t v130 = *(void **)(v0 + 480);
    uint64_t v47 = *(void *)(v0 + 360);
    uint64_t v48 = *(void *)(v0 + 264);
    uint64_t v49 = *(void *)(v0 + 224);
    uint64_t v50 = *(void *)(v0 + 200);
    uint64_t v51 = *(void *)(v0 + 152);
    uint64_t v52 = *(void *)(v0 + 160);
    *(void *)(v0 + 144) = v46 + 1;
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t v53 = (*v110)(v47);
    sub_191BA732C(v51, v48 + v111[7], type metadata accessor for ActivityMetricsDefinition);
    uint64_t v54 = *v127;
    (*v127)(v48, 1, 1, v50);
    *(void *)(v48 + v111[6]) = v53;
    *(void *)(v48 + v111[5]) = v130;
    uint64_t v55 = v48 + v111[9];
    *(void *)uint64_t v55 = 0x206574617453;
    *(void *)(v55 + 8) = 0xE600000000000000;
    *(_WORD *)(v55 + 16) = 0;
    *(unsigned char *)(v55 + 18) = 0;
    *(void *)(v48 + v111[8]) = v52;
    sub_191B01614(v108, v49, (uint64_t *)&unk_1E92E1BD8);
    uint64_t v56 = type metadata accessor for JindoMetricsDefinition(0);
    LODWORD(v53) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v49, 1, v56);
    id v57 = v130;
    swift_bridgeObjectRetain();
    sub_191B01770(v49, (uint64_t *)&unk_1E92E1BD8);
    if (v53 != 1)
    {
      uint64_t v58 = *(void **)(v0 + 480);
      uint64_t v59 = *(void *)(v0 + 264);
      uint64_t v60 = *(void **)(v0 + 216);
      uint64_t v61 = *(void *)(v0 + 200);
      uint64_t v62 = *(void *)(v0 + 152);
      (*(void (**)(void))(*(void *)(v0 + 176) + *(int *)(v103 + 40)))(*(void *)(v0 + 360));
      sub_191BA732C(v62, (uint64_t)v60 + *(int *)(v105 + 24), type metadata accessor for ActivityMetricsDefinition);
      sub_191B004A8((long long *)(v0 + 16), v102);
      *uint64_t v60 = v58;
      id v63 = v58;
      sub_191B01770(v59, &qword_1E92E1590);
      sub_191BA77A8((uint64_t)v60, v59, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
      v54(v59, 0, 1, v61);
    }
    sub_191BA732C(*(void *)(v0 + 264), *(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    unint64_t v42 = v139;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v42 = sub_191B413FC(0, *(void *)(v139 + 16) + 1, 1, v139);
    }
    unint64_t v65 = *(void *)(v42 + 16);
    unint64_t v64 = *(void *)(v42 + 24);
    if (v65 >= v64 >> 1) {
      unint64_t v42 = sub_191B413FC(v64 > 1, v65 + 1, 1, v42);
    }
    uint64_t v66 = *(char **)(v0 + 360);
    uint64_t v68 = *(void *)(v0 + 288);
    uint64_t v67 = *(void *)(v0 + 296);
    uint64_t v69 = *(void *)(v0 + 256);
    uint64_t v70 = *(void *)(v0 + 264);
    *(void *)(v42 + 16) = v65 + 1;
    sub_191BA77A8(v69, v42+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(void *)(v113 + 72) * v65, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    (*v124)(v66, v68);
    sub_191BA7394(v70, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    uint64_t v41 = v135 + 1;
    if (v133 == MEMORY[0x192FE4370](v143, v67)) {
      goto LABEL_25;
    }
  }
  uint64_t result = sub_191CF5DE8();
  if (v100 != 8) {
    goto LABEL_43;
  }
  uint64_t v71 = result;
  uint64_t v72 = *(void *)(v0 + 320);
  uint64_t v73 = *(void *)(v0 + 296);
  *(void *)(v0 + 104) = v71;
  (*v123)(v72, v0 + 104, v73);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v45 = v41 + 1;
  if (!__OFADD__(v41, 1)) {
    goto LABEL_11;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_191BA6C74()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BA6DD4(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_191B0A1A0;
  return ActivityConfiguration.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(a1, a2, a3, a4, a5, a6);
}

uint64_t static EnvironmentValues.ActivityFullScreenKey.defaultValue.getter()
{
  return byte_1E92E3BD0;
}

uint64_t static EnvironmentValues.ActivityFullScreenKey.defaultValue.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E3BD0 = a1;
  return result;
}

uint64_t (*static EnvironmentValues.ActivityFullScreenKey.defaultValue.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_191BA6F8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E92E3BD0;
  return result;
}

uint64_t sub_191BA6FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F40F8670](a1, a2, a3, a4, MEMORY[0x1E4FBB3A8]);
}

uint64_t sub_191BA6FE8()
{
  sub_191B960B0();
  sub_191CF4068();
  return v1;
}

uint64_t sub_191BA7024@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E14D8);
  swift_allocObject();
  uint64_t v7 = sub_191BA71C4();
  uint64_t v8 = sub_191CF5038();
  v12[0] = v7;
  v12[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E12A8);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_191CF4318();
  sub_191B01614(a1, (uint64_t)v6, &qword_1E92E1588);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E13F8);
  uint64_t v10 = swift_allocObject();
  sub_191BA76E4((uint64_t)v6, v10 + *(void *)(*(void *)v10 + 96));
  *(void *)(v10 + *(void *)(*(void *)v10 + 104)) = v9;
  swift_retain();
  sub_191CF42F8();
  sub_191CF42C8();
  sub_191B01770(a1, &qword_1E92E1588);
  swift_weakAssign();
  uint64_t result = swift_release();
  *a2 = v10;
  a2[1] = v9;
  return result;
}

uint64_t sub_191BA71C4()
{
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B030);
  uint64_t v1 = sub_191CF3738();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_191CF8440;
  sub_191CF3728();
  sub_191CF36F8();
  sub_191CF3718();
  sub_191CF3708();
  uint64_t v4 = sub_191BA73F4(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v0 + 24) = v4;
  uint64_t v5 = v0 + qword_1E92E1450;
  sub_191CF36F8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v1);
  return v0;
}

uint64_t sub_191BA732C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BA7394(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191BA73F4(uint64_t a1)
{
  uint64_t v2 = sub_191CF3738();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF90);
    uint64_t v9 = sub_191CF5D78();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_191BA82C8(&qword_1EB44AFA8);
      uint64_t v16 = sub_191CF5268();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_191BA82C8(&qword_1EB44AF20);
          char v23 = sub_191CF52F8();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_191BA76E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191BA774C()
{
  unint64_t result = qword_1E92E13F0;
  if (!qword_1E92E13F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E13F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E13F0);
  }
  return result;
}

uint64_t sub_191BA77A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BA7810()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_191BA7858()
{
  unint64_t result = qword_1E92E3BE0;
  if (!qword_1E92E3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3BE0);
  }
  return result;
}

uint64_t sub_191BA78AC()
{
  uint64_t result = sub_191CF33C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191BA7948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_191CF33C8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_191BA7A34(uint64_t a1)
{
  uint64_t v2 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();

  return swift_release();
}

uint64_t sub_191BA7ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191BA7B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191BA7C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 40);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_191BA7C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  swift_release();
  return a1;
}

uint64_t sub_191BA7D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BA7D4C);
}

uint64_t sub_191BA7D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF33C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191BA7E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BA7E20);
}

uint64_t sub_191BA7E20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF33C8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t dispatch thunk of ActivityPreviewSourceExpanding.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8)
                                                                                              + **(int **)(a7 + 8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_191B8A874;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

unsigned char *storeEnumTagSinglePayload for ActivityPreviewSourceStaleModifications(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BA80DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewSourceStaleModifications()
{
  return &type metadata for ActivityPreviewSourceStaleModifications;
}

ValueMetadata *type metadata accessor for EnvironmentValues.ActivityFullScreenKey()
{
  return &type metadata for EnvironmentValues.ActivityFullScreenKey;
}

uint64_t sub_191BA8124()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BA8184(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3BF8);
    uint64_t v3 = sub_191CF5D78();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_191CF6468();
      sub_191CF6478();
      uint64_t result = sub_191CF64C8();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (v7 == *(unsigned __int8 *)(v14 + v10)) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (v7 == *(unsigned __int8 *)(v14 + v10)) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_191BA82C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191CF3738();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_191BA8568()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyConfigurationINIntent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191BA859C()
{
  uint64_t v0 = sub_191CF3008();
  __swift_allocate_value_buffer(v0, qword_1EB449888);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449888);
  return sub_191CF2FF8();
}

uint64_t static EmptyConfiguration.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB449A28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449888);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static EmptyConfiguration.title.setter(uint64_t a1)
{
  if (qword_1EB449A28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449888);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static EmptyConfiguration.title.modify())()
{
  if (qword_1EB449A28 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF3008();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449888);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_191BA8850@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB449A28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449888);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_191BA8924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_191BAD340();
  *uint64_t v4 = v2;
  v4[1] = sub_191BA89D0;
  return MEMORY[0x1F40D48D8](a2, v5);
}

uint64_t sub_191BA89D0()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_191BA8AD8(uint64_t a1)
{
  unint64_t v2 = sub_191BA8D0C();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t ControlToggle.init<A, B, C, D, E>(kind:updatableEntity:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_191BA8D0C();
  uint64_t v17 = sub_191CF2C68();
  uint64_t v27 = v18;
  uint64_t v28 = v17;
  sub_191BA8D60(a3, a12, v33);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = *(_OWORD *)(a8 + *MEMORY[0x1E4FBC5F0]);
  *(void *)(v19 + 32) = a8;
  *(void *)(v19 + 40) = a10;
  *(void *)(v19 + 48) = a11;
  *(void *)(v19 + 56) = a12;
  *(void *)(v19 + 64) = a13;
  *(void *)(v19 + 72) = a14;
  *(void *)(v19 + 80) = a4;
  *(void *)(v19 + 88) = a5;
  unint64_t v20 = sub_191BA8E50();
  char v32 = 0;
  swift_getAssociatedConformanceWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = sub_191C44B48();
  sub_191C43880(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v28, v27, 0, 0, &v32, a9, (uint64_t)v33, v21, v22, (uint64_t)sub_191BA8E4C, (void *)v19, (uint64_t)nullsub_1, 0, a6, a7, 0,
    0,
    (uint64_t)&type metadata for EmptyConfiguration,
    a10,
    MEMORY[0x1E4F3F058],
    a11,
    (uint64_t)&type metadata for KeyPathToggleBox,
    a13,
    MEMORY[0x1E4F3F050],
    a14,
    v20);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a9 + 192) = 1;
  return result;
}

{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t result;
  uint64_t v26;
  void *v27;
  char v32;
  void v33[7];

  sub_191BA8D0C();
  uint64_t v17 = sub_191CF2C68();
  unint64_t v26 = v18;
  uint64_t v27 = (void *)v17;
  sub_191BA90D4(a3, a12, v33);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = *(_OWORD *)(a8 + *MEMORY[0x1E4FBC5F0]);
  *(void *)(v19 + 32) = a8;
  *(void *)(v19 + 40) = a10;
  *(void *)(v19 + 48) = a11;
  *(void *)(v19 + 56) = a12;
  *(void *)(v19 + 64) = a13;
  *(void *)(v19 + 72) = a14;
  *(void *)(v19 + 80) = a4;
  *(void *)(v19 + 88) = a5;
  unint64_t v20 = sub_191BA8E50();
  char v32 = 0;
  swift_getAssociatedConformanceWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = sub_191C44B48();
  sub_191C442A8(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v27, v26, 0, 0, &v32, a9, (uint64_t)v33, v21, v22, (uint64_t)sub_191BA8E4C, v19, a6, a7, 0, 0, (uint64_t)&type metadata for EmptyConfiguration,
    a10,
    a11,
    (uint64_t)&type metadata for KeyPathToggleBox,
    a13,
    a14,
    v20);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a9 + 192) = 1;
  return result;
}

unint64_t sub_191BA8D0C()
{
  unint64_t result = qword_1EB44A250;
  if (!qword_1EB44A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A250);
  }
  return result;
}

uint64_t sub_191BA8D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a1;
  *a3 = &unk_1E92E3C90;
  a3[1] = v6;
  a3[2] = sub_191BAD988;
  a3[3] = v7;
  a3[4] = &unk_1E92E3C98;
  a3[5] = 0;

  return swift_retain();
}

uint64_t sub_191BA8E14()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_191BA8E50()
{
  unint64_t result = qword_1EB449880;
  if (!qword_1EB449880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449880);
  }
  return result;
}

uint64_t sub_191BA8EA4()
{
  swift_getAssociatedConformanceWitness();

  return sub_191C44B48();
}

uint64_t sub_191BA90D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a1;
  *a3 = &unk_1E92E3C60;
  a3[1] = v6;
  a3[2] = sub_191BAD798;
  a3[3] = v7;
  a3[4] = &unk_1E92E3C68;
  a3[5] = 0;

  return swift_retain();
}

uint64_t sub_191BA9188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void *)(a7 - 8);
  uint64_t v12 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v20 - v15;
  v17(1);
  sub_191C6C7AC(v14, a7, a10);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, a7);
  sub_191C6C7AC(v16, a7, a10);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, a7);
}

uint64_t sub_191BA92C0(uint64_t a1)
{
  return sub_191BA9188(a1, v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_191BA9300()
{
  swift_getAssociatedConformanceWitness();

  return sub_191C44B48();
}

double ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:content:value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, (uint64_t)j_nullsub_1, 0, a6, a9, a7, 0, 0, a8, MEMORY[0x1E4F3F058], a10, a11, a12, MEMORY[0x1E4F3F050], a13);
}

double ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21 = *a3;
  uint64_t v22 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a3 + 8);
  uint64_t v23 = *MEMORY[0x1E4F18820] + v22;
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = *(void *)(v23 + 40);
  uint64_t v44 = v25;
  uint64_t v26 = sub_191CF2DB8();
  uint64_t v50 = v27;
  uint64_t v51 = v26;
  sub_191BA9780(a3, a16, v56);
  swift_retain();
  uint64_t v47 = (void *)sub_191CF2C58();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = *(void *)(v21 + *MEMORY[0x1E4FBC5F0]);
  v28[2] = v29;
  v28[3] = v24;
  uint64_t v30 = *(void *)(*MEMORY[0x1E4F18820] + v22 + 8);
  v28[4] = v30;
  v28[5] = v22;
  v28[6] = a13;
  v28[7] = a14;
  v28[8] = a15;
  v28[9] = a16;
  v28[10] = v25;
  v28[11] = a17;
  v28[12] = a18;
  v28[13] = a19;
  v28[14] = a4;
  v28[15] = a5;
  uint64_t v31 = (void *)swift_allocObject();
  char v32 = v31;
  v31[2] = v29;
  v31[3] = v24;
  v31[4] = v30;
  v31[5] = v22;
  v31[6] = a13;
  v31[7] = a14;
  v31[8] = a15;
  v31[9] = a16;
  v31[10] = v44;
  v31[11] = a17;
  v31[12] = a18;
  v31[13] = a19;
  if (a11) {
    uint64_t v33 = a12;
  }
  else {
    uint64_t v33 = 0;
  }
  v31[14] = a6;
  v31[15] = a7;
  unint64_t v34 = sub_191BA8E50();
  char v55 = 0;
  sub_191C43880(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v51, v50, 0, 0, &v55, (uint64_t)v57, (uint64_t)v56, 1, v47, (uint64_t)sub_191BA9A34, v28, (uint64_t)sub_191BA9B84, v32, a8, a10, a11,
    v33,
    (uint64_t)&type metadata for EmptyConfiguration,
    a13,
    a14,
    a15,
    (uint64_t)&type metadata for KeyPathToggleBox,
    a17,
    a18,
    a19,
    v34);
  swift_release();
  long long v35 = v65;
  long long v36 = v66;
  long long v37 = v63;
  *(_OWORD *)(a9 + 128) = v64;
  *(_OWORD *)(a9 + 144) = v35;
  long long v38 = v67;
  *(_OWORD *)(a9 + 160) = v36;
  *(_OWORD *)(a9 + 176) = v38;
  long long v39 = v61;
  long long v40 = v62;
  *(_OWORD *)(a9 + 64) = v60;
  *(_OWORD *)(a9 + 80) = v39;
  *(_OWORD *)(a9 + 96) = v40;
  *(_OWORD *)(a9 + 112) = v37;
  long long v41 = v57[1];
  *(_OWORD *)a9 = v57[0];
  *(_OWORD *)(a9 + 16) = v41;
  double result = *(double *)&v58;
  long long v43 = v59;
  *(_OWORD *)(a9 + 32) = v58;
  *(_OWORD *)(a9 + 48) = v43;
  *(unsigned char *)(a9 + 192) = 1;
  return result;
}

double ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:title:value:affordances:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, (uint64_t)nullsub_1, 0, a6, a9, a7, a8, a10, a11, MEMORY[0x1E4F3F058], a12, a13, a14, MEMORY[0x1E4F3F050], a15);
}

double ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0, 0, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_191BA9780@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a1;
  uint64_t v9 = (void *)swift_allocObject();
  unint64_t v10 = (void *)(v6 + *MEMORY[0x1E4FBC5F0]);
  v9[2] = *v10;
  uint64_t v11 = v10[1];
  uint64_t v12 = (void *)(*MEMORY[0x1E4F18820] + v11);
  v9[3] = v12[2];
  v9[4] = v12[1];
  v9[5] = v11;
  v9[6] = a2;
  v9[7] = v12[5];
  *a3 = &unk_1E92E3C28;
  a3[1] = v7;
  a3[2] = sub_191BAD464;
  a3[3] = v8;
  a3[4] = &unk_1E92E3C38;
  a3[5] = v9;

  return swift_retain();
}

uint64_t sub_191BA98C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = *(void *)(a8 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v23 - v18;
  v20(1);
  sub_191C6C7AC(v17, a8, a13);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, a8);
  sub_191C6C7AC(v19, a8, a13);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, a8);
}

uint64_t sub_191BA99FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BA9A34(uint64_t a1)
{
  return sub_191BA9B9C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_191BA98C4);
}

uint64_t sub_191BA9A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14 = *(void *)(a9 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v23 - v18;
  v20(1);
  sub_191C6C7AC(v17, a9, a14);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, a9);
  sub_191C6C7AC(v19, a9, a14);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, a9);
}

uint64_t sub_191BA9B84(uint64_t a1)
{
  return sub_191BA9B9C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_191BA9A4C);
}

uint64_t sub_191BA9B9C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[14], v2[15], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[12], v2[13]);
}

unint64_t sub_191BA9BF8()
{
  unint64_t result = qword_1EB44A258;
  if (!qword_1EB44A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A258);
  }
  return result;
}

unint64_t sub_191BA9C50()
{
  unint64_t result = qword_1EB44A248;
  if (!qword_1EB44A248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A248);
  }
  return result;
}

unint64_t sub_191BA9CA8()
{
  unint64_t result = qword_1E92E3C00[0];
  if (!qword_1E92E3C00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E3C00);
  }
  return result;
}

uint64_t sub_191BA9CFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for EmptyConfigurationINIntent()
{
  return self;
}

ValueMetadata *type metadata accessor for EmptyConfiguration()
{
  return &type metadata for EmptyConfiguration;
}

uint64_t destroy for KeyPathToggleBox()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for KeyPathToggleBox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for KeyPathToggleBox(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for KeyPathToggleBox(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for KeyPathToggleBox()
{
  return &type metadata for KeyPathToggleBox;
}

uint64_t sub_191BA9F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_191CF5BC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - v8;
  v14[1] = a1;
  sub_191CF6538();
  swift_retain();
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v10)
  {
    uint64_t v12 = *(void *)(a2 - 8);
    v11(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v9, a2);
  }
  else
  {
    v11(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_191BAD89C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_191BAA114(uint64_t *a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 8);
  v2[9] = v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC5F0];
  v2[10] = v5;
  uint64_t v7 = *(void *)(v3 + *v6);
  v2[11] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[12] = AssociatedTypeWitness;
  v2[13] = *(void *)(AssociatedTypeWitness - 8);
  v2[14] = swift_task_alloc();
  v2[15] = *(void *)(v7 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BAA280, 0, 0);
}

uint64_t sub_191BAA280()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v0[8] + 16);
  unint64_t v4 = sub_191BAD6AC();
  v0[2] = v1;
  v0[3] = MEMORY[0x1E4FBB390];
  v0[4] = v3;
  v0[5] = v4;
  sub_191CF2DC8();
  uint64_t v5 = sub_191CF6538();
  sub_191BA9F10(v2, v5, (uint64_t)(v0 + 6));
  v0[17] = v0[6];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_191BAA424;
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[12];
  return MEMORY[0x1F40D4460](v8, v9, AssociatedConformanceWitness);
}

uint64_t sub_191BAA424()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
  if (v0) {
    uint64_t v3 = sub_191BAA648;
  }
  else {
    uint64_t v3 = sub_191BAA58C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BAA58C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_191CF2C18();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_191BAA648()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191BAA6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 161) = a5;
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 64) = a6;
  uint64_t v7 = *a4;
  uint64_t v8 = *(void *)(a6 + 8);
  *(void *)(v6 + 72) = v8;
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = (void *)MEMORY[0x1E4FBC5F0];
  *(void *)(v6 + 80) = v9;
  uint64_t v11 = *(void *)(v7 + *v10);
  *(void *)(v6 + 88) = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 96) = AssociatedTypeWitness;
  *(void *)(v6 + 104) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 112) = swift_task_alloc();
  *(void *)(v6 + 120) = *(void *)(v11 - 8);
  *(void *)(v6 + 128) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BAA834, 0, 0);
}

uint64_t sub_191BAA834()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v0[8] + 16);
  unint64_t v4 = sub_191BAD6AC();
  v0[2] = v1;
  v0[3] = MEMORY[0x1E4FBB390];
  v0[4] = v3;
  v0[5] = v4;
  sub_191CF2DC8();
  uint64_t v5 = sub_191CF6538();
  sub_191BA9F10(v2, v5, (uint64_t)(v0 + 6));
  v0[17] = v0[6];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_191BAA9D4;
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[12];
  return MEMORY[0x1F40D4460](v8, v9, AssociatedConformanceWitness);
}

uint64_t sub_191BAA9D4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
  if (v0) {
    uint64_t v3 = sub_191BAABF8;
  }
  else {
    uint64_t v3 = sub_191BAAB3C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BAAB3C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 88);
  *(unsigned char *)(v0 + 160) = *(unsigned char *)(v0 + 161);
  sub_191CF2C38();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_191BAABF8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BAAC70(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_191BADAD0, 0, 0);
}

uint64_t sub_191BAAC90(uint64_t *a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = *a1;
  v2[9] = *a1;
  uint64_t v4 = *(void *)(a2 + 8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 + 8);
  uint64_t v5 = *(void *)(v3 + *MEMORY[0x1E4FBC5F0]);
  v2[12] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[13] = AssociatedTypeWitness;
  v2[14] = *(void *)(AssociatedTypeWitness - 8);
  v2[15] = swift_task_alloc();
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BAAE00, 0, 0);
}

uint64_t sub_191BAAE00()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[7];
  uint64_t v4 = *(void *)(*MEMORY[0x1E4F18728] + *(void *)(*MEMORY[0x1E4FBC5F0] + v0[9] + 8) + 8);
  v0[18] = v4;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = WitnessTable;
  sub_191CF2DC8();
  uint64_t v7 = sub_191CF6538();
  sub_191BA9F10(v3, v7, (uint64_t)(v0 + 6));
  v0[19] = v0[6];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[20] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_191BAAFE4;
  uint64_t v10 = v0[17];
  uint64_t v11 = v0[13];
  return MEMORY[0x1F40D4460](v10, v11, AssociatedConformanceWitness);
}

uint64_t sub_191BAAFE4()
{
  uint64_t v2 = (void *)*v1;
  v2[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);
    return MEMORY[0x1F4188298](sub_191BAB3C4, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[22] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191BAB1D0;
    uint64_t v5 = v2[19];
    return MEMORY[0x1F40D3BD8](v2 + 24, v5, WitnessTable);
  }
}

uint64_t sub_191BAB1D0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[16] + 8))(v2[17], v2[12]);
  if (v0) {
    uint64_t v3 = sub_191BAB440;
  }
  else {
    uint64_t v3 = sub_191BAB338;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BAB338()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 192);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_191BAB3C4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191BAB440()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191BAB4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 193) = a5;
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 64) = a6;
  uint64_t v7 = *a4;
  *(void *)(v6 + 72) = *a4;
  uint64_t v8 = *(void *)(a6 + 8);
  *(void *)(v6 + 80) = v8;
  *(void *)(v6 + 88) = *(void *)(v8 + 8);
  uint64_t v9 = *(void *)(v7 + *MEMORY[0x1E4FBC5F0]);
  *(void *)(v6 + 96) = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 104) = AssociatedTypeWitness;
  *(void *)(v6 + 112) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 120) = swift_task_alloc();
  *(void *)(v6 + 128) = *(void *)(v9 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BAB630, 0, 0);
}

uint64_t sub_191BAB630()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[7];
  uint64_t v4 = *(void *)(*MEMORY[0x1E4F18728] + *(void *)(*MEMORY[0x1E4FBC5F0] + v0[9] + 8) + 8);
  v0[18] = v4;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = WitnessTable;
  sub_191CF2DC8();
  uint64_t v7 = sub_191CF6538();
  sub_191BA9F10(v3, v7, (uint64_t)(v0 + 6));
  v0[19] = v0[6];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[20] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_191BAB810;
  uint64_t v10 = v0[17];
  uint64_t v11 = v0[13];
  return MEMORY[0x1F40D4460](v10, v11, AssociatedConformanceWitness);
}

uint64_t sub_191BAB810()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(*(void *)(v2 + 112) + 8))(*(void *)(v2 + 120), *(void *)(v2 + 104));
    return MEMORY[0x1F4188298](sub_191BABBB4, 0, 0);
  }
  else
  {
    char v3 = *(unsigned char *)(v2 + 193);
    (*(void (**)(void, void))(*(void *)(v2 + 112) + 8))(*(void *)(v2 + 120), *(void *)(v2 + 104));
    *(unsigned char *)(v2 + 192) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 176) = v4;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v4 = v2;
    v4[1] = sub_191BAB9F4;
    uint64_t v6 = *(void *)(v2 + 152);
    return MEMORY[0x1F40D3BF0](v2 + 192, v6, WitnessTable);
  }
}

uint64_t sub_191BAB9F4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[16] + 8))(v2[17], v2[12]);
  if (v0) {
    char v3 = sub_191BABC2C;
  }
  else {
    char v3 = sub_191BABB38;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BABB38()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BABBB4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BABC2C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BABCA4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_191BABCC4, 0, 0);
}

uint64_t sub_191BABCC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_191BABD64(uint64_t *a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = a2;
  uint64_t v3 = *a1;
  v2[15] = *a1;
  v2[16] = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(v3 + *MEMORY[0x1E4FBC5F0]);
  v2[17] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[18] = AssociatedTypeWitness;
  v2[19] = *(void *)(AssociatedTypeWitness - 8);
  v2[20] = swift_task_alloc();
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BABECC, 0, 0);
}

uint64_t sub_191BABECC()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[13];
  unint64_t v5 = sub_191BAD6AC();
  v0[8] = v1;
  v0[9] = MEMORY[0x1E4FBB390];
  v0[10] = v2;
  v0[11] = v5;
  uint64_t v6 = sub_191CF2DE8();
  v0[23] = v6;
  uint64_t v7 = *MEMORY[0x1E4F18820] + *(void *)(*MEMORY[0x1E4FBC5F0] + v3 + 8);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  uint64_t v10 = *(void *)(v7 + 40);
  v0[3] = v6;
  v0[4] = v8;
  v0[5] = v2;
  v0[6] = WitnessTable;
  v0[7] = v10;
  sub_191CF2DF8();
  uint64_t v11 = sub_191CF6538();
  sub_191BB93F0(v4, v11, (uint64_t)(v0 + 12));
  v0[24] = v0[12];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[25] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_191BAC108;
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[18];
  return MEMORY[0x1F40D4460](v14, v15, AssociatedConformanceWitness);
}

uint64_t sub_191BAC108()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[19] + 8))(v2[20], v2[18]);
    return MEMORY[0x1F4188298](sub_191BAC4E8, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[19] + 8))(v2[20], v2[18]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[27] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191BAC2F4;
    uint64_t v5 = v2[24];
    return MEMORY[0x1F40D3BE0](v2 + 29, v5, WitnessTable);
  }
}

uint64_t sub_191BAC2F4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[17]);
  if (v0) {
    uint64_t v3 = sub_191BAC564;
  }
  else {
    uint64_t v3 = sub_191BAC45C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BAC45C()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_191BAC4E8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191BAC564()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191BAC5E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF56B8();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a2;
  *(unsigned char *)(v11 + 48) = a1;
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if (v12 == 1)
  {
    sub_191BAD64C((uint64_t)v8);
  }
  else
  {
    sub_191CF56A8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(v11 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_191CF5648();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      if (v15 | v13)
      {
        v17[0] = 0;
        v17[1] = 0;
        v17[2] = v13;
        v17[3] = v15;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_191BAC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 233) = a5;
  *(void *)(v6 + 104) = a4;
  *(void *)(v6 + 112) = a6;
  uint64_t v7 = *a4;
  *(void *)(v6 + 120) = *a4;
  *(void *)(v6 + 128) = *(void *)(a6 + 8);
  uint64_t v8 = *(void *)(v7 + *MEMORY[0x1E4FBC5F0]);
  *(void *)(v6 + 136) = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 144) = AssociatedTypeWitness;
  *(void *)(v6 + 152) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 160) = swift_task_alloc();
  *(void *)(v6 + 168) = *(void *)(v8 - 8);
  *(void *)(v6 + 176) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BAC978, 0, 0);
}

uint64_t sub_191BAC978()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[13];
  unint64_t v5 = sub_191BAD6AC();
  v0[8] = v1;
  v0[9] = MEMORY[0x1E4FBB390];
  v0[10] = v2;
  v0[11] = v5;
  uint64_t v6 = sub_191CF2DE8();
  v0[23] = v6;
  uint64_t v7 = *MEMORY[0x1E4F18820] + *(void *)(*MEMORY[0x1E4FBC5F0] + v3 + 8);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  uint64_t v10 = *(void *)(v7 + 40);
  v0[3] = v6;
  v0[4] = v8;
  v0[5] = v2;
  v0[6] = WitnessTable;
  v0[7] = v10;
  sub_191CF2DF8();
  uint64_t v11 = sub_191CF6538();
  sub_191BB93F0(v4, v11, (uint64_t)(v0 + 12));
  v0[24] = v0[12];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[25] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_191BACBB0;
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[18];
  return MEMORY[0x1F40D4460](v14, v15, AssociatedConformanceWitness);
}

uint64_t sub_191BACBB0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(*(void *)(v2 + 152) + 8))(*(void *)(v2 + 160), *(void *)(v2 + 144));
    return MEMORY[0x1F4188298](sub_191BACF5C, 0, 0);
  }
  else
  {
    char v3 = *(unsigned char *)(v2 + 233);
    (*(void (**)(void, void))(*(void *)(v2 + 152) + 8))(*(void *)(v2 + 160), *(void *)(v2 + 144));
    *(unsigned char *)(v2 + 232) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 216) = v4;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v4 = v2;
    v4[1] = sub_191BACD9C;
    uint64_t v6 = *(void *)(v2 + 192);
    uint64_t v7 = MEMORY[0x1E4FBB390];
    return MEMORY[0x1F40D3C00](v2 + 232, v6, v7, WitnessTable);
  }
}

uint64_t sub_191BACD9C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[17]);
  if (v0) {
    char v3 = sub_191BACFD4;
  }
  else {
    char v3 = sub_191BACEE0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BACEE0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BACF5C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BACFD4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BAD04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  void *v10 = v6;
  v10[1] = sub_191B0A348;
  return sub_191BB95F4(a1, a2, (uint64_t)&type metadata for KeyPathToggleBox, a2, (uint64_t)&off_1EE29F188, a6);
}

uint64_t sub_191BAD114()
{
  uint64_t v4 = (uint64_t (*)(void))(*v0 + *(int *)*v0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191BAD1DC;
  return v4();
}

uint64_t sub_191BAD1DC(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_191BAD2E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_191BAD310()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

unint64_t sub_191BAD340()
{
  unint64_t result = qword_1E92E3C18;
  if (!qword_1E92E3C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3C18);
  }
  return result;
}

uint64_t sub_191BAD394()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BAD3CC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(uint64_t **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_191B8A874;
  return sub_191BABD64(v3, v2);
}

uint64_t sub_191BAD464(char a1)
{
  return sub_191BAC5E0(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_191BAD49C()
{
  return swift_deallocObject();
}

uint64_t sub_191BAD4AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B0A348;
  return sub_191BAD04C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191BAD584(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(uint64_t **)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191BAC80C(a1, v4, v5, v7, v8, v6);
}

uint64_t sub_191BAD64C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191BAD6AC()
{
  unint64_t result = qword_1E92E3C50;
  if (!qword_1E92E3C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3C50);
  }
  return result;
}

uint64_t sub_191BAD700()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(uint64_t **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_191B8B028;
  return sub_191BAAC90(v3, v2);
}

uint64_t sub_191BAD798(char a1)
{
  return sub_191BAC5E0(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_191BAD7D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(uint64_t **)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191BAB4BC(a1, v4, v5, v7, v8, v6);
}

unint64_t sub_191BAD89C()
{
  unint64_t result = qword_1E92E3C80;
  if (!qword_1E92E3C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3C80);
  }
  return result;
}

uint64_t sub_191BAD8F0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(uint64_t **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_191B8B028;
  return sub_191BAA114(v3, v2);
}

uint64_t sub_191BAD988(char a1)
{
  return sub_191BAC5E0(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BADA04(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(uint64_t **)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191BAA6C4(a1, v4, v5, v7, v8, v6);
}

uint64_t EnvironmentValues._encodesPreciseTextLayout.getter()
{
  sub_191B4F788();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._encodesPreciseTextLayout.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues._encodesPreciseTextLayout.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F788();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BADBDC;
}

uint64_t sub_191BADBDC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s27EncodesPreciseTextLayoutKeyVMa()
{
  return &_s27EncodesPreciseTextLayoutKeyVN;
}

uint64_t sub_191BADC2C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C8A0 = result;
  return result;
}

uint64_t sub_191BADC54()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A608);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C960 = v0;
  *(void *)algn_1EB44C968 = 0xD00000000000001CLL;
  qword_1EB44C970 = 0x8000000191D0ED30;
  return result;
}

ValueMetadata *type metadata accessor for EncodesPreciseTextLayoutKey()
{
  return &type metadata for EncodesPreciseTextLayoutKey;
}

uint64_t sub_191BADCDC()
{
  if (qword_1EB44A5A0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BADD38()
{
  if (qword_1EB44A6C8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C960;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t DynamicIslandExpandedContent.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DynamicIslandExpandedContent.content.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DynamicIslandExpandedContent.content.modify())()
{
  return nullsub_1;
}

uint64_t DynamicIslandExpandedContent.init(content:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191BADE74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191BADF04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_191BADFBC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_191BADFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191BAE038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191BAE088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191BAE0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_191BAE128(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191BAE284(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191BAE49CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for DynamicIslandExpandedContent()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedContentBuilder()
{
  return &type metadata for DynamicIslandExpandedContentBuilder;
}

uint64_t sub_191BAE4EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = (void *)a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v16;
      char v17 = *((unsigned char *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v16;
      if (v17)
      {
        uint64_t v19 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v19;
        swift_retain();
      }
      else
      {
        long long v24 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v24;
        (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(unsigned char *)(a1 + 88) = v17;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = (uint64_t)a2 + v9;
      *(void *)uint64_t v10 = *(void *)v11;
      uint64_t v12 = *(void *)(v11 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
      *(void *)(v10 + 24) = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v20 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v20;
      uint64_t v21 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v21;
      uint64_t v22 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22)
      {
        uint64_t v23 = a2[5];
        *(void *)(a1 + 32) = v22;
        *(void *)(a1 + 40) = v23;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      uint64_t v25 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = v6[5];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v6[6];
    uint64_t v31 = (void *)(a1 + v30);
    char v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(void *)(a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
    *(void *)(a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
    *(void *)(a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
    *(void *)(a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    *(void *)(a1 + v6[11]) = *(uint64_t *)((char *)a2 + v6[11]);
    uint64_t v34 = v6[12];
    long long v35 = (void *)(a1 + v34);
    long long v36 = (uint64_t *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *long long v35 = *v36;
    v35[1] = v37;
    *(unsigned char *)(a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *(unsigned char *)(a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *(unsigned char *)(a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    *(unsigned char *)(a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    *(unsigned char *)(a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
    *(void *)(a1 + v6[18]) = *(uint64_t *)((char *)a2 + v6[18]);
    *(unsigned char *)(a1 + v6[19]) = *((unsigned char *)a2 + v6[19]);
    *(unsigned char *)(a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
    *(unsigned char *)(a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
    *(unsigned char *)(a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
    uint64_t v38 = v6[23];
    long long v39 = (void *)(a1 + v38);
    long long v40 = (uint64_t *)((char *)a2 + v38);
    uint64_t v41 = v40[1];
    *long long v39 = *v40;
    v39[1] = v41;
    *(unsigned char *)(a1 + v6[24]) = *((unsigned char *)a2 + v6[24]);
    *(unsigned char *)(a1 + v6[25]) = *((unsigned char *)a2 + v6[25]);
    *(unsigned char *)(a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
    *(unsigned char *)(a1 + v6[27]) = *((unsigned char *)a2 + v6[27]);
    *(unsigned char *)(a1 + v6[28]) = *((unsigned char *)a2 + v6[28]);
    *(unsigned char *)(a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
    *(unsigned char *)(a1 + v6[30]) = *((unsigned char *)a2 + v6[30]);
    *(unsigned char *)(a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
    *(_OWORD *)(a1 + v6[32]) = *(_OWORD *)((char *)a2 + v6[32]);
    *(void *)(a1 + v6[33]) = *(uint64_t *)((char *)a2 + v6[33]);
    uint64_t v42 = v6[34];
    long long v43 = (void *)(a1 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    uint64_t v45 = v44[1];
    *long long v43 = *v44;
    v43[1] = v45;
    *(void *)(a1 + v6[35]) = *(uint64_t *)((char *)a2 + v6[35]);
    *(unsigned char *)(a1 + v6[36]) = *((unsigned char *)a2 + v6[36]);
    *(unsigned char *)(a1 + v6[37]) = *((unsigned char *)a2 + v6[37]);
    *(unsigned char *)(a1 + v6[38]) = *((unsigned char *)a2 + v6[38]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191BAE950(uint64_t a1)
{
  type metadata accessor for ViewSource(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v3 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32)) {
      swift_release();
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 88))
  {
LABEL_8:
    swift_release();
    goto LABEL_10;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
LABEL_10:
  type metadata accessor for WidgetDescriptor(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BAEAF4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ViewSource(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    uint64_t v11 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v11;
    uint64_t v12 = *(void **)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v12;
    char v13 = *(unsigned char *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v12;
    if (v13)
    {
      uint64_t v15 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v15;
      swift_retain();
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 48, a2 + 48);
    }
    *(unsigned char *)(a1 + 88) = v13;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_191CF33C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    *(void *)uint64_t v7 = *(void *)v8;
    uint64_t v9 = *(void *)(v8 + 24);
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(void *)(v7 + 24) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    uint64_t v17 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v17;
    uint64_t v18 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18)
    {
      uint64_t v19 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    uint64_t v21 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v23 = v22[5];
  long long v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  void *v24 = v27;
  v24[1] = v26;
  uint64_t v28 = v22[6];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + v22[7]) = *(void *)(a2 + v22[7]);
  *(void *)(a1 + v22[8]) = *(void *)(a2 + v22[8]);
  *(void *)(a1 + v22[9]) = *(void *)(a2 + v22[9]);
  *(void *)(a1 + v22[10]) = *(void *)(a2 + v22[10]);
  *(void *)(a1 + v22[11]) = *(void *)(a2 + v22[11]);
  uint64_t v32 = v22[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  *(unsigned char *)(a1 + v22[13]) = *(unsigned char *)(a2 + v22[13]);
  *(unsigned char *)(a1 + v22[14]) = *(unsigned char *)(a2 + v22[14]);
  *(unsigned char *)(a1 + v22[15]) = *(unsigned char *)(a2 + v22[15]);
  *(unsigned char *)(a1 + v22[16]) = *(unsigned char *)(a2 + v22[16]);
  *(unsigned char *)(a1 + v22[17]) = *(unsigned char *)(a2 + v22[17]);
  *(void *)(a1 + v22[18]) = *(void *)(a2 + v22[18]);
  *(unsigned char *)(a1 + v22[19]) = *(unsigned char *)(a2 + v22[19]);
  *(unsigned char *)(a1 + v22[20]) = *(unsigned char *)(a2 + v22[20]);
  *(unsigned char *)(a1 + v22[21]) = *(unsigned char *)(a2 + v22[21]);
  *(unsigned char *)(a1 + v22[22]) = *(unsigned char *)(a2 + v22[22]);
  uint64_t v36 = v22[23];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  *(unsigned char *)(a1 + v22[24]) = *(unsigned char *)(a2 + v22[24]);
  *(unsigned char *)(a1 + v22[25]) = *(unsigned char *)(a2 + v22[25]);
  *(unsigned char *)(a1 + v22[26]) = *(unsigned char *)(a2 + v22[26]);
  *(unsigned char *)(a1 + v22[27]) = *(unsigned char *)(a2 + v22[27]);
  *(unsigned char *)(a1 + v22[28]) = *(unsigned char *)(a2 + v22[28]);
  *(unsigned char *)(a1 + v22[29]) = *(unsigned char *)(a2 + v22[29]);
  *(unsigned char *)(a1 + v22[30]) = *(unsigned char *)(a2 + v22[30]);
  *(unsigned char *)(a1 + v22[31]) = *(unsigned char *)(a2 + v22[31]);
  *(_OWORD *)(a1 + v22[32]) = *(_OWORD *)(a2 + v22[32]);
  *(void *)(a1 + v22[33]) = *(void *)(a2 + v22[33]);
  uint64_t v40 = v22[34];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  *(void *)(a1 + v22[35]) = *(void *)(a2 + v22[35]);
  *(unsigned char *)(a1 + v22[36]) = *(unsigned char *)(a2 + v22[36]);
  *(unsigned char *)(a1 + v22[37]) = *(unsigned char *)(a2 + v22[37]);
  *(unsigned char *)(a1 + v22[38]) = *(unsigned char *)(a2 + v22[38]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191BAEF04(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_191BAF3A4(a1);
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v11 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v11;
      char v12 = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v11;
      if (v12)
      {
        uint64_t v14 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v14;
        swift_retain();
      }
      else
      {
        uint64_t v17 = *(void *)(a2 + 72);
        *(void *)(a1 + 72) = v17;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 48, a2 + 48);
      }
      *(unsigned char *)(a1 + 88) = v12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      uint64_t v9 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v9;
      uint64_t v10 = v8[3];
      v7[2] = v8[2];
      v7[3] = v10;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        uint64_t v16 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v15;
        *(void *)(a1 + 40) = v16;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      uint64_t v18 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[6];
  long long v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v19[7]) = *(void *)(a2 + v19[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v19[8]) = *(void *)(a2 + v19[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v19[9]) = *(void *)(a2 + v19[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v19[10]) = *(void *)(a2 + v19[10]);
  *(void *)(a1 + v19[11]) = *(void *)(a2 + v19[11]);
  uint64_t v26 = v19[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[13]) = *(unsigned char *)(a2 + v19[13]);
  *(unsigned char *)(a1 + v19[14]) = *(unsigned char *)(a2 + v19[14]);
  *(unsigned char *)(a1 + v19[15]) = *(unsigned char *)(a2 + v19[15]);
  *(unsigned char *)(a1 + v19[16]) = *(unsigned char *)(a2 + v19[16]);
  *(unsigned char *)(a1 + v19[17]) = *(unsigned char *)(a2 + v19[17]);
  *(void *)(a1 + v19[18]) = *(void *)(a2 + v19[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[19]) = *(unsigned char *)(a2 + v19[19]);
  *(unsigned char *)(a1 + v19[20]) = *(unsigned char *)(a2 + v19[20]);
  *(unsigned char *)(a1 + v19[21]) = *(unsigned char *)(a2 + v19[21]);
  *(unsigned char *)(a1 + v19[22]) = *(unsigned char *)(a2 + v19[22]);
  uint64_t v29 = v19[23];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[24]) = *(unsigned char *)(a2 + v19[24]);
  *(unsigned char *)(a1 + v19[25]) = *(unsigned char *)(a2 + v19[25]);
  *(unsigned char *)(a1 + v19[26]) = *(unsigned char *)(a2 + v19[26]);
  *(unsigned char *)(a1 + v19[27]) = *(unsigned char *)(a2 + v19[27]);
  *(unsigned char *)(a1 + v19[28]) = *(unsigned char *)(a2 + v19[28]);
  *(unsigned char *)(a1 + v19[29]) = *(unsigned char *)(a2 + v19[29]);
  *(unsigned char *)(a1 + v19[30]) = *(unsigned char *)(a2 + v19[30]);
  *(unsigned char *)(a1 + v19[31]) = *(unsigned char *)(a2 + v19[31]);
  *(_OWORD *)(a1 + v19[32]) = *(_OWORD *)(a2 + v19[32]);
  *(void *)(a1 + v19[33]) = *(void *)(a2 + v19[33]);
  uint64_t v32 = v19[34];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v19[35]) = *(void *)(a2 + v19[35]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v19[36]) = *(unsigned char *)(a2 + v19[36]);
  *(unsigned char *)(a1 + v19[37]) = *(unsigned char *)(a2 + v19[37]);
  *(unsigned char *)(a1 + v19[38]) = *(unsigned char *)(a2 + v19[38]);
  return a1;
}

uint64_t sub_191BAF3A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_191BAF400(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ViewSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_191CF33C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    long long v9 = *((_OWORD *)v8 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *((_OWORD *)v7 + 1) = v9;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  uint64_t v10 = (int *)type metadata accessor for WidgetDescriptor(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  *(void *)&a1[v10[8]] = *(void *)&a2[v10[8]];
  *(void *)&a1[v10[9]] = *(void *)&a2[v10[9]];
  *(void *)&a1[v10[10]] = *(void *)&a2[v10[10]];
  *(void *)&a1[v10[11]] = *(void *)&a2[v10[11]];
  *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
  a1[v10[13]] = a2[v10[13]];
  a1[v10[14]] = a2[v10[14]];
  a1[v10[15]] = a2[v10[15]];
  a1[v10[16]] = a2[v10[16]];
  a1[v10[17]] = a2[v10[17]];
  *(void *)&a1[v10[18]] = *(void *)&a2[v10[18]];
  a1[v10[19]] = a2[v10[19]];
  a1[v10[20]] = a2[v10[20]];
  a1[v10[21]] = a2[v10[21]];
  a1[v10[22]] = a2[v10[22]];
  *(_OWORD *)&a1[v10[23]] = *(_OWORD *)&a2[v10[23]];
  a1[v10[24]] = a2[v10[24]];
  a1[v10[25]] = a2[v10[25]];
  a1[v10[26]] = a2[v10[26]];
  a1[v10[27]] = a2[v10[27]];
  a1[v10[28]] = a2[v10[28]];
  a1[v10[29]] = a2[v10[29]];
  a1[v10[30]] = a2[v10[30]];
  a1[v10[31]] = a2[v10[31]];
  *(_OWORD *)&a1[v10[32]] = *(_OWORD *)&a2[v10[32]];
  *(void *)&a1[v10[33]] = *(void *)&a2[v10[33]];
  *(_OWORD *)&a1[v10[34]] = *(_OWORD *)&a2[v10[34]];
  *(void *)&a1[v10[35]] = *(void *)&a2[v10[35]];
  a1[v10[36]] = a2[v10[36]];
  a1[v10[37]] = a2[v10[37]];
  a1[v10[38]] = a2[v10[38]];
  return a1;
}

char *sub_191BAF680(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_191BAF3A4((uint64_t)a1);
    uint64_t v4 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_191CF33C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      long long v9 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v9;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  uint64_t v10 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v11 = v10[5];
  char v12 = &a1[v11];
  id v13 = &a2[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)char v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[8]] = *(void *)&a2[v10[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[9]] = *(void *)&a2[v10[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[10]] = *(void *)&a2[v10[10]];
  *(void *)&a1[v10[11]] = *(void *)&a2[v10[11]];
  uint64_t v21 = v10[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  a1[v10[13]] = a2[v10[13]];
  a1[v10[14]] = a2[v10[14]];
  a1[v10[15]] = a2[v10[15]];
  a1[v10[16]] = a2[v10[16]];
  a1[v10[17]] = a2[v10[17]];
  *(void *)&a1[v10[18]] = *(void *)&a2[v10[18]];
  swift_bridgeObjectRelease();
  a1[v10[19]] = a2[v10[19]];
  a1[v10[20]] = a2[v10[20]];
  a1[v10[21]] = a2[v10[21]];
  a1[v10[22]] = a2[v10[22]];
  uint64_t v26 = v10[23];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v10[24]] = a2[v10[24]];
  a1[v10[25]] = a2[v10[25]];
  a1[v10[26]] = a2[v10[26]];
  a1[v10[27]] = a2[v10[27]];
  a1[v10[28]] = a2[v10[28]];
  a1[v10[29]] = a2[v10[29]];
  a1[v10[30]] = a2[v10[30]];
  a1[v10[31]] = a2[v10[31]];
  *(_OWORD *)&a1[v10[32]] = *(_OWORD *)&a2[v10[32]];
  *(void *)&a1[v10[33]] = *(void *)&a2[v10[33]];
  uint64_t v31 = v10[34];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  *(void *)&a1[v10[35]] = *(void *)&a2[v10[35]];
  swift_bridgeObjectRelease();
  a1[v10[36]] = a2[v10[36]];
  a1[v10[37]] = a2[v10[37]];
  a1[v10[38]] = a2[v10[38]];
  return a1;
}

uint64_t sub_191BAF98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BAF9A0);
}

uint64_t sub_191BAF9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_191BAFA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BAFA20);
}

uint64_t sub_191BAFA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ControlDescriptorConfiguration()
{
  uint64_t result = qword_1EB449168;
  if (!qword_1EB449168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191BAFADC()
{
  uint64_t result = type metadata accessor for WidgetDescriptor(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191BAFB68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BAFB84()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  uint64_t v1 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_191CF8410;
  sub_191BAFC84(v0, v3 + v2);
  sub_191B5D22C();
  sub_191CF4738();
  return swift_bridgeObjectRelease();
}

uint64_t sub_191BAFC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BAFCE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t EnvironmentValues._localizationToken.getter()
{
  sub_191B4F420();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._localizationToken.setter()
{
  return sub_191CF4078();
}

uint64_t sub_191BAFDC0@<X0>(void *a1@<X8>)
{
  uint64_t v1 = qword_1EB44B708;
  unint64_t v2 = unk_1EB44B710;
  *a1 = qword_1EB44B708;
  a1[1] = v2;
  return sub_191B15F88(v1, v2);
}

uint64_t sub_191BAFDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191BB01F0();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

void (*EnvironmentValues._localizationToken.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_191B4F420();
  sub_191CF4068();
  *(_OWORD *)uint64_t v3 = *((_OWORD *)v3 + 1);
  return sub_191BAFEBC;
}

void sub_191BAFEBC(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  unint64_t v5 = v3[1];
  v3[2] = v4;
  v3[3] = v5;
  if (a2)
  {
    sub_191B15F88(v4, v5);
    sub_191CF4078();
    sub_191B1603C(*v3, v3[1]);
  }
  else
  {
    sub_191CF4078();
  }

  free(v3);
}

ValueMetadata *type metadata accessor for LocalizationTokenKey()
{
  return &type metadata for LocalizationTokenKey;
}

unint64_t sub_191BAFF70()
{
  unint64_t result = qword_1EB44BF78;
  if (!qword_1EB44BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF78);
  }
  return result;
}

unint64_t sub_191BAFFC8()
{
  unint64_t result = qword_1EB44BF88;
  if (!qword_1EB44BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF88);
  }
  return result;
}

unint64_t sub_191BB0020()
{
  unint64_t result = qword_1EB44BF70;
  if (!qword_1EB44BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF70);
  }
  return result;
}

uint64_t sub_191BB0074()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CC88 = result;
  return result;
}

uint64_t sub_191BB009C()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BE98);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CC70 = v0;
  *(void *)algn_1EB44CC78 = 0xD000000000000011;
  qword_1EB44CC80 = 0x8000000191D0ED50;
  return result;
}

uint64_t sub_191BB0114()
{
  if (qword_1EB44BCB0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BB0170()
{
  if (qword_1EB44BD08 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CC70;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191BB01F0()
{
  unint64_t result = qword_1E92E0A80;
  if (!qword_1E92E0A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A80);
  }
  return result;
}

uint64_t ControlWidgetTemplate.tint(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  swift_retain();
  sub_191BB03EC((uint64_t)sub_191BB0390, v2);

  return swift_release();
}

uint64_t sub_191BB02E8(unint64_t (**a1)(uint64_t a1), uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  swift_retain();
  uint64_t result = swift_release();
  *a1 = sub_191BB08A8;
  a1[1] = (unint64_t (*)(uint64_t))v4;
  return result;
}

uint64_t sub_191BB0358()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BB0390(unint64_t (**a1)(uint64_t a1))
{
  return sub_191BB02E8(a1, *(void *)(v1 + 16));
}

unint64_t sub_191BB0398(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  sub_191CF4DB8();
  return v2 | ((unint64_t)v3 << 32);
}

uint64_t sub_191BB03EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_191B54CBC();
  swift_retain();
  sub_191CF45E8();

  return swift_release();
}

uint64_t ControlWidgetTemplate.privacySensitive(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191BB0508(a1, a2, a3, (uint64_t)&unk_1EE2A5AE0, (uint64_t)sub_191BB04DC);
}

uint64_t sub_191BB04CC()
{
  return swift_deallocObject();
}

uint64_t sub_191BB04DC(uint64_t result)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t ControlWidgetTemplate.disabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191BB0508(a1, a2, a3, (uint64_t)&unk_1EE2A5B08, (uint64_t)sub_191BB05A4);
}

uint64_t sub_191BB0508(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = a1;
  sub_191BB03EC(a5, v7);

  return swift_release();
}

uint64_t sub_191BB0594()
{
  return swift_deallocObject();
}

uint64_t sub_191BB05A4(uint64_t result)
{
  *(unsigned char *)(result + 17) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t ControlWidgetTemplate.accessibilityIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_191BB03EC((uint64_t)sub_191BB0690, v4);

  return swift_release();
}

uint64_t sub_191BB0658()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191BB0690(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  return result;
}

uint64_t ControlWidgetTemplate.rasterizedImagesAllowed()()
{
  return sub_191BB03EC((uint64_t)sub_191BB06F8, 0);
}

uint64_t sub_191BB06F8(uint64_t result)
{
  *(unsigned char *)(result + 40) = 1;
  return result;
}

uint64_t sub_191BB0704()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_191BB0760(void *result, void (*a2)(long long *))
{
  uint64_t v2 = result[3];
  if (v2)
  {
    uint64_t v4 = (uint64_t)result;
    uint64_t v5 = result[4];
    __swift_project_boxed_opaque_existential_1(result, result[3]);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v9, v2, v5);
    a2(&v9);
    uint64_t v6 = *(void *)(v4 + 24);
    if (v6)
    {
      long long v11 = v9;
      v12[0] = *(_OWORD *)v10;
      *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)&v10[9];
      uint64_t v7 = *(void *)(v4 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v4, v6);
      unint64_t v8 = *(void (**)(long long *, uint64_t, uint64_t))(v7 + 32);
      sub_191B97EA0((uint64_t)v12 + 8, (uint64_t)v13);
      swift_retain();
      sub_191B97F08((uint64_t)v13);
      v8(&v11, v6, v7);
    }
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191BB0868()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_191BB08A0(void *a1)
{
  return sub_191BB0760(a1, *(void (**)(long long *))(v1 + 16));
}

unint64_t sub_191BB08A8(uint64_t a1)
{
  return sub_191BB0398(a1, *(void *)(v1 + 16));
}

ValueMetadata *_s24__Key_controlAccentColorVMa()
{
  return &_s24__Key_controlAccentColorVN;
}

void sub_191BB08C0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
}

uint64_t sub_191BB08D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191BB0934();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

unint64_t sub_191BB0934()
{
  unint64_t result = qword_1E92E3CB0;
  if (!qword_1E92E3CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E3CB8);
    sub_191BB09A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3CB0);
  }
  return result;
}

unint64_t sub_191BB09A8()
{
  unint64_t result = qword_1E92E3CC0;
  if (!qword_1E92E3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3CC0);
  }
  return result;
}

uint64_t _s9WidgetKit29AppIntentControlConfigurationV4bodyQrvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BB2F6C(v1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  sub_191C92C0C((uint64_t)v5, a1);
  uint64_t v6 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + v6) = &unk_1EE2A27C8;
  return result;
}

uint64_t AppIntentControlConfiguration.init<A>(kind:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = sub_191CF2C68();
  uint64_t v27 = v16;
  uint64_t v28 = v15;
  uint64_t v17 = sub_191B547F8();
  uint64_t v25 = v18;
  uint64_t v26 = v17;
  uint64_t v19 = *(void *)(a8 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a6;
  *((void *)v22 + 3) = a7;
  *((void *)v22 + 4) = a8;
  *((void *)v22 + 5) = a10;
  *((void *)v22 + 6) = a11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v22[v20], a3, a8);
  uint64_t v24 = &v22[v21];
  *(void *)uint64_t v24 = a4;
  *((void *)v24 + 1) = a5;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = v28;
  *(void *)(a9 + 24) = v27;
  *(void *)(a9 + 32) = v26;
  *(void *)(a9 + 40) = v25;
  *(void *)(a9 + 48) = &unk_1E92E3CD0;
  *(void *)(a9 + 56) = v22;
  *(unsigned char *)(a9 + 88) = 1;
  return result;
}

uint64_t sub_191BB0C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = v16;
  v8[20] = v17;
  v8[17] = a6;
  v8[18] = a8;
  v8[15] = a4;
  v8[16] = a5;
  v8[13] = a2;
  v8[14] = a3;
  v8[12] = a1;
  v8[21] = swift_task_alloc();
  uint64_t v9 = *(void *)(v16 - 8);
  v8[22] = v9;
  v8[23] = v9;
  v8[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ValueGenerator();
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[28] = AssociatedTypeWitness;
  v8[29] = *(void *)(AssociatedTypeWitness - 8);
  v8[30] = swift_task_alloc();
  sub_191CF5698();
  v8[31] = sub_191CF5688();
  uint64_t v13 = sub_191CF5648();
  v8[32] = v13;
  v8[33] = v12;
  return MEMORY[0x1F4188298](sub_191BB0E60, v13, v12);
}

uint64_t sub_191BB0E60()
{
  uint64_t v1 = (void *)v0[13];
  if (v1)
  {
    uint64_t v2 = v0[27];
    uint64_t v3 = v0[24];
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[19];
    (*(void (**)(uint64_t, void, uint64_t))(v0[23] + 16))(v3, v0[15], v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[34] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_191BB1074;
    uint64_t v8 = v0[30];
    uint64_t v9 = v0[25];
    uint64_t v10 = v0[14];
    return sub_191BB1674(v8, (uint64_t)v6, v10, v9);
  }
  else
  {
    swift_release();
    type metadata accessor for ControlError(0);
    sub_191BB2E10(&qword_1E92E3A70, (void (*)(uint64_t))type metadata accessor for ControlError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_191BB1074()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 216);
  uint64_t v4 = *(void *)(*v1 + 208);
  uint64_t v5 = *(void *)(*v1 + 200);
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 264);
  uint64_t v7 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v8 = sub_191BB13D8;
  }
  else {
    uint64_t v8 = sub_191BB120C;
  }
  return MEMORY[0x1F4188298](v8, v7, v6);
}

uint64_t sub_191BB120C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 128);
  swift_release();
  sub_191CF4708();
  v2(v1);
  sub_191CF46F8();
  sub_191B54CBC();
  sub_191CF46E8();
  if (*(void *)(v0 + 80))
  {
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v3 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 224);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v7 = *(void **)(v0 + 104);
    long long v8 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v8;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    sub_191B004A8((long long *)(v0 + 16), v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    sub_191B54DCC(v0 + 56);
    return sub_191CF5FC8();
  }
}

uint64_t sub_191BB13D8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191BB1478()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BB1518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[3];
  uint64_t v15 = v3[2];
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v3[4] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[4] - 8) + 80);
  uint64_t v9 = (uint64_t)v3 + v8;
  uint64_t v10 = (void *)((char *)v3 + ((*(void *)(*(void *)(v3[4] - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_191B17A68;
  return sub_191BB0C5C(a1, a2, a3, v9, v11, v12, v15, v7);
}

uint64_t sub_191BB1674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[3] = a3;
  v5[4] = v4;
  v5[2] = a1;
  v5[5] = *(void *)(a4 + 24);
  v5[6] = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v5[12] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v5[13] = v10;
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  void *v10 = v5;
  v10[1] = sub_191BB1858;
  return sub_191BD399C(v9, a2, v8, v11);
}

uint64_t sub_191BB1858()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BB1ED4;
  }
  else {
    uint64_t v2 = sub_191BB196C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BB196C()
{
  uint64_t v1 = v0[3];
  if (v1 == 1)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_191CF3858();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E92F2508);
    uint64_t v13 = sub_191CF3838();
    os_log_type_t v14 = sub_191CF5948();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_191AF4000, v13, v14, "Fetching preview value", v15, 2u);
      MEMORY[0x192FE5F00](v15, -1, -1);
    }
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[5];
    uint64_t v19 = v0[6];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v16, v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else if (v1)
  {
    return sub_191CF5FC8();
  }
  else
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_191CF3858();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2508);
    uint64_t v3 = sub_191CF3838();
    os_log_type_t v4 = sub_191CF5948();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_191AF4000, v3, v4, "Fetching current value", v5, 2u);
      MEMORY[0x192FE5F00](v5, -1, -1);
    }
    uint64_t v23 = v0[5];

    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 40) + **(int **)(v23 + 40));
    uint64_t v6 = (void *)swift_task_alloc();
    v0[15] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_191BB1D0C;
    uint64_t v7 = v0[12];
    uint64_t v8 = v0[9];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    return v22(v8, v7, v9, v10);
  }
}

uint64_t sub_191BB1D0C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BB1F44;
  }
  else {
    uint64_t v2 = sub_191BB1E20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BB1E20()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_191BB1ED4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB1F44()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[10];
  sub_191BB2F2C();
  uint64_t v5 = sub_191CF5338();
  uint64_t v7 = v6;
  id v8 = v1;
  sub_191BDA6B4(v5, v7, 1106, v1, 0xD00000000000002ALL, 0x8000000191D0EDF0);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void *AppIntentControlConfiguration.init(kind:intent:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v14 = sub_191CF2C68();
  uint64_t v16 = v15;
  uint64_t v17 = sub_191B547F8();
  uint64_t v19 = v18;
  uint64_t result = (void *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a7;
  result[5] = a9;
  result[6] = a3;
  result[7] = a4;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = v14;
  *(void *)(a8 + 24) = v16;
  *(void *)(a8 + 32) = v17;
  *(void *)(a8 + 40) = v19;
  *(void *)(a8 + 48) = &unk_1E92E3CE0;
  *(void *)(a8 + 56) = result;
  *(unsigned char *)(a8 + 88) = 1;
  return result;
}

uint64_t sub_191BB2140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a8;
  v8[20] = v14;
  v8[17] = a6;
  v8[18] = a7;
  v8[15] = a4;
  v8[16] = a5;
  v8[13] = a2;
  v8[14] = a3;
  v8[12] = a1;
  v8[21] = swift_task_alloc();
  v8[22] = *(void *)(a6 - 8);
  v8[23] = swift_task_alloc();
  sub_191CF5698();
  v8[24] = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  v8[25] = v11;
  v8[26] = v10;
  return MEMORY[0x1F4188298](sub_191BB2268, v11, v10);
}

uint64_t sub_191BB2268()
{
  uint64_t v1 = (void *)v0[13];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[27] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_191BB23EC;
    uint64_t v4 = v0[23];
    uint64_t v5 = v0[19];
    uint64_t v6 = v0[17];
    uint64_t v7 = v0[14];
    return sub_191BB2E58(v4, (uint64_t)v2, v7, v6, v5);
  }
  else
  {
    swift_release();
    type metadata accessor for ControlError(0);
    sub_191BB2E10(&qword_1E92E3A70, (void (*)(uint64_t))type metadata accessor for ControlError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_191BB23EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_191BB26E0;
  }
  else {
    uint64_t v5 = sub_191BB2528;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191BB2528()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 120);
  swift_release();
  sub_191CF4708();
  v2(v1);
  sub_191CF46F8();
  sub_191B54CBC();
  sub_191CF46E8();
  if (*(void *)(v0 + 80))
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v7 = *(void **)(v0 + 104);
    long long v8 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v8;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    sub_191B004A8((long long *)(v0 + 16), v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    sub_191B54DCC(v0 + 56);
    return sub_191CF5FC8();
  }
}

uint64_t sub_191BB26E0()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191BB2760()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BB2798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  uint64_t v12 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_191B0A348;
  return sub_191BB2140(a1, a2, a3, v12, v11, v8, v9, v10);
}

uint64_t sub_191BB2888()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of AppIntentControlValueProvider.previewValue(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AppIntentControlValueProvider.currentValue(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t destroy for ControlViewSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 88))
  {
    return swift_release();
  }
  else
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
}

uint64_t initializeWithCopy for ControlViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  char v7 = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v6;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    swift_retain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 48, a2 + 48);
  }
  *(unsigned char *)(a1 + 88) = v7;
  return a1;
}

uint64_t assignWithCopy for ControlViewSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 48);
    if (*(unsigned char *)(a2 + 88))
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 88) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 48, a2 + 48);
      *(unsigned char *)(a1 + 88) = 0;
    }
  }
  return a1;
}

uint64_t sub_191BB2C20(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ControlViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 48);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlViewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppIntentControlConfiguration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191BB2DC8()
{
  return sub_191BB2E10((unint64_t *)&qword_1EB449160, (void (*)(uint64_t))type metadata accessor for ControlDescriptorConfiguration);
}

uint64_t sub_191BB2E10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BB2E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = *(void *)(a5 + 8);
  void *v10 = v5;
  v10[1] = sub_191B0A348;
  return sub_191BD399C(a1, a2, a4, v11);
}

uint64_t type metadata accessor for ValueGenerator()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_191BB2F2C()
{
  unint64_t result = qword_1EB44C740;
  if (!qword_1EB44C740)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44C740);
  }
  return result;
}

uint64_t sub_191BB2F6C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191BB2FC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191BB3124(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191BB333CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

void WidgetPreviewContextKey.family.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t WidgetPreviewContextKey.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetPreviewContextKey(0) + 20);
  uint64_t v4 = sub_191CF3178();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetPreviewContextKey(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3DA8);
}

void *WidgetPreviewContextKey.configuration.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetPreviewContextKey(0) + 24));
  id v2 = v1;
  return v1;
}

uint64_t sub_191BB343C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  __swift_allocate_value_buffer(v0, qword_1E92E3D80);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E3D80);
  uint64_t v2 = type metadata accessor for WidgetPreviewContextKey(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t static WidgetPreviewContextKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2C40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E3D80);
  swift_beginAccess();
  return sub_191BB3564(v3, a1);
}

uint64_t sub_191BB3564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static WidgetPreviewContextKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1E92E2C40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E3D80);
  swift_beginAccess();
  sub_191BB366C(a1, v3);
  swift_endAccess();
  return sub_191BB36D4(a1);
}

uint64_t sub_191BB366C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BB36D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static WidgetPreviewContextKey.defaultValue.modify())()
{
  if (qword_1E92E2C40 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92E3D80);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t WidgetPreviewContextKey.contentCategory.getter()
{
  return 0xD000000000000018;
}

unint64_t WidgetPreviewContentCategory.rawValue.getter()
{
  return 0xD000000000000018;
}

uint64_t WidgetPreviewContextKey.previewContentCategory.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0EE20);
}

uint64_t sub_191BB3820@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2C40 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3D98);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E3D80);
  swift_beginAccess();
  return sub_191BB3564(v3, a1);
}

uint64_t WidgetPreviewContentCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_191BB3908()
{
  return sub_191CF64C8();
}

uint64_t sub_191BB3960()
{
  return sub_191CF5388();
}

uint64_t sub_191BB397C()
{
  return sub_191CF64C8();
}

uint64_t sub_191BB39D0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_191BB3A24(void *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000191D0C4A0;
}

uint64_t WidgetPreviewContext.subscript.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WidgetPreviewContextKey(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 != a1) {
    return sub_191CF41A8();
  }
  char v8 = *v1;
  uint64_t v9 = type metadata accessor for WidgetPreviewContext(0);
  unsigned int v10 = &v1[*(int *)(v9 + 20)];
  int v11 = &v6[*(int *)(a1 + 20)];
  uint64_t v12 = sub_191CF3178();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  int v13 = *(void **)&v1[*(int *)(v9 + 24)];
  *uint64_t v6 = v8;
  *(void *)&v6[*(int *)(a1 + 24)] = v13;
  swift_getAssociatedTypeWitness();
  id v14 = v13;
  return swift_dynamicCast();
}

uint64_t type metadata accessor for WidgetPreviewContext(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3DB8);
}

uint64_t WidgetPreviewContext.init(family:date:configuration:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for WidgetPreviewContext(0);
  char v8 = &a4[*(int *)(v7 + 20)];
  uint64_t v9 = sub_191CF3178();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)&a4[*(int *)(v7 + 24)] = a3;
  return result;
}

uint64_t WidgetPreviewContext.init(family:)@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = type metadata accessor for WidgetPreviewContext(0);
  uint64_t result = sub_191CF3168();
  *a2 = v3;
  *(void *)&a2[*(int *)(v4 + 24)] = 0;
  return result;
}

unint64_t sub_191BB3CB8()
{
  unint64_t result = qword_1E92E3DA0;
  if (!qword_1E92E3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3DA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetPreviewContextKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewContextKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

unsigned char *storeEnumTagSinglePayload for WidgetPreviewContentCategory(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191BB3DF8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetPreviewContentCategory()
{
  return &type metadata for WidgetPreviewContentCategory;
}

uint64_t *_s9WidgetKit23WidgetPreviewContextKeyVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_191CF3178();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + v11) = (uint64_t)v12;
    id v13 = v12;
  }
  return v4;
}

void _s9WidgetKit23WidgetPreviewContextKeyVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 24));
}

unsigned char *_s9WidgetKit23WidgetPreviewContextKeyVwcp_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_191CF3178();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v11;
  id v12 = v11;
  return a1;
}

unsigned char *_s9WidgetKit23WidgetPreviewContextKeyVwca_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_191CF3178();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)&a1[v10];
  id v12 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v12;
  id v13 = v12;

  return a1;
}

unsigned char *_s9WidgetKit23WidgetPreviewContextKeyVwtk_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_191CF3178();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *_s9WidgetKit23WidgetPreviewContextKeyVwta_0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_191CF3178();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)&a1[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetPreviewContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BB422C);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BB4314);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF3178();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_191BB43D8()
{
  uint64_t result = sub_191CF3178();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t View.controlWidgetStatus(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191BB47C0(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetStatusModifier, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t View.controlWidgetStatus(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191BB493C(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetStatusModifier, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t View.controlWidgetStatus<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_191BB4A60(a1, a2, a3, a4, a5, type metadata accessor for ControlWidgetStatusModifier, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t sub_191BB44FC(uint64_t *a1)
{
  uint64_t v2 = sub_191CF4058();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ControlWidgetStatusModifier(0);
  sub_191BDC4F0((uint64_t)v5);
  uint64_t v6 = sub_191CF4B38();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_191BB4628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  sub_191BB5AC0(v7, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ControlWidgetStatusModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_191BB5B40((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for ControlWidgetStatusModifier);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3, a1, v10);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E08);
  unint64_t v12 = (uint64_t (**)(uint64_t))(a3 + *(int *)(result + 36));
  *unint64_t v12 = sub_191BB5A94;
  v12[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t View.controlWidgetActionHint(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191BB47C0(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetActionHintModifier, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_191BB47C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  return sub_191BB47E4(a1, a2, a3 & 1, a4, a5, a6, a7, a8);
}

uint64_t sub_191BB47E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  uint64_t v20 = a8;
  uint64_t v14 = a7(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v19 - v15);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (char *)v16 + *(int *)(v14 + 20);
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  v17[16] = a3 & 1;
  *((void *)v17 + 3) = a4;
  sub_191BB4E38(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  MEMORY[0x192FE3AA0](v16, a5, v14, a6);
  return sub_191BB5C5C((uint64_t)v16, v20);
}

uint64_t View.controlWidgetActionHint(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191BB493C(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetActionHintModifier, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_191BB493C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_191CF4B78();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_191BB47E4(v12, v13, v15 & 1, v17, a5, a6, a7, a8);
  sub_191B5D42C(v12, v14, v16);

  return swift_bridgeObjectRelease();
}

uint64_t View.controlWidgetActionHint<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_191BB4A60(a1, a2, a3, a4, a5, type metadata accessor for ControlWidgetActionHintModifier, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_191BB4A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v12 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_191CF4B88();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_191BB47E4(v13, v14, v16 & 1, v18, a2, a4, a6, a7);
  sub_191B5D42C(v13, v15, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_191BB4B98(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (void (*)(uint64_t))type metadata accessor for ControlWidgetStatusModifier, &qword_1E92E3DC8, (void (*)(uint64_t))type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t type metadata accessor for ControlWidgetStatusModifier(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3DF0);
}

uint64_t sub_191BB4BF0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (void (*)(uint64_t))type metadata accessor for ControlWidgetStatusModifier, &qword_1E92E3DC8, (void (*)(uint64_t))type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t sub_191BB4C28(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (void (*)(uint64_t))type metadata accessor for ControlWidgetActionHintModifier, &qword_1E92E3DD0, (void (*)(uint64_t))type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3, void (*a4)(uint64_t))
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ControlWidgetActionHintModifier(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E3DE0);
}

uint64_t sub_191BB4D18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BB4D60(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (void (*)(uint64_t))type metadata accessor for ControlWidgetActionHintModifier, &qword_1E92E3DD0, (void (*)(uint64_t))type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3, void (*a4)(uint64_t))
{
  return swift_getWitnessTable();
}

uint64_t sub_191BB4E38(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_191BB4E54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191BB4EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_1);
}

uint64_t sub_191BB4ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1);
}

void sub_191BB4EF0()
{
  if (!qword_1E92E27F8)
  {
    sub_191CF4058();
    unint64_t v0 = sub_191CF39A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92E27F8);
    }
  }
}

uint64_t *sub_191BB4F48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    sub_191BB4E38(v12, v13, v14);
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
    *((void *)v10 + 3) = *((void *)v11 + 3);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191BB5098(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_191CF4058();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_191B5D42C(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));

  return swift_bridgeObjectRelease();
}

void *sub_191BB5148(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_191CF4058();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7);
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_191BB4E38(v10, v11, v12);
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  *((void *)v8 + 3) = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_191BB5248(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191BB4E54((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7);
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_191BB4E38(v10, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *((void *)v8 + 1);
  char v15 = v8[16];
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  sub_191B5D42C(v13, v14, v15);
  *((void *)v8 + 3) = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_191BB5370(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  return a1;
}

char *sub_191BB544C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191BB4E54((uint64_t)a1);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  LOBYTE(v8) = v10[16];
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *((void *)v9 + 1);
  char v13 = v9[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v8;
  sub_191B5D42C(v11, v12, v13);
  *((void *)v9 + 3) = *((void *)v10 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191BB555C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BB5570);
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191BB563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BB5650);
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

void sub_191BB5718()
{
  sub_191BB4EF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_191BB57AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BB57C8(uint64_t a1)
{
  uint64_t v2 = sub_191CF4058();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ControlWidgetActionHintModifier(0);
  sub_191BDC4F0((uint64_t)v5);
  uint64_t v6 = sub_191CF4B38();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_191BB58F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  sub_191BB5AC0(v7, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ControlWidgetActionHintModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_191BB5B40((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for ControlWidgetActionHintModifier);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3, a1, v10);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E18);
  uint64_t v12 = (uint64_t (**)(uint64_t))(a3 + *(int *)(result + 36));
  *uint64_t v12 = sub_191BB5BA8;
  v12[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t sub_191BB5A60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BB5A7C()
{
  return objectdestroyTm(type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t sub_191BB5A94(uint64_t a1)
{
  return sub_191BB5BD4(a1, type metadata accessor for ControlWidgetStatusModifier, (uint64_t (*)(uint64_t, uint64_t))sub_191BB44FC);
}

uint64_t sub_191BB5AC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BB5B28()
{
  return objectdestroyTm(type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_191BB5B40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BB5BA8(uint64_t a1)
{
  return sub_191BB5BD4(a1, type metadata accessor for ControlWidgetActionHintModifier, (uint64_t (*)(uint64_t, uint64_t))sub_191BB57C8);
}

uint64_t sub_191BB5BD4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_191BB5C5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191BB5CBC()
{
  return sub_191BB5D2C(&qword_1E92E3E20, &qword_1E92E3E08, &qword_1E92E3E28, &qword_1E92E3E00);
}

uint64_t sub_191BB5CF4()
{
  return sub_191BB5D2C(&qword_1E92E3E40, &qword_1E92E3E18, &qword_1E92E3E48, &qword_1E92E3E10);
}

uint64_t sub_191BB5D2C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_191B00398(a3, a4);
    sub_191B00398(&qword_1E92E3E30, &qword_1E92E3E38);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191BB5DF0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8410;
  uint64_t v1 = (void *)*MEMORY[0x1E4F24610];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = 0x8000;
  id v2 = v1;
  return sub_191B2D3B8(inited);
}

uint64_t sub_191BB5E64@<X0>(uint64_t a1@<X8>)
{
  return sub_191BB5E7C(MEMORY[0x1E4F3D5B8], a1);
}

uint64_t sub_191BB5E70@<X0>(uint64_t a1@<X8>)
{
  return sub_191BB5E7C(MEMORY[0x1E4F3D560], a1);
}

uint64_t sub_191BB5E7C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_191CF43A8();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(a2, v3, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t type metadata accessor for TightLeadingFontDefinition()
{
  return self;
}

uint64_t sub_191BB5F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191CF4398();
  uint64_t result = sub_191B3BC78(a1, v4);
  if (v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_191CF43A8();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    return v10(a2, a1, v9);
  }
  else
  {
    unint64_t v7 = result - 1;
    if (result < 1)
    {
      uint64_t v11 = sub_191CF43A8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
    }
    else
    {
      if (v7 >= *(void *)(v4 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = sub_191CF43A8();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, v4+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80))+ *(void *)(*(void *)(v8 - 8) + 72) * v7, v8);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for ContentSizeCategoryDecrementingFontDefinition()
{
  return self;
}

uint64_t sub_191BB60E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191CF4398();
  uint64_t result = sub_191B3BC78(a1, v4);
  if ((v6 & 1) != 0 || ((uint64_t v7 = *(void *)(v4 + 16), v8 = result + 1, result < v7) ? (v9 = v8 == v7) : (v9 = 1), v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_191CF43A8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    return v11(a2, a1, v10);
  }
  else if (v8 >= v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = sub_191CF43A8();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a2, v4+ ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))+ *(void *)(*(void *)(v12 - 8) + 72) * v8, v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ContentSizeCategoryIncrementingFontDefinition()
{
  return self;
}

double sub_191BB6234(char a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  double v9 = -3.0;
  if (v8 != *MEMORY[0x1E4F3D588])
  {
    double v9 = -2.0;
    if (v8 != *MEMORY[0x1E4F3D5C0])
    {
      double v9 = -1.0;
      if (v8 != *MEMORY[0x1E4F3D5C8])
      {
        double v9 = 0.0;
        if (v8 != *MEMORY[0x1E4F3D5B8])
        {
          double v9 = 2.0;
          if (v8 != *MEMORY[0x1E4F3D580])
          {
            double v9 = 4.0;
            if (v8 != *MEMORY[0x1E4F3D590])
            {
              double v9 = 6.0;
              if (v8 != *MEMORY[0x1E4F3D560])
              {
                double v9 = 10.0;
                if (v8 != *MEMORY[0x1E4F3D5A0])
                {
                  double v9 = 14.0;
                  if (v8 != *MEMORY[0x1E4F3D598])
                  {
                    double v9 = 18.0;
                    if (v8 != *MEMORY[0x1E4F3D5A8])
                    {
                      double v9 = 22.0;
                      if (v8 != *MEMORY[0x1E4F3D570])
                      {
                        double v9 = 26.0;
                        if (v8 != *MEMORY[0x1E4F3D578])
                        {
                          (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, 26.0);
                          double v9 = 0.0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v9 + dbl_191CFED38[a1];
}

uint64_t sub_191BB6480(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3E130]
    || v6 == *MEMORY[0x1E4F3E148]
    || v6 == *MEMORY[0x1E4F3E150]
    || v6 == *MEMORY[0x1E4F3E158])
  {
    goto LABEL_30;
  }
  if (v6 == *MEMORY[0x1E4F3E188])
  {
    sub_191CF4A68();
    return v10;
  }
  BOOL v11 = v6 == *MEMORY[0x1E4F3E138] || v6 == *MEMORY[0x1E4F3E140];
  BOOL v12 = v11 || v6 == *MEMORY[0x1E4F3E160];
  BOOL v13 = v12 || v6 == *MEMORY[0x1E4F3E178];
  BOOL v14 = v13 || v6 == *MEMORY[0x1E4F3E168];
  if (v14 || v6 == *MEMORY[0x1E4F3E170])
  {
LABEL_30:
    sub_191CF4A58();
    return v10;
  }
  sub_191CF4A58();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v18;
}

uint64_t type metadata accessor for iOSLikeFontDefinition()
{
  return self;
}

uint64_t sub_191BB6684@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF4008();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191BB66B4()
{
  return sub_191CF4018();
}

uint64_t sub_191BB66DC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 96) = a2;
  *(void *)(v3 + 104) = v2;
  *(void *)(v3 + 88) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = sub_191CF5698();
  *(void *)(v3 + 128) = sub_191CF5688();
  *(unsigned char *)(v3 + 328) = *(unsigned char *)(v2 + 32);
  uint64_t v4 = *(int **)(v2 + 88);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(v2 + 120);
  *(unsigned char *)(v3 + 329) = *(unsigned char *)(v2 + 136);
  uint64_t v5 = *(void *)(v2 + 176);
  *(void *)(v3 + 168) = v5;
  int v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 176) = v6;
  *int v6 = v3;
  v6[1] = sub_191BB6828;
  return v8(v5);
}

uint64_t sub_191BB6828(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BB7294, v5, v4);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v3[17] + *(int *)v3[17]);
    int v6 = (void *)swift_task_alloc();
    v3[25] = v6;
    *int v6 = v3;
    v6[1] = sub_191BB69F8;
    uint64_t v7 = v3[21];
    return v9(v7);
  }
}

uint64_t sub_191BB69F8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v6;
    int v8 = sub_191BB7300;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v4[27] = a1;
    uint64_t v11 = sub_191CF5648();
    uint64_t v10 = v12;
    v4[28] = v11;
    v4[29] = v12;
    int v8 = sub_191BB6B88;
    uint64_t v9 = v11;
  }
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_191BB6B88()
{
  uint64_t v1 = v0[13].i64[1];
  uint64_t v2 = v0[11].i64[1];
  uint64_t v3 = (int8x16_t *)swift_task_alloc();
  v3[1] = vextq_s8(v0[6], v0[6], 8uLL);
  v0[15].i64[0] = sub_191BB8DBC(v2, v1, (void (*)(uint64_t, uint64_t *))sub_191BB809C, (uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15].i64[1] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_191BB6C94;
  uint64_t v5 = v0[6].i64[0];
  uint64_t v6 = v0[6].i64[1];
  return sub_191BB80A4(v6, v5);
}

uint64_t sub_191BB6C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  uint64_t v5 = (void *)*v3;
  v4[32] = a2;
  v4[33] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4[28];
    uint64_t v7 = v4[29];
    return MEMORY[0x1F4188298](sub_191BB7378, v6, v7);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v4[34] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_191BB6E10;
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[13];
    return sub_191BB86CC(v10, v9);
  }
}

uint64_t sub_191BB6E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[6] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[9] = v2;
  uint64_t v5 = (void *)*v3;
  v4[35] = a2;
  v4[36] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4[28];
    uint64_t v7 = v4[29];
    return MEMORY[0x1F4188298](sub_191BB73E4, v6, v7);
  }
  else
  {
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(v4[19] + *(int *)v4[19]);
    uint64_t v8 = (void *)swift_task_alloc();
    v4[37] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_191BB6FE0;
    uint64_t v9 = v4[21];
    uint64_t v10 = v4[14];
    return v12(v10, v9);
  }
}

uint64_t sub_191BB6FE0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[28];
    uint64_t v4 = v2[29];
    uint64_t v5 = sub_191BB7450;
  }
  else
  {
    uint64_t v6 = v2[3];
    v2[39] = v2[7];
    v2[40] = v6;
    uint64_t v3 = v2[28];
    uint64_t v4 = v2[29];
    uint64_t v5 = sub_191BB7128;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_191BB7128()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v13 = *(void *)(v0 + 280);
  uint64_t v14 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 240);
  char v4 = *(unsigned char *)(v0 + 329);
  char v15 = *(unsigned char *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void **)(v0 + 88);
  swift_release();
  uint64_t v7 = (int *)type metadata accessor for ControlTemplatePicker(0);
  uint64_t v8 = (uint64_t)v6 + v7[7];
  uint64_t v9 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)((char *)v6 + v7[11]);
  void *v10 = 0;
  v10[1] = 0;
  *uint64_t v6 = v3;
  v6[1] = v1;
  v6[2] = v2;
  v6[3] = v14;
  void v6[4] = v13;
  *((unsigned char *)v6 + v7[8]) = v4;
  sub_191B28FA4(v5, v8, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v6 + v7[9]) = 0;
  *((unsigned char *)v6 + v7[10]) = v15;
  swift_bridgeObjectRelease();
  void *v10 = 0;
  v10[1] = 0;
  *((unsigned char *)v6 + v7[12]) = 0;
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_191BB7294()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB7300()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB7378()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB73E4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB7450()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB74BC@<X0>(char *a1@<X0>, unint64_t *a2@<X1>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v121 = a4;
  uint64_t v119 = type metadata accessor for ControlTemplatePicker.Option(0);
  MEMORY[0x1F4188790](v119);
  uint64_t v120 = (uint64_t *)((char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v118 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v95 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v131 = (uint64_t)&v95 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v115 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v109 = (char *)&v95 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v95 - v20;
  uint64_t v22 = sub_191CF4058();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v99 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v100 = (char *)&v95 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v95 - v28;
  uint64_t v30 = sub_191CF4898();
  uint64_t v132 = *(void *)(v30 - 8);
  uint64_t v133 = v30;
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v114 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v124 = (char *)&v95 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v95 - v35;
  unint64_t v98 = *a2;
  uint64_t v104 = a2[1];
  uint64_t v103 = a2[2];
  unint64_t v102 = a2[3];
  uint64_t v101 = a2[4];
  uint64_t v113 = a2[5];
  uint64_t v112 = a2[6];
  unint64_t v111 = a2[7];
  uint64_t v110 = a2[8];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v134 = a1;
  unint64_t v135 = KeyPath;
  LOBYTE(v136) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD0);
  swift_allocObject();
  uint64_t v122 = a1;
  uint64_t v38 = v36;
  swift_retain_n();
  uint64_t v116 = KeyPath;
  swift_retain();
  sub_191CF4558();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v130 = a3;
  uint64_t v127 = v39;
  uint64_t v128 = v23 + 16;
  v39(v29, a3, v22);
  uint64_t v129 = v29;
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191CF4758();
  uint64_t v40 = sub_191CF47A8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v125 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  uint64_t v126 = v41 + 48;
  int v42 = v125(v21, 1, v40);
  uint64_t v96 = v40;
  if (v42 == 1)
  {
    sub_191B01770((uint64_t)v21, &qword_1E92E2338);
    uint64_t v108 = 0;
    uint64_t v107 = 0;
  }
  else
  {
    uint64_t v43 = (void *)sub_191CF4798();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v40);
    id v44 = objc_msgSend(v43, sel_string);

    uint64_t v108 = sub_191CF5338();
    uint64_t v107 = v45;
  }
  sub_191CF4878();
  uint64_t v46 = sub_191CF4868();
  uint64_t v47 = *(void *)(v46 - 8);
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v46);
  uint64_t v105 = v46;
  uint64_t v123 = v47;
  if (v48 == 1)
  {
    sub_191B01770((uint64_t)v13, qword_1EB4496F8);
  }
  else
  {
    char v49 = sub_191CF4858();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v46);
    if (v49)
    {
      sub_191CF4878();
      goto LABEL_9;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v131, 1, 1, v46);
LABEL_9:
  uint64_t v50 = v100;
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  uint64_t v51 = v127;
  uint64_t v117 = v38;
  uint64_t v106 = v41;
  if (v98)
  {
    sub_191CF4DB8();
    uint64_t v100 = (char *)(v52 | ((unint64_t)v53 << 32));
    unint64_t v98 = v54 | ((unint64_t)v55 << 32);
    uint64_t v56 = v99;
    v51(v99, v50, v22);
    int v97 = 0;
  }
  else
  {
    uint64_t v56 = v99;
    v127(v99, v50, v22);
    sub_191B163D4();
    sub_191CF4068();
    uint64_t v100 = v134;
    unint64_t v98 = v135;
    int v97 = v136;
  }
  id v57 = *(void (**)(char *, uint64_t))(v23 + 8);
  v57(v56, v22);
  v57(v50, v22);
  uint64_t v58 = v104;
  uint64_t v59 = v103;
  uint64_t v134 = (char *)v104;
  unint64_t v135 = v103;
  char v60 = v102;
  uint64_t v61 = v101;
  unint64_t v136 = v102;
  uint64_t v137 = v101;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD8);
  swift_allocObject();
  sub_191BB92FC(v58, v59, v60, v61);
  sub_191BB92FC(v58, v59, v60, v61);
  sub_191CF4558();
  v51(v129, v130, v22);
  sub_191CF44F8();
  long long v62 = v124;
  sub_191CF4528();
  swift_release();
  sub_191BB9340(v58, v59, v60, v61);
  uint64_t v63 = (uint64_t)v109;
  sub_191CF4758();
  uint64_t v64 = v132 + 8;
  uint64_t v124 = *(char **)(v132 + 8);
  ((void (*)(char *, uint64_t))v124)(v62, v133);
  uint64_t v65 = v96;
  uint64_t v66 = v22;
  if (v125((char *)v63, 1, v96) == 1)
  {
    sub_191B01770(v63, &qword_1E92E2338);
    uint64_t v109 = 0;
    uint64_t v104 = 0;
  }
  else
  {
    long long v67 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v63, v65);
    id v68 = objc_msgSend(v67, sel_string);

    uint64_t v109 = (char *)sub_191CF5338();
    uint64_t v104 = v69;
  }
  uint64_t v70 = (uint64_t)v115;
  uint64_t v71 = v113;
  uint64_t v72 = v112;
  uint64_t v134 = (char *)v113;
  unint64_t v135 = v112;
  char v73 = v111;
  uint64_t v74 = v110;
  unint64_t v136 = v111;
  uint64_t v137 = v110;
  swift_allocObject();
  sub_191BB92FC(v71, v72, v73, v74);
  sub_191BB92FC(v71, v72, v73, v74);
  sub_191CF4558();
  v127(v129, v130, v66);
  sub_191CF44F8();
  uint64_t v75 = v114;
  sub_191CF4528();
  swift_release();
  sub_191BB9340(v71, v72, v73, v74);
  sub_191CF4758();
  ((void (*)(char *, uint64_t))v124)(v75, v133);
  int v76 = v125((char *)v70, 1, v65);
  uint64_t v132 = v64;
  if (v76 == 1)
  {
    sub_191B01770(v70, &qword_1E92E2338);
    uint64_t v77 = 0;
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v79 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v70, v65);
    id v80 = objc_msgSend(v79, sel_string);

    uint64_t v77 = sub_191CF5338();
    uint64_t v78 = v81;
  }
  uint64_t v82 = v123;
  uint64_t v83 = v131;
  uint64_t v84 = v118;
  sub_191B98014(v131, v118);
  uint64_t v85 = (int *)v119;
  uint64_t v86 = v120;
  uint64_t v87 = (uint64_t)v120 + *(int *)(v119 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v87, 1, 1, v105);
  uint64_t v88 = (char *)v86 + v85[6];
  *(void *)uint64_t v88 = 0;
  *((void *)v88 + 1) = 0;
  v88[16] = 1;
  uint64_t v89 = (uint64_t *)((char *)v86 + v85[7]);
  void *v89 = 0;
  v89[1] = 0;
  uint64_t v90 = (uint64_t *)((char *)v86 + v85[8]);
  *uint64_t v90 = 0;
  v90[1] = 0;
  uint64_t v91 = v107;
  *uint64_t v86 = v108;
  v86[1] = v91;
  sub_191B28FA4(v84, v87, qword_1EB4496F8);
  unint64_t v92 = v98;
  *(void *)uint64_t v88 = v100;
  *((void *)v88 + 1) = v92;
  v88[16] = v97;
  swift_bridgeObjectRelease();
  uint64_t v93 = v104;
  void *v89 = v109;
  v89[1] = v93;
  swift_bridgeObjectRelease();
  *uint64_t v90 = v77;
  v90[1] = v78;
  sub_191B5A768((uint64_t)v86, v121);
  swift_release();
  swift_release();
  sub_191B01770(v83, qword_1EB4496F8);
  return ((uint64_t (*)(char *, uint64_t))v124)(v117, v133);
}

uint64_t sub_191BB809C@<X0>(char *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191BB74BC(a1, a2, *(char **)(v3 + 24), a3);
}

uint64_t sub_191BB80A4(uint64_t a1, uint64_t a2)
{
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  v2[4] = swift_task_alloc();
  uint64_t v4 = sub_191CF4058();
  v2[5] = v4;
  void v2[6] = *(void *)(v4 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v5 = sub_191CF4898();
  v2[8] = v5;
  v2[9] = *(void *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_191CF5698();
  v2[12] = sub_191CF5688();
  uint64_t v6 = *(int **)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v2[13] = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191BB8280;
  return v10(v7);
}

uint64_t sub_191BB8280(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_191CF5648();
  if (v1) {
    uint64_t v6 = sub_191BB863C;
  }
  else {
    uint64_t v6 = sub_191BB83E0;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_191BB83E0()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  swift_release();
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E20F0);
  swift_allocObject();
  swift_retain();
  sub_191CF4558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191CF4758();
  uint64_t v7 = sub_191CF47A8();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[4];
  if (v9 == 1)
  {
    (*(void (**)(void, uint64_t))(v12 + 8))(v0[10], v11);
    swift_release();
    sub_191B01770(v13, &qword_1E92E2338);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    id v17 = objc_msgSend(v16, sel_string);

    uint64_t v14 = sub_191CF5338();
    uint64_t v15 = v18;
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v19(v14, v15);
}

uint64_t sub_191BB863C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB86CC(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_191CF4058();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_191CF4898();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_191CF5698();
  v2[12] = sub_191CF5688();
  uint64_t v6 = sub_191CF5648();
  v2[13] = v6;
  v2[14] = v5;
  return MEMORY[0x1F4188298](sub_191BB884C, v6, v5);
}

uint64_t sub_191BB884C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(int **)(v1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 176);
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_191BB8994;
    return v7(v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void, void))v0[1];
    return v6(0, 0);
  }
}

uint64_t sub_191BB8994(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 128) = a1;
  *(void *)(v4 + 136) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 104);
  if (v1) {
    uint64_t v7 = sub_191BB8D30;
  }
  else {
    uint64_t v7 = sub_191BB8AD8;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_191BB8AD8()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[4];
  swift_release();
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E20F0);
  swift_allocObject();
  swift_retain();
  sub_191CF4558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191CF4758();
  uint64_t v7 = sub_191CF47A8();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[9];
  uint64_t v12 = v0[10];
  uint64_t v13 = v0[5];
  if (v9 == 1)
  {
    (*(void (**)(void, uint64_t))(v12 + 8))(v0[11], v11);
    swift_release();
    sub_191B01770(v13, &qword_1E92E2338);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    id v17 = objc_msgSend(v16, sel_string);

    uint64_t v14 = sub_191CF5338();
    uint64_t v15 = v18;
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v19(v14, v15);
}

uint64_t sub_191BB8D30()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB8DBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t *), uint64_t a4)
{
  long long v62 = a3;
  uint64_t v63 = a4;
  uint64_t v6 = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  int v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (uint64_t)&v51 - v10;
  unint64_t v11 = *(void *)(a2 + 16);
  unint64_t v68 = *(void *)(a1 + 16);
  if (v11 >= v68) {
    int64_t v12 = v68;
  }
  else {
    int64_t v12 = v11;
  }
  uint64_t v80 = MEMORY[0x1E4FBC860];
  sub_191AFBA38(0, v12, 0);
  uint64_t v69 = v80;
  int64_t v60 = v12;
  uint64_t v53 = a1;
  uint64_t v52 = a2;
  if (v12)
  {
    uint64_t v59 = (void *)(a1 + 32);
    id v57 = &v71;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v14 = 0;
    uint64_t v15 = (uint64_t *)(a2 + 48);
    unint64_t v58 = v11;
    long long v67 = v9;
    while (v68 != v14)
    {
      if (v14 >= v68)
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (v11 == v14) {
        break;
      }
      if (v14 >= v11) {
        goto LABEL_33;
      }
      uint64_t v16 = v59[v14];
      uint64_t v17 = v15[5];
      uint64_t v66 = v15[6];
      uint64_t v19 = v15[3];
      uint64_t v18 = v15[4];
      uint64_t v21 = v15[1];
      uint64_t v20 = v15[2];
      uint64_t v22 = *(v15 - 1);
      uint64_t v23 = *v15;
      uint64_t v24 = *(v15 - 2);
      uint64_t v70 = v16;
      uint64_t v71 = v24;
      uint64_t v72 = v22;
      uint64_t v73 = v23;
      uint64_t v74 = v21;
      uint64_t v75 = v20;
      uint64_t v76 = v19;
      uint64_t v77 = v18;
      uint64_t v78 = v17;
      uint64_t v79 = v66;
      swift_retain();
      swift_retain();
      sub_191BB92FC(v22, v23, v21, v20);
      uint64_t result = sub_191BB92FC(v19, v18, v17, v66);
      if (!v16) {
        break;
      }
      v62(v16, v57);
      uint64_t v25 = v72;
      uint64_t v26 = v73;
      char v27 = v74;
      uint64_t v28 = v75;
      uint64_t v29 = v77;
      uint64_t v65 = v78;
      uint64_t v66 = v76;
      unint64_t v64 = v79;
      swift_release();
      swift_release();
      sub_191BB9340(v25, v26, v27, v28);
      sub_191BB9340(v66, v29, v65, v64);
      uint64_t v30 = v69;
      uint64_t v80 = v69;
      unint64_t v32 = *(void *)(v69 + 16);
      unint64_t v31 = *(void *)(v69 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_191AFBA38(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v80;
      }
      ++v14;
      *(void *)(v30 + 16) = v32 + 1;
      unint64_t v33 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      uint64_t v69 = v30;
      uint64_t result = sub_191B5A768((uint64_t)v67, v30 + v33 + *(void *)(v61 + 72) * v32);
      v15 += 9;
      unint64_t v11 = v58;
      if (v60 == v14) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v14 = 0;
LABEL_16:
    if (v14 <= v68) {
      unint64_t v34 = v68;
    }
    else {
      unint64_t v34 = v14;
    }
    if (v14 <= v11) {
      unint64_t v35 = v11;
    }
    else {
      unint64_t v35 = v14;
    }
    unint64_t v64 = v68 - v14;
    if (v68 == v14)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v69;
    }
    unint64_t v36 = 0;
    unsigned int v55 = &v71;
    id v57 = (uint64_t *)(v35 - v14);
    int64_t v60 = v34 - v14;
    uint64_t v54 = v53 + 8 * v14 + 32;
    uint64_t v59 = (void *)(v11 - v14);
    uint64_t v37 = (uint64_t *)(v52 + 72 * v14 + 48);
    while (v60 != v36)
    {
      if (v59 == (void *)v36) {
        goto LABEL_23;
      }
      if (v57 == (uint64_t *)v36) {
        goto LABEL_35;
      }
      uint64_t v38 = *(void *)(v54 + 8 * v36);
      uint64_t v40 = v37[5];
      uint64_t v39 = v37[6];
      uint64_t v41 = v37[3];
      uint64_t v42 = v37[4];
      long long v67 = (char *)v39;
      unint64_t v68 = v36;
      uint64_t v44 = v37[1];
      uint64_t v43 = v37[2];
      uint64_t v46 = *(v37 - 1);
      uint64_t v45 = *v37;
      uint64_t v65 = *(v37 - 2);
      uint64_t v66 = v43;
      uint64_t v70 = v38;
      uint64_t v71 = v65;
      uint64_t v72 = v46;
      uint64_t v73 = v45;
      uint64_t v74 = v44;
      uint64_t v75 = v43;
      uint64_t v76 = v41;
      uint64_t v77 = v42;
      uint64_t v78 = v40;
      uint64_t v79 = v39;
      swift_retain();
      swift_retain();
      sub_191BB92FC(v46, v45, v44, v43);
      sub_191BB92FC(v41, v42, v40, v39);
      v62(v38, v55);
      swift_release();
      swift_release();
      sub_191BB9340(v46, v45, v44, v66);
      sub_191BB9340(v41, v42, v40, (uint64_t)v67);
      uint64_t v47 = v69;
      uint64_t v80 = v69;
      unint64_t v49 = *(void *)(v69 + 16);
      unint64_t v48 = *(void *)(v69 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_191AFBA38(v48 > 1, v49 + 1, 1);
        uint64_t v47 = v80;
      }
      *(void *)(v47 + 16) = v49 + 1;
      unint64_t v50 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      uint64_t v69 = v47;
      uint64_t result = sub_191B5A768(v56, v47 + v50 + *(void *)(v61 + 72) * v49);
      unint64_t v36 = v68 + 1;
      v37 += 9;
      if (v64 == v68 + 1) {
        goto LABEL_23;
      }
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_191BB92FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_191BB4E38(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_191BB9340(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_191B5D42C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191BB9384@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF4008();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191BB93B4()
{
  return sub_191CF4018();
}

uint64_t sub_191BB93DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191BB93F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_191CF5BC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)v14 - v8;
  v14[1] = a1;
  sub_191CF6538();
  swift_retain();
  char v10 = swift_dynamicCast();
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v10)
  {
    uint64_t v12 = *(void *)(a2 - 8);
    v11(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v9, a2);
  }
  else
  {
    v11(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_191BAD89C();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_191BB95F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a4;
  v6[14] = a6;
  v6[12] = a1;
  v6[15] = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[16] = AssociatedTypeWitness;
  v6[17] = *(void *)(AssociatedTypeWitness - 8);
  v6[18] = swift_task_alloc();
  v6[19] = *(void *)(a4 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BB9738, 0, 0);
}

uint64_t sub_191BB9738()
{
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_191BB981C;
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[16];
  return MEMORY[0x1F40D4460](v3, v4, AssociatedConformanceWitness);
}

uint64_t sub_191BB981C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_191BB9D0C;
  }
  else {
    uint64_t v5 = sub_191BB998C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191BB998C()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 16))(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E88);
  if (swift_dynamicCast())
  {
    sub_191B004A8((long long *)(v0 + 56), v0 + 16);
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_191BB9B70;
    uint64_t v4 = *(void *)(v0 + 96);
    return MEMORY[0x1F40D47C8](v4, v1, v2);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 104);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_191BBA438(v0 + 56);
    uint64_t v9 = sub_191CF3078();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_191BB9B70()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_191BB9C6C, 0, 0);
}

uint64_t sub_191BB9C6C()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[21], v0[13]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BB9D0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BB9D84(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 32);
  return MEMORY[0x1F4188298](sub_191BB9DAC, 0, 0);
}

uint64_t sub_191BB9DAC()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191BB9E88;
  uint64_t v2 = v0[2];
  return v4(v2);
}

uint64_t sub_191BB9E88()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BBA000;
  }
  else {
    uint64_t v2 = sub_191BB9F9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BB9F9C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BBA000()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BBA064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  return MEMORY[0x1F4188298](sub_191BBA088, 0, 0);
}

uint64_t sub_191BBA088()
{
  uint64_t v1 = (int *)(*(uint64_t (**)(void))(v0[4] + 8))(v0[3]);
  v0[6] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_191BBA17C;
  uint64_t v4 = v0[2];
  return v6(v4);
}

uint64_t sub_191BBA17C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BBA2F4;
  }
  else {
    uint64_t v2 = sub_191BBA290;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BBA290()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BBA2F4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_191BBA358()
{
  return 0xD000000000000038;
}

uint64_t sub_191BBA374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[5] = v3;
  v7[3] = a3;
  v7[4] = &off_1EE29F178;
  v7[1] = sub_191B0A348;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_191BBA088, 0, 0);
}

uint64_t sub_191BBA438(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s9AppEntityOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191BBA534);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s9AppEntityOMa()
{
  return &_s9AppEntityON;
}

unint64_t sub_191BBA574()
{
  unint64_t result = qword_1E92E3E98;
  if (!qword_1E92E3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3E98);
  }
  return result;
}

uint64_t sub_191BBA5C8(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_191CF6018())
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    uint64_t v4 = 4;
    uint64_t v5 = (SEL *)&_swift_FORCE_LOAD___swiftMetal___WidgetKit;
    unint64_t v21 = v1 & 0xC000000000000001;
    unint64_t v22 = v1;
    while (1)
    {
      id v6 = v3 ? (id)MEMORY[0x192FE4B60](v4 - 4, v1) : *(id *)(v1 + 8 * v4);
      uint64_t v7 = v6;
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      if ([v6 v5[356]])
      {
        sub_191CF5E88();
        sub_191CF5EC8();
        sub_191CF5ED8();
        sub_191CF5E98();
      }
      else
      {
        if (qword_1EB44C750 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_191CF3858();
        __swift_project_value_buffer(v9, (uint64_t)qword_1EB44CCE0);
        id v10 = v7;
        unint64_t v11 = sub_191CF3838();
        os_log_type_t v12 = sub_191CF5948();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          uint64_t v24 = v23;
          *(_DWORD *)uint64_t v13 = 136446210;
          uint64_t v14 = v2;
          id v15 = objc_msgSend(v10, sel_extensionBundleIdentifier);
          uint64_t v16 = sub_191CF5338();
          unint64_t v18 = v17;

          uint64_t v2 = v14;
          *(void *)(v13 + 4) = sub_191C5C36C(v16, v18, &v24);

          unint64_t v3 = v21;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_191AF4000, v11, v12, "Descriptor from %{public}s has no supportedFamilies", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          unint64_t v1 = v22;
          MEMORY[0x192FE5F00](v23, -1, -1);
          uint64_t v19 = v13;
          uint64_t v5 = (SEL *)&_swift_FORCE_LOAD___swiftMetal___WidgetKit;
          MEMORY[0x192FE5F00](v19, -1, -1);
        }
        else
        {
        }
      }
      ++v4;
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t DescriptorFetchResult.widgetDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DescriptorFetchResult.controlDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DescriptorFetchResult.activityDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

id DescriptorFetchResult.__allocating_init(widgetDescriptors:activityDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = sub_191BBA5C8(a1);
  swift_bridgeObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v8;
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = a2;
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a3;

  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DescriptorFetchResult.init(widgetDescriptors:activityDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_191BBA5C8(a1);
  swift_bridgeObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v8;
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = a2;
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for DescriptorFetchResult()
{
  return self;
}

id DescriptorFetchResult.__allocating_init(widgetDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = sub_191BBA5C8(a1);
  swift_bridgeObjectRelease();
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v6;
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a2;
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = MEMORY[0x1E4FBC860];

  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DescriptorFetchResult.init(widgetDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = sub_191BBA5C8(a1);
  swift_bridgeObjectRelease();
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v6;
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a2;
  *(void *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = MEMORY[0x1E4FBC860];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v8, sel_init);
}

unint64_t sub_191BBAB78(char a1)
{
  unint64_t result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000012;
    }
    else {
      return 0xD000000000000013;
    }
  }
  return result;
}

uint64_t sub_191BBABD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_191CD5EB4(*a1, *a2);
}

uint64_t sub_191BBABE0()
{
  return sub_191CD69CC();
}

uint64_t sub_191BBABE8()
{
  return sub_191CD6D2C();
}

uint64_t sub_191BBABF0()
{
  return sub_191CD6ED4();
}

uint64_t sub_191BBABF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191BBB93C();
  *a1 = result;
  return result;
}

unint64_t sub_191BBAC28@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191BBAB78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_191BBAC54()
{
  return sub_191BBAB78(*v0);
}

uint64_t sub_191BBAC5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191BBB93C();
  *a1 = result;
  return result;
}

uint64_t sub_191BBAC84(uint64_t a1)
{
  unint64_t v2 = sub_191BBC3C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BBACC0(uint64_t a1)
{
  unint64_t v2 = sub_191BBC3C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *DescriptorFetchResult.__allocating_init(from:)(void *a1)
{
  return sub_191BBB988(a1);
}

uint64_t sub_191BBAD14(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3EB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BBC3C4();
  sub_191CF6528();
  objc_super v10 = self;
  uint64_t v43 = v4;
  sub_191B016E0(0, &qword_1EB44C5B0);
  unint64_t v11 = (void *)sub_191CF5528();
  id v45 = 0;
  id v42 = v10;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v45);

  id v13 = v45;
  if (v12)
  {
    uint64_t v14 = (void *)sub_191CF30C8();
    unint64_t v16 = v15;
  }
  else
  {
    unint64_t v17 = v13;
    unint64_t v18 = (void *)sub_191CF2FE8();

    swift_willThrow();
    uint64_t v14 = 0;
    uint64_t v3 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  id v45 = v14;
  unint64_t v46 = v16;
  char v44 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3ED0);
  sub_191BBC418();
  sub_191CF6278();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v19 = (uint64_t)v14;
    unint64_t v20 = v16;
  }
  else
  {
    unint64_t v40 = v16;
    uint64_t v41 = v7;
    sub_191B016E0(0, &qword_1EB449D18);
    unint64_t v21 = (void *)sub_191CF5528();
    id v45 = 0;
    id v22 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v21, 1, &v45);

    id v23 = v45;
    if (v22)
    {
      uint64_t v24 = (void *)sub_191CF30C8();
      unint64_t v26 = v25;
    }
    else
    {
      char v27 = v23;
      uint64_t v28 = (void *)sub_191CF2FE8();

      swift_willThrow();
      uint64_t v24 = 0;
      unint64_t v26 = 0xF000000000000000;
    }
    id v45 = v24;
    unint64_t v46 = v26;
    char v44 = 1;
    sub_191CF6278();
    uint64_t v38 = (uint64_t)v24;
    unint64_t v39 = v26;
    sub_191B016E0(0, &qword_1EB44A4A0);
    uint64_t v29 = (void *)sub_191CF5528();
    id v45 = 0;
    id v30 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v29, 1, &v45);

    id v31 = v45;
    if (v30)
    {
      unint64_t v32 = (void *)sub_191CF30C8();
      unint64_t v34 = v33;
    }
    else
    {
      unint64_t v35 = v31;
      unint64_t v36 = (void *)sub_191CF2FE8();

      swift_willThrow();
      unint64_t v32 = 0;
      unint64_t v34 = 0xF000000000000000;
    }
    id v45 = v32;
    unint64_t v46 = v34;
    char v44 = 2;
    sub_191CF6278();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    sub_191B170C8(v38, v39);
    sub_191B170C8((uint64_t)v14, v40);
    uint64_t v19 = (uint64_t)v32;
    unint64_t v20 = v34;
  }
  return sub_191B170C8(v19, v20);
}

id DescriptorFetchResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DescriptorFetchResult.init(coder:)(a1);
}

id DescriptorFetchResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B040);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_191CF8420;
  uint64_t v5 = sub_191B016E0(0, (unint64_t *)&unk_1EB44C720);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = sub_191B016E0(0, &qword_1EB44C5B0);
  id v6 = v2;
  sub_191CF5AD8();
  swift_bridgeObjectRelease();
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0BD0);
    if (swift_dynamicCast()) {
      unint64_t v7 = v18;
    }
    else {
      unint64_t v7 = 0;
    }
  }
  else
  {
    sub_191B88CAC((uint64_t)v19);
    unint64_t v7 = 0;
  }
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_191CF8420;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = sub_191B016E0(0, &qword_1EB449D18);
  sub_191CF5AD8();
  swift_bridgeObjectRelease();
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0BD8);
    if (swift_dynamicCast()) {
      unint64_t v9 = v18;
    }
    else {
      unint64_t v9 = 0;
    }
  }
  else
  {
    sub_191B88CAC((uint64_t)v19);
    unint64_t v9 = 0;
  }
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_191CF8420;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = sub_191B016E0(0, &qword_1EB44A4A0);
  sub_191CF5AD8();
  swift_bridgeObjectRelease();
  if (!v20)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191B88CAC((uint64_t)v19);
LABEL_20:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0BE0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  unint64_t v11 = v18;
  if (!v9)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_20;
  }

  id v12 = (objc_class *)type metadata accessor for DescriptorFetchResult();
  id v13 = (char *)objc_allocWithZone(v12);
  uint64_t v14 = sub_191BBA5C8(v7);
  swift_bridgeObjectRelease();
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v14;
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v11;
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v9;

  v17.receiver = v13;
  v17.super_class = v12;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

void sub_191BBB5C4(void *a1)
{
  sub_191B016E0(0, &qword_1EB44C5B0);
  uint64_t v2 = (void *)sub_191CF5528();
  id v3 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  sub_191B016E0(0, &qword_1EB449D18);
  uint64_t v4 = (void *)sub_191CF5528();
  uint64_t v5 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  sub_191B016E0(0, &qword_1EB44A4A0);
  id v6 = (void *)sub_191CF5528();
  id v7 = (id)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
}

id DescriptorFetchResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DescriptorFetchResult.init()()
{
}

id DescriptorFetchResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_191BBB8EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_191BBB988(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191BBB918(void *a1)
{
  return sub_191BBAD14(a1);
}

uint64_t sub_191BBB93C()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *sub_191BBB988(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3EF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v72 = a1;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v9 = sub_191BBC3C4();
  sub_191CF6508();
  if (!v1)
  {
    char v76 = 0;
    sub_191B71714();
    sub_191CF6178();
    uint64_t v70 = v6;
    uint64_t v71 = v3;
    uint64_t v11 = v74;
    unint64_t v10 = v75;
    uint64_t v12 = sub_191B016E0(0, &qword_1EB449A20);
    uint64_t v13 = sub_191B016E0(0, &qword_1EB44C5B0);
    unint64_t v68 = v10;
    uint64_t v69 = v11;
    uint64_t v14 = sub_191CF59B8();
    uint64_t v67 = v12;
    if (v14)
    {
      unint64_t v21 = v14;
      char v76 = 1;
      sub_191CF6178();
      uint64_t v28 = v74;
      unint64_t v29 = v75;
      uint64_t v30 = sub_191B016E0(0, &qword_1EB449D18);
      uint64_t v66 = v28;
      uint64_t v31 = sub_191CF59B8();
      if (v31)
      {
        uint64_t v64 = v31;
        char v76 = 2;
        sub_191CF6178();
        uint64_t v43 = v74;
        unint64_t v44 = v75;
        uint64_t v45 = sub_191B016E0(0, &qword_1EB44A4A0);
        unint64_t v62 = v44;
        uint64_t v63 = v43;
        uint64_t v46 = sub_191CF59B8();
        uint64_t v52 = v46;
        if (v46)
        {
          uint64_t v53 = (objc_class *)type metadata accessor for DescriptorFetchResult();
          uint64_t v54 = (char *)objc_allocWithZone(v53);
          uint64_t v55 = sub_191BBA5C8(v21);
          swift_bridgeObjectRelease();
          *(void *)&v54[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v55;
          *(void *)&v54[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v52;
          *(void *)&v54[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v64;

          v73.receiver = v54;
          v73.super_class = v53;
          uint64_t v8 = objc_msgSendSuper2(&v73, sel_init);
          sub_191B1603C(v63, v62);
          sub_191B1603C(v66, v29);
          sub_191B1603C(v69, v68);
          (*(void (**)(char *, uint64_t))(v4 + 8))(v70, v71);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
          return v8;
        }
        unint64_t v65 = v29;
        uint64_t v67 = v4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = sub_191CF5E38();
        uint64_t v8 = (void *)swift_allocError();
        unint64_t v58 = v57;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
        *unint64_t v58 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_191CF8410;
        *(void *)(v59 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(void *)(v59 + 64) = v9;
        *(unsigned char *)(v59 + 32) = 2;
        sub_191CF5E18();
        uint64_t v60 = *MEMORY[0x1E4FBBA80];
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v58, v60, v56);
        swift_willThrow();
        uint64_t v47 = sub_191CF5E38();
        swift_allocError();
        unint64_t v49 = v48;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
        *unint64_t v49 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_191CF8410;
        *(void *)(v50 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(void *)(v50 + 64) = v9;
        *(unsigned char *)(v50 + 32) = 2;
        uint64_t v51 = v8;
        sub_191CF5E18();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v49, v60, v47);
        swift_willThrow();
        sub_191B1603C(v63, v62);
      }
      else
      {
        unint64_t v65 = v29;
        uint64_t v67 = v4;
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_191CF5E38();
        uint64_t v38 = swift_allocError();
        unint64_t v40 = v39;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
        uint64_t *v40 = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_191CF8410;
        *(void *)(v41 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(void *)(v41 + 64) = v9;
        *(unsigned char *)(v41 + 32) = 1;
        sub_191CF5E18();
        uint64_t v42 = *MEMORY[0x1E4FBBA80];
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v40, v42, v37);
        uint64_t v8 = (void *)v38;
        swift_willThrow();
        uint64_t v32 = sub_191CF5E38();
        swift_allocError();
        unint64_t v34 = v33;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
        uint64_t *v34 = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_191CF8410;
        *(void *)(v35 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(void *)(v35 + 64) = v9;
        *(unsigned char *)(v35 + 32) = 1;
        unint64_t v36 = v8;
        sub_191CF5E18();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v34, v42, v32);
        swift_willThrow();
      }
      sub_191B1603C(v66, v65);
      sub_191B1603C(v69, v68);
      uint64_t v19 = v8;
    }
    else
    {
      uint64_t v67 = v4;
      uint64_t v22 = sub_191CF5E38();
      id v23 = (void *)swift_allocError();
      unint64_t v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *unint64_t v25 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_191CF8410;
      *(void *)(v26 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
      *(void *)(v26 + 64) = v9;
      *(unsigned char *)(v26 + 32) = 0;
      sub_191CF5E18();
      uint64_t v27 = *MEMORY[0x1E4FBBA80];
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v25, v27, v22);
      swift_willThrow();
      uint64_t v15 = sub_191CF5E38();
      swift_allocError();
      uint64_t v8 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *uint64_t v8 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_191CF8410;
      *(void *)(v17 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
      *(void *)(v17 + 64) = v9;
      *(unsigned char *)(v17 + 32) = 0;
      id v18 = v23;
      sub_191CF5E18();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v8, v27, v15);
      swift_willThrow();
      sub_191B1603C(v69, v68);
      uint64_t v19 = v23;
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v71);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  return v8;
}

unint64_t sub_191BBC3C4()
{
  unint64_t result = qword_1E92E3EC0;
  if (!qword_1E92E3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3EC0);
  }
  return result;
}

unint64_t sub_191BBC418()
{
  unint64_t result = qword_1E92E4FA0;
  if (!qword_1E92E4FA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92E3ED0);
    sub_191B718A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4FA0);
  }
  return result;
}

uint64_t method lookup function for DescriptorFetchResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DescriptorFetchResult);
}

uint64_t dispatch thunk of static DescriptorFetchResult.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(widgetDescriptors:activityDescriptors:controlDescriptors:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(widgetDescriptors:controlDescriptors:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of DescriptorFetchResult.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DescriptorFetchResult.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

unsigned char *storeEnumTagSinglePayload for DescriptorFetchResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BBC664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DescriptorFetchResult.CodingKeys()
{
  return &type metadata for DescriptorFetchResult.CodingKeys;
}

unint64_t sub_191BBC6A0()
{
  unint64_t result = qword_1E92E3EE0;
  if (!qword_1E92E3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3EE0);
  }
  return result;
}

unint64_t sub_191BBC6F8()
{
  unint64_t result = qword_1E92E3EE8;
  if (!qword_1E92E3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3EE8);
  }
  return result;
}

unint64_t sub_191BBC750()
{
  unint64_t result = qword_1E92E3EF0;
  if (!qword_1E92E3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3EF0);
  }
  return result;
}

uint64_t dispatch thunk of ControlPushHandler.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlPushHandler.pushTokensDidChange(controls:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetRelevanceProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B0A348;
  return v9(a1, a2, a3);
}

uint64_t sub_191BBC8D4()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CAB0 = result;
  return result;
}

uint64_t sub_191BBC8FC()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A898);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA98 = v0;
  unk_1EB44CAA0 = 0xD000000000000013;
  qword_1EB44CAA8 = 0x8000000191D0DC50;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeContrastKey()
{
  return &type metadata for ColorSchemeContrastKey;
}

unint64_t sub_191BBC988()
{
  unint64_t result = qword_1EB44A9D0;
  if (!qword_1EB44A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A9D0);
  }
  return result;
}

unint64_t sub_191BBC9E0()
{
  unint64_t result = qword_1EB44A9E8;
  if (!qword_1EB44A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A9E8);
  }
  return result;
}

unint64_t sub_191BBCA38()
{
  unint64_t result = qword_1EB44A9C8;
  if (!qword_1EB44A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A9C8);
  }
  return result;
}

uint64_t sub_191BBCA8C(char *a1, char *a2)
{
  return sub_191CD5E08(*a1, *a2);
}

uint64_t sub_191BBCA98()
{
  return sub_191CF64C8();
}

uint64_t sub_191BBCB20()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BBCB94()
{
  return sub_191CF64C8();
}

uint64_t sub_191BBCC18@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_191BBCC78(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6573616572636E69;
  if (*v1) {
    uint64_t v2 = 0x647261646E617473;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_191BBCCBC()
{
  return sub_191CF54F8();
}

uint64_t sub_191BBCD1C()
{
  return sub_191CF54D8();
}

uint64_t sub_191BBCD6C(char *a1, char *a2)
{
  return sub_191BBCF88(*a1, *a2);
}

uint64_t sub_191BBCD78(char *a1, char *a2)
{
  return sub_191CA2660(*a1, *a2);
}

uint64_t sub_191BBCD84(char *a1, char *a2)
{
  return sub_191CA2BE8(*a1, *a2);
}

uint64_t sub_191BBCD90(char *a1, char *a2)
{
  return sub_191CA2EE8(*a1, *a2);
}

uint64_t sub_191BBCD9C()
{
  if (qword_1EB44A9F8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BBCDF8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = sub_191CF4388();
  uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3D538];
  if (!v3) {
    uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3D540];
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_191BBCE80@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_191BBD088(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_191BBCEB0()
{
  if (qword_1EB44A9C0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA98;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191BBCF34()
{
  unint64_t result = qword_1EB44A9D8;
  if (!qword_1EB44A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A9D8);
  }
  return result;
}

uint64_t sub_191BBCF88(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x647261646E617473;
  }
  else {
    uint64_t v3 = 0x6573616572636E69;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x647261646E617473;
  }
  else {
    uint64_t v5 = 0x6573616572636E69;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_191BBD034()
{
  unint64_t result = qword_1EB44A9E0;
  if (!qword_1EB44A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A9E0);
  }
  return result;
}

uint64_t sub_191BBD088(uint64_t a1)
{
  uint64_t v2 = sub_191CF4388();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E4F3D538] || v7 == *MEMORY[0x1E4F3D540]) {
    return v7 == *MEMORY[0x1E4F3D538];
  }
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  uint64_t v10 = sub_191CF5E58();
  swift_allocError();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08);
  sub_191B4F964((uint64_t)v16, v12);
  v15[0] = sub_191CF5DC8();
  v15[1] = v13;
  sub_191CF53B8();
  v16[5] = 36;
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x1E4FBBAA0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unsigned char *storeEnumTagSinglePayload for ColorSchemeContrastKey.CodableColorSchemeContrast(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BBD3D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeContrastKey.CodableColorSchemeContrast()
{
  return &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast;
}

uint64_t sub_191BBD408(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_191B0A348;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_191BBD4D0, 0, 0);
}

uint64_t TimelineProvider.relevances()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_191BBD4D0, 0, 0);
}

uint64_t sub_191BBD4D0()
{
  **(void **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_191BBD4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_191B17A68;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t TimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_191BBD6A8;
  return v8(v3 + 16, a2, a3);
}

uint64_t sub_191BBD6A8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_191BBD7A4, 0, 0);
}

uint64_t sub_191BBD7A4()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of TimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TimelineProvider.getSnapshot(in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of TimelineProvider.getTimeline(in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of TimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

uint64_t sub_191BBDA0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, double a6)
{
  int v7 = v6;
  uint64_t v33 = a4;
  uint64_t v34 = a2;
  int v35 = a3;
  uint64_t v32 = a1;
  uint64_t v10 = sub_191CF5178();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191CF31D8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = (_DWORD *)swift_slowAlloc();
  *uint64_t v19 = 0;
  *(void *)(v18 + 16) = v19;
  v7[4] = v18;
  sub_191CF31C8();
  sub_191CF3188();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F4F6F0]);
  unint64_t v21 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithIdentifier_, v21);

  uint64_t v23 = v33;
  v7[5] = v22;
  v7[6] = v23;
  v7[7] = a5;
  uint64_t v24 = v34;
  v7[2] = v32;
  v7[3] = v24;
  unint64_t v25 = (unsigned int *)MEMORY[0x1E4FBCB28];
  if ((v35 & 1) == 0) {
    unint64_t v25 = (unsigned int *)MEMORY[0x1E4FBCB48];
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *v25, v10);
  sub_191BBE468();
  swift_retain();
  uint64_t v26 = (void *)sub_191CF5A48();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v7[8] = v26;
  uint64_t v28 = (void *)v7[5];
  if (v28)
  {
    aBlock[4] = sub_191BBE4A8;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191BF6E30;
    aBlock[3] = &block_descriptor_0;
    unint64_t v29 = _Block_copy(aBlock);
    id v30 = v28;
    id v31 = v26;
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v31, v29, a6, 0.0);
    swift_release();
    _Block_release(v29);

    return (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191BBDD60()
{
  sub_191BBDFD4();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompletionOrWatchdogWrapper()
{
  return self;
}

void sub_191BBDDE0(void (*a1)(void))
{
  uint64_t v2 = v1;
  if (sub_191BBDFD4())
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191CF3858();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E92F2410);
    swift_retain();
    uint64_t v5 = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5948();
    if (os_log_type_enabled(v5, v6))
    {
      int v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)int v7 = 136446210;
      uint64_t v9 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      sub_191C5C36C(v9, v10, &v11);
      sub_191CF5C08();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v5, v6, "[%{public}s] Original request finally completed, but it had already watchdogged.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v8, -1, -1);
      MEMORY[0x192FE5F00](v7, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a1();
  }
}

BOOL sub_191BBDFD4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = *(void **)(v0 + 40);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v4, sel_cancel);
    objc_msgSend(v4, sel_invalidate);

    uint64_t v5 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3 == 0;
}

void sub_191BBE06C(uint64_t a1, void (*a2)(void))
{
  if (sub_191BBDFD4())
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191CF3858();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E92F2410);
    swift_retain();
    uint64_t v5 = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5948();
    if (os_log_type_enabled(v5, v6))
    {
      int v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)int v7 = 136446210;
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_191C5C36C(v9, v10, &v11);
      sub_191CF5C08();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v5, v6, "[%{public}s] Original request finally completed, but it had already watchdogged.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v8, -1, -1);
      MEMORY[0x192FE5F00](v7, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a2(0);
  }
}

void sub_191BBE268(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  if (sub_191BBDFD4())
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_191CF3858();
    __swift_project_value_buffer(v7, (uint64_t)qword_1E92F2410);
    swift_retain();
    uint64_t v8 = sub_191CF3838();
    os_log_type_t v9 = sub_191CF5948();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)unint64_t v10 = 136446210;
      uint64_t v12 = *(void *)(a1 + 16);
      unint64_t v13 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_191C5C36C(v12, v13, &v14);
      sub_191CF5C08();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v8, v9, "[%{public}s] Original request finally completed, but it had already watchdogged.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v11, -1, -1);
      MEMORY[0x192FE5F00](v10, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a2(a4);
  }
}

unint64_t sub_191BBE468()
{
  unint64_t result = qword_1EB44C710;
  if (!qword_1EB44C710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44C710);
  }
  return result;
}

uint64_t sub_191BBE4A8()
{
  uint64_t result = sub_191BBDFD4();
  if ((result & 1) == 0) {
    return (*(uint64_t (**)(void))(v0 + 48))();
  }
  return result;
}

void *sub_191BBE4D8()
{
  qword_1E92E3F40 = (uint64_t)&unk_1EE2B4320;
  return &unk_1EE2B4320;
}

id static ControlCenterXPCDefinition.clientInterface.getter()
{
  return sub_191BBE5A8(&qword_1E92E2C48, (void **)&qword_1E92E3F40);
}

void *sub_191BBE510()
{
  qword_1E92E3F48 = (uint64_t)&unk_1EE2B6120;
  return &unk_1EE2B6120;
}

id static ControlCenterXPCDefinition.serverInterface.getter()
{
  return sub_191BBE5A8(&qword_1E92E2C50, (void **)&qword_1E92E3F48);
}

id sub_191BBE548()
{
  id result = objc_msgSend(self, sel_userInteractive);
  qword_1E92E3F50 = (uint64_t)result;
  return result;
}

id static ControlCenterXPCDefinition.qos.getter()
{
  return sub_191BBE5A8(&qword_1E92E2C58, (void **)&qword_1E92E3F50);
}

id sub_191BBE5A8(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

unint64_t static ControlCenterXPCDefinition.domain.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ControlCenterXPCDefinition.serviceName.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ControlCenterXPCDefinition.machServiceName.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for ControlCenterXPCDefinition()
{
  return &type metadata for ControlCenterXPCDefinition;
}

uint64_t sub_191BBE658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191CF55B8();
  *(void *)(v3 + 16) = 1024;
  uint64_t v4 = v3 + 32;
  bzero((void *)(v3 + 32), 0x400uLL);
  if (MEMORY[0x192FE25E0](objc_msgSend(v1, sel_fileDescriptor), 50, v4) == -1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_191CF5308();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_191CF3028();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_191CF3078();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
      uint64_t v9 = v7;
      uint64_t v10 = a1;
      uint64_t v11 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v12 = sub_191CF3078();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v9 = v12;
  uint64_t v10 = a1;
  uint64_t v11 = 1;
LABEL_6:

  return v8(v10, v11, 1, v9);
}

double sub_191BBE794@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 56) = 1;
  return result;
}

uint64_t sub_191BBE7B4@<X0>(uint64_t a1@<X8>)
{
  sub_191B9E10C();
  uint64_t result = sub_191CF4068();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = v3;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v5;
    *(void *)(a1 + 48) = v6;
  }
  return result;
}

uint64_t sub_191BBE824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_191BBE834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DynamicIslandExpandedContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191BBE870()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191BBE90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 57) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v10 = *(void *)a2;
    uint64_t v11 = *(void *)(a2 + 8);
    uint64_t v12 = *(void *)(a2 + 16);
    uint64_t v13 = *(void *)(a2 + 24);
    uint64_t v14 = *(void *)(a2 + 32);
    uint64_t v15 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 48);
    char v18 = *(unsigned char *)(a2 + 56);
    sub_191BBE824(*(void *)a2, v11, v12, v13, v14, v15, v17, v18);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = v13;
    *(void *)(a1 + 32) = v14;
    *(void *)(a1 + 40) = v15;
    *(void *)(a1 + 48) = v17;
    *(unsigned char *)(a1 + 56) = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))((a1 + v6 + 57) & ~v6, (a2 + v6 + 57) & ~v6, v19);
  }
  return a1;
}

uint64_t sub_191BBEA78(uint64_t a1, uint64_t a2)
{
  sub_191BBE834(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_191BBEAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_191BBE824(*(void *)a2, v6, v7, v8, v9, v10, v11, v12);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((*(unsigned __int8 *)(v13 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_191BBEBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_191BBE824(*(void *)a2, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  char v20 = *(unsigned char *)(a1 + 56);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  sub_191BBE834(v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))((*(unsigned __int8 *)(v21 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

_OWORD *sub_191BBECE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_191BBED64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  sub_191BBE834(v8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 40))((*(unsigned __int8 *)(v17 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (*(unsigned __int8 *)(v17 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

uint64_t sub_191BBEE14(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 57) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 57) & ~v6);
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + 56);
      if (v15 > 1) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_191BBEFB4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 57) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x191BBF230);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 57] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0xFE)
        {
          *(_OWORD *)(a1 + 40) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 8) = 0u;
          a1[56] = 0;
          *(void *)a1 = a2 - 255;
        }
        else
        {
          a1[56] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DynamicIslandContainer()
{
  return __swift_instantiateGenericMetadata();
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicIslandMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DynamicIslandMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandMetrics()
{
  return &type metadata for DynamicIslandMetrics;
}

uint64_t sub_191BBF2F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BBF33C(uint64_t a1)
{
  uint64_t v2 = sub_191CF3BA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v8 = (char *)v13 - v7;
  sub_191BBF508((uint64_t)v14);
  uint64_t v9 = *(void *)(a1 + 24);
  sub_191CF4D28();
  v13[1] = v9;
  v13[2] = MEMORY[0x1E4F3CAA8];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C6C7AC(v6, v2, WitnessTable);
  BOOL v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v6, v2);
  sub_191C6C7AC(v8, v2, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
}

uint64_t sub_191BBF4EC()
{
  return sub_191CF4C08();
}

double sub_191BBF508@<D0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v9[0] = *v1;
  v9[1] = v3;
  v10[0] = v1[2];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_191BBFF5C((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void))sub_191BBE824);
  sub_191BDC788((uint64_t)v7);
  sub_191BBFF5C((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void))sub_191BBE834);
  double result = v8;
  long long v5 = v7[1];
  long long v6 = v7[2];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(double *)(a1 + 48) = result;
  return result;
}

uint64_t sub_191BBF5A8()
{
  uint64_t v0 = sub_191CF4108();
  MEMORY[0x1F4188790](v0 - 8);
  sub_191BBF508((uint64_t)&v2);
  sub_191CF40F8();
  sub_191BBF508((uint64_t)v3);
  sub_191CF40A8();
  return sub_191CF4098();
}

uint64_t sub_191BBF668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E11B0);
  uint64_t v4 = *(void *)(a1 + 16);
  sub_191BBFFAC(&qword_1E92E11A0);
  uint64_t v25 = sub_191CF3AE8();
  uint64_t v28 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v26 = (char *)&v24 - v5;
  uint64_t v6 = sub_191CF40B8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v24 = sub_191CF4198();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF3BA8();
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v24 - v14;
  sub_191BBF5A8();
  sub_191CF40C8();
  uint64_t v16 = *(void *)(a1 + 24);
  int v17 = sub_191BBFABC((uint64_t)v9, v4, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  uint64_t v31 = v4;
  uint64_t v32 = v16;
  uint64_t v33 = v2;
  unint64_t v18 = v26;
  ((void (*)(uint64_t (*)(), char *))v17)(sub_191BBFFA0, v30);
  swift_release();
  sub_191BBF508((uint64_t)v38);
  uint64_t v36 = sub_191BBFFAC(&qword_1E92E11A8);
  uint64_t v37 = v16;
  uint64_t v19 = v25;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191CF4D28();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
  uint64_t v34 = WitnessTable;
  uint64_t v35 = MEMORY[0x1E4F3CAA8];
  uint64_t v21 = swift_getWitnessTable();
  sub_191C6C7AC(v13, v10, v21);
  id v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v13, v10);
  sub_191C6C7AC(v15, v10, v21);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v10);
}

uint64_t (*sub_191BBFABC(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_191CF4198();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  return sub_191BC0084;
}

uint64_t sub_191BBFBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_191CF4198();
  unint64_t v11 = sub_191BC0120();
  return sub_191BBFC74(a1, a2, v10, a3, v11, a4, a5);
}

uint64_t sub_191BBFC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v18[0] = a6;
  v18[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  int v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191CF39C8();
  MEMORY[0x1F4188790](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_191CF39D8();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  unsigned char v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  swift_getWitnessTable();
  return sub_191CF3AF8();
}

uint64_t sub_191BBFE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DynamicIslandExpandedContainer();
  sub_191C6C7AC(a1 + *(int *)(v9 + 36), a2, a3);
  sub_191C6C7AC(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_191BBFF18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BBFF5C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_191BBFFA0()
{
  return sub_191BBFE1C(v0[4], v0[2], v0[3]);
}

uint64_t sub_191BBFFAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E11B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BBFFF4()
{
  uint64_t v1 = sub_191CF4198();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_191BC0084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  sub_191CF4198();

  return sub_191BBFBF4(a1, a2, v7, v8, a3);
}

unint64_t sub_191BC0120()
{
  unint64_t result = qword_1E92E12A0;
  if (!qword_1E92E12A0)
  {
    sub_191CF4198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E12A0);
  }
  return result;
}

uint64_t sub_191BC0178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void (*)(void))MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v17 - v13;
  v12();
  sub_191C6C7AC(v11, a4, a6);
  int v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  sub_191C6C7AC(v14, a4, a6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, a4);
}

uint64_t sub_191BC02AC()
{
  return sub_191BC0178(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_191BC02BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_191BC0320()
{
  return swift_getWitnessTable();
}

uint64_t TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a2;
  v4[5] = a3;
  uint64_t v5 = *(int **)(v3 + 24);
  v4[6] = sub_191CF5698();
  v4[7] = sub_191CF5688();
  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[8] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_191BC0518;
  return v8();
}

uint64_t sub_191BC0518(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191BC065C, v3, v2);
}

uint64_t sub_191BC065C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  long long v9 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = v9;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3FC0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
  unint64_t v5 = sub_191BC0BE8();
  uint64_t v6 = sub_191B55D64((void (*)(char *, char *))sub_191BC0BC8, v2, v3, v9, v4, v5, MEMORY[0x1E4FBC0F0], v0 + 24);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = sub_191BC13CC(AssociatedTypeWitness, a1);
  if (!v4) {
    return sub_191BC0E94(a4, a2);
  }
  return result;
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_191BC0E94(a1, a2);
}

uint64_t static PreviewSourceContentCategory.timelineWidget.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0EE20);
}

uint64_t TimelineEntryPreviewSource.makeWidget.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

void TimelineEntryPreviewSource.family.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *TimelineEntryPreviewSource.family.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TimelineEntryPreviewSource.family.modify())()
{
  return nullsub_1;
}

uint64_t sub_191BC092C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_191CF5BC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23[-1] - v10;
  sub_191AFEE28((uint64_t)a1, (uint64_t)&v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B760);
  char v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v12)
  {
    uint64_t v14 = *(void *)(a2 - 8);
    v13(v11, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v11, a2);
  }
  else
  {
    v13(v11, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v24 = a2;
    uint64_t v16 = a1[3];
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
    v23[3] = v16;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
    sub_191BC2BFC();
    uint64_t v19 = swift_allocError();
    uint64_t v21 = v20;
    strcpy((char *)v20, "Widget preview");
    *(unsigned char *)(v20 + 15) = -18;
    strcpy((char *)(v20 + 16), "timeline entry");
    *(unsigned char *)(v20 + 31) = -18;
    sub_191B4F9C0(&v24, (_OWORD *)(v20 + 32));
    sub_191BC2C50((uint64_t)v23, v21 + 64);
    uint64_t result = swift_willThrow();
    *a3 = v19;
  }
  return result;
}

uint64_t sub_191BC0BC8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191BC092C(a1, *(void *)(v3 + 16), a2, a3);
}

unint64_t sub_191BC0BE8()
{
  unint64_t result = qword_1E92E3FC8;
  if (!qword_1E92E3FC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E3FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3FC8);
  }
  return result;
}

uint64_t TimelineEntryPreviewSource.intent.getter()
{
  return 0;
}

uint64_t TimelineEntryPreviewSource.contentCategory.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0EE20);
}

uint64_t TimelineEntryPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F252F0];
  uint64_t v3 = sub_191CF36C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_191BC0CDC()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

void sub_191BC0D0C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *sub_191BC0D18(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*sub_191BC0D24())()
{
  return nullsub_1;
}

uint64_t sub_191BC0D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F252F0];
  uint64_t v3 = sub_191CF36C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_191BC0DB8()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0EE20);
}

uint64_t TimelineProviderPreviewSource.makeWidget.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

void TimelineProviderPreviewSource.family.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *TimelineProviderPreviewSource.family.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TimelineProviderPreviewSource.family.modify())()
{
  return nullsub_1;
}

void *TimelineProviderPreviewSource.intent.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t TimelineProviderPreviewSource.appIntent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B01614(v1 + 32, a1, &qword_1E92E3FD0);
}

uint64_t sub_191BC0E94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191CF5BC8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v16[-v8];
  (*(void (**)(void *__return_ptr, uint64_t))(v2 + 72))(v19, v7);
  sub_191B4F964((uint64_t)v19, (uint64_t)&v17);
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  if (v10)
  {
    uint64_t v12 = *(void *)(a1 - 8);
    v11(v9, 0, 1, a1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v12 + 32))(a2, v9, a1);
  }
  else
  {
    v11(v9, 1, 1, a1);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v17 = a1;
    sub_191B4F964((uint64_t)v19, (uint64_t)v16);
    sub_191BC2BFC();
    swift_allocError();
    uint64_t v15 = v14;
    strcpy((char *)v14, "Widget preview");
    *(unsigned char *)(v14 + 15) = -18;
    *(void *)(v14 + 16) = 0xD000000000000011;
    *(void *)(v14 + 24) = 0x8000000191D0F320;
    sub_191B4F9C0(&v17, (_OWORD *)(v14 + 32));
    sub_191BC2C50((uint64_t)v16, v15 + 64);
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_191BC1180(AssociatedTypeWitness, (uint64_t)&v9);
  if (!v3)
  {
    uint64_t v4 = v9;
    sub_191BC0E94(a3, a1);
  }
  return v4;
}

uint64_t sub_191BC1180@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191CF5BC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  *(void *)&long long v20 = *(void *)(v2 + 24);
  id v9 = (id)v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3FE8);
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  if (v10)
  {
    uint64_t v12 = *(void *)(a1 - 8);
    v11(v8, 0, 1, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v8, a1);
  }
  else
  {
    v11(v8, 1, 1, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v20 = a1;
    uint64_t v14 = *(void **)(v2 + 24);
    if (v14)
    {
      *((void *)&v19 + 1) = sub_191BC2CB8();
      *(void *)&long long v18 = v14;
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    sub_191BC2BFC();
    swift_allocError();
    uint64_t v16 = v15;
    strcpy((char *)v15, "Widget preview");
    *(unsigned char *)(v15 + 15) = -18;
    *(void *)(v15 + 16) = 0x746E65746E69;
    *(void *)(v15 + 24) = 0xE600000000000000;
    sub_191B4F9C0(&v20, (_OWORD *)(v15 + 32));
    sub_191BC2C50((uint64_t)&v18, v16 + 64);
    id v17 = v14;
    return swift_willThrow();
  }
}

uint64_t sub_191BC13CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191CF5BC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  sub_191B01614(v2 + 32, (uint64_t)v22, &qword_1E92E3FD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3FD0);
  char v9 = swift_dynamicCast();
  char v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  if (v9)
  {
    uint64_t v11 = *(void *)(a1 - 8);
    v10(v8, 0, 1, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
  }
  else
  {
    v10(v8, 1, 1, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v20 = a1;
    sub_191B01614(v2 + 32, (uint64_t)v22, &qword_1E92E3FD0);
    uint64_t v13 = v23;
    if (v23)
    {
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(v22, v23);
      *((void *)&v19 + 1) = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
      sub_191B01770((uint64_t)v22, &qword_1E92E3FD0);
      long long v18 = 0u;
      long long v19 = 0u;
    }
    sub_191BC2BFC();
    swift_allocError();
    uint64_t v17 = v16;
    strcpy((char *)v16, "Widget preview");
    *(unsigned char *)(v16 + 15) = -18;
    *(void *)(v16 + 16) = 0x65746E6920707061;
    *(void *)(v16 + 24) = 0xEA0000000000746ELL;
    sub_191B4F9C0(&v20, (_OWORD *)(v16 + 32));
    sub_191BC2C50((uint64_t)&v18, v17 + 64);
    return swift_willThrow();
  }
}

uint64_t TimelineProviderPreviewSource.contentCategory.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0EE20);
}

uint64_t TimelineProviderPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F252F0];
  uint64_t v3 = sub_191CF36C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void *sub_191BC1720()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t StaticConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v24 = *a2;
  uint64_t v11 = *((void *)a2 + 3);
  uint64_t v23 = *((void *)a2 + 2);
  char v21 = *((unsigned char *)a2 + 34);
  __int16 v22 = *((_WORD *)a2 + 16);
  uint64_t v12 = *((void *)a2 + 5);
  uint64_t v13 = *((void *)a2 + 6);
  char v20 = *((unsigned char *)a2 + 56);
  uint64_t v14 = *(void *)(v7 + 16);
  uint64_t v15 = *(void *)(v7 + 24);
  (*(void (**)(void *__return_ptr))v7)(v35);
  uint64_t v17 = v36;
  uint64_t v16 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  id v18 = sub_191BC1DC0(v14, v15, a6, a7);
  long long v27 = v24;
  uint64_t v28 = v23;
  uint64_t v29 = v11;
  __int16 v30 = v22;
  char v31 = v21;
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  char v34 = v20;
  (*(void (**)(id, long long *, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v16 + 48))(v18, &v27, a1, a3, a4, a6, *(void *)(a7 + 8), v17, v16);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_191BC1880(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return StaticConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t IntentConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v24 = *a2;
  uint64_t v11 = *((void *)a2 + 3);
  uint64_t v23 = *((void *)a2 + 2);
  char v21 = *((unsigned char *)a2 + 34);
  __int16 v22 = *((_WORD *)a2 + 16);
  uint64_t v12 = *((void *)a2 + 5);
  uint64_t v13 = *((void *)a2 + 6);
  char v20 = *((unsigned char *)a2 + 56);
  uint64_t v14 = *(void *)(v7 + 16);
  uint64_t v15 = *(void *)(v7 + 24);
  (*(void (**)(void *__return_ptr))v7)(v35);
  uint64_t v17 = v36;
  uint64_t v16 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  id v18 = sub_191BC1DC0(v14, v15, a6, a7);
  long long v27 = v24;
  uint64_t v28 = v23;
  uint64_t v29 = v11;
  __int16 v30 = v22;
  char v31 = v21;
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  char v34 = v20;
  (*(void (**)(id, long long *, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v16 + 48))(v18, &v27, a1, a3, a4, a6, *(void *)(a7 + 8), v17, v16);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_191BC19C4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return IntentConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t AppIntentConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v24 = *a2;
  uint64_t v11 = *((void *)a2 + 3);
  uint64_t v23 = *((void *)a2 + 2);
  char v21 = *((unsigned char *)a2 + 34);
  __int16 v22 = *((_WORD *)a2 + 16);
  uint64_t v12 = *((void *)a2 + 5);
  uint64_t v13 = *((void *)a2 + 6);
  char v20 = *((unsigned char *)a2 + 56);
  uint64_t v14 = *(void *)(v7 + 16);
  uint64_t v15 = *(void *)(v7 + 24);
  (*(void (**)(void *__return_ptr))v7)(v35);
  uint64_t v17 = v36;
  uint64_t v16 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  id v18 = sub_191BC1DC0(v14, v15, a6, a7);
  long long v27 = v24;
  uint64_t v28 = v23;
  uint64_t v29 = v11;
  __int16 v30 = v22;
  char v31 = v21;
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  char v34 = v20;
  (*(void (**)(id, long long *, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(*(void *)(v16 + 8) + 48))(v18, &v27, a1, a3, a4, a6, *(void *)(a7 + 8), v17, *(void *)(v16 + 8));

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_191BC1B0C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return AppIntentConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t sub_191BC1B18()
{
  sub_191B01614(v0 + 64, (uint64_t)&v3, (uint64_t *)&unk_1EB44BC90);
  if (v4)
  {
    sub_191B4F9C0(&v3, &v5);
    *(void *)&long long v3 = 0;
    *((void *)&v3 + 1) = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRetain();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    swift_bridgeObjectRetain();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF5F38();
    sub_191CF53B8();
    __swift_project_boxed_opaque_existential_1(&v5, v6);
    swift_getDynamicType();
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t v1 = v3;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  }
  else
  {
    sub_191B01770((uint64_t)&v3, (uint64_t *)&unk_1EB44BC90);
    *(void *)&long long v5 = 0;
    *((void *)&v5 + 1) = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRetain();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    swift_bridgeObjectRetain();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF5F38();
    sub_191CF53B8();
    return v5;
  }
  return v1;
}

id sub_191BC1DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;

  id v6 = objc_msgSend(self, sel_mainBundle);
  id v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (!v7)
  {
    __break(1u);
LABEL_11:
    sub_191CF6338();
    __break(1u);
    JUMPOUT(0x191BC1F98);
  }
  sub_191CF5338();

  uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 24);
  swift_bridgeObjectRetain();
  v8(&v16, a3, a4);
  char v9 = 2;
  switch((char)v16)
  {
    case 1:
      goto LABEL_9;
    case 2:
      char v9 = 3;
      goto LABEL_9;
    case 3:
      char v9 = 4;
      goto LABEL_9;
    case 4:
      goto LABEL_11;
    case 5:
      char v9 = 10;
      goto LABEL_9;
    case 6:
      char v9 = 11;
      goto LABEL_9;
    case 7:
      char v9 = 12;
      goto LABEL_9;
    default:
      char v9 = 1;
LABEL_9:
      char v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
      uint64_t v11 = objc_allocWithZone(MEMORY[0x1E4F58DD8]);
      uint64_t v12 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      uint64_t v13 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      uint64_t v14 = objc_msgSend(v11, sel_initWithExtensionBundleIdentifier_containerBundleIdentifier_kind_family_intent_, v12, 0, v13, v9, v10);

      return v14;
  }
}

unint64_t sub_191BC1FB8(uint64_t a1)
{
  unint64_t result = sub_191BC1FE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_191BC1FE0()
{
  unint64_t result = qword_1E92E3FD8;
  if (!qword_1E92E3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3FD8);
  }
  return result;
}

unint64_t sub_191BC2034(uint64_t a1)
{
  unint64_t result = sub_191BC205C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_191BC205C()
{
  unint64_t result = qword_1E92E3FE0;
  if (!qword_1E92E3FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3FE0);
  }
  return result;
}

uint64_t sub_191BC20B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191BC20EC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191BC2128(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for TimelineEntryPreviewSource()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineEntryPreviewSource(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineEntryPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryPreviewSource()
{
  return &type metadata for TimelineEntryPreviewSource;
}

uint64_t destroy for TimelineProviderPreviewSource(uint64_t a1)
{
  swift_release();

  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }

  return swift_release();
}

uint64_t initializeWithCopy for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_retain();
  id v8 = v5;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v10;
    *(void *)(a1 + 64) = *(void *)(v6 + 32);
  }
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v6;
  id v7 = v6;

  uint64_t v8 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 56) = v8;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    long long v9 = *(_OWORD *)(a2 + 32);
    long long v10 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v10;
    goto LABEL_8;
  }
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TimelineProviderPreviewSource()
{
  return &type metadata for TimelineProviderPreviewSource;
}

uint64_t dispatch thunk of TimelinePreviewSource.makeWidget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of TimelinePreviewSource.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TimelineWidgetConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t destroy for UnwrapError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  if (*(void *)(a1 + 88)) {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  return result;
}

uint64_t initializeWithCopy for UnwrapError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v6, v7);
  long long v9 = (_OWORD *)(a1 + 64);
  long long v10 = (_OWORD *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 88);
  if (v11)
  {
    *(void *)(a1 + 88) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 80);
    *long long v9 = *v10;
    *(_OWORD *)(a1 + 80) = v12;
  }
  return a1;
}

uint64_t assignWithCopy for UnwrapError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  uint64_t v4 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v4)
    {
      *(void *)(a1 + 88) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 64, a2 + 64);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for UnwrapError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  if (*(void *)(a1 + 88)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwrapError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnwrapError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnwrapError()
{
  return &type metadata for UnwrapError;
}

unint64_t sub_191BC2BFC()
{
  unint64_t result = qword_1E92E3FF0;
  if (!qword_1E92E3FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3FF0);
  }
  return result;
}

uint64_t sub_191BC2C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191BC2CB8()
{
  unint64_t result = qword_1E92E3FF8;
  if (!qword_1E92E3FF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92E3FF8);
  }
  return result;
}

uint64_t sub_191BC2CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF56B8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_191CF56A8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_191BAD64C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_191CF5648();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

unint64_t static WidgetCenter.serviceName.getter()
{
  return 0xD000000000000027;
}

id static WidgetCenter.configuredHostXPCInterface.getter()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EE2B6180);
  sub_191BCB984();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8420;
  *(void *)(inited + 32) = sub_191B016E0(0, (unint64_t *)&unk_1EB44C720);
  *(void *)(inited + 40) = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
  swift_setDeallocating();
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  objc_msgSend(v0, sel_setClass_forSelector_argumentIndex_ofReply_, swift_getObjCClassFromMetadata(), sel__loadCurrentConfigurations_, 1, 1);
  return v0;
}

uint64_t sub_191BC2FCC()
{
  type metadata accessor for WidgetCenter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_191BC9004();
  qword_1EB44A198 = v0;
  return result;
}

uint64_t static WidgetCenter.shared.getter()
{
  if (qword_1EB44A1B0 != -1) {
    swift_once();
  }

  return swift_retain();
}

id sub_191BC3064()
{
  uint64_t v1 = v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 24) + 16));
  unint64_t v2 = *(void **)(v0 + 32);
  if (v2)
  {
    id v3 = *(id *)(v0 + 32);
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191CF3858();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
    uint64_t v5 = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5948();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_191AF4000, v5, v6, "Creating WidgetCenter connection.", v7, 2u);
      MEMORY[0x192FE5F00](v7, -1, -1);
    }

    id v8 = objc_allocWithZone(MEMORY[0x1E4F29268]);
    int v9 = (void *)sub_191CF5318();
    id v10 = objc_msgSend(v8, sel_initWithMachServiceName_options_, v9, 0);

    uint64_t v11 = self;
    id v12 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EE2B6180);
    sub_191BCB984();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191CF8420;
    *(void *)(inited + 32) = sub_191B016E0(0, (unint64_t *)&unk_1EB44C720);
    *(void *)(inited + 40) = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
    swift_setDeallocating();
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    objc_msgSend(v12, sel_setClass_forSelector_argumentIndex_ofReply_, swift_getObjCClassFromMetadata(), sel__loadCurrentConfigurations_, 1, 1);
    objc_msgSend(v10, sel_setRemoteObjectInterface_, v12);

    id v14 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EE2B61E0);
    objc_msgSend(v10, sel_setExportedInterface_, v14);

    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = sub_191BCBD54;
    uint64_t v27 = v15;
    uint64_t v22 = MEMORY[0x1E4F143A8];
    uint64_t v23 = 1107296256;
    long long v24 = sub_191C2AD74;
    uint64_t v25 = &block_descriptor_1;
    uint64_t v16 = _Block_copy(&v22);
    swift_release();
    objc_msgSend(v10, sel_setInterruptionHandler_, v16);
    _Block_release(v16);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = sub_191BCBD78;
    uint64_t v27 = v17;
    uint64_t v22 = MEMORY[0x1E4F143A8];
    uint64_t v23 = 1107296256;
    long long v24 = sub_191C2AD74;
    uint64_t v25 = &block_descriptor_17;
    id v18 = _Block_copy(&v22);
    swift_release();
    objc_msgSend(v10, sel_setInvalidationHandler_, v18);
    _Block_release(v18);
    objc_msgSend(v10, sel_resume);
    long long v19 = *(void **)(v1 + 32);
    *(void *)(v1 + 32) = v10;
    id v3 = v10;

    unint64_t v2 = 0;
  }
  id v20 = v2;
  return v3;
}

uint64_t sub_191BC347C(uint64_t a1, const char *a2)
{
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191CF3858();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB44CCE0);
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5928();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v6 = 0;
    _os_log_impl(&dword_191AF4000, v4, v5, a2, v6, 2u);
    MEMORY[0x192FE5F00](v6, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void *)(result + 24);
    id v10 = *(os_unfair_lock_s **)(v9 + 16);
    swift_retain();
    os_unfair_lock_lock(v10);
    uint64_t v11 = *(void **)(v8 + 32);
    *(void *)(v8 + 32) = 0;

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_191BC35C8()
{
  uint64_t result = sub_191CF5338();
  qword_1E92E1B20 = result;
  *(void *)algn_1E92E1B28 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.kind.getter()
{
  return sub_191BC36D0(&qword_1E92E1B18, &qword_1E92E1B20);
}

uint64_t sub_191BC3620()
{
  uint64_t result = sub_191CF5338();
  qword_1E92E1030 = result;
  *(void *)algn_1E92E1038 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.family.getter()
{
  return sub_191BC36D0(&qword_1E92E1040, &qword_1E92E1030);
}

uint64_t sub_191BC3678()
{
  uint64_t result = sub_191CF5338();
  qword_1E92E4000 = result;
  *(void *)algn_1E92E4008 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.activityID.getter()
{
  return sub_191BC36D0(&qword_1E92E2C68, &qword_1E92E4000);
}

uint64_t sub_191BC36D0(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_191BC3724()
{
  return sub_191BC882C((void (*)(uint64_t))sub_191BC373C);
}

uint64_t sub_191BC373C()
{
  id v0 = sub_191BC3064();
  long long v19 = sub_191BC3AF0;
  uint64_t v20 = 0;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_191C6E398;
  id v18 = &block_descriptor_149;
  uint64_t v1 = _Block_copy(&v15);
  id v2 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v1);
  _Block_release(v1);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v21, (uint64_t)&v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)v22;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191CF3858();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
    os_log_type_t v5 = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5948();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_191AF4000, v5, v6, "Invalidate widget configuration recommendations.", v7, 2u);
      MEMORY[0x192FE5F00](v7, -1, -1);
    }

    long long v19 = sub_191BC3B0C;
    uint64_t v20 = 0;
    uint64_t v15 = MEMORY[0x1E4F143A8];
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_191C6E3A0;
    id v18 = &block_descriptor_152_0;
    uint64_t v8 = _Block_copy(&v15);
    objc_msgSend(v3, sel_invalidateConfigurationRecommendationsWithCompletion_, v8);
    _Block_release(v8);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191CF3858();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB44CCE0);
    id v10 = sub_191CF3838();
    os_log_type_t v11 = sub_191CF5928();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      *(_DWORD *)id v12 = 136446210;
      uint64_t v22 = sub_191C5C36C(0xD000000000000028, 0x8000000191D0F600, &v15);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v13, -1, -1);
      MEMORY[0x192FE5F00](v12, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

void sub_191BC3AF0(void *a1)
{
}

void sub_191BC3B0C(void *a1)
{
}

uint64_t sub_191BC3B28(uint64_t a1, uint64_t a2)
{
  return sub_191BC9324(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_191BC3B40);
}

uint64_t sub_191BC3B40()
{
  id v0 = sub_191BC3064();
  uint64_t v20 = sub_191BC3F14;
  uint64_t v21 = 0;
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 1107296256;
  id v18 = sub_191C6E398;
  long long v19 = &block_descriptor_143;
  uint64_t v1 = _Block_copy(&v16);
  id v2 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v1);
  _Block_release(v1);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v22, (uint64_t)&v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)v23;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191CF3858();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
    os_log_type_t v5 = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5948();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_191AF4000, v5, v6, "Invalidate widget configuration recommendations.", v7, 2u);
      MEMORY[0x192FE5F00](v7, -1, -1);
    }

    uint64_t v8 = (void *)sub_191CF5318();
    uint64_t v20 = sub_191BC3F30;
    uint64_t v21 = 0;
    uint64_t v16 = MEMORY[0x1E4F143A8];
    uint64_t v17 = 1107296256;
    id v18 = sub_191C6E3A0;
    long long v19 = &block_descriptor_146;
    uint64_t v9 = _Block_copy(&v16);
    objc_msgSend(v3, sel_invalidateConfigurationRecommendationsInBundle_completion_, v8, v9);
    _Block_release(v9);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_191CF3858();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB44CCE0);
    os_log_type_t v11 = sub_191CF3838();
    os_log_type_t v12 = sub_191CF5928();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v23 = sub_191C5C36C(0xD000000000000031, 0x8000000191D0F5C0, &v16);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v14, -1, -1);
      MEMORY[0x192FE5F00](v13, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_191BC3F14(void *a1)
{
}

void sub_191BC3F30(void *a1)
{
}

void sub_191BC3F4C(void *a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    id v6 = a1;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_191CF3858();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB44CCE0);
    id v8 = a1;
    id v9 = a1;
    oslog = sub_191CF3838();
    os_log_type_t v10 = sub_191CF5928();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      os_log_type_t v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = v13;
      *(_DWORD *)uint64_t v11 = 136446466;
      sub_191C5C36C(a2, a3, &v21);
      sub_191CF5C08();
      *(_WORD *)(v11 + 12) = 2114;
      id v14 = a1;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      *os_log_type_t v12 = v20;

      _os_log_impl(&dword_191AF4000, oslog, v10, "%{public}s - error reloading supported intents: %{public}@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v13, -1, -1);
      MEMORY[0x192FE5F00](v11, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_191CF3858();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB44CCE0);
    oslog = sub_191CF3838();
    os_log_type_t v16 = sub_191CF5928();
    if (os_log_type_enabled(oslog, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v21 = v18;
      *(_DWORD *)uint64_t v17 = 136446210;
      sub_191C5C36C(a2, a3, &v21);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, oslog, v16, "%{public}s - success", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v18, -1, -1);
      MEMORY[0x192FE5F00](v17, -1, -1);

      return;
    }
  }
}

uint64_t sub_191BC42EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  id v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_retain();
  sub_191BC2CF8((uint64_t)v7, (uint64_t)&unk_1E92E4018, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_191BC4404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = sub_191CF5168();
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v8 = sub_191CF51C8();
  v6[16] = v8;
  v6[17] = *(void *)(v8 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BC4524, 0, 0);
}

uint64_t sub_191BC4524()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2450);
  *uint64_t v1 = v0;
  v1[1] = sub_191BC4608;
  uint64_t v3 = *(void *)(v0 + 80);
  return MEMORY[0x1F4188160](v0 + 64, 0, 0, 0xD000000000000017, 0x8000000191D0EB00, sub_191BCBAEC, v3, v2);
}

uint64_t sub_191BC4608()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BC4970;
  }
  else {
    uint64_t v2 = sub_191BC471C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BC471C()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[16];
  uint64_t v4 = v0[12];
  uint64_t v11 = v0[13];
  uint64_t v5 = v0[11];
  char v6 = v0[20] != 0;
  uint64_t v12 = v0[14];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v1;
  *(unsigned char *)(v7 + 40) = v6;
  v0[6] = sub_191BCC760;
  v0[7] = v7;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_191C2AD74;
  v0[5] = &block_descriptor_139;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  sub_191BCC794(v1, v6);
  sub_191CF5188();
  v0[9] = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v2, v3, v8);
  _Block_release(v8);
  sub_191BCC754(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_191BC4970()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[16];
  uint64_t v4 = v0[12];
  uint64_t v10 = v0[13];
  uint64_t v5 = v0[11];
  uint64_t v11 = v0[14];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 32) = v1;
  *(unsigned char *)(v6 + 40) = v1 != 0;
  v0[6] = sub_191BCC760;
  v0[7] = v6;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_191C2AD74;
  v0[5] = &block_descriptor_139;
  uint64_t v7 = _Block_copy(v0 + 2);
  swift_retain();
  sub_191BCC794(v1, v1 != 0);
  sub_191CF5188();
  v0[9] = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v2, v3, v7);
  _Block_release(v7);
  sub_191BCC754(v1, v1 != 0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v10);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_191BC4BC0()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_191BC4BE0, 0, 0);
}

uint64_t sub_191BC4BE0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2450);
  *uint64_t v1 = v0;
  v1[1] = sub_191B91854;
  uint64_t v3 = *(void *)(v0 + 24);
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000017, 0x8000000191D0EB00, sub_191BCBAEC, v3, v2);
}

uint64_t sub_191BC4CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_191BC4D3C(a2, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  return swift_release();
}

uint64_t sub_191BC4D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5168();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v50 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_191CF51C8();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  unint64_t v48 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_191BC3064();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v58 = a2;
  uint64_t v55 = v12;
  v12(v10, a2, v7);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = (v13 + 24) & ~v13;
  uint64_t v47 = v9;
  uint64_t v54 = v13;
  uint64_t v46 = v14 + v9;
  uint64_t v56 = v13 | 7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v16 = v8 + 32;
  id v57 = v17;
  v17(v15 + v14, v10, v7);
  uint64_t v64 = sub_191BCC1A4;
  uint64_t v65 = v15;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v61 = 1107296256;
  unint64_t v62 = sub_191C6E398;
  uint64_t v63 = &block_descriptor_93;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v66, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v20 = (void *)v59;
    v55(v10, v58, v7);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a1;
    v57(v21 + v14, v10, v7);
    uint64_t v64 = sub_191BCC2E0;
    uint64_t v65 = v21;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v61 = 1107296256;
    unint64_t v62 = sub_191BC6B14;
    uint64_t v63 = &block_descriptor_105;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel__loadCurrentConfigurations_, v22);
    _Block_release(v22);
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  }
  else
  {
    uint64_t v46 = v16;
    uint64_t v44 = v7;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v45 = ~v54;
    uint64_t v24 = sub_191CF3858();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB44CCE0);
    uint64_t v25 = sub_191CF3838();
    os_log_type_t v26 = sub_191CF5928();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t aBlock = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      v43[1] = v27 + 4;
      uint64_t v59 = sub_191C5C36C(0xD000000000000017, 0x8000000191D0EB00, &aBlock);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v28, -1, -1);
      MEMORY[0x192FE5F00](v27, -1, -1);
    }

    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t aBlock = 0;
    unint64_t v61 = 0xE000000000000000;
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF53B8();
    uint64_t v29 = aBlock;
    uint64_t v30 = v61;
    uint64_t v31 = sub_191CF5338();
    id v33 = sub_191BDA6B4(v31, v32, 1200, 0, v29, v30);
    uint64_t v34 = v44;
    v55(v10, v58, v44);
    uint64_t v35 = (v54 + 16) & v45;
    unint64_t v36 = (v47 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    v57(v37 + v35, v10, v34);
    *(void *)(v37 + v36) = v33;
    uint64_t v64 = sub_191BCC2C4;
    uint64_t v65 = v37;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v61 = 1107296256;
    unint64_t v62 = sub_191C2AD74;
    uint64_t v63 = &block_descriptor_99;
    uint64_t v38 = _Block_copy(&aBlock);
    id v39 = v33;
    unint64_t v40 = v48;
    sub_191CF5188();
    uint64_t v59 = MEMORY[0x1E4FBC860];
    sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    uint64_t v41 = v50;
    uint64_t v42 = v53;
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v40, v41, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v51);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    return swift_release();
  }
}

uint64_t sub_191BC55B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v4 = sub_191CF5168();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v40 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_191CF51C8();
  uint64_t v39 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v38 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v33 = v9;
  uint64_t v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_191CF3858();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB44CCE0);
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_191CF3838();
  os_log_type_t v14 = sub_191CF5928();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v32 = v4;
    uint64_t v41 = sub_191C5C36C(0xD000000000000017, 0x8000000191D0EB00, aBlock);
    sub_191CF5C08();
    *(_WORD *)(v15 + 12) = 2112;
    id v16 = a1;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v41 = v17;
    uint64_t v4 = v32;
    sub_191CF5C08();
    uint64_t v18 = v30;
    *uint64_t v30 = v17;

    _os_log_impl(&dword_191AF4000, v13, v14, "%s - remoteObjectProxy error: %@", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v18, -1, -1);
    uint64_t v19 = v31;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v19, -1, -1);
    MEMORY[0x192FE5F00](v15, -1, -1);
  }
  else
  {
  }
  uint64_t v20 = v34;
  uint64_t v21 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v34, v37, v36);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v23 = (v33 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v22, v20, v21);
  *(void *)(v24 + v23) = a1;
  aBlock[4] = (uint64_t)sub_191BCC564;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_191C2AD74;
  aBlock[3] = (uint64_t)&block_descriptor_128;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = a1;
  uint64_t v27 = v38;
  sub_191CF5188();
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  uint64_t v28 = v40;
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v27, v28, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v35);
  return swift_release();
}

uint64_t sub_191BC5B5C(uint64_t a1, void *a2)
{
  id v2 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  return sub_191CF5658();
}

uint64_t sub_191BC5BA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v28 = a1;
  uint64_t v6 = sub_191CF5168();
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF51C8();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v32 = *(void *)(v32 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    *(void *)(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    aBlock[4] = sub_191BCC564;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191C2AD74;
    aBlock[3] = &block_descriptor_115;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = a2;
    id v22 = a2;
    sub_191CF5188();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v11, v8, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  }
  else
  {
    uint64_t v23 = sub_191CF56B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v25 = (char *)swift_allocObject();
    *((void *)v25 + 2) = 0;
    *((void *)v25 + 3) = 0;
    uint64_t v26 = v32;
    *((void *)v25 + 4) = v28;
    *((void *)v25 + 5) = v26;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_191BC2CF8((uint64_t)v17, (uint64_t)&unk_1E92E4058, (uint64_t)v25);
  }
  return swift_release();
}

uint64_t sub_191BC6074(int a1, id a2)
{
  id v2 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  return sub_191CF5658();
}

uint64_t sub_191BC60C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[20] = a5;
  v6[21] = a6;
  v6[19] = a4;
  uint64_t v7 = sub_191CF5168();
  v6[22] = v7;
  v6[23] = *(void *)(v7 - 8);
  v6[24] = swift_task_alloc();
  uint64_t v8 = sub_191CF51C8();
  v6[25] = v8;
  v6[26] = *(void *)(v8 - 8);
  v6[27] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  v6[28] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[29] = v10;
  v6[30] = *(void *)(v10 + 64);
  v6[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BC6248, 0, 0);
}

uint64_t sub_191BC6248()
{
  unint64_t v1 = v0[19];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_191CF6018();
    uint64_t v2 = result;
    v0[32] = result;
    if (result)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v4 = v0[19];
        uint64_t v5 = MEMORY[0x1E4FBC860];
        v0[33] = 0;
        v0[34] = v5;
        if ((v4 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x192FE4B60](0);
        }
        else {
          id v6 = *(id *)(v4 + 32);
        }
        v0[35] = v6;
        id v7 = v6;
        uint64_t v8 = (void *)swift_task_alloc();
        v0[36] = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_191BC65E0;
        return sub_191B651E4((uint64_t)(v0 + 2), (uint64_t)v7);
      }
      return result;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    v0[32] = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v0[30];
  uint64_t v10 = v0[31];
  uint64_t v12 = v0[28];
  uint64_t v11 = v0[29];
  uint64_t v13 = v0[27];
  uint64_t v14 = v0[24];
  uint64_t v23 = v0[26];
  uint64_t v24 = v0[25];
  uint64_t v21 = v0[22];
  uint64_t v22 = v0[23];
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v10, v0[21], v12);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v17 + v15, v10, v12);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v17 + v16) = MEMORY[0x1E4FBC860];
  v0[16] = sub_191BCC604;
  v0[17] = v17;
  v0[12] = MEMORY[0x1E4F143A8];
  v0[13] = 1107296256;
  v0[14] = sub_191C2AD74;
  v0[15] = &block_descriptor_121;
  uint64_t v19 = _Block_copy(v0 + 12);
  sub_191CF5188();
  v0[18] = v18;
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v13, v14, v19);
  _Block_release(v19);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v24);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_191BC65E0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_191BC66DC, 0, 0);
}

uint64_t sub_191BC66DC()
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void **)(v0 + 272);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v2 = sub_191B41430(0, v2[2] + 1, 1, *(void **)(v0 + 272));
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_191B41430((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  uint64_t v5 = *(void **)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 264) + 1;
  v2[2] = v4 + 1;
  uint64_t v8 = &v2[10 * v4];
  v8[2] = *(_OWORD *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 48);
  long long v11 = *(_OWORD *)(v0 + 80);
  v8[5] = *(_OWORD *)(v0 + 64);
  v8[6] = v11;
  v8[3] = v9;
  v8[4] = v10;

  if (v7 == v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v12 = *(void *)(v0 + 248);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);
    uint64_t v31 = *(void *)(v0 + 208);
    uint64_t v32 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 192);
    uint64_t v29 = *(void *)(v0 + 176);
    uint64_t v30 = *(void *)(v0 + 184);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 16))(v12, *(void *)(v0 + 168), v15);
    unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v19 + v17, v12, v15);
    *(void *)(v19 + v18) = v2;
    *(void *)(v0 + 128) = sub_191BCC604;
    *(void *)(v0 + 136) = v19;
    *(void *)(v0 + 96) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 104) = 1107296256;
    *(void *)(v0 + 112) = sub_191C2AD74;
    *(void *)(v0 + 120) = &block_descriptor_121;
    uint64_t v20 = _Block_copy((const void *)(v0 + 96));
    sub_191CF5188();
    *(void *)(v0 + 144) = MEMORY[0x1E4FBC860];
    sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v16, v28, v20);
    _Block_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v16, v32);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 264) + 1;
    *(void *)(v0 + 264) = v23;
    *(void *)(v0 + 272) = v2;
    uint64_t v24 = *(void *)(v0 + 152);
    if ((v24 & 0xC000000000000001) != 0) {
      id v25 = (id)MEMORY[0x192FE4B60]();
    }
    else {
      id v25 = *(id *)(v24 + 8 * v23 + 32);
    }
    *(void *)(v0 + 280) = v25;
    id v26 = v25;
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_191BC65E0;
    return sub_191B651E4(v0 + 16, (uint64_t)v26);
  }
}

uint64_t sub_191BC6AC8()
{
  return sub_191CF5668();
}

void sub_191BC6B14(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
  uint64_t v5 = sub_191CF5538();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_191BC6BC4(uint64_t a1, uint64_t a2)
{
  return sub_191BC9324(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_191BC6BDC);
}

uint64_t sub_191BC6BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_191BC3064();
  uint64_t v22 = sub_191BC6F3C;
  uint64_t v23 = 0;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_191C6E398;
  uint64_t v21 = &block_descriptor_81;
  id v6 = _Block_copy(&v18);
  id v7 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v6);
  _Block_release(v6);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v24, (uint64_t)&v18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v8 = (void *)v25;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    swift_bridgeObjectRetain();
    long long v10 = (void *)sub_191CF5318();
    uint64_t v22 = sub_191BCC198;
    uint64_t v23 = v9;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_191C6E3A0;
    uint64_t v21 = &block_descriptor_87;
    long long v11 = _Block_copy(&v18);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel__reloadTimelinesOfKind_completion_, v10, v11);
    _Block_release(v11);

    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_191CF3858();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB44CCE0);
    uint64_t v13 = sub_191CF3838();
    os_log_type_t v14 = sub_191CF5928();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v25 = sub_191C5C36C(0xD000000000000018, 0x8000000191D0F580, &v18);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v16, -1, -1);
      MEMORY[0x192FE5F00](v15, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

void sub_191BC6F3C(void *a1)
{
}

void sub_191BC6F58(void *a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    id v6 = a1;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_191CF3858();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain();
    id v8 = a1;
    swift_bridgeObjectRetain();
    id v9 = a1;
    oslog = sub_191CF3838();
    os_log_type_t v10 = sub_191CF5928();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v11 = 136446722;
      sub_191C5C36C(0xD000000000000018, 0x8000000191D0F580, &v22);
      sub_191CF5C08();
      *(_WORD *)(v11 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a2, a3, &v22);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 22) = 2114;
      id v14 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      *uint64_t v12 = v21;

      _os_log_impl(&dword_191AF4000, oslog, v10, "%{public}s - error reloading timelines of kind '%{public}s': %{public}@", (uint8_t *)v11, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v13, -1, -1);
      MEMORY[0x192FE5F00](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_191CF3858();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_191CF3838();
    os_log_type_t v17 = sub_191CF5948();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      sub_191C5C36C(0xD000000000000018, 0x8000000191D0F580, &v22);
      sub_191CF5C08();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a2, a3, &v22);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v16, v17, "%{public}s - reloaded timelines of kind '%{public}s'", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v19, -1, -1);
      MEMORY[0x192FE5F00](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_191BC73E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(v6 + 24);
  id v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_191BC749C(v6, a5, a6, a1, a2, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));

  return swift_release();
}

uint64_t sub_191BC749C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v41[1] = a7;
  uint64_t v12 = sub_191CF5168();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v44 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_191CF51C8();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v42 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = sub_191BC3064();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  uint64_t v53 = sub_191BCC048;
  uint64_t v54 = v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v50 = 1107296256;
  uint64_t v51 = sub_191C6E398;
  uint64_t v52 = &block_descriptor_54;
  os_log_type_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v15, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v55, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v19 = (void *)v48;
    uint64_t v20 = (void *)sub_191CF5318();
    uint64_t v21 = (void *)sub_191CF5318();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a1;
    void v22[3] = a2;
    v22[4] = a3;
    v22[5] = a4;
    uint64_t v22[6] = a5;
    uint64_t v53 = sub_191BCC0D8;
    uint64_t v54 = v22;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v50 = 1107296256;
    uint64_t v51 = sub_191C6E3A0;
    uint64_t v52 = &block_descriptor_66;
    uint64_t v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v19, sel__reloadTimelinesOfKind_inBundle_completion_, v20, v21, v23);
    _Block_release(v23);

    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191CF3858();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB44CCE0);
    id v26 = sub_191CF3838();
    os_log_type_t v27 = sub_191CF5928();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v48 = sub_191C5C36C(0xD00000000000002CLL, 0x8000000191D0F500, &aBlock);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v29, -1, -1);
      MEMORY[0x192FE5F00](v28, -1, -1);
    }

    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t aBlock = 0;
    unint64_t v50 = 0xE000000000000000;
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF53B8();
    uint64_t v30 = aBlock;
    uint64_t v31 = v50;
    uint64_t v32 = sub_191CF5338();
    id v34 = sub_191BDA6B4(v32, v33, 1200, 0, v30, v31);
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = a2;
    void v35[3] = a3;
    v35[4] = v34;
    uint64_t v53 = sub_191BCC094;
    uint64_t v54 = v35;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v50 = 1107296256;
    uint64_t v51 = sub_191C2AD74;
    uint64_t v52 = &block_descriptor_60;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_retain();
    id v37 = v34;
    uint64_t v38 = v42;
    sub_191CF5188();
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    uint64_t v39 = v44;
    uint64_t v40 = v47;
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v38, v39, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    return swift_release();
  }
}

uint64_t sub_191BC7BB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_191CF5168();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v41 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF51C8();
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_191CF3858();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB44CCE0);
  id v14 = a1;
  id v15 = a1;
  uint64_t v16 = sub_191CF3838();
  os_log_type_t v17 = sub_191CF5928();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v37 = v11;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v21 = (void *)v20;
    uint64_t v34 = swift_slowAlloc();
    aBlock[0] = v34;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v38 = v9;
    uint64_t v36 = v8;
    uint64_t v42 = sub_191C5C36C(0xD00000000000002CLL, 0x8000000191D0F500, aBlock);
    sub_191CF5C08();
    *(_WORD *)(v19 + 12) = 2114;
    id v22 = a1;
    uint64_t v23 = a3;
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v42 = v24;
    uint64_t v8 = v36;
    uint64_t v9 = v38;
    sub_191CF5C08();
    *uint64_t v21 = v24;
    a3 = v23;

    _os_log_impl(&dword_191AF4000, v16, v17, "%{public}s - remoteObjectProxy error: %{public}@", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v21, -1, -1);
    uint64_t v25 = v34;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v25, -1, -1);
    uint64_t v26 = v19;
    uint64_t v11 = v37;
    MEMORY[0x192FE5F00](v26, -1, -1);
  }
  else
  {
  }
  os_log_type_t v27 = (void *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a4;
  v27[4] = a1;
  aBlock[4] = (uint64_t)sub_191BCC094;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_191C2AD74;
  aBlock[3] = (uint64_t)&block_descriptor_78;
  uint64_t v28 = _Block_copy(aBlock);
  id v29 = a1;
  swift_retain();
  uint64_t v30 = v39;
  sub_191CF5188();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  uint64_t v31 = v41;
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v30, v31, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v11);
  return swift_release();
}

uint64_t sub_191BC80A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a1)
  {
    uint64_t v11 = a1;
    id v12 = a1;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_191CF3858();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain();
    id v14 = v11;
    swift_bridgeObjectRetain();
    id v15 = v11;
    uint64_t v16 = sub_191CF3838();
    os_log_type_t v17 = sub_191CF5928();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v32 = a3;
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v31 = a4;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v35 = v20;
      *(_DWORD *)uint64_t v18 = 136446722;
      sub_191C5C36C(0xD00000000000002CLL, 0x8000000191D0F500, &v35);
      sub_191CF5C08();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a5, a6, &v35);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2114;
      id v21 = v11;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      *uint64_t v19 = v34;

      _os_log_impl(&dword_191AF4000, v16, v17, "%{public}s - error reloading timelines of kind '%{public}s': %{public}@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      id v22 = v19;
      a3 = v32;
      MEMORY[0x192FE5F00](v22, -1, -1);
      swift_arrayDestroy();
      uint64_t v23 = v20;
      a4 = v31;
      MEMORY[0x192FE5F00](v23, -1, -1);
      MEMORY[0x192FE5F00](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_191CF3858();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_191CF3838();
    os_log_type_t v26 = sub_191CF5948();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v33 = a3;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v35 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      sub_191C5C36C(0xD00000000000002CLL, 0x8000000191D0F500, &v35);
      sub_191CF5C08();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a5, a6, &v35);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v25, v26, "%{public}s - reloaded timelines of kind '%{public}s'", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v28, -1, -1);
      uint64_t v29 = v27;
      a3 = v33;
      MEMORY[0x192FE5F00](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v11 = 0;
  }
  return sub_191BC8554(a2, a3, a4, v11);
}

uint64_t sub_191BC8554(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_191CF5168();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_191CF51C8();
  uint64_t v11 = *(void *)(v18[0] - 8);
  MEMORY[0x1F4188790](v18[0]);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  aBlock[4] = sub_191BCC0EC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_72;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a4;
  sub_191CF5188();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v13, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void))(v11 + 8))(v13, v18[0]);
  return swift_release();
}

uint64_t sub_191BC8814()
{
  return sub_191BC882C((void (*)(uint64_t))sub_191BC88A0);
}

uint64_t sub_191BC882C(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  a1(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  return swift_release();
}

uint64_t sub_191BC88A0()
{
  id v0 = sub_191BC3064();
  id v15 = sub_191BC8BA0;
  uint64_t v16 = 0;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_191C6E398;
  id v14 = &block_descriptor_45;
  uint64_t v1 = _Block_copy(&v11);
  id v2 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v1);
  _Block_release(v1);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v17, (uint64_t)&v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)v18;
    id v15 = sub_191BC8BBC;
    uint64_t v16 = 0;
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_191C6E3A0;
    id v14 = &block_descriptor_48;
    unint64_t v4 = _Block_copy(&v11);
    objc_msgSend(v3, sel__reloadAllTimelines_, v4);
    _Block_release(v4);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_191CF3858();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB44CCE0);
    uint64_t v6 = sub_191CF3838();
    os_log_type_t v7 = sub_191CF5928();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v11 = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      uint64_t v18 = sub_191C5C36C(0xD000000000000014, 0x8000000191D0F4E0, &v11);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v9, -1, -1);
      MEMORY[0x192FE5F00](v8, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

void sub_191BC8BA0(void *a1)
{
}

void sub_191BC8BBC(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_191CF3858();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB44CCE0);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_191CF3838();
    os_log_type_t v6 = sub_191CF5928();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_191C5C36C(0xD000000000000014, 0x8000000191D0F4E0, &v17);
      sub_191CF5C08();
      *(_WORD *)(v7 + 12) = 2114;
      id v10 = a1;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      *uint64_t v8 = v16;

      _os_log_impl(&dword_191AF4000, oslog, v6, "%{public}s - error reloading all timelines: %{public}@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v9, -1, -1);
      MEMORY[0x192FE5F00](v7, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_191CF3858();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB44CCE0);
    oslog = sub_191CF3838();
    os_log_type_t v12 = sub_191CF5948();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      sub_191C5C36C(0xD000000000000014, 0x8000000191D0F4E0, &v17);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, oslog, v12, "%{public}s - reloaded all timelines", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v14, -1, -1);
      MEMORY[0x192FE5F00](v13, -1, -1);

      return;
    }
  }
}

double static WidgetCenter.Private_Timeouts.placeholder.getter()
{
  return 15.0;
}

double static WidgetCenter.Private_Timeouts.timeline.getter()
{
  return 30.0;
}

double static WidgetCenter.Private_Timeouts.URLSessionEvents.getter()
{
  return 30.0;
}

uint64_t WidgetCenter.deinit()
{
  swift_release();
  return v0;
}

uint64_t WidgetCenter.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_191BC9004()
{
  uint64_t v1 = v0;
  v10[0] = sub_191CF5A08();
  uint64_t v2 = *(void *)(v10[0] - 8);
  MEMORY[0x1F4188790](v10[0]);
  id v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF59E8();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_191CF51C8();
  MEMORY[0x1F4188790](v6 - 8);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  sub_191CF51A8();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_191BCC7A0(&qword_1EB44C5D0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C5C0);
  sub_191B1745C(&qword_1EB44C5C8, &qword_1EB44C5C0);
  sub_191CF5C98();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, *MEMORY[0x1E4FBCC68], v10[0]);
  *(void *)(v0 + 16) = sub_191CF5A38();
  type metadata accessor for UnfairLock();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  *uint64_t v8 = 0;
  *(void *)(v7 + 16) = v8;
  *(void *)(v1 + 24) = v7;
  *(void *)(v1 + 32) = 0;
  return v1;
}

Swift::Void __swiftcall WidgetCenter.invalidateRelevance(ofKind:)(Swift::String ofKind)
{
  object = ofKind._object;
  uint64_t countAndFlagsBits = ofKind._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_191BC93B0(v1, countAndFlagsBits, (unint64_t)object);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  swift_release();
}

Swift::Void __swiftcall WidgetCenter.invalidateRelevances(ofKind:)(Swift::String ofKind)
{
}

uint64_t sub_191BC9324(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  a3(v3, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  return swift_release();
}

uint64_t sub_191BC93B0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_191BC3064();
  aBlock[4] = sub_191BC989C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C6E398;
  aBlock[3] = &block_descriptor_37;
  id v10 = _Block_copy(aBlock);
  id v11 = objc_msgSend(v9, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v33;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_191CF3858();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_191CF3838();
    os_log_type_t v15 = sub_191CF5948();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v30 = a2;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = v3;
      uint64_t v19 = v18;
      v31[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_191C5C36C(v30, a3, v31);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v14, v15, "Invalidate widget relevances for %{public}s.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v19, -1, -1);
      uint64_t v20 = v17;
      a2 = v30;
      MEMORY[0x192FE5F00](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v26 = sub_191CF56B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v12;
    v27[5] = a2;
    v27[6] = a3;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_191BC2CF8((uint64_t)v8, (uint64_t)&unk_1E92E4048, (uint64_t)v27);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_191CF3858();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB44CCE0);
    id v22 = sub_191CF3838();
    os_log_type_t v23 = sub_191CF5928();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v31[0] = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v33 = sub_191C5C36C(0xD00000000000001DLL, 0x8000000191D0F4C0, v31);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v25, -1, -1);
      MEMORY[0x192FE5F00](v24, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

void sub_191BC989C(void *a1)
{
}

uint64_t sub_191BC98B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return MEMORY[0x1F4188298](sub_191BC98DC, 0, 0);
}

uint64_t sub_191BC98DC()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = sub_191CF5318();
  v0[18] = v2;
  v0[2] = v0;
  v0[3] = sub_191BC99E4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_191BCA024;
  v0[13] = &block_descriptor_42;
  v0[14] = v3;
  objc_msgSend(v1, sel_invalidateRelevancesOfKind_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_191BC99E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_191BC9D24;
  }
  else {
    uint64_t v2 = sub_191BC9AF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BC9AF4()
{
  uint64_t v12 = v0;

  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CCE0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 136);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    *(void *)(v0 + 80) = sub_191C5C36C(0xD00000000000001DLL, 0x8000000191D0F4C0, &v11);
    sub_191CF5C08();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_191C5C36C(v6, v5, &v11);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v2, v3, "%{public}s - invalidated relevances for widget of kind '%{public}s'", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v8, -1, -1);
    MEMORY[0x192FE5F00](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_191BC9D24()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[18];
  swift_willThrow();

  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[19];
  uint64_t v3 = sub_191CF3858();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB44CCE0);
  swift_bridgeObjectRetain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  id v5 = v2;
  uint64_t v6 = sub_191CF3838();
  os_log_type_t v7 = sub_191CF5928();
  BOOL v8 = os_log_type_enabled(v6, v7);
  id v9 = (void *)v0[19];
  unint64_t v10 = v0[17];
  if (v8)
  {
    uint64_t v17 = v0[16];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)uint64_t v11 = 136446722;
    v0[10] = sub_191C5C36C(0xD00000000000001DLL, 0x8000000191D0F4C0, v19);
    sub_191CF5C08();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[10] = sub_191C5C36C(v17, v10, v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2114;
    id v13 = v9;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v14;
    sub_191CF5C08();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_191AF4000, v6, v7, "%{public}s - error invalidating relevances for widget of kind '%{public}s': %{public}@", (uint8_t *)v11, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v18, -1, -1);
    MEMORY[0x192FE5F00](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_191BCA024(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x1F4188200](v7);
  }
}

uint64_t WidgetCenter.invalidateRelevances(ofKind:inBundle:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 24);
  unint64_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_191BCA158(v4, a1, a2, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));

  return swift_release();
}

uint64_t sub_191BCA158(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_191BC3064();
  aBlock[4] = sub_191BCA670;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C6E398;
  aBlock[3] = &block_descriptor_29;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)aBlock, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v35 = v38;
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_191CF3858();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_191CF3838();
    os_log_type_t v18 = sub_191CF5948();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v33 = a5;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v34 = v5;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v32 = a4;
      uint64_t v22 = v21;
      v36[0] = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_191C5C36C(a2, a3, v36);
      a5 = v33;
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v17, v18, "Invalidate widget relevances for %{public}s.", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v23 = v22;
      a4 = v32;
      MEMORY[0x192FE5F00](v23, -1, -1);
      MEMORY[0x192FE5F00](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = sub_191CF56B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = v35;
    v30[5] = a2;
    v30[6] = a3;
    v30[7] = a4;
    v30[8] = a5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_191BC2CF8((uint64_t)v12, (uint64_t)&unk_1E92E4038, (uint64_t)v30);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_191CF3858();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB44CCE0);
    uint64_t v25 = sub_191CF3838();
    os_log_type_t v26 = sub_191CF5928();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v36[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v38 = sub_191C5C36C(0xD000000000000031, 0x8000000191D0F480, v36);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v28, -1, -1);
      MEMORY[0x192FE5F00](v27, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

void sub_191BCA670(void *a1)
{
}

uint64_t sub_191BCA68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[15] = a4;
  return MEMORY[0x1F4188298](sub_191BCA6B4, 0, 0);
}

uint64_t sub_191BCA6B4()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = sub_191CF5318();
  v0[20] = v2;
  uint64_t v3 = sub_191CF5318();
  v0[21] = v3;
  v0[2] = v0;
  v0[3] = sub_191BCA7E4;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_191BCA024;
  v0[13] = &block_descriptor_34;
  v0[14] = v4;
  objc_msgSend(v1, sel_invalidateRelevancesOfKind_inBundle_completionHandler_, v2, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_191BCA7E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_191BCAB28;
  }
  else {
    uint64_t v2 = sub_191BCA8F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BCA8F4()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 160);

  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3858();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB44CCE0);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_191CF3838();
  os_log_type_t v4 = sub_191CF5948();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 136);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    *(void *)(v0 + 80) = sub_191C5C36C(0xD000000000000031, 0x8000000191D0F480, &v12);
    sub_191CF5C08();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_191C5C36C(v7, v6, &v12);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v3, v4, "%{public}s - invalidated relevances for widget of kind '%{public}s'", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v9, -1, -1);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_191BCAB28()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[20];
  swift_willThrow();

  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[22];
  uint64_t v4 = sub_191CF3858();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
  swift_bridgeObjectRetain();
  id v5 = v3;
  swift_bridgeObjectRetain();
  id v6 = v3;
  uint64_t v7 = sub_191CF3838();
  os_log_type_t v8 = sub_191CF5928();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[22];
  unint64_t v11 = v0[17];
  if (v9)
  {
    uint64_t v18 = v0[16];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v20[0] = v19;
    *(_DWORD *)uint64_t v12 = 136446722;
    v0[10] = sub_191C5C36C(0xD000000000000031, 0x8000000191D0F480, v20);
    sub_191CF5C08();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[10] = sub_191C5C36C(v18, v11, v20);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2114;
    id v14 = v10;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v15;
    sub_191CF5C08();
    *uint64_t v13 = v15;

    _os_log_impl(&dword_191AF4000, v7, v8, "%{public}s - error invalidating relevances for widget of kind '%{public}s': %{public}@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v19, -1, -1);
    MEMORY[0x192FE5F00](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t WidgetCenter.setRelevances<A>(_:kind:inBundle:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
  uint64_t v16 = objc_allocWithZone(v15);
  v16[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  uint64_t v17 = v16;
  *(void *)&v17[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_191C2BF48(MEMORY[0x1E4FBC860]);

  v22.receiver = v17;
  v22.super_class = v15;
  id v18 = objc_msgSendSuper2(&v22, sel_init);
  uint64_t v19 = *(void *)(v8 + 24);
  uint64_t v20 = *(os_unfair_lock_s **)(v19 + 16);
  swift_retain();
  os_unfair_lock_lock(v20);
  sub_191BCAFF0(v8, a2, a3, a4, a5, a6, a7, v18);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));

  return swift_release();
}

uint64_t WidgetCenter.setRelevanceResult(_:kind:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(v5 + 24);
  uint64_t v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_191BCAFF0(v5, a2, a3, 0, 0, a4, a5, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  return swift_release();
}

uint64_t sub_191BCAFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v13 = sub_191BC3064();
  uint64_t v32 = sub_191BCB38C;
  uint64_t v33 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_191C6E398;
  uint64_t v31 = &block_descriptor_20;
  id v14 = _Block_copy(&aBlock);
  id v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B4F964((uint64_t)v34, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A038);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)sub_191CF5318();
    if (a5) {
      a5 = (void *)sub_191CF5318();
    }
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = a6;
    v17[3] = a7;
    void v17[4] = a8;
    v17[5] = a2;
    v17[6] = a3;
    uint64_t v32 = sub_191BCBDE4;
    uint64_t v33 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_191BCB8F8;
    uint64_t v31 = &block_descriptor_26;
    id v18 = _Block_copy(&aBlock);
    swift_retain();
    id v19 = a8;
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v27, sel_widgetRelevanceArchiveForKind_inBundle_handler_, v16, a5, v18);
    _Block_release(v18);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_191CF3858();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB44CCE0);
    uint64_t v21 = sub_191CF3838();
    os_log_type_t v22 = sub_191CF5928();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t aBlock = v24;
      *(_DWORD *)uint64_t v23 = 136446210;
      sub_191C5C36C(0xD00000000000003ALL, 0x8000000191D0F3F0, &aBlock);
      sub_191CF5C08();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v24, -1, -1);
      MEMORY[0x192FE5F00](v23, -1, -1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_191BCB38C(void *a1)
{
}

void sub_191BCB3A8(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_191CF3858();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB44CCE0);
  id v7 = a1;
  id v8 = a1;
  oslog = sub_191CF3838();
  os_log_type_t v9 = sub_191CF5928();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_191C5C36C(a2, a3, &v16);
    sub_191CF5C08();
    *(_WORD *)(v10 + 12) = 2114;
    id v13 = a1;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_191CF5C08();
    void *v11 = v15;

    _os_log_impl(&dword_191AF4000, oslog, v9, "%{public}s - remoteObjectProxy error: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v12, -1, -1);
    MEMORY[0x192FE5F00](v10, -1, -1);
  }
  else
  {
  }
}

void sub_191BCB5F8(void *a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a1)
  {
    id v9 = a1;
    ((void (*)(void *))a3)(a1);
    uint64_t v10 = a1;
LABEL_4:

    return;
  }
  if (!a2)
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v15 = sub_191CF5338();
    id v22 = sub_191BDA6B4(v15, v16, 1200, 0, 0xD00000000000001ELL, 0x8000000191D0F460);
    a3();
    uint64_t v10 = v22;
    goto LABEL_4;
  }
  id v14 = a2;
  sub_191C02A5C(a5, v14);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_191CF3858();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB44CCE0);
  swift_bridgeObjectRetain_n();
  id v18 = sub_191CF3838();
  os_log_type_t v19 = sub_191CF5948();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    swift_bridgeObjectRetain();
    sub_191C5C36C(a6, a7, &v23);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v18, v19, "Set widget relevances for %{public}s.", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v21, -1, -1);
    MEMORY[0x192FE5F00](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  ((void (*)(void))a3)(0);
}

void sub_191BCB8F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v6 = a2;
  id v7 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_191BCB984()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C730);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1EB44B1B0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1EB44C738;
  }

  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_191BCB9E4()
{
  return objectdestroyTm_0(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191BCBA24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191BC4404(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191BCBAEC(uint64_t a1)
{
  return sub_191BC4CC4(a1, v1);
}

uint64_t type metadata accessor for WidgetCenter()
{
  return self;
}

uint64_t method lookup function for WidgetCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetCenter);
}

uint64_t dispatch thunk of WidgetCenter.invalidateConfigurationRecommendations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetCenter.invalidateConfigurationRecommendations(inBundle:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of WidgetCenter.getCurrentConfigurations(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of WidgetCenter.currentConfigurations()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191B8A874;
  return v4();
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:inBundle:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of WidgetCenter.reloadAllTimelines()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

ValueMetadata *type metadata accessor for WidgetCenter.UserInfoKey()
{
  return &type metadata for WidgetCenter.UserInfoKey;
}

ValueMetadata *type metadata accessor for WidgetCenter.Private_Timeouts()
{
  return &type metadata for WidgetCenter.Private_Timeouts;
}

uint64_t sub_191BCBD1C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_191BCBD54()
{
  return sub_191BC347C(v0, "WidgetCenter connection interrupted.");
}

uint64_t sub_191BCBD78()
{
  return sub_191BC347C(v0, "WidgetCenter connection invalidated.");
}

uint64_t sub_191BCBD9C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_191BCBDE4(void *a1, void *a2)
{
  sub_191BCB5F8(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_191BCBDF4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191BCBE44()
{
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_191B0A348;
  *(void *)(v3 + 152) = v2;
  *(_OWORD *)(v3 + 136) = v5;
  *(_OWORD *)(v3 + 120) = v6;
  return MEMORY[0x1F4188298](sub_191BCA6B4, 0, 0);
}

uint64_t sub_191BCBF0C()
{
  return objectdestroyTm_0(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC898]);
}

uint64_t sub_191BCBF4C()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_191B17A68;
  *(void *)(v3 + 136) = v2;
  *(_OWORD *)(v3 + 120) = v5;
  return MEMORY[0x1F4188298](sub_191BC98DC, 0, 0);
}

uint64_t sub_191BCC008()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BCC048(void *a1)
{
  return sub_191BC7BB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_191BCC054()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BCC098()
{
  return objectdestroyTm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_191BCC0D8(void *a1)
{
  return sub_191BC80A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_191BCC0EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t objectdestroy_68Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BCC160()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_191BCC198(void *a1)
{
  sub_191BC6F58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191BCC1A4(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_191BC55B0(a1, v4, v5);
}

uint64_t sub_191BCC21C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191BCC2C4()
{
  return sub_191BCC61C((uint64_t (*)(unint64_t, uint64_t))sub_191BC5B5C);
}

uint64_t sub_191BCC2E0(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_191BC5BA4(a1, a2, v6, v7);
}

uint64_t sub_191BCC368()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191BCC448(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_191B17A68;
  return sub_191BC60C0(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_191BCC54C()
{
  return objectdestroy_111Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_191BCC568()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_191BC6074((int)v0 + (int)v2, *(id *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_191BCC5EC()
{
  return objectdestroy_111Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_191BCC604()
{
  return sub_191BCC61C((uint64_t (*)(unint64_t, uint64_t))sub_191BC6AC8);
}

uint64_t sub_191BCC61C(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_191BCC6C0()
{
  return objectdestroy_111Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_191BCC6D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BCC710()
{
  swift_release();
  sub_191BCC754(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

void sub_191BCC754(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_191BCC760()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

id sub_191BCC794(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_191BCC7A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BCC86C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_191CF6018();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x192FE4B70](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_191AFF4E0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_191CF5558();
}

uint64_t sub_191BCCA38(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_191B41554(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191BCCB84(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_191B40E44(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191BCCCCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_191B41650(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B760);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191BCCE38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_191B406FC(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

BOOL ActivityViewTag.isJindo.getter()
{
  return *v0 != 4;
}

void *static ActivityViewTag.allCases.getter()
{
  uint64_t v0 = sub_191BCDE4C((uint64_t)&unk_1EE29E6E8);
  sub_191BCCA38(v0);
  return &unk_1EE29E710;
}

uint64_t ActivityViewTag.description.getter()
{
  if (*v0 == 4) {
    return 0x6D6574497473696CLL;
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return 0x2D6F646E696ALL;
}

uint64_t ActivityViewTag.defaultViewAlignment.getter()
{
  switch(*v0)
  {
    case 1:
    case 4:
      uint64_t result = sub_191CF5098();
      break;
    case 2:
      uint64_t result = sub_191CF50A8();
      break;
    case 3:
      uint64_t result = sub_191CF5088();
      break;
    default:
      uint64_t result = sub_191CF5078();
      break;
  }
  return result;
}

uint64_t ActivityViewTag.hash(into:)()
{
  if (*v0 != 4) {
    sub_191CF6478();
  }
  return sub_191CF6478();
}

BOOL static ActivityViewTag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 4) {
    return v3 == 4;
  }
  if (v3 == 4) {
    return 0;
  }
  return v2 == v3;
}

uint64_t sub_191BCD230()
{
  if (*v0) {
    return 0x6F646E696ALL;
  }
  else {
    return 0x6D6574497473696CLL;
  }
}

uint64_t sub_191BCD268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191BCE800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191BCD290(uint64_t a1)
{
  unint64_t v2 = sub_191BCDF0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BCD2CC(uint64_t a1)
{
  unint64_t v2 = sub_191BCDF0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191BCD308()
{
  return 12383;
}

uint64_t sub_191BCD314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191BCD394(uint64_t a1)
{
  unint64_t v2 = sub_191BCDF60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BCD3D0(uint64_t a1)
{
  unint64_t v2 = sub_191BCDF60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191BCD40C(uint64_t a1)
{
  unint64_t v2 = sub_191BCE008();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BCD448(uint64_t a1)
{
  unint64_t v2 = sub_191BCE008();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityViewTag.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1820);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  id v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1828);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1818);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BCDF0C();
  sub_191CF6528();
  if (v12 == 4)
  {
    char v21 = 0;
    sub_191BCE008();
    sub_191CF61D8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  else
  {
    char v23 = 1;
    sub_191BCDF60();
    unint64_t v14 = v18;
    sub_191CF61D8();
    char v22 = v12;
    sub_191BCDFB4();
    uint64_t v15 = v20;
    sub_191CF6278();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t ActivityViewTag.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  if (v1 != 4) {
    sub_191CF6478();
  }
  sub_191CF6478();
  return sub_191CF64C8();
}

uint64_t ActivityViewTag.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C08);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C10);
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C00);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_191BCDF0C();
  uint64_t v15 = v30;
  sub_191CF6508();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v28;
  uint64_t v30 = v11;
  uint64_t v17 = sub_191CF61A8();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v18 = sub_191CF5E38();
    swift_allocError();
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    void *v20 = &type metadata for ActivityViewTag;
    sub_191CF60D8();
    sub_191CF5E18();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
LABEL_7:
    uint64_t v21 = (uint64_t)v29;
    return __swift_destroy_boxed_opaque_existential_1(v21);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    char v33 = 1;
    sub_191BCDF60();
    sub_191CF60C8();
    sub_191BCE05C();
    uint64_t v23 = v25;
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
    char v24 = v32;
  }
  else
  {
    char v31 = 0;
    sub_191BCE008();
    sub_191CF60C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
    char v24 = 4;
  }
  uint64_t v21 = (uint64_t)v29;
  *uint64_t v27 = v24;
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

uint64_t sub_191BCDC74()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  if (v1 != 4) {
    sub_191CF6478();
  }
  sub_191CF6478();
  return sub_191CF64C8();
}

uint64_t sub_191BCDCD4()
{
  if (*v0 != 4) {
    sub_191CF6478();
  }
  return sub_191CF6478();
}

uint64_t sub_191BCDD1C()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  if (v1 != 4) {
    sub_191CF6478();
  }
  sub_191CF6478();
  return sub_191CF64C8();
}

uint64_t sub_191BCDD7C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_191BCDE4C((uint64_t)&unk_1EE29E6E8);
  uint64_t result = sub_191BCCA38(v2);
  *a1 = &unk_1EE29E710;
  return result;
}

uint64_t sub_191BCDDDC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return ActivityViewTag.init(from:)(a1, a2);
}

uint64_t sub_191BCDDF4(void *a1)
{
  return ActivityViewTag.encode(to:)(a1);
}

BOOL sub_191BCDE10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 4) {
    return v3 == 4;
  }
  if (v3 == 4) {
    return 0;
  }
  return v2 == v3;
}

uint64_t sub_191BCDE4C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_191AFBAB0(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      char v6 = *v4++;
      char v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_191AFBAB0(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(unsigned char *)(result + v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

unint64_t sub_191BCDF0C()
{
  unint64_t result = qword_1E92E1C28;
  if (!qword_1E92E1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C28);
  }
  return result;
}

unint64_t sub_191BCDF60()
{
  unint64_t result = qword_1E92E4060;
  if (!qword_1E92E4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4060);
  }
  return result;
}

unint64_t sub_191BCDFB4()
{
  unint64_t result = qword_1E92E4068;
  if (!qword_1E92E4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4068);
  }
  return result;
}

unint64_t sub_191BCE008()
{
  unint64_t result = qword_1E92E1C50;
  if (!qword_1E92E1C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C50);
  }
  return result;
}

unint64_t sub_191BCE05C()
{
  unint64_t result = qword_1E92E4070;
  if (!qword_1E92E4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4070);
  }
  return result;
}

unint64_t sub_191BCE0B4()
{
  unint64_t result = qword_1E92E4078;
  if (!qword_1E92E4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4078);
  }
  return result;
}

unint64_t sub_191BCE10C()
{
  unint64_t result = qword_1E92E4080;
  if (!qword_1E92E4080)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4080);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityViewTag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191BCE214);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 4;
  unsigned int v9 = v7 - 4;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ActivityViewTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x191BCE2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_191BCE324(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_191BCE338(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag()
{
  return &type metadata for ActivityViewTag;
}

unsigned char *storeEnumTagSinglePayload for ActivityViewTag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BCE424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag.CodingKeys()
{
  return &type metadata for ActivityViewTag.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityViewTag.ListItemCodingKeys()
{
  return &type metadata for ActivityViewTag.ListItemCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivityViewTag.JindoCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191BCE508);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag.JindoCodingKeys()
{
  return &type metadata for ActivityViewTag.JindoCodingKeys;
}

unint64_t sub_191BCE544()
{
  unint64_t result = qword_1E92E4088;
  if (!qword_1E92E4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4088);
  }
  return result;
}

unint64_t sub_191BCE59C()
{
  unint64_t result = qword_1E92E4090;
  if (!qword_1E92E4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E4090);
  }
  return result;
}

unint64_t sub_191BCE5F4()
{
  unint64_t result = qword_1E92E1C60;
  if (!qword_1E92E1C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C60);
  }
  return result;
}

unint64_t sub_191BCE64C()
{
  unint64_t result = qword_1E92E1C58;
  if (!qword_1E92E1C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C58);
  }
  return result;
}

unint64_t sub_191BCE6A4()
{
  unint64_t result = qword_1E92E1C48;
  if (!qword_1E92E1C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C48);
  }
  return result;
}

unint64_t sub_191BCE6FC()
{
  unint64_t result = qword_1E92E1C40;
  if (!qword_1E92E1C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C40);
  }
  return result;
}

unint64_t sub_191BCE754()
{
  unint64_t result = qword_1E92E1C38;
  if (!qword_1E92E1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C38);
  }
  return result;
}

unint64_t sub_191BCE7AC()
{
  unint64_t result = qword_1E92E1C30;
  if (!qword_1E92E1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C30);
  }
  return result;
}

uint64_t sub_191BCE800(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6574497473696CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F646E696ALL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_191BCE8EC(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  v3[13] = swift_task_alloc();
  type metadata accessor for ControlTemplateToggle.Option(0);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = sub_191CF5698();
  v3[17] = sub_191CF5688();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[18] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_191BCEA1C;
  return sub_191BD0874(v2, a2);
}

uint64_t sub_191BCEA1C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  uint64_t v5 = (void *)*v3;
  v4[19] = a2;
  v4[20] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BCF44C, v7, v6);
  }
  else
  {
    BOOL v8 = (void *)swift_task_alloc();
    v4[21] = v8;
    *BOOL v8 = v5;
    v8[1] = sub_191BCEBAC;
    uint64_t v9 = v4[11];
    uint64_t v10 = v4[12];
    return sub_191BD0A50(v10, v9);
  }
}

uint64_t sub_191BCEBAC(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)*v3;
  v4[6] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[9] = v2;
  uint64_t v5 = (void *)*v3;
  v4[22] = a2;
  v4[23] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BCF4D4, v7, v6);
  }
  else
  {
    BOOL v8 = (void *)swift_task_alloc();
    v4[24] = v8;
    *BOOL v8 = v5;
    v8[1] = sub_191BCED44;
    uint64_t v9 = v4[15];
    uint64_t v11 = v4[11];
    uint64_t v10 = v4[12];
    return sub_191BCF700(v9, 1, v10, v11);
  }
}

uint64_t sub_191BCED44()
{
  uint64_t v2 = (void *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BCF568, v4, v3);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[26] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_191BCEEF8;
    uint64_t v6 = v2[14];
    uint64_t v8 = v2[11];
    uint64_t v7 = v2[12];
    return sub_191BCF700(v6, 0, v7, v8);
  }
}

uint64_t sub_191BCEEF8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_191BD0D18(*(void *)(v2 + 120));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BCF5F0, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 96);
    *(unsigned char *)(v2 + 256) = *(unsigned char *)(v5 + 32);
    uint64_t v6 = *(void *)(v5 + 168);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 152) + **(int **)(v5 + 152));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v2 + 224) = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_191BCF10C;
    uint64_t v8 = *(void *)(v2 + 104);
    return v10(v8, v6);
  }
}

uint64_t sub_191BCF10C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v5 = v2 + 14;
    uint64_t v3 = v2[14];
    uint64_t v4 = v5[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191BD0D18(v3);
    sub_191BD0D18(v4);
    uint64_t v6 = sub_191CF5648();
    uint64_t v8 = v7;
    uint64_t v9 = sub_191BCF678;
  }
  else
  {
    uint64_t v10 = v2[3];
    v2[30] = v2[7];
    v2[31] = v10;
    uint64_t v6 = sub_191CF5648();
    uint64_t v8 = v11;
    uint64_t v9 = sub_191BCF2C0;
  }
  return MEMORY[0x1F4188298](v9, v6, v8);
}

uint64_t sub_191BCF2C0()
{
  uint64_t v1 = *(void *)(v0 + 248);
  char v15 = *(unsigned char *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v6 = *(void **)(v0 + 80);
  swift_release();
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateToggle(0);
  uint64_t v8 = (uint64_t)v6 + v7[8];
  uint64_t v9 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)((char *)v6 + v7[11]);
  void *v10 = 0;
  v10[1] = 0;
  *uint64_t v6 = v1;
  v6[1] = v3;
  v6[2] = v13;
  v6[3] = v2;
  sub_191BD0D74(v5, (uint64_t)v6 + v7[6]);
  sub_191BD0D74(v4, (uint64_t)v6 + v7[7]);
  sub_191B28FA4(v14, v8, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v6 + v7[9]) = 0;
  *((unsigned char *)v6 + v7[10]) = v15;
  swift_bridgeObjectRelease();
  void *v10 = 0;
  v10[1] = 0;
  *((unsigned char *)v6 + v7[12]) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_191BCF44C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BCF4D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BCF568()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BCF5F0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BCF678()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BCF700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 169) = a2;
  *(void *)(v4 + 200) = a1;
  *(void *)(v4 + 208) = a4;
  *(void *)(v4 + 216) = type metadata accessor for ControlTemplateToggle.Option(0);
  *(void *)(v4 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  *(void *)(v4 + 256) = swift_task_alloc();
  *(void *)(v4 + 264) = swift_task_alloc();
  *(void *)(v4 + 272) = swift_task_alloc();
  uint64_t v7 = sub_191CF4058();
  *(void *)(v4 + 280) = v7;
  *(void *)(v4 + 288) = *(void *)(v7 - 8);
  *(void *)(v4 + 296) = swift_task_alloc();
  *(void *)(v4 + 304) = swift_task_alloc();
  uint64_t v8 = sub_191CF4898();
  *(void *)(v4 + 312) = v8;
  *(void *)(v4 + 320) = *(void *)(v8 - 8);
  *(void *)(v4 + 328) = swift_task_alloc();
  *(void *)(v4 + 336) = swift_task_alloc();
  *(void *)(v4 + 344) = swift_task_alloc();
  *(void *)(v4 + 352) = sub_191CF5698();
  *(void *)(v4 + 360) = sub_191CF5688();
  uint64_t v9 = *(int **)(a3 + 88);
  *(_OWORD *)(v4 + 368) = *(_OWORD *)(a3 + 104);
  uint64_t v10 = *(void *)(a3 + 168);
  *(void *)(v4 + 384) = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)v9 + *v9);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 392) = v11;
  void *v11 = v4;
  v11[1] = sub_191BCF9BC;
  return v13(v10, a2);
}

uint64_t sub_191BCF9BC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[50] = a1;
  v3[51] = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_191CF5648();
  v3[52] = v5;
  v3[53] = v4;
  if (v1) {
    uint64_t v6 = sub_191BD064C;
  }
  else {
    uint64_t v6 = sub_191BCFB20;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_191BCFB20()
{
  uint64_t v1 = *(int **)(v0 + 368);
  *(void *)(v0 + 432) = swift_getKeyPath();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_191BCFC18;
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 169);
  return v6(v0 + 16, v3, v4);
}

uint64_t sub_191BCFC18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 424);
  uint64_t v4 = *(void *)(v2 + 416);
  if (v0) {
    uint64_t v5 = sub_191BD0754;
  }
  else {
    uint64_t v5 = sub_191BCFD54;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191BCFD54()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v83 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 208);
  swift_release();
  *(void *)(v0 + 152) = v2;
  uint64_t v87 = *(void *)(v0 + 32);
  uint64_t v88 = *(void *)(v0 + 24);
  uint64_t v86 = *(void *)(v0 + 40);
  uint64_t v84 = *(void *)(v0 + 16);
  uint64_t v85 = *(void *)(v0 + 48);
  uint64_t v91 = *(void *)(v0 + 64);
  uint64_t v92 = *(void *)(v0 + 56);
  uint64_t v89 = *(void *)(v0 + 80);
  uint64_t v90 = *(void *)(v0 + 72);
  *(void *)(v0 + 160) = v1;
  *(unsigned char *)(v0 + 168) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_191CF4558();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v3, v6, v83);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191CF4758();
  uint64_t v8 = sub_191CF47A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  int v10 = v81(v5, 1, v8);
  uint64_t v11 = *(void *)(v0 + 272);
  if (v10 == 1)
  {
    sub_191B01770(*(void *)(v0 + 272), &qword_1E92E2338);
    uint64_t v77 = 0;
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v12 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    id v13 = objc_msgSend(v12, sel_string);

    uint64_t v14 = sub_191CF5338();
    uint64_t v77 = v15;
    uint64_t v78 = v14;
  }
  uint64_t v16 = *(void *)(v0 + 240);
  sub_191CF4878();
  uint64_t v17 = sub_191CF4868();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  uint64_t v20 = *(void *)(v0 + 240);
  uint64_t v75 = v17;
  if (v19 == 1)
  {
    sub_191B01770(v20, qword_1EB4496F8);
  }
  else
  {
    char v21 = sub_191CF4858();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    if (v21)
    {
      sub_191CF4878();
      goto LABEL_9;
    }
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v18 + 56))(*(void *)(v0 + 248), 1, 1, v17);
LABEL_9:
  uint64_t v22 = *(void *)(v0 + 296);
  uint64_t v23 = *(void *)(v0 + 280);
  uint64_t v24 = *(void *)(v0 + 208);
  uint64_t v76 = v9;
  uint64_t v74 = v18;
  uint64_t v82 = v7;
  if (v84)
  {
    sub_191CF4DB8();
    unint64_t v72 = v27 | ((unint64_t)v28 << 32);
    unint64_t v73 = v25 | ((unint64_t)v26 << 32);
    v7(v22, v24, v23);
    char v71 = 0;
  }
  else
  {
    v7(v22, v24, v23);
    sub_191B163D4();
    sub_191CF4068();
    unint64_t v72 = *(void *)(v0 + 184);
    unint64_t v73 = *(void *)(v0 + 176);
    char v71 = *(unsigned char *)(v0 + 192);
  }
  uint64_t v29 = *(void *)(v0 + 320);
  uint64_t v79 = *(void *)(v0 + 312);
  uint64_t v30 = *(void *)(v0 + 304);
  uint64_t v31 = *(void *)(v0 + 280);
  uint64_t v67 = *(void *)(v0 + 336);
  uint64_t v69 = *(void *)(v0 + 264);
  uint64_t v65 = *(void *)(v0 + 208);
  (*(void (**)(void, uint64_t))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 296), v31);
  *(void *)(v0 + 88) = v88;
  *(void *)(v0 + 96) = v87;
  *(void *)(v0 + 104) = v86;
  *(void *)(v0 + 112) = v85;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD8);
  swift_allocObject();
  sub_191BB92FC(v88, v87, v86, v85);
  sub_191BB92FC(v88, v87, v86, v85);
  sub_191CF4558();
  v82(v30, v65, v31);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191BB9340(v88, v87, v86, v85);
  sub_191CF4758();
  uint64_t v32 = v79;
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v80(v67, v32);
  int v33 = v81(v69, 1, v8);
  uint64_t v34 = *(void *)(v0 + 264);
  if (v33 == 1)
  {
    sub_191B01770(*(void *)(v0 + 264), &qword_1E92E2338);
    uint64_t v68 = 0;
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v35 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v34, v8);
    id v36 = objc_msgSend(v35, sel_string);

    uint64_t v37 = sub_191CF5338();
    uint64_t v68 = v38;
    uint64_t v70 = v37;
  }
  uint64_t v39 = *(void *)(v0 + 328);
  uint64_t v40 = *(void *)(v0 + 304);
  uint64_t v61 = *(void *)(v0 + 280);
  uint64_t v63 = *(void *)(v0 + 256);
  uint64_t v66 = *(void *)(v0 + 312);
  uint64_t v41 = *(void *)(v0 + 208);
  *(void *)(v0 + 120) = v92;
  *(void *)(v0 + 128) = v91;
  *(void *)(v0 + 136) = v90;
  *(void *)(v0 + 144) = v89;
  swift_allocObject();
  sub_191BB92FC(v92, v91, v90, v89);
  sub_191BB92FC(v92, v91, v90, v89);
  sub_191CF4558();
  v82(v40, v41, v61);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  sub_191BB9340(v92, v91, v90, v89);
  sub_191CF4758();
  v80(v39, v66);
  int v42 = v81(v63, 1, v8);
  uint64_t v43 = *(void *)(v0 + 256);
  if (v42 == 1)
  {
    sub_191B01770(*(void *)(v0 + 256), &qword_1E92E2338);
    uint64_t v60 = 0;
    uint64_t v62 = 0;
  }
  else
  {
    uint64_t v44 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v43, v8);
    id v45 = objc_msgSend(v44, sel_string);

    uint64_t v46 = sub_191CF5338();
    uint64_t v60 = v47;
    uint64_t v62 = v46;
  }
  uint64_t v48 = *(void *)(v0 + 344);
  uint64_t v64 = *(void *)(v0 + 312);
  uint64_t v49 = *(void *)(v0 + 248);
  uint64_t v50 = *(void *)(v0 + 232);
  uint64_t v52 = *(int **)(v0 + 216);
  uint64_t v51 = *(uint64_t **)(v0 + 224);
  uint64_t v53 = *(void *)(v0 + 200);
  sub_191B98014(v49, v50);
  uint64_t v54 = (uint64_t)v51 + v52[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v54, 1, 1, v75);
  uint64_t v55 = (char *)v51 + v52[7];
  *(void *)uint64_t v55 = 0;
  *((void *)v55 + 1) = 0;
  v55[16] = 1;
  uint64_t v56 = (uint64_t *)((char *)v51 + v52[8]);
  *uint64_t v56 = 0;
  v56[1] = 0;
  id v57 = (uint64_t *)((char *)v51 + v52[9]);
  *id v57 = 0;
  v57[1] = 0;
  *uint64_t v51 = v78;
  v51[1] = v77;
  v51[2] = 0;
  sub_191B28FA4(v50, v54, qword_1EB4496F8);
  *(void *)uint64_t v55 = v73;
  *((void *)v55 + 1) = v72;
  v55[16] = v71;
  swift_bridgeObjectRelease();
  *uint64_t v56 = v70;
  v56[1] = v68;
  swift_bridgeObjectRelease();
  *id v57 = v62;
  v57[1] = v60;
  sub_191BD0D74((uint64_t)v51, v53);
  swift_release();
  swift_release();
  swift_release();
  sub_191BB9340(v88, v87, v86, v85);
  sub_191BB9340(v92, v91, v90, v89);
  sub_191B01770(v49, qword_1EB4496F8);
  v80(v48, v64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
  return v58();
}

uint64_t sub_191BD064C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BD0754()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BD0874(uint64_t a1, uint64_t a2)
{
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  v2[4] = swift_task_alloc();
  uint64_t v4 = sub_191CF4058();
  v2[5] = v4;
  void v2[6] = *(void *)(v4 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v5 = sub_191CF4898();
  v2[8] = v5;
  v2[9] = *(void *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_191CF5698();
  v2[12] = sub_191CF5688();
  uint64_t v6 = *(int **)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 168);
  int v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v2[13] = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191BB8280;
  return v10(v7);
}

uint64_t sub_191BD0A50(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_191CF4058();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_191CF4898();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_191CF5698();
  v2[12] = sub_191CF5688();
  uint64_t v6 = sub_191CF5648();
  v2[13] = v6;
  v2[14] = v5;
  return MEMORY[0x1F4188298](sub_191BD0BD0, v6, v5);
}

uint64_t sub_191BD0BD0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(int **)(v1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 168);
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_191BB8994;
    return v7(v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void, void))v0[1];
    return v6(0, 0);
  }
}

uint64_t sub_191BD0D18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191BD0D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EnvironmentValues.widget.getter()
{
  sub_191BA15D4();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues.widget.setter()
{
  return sub_191CF4078();
}

uint64_t sub_191BD0E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191BD0FC8();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.widget.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_191BA15D4();
  sub_191CF4068();
  return sub_191BD0F1C;
}

void sub_191BD0F1C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)(a1 + 8) = *(void *)a1;
  if (a2)
  {
    id v4 = v2;
    sub_191CF4078();
    uint64_t v5 = *(void **)a1;
  }
  else
  {
    sub_191CF4078();
  }
}

ValueMetadata *_s23CHSWidgetEnvironmentKeyVMa()
{
  return &_s23CHSWidgetEnvironmentKeyVN;
}

unint64_t sub_191BD0FC8()
{
  unint64_t result = qword_1E92E0A70;
  if (!qword_1E92E0A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0A68);
    sub_191BD103C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A70);
  }
  return result;
}

unint64_t sub_191BD103C()
{
  unint64_t result = qword_1E92E0A78;
  if (!qword_1E92E0A78)
  {
    sub_191BD1094();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A78);
  }
  return result;
}

unint64_t sub_191BD1094()
{
  unint64_t result = qword_1EB44B4D0;
  if (!qword_1EB44B4D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44B4D0);
  }
  return result;
}

uint64_t WidgetURLModifier.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191BD10DC(a1, a2);
}

uint64_t sub_191BD10DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BD1144()
{
  return 7107189;
}

uint64_t sub_191BD1154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191BD11DC(uint64_t a1)
{
  unint64_t v2 = sub_191BD14B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BD1218(uint64_t a1)
{
  unint64_t v2 = sub_191BD14B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetURLModifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1028);
  uint64_t v16 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BD14B8();
  sub_191CF6508();
  if (!v2)
  {
    sub_191CF3078();
    sub_191BD16E4(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_191BD10DC((uint64_t)v6, (uint64_t)v12);
    sub_191BD150C((uint64_t)v12, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for WidgetURLModifier(uint64_t a1)
{
  return sub_191B4ED44(a1, qword_1EB44AD30);
}

unint64_t sub_191BD14B8()
{
  unint64_t result = qword_1EB44ABE8;
  if (!qword_1EB44ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ABE8);
  }
  return result;
}

uint64_t sub_191BD150C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WidgetURLModifier.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44ABB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BD14B8();
  sub_191CF6528();
  sub_191CF3078();
  sub_191BD16E4(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191BD16E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WidgetURLModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0908);
  sub_191BD17C0(v2, a2 + *(int *)(v5 + 36));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1018);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, a1, v6);
}

uint64_t sub_191BD17C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BD1828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_191BD16E4(&qword_1EB44AC30, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);

  return MEMORY[0x1F40FA660](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191BD18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_191BD16E4(&qword_1EB44AC30, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);

  return MEMORY[0x1F40FA668](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191BD1980()
{
  return sub_191CF46C8();
}

uint64_t sub_191BD1A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0908);
  sub_191BD17C0(v2, a2 + *(int *)(v5 + 36));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1018);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a2, a1, v6);
}

uint64_t sub_191BD1AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetURLModifier.init(from:)(a1, a2);
}

uint64_t sub_191BD1AB8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44ABB8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BD14B8();
  sub_191CF6528();
  sub_191CF3078();
  sub_191BD16E4(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191BD1C2C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  __swift_allocate_value_buffer(v0, qword_1EB449308);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB449308);
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t static WidgetURLPreferenceKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB449950 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449308);
  swift_beginAccess();
  return sub_191BD17C0(v3, a1);
}

uint64_t static WidgetURLPreferenceKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1EB449950 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449308);
  swift_beginAccess();
  sub_191B9BB24(a1, v3);
  swift_endAccess();
  return sub_191BD1DF4(a1);
}

uint64_t sub_191BD1DF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static WidgetURLPreferenceKey.defaultValue.modify())()
{
  if (qword_1EB449950 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449308);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WidgetURLPreferenceKey.reduce(value:nextValue:)(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_191BD10DC(a1, (uint64_t)v7);
  uint64_t v10 = sub_191CF3078();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    a2();
    sub_191BD1DF4((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v7, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return sub_191BD10DC((uint64_t)v9, a1);
}

uint64_t sub_191BD2068@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB449950 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449308);
  swift_beginAccess();
  return sub_191BD17C0(v3, a1);
}

uint64_t sub_191BD20F8(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_191BD10DC(a1, (uint64_t)v7);
  uint64_t v10 = sub_191CF3078();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    a2();
    sub_191BD1DF4((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v7, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return sub_191BD10DC((uint64_t)v9, a1);
}

uint64_t sub_191BD2274(uint64_t a1)
{
  unint64_t v2 = sub_191BD37E0();

  return MEMORY[0x1F40F9710](a1, v2);
}

uint64_t sub_191BD22B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449DD8);
  sub_191BD17C0(v2, a2 + *(int *)(v5 + 36));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t v7 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB449958) + 36);

  return sub_191BD17C0(v2, v7);
}

uint64_t View.widgetURL(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[1] = a4;
  v19[0] = type metadata accessor for WidgetURLMetadataModifier(0);
  MEMORY[0x1F4188790](v19[0]);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF3BA8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v19 - v14;
  sub_191BD17C0(a1, (uint64_t)v11);
  MEMORY[0x192FE3AA0](v11, a2, v9, a3);
  sub_191BD25D8((uint64_t)v11, type metadata accessor for WidgetURLModifier);
  sub_191BD17C0(a1, (uint64_t)v8);
  uint64_t v16 = sub_191BD16E4(&qword_1EB44AD28, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
  uint64_t v19[2] = a3;
  v19[3] = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x192FE3AA0](v8, v12, v19[0], WitnessTable);
  sub_191BD25D8((uint64_t)v8, type metadata accessor for WidgetURLMetadataModifier);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t type metadata accessor for WidgetURLMetadataModifier(uint64_t a1)
{
  return sub_191B4ED44(a1, qword_1EB44A260);
}

uint64_t sub_191BD25D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t View.hiddenWidgetURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD17C0(a1, (uint64_t)v8);
  MEMORY[0x192FE3AA0](v8, a2, v6, a3);
  return sub_191BD25D8((uint64_t)v8, type metadata accessor for WidgetURLModifier);
}

uint64_t sub_191BD270C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191CF3078();
  __swift_allocate_value_buffer(v3, qword_1E92E0ED8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92E0ED8);
  sub_191CF3068();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t IgnoredWidgetURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E0CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E0ED8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_191BD28EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BD2908()
{
  return sub_191BD16E4(&qword_1EB44AC40, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
}

uint64_t sub_191BD2950()
{
  return sub_191BD16E4(&qword_1EB44AC38, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
}

uint64_t sub_191BD2998()
{
  return sub_191BD16E4(&qword_1EB44AD28, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
}

unint64_t sub_191BD29E4()
{
  unint64_t result = qword_1EB449C08;
  if (!qword_1EB449C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449C08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetURLModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_2);
}

uint64_t storeEnumTagSinglePayload for WidgetURLModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_2);
}

ValueMetadata *type metadata accessor for WidgetURLPreferenceKey()
{
  return &type metadata for WidgetURLPreferenceKey;
}

unint64_t sub_191BD2A98()
{
  unint64_t result = qword_1E92E0900;
  if (!qword_1E92E0900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0908);
    sub_191B00398(&qword_1E92E1010, &qword_1E92E1018);
    sub_191B00398(&qword_1EB449A38, &qword_1EB449A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0900);
  }
  return result;
}

uint64_t sub_191BD2B5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_191BD2C6C()
{
  return swift_getWitnessTable();
}

uint64_t *_s9WidgetKit17WidgetURLModifierVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_191CF3078();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s9WidgetKit17WidgetURLModifierVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_191CF3078();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *_s9WidgetKit17WidgetURLModifierVwcp_0(void *a1, const void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwca_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwtk_0(void *a1, const void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwta_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_191BD3448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BD345C);
}

uint64_t __swift_get_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_191BD34D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BD34E4);
}

uint64_t __swift_store_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_191BD355C()
{
  sub_191B9DFF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for WidgetURLModifier.CodableKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191BD3684);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLModifier.CodableKeys()
{
  return &type metadata for WidgetURLModifier.CodableKeys;
}

unint64_t sub_191BD36C0()
{
  unint64_t result = qword_1E92E40B8;
  if (!qword_1E92E40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E40B8);
  }
  return result;
}

uint64_t sub_191BD3714()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_191BD3734()
{
  unint64_t result = qword_1EB44ABE0;
  if (!qword_1EB44ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ABE0);
  }
  return result;
}

unint64_t sub_191BD378C()
{
  unint64_t result = qword_1EB44ABD8;
  if (!qword_1EB44ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ABD8);
  }
  return result;
}

unint64_t sub_191BD37E0()
{
  unint64_t result = qword_1EB449C10;
  if (!qword_1EB449C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449C10);
  }
  return result;
}

unint64_t sub_191BD3838()
{
  unint64_t result = qword_1EB4499C0;
  if (!qword_1EB4499C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449958);
    sub_191BD38D8();
    sub_191B00398(&qword_1EB449A38, &qword_1EB449A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4499C0);
  }
  return result;
}

unint64_t sub_191BD38D8()
{
  unint64_t result = qword_1EB449DC0;
  if (!qword_1EB449DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449DD8);
    sub_191B00398(&qword_1EB449DE0, &qword_1EB449DE8);
    sub_191B00398(&qword_1EB449E30, &qword_1EB449E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449DC0);
  }
  return result;
}

uint64_t sub_191BD399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x1F4188298](sub_191BD39C0, 0, 0);
}

uint64_t sub_191BD39C0()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 56);
    id v4 = objc_msgSend(v2, sel_linkAction);
    *(void *)(v0 + 80) = v4;
    if (v4)
    {
      uint64_t v5 = v4;
      *(void *)(v0 + 40) = sub_191B647C4();
      *(void *)(v0 + 16) = v5;
      id v6 = v5;
      int v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v7;
      *int v7 = v0;
      v7[1] = sub_191BD3B88;
      uint64_t v8 = *(void *)(v0 + 48);
      return MEMORY[0x1F40D3CA8](v8, v0 + 16);
    }
    uint64_t v10 = *(void **)(v0 + 56);
    sub_191BD3DB4();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = xmmword_191CFFFD0;
    *(unsigned char *)(v11 + 16) = 2;
    swift_willThrow();
  }
  else
  {
    sub_191BD3DB4();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    *(unsigned char *)(v9 + 16) = 2;
    swift_willThrow();
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_191BD3B88()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BD3D08;
  }
  else {
    uint64_t v2 = sub_191BD3C9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BD3C9C()
{
  uint64_t v1 = *(void **)(v0 + 56);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191BD3D08()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[10];
  id v3 = (void *)v0[7];
  sub_191BD3DB4();
  swift_allocError();
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 0;
  swift_willThrow();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

unint64_t sub_191BD3DB4()
{
  unint64_t result = qword_1E92E40C8;
  if (!qword_1E92E40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E40C8);
  }
  return result;
}

id sub_191BD3E0C(id result, uint64_t a2, char a3)
{
  if (!a3) {
    return result;
  }
  return result;
}

void _s9AppIntentOwxx(uint64_t a1)
{
}

void sub_191BD3E2C(id a1, uint64_t a2, char a3)
{
  if (!a3) {
}
  }

uint64_t _s9AppIntentOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191BD3E0C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s9AppIntentOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_191BD3E0C(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_191BD3E2C(v6, v7, v8);
  return a1;
}

uint64_t _s9AppIntentOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_191BD3E2C(v4, v5, v6);
  return a1;
}

uint64_t _s9AppIntentOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9AppIntentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191BD3FB4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_191BD3FCC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s9AppIntentOMa()
{
  return &_s9AppIntentON;
}

uint64_t sub_191BD3FF8(unint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    id v5 = (id)a1;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000027;
    swift_getErrorValue();
    sub_191CF6408();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191BD3E2C((id)a1, a2, 0);
    return v7;
  }
  if (a3 == 1)
  {
    unint64_t v7 = 0;
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    return v7;
  }
  if (a1 | a2) {
    return 0xD000000000000022;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_191BD41F4()
{
  return sub_191BD3FF8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_191BD4200()
{
  uint64_t v131 = sub_191CF37E8();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v1 = MEMORY[0x1F4188790](v131);
  unsigned int v3 = (char *)&v119 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v119 = (char *)&v119 - v4;
  uint64_t v122 = sub_191CF4488();
  uint64_t v120 = *(void *)(v122 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v122);
  uint64_t v121 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v125 = (char *)&v119 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v127 = (char **)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ActivityViewCollection();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v126 = (char **)((char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v128 = (uint64_t)&v119 - v13;
  uint64_t v14 = sub_191CF37A8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v142 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v124 = (char *)&v119 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v119 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v138 = (char *)&v119 - v23;
  uint64_t v148 = sub_191CF37D8();
  uint64_t v24 = *(void *)(v148 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v148);
  uint64_t v141 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v123 = (char *)&v119 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v146 = (char *)&v119 - v29;
  uint64_t v143 = type metadata accessor for ActivityArchiver();
  uint64_t v30 = MEMORY[0x1F4188790](v143);
  uint64_t v144 = (uint64_t)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  int v33 = (char *)&v119 - v32;
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_191CF3858();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB44CCE0);
  uint64_t v147 = (void *)v0;
  sub_191BD79BC(v0, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
  uint64_t v35 = sub_191CF3838();
  os_log_type_t v36 = sub_191CF5918();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v140 = v14;
  uint64_t v153 = v24;
  uint64_t v129 = v3;
  v145 = v22;
  if (v37)
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v149 = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v137 = v38 + 4;
    uint64_t v151 = 0xD000000000000012;
    *(void *)&long long v152 = 0x8000000191D0CE80;
    WidgetEnvironment.Storage.debugDescription.getter();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t v151 = sub_191C5C36C(v151, v152, &v149);
    uint64_t v24 = v153;
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    sub_191BD7A24((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    _os_log_impl(&dword_191AF4000, v35, v36, "Environment for archiving: %s", v38, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v39;
    uint64_t v14 = v140;
    MEMORY[0x192FE5F00](v40, -1, -1);
    MEMORY[0x192FE5F00](v38, -1, -1);
  }
  else
  {
    sub_191BD7A24((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
  }

  uint64_t v41 = v143;
  uint64_t v42 = (uint64_t)v147;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v132 = (char *)v147 + *(int *)(v143 + 24);
  uint64_t v134 = v24 + 16;
  uint64_t v133 = v43;
  ((void (*)(char *))v43)(v146);
  uint64_t v44 = v42 + *(int *)(v41 + 28);
  id v45 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v46 = v138;
  v45(v138, v44, v14);
  uint64_t v47 = v144;
  sub_191BD79BC(v42, v144, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
  uint64_t v48 = sub_191CF37C8();
  LODWORD(v135) = sub_191CF5A68();
  char v49 = sub_191CF5B88();
  unint64_t v136 = v45;
  uint64_t v137 = (uint8_t *)(v15 + 16);
  if (v49)
  {
    v45(v145, (uint64_t)v46, v14);
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v143 = v15;
    uint64_t v52 = v51;
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v151 = v51;
    uint64_t v53 = sub_191CF3368();
    uint64_t v149 = sub_191C5C36C(v53, v54, &v151);
    id v45 = v136;
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    sub_191BD7A24(v47, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    os_signpost_id_t v55 = sub_191CF3798();
    _os_signpost_emit_with_name_impl(&dword_191AF4000, v48, (os_signpost_type_t)v135, v55, "GetSessionPlatter", "<session-id>=%s", v50, 0xCu);
    swift_arrayDestroy();
    uint64_t v56 = v52;
    uint64_t v14 = v140;
    uint64_t v15 = v143;
    id v57 = v145;
    MEMORY[0x192FE5F00](v56, -1, -1);
    uint64_t v58 = v50;
    uint64_t v24 = v153;
    MEMORY[0x192FE5F00](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v57, v14);
  }
  else
  {

    sub_191BD7A24(v47, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    id v57 = v145;
  }
  v45(v57, (uint64_t)v46, v14);
  sub_191CF3818();
  swift_allocObject();
  uint64_t v144 = sub_191CF3808();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v15 + 8);
  v59(v46, v14);
  uint64_t v60 = *(char **)(v24 + 8);
  uint64_t v61 = v148;
  uint64_t v153 = v24 + 8;
  uint64_t v138 = v60;
  ((void (*)(char *, uint64_t))v60)(v146, v148);
  uint64_t v62 = v147;
  uint64_t v63 = v147[4];
  uint64_t v64 = v147[5];
  __swift_project_boxed_opaque_existential_1(v147 + 1, v63);
  uint64_t v65 = (char *)v139;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v64 + 48))(&v151, *v62 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor, v63, v64);
  unint64_t v135 = v59;
  uint64_t v143 = v15 + 8;
  if (v65)
  {
    uint64_t v66 = v14;
    uint64_t v146 = v65;
    unint64_t v72 = v141;
    char v71 = v142;
  }
  else
  {
    uint64_t v67 = v14;
    long long v139 = v152;
    uint64_t v68 = v128;
    sub_191BD54F0((uint64_t)&v151, v128);
    uint64_t v69 = (void (**)(void, void))v126;
    sub_191BD79BC(v68, (uint64_t)v126, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    uint64_t v70 = v127;
    sub_191B270E4(v127);
    uint64_t v146 = 0;
    sub_191BA7024((uint64_t)v70, &v149);
    sub_191BD7A24((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    uint64_t v86 = v150;
    uint64_t v151 = v149;
    *(void *)&long long v152 = v150;
    uint64_t v87 = *(void **)(*v147 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
    uint64_t KeyPath = swift_getKeyPath();
    id v89 = v87;
    uint64_t v90 = sub_191AFA6B4(KeyPath);

    swift_release();
    if (v90) {
      swift_bridgeObjectRelease();
    }
    sub_191CF42C8();
    uint64_t v91 = *(void **)(*v147 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
    uint64_t v92 = swift_getKeyPath();
    id v93 = v91;
    uint64_t v94 = sub_191AFA6B4(v92);

    swift_release();
    uint64_t v95 = v125;
    if (v94)
    {
      if (*(void *)(v94 + 16))
      {
        swift_bridgeObjectRelease();
        sub_191CF42E8();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    int v96 = *(unsigned __int8 *)(*v147 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
    char v71 = v142;
    if (v96 != 2)
    {
      int v97 = (void (**)(char *, char *, uint64_t))(v120 + 16);
      uint64_t v126 = (char **)(v120 + 8);
      uint64_t v127 = v86;
      if (v96) {
        sub_191CF4478();
      }
      else {
        sub_191CF4468();
      }
      unint64_t v98 = v95;
      uint64_t v99 = v95;
      uint64_t v100 = v122;
      (*v97)(v121, v98, v122);
      sub_191CF42A8();
      ((void (*)(char *, uint64_t))*v126)(v99, v100);
    }
    id v101 = *(id *)(*v147 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E13F8);
    sub_191BA774C();
    unint64_t v102 = v146;
    sub_191CF4228();
    uint64_t v146 = v102;
    if (!v102)
    {
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      sub_191BD7A24(v128, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
      uint64_t v103 = v123;
      uint64_t v104 = v148;
      v133(v123, v132, v148);
      uint64_t v105 = sub_191CF37C8();
      uint64_t v106 = v124;
      sub_191CF37F8();
      LODWORD(v147) = sub_191CF5A58();
      if (sub_191CF5B88())
      {
        uint64_t v107 = v105;
        uint64_t v108 = v57;
        swift_retain();
        uint64_t v109 = v119;
        sub_191CF3828();
        swift_release();
        uint64_t v110 = v130;
        uint64_t v111 = v131;
        int v112 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v109, v131);
        uint64_t v113 = v67;
        uint64_t v114 = v135;
        if (v112 == *MEMORY[0x1E4FBD340])
        {
          uint64_t v115 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
          uint64_t v115 = "<error.present>=false)";
        }
        uint64_t v116 = v124;
        v136(v108, (uint64_t)v124, v113);
        uint64_t v117 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v117 = 0;
        os_signpost_id_t v118 = sub_191CF3798();
        _os_signpost_emit_with_name_impl(&dword_191AF4000, v107, (os_signpost_type_t)v147, v118, "GetSessionPlatter", v115, v117, 2u);
        MEMORY[0x192FE5F00](v117, -1, -1);

        v114(v116, v113);
        ((void (*)(char *, uint64_t))v138)(v123, v148);
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v114)(v108, v113);
      }
      else
      {

        v135(v106, v67);
        ((void (*)(char *, uint64_t))v138)(v103, v104);
        return swift_release();
      }
    }
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    sub_191BD7A24(v128, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    uint64_t v66 = v14;
    uint64_t v61 = v148;
    unint64_t v72 = v141;
  }
  v133(v72, v132, v61);
  unint64_t v73 = sub_191CF37C8();
  sub_191CF37F8();
  os_signpost_type_t v74 = sub_191CF5A58();
  if (sub_191CF5B88())
  {
    uint64_t v75 = v57;
    swift_retain();
    uint64_t v76 = v129;
    sub_191CF3828();
    swift_release();
    uint64_t v77 = v130;
    uint64_t v78 = v131;
    if ((*(unsigned int (**)(char *, uint64_t))(v130 + 88))(v76, v131) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v79 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
      uint64_t v79 = "<error.present>=true)";
    }
    os_signpost_type_t v80 = v74;
    uint64_t v81 = v142;
    v136(v75, (uint64_t)v142, v66);
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v82 = 0;
    os_signpost_id_t v83 = sub_191CF3798();
    _os_signpost_emit_with_name_impl(&dword_191AF4000, v73, v80, v83, "GetSessionPlatter", v79, v82, 2u);
    MEMORY[0x192FE5F00](v82, -1, -1);

    uint64_t v84 = v135;
    v135(v81, v66);
    ((void (*)(char *, uint64_t))v138)(v141, v148);
    v84(v75, v66);
  }
  else
  {

    v135(v71, v66);
    ((void (*)(char *, uint64_t))v138)(v72, v61);
  }
  swift_willThrow();
  return swift_release();
}

id ActivityArchiver.request.getter()
{
  return *v0;
}

void ActivityArchiver.request.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ActivityArchiver.request.modify())()
{
  return nullsub_1;
}

uint64_t ActivityArchiver.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivityArchiver() + 24);
  uint64_t v4 = sub_191CF37D8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ActivityArchiver()
{
  uint64_t result = qword_1E92E14E0;
  if (!qword_1E92E14E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191BD54F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for ActivityViewSourceContext();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(uint64_t (**)(void))a1;
  long long v49 = *(_OWORD *)(a1 + 8);
  uint64_t v53 = *(void *)(a1 + 24);
  uint64_t v12 = *v4;
  uint64_t v13 = *v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  uint64_t v14 = sub_191CF3378();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v13, v14);
  uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  unint64_t v16 = *(void *)(v12 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
  char v17 = *(unsigned char *)(v12 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  uint64_t v18 = (uint64_t *)&v10[*(int *)(v8 + 28)];
  *uint64_t v18 = v15;
  v18[1] = v16;
  v10[*(int *)(v8 + 32)] = v17;
  sub_191B15F88(v15, v16);
  uint64_t v19 = (char *)sub_191BD6630();
  uint64_t v20 = *(void **)(v12 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  uint64_t KeyPath = swift_getKeyPath();
  id v22 = v20;
  uint64_t v23 = sub_191AFA6F4(KeyPath);

  swift_release();
  if (v23)
  {
    if (*(void *)(v23 + 16))
    {
      int v24 = *(unsigned __int8 *)(v23 + 32);
      swift_bridgeObjectRelease();
      uint64_t v25 = *((void *)v19 + 2);
      if (v25)
      {
        uint64_t v26 = (unsigned __int8 *)(v19 + 32);
        while (v24 != *v26)
        {
          ++v26;
          if (!--v25) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        if ((v24 & 1) == 0)
        {
          int v27 = MEMORY[0x192FE5560]("_makeViewCollection(source:)");
          uint64_t v47 = v11;
          uint64_t v48 = v3;
          uint64_t v46 = v19;
          if (v27) {
            uint64_t v50 = sub_191CF4EB8();
          }
          uint64_t v45 = sub_191CF5038();
          goto LABEL_15;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v28 = v11(v10);
  if (v3)
  {
    sub_191BD7A24((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
    return swift_bridgeObjectRelease();
  }
  uint64_t v45 = v28;
  uint64_t v46 = v19;
  uint64_t v47 = v11;
  uint64_t v48 = 0;
LABEL_15:
  uint64_t v30 = *v4;
  uint64_t v31 = *v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics;
  uint64_t v32 = (int *)type metadata accessor for ActivityViewCollection();
  sub_191BD79BC(v31, a2 + v32[7], type metadata accessor for ActivityMetricsDefinition);
  int v33 = *(void **)(v30 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  uint64_t v34 = v30 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata;
  uint64_t v36 = *(void *)(v30 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  uint64_t v35 = *(void *)(v34 + 8);
  v44[1] = v4;
  char v37 = *(unsigned char *)(v34 + 16);
  char v38 = *(unsigned char *)(v34 + 17);
  char v39 = *(unsigned char *)(v34 + 18);
  uint64_t v40 = type metadata accessor for JindoViewCollection();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a2, 1, 1, v40);
  *(void *)(a2 + v32[6]) = v45;
  *(void *)(a2 + v32[5]) = v33;
  uint64_t v41 = a2 + v32[9];
  *(void *)uint64_t v41 = v36;
  *(void *)(v41 + 8) = v35;
  *(unsigned char *)(v41 + 16) = v37;
  *(unsigned char *)(v41 + 17) = v38;
  *(unsigned char *)(v41 + 18) = v39;
  *(void *)(a2 + v32[8]) = v46;
  uint64_t v50 = (uint64_t)v47;
  long long v51 = v49;
  uint64_t v52 = v53;
  swift_retain();
  id v42 = v33;
  swift_bridgeObjectRetain();
  uint64_t v43 = v48;
  sub_191BD6C50((uint64_t)&v50, a2);
  if (v43) {
    sub_191BD7A24(a2, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
  }
  swift_release();
  return sub_191BD7A24((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
}

unint64_t static ActivityArchiver.PreviewsActivityID.getter()
{
  return 0xD000000000000016;
}

uint64_t static ActivityArchiver.makeArchivedViewCollection(attributesType:attributesData:contentStatePayload:isStale:viewSource:metricsDefinition:environment:payloadID:supportedFamilies:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void, uint64_t, uint64_t), char *a4, char *a5, int a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void (*v87)(long long *__return_ptr, char *);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, void, uint64_t, uint64_t);
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  long long v113[2];
  long long v114;
  char *v115;

  id v93 = a8;
  unint64_t v102 = a7;
  uint64_t v103 = a1;
  LODWORD(v108) = a6;
  uint64_t v106 = a4;
  uint64_t v107 = a5;
  uint64_t v104 = a2;
  uint64_t v105 = a3;
  id v101 = a9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
  MEMORY[0x1F4188790](v12 - 8);
  id v89 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for JindoViewCollection();
  uint64_t v95 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v85 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v92 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for ActivityViewCollection();
  uint64_t v17 = MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v91 = (char *)&v85 - v19;
  uint64_t v100 = type metadata accessor for ActivityViewSourceContext() - 8;
  MEMORY[0x1F4188790](v100);
  uint64_t v115 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_191CF3178();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v99 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v98 = sub_191CF33C8();
  uint64_t v23 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_191CF3378();
  uint64_t v111 = *(void *)(v26 - 8);
  int v112 = v26;
  MEMORY[0x1F4188790](v26);
  uint64_t v110 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_191CF33F8();
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  int v33 = (char *)&v85 - v32;
  uint64_t v34 = sub_191CF33E8();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  char v38 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v85 - v39;
  int v97 = *(uint64_t (**)(uint64_t))v102;
  int v96 = *(void *)(v102 + 8);
  uint64_t v41 = *(void *)(v102 + 24);
  uint64_t v87 = *(void (**)(long long *__return_ptr, char *))(v102 + 16);
  uint64_t v86 = v41;
  id v101 = (void *)*v101;
  sub_191CF33D8();
  sub_191CF3408();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v103, v98);
  uint64_t v42 = v111;
  sub_191BD79BC((uint64_t)v33, (uint64_t)v31, MEMORY[0x1E4F18058]);
  unint64_t v102 = v35;
  uint64_t v103 = v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v38, v40, v34);
  sub_191B15F88(v104, (unint64_t)v105);
  sub_191CF3168();
  uint64_t v43 = v110;
  uint64_t v44 = v112;
  uint64_t v45 = (uint64_t)v115;
  sub_191CF3358();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v45, v43, v44);
  uint64_t v46 = v100;
  uint64_t v47 = (char **)(v45 + *(int *)(v100 + 28));
  uint64_t v48 = (uint64_t)v106;
  unint64_t v49 = (unint64_t)v107;
  void *v47 = v106;
  v47[1] = (char *)v49;
  char v50 = v108;
  *(unsigned char *)(v45 + *(int *)(v46 + 32)) = v108;
  sub_191B15F88(v48, v49);
  uint64_t v51 = v96;
  uint64_t v52 = v109;
  uint64_t v53 = v97(v45);
  if (v52)
  {
    sub_191BD7A24(v45, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    sub_191BD7A24((uint64_t)v33, MEMORY[0x1E4F18058]);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v40, v103);
    return v51;
  }
  uint64_t v109 = 0;
  uint64_t v106 = v40;
  uint64_t v107 = v33;
  char v54 = v50 & 1;
  os_signpost_id_t v55 = (int *)v90;
  uint64_t v56 = (uint64_t)v91;
  uint64_t v57 = v93;
  uint64_t v58 = v53;
  sub_191BD79BC(v93, (uint64_t)&v91[*(int *)(v90 + 28)], type metadata accessor for ActivityMetricsDefinition);
  uint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56);
  v95 += 56;
  uint64_t v105 = v59;
  v59(v56, 1, 1, v94);
  *(void *)(v56 + v55[6]) = v58;
  uint64_t v60 = v101;
  *(void *)(v56 + v55[5]) = v101;
  uint64_t v61 = v56 + v55[9];
  *(void *)uint64_t v61 = a10;
  *(void *)(v61 + 8) = a11;
  *(unsigned char *)(v61 + 16) = v54;
  *(_WORD *)(v61 + 17) = 0;
  *(void *)(v56 + v55[8]) = a12;
  uint64_t v62 = v57 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v63 = v92;
  sub_191B01614(v62, v92, (uint64_t *)&unk_1E92E1BD8);
  uint64_t v64 = type metadata accessor for JindoMetricsDefinition(0);
  int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v63, 1, v64);
  swift_bridgeObjectRetain();
  uint64_t v108 = v58;
  swift_retain();
  id v66 = v60;
  swift_bridgeObjectRetain();
  sub_191B01770(v63, (uint64_t *)&unk_1E92E1BD8);
  if (v65 == 1)
  {
    uint64_t v67 = (uint64_t)v115;
    uint64_t v69 = v106;
    uint64_t v68 = (uint64_t)v107;
    uint64_t v70 = v89;
    uint64_t v51 = (uint64_t)v88;
    uint64_t v71 = v109;
  }
  else
  {
    uint64_t v67 = (uint64_t)v115;
    uint64_t v51 = v86;
    uint64_t v72 = v109;
    v87(v113, v115);
    uint64_t v71 = v72;
    uint64_t v68 = (uint64_t)v107;
    if (v72)
    {
      swift_release();
      sub_191BD7A24(v67, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
      sub_191BD7A24(v68, MEMORY[0x1E4F18058]);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v106, v103);
      uint64_t v83 = v56;
LABEL_17:
      sub_191BD7A24(v83, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
      return v51;
    }
    unint64_t v73 = v85;
    sub_191B004A8(v113, (uint64_t)(v85 + 8));
    uint64_t v74 = v94;
    sub_191BD79BC(v93, (uint64_t)v73 + *(int *)(v94 + 24), type metadata accessor for ActivityMetricsDefinition);
    *unint64_t v73 = v66;
    id v75 = v66;
    sub_191B01770(v56, &qword_1E92E1590);
    sub_191BD7A84((uint64_t)v73, v56, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
    v105(v56, 0, 1, v74);
    uint64_t v69 = v106;
    uint64_t v70 = v89;
    uint64_t v51 = (uint64_t)v88;
  }
  sub_191BD79BC(v56, v51, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
  sub_191B270E4(v70);
  if (v71)
  {
    sub_191BD7A24(v51, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
    swift_release();
    sub_191BD7A24(v67, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
    sub_191BD7A24(v68, MEMORY[0x1E4F18058]);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v103);
    uint64_t v83 = v56;
    goto LABEL_17;
  }
  sub_191BA7024((uint64_t)v70, (uint64_t *)&v114);
  sub_191BD7A24(v51, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
  v113[0] = v114;
  uint64_t KeyPath = swift_getKeyPath();
  id v77 = v66;
  uint64_t v78 = sub_191AFA6B4(KeyPath);

  swift_release();
  if (v78) {
    swift_bridgeObjectRelease();
  }
  sub_191CF42C8();
  uint64_t v79 = swift_getKeyPath();
  id v80 = v77;
  uint64_t v81 = sub_191AFA6B4(v79);

  swift_release();
  uint64_t v82 = (uint64_t)v115;
  if (v81)
  {
    if (*(void *)(v81 + 16))
    {
      swift_bridgeObjectRelease();
      sub_191CF42E8();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E13F8);
  sub_191BA774C();
  uint64_t v51 = sub_191CF4238();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_191BD7A24(v82, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
  sub_191BD7A24(v68, MEMORY[0x1E4F18058]);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v103);
  sub_191BD7A24(v56, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
  return v51;
}

void *sub_191BD6630()
{
  uint64_t v50 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E23C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)&v39 - v13;
  uint64_t v14 = sub_191CF33C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v0[4];
  uint64_t v18 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v19);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 64))(v19, v18);
  sub_191CF3338();
  uint64_t v49 = sub_191CF3388();
  uint64_t v47 = v21;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v46 = v15 + 8;
  v45(v17, v14);
  uint64_t v22 = *(void *)(v20 + 16);
  if (!v22)
  {
LABEL_17:
    uint64_t v32 = 1;
    uint64_t v34 = v42;
    uint64_t v33 = v43;
    uint64_t v36 = (uint64_t)v40;
    uint64_t v35 = (uint64_t)v41;
    goto LABEL_20;
  }
  uint64_t v23 = v20;
  uint64_t v24 = v20 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
  uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v48 = *(void *)(v43 + 72);
  uint64_t v39 = v23;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_191BD79BC(v24, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
    sub_191BD79BC((uint64_t)v9, (uint64_t)v2, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        (*v44)(v5, v2, v14);
        (*v25)(v5, 0, 1, v14);
      }
      else
      {
        (*v25)(v5, 1, 1, v14);
        sub_191BD7A24((uint64_t)v2, type metadata accessor for ViewSource);
      }
    }
    else
    {
      sub_191BD7A24((uint64_t)v2, type metadata accessor for ViewSource);
      (*v25)(v5, 1, 1, v14);
    }
    if ((*v26)(v5, 1, v14) == 1)
    {
      sub_191B01770((uint64_t)v5, qword_1E92E23C8);
      goto LABEL_4;
    }
    uint64_t v28 = sub_191CF3388();
    uint64_t v30 = v29;
    v45(v5, v14);
    if (v28 == v49 && v30 == v47) {
      break;
    }
    char v31 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_19;
    }
LABEL_4:
    sub_191BD7A24((uint64_t)v9, type metadata accessor for WidgetDescriptor);
    v24 += v48;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v34 = v42;
  uint64_t v33 = v43;
  uint64_t v36 = (uint64_t)v40;
  uint64_t v35 = (uint64_t)v41;
  swift_bridgeObjectRelease();
  sub_191BD7A84((uint64_t)v9, v35, type metadata accessor for WidgetDescriptor);
  uint64_t v32 = 0;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v35, v32, 1, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B01614(v35, v36, (uint64_t *)&unk_1EB44BB00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1, v34) == 1)
  {
    sub_191B01770(v36, (uint64_t *)&unk_1EB44BB00);
    uint64_t v37 = &unk_1EE29EE28;
  }
  else
  {
    uint64_t v37 = *(void **)(v36 + *(int *)(v34 + 32));
    swift_bridgeObjectRetain();
    sub_191BD7A24(v36, type metadata accessor for WidgetDescriptor);
  }
  sub_191B01770(v35, (uint64_t *)&unk_1EB44BB00);
  return v37;
}

void sub_191BD6C50(uint64_t a1, uint64_t a2)
{
  void (*v36)(long long *__return_ptr, char *);

  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for JindoViewCollection();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ActivityViewSourceContext();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void (**)(long long *__return_ptr, char *))(a1 + 16);
  uint64_t v32 = v4;
  uint64_t v16 = *v4;
  uint64_t v17 = (void **)(v16 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  uint64_t v18 = *v17;
  if (v18)
  {
    uint64_t v31 = a2;
    uint64_t v19 = OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics;
    uint64_t v20 = type metadata accessor for ActivityMetricsDefinition(0);
    sub_191B01614(v16 + *(int *)(v20 + 20) + v19, (uint64_t)v15, (uint64_t *)&unk_1E92E1BD8);
    uint64_t v21 = type metadata accessor for JindoMetricsDefinition(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
    {
      sub_191B01770((uint64_t)v15, (uint64_t *)&unk_1E92E1BD8);
    }
    else
    {
      id v22 = v18;
      sub_191B01770((uint64_t)v15, (uint64_t *)&unk_1E92E1BD8);
      uint64_t v23 = v16 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
      uint64_t v24 = sub_191CF3378();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v23, v24);
      uint64_t v25 = *(void *)(v16 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
      unint64_t v26 = *(void *)(v16 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
      char v27 = *(unsigned char *)(v16 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
      uint64_t v28 = (uint64_t *)&v12[*(int *)(v10 + 20)];
      *uint64_t v28 = v25;
      v28[1] = v26;
      v12[*(int *)(v10 + 24)] = v27;
      sub_191B15F88(v25, v26);
      v36(v35, v12);
      sub_191BD7A24((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivityViewSourceContext);
      if (v3)
      {
      }
      else
      {
        sub_191B004A8(v35, (uint64_t)(v9 + 1));
        uint64_t v29 = v34;
        sub_191BD79BC(*v32 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, (uint64_t)v9 + *(int *)(v34 + 24), type metadata accessor for ActivityMetricsDefinition);
        *uint64_t v9 = v22;
        uint64_t v30 = v31;
        sub_191B01770(v31, &qword_1E92E1590);
        sub_191BD7A84((uint64_t)v9, v30, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v29);
      }
    }
  }
}

char *initializeBufferWithCopyOfBuffer for ActivityArchiver(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 2) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(char *, char **, uint64_t))(v9 - 8);
    uint64_t v12 = v5;
    v11(a1 + 8, v8, v10);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_191CF37D8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_191CF37A8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for ActivityArchiver(id *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)(a1 + 1);

  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_191CF37D8();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_191CF37A8();
  long long v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = a2 + 8;
  long long v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  id v12 = v6;
  v11(v7, v8, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_191CF37D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_191CF37A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void **assignWithCopy for ActivityArchiver(void **a1, void **a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(a2 + 1);
  uint64_t v6 = *a2;
  uint64_t v8 = *a1;
  *a1 = *a2;
  long long v9 = (uint64_t *)(a1 + 1);
  id v10 = v6;

  __swift_assign_boxed_opaque_existential_1(v9, v7);
  uint64_t v11 = *(int *)(a3 + 24);
  id v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_191CF37D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_191CF37A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_191CF37D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_191CF37A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191CF37D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_191CF37A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BD7668);
}

uint64_t sub_191BD7668(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_191CF37D8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_191CF37A8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BD77A8);
}

void *sub_191BD77A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_191CF37D8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_191CF37A8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_191BD78D4()
{
  uint64_t result = sub_191CF37D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF37A8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_191BD79BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BD7A24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191BD7A84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t View.applyCommonEnvironment(widget:metrics:overrideFamily:)(void *a1, void *a2, id a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = swift_getKeyPath();
  id v14 = a1;
  id v15 = a2;
  if (a4) {
    a3 = objc_msgSend(v14, sel_family);
  }
  v17[0] = v14;
  v17[1] = v15;
  v17[2] = a3;
  v17[3] = KeyPath;
  char v18 = 0;
  uint64_t v19 = v13;
  uint64_t v20 = 0;
  char v21 = 0;
  MEMORY[0x192FE3AA0](v17, a5, &type metadata for CommonArchivingWidgetEnvironmentModifier, a6);

  sub_191B172D4(KeyPath, 0);
  return sub_191B172E0(v13, 0, 0);
}

uint64_t sub_191BD7BE8@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F6E0();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BD7C38@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F6E0();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BD7C88()
{
  return sub_191CF4078();
}

uint64_t sub_191BD7CD4()
{
  return sub_191CF4078();
}

uint64_t sub_191BD7D20@<X0>(uint64_t a1@<X8>)
{
  sub_191B4F68C();
  uint64_t result = sub_191CF4068();
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_191BD7D78@<X0>(uint64_t a1@<X8>)
{
  sub_191B4F68C();
  uint64_t result = sub_191CF4068();
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_191BD7DD0()
{
  return EnvironmentValues._widgetRenderScheme.setter();
}

uint64_t sub_191BD7E10()
{
  return EnvironmentValues._widgetRenderScheme.setter();
}

uint64_t sub_191BD7E50()
{
  return swift_getWitnessTable();
}

uint64_t sub_191BD7EB4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1)
{
  sub_191B172D4(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);

  return sub_191B172E0(v2, v3, v4);
}

uint64_t initializeWithCopy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  char v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 32);
  id v8 = v4;
  id v9 = v5;
  sub_191B1BB50(v6, v7);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v11 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_191BD7EB4(v10, v11, v2);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  char v4 = *a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;
  id v6 = v4;

  char v7 = v2[1];
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = v2[2];
  uint64_t v10 = (uint64_t)v2[3];
  char v11 = *((unsigned char *)v2 + 32);
  sub_191B1BB50(v10, v11);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_191B172D4(v12, v13);
  uint64_t v14 = (uint64_t)v2[5];
  uint64_t v15 = (uint64_t)v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_191BD7EB4(v14, v15, (char)v2);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  char v18 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v15;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_191B172E0(v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_191B172D4(v6, v7);
  char v8 = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  char v11 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v8;
  sub_191B172E0(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonArchivingWidgetEnvironmentModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonArchivingWidgetEnvironmentModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonArchivingWidgetEnvironmentModifier()
{
  return &type metadata for CommonArchivingWidgetEnvironmentModifier;
}

uint64_t sub_191BD818C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BD81A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v139 = a1;
  uint64_t v167 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AEB0);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = &v128[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B88);
  MEMORY[0x1F4188790](v138);
  char v7 = &v128[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B98);
  MEMORY[0x1F4188790](v140);
  uint64_t v142 = &v128[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449BA8);
  MEMORY[0x1F4188790](v141);
  v145 = &v128[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40D0);
  MEMORY[0x1F4188790](v143);
  uint64_t v147 = &v128[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40D8);
  MEMORY[0x1F4188790](v144);
  uint64_t v149 = &v128[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40E0);
  MEMORY[0x1F4188790](v146);
  uint64_t v151 = &v128[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40E8);
  MEMORY[0x1F4188790](v148);
  v155 = &v128[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40F0);
  MEMORY[0x1F4188790](v150);
  uint64_t v156 = &v128[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E40F8);
  MEMORY[0x1F4188790](v152);
  uint64_t v157 = &v128[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4100);
  MEMORY[0x1F4188790](v153);
  uint64_t v158 = &v128[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4108);
  MEMORY[0x1F4188790](v154);
  uint64_t v161 = &v128[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4110);
  MEMORY[0x1F4188790](v165);
  v160 = &v128[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4118);
  uint64_t v166 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  v162 = &v128[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4120);
  uint64_t v163 = *(void *)(v21 - 8);
  uint64_t v164 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v159 = &v128[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v174 = (id)type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v174);
  uint64_t v24 = (uint64_t *)&v128[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v173 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  unint64_t v26 = &v128[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  unint64_t v136 = &v128[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x1F4188790](v28);
  uint64_t v32 = &v128[-v31];
  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    return result;
  }
  id v175 = *(id *)v2;
  uint64_t v132 = *(void **)(v2 + 8);
  uint64_t v134 = *(void *)(v2 + 16);
  uint64_t v168 = *(void *)(v2 + 24);
  int v33 = *(unsigned __int8 *)(v2 + 32);
  uint64_t v133 = *(void *)(v2 + 40);
  uint64_t v170 = *(void *)(v2 + 48);
  int v169 = *(unsigned __int8 *)(v2 + 56);
  uint64_t v34 = *(void *)xmmword_1EB44CC98;
  uint64_t v176 = xmmword_1EB44CC98;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(qword_1EB44CCA8 + 24))(v34);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v135 = v19;
  uint64_t v171 = v35;
  uint64_t v172 = v32;
  if (!v36)
  {
    uint64_t v49 = 1;
    goto LABEL_21;
  }
  int v129 = v33;
  uint64_t v130 = v7;
  uint64_t v131 = v5;
  uint64_t v37 = v35 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
  uint64_t v38 = *(void *)(v173 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_191BD9630(v37, (uint64_t)v26, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v26, (uint64_t)v24, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        uint64_t v41 = sub_191CF33C8();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v41 - 8) + 8))(v24, v41);
      }
      else
      {
        sub_191BD9698((uint64_t)v24, type metadata accessor for ViewSource);
      }
      uint64_t v42 = 0;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v42 = *v24;
      uint64_t v43 = v24[1];
      uint64_t v44 = v24[4];
      swift_bridgeObjectRelease();
      sub_191B16F2C(v44);
      swift_release();
    }
    id v45 = objc_msgSend(v175, sel_kind);
    uint64_t v46 = sub_191CF5338();
    uint64_t v48 = v47;

    if (!v43)
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v42 == v46 && v43 == v48) {
      break;
    }
    char v39 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_19;
    }
LABEL_5:
    sub_191BD9698((uint64_t)v26, type metadata accessor for WidgetDescriptor);
    v37 += v38;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v49 = 1;
      uint64_t v32 = v172;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v32 = v172;
  sub_191BD9EE8((uint64_t)v26, (uint64_t)v172);
  uint64_t v49 = 0;
LABEL_20:
  char v5 = v131;
  char v7 = v130;
  LOBYTE(v33) = v129;
LABEL_21:
  uint64_t v50 = v137;
  uint64_t v51 = v132;
  uint64_t v52 = (uint64_t)v136;
  uint64_t v53 = v173;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v173 + 56))(v32, v49, 1, v137);
  swift_bridgeObjectRelease();
  sub_191B01614((uint64_t)v32, v52, (uint64_t *)&unk_1EB44BB00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v52, 1, v50) == 1)
  {
    sub_191B01770(v52, (uint64_t *)&unk_1EB44BB00);
    BOOL v54 = 0;
  }
  else
  {
    int v55 = *(unsigned __int8 *)(v52 + *(int *)(v50 + 52));
    sub_191BD9698(v52, type metadata accessor for WidgetDescriptor);
    BOOL v54 = v55 == 2;
  }
  id v56 = v175;
  id v57 = v51;
  uint64_t v58 = v168;
  sub_191B1BB50(v168, v33);
  uint64_t v59 = v133;
  uint64_t v60 = v170;
  char v61 = v169;
  sub_191BD7EB4(v133, v170, v169);
  sub_191B1BB50(v58, v33);
  sub_191BDC9E4(v58, v33, &v176);
  sub_191B172D4(v58, v33);

  id v175 = v56;
  sub_191B172D4(v58, v33);
  sub_191B172E0(v59, v60, v61);
  if (v54 || v176 == 2)
  {
    id v174 = v175;
    id v63 = v57;
    char v64 = v33;
    uint64_t v65 = v168;
    sub_191B1BB50(v168, v64);
    uint64_t v66 = v170;
    char v67 = v169;
    sub_191BD7EB4(v59, v170, v169);
    sub_191BD7EB4(v59, v66, v67);
    sub_191BDCA28(v59, v66, v67, (uint64_t)&v176);
    sub_191B172E0(v59, v66, v67);

    sub_191B172D4(v65, v64);
    sub_191B172E0(v59, v66, v67);
    BOOL v62 = v177 - 3 < 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    BOOL v62 = 0;
  }
  InternalWidgetFamily.init(_:)(v134, &v176);
  uint64_t v68 = sub_191CB3E6C(v57, (unsigned __int8 *)&v176);
  uint64_t v70 = v69;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A328);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v7, v139, v72);
  unint64_t v73 = (uint64_t *)&v7[*(int *)(v138 + 36)];
  *unint64_t v73 = KeyPath;
  v73[1] = v68;
  v73[2] = v70;
  uint64_t v74 = swift_getKeyPath();
  if (v62)
  {
    if (qword_1EB448F60 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_191CF5068();
    uint64_t v76 = __swift_project_value_buffer(v75, (uint64_t)qword_1EB44C788);
    uint64_t v77 = *(void *)(v75 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v77 + 16))(v5, v76, v75);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v77 + 56))(v5, 0, 1, v75);
  }
  else
  {
    uint64_t v78 = sub_191CF5068();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v5, 1, 1, v78);
  }
  uint64_t v79 = (uint64_t)v142;
  id v80 = (uint64_t *)&v142[*(int *)(v140 + 36)];
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AED0);
  sub_191B01614((uint64_t)v5, (uint64_t)v80 + *(int *)(v81 + 28), &qword_1EB44AEB0);
  *id v80 = v74;
  sub_191B01614((uint64_t)v7, v79, &qword_1EB449B88);
  sub_191B01770((uint64_t)v5, &qword_1EB44AEB0);
  sub_191B01770((uint64_t)v7, &qword_1EB449B88);
  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = v145;
  sub_191B01614(v79, (uint64_t)v145, &qword_1EB449B98);
  uint64_t v84 = &v83[*(int *)(v141 + 36)];
  *(void *)uint64_t v84 = v82;
  v84[8] = 0;
  sub_191B01770(v79, &qword_1EB449B98);
  uint64_t v85 = swift_getKeyPath();
  uint64_t v86 = swift_getKeyPath();
  uint64_t v87 = swift_getKeyPath();
  uint64_t v88 = v147;
  sub_191B01614((uint64_t)v83, (uint64_t)v147, &qword_1EB449BA8);
  id v89 = &v88[*(int *)(v143 + 36)];
  *(void *)id v89 = v85;
  v89[8] = 0;
  *((void *)v89 + 2) = v86;
  v89[24] = 0;
  *((void *)v89 + 4) = v87;
  v89[40] = 0;
  sub_191B01770((uint64_t)v83, &qword_1EB449BA8);
  uint64_t v90 = swift_getKeyPath();
  uint64_t v91 = swift_getKeyPath();
  uint64_t v92 = v149;
  sub_191B01614((uint64_t)v88, (uint64_t)v149, &qword_1E92E40D0);
  id v93 = &v92[*(int *)(v144 + 36)];
  *(void *)id v93 = v90;
  v93[8] = 0;
  *((void *)v93 + 2) = v91;
  *((void *)v93 + 3) = 0;
  v93[32] = 0;
  sub_191B01770((uint64_t)v88, &qword_1E92E40D0);
  uint64_t v94 = swift_getKeyPath();
  uint64_t v95 = swift_getKeyPath();
  int v96 = v151;
  sub_191B01614((uint64_t)v92, (uint64_t)v151, &qword_1E92E40D8);
  int v97 = &v96[*(int *)(v146 + 36)];
  *(void *)int v97 = v94;
  v97[8] = 0;
  *((void *)v97 + 2) = v95;
  v97[24] = 0;
  *((void *)v97 + 4) = 0;
  v97[40] = 1;
  sub_191B01770((uint64_t)v92, &qword_1E92E40D8);
  uint64_t v98 = swift_getKeyPath();
  uint64_t v99 = swift_getKeyPath();
  uint64_t v100 = v155;
  sub_191B01614((uint64_t)v96, (uint64_t)v155, &qword_1E92E40E0);
  id v101 = &v100[*(int *)(v148 + 36)];
  *(void *)id v101 = v98;
  v101[8] = 0;
  *((void *)v101 + 2) = v99;
  v101[24] = 0;
  sub_191B01770((uint64_t)v96, &qword_1E92E40E0);
  uint64_t v102 = swift_getKeyPath();
  uint64_t v103 = swift_getKeyPath();
  uint64_t v104 = v156;
  sub_191B01614((uint64_t)v100, (uint64_t)v156, &qword_1E92E40E8);
  uint64_t v105 = &v104[*(int *)(v150 + 36)];
  *(void *)uint64_t v105 = v102;
  v105[8] = 0;
  *((void *)v105 + 2) = v103;
  v105[24] = 0;
  sub_191B01770((uint64_t)v100, &qword_1E92E40E8);
  uint64_t v106 = swift_getKeyPath();
  uint64_t v107 = v157;
  sub_191B01614((uint64_t)v104, (uint64_t)v157, &qword_1E92E40F0);
  uint64_t v108 = &v107[*(int *)(v152 + 36)];
  *(void *)uint64_t v108 = v106;
  v108[8] = 0;
  sub_191B01770((uint64_t)v104, &qword_1E92E40F0);
  uint64_t v109 = swift_getKeyPath();
  uint64_t v110 = v158;
  sub_191B01614((uint64_t)v107, (uint64_t)v158, &qword_1E92E40F8);
  uint64_t v111 = &v110[*(int *)(v153 + 36)];
  *(void *)uint64_t v111 = v109;
  v111[8] = 0;
  sub_191B01770((uint64_t)v107, &qword_1E92E40F8);
  uint64_t v112 = swift_getKeyPath();
  uint64_t v113 = v161;
  sub_191B01614((uint64_t)v110, (uint64_t)v161, &qword_1E92E4100);
  uint64_t v114 = (uint64_t *)&v113[*(int *)(v154 + 36)];
  id v115 = v175;
  *uint64_t v114 = v112;
  v114[1] = (uint64_t)v115;
  id v116 = v115;
  sub_191B01770((uint64_t)v110, &qword_1E92E4100);
  uint64_t v117 = swift_getKeyPath();
  if (qword_1EB449E78 != -1) {
    swift_once();
  }
  uint64_t v118 = sub_191CF3A88();
  uint64_t v119 = __swift_project_value_buffer(v118, (uint64_t)qword_1EB44C800);
  uint64_t v120 = v165;
  uint64_t v121 = (uint64_t)v160;
  uint64_t v122 = (uint64_t *)&v160[*(int *)(v165 + 36)];
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))((char *)v122 + *(int *)(v123 + 28), v119, v118);
  uint64_t *v122 = v117;
  sub_191BD9780((uint64_t)v113, v121);
  unint64_t v124 = sub_191BD97E8();
  uint64_t v125 = v162;
  sub_191CF4CA8();
  sub_191B01770(v121, &qword_1E92E4110);
  uint64_t v176 = v120;
  unint64_t v177 = v124;
  swift_getOpaqueTypeConformance2();
  uint64_t v126 = v159;
  uint64_t v127 = v135;
  sub_191CF4CD8();
  (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v125, v127);
  sub_191B01770((uint64_t)v172, (uint64_t *)&unk_1EB44BB00);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v163 + 32))(v167, v126, v164);
}

uint64_t sub_191BD94D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AEB0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_191B01614(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB44AEB0);
  return sub_191CF3E68();
}

uint64_t sub_191BD9564(uint64_t a1)
{
  uint64_t v2 = sub_191CF3A88();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_191CF3FD8();
}

uint64_t sub_191BD9630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BD9698(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191BD9700()
{
  return sub_191CF3E58();
}

uint64_t sub_191BD9758()
{
  return sub_191CF3FC8();
}

uint64_t sub_191BD9780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191BD97E8()
{
  unint64_t result = qword_1E92E4128;
  if (!qword_1E92E4128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4110);
    sub_191BD9888();
    sub_191B00398(&qword_1EB449F68, &qword_1EB449F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4128);
  }
  return result;
}

unint64_t sub_191BD9888()
{
  unint64_t result = qword_1E92E4130;
  if (!qword_1E92E4130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4108);
    sub_191BD9960(&qword_1E92E4138, &qword_1E92E4100, (void (*)(void))sub_191BD99E8, (void (*)(void))sub_191B96034);
    sub_191B00398(&qword_1EB44A098, &qword_1EB44A0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4130);
  }
  return result;
}

uint64_t sub_191BD9960(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BD99E8()
{
  return sub_191BD9960(&qword_1E92E4140, &qword_1E92E40F8, (void (*)(void))sub_191BD9A24, (void (*)(void))sub_191BA07EC);
}

uint64_t sub_191BD9A24()
{
  return sub_191BD9960(&qword_1E92E4148, &qword_1E92E40F0, (void (*)(void))sub_191BD9A60, (void (*)(void))sub_191BD9E94);
}

uint64_t sub_191BD9A60()
{
  return sub_191BD9960(&qword_1E92E4150, &qword_1E92E40E8, (void (*)(void))sub_191BD9A9C, (void (*)(void))sub_191BD9E40);
}

uint64_t sub_191BD9A9C()
{
  return sub_191BD9960(&qword_1E92E4158, &qword_1E92E40E0, (void (*)(void))sub_191BD9AD8, (void (*)(void))sub_191BD9DEC);
}

uint64_t sub_191BD9AD8()
{
  return sub_191BD9960(&qword_1E92E4160, &qword_1E92E40D8, (void (*)(void))sub_191BD9B14, (void (*)(void))sub_191BD9D98);
}

uint64_t sub_191BD9B14()
{
  return sub_191BD9960(&qword_1E92E4168, &qword_1E92E40D0, (void (*)(void))sub_191BD9B50, (void (*)(void))sub_191BD9D44);
}

uint64_t sub_191BD9B50()
{
  return sub_191BD9960(&qword_1EB449BA0, &qword_1EB449BA8, (void (*)(void))sub_191BD9B8C, (void (*)(void))sub_191BD9CF0);
}

unint64_t sub_191BD9B8C()
{
  unint64_t result = qword_1EB449B90;
  if (!qword_1EB449B90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449B98);
    sub_191BD9C2C();
    sub_191B00398(&qword_1EB44AEC8, &qword_1EB44AED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B90);
  }
  return result;
}

unint64_t sub_191BD9C2C()
{
  unint64_t result = qword_1EB449B80;
  if (!qword_1EB449B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449B88);
    sub_191B00398(&qword_1EB44A320, &qword_1EB44A328);
    sub_191B00398(&qword_1EB44B950, &qword_1EB44B958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B80);
  }
  return result;
}

unint64_t sub_191BD9CF0()
{
  unint64_t result = qword_1EB44AE10;
  if (!qword_1EB44AE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AE10);
  }
  return result;
}

unint64_t sub_191BD9D44()
{
  unint64_t result = qword_1EB449FA0;
  if (!qword_1EB449FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449FA0);
  }
  return result;
}

unint64_t sub_191BD9D98()
{
  unint64_t result = qword_1EB449F88;
  if (!qword_1EB449F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F88);
  }
  return result;
}

unint64_t sub_191BD9DEC()
{
  unint64_t result = qword_1EB449F98;
  if (!qword_1EB449F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F98);
  }
  return result;
}

unint64_t sub_191BD9E40()
{
  unint64_t result = qword_1EB449F90;
  if (!qword_1EB449F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F90);
  }
  return result;
}

unint64_t sub_191BD9E94()
{
  unint64_t result = qword_1EB44AE18;
  if (!qword_1EB44AE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AE18);
  }
  return result;
}

uint64_t sub_191BD9EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BD9F4C()
{
  return swift_getOpaqueTypeConformance2();
}

id NSError.init(code:underlyingError:debugDescription:__file:__line:)(char *a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = *a1;
  if (!a4)
  {
    a3 = CKCErrorCode.debugDescription.getter();
    uint64_t v4 = v8;
  }
  uint64_t v9 = sub_191CF5338();
  uint64_t v11 = qword_191D00520[v7];

  return sub_191BDA6B4(v9, v10, v11, a2, a3, v4);
}

unint64_t CKCErrorCode.debugDescription.getter()
{
  unint64_t result = 0xD000000000000023;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
    case 5:
    case 7:
    case 0xD:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0x656972746E456F6ELL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000021;
      break;
    case 0x11:
      unint64_t result = 0x4E65766968637261;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x676F646863746157;
      break;
  }
  return result;
}

WidgetKit::CKCErrorCode_optional __swiftcall CKCErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 1199)
  {
    if (rawValue <= 1301)
    {
      switch(rawValue)
      {
        case 1200:
          *unint64_t v1 = 13;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
        case 1300:
          *unint64_t v1 = 14;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
        case 1301:
          *unint64_t v1 = 15;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
    else if (rawValue > 1499)
    {
      if (rawValue == 1500)
      {
        *unint64_t v1 = 18;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
      if (rawValue == 1501)
      {
        *unint64_t v1 = 19;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
    else
    {
      if (rawValue == 1302)
      {
        *unint64_t v1 = 16;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
      if (rawValue == 1400)
      {
        *unint64_t v1 = 17;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
LABEL_32:
    *unint64_t v1 = 20;
    return (WidgetKit::CKCErrorCode_optional)rawValue;
  }
  char v2 = 0;
  char v3 = 2;
  switch(rawValue)
  {
    case 1001:
      goto LABEL_4;
    case 1002:
      char v2 = 1;
LABEL_4:
      char v3 = v2;
      goto LABEL_5;
    case 1050:
LABEL_5:
      *unint64_t v1 = v3;
      break;
    case 1051:
      *unint64_t v1 = 3;
      break;
    case 1052:
      *unint64_t v1 = 4;
      break;
    case 1100:
      *unint64_t v1 = 5;
      break;
    case 1101:
      *unint64_t v1 = 6;
      break;
    case 1102:
      *unint64_t v1 = 7;
      break;
    case 1103:
      *unint64_t v1 = 8;
      break;
    case 1104:
      *unint64_t v1 = 9;
      break;
    case 1105:
      *unint64_t v1 = 10;
      break;
    case 1106:
      *unint64_t v1 = 11;
      break;
    case 1107:
      *unint64_t v1 = 12;
      break;
    default:
      goto LABEL_32;
  }
  return (WidgetKit::CKCErrorCode_optional)rawValue;
}

uint64_t CKCErrorCode.rawValue.getter()
{
  return qword_191D00520[*v0];
}

BOOL sub_191BDA594(char *a1, char *a2)
{
  return qword_191D00520[*a1] == qword_191D00520[*a2];
}

uint64_t sub_191BDA5B8()
{
  return sub_191CF64C8();
}

uint64_t sub_191BDA608()
{
  return sub_191CF6478();
}

uint64_t sub_191BDA640()
{
  return sub_191CF64C8();
}

WidgetKit::CKCErrorCode_optional sub_191BDA68C(Swift::Int *a1)
{
  return CKCErrorCode.init(rawValue:)(*a1);
}

void sub_191BDA694(void *a1@<X8>)
{
  *a1 = qword_191D00520[*v1];
}

id sub_191BDA6B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  sub_191B2D280(MEMORY[0x1E4FBC860]);
  if (a6)
  {
    uint64_t v10 = sub_191CF5338();
    uint64_t v12 = v11;
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v30 = a5;
    *((void *)&v30 + 1) = a6;
    sub_191B4F9C0(&v30, v27);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_191B4AFF8(v27, v10, v12, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a4)
  {
    uint64_t v14 = sub_191CF5338();
    uint64_t v16 = v15;
    swift_getErrorValue();
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    uint64_t v31 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_1, v17, v18);
    sub_191B4F9C0(&v30, v27);
    id v20 = a4;
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_191B4AFF8(v27, v14, v16, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v22 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v23 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_191CF5238();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, a3, v24);

  return v25;
}

unint64_t sub_191BDA8E4()
{
  unint64_t result = qword_1E92E4170[0];
  if (!qword_1E92E4170[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E4170);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CKCErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CKCErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BDAA94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CKCErrorCode()
{
  return &type metadata for CKCErrorCode;
}

uint64_t sub_191BDAACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_191BDAAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_191BDAAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_191BDAB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 48))();
}

uint64_t sub_191BDAB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_191BDAB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B63978;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191BDAC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B649B0;
  return v11(a1, a2, a3, a4);
}

void sub_191BDAD50()
{
}

void sub_191BDADAC()
{
}

uint64_t sub_191BDAE08()
{
  return sub_191CF6568();
}

uint64_t EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.getter()
{
  return sub_191BDAE70((void (*)(void))sub_191B4F520);
}

uint64_t EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.setter(uint64_t a1)
{
  return sub_191BDAED8(a1, (void (*)(void))sub_191B4F520);
}

uint64_t EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  return sub_191BDAE70((void (*)(void))sub_191B4F574);
}

uint64_t sub_191BDAE70(void (*a1)(void))
{
  a1();
  sub_191CF4068();
  return v2;
}

uint64_t EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.setter(uint64_t a1)
{
  return sub_191BDAED8(a1, (void (*)(void))sub_191B4F574);
}

uint64_t sub_191BDAED8(uint64_t a1, void (*a2)(void))
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F520();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BDAF94;
}

uint64_t sub_191BDAF94(uint64_t a1)
{
  return sub_191BDB020(a1);
}

uint64_t (*EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F574();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BDB014;
}

uint64_t sub_191BDB014(uint64_t a1)
{
  return sub_191BDB020(a1);
}

uint64_t sub_191BDB020(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s46UserWantsLiveActivityDataWhenPasscodeLockedKeyVMa()
{
  return &_s46UserWantsLiveActivityDataWhenPasscodeLockedKeyVN;
}

ValueMetadata *_s40UserWantsWidgetDataWhenPasscodeLockedKeyVMa()
{
  return &_s40UserWantsWidgetDataWhenPasscodeLockedKeyVN;
}

uint64_t sub_191BDB080()
{
  uint64_t v0 = sub_191CF4348();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v13 - v5;
  sub_191CF4B58();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v7 == *MEMORY[0x1E4F3D3D0])
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    (*(void (**)(char *, uint64_t))(v1 + 96))(v4, v0);
    return *(void *)v4;
  }
  if (v7 == *MEMORY[0x1E4F3D3D8])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v4, v0);
    if ((v4[40] & 1) == 0)
    {
      uint64_t v9 = (void *)*((void *)v4 + 4);
      if (v9)
      {
        id v10 = (id)*((void *)v4 + 4);
      }
      else
      {
        id v10 = objc_msgSend(self, sel_mainBundle);
        uint64_t v9 = 0;
      }
      id v11 = v9;
      uint64_t v8 = sub_191CF2F48();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      return v8;
    }
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000014;
    unint64_t v15 = 0x8000000191D0FB30;
    sub_191CF53B8();
    sub_191CF53B8();
  }
  else
  {
    if (v7 != *MEMORY[0x1E4F3D3C8]) {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000022;
    unint64_t v15 = 0x8000000191D0FAD0;
    sub_191CF53B8();
  }
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t sub_191BDB448()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CB50 = result;
  return result;
}

uint64_t sub_191BDB470()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A8C0);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CB38 = v0;
  unk_1EB44CB40 = 0xD000000000000026;
  qword_1EB44CB48 = 0x8000000191D0DCB0;
  return result;
}

uint64_t sub_191BDB4E8(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44AA90);
}

uint64_t sub_191BDB50C()
{
  if (qword_1EB44AA88 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CB38;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191BDB58C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CAF0 = result;
  return result;
}

uint64_t sub_191BDB5B4()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A8A8);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CAD8 = v0;
  unk_1EB44CAE0 = 0xD000000000000019;
  qword_1EB44CAE8 = 0x8000000191D0DCE0;
  return result;
}

uint64_t sub_191BDB62C(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44AA40);
}

uint64_t sub_191BDB650()
{
  if (qword_1EB44AA38 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CAD8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191BDB6D0()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CB10 = result;
  return result;
}

uint64_t sub_191BDB6F8()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A8B0);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CAF8 = v0;
  unk_1EB44CB00 = 0xD000000000000019;
  qword_1EB44CB08 = 0x8000000191D0DD00;
  return result;
}

uint64_t sub_191BDB770(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44AA50);
}

uint64_t sub_191BDB794()
{
  if (qword_1EB44AA48 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CAF8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191BDB814()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CB30 = result;
  return result;
}

uint64_t sub_191BDB83C()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A8B8);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CB18 = v0;
  unk_1EB44CB20 = 0xD00000000000001FLL;
  qword_1EB44CB28 = 0x8000000191D0DD20;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityDifferentiateWithoutColorKey()
{
  return &type metadata for AccessibilityDifferentiateWithoutColorKey;
}

ValueMetadata *type metadata accessor for AccessibilityInvertColorsKey()
{
  return &type metadata for AccessibilityInvertColorsKey;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionKey()
{
  return &type metadata for AccessibilityReduceMotionKey;
}

ValueMetadata *type metadata accessor for AccessibilityReduceTransparencyKey()
{
  return &type metadata for AccessibilityReduceTransparencyKey;
}

uint64_t sub_191BDB8F4(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44AA80);
}

uint64_t sub_191BDB918(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BDB968()
{
  if (qword_1EB44AA78 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CB18;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

BOOL static JindoDisplayMode.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t JindoDisplayMode.rawValue.getter(uint64_t result)
{
  return result;
}

WidgetKit::JindoDisplayMode_optional __swiftcall JindoDisplayMode.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    LOBYTE(rawValue) = 3;
  }
  return (WidgetKit::JindoDisplayMode_optional)rawValue;
}

void *static JindoDisplayMode.allCases.getter()
{
  return &unk_1EE29F040;
}

uint64_t *sub_191BDBA3C@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_191BDBA58()
{
  unint64_t result = qword_1E92E4188;
  if (!qword_1E92E4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4188);
  }
  return result;
}

unint64_t sub_191BDBAB0()
{
  unint64_t result = qword_1E92E4190;
  if (!qword_1E92E4190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4190);
  }
  return result;
}

void sub_191BDBB0C(void *a1@<X8>)
{
  *a1 = &unk_1EE29F0F8;
}

uint64_t sub_191BDBB1C()
{
  return sub_191CF5508();
}

uint64_t sub_191BDBB7C()
{
  return sub_191CF54E8();
}

BOOL sub_191BDBBCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_191BDBBE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_191BDBBF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_191BDBC08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unsigned char *storeEnumTagSinglePayload for JindoDisplayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BDBCE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoDisplayMode()
{
  return &type metadata for JindoDisplayMode;
}

unint64_t sub_191BDBD20()
{
  unint64_t result = qword_1E92E41A0;
  if (!qword_1E92E41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E41A0);
  }
  return result;
}

uint64_t AccessoryWidgetBackground.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = KeyPath;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

double AccessoryWidgetBackground.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  sub_191B1BB50(v3, v4);
  sub_191B1BB50(v5, v6);
  sub_191B1BB50(v5, v6);
  sub_191BDDAF0(v5, v6, (void (*)(uint64_t, void))sub_191BDE084, 0x6146746567646957, 0xEC000000796C696DLL, (void (*)(void, void))sub_191BDE088, v12);
  sub_191B172D4(v5, v6);
  sub_191B172D4(v3, v4);
  sub_191B172D4(v5, v6);
  switch(LOBYTE(v12[0]))
  {
    case 1:
      if (!CHSWidgetFamilyIsAccessory()) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 2:
      if (!CHSWidgetFamilyIsAccessory()) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 3:
      if (!CHSWidgetFamilyIsAccessory()) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191BDBFE4);
    case 5:
      if (!CHSWidgetFamilyIsAccessory()) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 7:
      if (!CHSWidgetFamilyIsAccessory()) {
        goto LABEL_13;
      }
      goto LABEL_11;
    default:
      if (CHSWidgetFamilyIsAccessory())
      {
LABEL_11:
        swift_getKeyPath();
        swift_getKeyPath();
        swift_getKeyPath();
      }
LABEL_13:
      sub_191BDCCA0();
      sub_191CF44D8();
      double result = *(double *)v12;
      long long v8 = v12[1];
      uint64_t v9 = v13;
      char v10 = v14;
      char v11 = v15;
      *(_OWORD *)a1 = v12[0];
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = v9;
      *(unsigned char *)(a1 + 40) = v10;
      *(unsigned char *)(a1 + 41) = v11;
      return result;
  }
}

uint64_t sub_191BDC008@<X0>(unsigned char *a1@<X8>)
{
  sub_191BDE030();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BDC058()
{
  return sub_191CF4078();
}

id sub_191BDC0A4(void *a1, char a2)
{
  id v17 = a1;
  uint64_t v3 = sub_191CF4058();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v15 = v17;
    return v15;
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = sub_191CF5938();
    long long v8 = sub_191CF4938();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)char v10 = 136315138;
      sub_191BDDF88();
      uint64_t v12 = sub_191CF6568();
      uint64_t v18 = sub_191C5C36C(v12, v13, &v19);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v11, -1, -1);
      MEMORY[0x192FE5F00](v10, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191B1BBA0(v17, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)v19;
  }
}

double sub_191BDC2E4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_191CF5938();
  os_log_type_t v9 = sub_191CF4938();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    double v15 = *(double *)&v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_191C5C36C(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v12, -1, -1);
    MEMORY[0x192FE5F00](v11, -1, -1);
  }

  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  swift_getAtKeyPath();
  sub_191B172D4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_191BDC4F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B01614(v2, (uint64_t)v10, (uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  }
  os_log_type_t v12 = sub_191CF5938();
  unint64_t v13 = sub_191CF4938();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)double v15 = 136315138;
    void v18[2] = sub_191C5C36C(0xD000000000000011, 0x8000000191D0FB70, &v19);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v17, -1, -1);
    MEMORY[0x192FE5F00](v15, -1, -1);
  }

  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191BDC788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191CF4058();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v1;
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    *(void *)a1 = v8;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  }
  else
  {
    sub_191BBFF5C(v1, (void (*)(void, void, void, void, void, void, void, void))sub_191BBE824);
    os_log_type_t v9 = sub_191CF5938();
    os_log_type_t v10 = sub_191CF4938();
    os_log_type_t v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v15[1] = v8;
      uint64_t v14 = v13;
      uint64_t v16 = v13;
      *(_DWORD *)os_log_type_t v12 = 136315138;
      v15[0] = v12 + 4;
      void v15[2] = sub_191C5C36C(0xD000000000000014, 0x8000000191D0FC30, &v16);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v14, -1, -1);
      MEMORY[0x192FE5F00](v12, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191BBFF5C(v1, (void (*)(void, void, void, void, void, void, void, void))sub_191BBE834);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_191BDC9E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_191BDDAF0(a1, a2, (void (*)(uint64_t, void))sub_191B1BB50, 0xD000000000000015, 0x8000000191D0FBB0, (void (*)(void, void))sub_191B172D4, a3);
}

uint64_t sub_191BDCA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  os_log_type_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *(unsigned char *)a4 = a1;
    *(void *)(a4 + 8) = a2;
  }
  else
  {
    sub_191BD7EB4(a1, a2, 0);
    os_log_type_t v13 = sub_191CF5938();
    uint64_t v14 = sub_191CF4938();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v21 = a2;
      uint64_t v18 = v17;
      uint64_t v23 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      id v20 = v16 + 4;
      uint64_t v22 = sub_191C5C36C(0xD000000000000012, 0x8000000191D0FB90, &v23);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v18;
      a2 = v21;
      MEMORY[0x192FE5F00](v19, -1, -1);
      MEMORY[0x192FE5F00](v16, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191B172E0(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

uint64_t sub_191BDCC58@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_191BDDAF0(a1, a2, (void (*)(uint64_t, void))sub_191BDE084, 0x6146746567646957, 0xEC000000796C696DLL, (void (*)(void, void))sub_191BDE088, a3);
}

unint64_t sub_191BDCCA0()
{
  unint64_t result = qword_1EB449330;
  if (!qword_1EB449330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449330);
  }
  return result;
}

uint64_t sub_191BDCCFC@<X0>(unsigned char *a1@<X8>)
{
  sub_191BDE030();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BDCD4C()
{
  return sub_191CF4078();
}

uint64_t sub_191BDCD98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AccessoryWidgetBackground(uint64_t a1)
{
  sub_191B172D4(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_191B172D4(v2, v3);
}

uint64_t initializeWithCopy for AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v6, v2);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v8, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v2;
  sub_191B172D4(v9, v10);
  return a1;
}

uint64_t assignWithTake for AccessoryWidgetBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B172D4(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for AccessoryWidgetBackground()
{
  return &type metadata for AccessoryWidgetBackground;
}

unint64_t sub_191BDCF54()
{
  unint64_t result = qword_1E92E2968;
  if (!qword_1E92E2968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E2970);
    sub_191BDCCA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2968);
  }
  return result;
}

uint64_t sub_191BDCFD0(void *a1, char a2)
{
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v15 = a1;
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_191CF5938();
    uint64_t v9 = sub_191CF4938();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      v17[1] = v11 + 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0A68);
      uint64_t v13 = sub_191CF6568();
      v17[2] = sub_191C5C36C(v13, v14, &v18);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v12, -1, -1);
      MEMORY[0x192FE5F00](v11, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191B1BBA0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v18;
  }
  return (uint64_t)a1;
}

uint64_t sub_191BDD1F0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_191CF5938();
  uint64_t v9 = sub_191CF4938();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_191C5C36C(1819242306, 0xE400000000000000, &v15);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v12, -1, -1);
    MEMORY[0x192FE5F00](v11, -1, -1);
  }

  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  swift_getAtKeyPath();
  sub_191B172D4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_191BDD3F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B01614(v2, (uint64_t)v10, (uint64_t *)&unk_1EB448A38);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_191BDDFC8((uint64_t)v10, a1);
  }
  os_log_type_t v12 = sub_191CF5938();
  uint64_t v13 = sub_191CF4938();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    void v18[2] = sub_191C5C36C(0x6C616E6F6974704FLL, 0xEE003E657461443CLL, &v19);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v17, -1, -1);
    MEMORY[0x192FE5F00](v15, -1, -1);
  }

  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191BDD684(uint64_t a1, char a2)
{
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_191CF5938();
    uint64_t v9 = sub_191CF4938();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_191C5C36C(0xD00000000000001ELL, 0x8000000191D0FBF0, &v15);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v12, -1, -1);
      MEMORY[0x192FE5F00](v11, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191B172D4(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_191BDD890@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_191CF4058();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x1F4188790](v6);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_191B1BB50(a1, 0);
    os_log_type_t v11 = sub_191CF5938();
    uint64_t v12 = sub_191CF4938();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = a3;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[2] = sub_191C5C36C(0xD000000000000013, 0x8000000191D0FC10, &v18);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v16, -1, -1);
      MEMORY[0x192FE5F00](v14, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    sub_191B172D4(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_191BDDAAC@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_191BDDAF0(a1, a2, (void (*)(uint64_t, void))sub_191B1BB50, 0xD000000000000014, 0x8000000191D0FBD0, (void (*)(void, void))sub_191BDE088, a3);
}

uint64_t sub_191BDDAF0@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(void, void)@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v14 = sub_191CF4058();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1;
  }
  else
  {
    uint64_t v28 = a4;
    a3(a1, 0);
    os_log_type_t v19 = sub_191CF5938();
    id v20 = sub_191CF4938();
    if (os_log_type_enabled(v20, v19))
    {
      v26[0] = a5;
      uint64_t v21 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v24 = v23;
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v29 = sub_191C5C36C(v28, v26[0], &v30);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a6 = v27;
      MEMORY[0x192FE5F00](v25, -1, -1);
      MEMORY[0x192FE5F00](v22, -1, -1);
    }

    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

double sub_191BDDD24()
{
  uint64_t v1 = sub_191CF4058();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_191CF5938();
  uint64_t v7 = sub_191CF4938();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    double v12 = *(double *)&v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_191C5C36C(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v10, -1, -1);
    MEMORY[0x192FE5F00](v9, -1, -1);
  }

  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  swift_getAtKeyPath();
  sub_191BDDF44((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_191BDDF44(uint64_t a1)
{
  return a1;
}

uint64_t sub_191BDDF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_191BDDF88()
{
  unint64_t result = qword_1EB44C010;
  if (!qword_1EB44C010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44C010);
  }
  return result;
}

uint64_t sub_191BDDFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191BDE030()
{
  unint64_t result = qword_1E92E0FF0;
  if (!qword_1E92E0FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0FF0);
  }
  return result;
}

unint64_t sub_191BDE090()
{
  unint64_t result = qword_1EB449F00;
  if (!qword_1EB449F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F00);
  }
  return result;
}

double static EnvironmentValues.WidgetContentMarginsKey.defaultValue.getter()
{
  return 0.0;
}

double sub_191BDE0F8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_191BDE104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191BDE2AC();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

double _s7SwiftUI17EnvironmentValuesV9WidgetKitE20widgetContentMarginsAA10EdgeInsetsVvg_0()
{
  sub_191BDE090();
  sub_191CF4068();
  return v1;
}

uint64_t sub_191BDE1AC()
{
  sub_191BDE300();
  sub_191CF4068();
  return v1;
}

uint64_t WidgetConfiguration._contentMarginsDisabled()()
{
  return sub_191CDB0C8((uint64_t)sub_191BDE20C, 0);
}

uint64_t sub_191BDE20C(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 84)) = 1;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentValues.WidgetContentMarginsKey()
{
  return &type metadata for EnvironmentValues.WidgetContentMarginsKey;
}

uint64_t sub_191BDE250()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_191BDE2AC()
{
  unint64_t result = qword_1E92E41A8;
  if (!qword_1E92E41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E41A8);
  }
  return result;
}

unint64_t sub_191BDE300()
{
  unint64_t result = qword_1EB449B50;
  if (!qword_1EB449B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B50);
  }
  return result;
}

ValueMetadata *_s36ContentMarginsDisabledEnvironmentKeyVMa()
{
  return &_s36ContentMarginsDisabledEnvironmentKeyVN;
}

uint64_t destroy for WidgetContentMarginsModifier(uint64_t a1)
{
  sub_191B1BBA0(*(id *)a1, *(unsigned char *)(a1 + 8));
  sub_191B1BBA0(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);

  return sub_191B172D4(v2, v3);
}

uint64_t initializeWithCopy for WidgetContentMarginsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  os_log_type_t v6 = *(void **)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 24);
  sub_191B1BB44(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_191B1BB50(v8, v2);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetContentMarginsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  os_log_type_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  uint64_t v8 = *(void **)(v2 + 16);
  char v9 = *(unsigned char *)(v2 + 24);
  sub_191B1BB44(v8, v9);
  uint64_t v10 = *(void **)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_191B1BBA0(v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_191B1BB50(v12, v2);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 40) = v2;
  sub_191B172D4(v13, v14);
  return a1;
}

uint64_t assignWithTake for WidgetContentMarginsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  os_log_type_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  char v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B1BBA0(v9, v10);
  char v11 = *((unsigned char *)a2 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = v11;
  sub_191B172D4(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetContentMarginsModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetContentMarginsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContentMarginsModifier()
{
  return &type metadata for WidgetContentMarginsModifier;
}

uint64_t sub_191BDE604()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BDE620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v64 = a1;
  uint64_t v70 = a2;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449EA8);
  MEMORY[0x1F4188790](v63);
  uint64_t v66 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449EE8);
  MEMORY[0x1F4188790](v65);
  uint64_t v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B48);
  MEMORY[0x1F4188790](v67);
  uint64_t v68 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = (int *)type metadata accessor for ContentMarginsContext();
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v62 = (uint64_t)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v72 = (uint64_t)&v59 - v14;
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v59 - v16;
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v18 = qword_1EB44CCA8;
    uint64_t v19 = *(void *)xmmword_1EB44CC98;
    uint64_t v73 = xmmword_1EB44CC98;
    id v20 = *(void **)v3;
    char v21 = *(unsigned char *)(v3 + 8);
    swift_retain();
    sub_191B1BB44(v20, v21);
    uint64_t v22 = (void *)sub_191BDCFD0(v20, v21);
    sub_191B1BBA0(v20, v21);
    (*(void (**)(void *, uint64_t))(*(void *)(v18 + 8) + 8))(v22, v19);
    swift_release();

    uint64_t v71 = v17;
    sub_191B01614((uint64_t)v17, v72, (uint64_t *)&unk_1EB44BB00);
    sub_191B1BB44(v20, v21);
    uint64_t v61 = sub_191BDCFD0(v20, v21);
    sub_191B1BBA0(v20, v21);
    uint64_t v23 = *(void **)(v3 + 16);
    char v24 = *(unsigned char *)(v3 + 24);
    sub_191B1BB44(v23, v24);
    id v60 = sub_191BDC0A4(v23, v24);
    sub_191B1BBA0(v23, v24);
    uint64_t v25 = *(void *)(v3 + 32);
    char v26 = *(unsigned char *)(v3 + 40);
    sub_191B1BB50(v25, v26);
    char v27 = sub_191BDD1F0(v25, v26);
    sub_191B172D4(v25, v26);
    uint64_t v28 = type metadata accessor for WidgetDescriptor(0);
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v9, 1, 1, v28);
    uint64_t v30 = v7[5];
    *(void *)&v9[v30] = 0;
    uint64_t v31 = v7[8];
    uint64_t v76 = &type metadata for FeatureFlags.Widgets;
    unint64_t v32 = sub_191BDED7C();
    unint64_t v77 = v32;
    LOBYTE(v73) = 5;
    LOBYTE(v19) = sub_191CF3438();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
    v9[v31] = v19 & 1;
    uint64_t v33 = v7[9];
    uint64_t v76 = &type metadata for FeatureFlags.Widgets;
    unint64_t v77 = v32;
    LOBYTE(v73) = 12;
    LOBYTE(v32) = sub_191CF3438();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
    v9[v33] = v32 & 1;
    sub_191BDEDD0(v72, (uint64_t)v9);

    *(void *)&v9[v30] = v61;
    *(void *)&v9[v7[6]] = v60;
    v9[v7[7]] = v27 & 1;
    sub_191C378A8((uint64_t)v9, (double *)&v73);
    uint64_t v34 = v73;
    uint64_t v35 = v74;
    if (v77)
    {
      uint64_t v40 = v75;
      uint64_t v41 = v76;
      uint64_t v36 = v73;
      uint64_t v37 = v74;
      uint64_t v38 = v75;
      char v39 = v76;
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      char v39 = 0;
      uint64_t v40 = v75;
      uint64_t v41 = v76;
    }
    uint64_t v43 = (uint64_t)v69;
    uint64_t v42 = v70;
    uint64_t v45 = v65;
    uint64_t v44 = (uint64_t)v66;
    uint64_t v46 = v64;
    uint64_t v47 = v63;
    char v48 = sub_191CF4948();
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v44, v46, v49);
    uint64_t v50 = v44 + *(int *)(v47 + 36);
    *(unsigned char *)uint64_t v50 = v48;
    *(void *)(v50 + 8) = v36;
    *(void *)(v50 + 16) = v37;
    *(void *)(v50 + 24) = v38;
    *(void *)(v50 + 32) = v39;
    *(unsigned char *)(v50 + 40) = 0;
    uint64_t KeyPath = swift_getKeyPath();
    sub_191B01614(v44, v43, &qword_1EB449EA8);
    uint64_t v52 = (uint64_t *)(v43 + *(int *)(v45 + 36));
    uint64_t *v52 = KeyPath;
    v52[1] = v34;
    v52[2] = v35;
    v52[3] = v40;
    v52[4] = (uint64_t)v41;
    sub_191B01770(v44, &qword_1EB449EA8);
    uint64_t v53 = swift_getKeyPath();
    uint64_t v54 = v62;
    sub_191B01614((uint64_t)v71, v62, (uint64_t *)&unk_1EB44BB00);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v54, 1, v28) == 1)
    {
      sub_191B01770(v54, (uint64_t *)&unk_1EB44BB00);
      char v55 = 0;
    }
    else
    {
      char v55 = *(unsigned char *)(v54 + *(int *)(v28 + 84));
      sub_191BDEEB0(v54, type metadata accessor for WidgetDescriptor);
    }
    uint64_t v57 = v67;
    uint64_t v56 = v68;
    sub_191B01614(v43, v68, &qword_1EB449EE8);
    uint64_t v58 = v56 + *(int *)(v57 + 36);
    *(void *)uint64_t v58 = v53;
    *(unsigned char *)(v58 + 8) = v55;
    sub_191B01770(v43, &qword_1EB449EE8);
    sub_191BDEEB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191B01770((uint64_t)v71, (uint64_t *)&unk_1EB44BB00);
    return sub_191BDEE48(v56, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_191BDECDC@<D0>(_OWORD *a1@<X8>)
{
  sub_191BDE090();
  sub_191CF4068();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_191BDED2C()
{
  return sub_191CF4078();
}

unint64_t sub_191BDED7C()
{
  unint64_t result = qword_1EB449FB0;
  if (!qword_1EB449FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449FB0);
  }
  return result;
}

uint64_t sub_191BDEDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BDEE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BDEEB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_191BDEF14()
{
  unint64_t result = qword_1EB449B40;
  if (!qword_1EB449B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449B48);
    sub_191BDEFB4();
    sub_191B00398((unint64_t *)&qword_1EB449E20, &qword_1EB449E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B40);
  }
  return result;
}

unint64_t sub_191BDEFB4()
{
  unint64_t result = qword_1EB449EE0;
  if (!qword_1EB449EE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449EE8);
    sub_191BDF054();
    sub_191B00398(&qword_1EB449F58, &qword_1EB449F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449EE0);
  }
  return result;
}

unint64_t sub_191BDF054()
{
  unint64_t result = qword_1EB449EA0;
  if (!qword_1EB449EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449EA8);
    sub_191B00398(&qword_1EB449F40, &qword_1EB449F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449EA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OptionalMargins(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OptionalMargins(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OptionalMargins()
{
  return &type metadata for OptionalMargins;
}

uint64_t sub_191BDF160@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  unsigned __int8 v4 = sub_191CF4958();
  sub_191CF4988();
  int v5 = sub_191CF4988();
  BOOL v6 = v5 != v4;
  if (v5 == v4) {
    double v7 = a2;
  }
  else {
    double v7 = 0.0;
  }
  unsigned __int8 v8 = sub_191CF4978();
  sub_191CF4988();
  int v9 = sub_191CF4988();
  BOOL v10 = v9 != v8;
  if (v9 == v8) {
    double v11 = a2;
  }
  else {
    double v11 = 0.0;
  }
  unsigned __int8 v12 = sub_191CF4968();
  sub_191CF4988();
  int v13 = sub_191CF4988();
  BOOL v14 = v13 != v12;
  if (v13 == v12) {
    double v15 = a2;
  }
  else {
    double v15 = 0.0;
  }
  unsigned __int8 v16 = sub_191CF4998();
  sub_191CF4988();
  uint64_t result = sub_191CF4988();
  *(double *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v6;
  *(double *)(a1 + 16) = v11;
  if (result == v16) {
    double v18 = a2;
  }
  else {
    double v18 = 0.0;
  }
  *(unsigned char *)(a1 + 24) = v10;
  *(double *)(a1 + 32) = v15;
  *(unsigned char *)(a1 + 40) = v14;
  *(double *)(a1 + 48) = v18;
  *(unsigned char *)(a1 + 56) = result != v16;
  return result;
}

uint64_t ActivityPreviewSource.makeContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a1;
  v5[18] = a3;
  uint64_t v7 = sub_191CF5BC8();
  v5[21] = v7;
  v5[22] = *(void *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = *(void *)(a3 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  sub_191CF5698();
  v5[27] = sub_191CF5688();
  uint64_t v9 = sub_191CF5648();
  v5[28] = v9;
  v5[29] = v8;
  return MEMORY[0x1F4188298](sub_191BDF3C4, v9, v8);
}

uint64_t sub_191BDF3C4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = (void *)(*(void *)(v0 + 160) + 24);
  sub_191AFEE28((uint64_t)v2, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E41B8);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 144);
    v4(v6, 0, 1, v9);
    BOOL v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    *(void *)(v0 + 240) = v10;
    *(void *)(v0 + 248) = (v7 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v10(v5, v6, v9);
    char v24 = (uint64_t (*)(void))(*(void *)(v8 + 64) + **(int **)(v8 + 64));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v11;
    void *v11 = v0;
    v11[1] = sub_191BDF6DC;
    return v24();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v17 = *(void *)(v0 + 144);
    v4(v13, 1, 1, v17);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(void *)(v0 + 80) = swift_getMetatypeMetadata();
    *(void *)(v0 + 56) = v17;
    uint64_t v18 = *(void *)(v16 + 48);
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(v2, v18);
    *(void *)(v0 + 112) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 88));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
    sub_191BC2BFC();
    swift_allocError();
    uint64_t v22 = v21;
    *(void *)uint64_t v21 = 0xD000000000000017;
    *(void *)(v21 + 8) = 0x8000000191D0FC50;
    *(void *)(v21 + 16) = 0x7475626972747461;
    *(void *)(v21 + 24) = 0xEA00000000007365;
    sub_191B4F9C0((_OWORD *)(v0 + 56), (_OWORD *)(v21 + 32));
    sub_191BC2C50(v0 + 88, v22 + 64);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_191BDF6DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  return MEMORY[0x1F4188298](sub_191BDF804, v4, v3);
}

uint64_t sub_191BDF804()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  swift_release();
  v0[15] = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E41C0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
  unint64_t v8 = sub_191BDFE74();
  uint64_t v9 = sub_191B55D64((void (*)(char *, char *))sub_191BDFE54, v4, v5, AssociatedTypeWitness, v7, v8, MEMORY[0x1E4FBC0F0], (uint64_t)(v0 + 16));
  BOOL v10 = (void (*)(uint64_t, uint64_t, uint64_t))v0[30];
  uint64_t v12 = v0[25];
  uint64_t v11 = v0[26];
  uint64_t v13 = v0[18];
  uint64_t v14 = v0[17];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v10(v12, v11, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v14, v12, v13);
  *(void *)(v14 + *(int *)(type metadata accessor for ActivityPreviewSource.Content() + 36)) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t ActivityPreviewSource.Content.attributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ActivityPreviewSource.Content.attributes.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ActivityPreviewSource.Content.attributes.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPreviewSource.Content.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActivityPreviewSource.Content.states.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*ActivityPreviewSource.Content.states.modify())()
{
  return nullsub_1;
}

uint64_t sub_191BDFB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for ActivityPreviewSource.Content();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t ActivityPreviewSource.makeWidget.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

void ActivityPreviewSource.viewKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_191BDFBE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_191CF5BC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = &v18[-v9];
  sub_191B4F964(a1, (uint64_t)&v19);
  char v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    v12(v10, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v10, AssociatedTypeWitness);
  }
  else
  {
    v12(v10, 1, 1, AssociatedTypeWitness);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v19 = AssociatedTypeWitness;
    sub_191B4F964(a1, (uint64_t)v18);
    sub_191BC2BFC();
    uint64_t v15 = swift_allocError();
    uint64_t v17 = v16;
    *(void *)uint64_t v16 = 0xD000000000000017;
    *(void *)(v16 + 8) = 0x8000000191D0FC50;
    strcpy((char *)(v16 + 16), "content state");
    *(_WORD *)(v16 + 30) = -4864;
    sub_191B4F9C0(&v19, (_OWORD *)(v16 + 32));
    sub_191BC2C50((uint64_t)v18, v17 + 64);
    uint64_t result = swift_willThrow();
    *a2 = v15;
  }
  return result;
}

uint64_t sub_191BDFE54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191BDFBE0(a1, a2, a3);
}

unint64_t sub_191BDFE74()
{
  unint64_t result = qword_1E92E41C8[0];
  if (!qword_1E92E41C8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E41C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E41C8);
  }
  return result;
}

uint64_t ActivityPreviewSource.contentCategory.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0FC70);
}

uint64_t static PreviewSourceContentCategory.activityWidget.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0FC70);
}

uint64_t ActivityPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F252F0];
  uint64_t v3 = sub_191CF36C8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t ActivityPreviewSource.supportsOnDevicePreviews.getter()
{
  return 0;
}

uint64_t sub_191BDFF84()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0FC70);
}

uint64_t Widget.buildActivityHost()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ResolvedWidgetHost();
  uint64_t result = sub_191C5D238(v1);
  a1[3] = v3;
  a1[4] = (uint64_t)&off_1EE29ADD0;
  *a1 = result;
  return result;
}

uint64_t sub_191BDFFF8()
{
  uint64_t v0 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191C56B9C();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v7 = *(void *)(v1 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_191BAFC84(v6, (uint64_t)v3);
      uint64_t v8 = *(void *)&v3[*(int *)(v0 + 32)];
      swift_bridgeObjectRetain();
      sub_191B5D280((uint64_t)v3);
      sub_191BCCB84(v8);
      v6 += v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    return v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_191BE0144()
{
  return sub_191BDFFF8();
}

uint64_t destroy for ActivityPreviewSource(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);

  return swift_release();
}

uint64_t initializeWithCopy for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 24, v5, v7);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewSource(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewSource()
{
  return &type metadata for ActivityPreviewSource;
}

uint64_t sub_191BE03E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191BE0480(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_191BE057C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BE05EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191BE066C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191BE06F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_191BE0774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191BE07F8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191BE0944);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_191BE0958(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x191BE0B34);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ActivityPreviewSource.Content()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of ActivityWidgetHost.supportedActivityFamilies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191BE0B88()
{
  return 3;
}

uint64_t ControlPicker.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v59 = a8;
  uint64_t v60 = a7;
  uint64_t v62 = a3;
  uint64_t v63 = a5;
  uint64_t v61 = a4;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v56 = a9;
  uint64_t v52 = a22;
  uint64_t v53 = a23;
  uint64_t v50 = a19;
  uint64_t v51 = a20;
  uint64_t v48 = a16;
  uint64_t v49 = a18;
  uint64_t v46 = a14;
  uint64_t v47 = a15;
  uint64_t v44 = a12;
  uint64_t v45 = a13;
  uint64_t v54 = a10;
  uint64_t v55 = a11;
  uint64_t v25 = *(void *)(a21 - 8);
  uint64_t v43 = a24;
  MEMORY[0x1F4188790](a1);
  char v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for PickerStateProviderBox();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_191CF3008();
  MEMORY[0x1F4188790](v31 - 8);
  char v32 = *a6;
  uint64_t v33 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v42 = sub_191CF2C68();
  uint64_t v41 = v34;
  if (!v63)
  {
    sub_191CF2C78();
    uint64_t v61 = (void *)sub_191CF5358();
    uint64_t v63 = v35;
  }
  v64[0] = v32;
  uint64_t v36 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v60, a21);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v27, a21);
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v38 = (void *)sub_191CF2C58();
  sub_191BE0FB4(v57, v58, v62, v42, v41, v61, v63, v64, v56, (uint64_t)v30, 3, v38, v59, v54, v55, v44, v45, v46, v47,
    v48,
    a17,
    v49,
    v50,
    v51,
    v28,
    v33,
    v52,
    v53,
    v43,
    WitnessTable);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v36, a21);
}

uint64_t type metadata accessor for PickerStateProviderBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191BE0F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_191BE0F7C()
{
  return 3;
}

uint64_t sub_191BE0FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  uint64_t v94 = a6;
  uint64_t v97 = a5;
  uint64_t v96 = a4;
  uint64_t v100 = a30;
  uint64_t v110 = a29;
  uint64_t v109 = a28;
  uint64_t v115 = a27;
  uint64_t v116 = a24;
  uint64_t v114 = a22;
  uint64_t v103 = a20;
  uint64_t v102 = a19;
  uint64_t v120 = a18;
  uint64_t v99 = a17;
  uint64_t v119 = a16;
  uint64_t v98 = a15;
  uint64_t v118 = a14;
  uint64_t v95 = a13;
  id v101 = a12;
  uint64_t v117 = a25;
  uint64_t v112 = *(void *)(a25 - 8);
  uint64_t v104 = a11;
  uint64_t v111 = a10;
  MEMORY[0x1F4188790](a1);
  uint64_t v108 = (char *)&v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_191CF3008();
  MEMORY[0x1F4188790](v37 - 8);
  char v38 = *a8;
  *(unsigned char *)(a9 + 192) = 0;
  uint64_t v105 = a1;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  uint64_t v113 = a2;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = a3;
  swift_bridgeObjectRetain_n();
  if (a7)
  {
    uint64_t v39 = (uint64_t)v94;
  }
  else
  {
    sub_191CF2C78();
    uint64_t v39 = sub_191CF5358();
    a7 = v40;
  }
  *(void *)(a9 + 152) = v39;
  *(void *)(a9 + 160) = a7;
  *(unsigned char *)(a9 + 168) = v38;
  uint64_t v41 = v97;
  *(void *)(a9 + 176) = v96;
  *(void *)(a9 + 184) = v41;
  uint64_t v93 = a26;
  uint64_t v97 = sub_191CF2C68();
  uint64_t v96 = v42;
  uint64_t v43 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v108, v111, v117);
  uint64_t v44 = (void *)swift_allocObject();
  uint64_t v94 = (void *)a9;
  uint64_t v45 = v114;
  void v44[2] = a21;
  v44[3] = v45;
  uint64_t v46 = v45;
  uint64_t v47 = v116;
  v44[4] = a23;
  v44[5] = v47;
  uint64_t v48 = v47;
  v44[6] = v43;
  v44[7] = a26;
  uint64_t v49 = v109;
  v44[8] = v115;
  v44[9] = v49;
  uint64_t v50 = v110;
  v44[10] = v110;
  uint64_t v51 = v50;
  uint64_t v52 = v100;
  v44[11] = v100;
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v107 = a21;
  v53[2] = a21;
  v53[3] = v46;
  v53[4] = a23;
  v53[5] = v48;
  uint64_t v106 = a23;
  v53[6] = v43;
  uint64_t v54 = v93;
  uint64_t v55 = v115;
  v53[7] = v93;
  v53[8] = v55;
  v53[9] = v49;
  v53[10] = v51;
  uint64_t v56 = v51;
  uint64_t v57 = v95;
  v53[11] = v52;
  v53[12] = v57;
  v53[13] = v118;
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v59 = v54;
  uint64_t v60 = (uint64_t)v58;
  v58[2] = a21;
  v58[3] = v46;
  v58[4] = a23;
  v58[5] = v48;
  uint64_t v61 = v117;
  v58[6] = v117;
  v58[7] = v59;
  uint64_t v62 = v59;
  uint64_t v63 = v115;
  uint64_t v64 = v109;
  v58[8] = v115;
  v58[9] = v64;
  uint64_t v65 = v56;
  v58[10] = v56;
  v58[11] = v52;
  uint64_t v66 = v119;
  v58[12] = v98;
  v58[13] = v66;
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v68 = v114;
  _OWORD v67[2] = v107;
  v67[3] = v68;
  uint64_t v69 = v116;
  v67[4] = v106;
  v67[5] = v69;
  v67[6] = v61;
  v67[7] = v62;
  v67[8] = v63;
  v67[9] = v64;
  v67[10] = v65;
  v67[11] = v52;
  uint64_t v70 = v120;
  v67[12] = v99;
  v67[13] = v70;
  uint64_t v71 = (void *)swift_allocObject();
  uint64_t v72 = v114;
  v71[2] = v107;
  v71[3] = v72;
  uint64_t v73 = v116;
  v71[4] = v106;
  v71[5] = v73;
  uint64_t v74 = v117;
  v71[6] = v117;
  v71[7] = v62;
  v71[8] = v63;
  v71[9] = v64;
  v71[10] = v110;
  v71[11] = v52;
  uint64_t v75 = v102;
  uint64_t v76 = v103;
  v71[12] = v102;
  v71[13] = v76;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191B17508(v75);
  uint64_t v91 = (uint64_t)v67;
  uint64_t v90 = (uint64_t)v53;
  uint64_t v77 = v105;
  uint64_t v78 = v113;
  sub_191BE2288(v105, v113, v97, v96, v108, (uint64_t)sub_191BE9408, (unint64_t)v44, (uint64_t)sub_191BE9440, (uint64_t)v123, v90, sub_191BE9490, v60, (uint64_t)sub_191BE94F4, v91, (uint64_t)sub_191BE9570, (uint64_t)v71, v74, v52);
  uint64_t v79 = v104;
  id v80 = v94;
  uint64_t v81 = v101;
  void *v94 = v104;
  v80[1] = v81;
  v121[3] = &type metadata for ControlPickerTemplateProvider;
  v121[4] = &off_1EE2A2A28;
  uint64_t v82 = (_OWORD *)swift_allocObject();
  v121[0] = v82;
  id v83 = v81;
  sub_191B16F2C(v75);
  swift_release();
  swift_release();
  swift_release();
  long long v84 = v123[9];
  v82[9] = v123[8];
  v82[10] = v84;
  v82[11] = v123[10];
  long long v85 = v123[5];
  v82[5] = v123[4];
  v82[6] = v85;
  long long v86 = v123[7];
  v82[7] = v123[6];
  v82[8] = v86;
  long long v87 = v123[1];
  v82[1] = v123[0];
  v82[2] = v87;
  long long v88 = v123[3];
  v82[3] = v123[2];
  v82[4] = v88;
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v111, v74);
  char v122 = 0;
  v80[7] = v77;
  v80[8] = v78;
  v80[9] = 0;
  v80[10] = 0;
  v80[11] = v79;
  v80[12] = v83;
  return sub_191BE88E4((uint64_t)v121, (uint64_t)(v80 + 13));
}

uint64_t ControlPicker.init<A, B, C>(kind:intent:displayName:preferredSize:stateProvider:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v52 = a8;
  uint64_t v53 = a7;
  uint64_t v55 = a3;
  uint64_t v56 = a5;
  uint64_t v54 = a4;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v49 = a9;
  uint64_t v45 = a17;
  uint64_t v46 = a19;
  uint64_t v43 = a14;
  uint64_t v44 = a16;
  uint64_t v41 = a12;
  uint64_t v42 = a13;
  uint64_t v47 = a10;
  uint64_t v48 = a11;
  uint64_t v21 = *(void *)(a18 - 8);
  uint64_t v40 = a20;
  MEMORY[0x1F4188790](a1);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PickerStateProviderBox();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v37 - v25;
  uint64_t v27 = sub_191CF3008();
  MEMORY[0x1F4188790](v27 - 8);
  char v28 = *a6;
  uint64_t v29 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v30 = sub_191CF2C68();
  uint64_t v38 = v31;
  uint64_t v39 = v30;
  if (!v56)
  {
    sub_191CF2C78();
    uint64_t v54 = sub_191CF5358();
    uint64_t v56 = v32;
  }
  v57[0] = v28;
  uint64_t v33 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v53, a18);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v23, a18);
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v35 = (void *)sub_191CF2C58();
  sub_191BE19F0(v50, v51, v55, v39, v38, v54, v56, v57, v49, (uint64_t)v26, 3, v35, v52, v47, v48, v41, v42, v43, a15,
    v44,
    v45,
    v24,
    v29,
    v46,
    v40,
    WitnessTable);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v33, a18);
}

uint64_t sub_191BE19B8()
{
  return 3;
}

uint64_t sub_191BE19F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  uint64_t v79 = a6;
  uint64_t v83 = a5;
  uint64_t v82 = a4;
  uint64_t v97 = a26;
  uint64_t v96 = a25;
  uint64_t v95 = a24;
  uint64_t v93 = a20;
  uint64_t v88 = a18;
  uint64_t v87 = a17;
  uint64_t v102 = a16;
  uint64_t v85 = a15;
  uint64_t v101 = a14;
  uint64_t v84 = a13;
  long long v86 = a12;
  uint64_t v94 = a22;
  uint64_t v99 = *(void *)(a22 - 8);
  uint64_t v89 = a11;
  uint64_t v98 = a10;
  MEMORY[0x1F4188790](a1);
  uint64_t v92 = (char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_191CF3008();
  MEMORY[0x1F4188790](v33 - 8);
  char v34 = *a8;
  *(unsigned char *)(a9 + 192) = 0;
  uint64_t v90 = a1;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  uint64_t v100 = a2;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0;
  uint64_t v35 = a9;
  *(void *)(a9 + 48) = a3;
  swift_bridgeObjectRetain_n();
  if (a7)
  {
    uint64_t v36 = a19;
    uint64_t v37 = v79;
  }
  else
  {
    sub_191CF2C78();
    uint64_t v37 = sub_191CF5358();
    a7 = v38;
    uint64_t v36 = a19;
  }
  uint64_t v39 = (void *)v35;
  *(void *)(v35 + 152) = v37;
  *(void *)(v35 + 160) = a7;
  *(unsigned char *)(v35 + 168) = v34;
  uint64_t v40 = v83;
  *(void *)(v35 + 176) = v82;
  *(void *)(v35 + 184) = v40;
  uint64_t v83 = sub_191CF2C68();
  uint64_t v82 = v41;
  uint64_t v42 = v94;
  (*(void (**)(char *, uint64_t))(v99 + 16))(v92, v98);
  uint64_t v43 = (void *)swift_allocObject();
  uint64_t v44 = v93;
  void v43[2] = v36;
  v43[3] = v44;
  v43[4] = a21;
  v43[5] = v42;
  uint64_t v45 = v42;
  uint64_t v46 = v95;
  v43[6] = a23;
  v43[7] = v46;
  uint64_t v91 = a21;
  uint64_t v80 = a23;
  uint64_t v47 = v96;
  uint64_t v48 = v97;
  v43[8] = v96;
  v43[9] = v48;
  uint64_t v49 = (void *)swift_allocObject();
  uint64_t v81 = v36;
  uint64_t v50 = v93;
  v49[2] = v36;
  v49[3] = v50;
  uint64_t v51 = v91;
  v49[4] = v91;
  v49[5] = v45;
  v49[6] = a23;
  v49[7] = v46;
  uint64_t v52 = v97;
  v49[8] = v47;
  v49[9] = v52;
  uint64_t v53 = v101;
  v49[10] = v84;
  v49[11] = v53;
  uint64_t v54 = (void *)swift_allocObject();
  v54[2] = v36;
  v54[3] = v50;
  v54[4] = v51;
  v54[5] = v45;
  uint64_t v55 = v80;
  v54[6] = v80;
  v54[7] = v46;
  uint64_t v56 = v96;
  v54[8] = v96;
  v54[9] = v52;
  uint64_t v57 = v102;
  v54[10] = v85;
  v54[11] = v57;
  uint64_t v58 = v39;
  uint64_t v59 = (void *)swift_allocObject();
  v59[2] = v81;
  v59[3] = v50;
  uint64_t v60 = v94;
  v59[4] = v91;
  v59[5] = v60;
  uint64_t v61 = v95;
  v59[6] = v55;
  v59[7] = v61;
  v59[8] = v56;
  v59[9] = v52;
  uint64_t v62 = v87;
  uint64_t v63 = v88;
  v59[10] = v87;
  v59[11] = v63;
  swift_retain();
  swift_retain();
  sub_191B17508(v62);
  uint64_t v77 = (uint64_t)v59;
  uint64_t v76 = (uint64_t)v49;
  uint64_t v64 = v90;
  uint64_t v65 = v100;
  sub_191BE2288(v90, v100, v83, v82, v92, (uint64_t)sub_191BE875C, (unint64_t)v43, (uint64_t)sub_191BE87A8, (uint64_t)v105, v76, 0, 0, (uint64_t)sub_191BE87E8, (uint64_t)v54, (uint64_t)sub_191BE8864, v77, v60, v52);
  uint64_t v66 = v89;
  uint64_t v67 = v86;
  *uint64_t v58 = v89;
  v58[1] = v67;
  void v103[3] = &type metadata for ControlPickerTemplateProvider;
  v103[4] = &off_1EE2A2A28;
  uint64_t v68 = (_OWORD *)swift_allocObject();
  v103[0] = v68;
  id v69 = v67;
  sub_191B16F2C(v62);
  swift_release();
  swift_release();
  long long v70 = v105[9];
  v68[9] = v105[8];
  v68[10] = v70;
  v68[11] = v105[10];
  long long v71 = v105[5];
  v68[5] = v105[4];
  v68[6] = v71;
  long long v72 = v105[7];
  v68[7] = v105[6];
  v68[8] = v72;
  long long v73 = v105[1];
  v68[1] = v105[0];
  v68[2] = v73;
  long long v74 = v105[3];
  v68[3] = v105[2];
  v68[4] = v74;
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v60);
  char v104 = 0;
  v58[7] = v64;
  v58[8] = v65;
  v58[9] = 0;
  v58[10] = 0;
  v58[11] = v66;
  v58[12] = v69;
  return sub_191BE88E4((uint64_t)v103, (uint64_t)(v58 + 13));
}

uint64_t sub_191BE1FE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191BE20D8(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191BE2168(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191BE21F8(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

__n128 sub_191BE2288@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  uint64_t v86 = a8;
  uint64_t v91 = a6;
  unint64_t v92 = a7;
  uint64_t v99 = a5;
  uint64_t v97 = a4;
  *((void *)&v89 + 1) = a2;
  uint64_t v90 = a3;
  *(void *)&long long v89 = a1;
  uint64_t v82 = a9;
  uint64_t v81 = a16;
  uint64_t v80 = a15;
  uint64_t v78 = a14;
  uint64_t v77 = a13;
  uint64_t v18 = *(void *)(a17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v75 = a11;
  uint64_t v76 = a10;
  MEMORY[0x1F4188790](a1);
  id v20 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v98(v20, v21, a17);
  uint64_t v22 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = (v22 + 32) & ~v22;
  uint64_t v24 = v23 + v19;
  uint64_t v25 = v22 | 7;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a17;
  *(void *)(v26 + 24) = a18;
  uint64_t v94 = a18;
  uint64_t v96 = v26;
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v27(v26 + v23, v20, a17);
  v98(v20, (uint64_t)v99, a17);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a17;
  *(void *)(v28 + 24) = a18;
  uint64_t v88 = v28;
  v27(v28 + v23, v20, a17);
  uint64_t v93 = (void *)(v18 + 16);
  v98(v20, (uint64_t)v99, a17);
  uint64_t v29 = (void *)(v18 + 32);
  uint64_t v79 = v24;
  uint64_t v30 = v23;
  unint64_t v31 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v84 = v31 + 16;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v94;
  *(void *)(v32 + 16) = a17;
  *(void *)(v32 + 24) = v33;
  uint64_t v83 = v20;
  uint64_t v87 = v29;
  v27(v32 + v30, v20, a17);
  uint64_t v95 = v32;
  uint64_t v85 = (char *)v31;
  char v34 = (uint64_t *)(v32 + v31);
  uint64_t v35 = v76;
  uint64_t *v34 = v86;
  v34[1] = v35;
  long long v74 = v27;
  if (v75)
  {
    uint64_t v36 = v75;
    uint64_t v86 = a12;
    uint64_t v37 = v83;
    v98(v83, (uint64_t)v99, a17);
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v94;
    *(void *)(v38 + 16) = a17;
    *(void *)(v38 + 24) = v39;
    uint64_t v40 = v25;
    v27(v38 + v30, v37, a17);
    uint64_t v76 = v38;
    uint64_t v41 = v86;
    uint64_t v42 = &v85[v38];
    *(void *)uint64_t v42 = v36;
    *((void *)v42 + 1) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_191B16F2C(0);
    uint64_t v75 = &unk_1E92E43C0;
    uint64_t v43 = v39;
    uint64_t v44 = v30;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v75 = 0;
    uint64_t v76 = 0;
    uint64_t v43 = v94;
    uint64_t v44 = v30;
    uint64_t v40 = v25;
  }
  uint64_t v45 = (void (*)(char *, void *, uint64_t))v98;
  uint64_t v46 = v83;
  uint64_t v47 = v99;
  v98(v83, (uint64_t)v99, a17);
  v73[1] = v40;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = a17;
  *(void *)(v48 + 24) = v43;
  uint64_t v49 = v48;
  uint64_t v86 = v48;
  uint64_t v50 = v74;
  v74(v48 + v44, v46, a17);
  uint64_t v51 = v85;
  uint64_t v52 = &v85[v49];
  uint64_t v53 = v78;
  *(void *)uint64_t v52 = v77;
  *((void *)v52 + 1) = v53;
  v45(v46, v47, a17);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v94;
  *(void *)(v54 + 16) = a17;
  *(void *)(v54 + 24) = v55;
  v50(v54 + v44, v46, a17);
  uint64_t v56 = &v51[v54];
  uint64_t v57 = v81;
  *(void *)uint64_t v56 = v80;
  *((void *)v56 + 1) = v57;
  v50((uint64_t)v46, (char *)v99, a17);
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = a17;
  *(void *)(v58 + 24) = v55;
  v50(v58 + v44, v46, a17);
  uint64_t v59 = *((void *)&v89 + 1);
  long long v100 = v89;
  *(void *)&long long v101 = v90;
  *((void *)&v101 + 1) = v97;
  LOBYTE(v102) = 0;
  unint64_t v60 = v92;
  *((void *)&v102 + 1) = v91;
  v103.n128_u64[0] = v92;
  uint64_t v99 = &unk_1E92E4380;
  v103.n128_u64[1] = (unint64_t)&unk_1E92E4380;
  *(void *)&long long v104 = v95;
  uint64_t v62 = (uint64_t)v75;
  uint64_t v61 = v76;
  *((void *)&v104 + 1) = v75;
  *(void *)&long long v105 = v76;
  uint64_t v98 = (void (*)(char *, uint64_t, uint64_t))&unk_1E92E4390;
  *((void *)&v105 + 1) = &unk_1E92E4390;
  *(void *)&long long v106 = v86;
  uint64_t v94 = &unk_1E92E43A0;
  *((void *)&v106 + 1) = &unk_1E92E43A0;
  *(void *)&long long v107 = v54;
  uint64_t v93 = &unk_1E92E43B0;
  *((void *)&v107 + 1) = &unk_1E92E43B0;
  *(void *)&long long v108 = v58;
  BYTE8(v108) = 0;
  uint64_t v87 = &unk_1E92E4360;
  *(void *)&long long v109 = &unk_1E92E4360;
  *((void *)&v109 + 1) = v96;
  uint64_t v85 = (char *)&unk_1E92E4370;
  uint64_t v63 = v88;
  *(void *)&long long v110 = &unk_1E92E4370;
  *((void *)&v110 + 1) = v88;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191B17508(v62);
  sub_191BE85B8((uint64_t)&v100);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v64 = v60;
  swift_release();
  sub_191B16F2C(v62);
  swift_bridgeObjectRelease();
  uint64_t v65 = v97;
  swift_bridgeObjectRelease();
  uint64_t v66 = v95;
  swift_release();
  v111[0] = v89;
  v111[1] = v59;
  v111[2] = v90;
  void v111[3] = v65;
  char v112 = 0;
  uint64_t v113 = v91;
  unint64_t v114 = v64;
  uint64_t v115 = v99;
  uint64_t v116 = v66;
  uint64_t v117 = v62;
  uint64_t v118 = v61;
  uint64_t v119 = v98;
  uint64_t v120 = v86;
  uint64_t v121 = v94;
  uint64_t v122 = v54;
  uint64_t v123 = v93;
  uint64_t v124 = v58;
  char v125 = 0;
  uint64_t v126 = v87;
  uint64_t v127 = v96;
  uint64_t v128 = v85;
  uint64_t v129 = v63;
  sub_191BE9010((uint64_t)v111);
  long long v67 = v109;
  uint64_t v68 = v82;
  *(_OWORD *)(v82 + 128) = v108;
  *(_OWORD *)(v68 + 144) = v67;
  *(_OWORD *)(v68 + 160) = v110;
  long long v69 = v105;
  *(_OWORD *)(v68 + 64) = v104;
  *(_OWORD *)(v68 + 80) = v69;
  long long v70 = v107;
  *(_OWORD *)(v68 + 96) = v106;
  *(_OWORD *)(v68 + 112) = v70;
  long long v71 = v101;
  *(_OWORD *)uint64_t v68 = v100;
  *(_OWORD *)(v68 + 16) = v71;
  __n128 result = v103;
  *(_OWORD *)(v68 + 32) = v102;
  *(__n128 *)(v68 + 48) = result;
  return result;
}

uint64_t sub_191BE2980(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191BE2A78(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191BE2B08(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191BE2B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 160);
  unsigned __int8 v5 = *(unsigned char *)(v1 + 168);
  return sub_191C92E54(v1 + 56, v2, v3, &v5, 0, 0, *(void *)(v1 + 176), *(void *)(v1 + 184), a1, *(unsigned char *)(v1 + 192));
}

uint64_t ControlPicker.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  uint64_t v0 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191CF8410;
  sub_191BE2B98(v2 + v1);
  sub_191B5D22C();
  sub_191CF4418();
  return swift_bridgeObjectRelease();
}

uint64_t ControlPicker.init<A, B, C>(kind:intent:stateProvider:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v27 = a8;
  uint64_t v28 = a7;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v29 = a9;
  uint64_t v30 = a1;
  uint64_t v16 = *(void *)(a13 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, a13);
  id v20 = (void *)swift_allocObject();
  uint64_t v20[2] = a10;
  v20[3] = a11;
  v20[4] = a12;
  v20[5] = a13;
  v20[6] = a14;
  v20[7] = a15;
  uint64_t v21 = v24;
  v20[8] = a16;
  v20[9] = v21;
  v20[10] = v25;
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a10;
  void v22[3] = a11;
  v22[4] = a12;
  v22[5] = a13;
  uint64_t v22[6] = a14;
  v22[7] = a15;
  v22[8] = a16;
  char v33 = 0;
  ControlPicker.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)(v30, v31, v32, 0, 0, &v33, (uint64_t)v18, (uint64_t)sub_191BE3034, v29, (uint64_t)v20, (uint64_t)nullsub_1, (uint64_t)v22, v28, v27, 0, 0, a10, a11, MEMORY[0x1E4F3F058],
    a12,
    a13,
    a14,
    MEMORY[0x1E4F3F050],
    a15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v26, a13);
}

uint64_t sub_191BE2EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  unsigned int v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v20 - v15;
  v17(v14);
  sub_191C6C7AC(v13, a5, a8);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, a5);
  sub_191C6C7AC(v16, a5, a8);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, a5);
}

uint64_t sub_191BE2FFC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BE3034(uint64_t a1)
{
  return sub_191BE2EC8(a1, v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_191BE306C()
{
  return swift_deallocObject();
}

uint64_t ControlPicker.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v4, a2);
  sub_191B15E0C(v4 + 104, (uint64_t)&v18);
  if (v21 == 1) {
    return sub_191BB2C20((uint64_t)&v18);
  }
  sub_191B004A8(&v18, (uint64_t)v32);
  sub_191AFEE28((uint64_t)v32, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0D78);
  if ((swift_dynamicCast() & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  long long v15 = v18;
  uint64_t v8 = v19;
  uint64_t v9 = v20;
  uint64_t v10 = v23;
  uint64_t v11 = v24;
  char v12 = v28;
  v16[3] = &type metadata for ControlPickerTemplateProvider;
  v16[4] = &off_1EE2A2A28;
  uint64_t v13 = swift_allocObject();
  v16[0] = v13;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v9;
  *(unsigned char *)(v13 + 48) = a1 & 1;
  *(_OWORD *)(v13 + 56) = v21;
  *(_OWORD *)(v13 + 72) = v22;
  *(void *)(v13 + 88) = v10;
  *(void *)(v13 + 96) = v11;
  *(_OWORD *)(v13 + 104) = v25;
  *(_OWORD *)(v13 + 120) = v26;
  *(_OWORD *)(v13 + 136) = v27;
  *(unsigned char *)(v13 + 152) = v12;
  long long v14 = v30;
  *(_OWORD *)(v13 + 160) = v29;
  *(_OWORD *)(v13 + 176) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  char v17 = 0;
  return sub_191BE329C((uint64_t)v16, a3 + 104);
}

uint64_t sub_191BE3214()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BE329C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191BE32F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BE333C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_191BE3344(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 144)) {
    swift_release();
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BE33CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  char v9 = *(unsigned char *)(a2 + 144);
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v8;
  if (v9)
  {
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v12;
    swift_retain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 128) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 104, a2 + 104);
  }
  *(unsigned char *)(a1 + 144) = v9;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191BE3500(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = *(void **)(a2 + 96);
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v7;
  id v9 = v7;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 104);
    if (*(unsigned char *)(a2 + 144))
    {
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      *(unsigned char *)(a1 + 144) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v11 = *(void *)(a2 + 128);
      *(void *)(a1 + 128) = v11;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 104, a2 + 104);
      *(unsigned char *)(a1 + 144) = 0;
    }
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

__n128 __swift_memcpy193_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t sub_191BE36FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  long long v10 = *(void **)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 104);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  }
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

uint64_t sub_191BE37E4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 193)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191BE382C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 193) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 193) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ControlPicker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of PickerStateProvider.allStates(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PickerStateProvider.state(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B0A348;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191BE39DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B8A874;
  return v9(a1, a2, a3);
}

uint64_t sub_191BE3AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191BE3BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191BE3CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191BE3E0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlPickerTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 128);
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(void *)(a1 + 128) = v10;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v12 = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v6;
      *(void *)(a1 + 80) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v6;
      *(void *)(a1 + 80) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlPickerTemplateProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlPickerTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlPickerTemplateProvider()
{
  return &type metadata for ControlPickerTemplateProvider;
}

uint64_t sub_191BE43B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191BE450C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191BE4724);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_191BE474C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE4770()
{
  uint64_t AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  if (AssociatedTypeWitness == &type metadata for EmptyConfiguration)
  {
    swift_dynamicCast();
    size_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v2 = (uint64_t)AssociatedTypeWitness;
    long long v3 = (void *)swift_task_alloc();
    v0[6] = v3;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *long long v3 = v0;
    v3[1] = sub_191BE48BC;
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    return sub_191BD399C(v5, v6, v2, AssociatedConformanceWitness);
  }
}

uint64_t sub_191BE48BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191BE49B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, void, void))(*(void *)(a3 + 24) + 40))(a1, *(void *)(a3 + 16), *(void *)(a3 + 24));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_191CF5618();
  swift_getWitnessTable();
  sub_191CF5768();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4340);
  if (sub_191CF5888())
  {
    sub_191CF5638();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = MEMORY[0x192FE4350](v4, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    sub_191BD3DB4();
    swift_allocError();
    *(void *)uint64_t v8 = a2;
    *(void *)(v8 + 8) = v7;
    *(unsigned char *)(v8 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_191BE4B28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(a2 + 24) + 40))(a1, *(void *)(a2 + 16));
}

uint64_t sub_191BE4B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  unsigned int v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 48) + **(int **)(v6 + 48));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_191B0A348;
  return v10(a1, a2, v7, v6);
}

uint64_t sub_191BE4C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4[7] = AssociatedConformanceWitness;
  v4[8] = *(void *)(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_191CF5BC8();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[12] = AssociatedTypeWitness;
  v4[13] = *(void *)(AssociatedTypeWitness - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191BE4E68, 0, 0);
}

uint64_t sub_191BE4E68()
{
  sub_191BE49B0(v0[2], v0[3], v0[4]);
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16))(v1, v0[15], v0[12]);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(v1, v4, v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_191BE4FF0;
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[8];
  return MEMORY[0x1F40D3C68](v6, 1, v4, v7);
}

uint64_t sub_191BE4FF0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_191BE51B8;
  }
  else
  {
    (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
    uint64_t v3 = sub_191BE511C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191BE511C()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BE51B8()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BE5250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191BE4B28(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return sub_191BE854C(v4, v2, v3);
}

uint64_t sub_191BE52D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return sub_191BE4B40(a1, a2, a3);
}

uint64_t sub_191BE5384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return sub_191BE4C4C(a1, a2, a3);
}

uint64_t sub_191BE5430(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_191B17A68;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_191BABCC4, 0, 0);
}

uint64_t sub_191BE54D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a2;
  swift_getAssociatedTypeWitness();
  v4[8] = swift_getAssociatedConformanceWitness();
  v4[9] = swift_getAssociatedTypeWitness();
  v4[10] = swift_task_alloc();
  uint64_t v8 = swift_checkMetadataState();
  v4[11] = v8;
  v4[12] = *(void *)(v8 - 8);
  v4[13] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = swift_task_alloc();
  v4[16] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v4[17] = v11;
  void *v11 = v4;
  v11[4] = a3;
  v11[5] = a4;
  void v11[2] = v10;
  v11[3] = a1;
  v11[1] = sub_191BE5708;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE5708()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_191BE5E44, 0, 0);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[7] + 48)
                                                                    + **(int **)(v2[7] + 48));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[19] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_191BE58E0;
    uint64_t v4 = v2[16];
    uint64_t v5 = v2[13];
    uint64_t v6 = v2[6];
    uint64_t v7 = v2[7];
    return v9(v5, v4, v6, v7);
  }
}

uint64_t sub_191BE58E0()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_191BE5EC8, 0, 0);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2[7] + 40) + **(int **)(v2[7] + 40));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[21] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_191BE5AB4;
    uint64_t v4 = v2[6];
    uint64_t v5 = v2[7];
    uint64_t v6 = v2[16];
    return v8(v6, v4, v5);
  }
}

uint64_t sub_191BE5AB4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191BE5F64;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    uint64_t v5 = sub_191BE5BDC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191BE5BDC()
{
  *(void *)(v0 + 32) = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v2 + 32) = v1;
  sub_191CF5618();
  swift_getWitnessTable();
  sub_191CF5808();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    sub_191CF5DB8();
    uint64_t v9 = sub_191CF5368();
    uint64_t v11 = v10;
    sub_191BE9340();
    swift_allocError();
    *unsigned int v12 = v9;
    v12[1] = v11;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 16);
    (*(void (**)(void, void))(v4 + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v16(v15);
  }
}

uint64_t sub_191BE5E44()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BE5EC8()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BE5F64()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191BE601C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - v5;
  swift_checkMetadataState();
  sub_191CF5DB8();
  sub_191CF5DB8();
  swift_getAssociatedConformanceWitness();
  char v7 = sub_191CF52F8();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

uint64_t sub_191BE6204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[6] = AssociatedTypeWitness;
  v5[7] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = swift_task_alloc();
  v5[8] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v5[9] = v11;
  void *v11 = v5;
  v11[4] = a4;
  v11[5] = a5;
  void v11[2] = v10;
  v11[3] = a1;
  v11[1] = sub_191BE6344;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE6344()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_191BE66AC, 0, 0);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[5] + 56)
                                                                    + **(int **)(v2[5] + 56));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[11] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_191BE6518;
    uint64_t v4 = v2[4];
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[2];
    uint64_t v7 = v2[8];
    return v9(v7, v6, v4, v5);
  }
}

uint64_t sub_191BE6518()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191BE6710;
  }
  else {
    uint64_t v2 = sub_191BE662C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191BE662C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BE66AC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BE6710()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191BE678C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a3;
  v6[3] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v6[4] = AssociatedTypeWitness;
  v6[5] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = swift_task_alloc();
  v6[6] = v11;
  v6[7] = sub_191CF5698();
  v6[8] = sub_191CF5688();
  unsigned int v12 = (void *)swift_task_alloc();
  v6[9] = v12;
  *unsigned int v12 = v6;
  v12[4] = a5;
  v12[5] = a6;
  _OWORD v12[2] = v11;
  v12[3] = a1;
  v12[1] = sub_191BE68E8;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE68E8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191BE6AF8;
  }
  else {
    uint64_t v4 = sub_191BE6A44;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191BE6A44()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[2];
  swift_release();
  uint64_t v5 = v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_191BE6AF8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BE6B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a3;
  v6[3] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v6[4] = AssociatedTypeWitness;
  v6[5] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = swift_task_alloc();
  v6[6] = v11;
  v6[7] = sub_191CF5698();
  v6[8] = sub_191CF5688();
  unsigned int v12 = (void *)swift_task_alloc();
  v6[9] = v12;
  *unsigned int v12 = v6;
  v12[4] = a5;
  v12[5] = a6;
  _OWORD v12[2] = v11;
  v12[3] = a1;
  v12[1] = sub_191BE6CC4;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE6CC4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191BE96C8;
  }
  else {
    uint64_t v4 = sub_191BE96B8;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191BE6E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  v6[5] = a4;
  v6[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = swift_task_alloc();
  v6[10] = v11;
  v6[11] = sub_191CF5698();
  v6[12] = sub_191CF5688();
  unsigned int v12 = (void *)swift_task_alloc();
  v6[13] = v12;
  *unsigned int v12 = v6;
  v12[4] = a5;
  v12[5] = a6;
  _OWORD v12[2] = v11;
  v12[3] = a1;
  v12[1] = sub_191BE6F84;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE6F84()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BE7470, v4, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2[7] + 40) + **(int **)(v2[7] + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[15] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_191BE7170;
    uint64_t v6 = v2[6];
    uint64_t v7 = v2[7];
    uint64_t v8 = v2[10];
    return v10(v8, v6, v7);
  }
}

uint64_t sub_191BE7170(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v6;
    uint64_t v8 = sub_191BE74DC;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v9;
    uint64_t v8 = sub_191BE72F0;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_191BE72F0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  long long v14 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(void *)(v0 + 16) = v1;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(_OWORD *)(v7 + 32) = v14;
  *(void *)(v7 + 48) = v2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_191CF5618();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_191B55D64((void (*)(char *, char *))sub_191BE92D4, v7, v8, MEMORY[0x1E4F3EE00], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v11);
}

uint64_t sub_191BE7470()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BE74DC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191BE7570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[4] = a3;
  v6[5] = a4;
  v6[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = swift_task_alloc();
  v6[10] = v11;
  v6[11] = sub_191CF5698();
  v6[12] = sub_191CF5688();
  unsigned int v12 = (void *)swift_task_alloc();
  v6[13] = v12;
  *unsigned int v12 = v6;
  v12[4] = a5;
  v12[5] = a6;
  _OWORD v12[2] = v11;
  v12[3] = a1;
  v12[1] = sub_191BE76D4;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE76D4()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191BE96B4, v4, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2[7] + 40) + **(int **)(v2[7] + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[15] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_191BE78C0;
    uint64_t v6 = v2[6];
    uint64_t v7 = v2[7];
    uint64_t v8 = v2[10];
    return v10(v8, v6, v7);
  }
}

uint64_t sub_191BE78C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v6;
    uint64_t v8 = sub_191BE96CC;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v9;
    uint64_t v8 = sub_191BE7A40;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_191BE7A40()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  long long v14 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(void *)(v0 + 16) = v1;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *(_OWORD *)(v7 + 32) = v14;
  *(void *)(v7 + 48) = v2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_191CF5618();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_191B55D64((void (*)(char *, char *))sub_191BE929C, v7, v8, (uint64_t)&type metadata for ControlAffordances, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v11);
}

uint64_t sub_191BE7BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[6] = AssociatedTypeWitness;
  v5[7] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = swift_task_alloc();
  v5[8] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v5[9] = v11;
  void *v11 = v5;
  v11[4] = a4;
  v11[5] = a5;
  void v11[2] = v10;
  v11[3] = a2;
  v11[1] = sub_191BE7D00;
  return MEMORY[0x1F4188298](sub_191BE4770, 0, 0);
}

uint64_t sub_191BE7D00()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_191BE66AC, 0, 0);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[5] + 64)
                                                                    + **(int **)(v2[5] + 64));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[11] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_191BE6518;
    uint64_t v4 = v2[8];
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[5];
    uint64_t v7 = v2[2];
    return v9(v7, v4, v5, v6);
  }
}

uint64_t sub_191BE7ED4()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_191BE7EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 576) = a3;
  *(void *)(v4 + 568) = a2;
  *(void *)(v4 + 560) = a1;
  long long v5 = v3[9];
  *(_OWORD *)(v4 + 512) = v3[8];
  *(_OWORD *)(v4 + 528) = v5;
  *(_OWORD *)(v4 + 544) = v3[10];
  long long v6 = v3[5];
  *(_OWORD *)(v4 + 448) = v3[4];
  *(_OWORD *)(v4 + 464) = v6;
  long long v7 = v3[7];
  *(_OWORD *)(v4 + 480) = v3[6];
  *(_OWORD *)(v4 + 496) = v7;
  long long v8 = v3[1];
  *(_OWORD *)(v4 + 384) = *v3;
  *(_OWORD *)(v4 + 400) = v8;
  long long v9 = v3[3];
  *(_OWORD *)(v4 + 416) = v3[2];
  *(_OWORD *)(v4 + 432) = v9;
  sub_191CF5698();
  *(void *)(v4 + 584) = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  *(void *)(v4 + 592) = v11;
  *(void *)(v4 + 600) = v10;
  return MEMORY[0x1F4188298](sub_191BE7FD0, v11, v10);
}

uint64_t sub_191BE7FD0()
{
  long long v1 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 160) = v1;
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 544);
  long long v2 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 96) = v2;
  long long v3 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 128) = v3;
  long long v4 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 32) = v4;
  long long v5 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 64) = v5;
  long long v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 344) = v6;
  *(_OWORD *)(v0 + 360) = *(_OWORD *)(v0 + 176);
  long long v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 280) = v7;
  long long v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 312) = v8;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 216) = v9;
  long long v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 48);
  uint64_t v11 = *(void **)(v0 + 576);
  unsigned int v12 = *(uint64_t **)(v0 + 560);
  *(void *)(v0 + 192) = v11;
  *(void *)(v0 + 376) = v11;
  *(_OWORD *)(v0 + 248) = v10;
  v12[3] = type metadata accessor for ControlTemplatePicker(0);
  v12[4] = sub_191BE8560();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  sub_191BE85B8(v0 + 384);
  id v14 = v11;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_191BE8120;
  uint64_t v16 = *(void *)(v0 + 568);
  return sub_191BB66DC((uint64_t)boxed_opaque_existential_1, v16);
}

uint64_t sub_191BE8120()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 616) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 600);
  uint64_t v4 = *(void *)(v2 + 592);
  if (v0) {
    long long v5 = sub_191BE82CC;
  }
  else {
    long long v5 = sub_191BE825C;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191BE825C()
{
  sub_191BE8680(v0 + 16);
  swift_release();
  long long v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191BE82CC()
{
  uint64_t v1 = *(void *)(v0 + 560);
  sub_191BE8680(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191BE8348(uint64_t a1)
{
  long long v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 144) + **(int **)(v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_191B0A1A0;
  return v6(a1);
}

uint64_t sub_191BE841C(uint64_t a1, uint64_t a2)
{
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 160) + **(int **)(v2 + 160));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_191B17A68;
  return v8(a2, a1);
}

uint64_t sub_191BE84FC()
{
  return *(void *)(swift_getAssociatedConformanceWitness() + 8);
}

uint64_t sub_191BE8530()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191BE854C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unint64_t sub_191BE8560()
{
  unint64_t result = qword_1E92E4350;
  if (!qword_1E92E4350)
  {
    type metadata accessor for ControlTemplatePicker(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E4350);
  }
  return result;
}

uint64_t sub_191BE85B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_191B17508(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191BE8680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void **)(a1 + 176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_191BE874C()
{
  return swift_deallocObject();
}

uint64_t sub_191BE875C()
{
  return sub_191BE2980(*(void *)(v0 + 16));
}

uint64_t sub_191BE8770()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BE87A8(uint64_t a1)
{
  return sub_191BE2A78(a1);
}

uint64_t sub_191BE87E8(uint64_t a1)
{
  return sub_191BE2B08(a1);
}

uint64_t sub_191BE8824()
{
  if (*(void *)(v0 + 80)) {
    swift_release();
  }

  return swift_deallocObject();
}

void *sub_191BE8864@<X0>(uint64_t a1@<X8>)
{
  void *(*v3)(long long *__return_ptr);
  void *result;
  uint64_t v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  uint64_t v10;
  long long v11;
  long long v12;
  long long v13;

  uint64_t v3 = *(void *(**)(long long *__return_ptr))(v1 + 80);
  if (v3)
  {
    unint64_t result = v3(&v9);
    long long v5 = v10;
    long long v6 = v11;
    uint64_t v7 = v12;
    long long v8 = v13;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)(a1 + 16) = 0;
    long long v6 = 0uLL;
    *(_OWORD *)a1 = 0u;
    uint64_t v7 = 0uLL;
    long long v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return result;
}

uint64_t sub_191BE88E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191BE8944(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_191B8B028;
  return sub_191BE54D8(a1, v6, v4, v5);
}

uint64_t sub_191BE8A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2
     + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_191B17A68;
  return sub_191BE6204(a1, a2, v8, v6, v7);
}

uint64_t sub_191BE8B24(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B8B028;
  return sub_191BE678C(a1, v7, v9, v10, v4, v5);
}

uint64_t sub_191BE8C48(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B8B028;
  return sub_191BE6E20(a1, v7, v9, v10, v4, v5);
}

uint64_t sub_191BE8D6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B8B028;
  return sub_191BE7570(a1, v7, v9, v10, v4, v5);
}

uint64_t objectdestroy_45Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_191BE8F18(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2
     + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_191B17A68;
  return sub_191BE7BC0(a1, a2, v8, v6, v7);
}

uint64_t sub_191BE9010(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t objectdestroy_53Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BE917C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B8B028;
  return sub_191BE6B68(a1, v7, v9, v10, v4, v5);
}

uint64_t sub_191BE929C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 32))(a1, *(void *)(v1 + 48));
}

uint64_t sub_191BE92D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v2 + 32))(a1, *(void *)(v2 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_191BE931C()
{
  return sub_191BE601C() & 1;
}

unint64_t sub_191BE9340()
{
  unint64_t result = qword_1E92E43D0;
  if (!qword_1E92E43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E43D0);
  }
  return result;
}

unint64_t sub_191BE9394()
{
  unint64_t result = qword_1E92E2348;
  if (!qword_1E92E2348)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92E2348);
  }
  return result;
}

uint64_t sub_191BE93D4()
{
  return 0x206E776F6E6B6E55;
}

uint64_t sub_191BE93F8()
{
  return swift_deallocObject();
}

uint64_t sub_191BE9408()
{
  return sub_191BE1FE0(*(void *)(v0 + 16));
}

uint64_t sub_191BE9440(uint64_t a1)
{
  return sub_191BE94A8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void))sub_191BE20D8);
}

uint64_t sub_191BE9458()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191BE9490(uint64_t a1)
{
  return sub_191BE94A8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void))sub_191BE2168);
}

uint64_t sub_191BE94A8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[12], v2[13], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11]);
}

uint64_t sub_191BE94F4(uint64_t a1)
{
  return sub_191BE21F8(a1);
}

uint64_t sub_191BE9530()
{
  if (*(void *)(v0 + 96)) {
    swift_release();
  }

  return swift_deallocObject();
}

void *sub_191BE9570@<X0>(uint64_t a1@<X8>)
{
  void *(*v3)(long long *__return_ptr);
  void *result;
  uint64_t v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  uint64_t v10;
  long long v11;
  long long v12;
  long long v13;

  uint64_t v3 = *(void *(**)(long long *__return_ptr))(v1 + 96);
  if (v3)
  {
    unint64_t result = v3(&v9);
    uint64_t v5 = v10;
    unint64_t v6 = v11;
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    *(_OWORD *)a1 = v9;
    *(void *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)(a1 + 16) = 0;
    unint64_t v6 = 0uLL;
    *(_OWORD *)a1 = 0u;
    uint64_t v7 = 0uLL;
    uint64_t v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ControlPickerTemplateProvider.Errors(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActivityWidgetRequest.PayloadMetadata()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ControlPickerTemplateProvider.Errors(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ControlPickerTemplateProvider.Errors(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ControlPickerTemplateProvider.Errors()
{
  return &type metadata for ControlPickerTemplateProvider.Errors;
}

id sub_191BE96D4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = *(void **)(v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  *a1 = v4;

  return v4;
}

id sub_191BE9724()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 32));

  return v2;
}

uint64_t sub_191BE976C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_191BED134(v3 + *(int *)(v4 + 44), a1, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
}

uint64_t sub_191BE97C4()
{
  uint64_t v1 = sub_191CF44B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  swift_beginAccess();
  sub_191B01614(v8, (uint64_t)v7, &qword_1E92E1AD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_191B01770((uint64_t)v7, &qword_1E92E1AD8);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_191B01770((uint64_t)v7, &qword_1E92E1AD8);
    sub_191BED19C(&qword_1E92E1008, MEMORY[0x1E4F3D720]);
    sub_191CF5788();
    sub_191CF57E8();
    BOOL v9 = v11[2] == v11[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

uint64_t sub_191BE99DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 20);
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_191BE9A60()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_191BE9A94(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_191BE9AD4())()
{
  return j__swift_endAccess;
}

uint64_t sub_191BE9B28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_191BED134(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

uint64_t sub_191BE9B80()
{
  type metadata accessor for WidgetArchivableMetadata(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF8968(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_191BE9BD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 17);
  return result;
}

uint64_t sub_191BE9C18(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 17) = v2;
  return result;
}

uint64_t (*sub_191BE9C58())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191BE9CAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF2EA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v12 = v11 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191B28FA4((uint64_t)v6, v12, &qword_1EB44B720);
  return swift_endAccess();
}

uint64_t sub_191BE9E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191B01614(v9, (uint64_t)v8, &qword_1EB44B720);
  uint64_t v10 = sub_191CF2EA8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_191B01770((uint64_t)v8, &qword_1EB44B720);
  sub_191BEA038(v1, a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_191B28FA4((uint64_t)v6, v9, &qword_1EB44B720);
  return swift_endAccess();
}

uint64_t sub_191BEA038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = sub_191CF3178();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)&v43 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v50 = (char *)&v43 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v21 = a1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v22 = type metadata accessor for WidgetArchivableMetadata(0);
  uint64_t v23 = *(void *)(v21 + *(int *)(v22 + 36));
  if (*(void *)(v23 + 16))
  {
    uint64_t v47 = v22;
    uint64_t v48 = v21;
    uint64_t v49 = v7;
    uint64_t v46 = v14;
    uint64_t v52 = v20;
    uint64_t v53 = a2;
    uint64_t v24 = *(void *)(type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0) - 8);
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    long long v26 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    v26(v9, v23 + v25, v10);
    long long v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[7];
    v27((uint64_t)v9, 0, 1, v10);
    char v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v11[6];
    uint64_t v54 = v10;
    uint64_t v29 = v10;
    long long v30 = v28;
    if (v28((uint64_t)v9, 1, v29) == 1)
    {
      uint64_t v31 = (uint64_t)v9;
    }
    else
    {
      uint64_t v43 = v30;
      uint64_t v44 = v26;
      unint64_t v32 = v25;
      uint64_t v45 = v27;
      char v33 = (void (*)(char *, char *, uint64_t))v11[4];
      v33(v52, v9, v54);
      uint64_t v34 = *(void *)(v48 + *(int *)(v47 + 36));
      uint64_t v35 = *(void *)(v34 + 16);
      if (v35)
      {
        uint64_t v36 = v34 + v32 + *(void *)(v24 + 72) * (v35 - 1);
        uint64_t v31 = (uint64_t)v49;
        uint64_t v37 = v54;
        uint64_t v38 = (void (*)(char *, char *, uint64_t))v44;
        v44(v49, v36, v54);
        v45(v31, 0, 1, v37);
        if (v43(v31, 1, v37) != 1)
        {
          uint64_t v39 = v50;
          v33(v50, (char *)v31, v37);
          uint64_t v40 = v52;
          v38(v51, v52, v37);
          v38(v46, v39, v37);
          sub_191CF2E78();
          uint64_t v41 = (void (*)(char *, uint64_t))v11[1];
          v41(v39, v37);
          return ((uint64_t (*)(char *, uint64_t))v41)(v40, v37);
        }
      }
      else
      {
        uint64_t v31 = (uint64_t)v49;
        uint64_t v37 = v54;
        v45((uint64_t)v49, 1, 1, v54);
      }
      ((void (*)(char *, uint64_t))v11[1])(v52, v37);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
    uint64_t v31 = (uint64_t)v9;
  }
  sub_191B01770(v31, &qword_1EB44B520);
  return sub_191CF2E98();
}

uint64_t sub_191BEA484(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF2EA8();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191B28FA4((uint64_t)v5, v8, &qword_1EB44B720);
  return swift_endAccess();
}

void (*sub_191BEA5B8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = sub_191CF2EA8();
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  sub_191BE9E50((uint64_t)v8);
  return sub_191BEA6A8;
}

void sub_191BEA6A8(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 80);
  uint64_t v3 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    uint64_t v8 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void, void, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    uint64_t v9 = v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_191B28FA4((uint64_t)v7, v9, &qword_1EB44B720);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    uint64_t v10 = v2[8];
    uint64_t v11 = v2[9];
    uint64_t v12 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void *, void, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    uint64_t v13 = v12 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_191B28FA4((uint64_t)v7, v13, &qword_1EB44B720);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);

  free(v2);
}

uint64_t sub_191BEA864()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  char v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  uint64_t KeyPath = swift_getKeyPath();
  id v4 = v2;
  unint64_t v5 = sub_191AFA438(KeyPath);

  uint64_t result = swift_release();
  if (!v5) {
    goto LABEL_12;
  }
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_191CF6018();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_10:
    id v7 = (id)MEMORY[0x192FE4B60](0, v5);
    goto LABEL_7;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v5 + 32);
LABEL_7:
    id v8 = v7;
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_191BEA968@<X0>(uint64_t *a1@<X8>)
{
  char v33 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v34 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  unint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v29 - v9);
  sub_191BED134(v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, (uint64_t)v8, type metadata accessor for WidgetArchivableMetadata);
  uint64_t v11 = *(void **)((char *)v8 + v5[10]);
  uint64_t v12 = *(void **)((char *)v8 + v5[9]);
  sub_191BED134((uint64_t)v8 + v5[8], (uint64_t)v10 + v5[8], (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v13 = *(void *)((char *)v8 + v5[11]);
  sub_191BED134((uint64_t)v8 + v5[13], (uint64_t)v10 + v5[13], (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  uint64_t v14 = v5[7];
  uint64_t v15 = (char *)v8 + v14;
  uint64_t v16 = (char *)v10 + v14;
  uint64_t v17 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v15, v17);
  *(void *)((char *)v10 + v5[10]) = v11;
  *(void *)((char *)v10 + v5[9]) = v12;
  *(void *)((char *)v10 + v5[11]) = v13;
  void *v10 = *v8;
  *(void *)((char *)v10 + v5[12]) = MEMORY[0x1E4FBC860];
  id v18 = v11;
  id v19 = v12;
  swift_bridgeObjectRetain();
  unint64_t v32 = type metadata accessor for WidgetArchivableMetadata;
  sub_191BED2B4((uint64_t)v8, type metadata accessor for WidgetArchivableMetadata);
  sub_191BED134((uint64_t)v10, (uint64_t)v8, type metadata accessor for WidgetArchivableMetadata);
  uint64_t v20 = sub_191CF44B8();
  long long v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v30(v34, 1, 1, v20);
  swift_beginAccess();
  int v31 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v21 = type metadata accessor for _TimelineArchivedViewCollection();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 0;
  swift_beginAccess();
  *(unsigned char *)(v22 + 17) = byte_1EB44B790;
  uint64_t v23 = v22 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  uint64_t v24 = sub_191CF2EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v22 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  v30(v22 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, 1, 1, v20);
  sub_191BED1E4((uint64_t)v8, v22 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  swift_beginAccess();
  sub_191B28FA4(v34, v25, &qword_1E92E1AD8);
  swift_endAccess();
  swift_beginAccess();
  *(unsigned char *)(v22 + 17) = v31;
  swift_beginAccess();
  LOBYTE(v13) = *(unsigned char *)(v1 + 16);
  swift_beginAccess();
  *(unsigned char *)(v22 + 16) = v13;
  long long v26 = v32;
  long long v27 = v33;
  v33[3] = v21;
  v27[4] = (uint64_t)&protocol witness table for _TimelineArchivedViewCollection;
  *long long v27 = v22;
  return sub_191BED2B4((uint64_t)v10, v26);
}

uint64_t type metadata accessor for _TimelineArchivedViewCollection()
{
  uint64_t result = qword_1EB447188;
  if (!qword_1EB447188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191BEADD8@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_191BEB000();
  if (v8)
  {
    type metadata accessor for WidgetArchivableMetadata(0);
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_191AF8968(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = 0;
  }
  else
  {
    unint64_t v9 = v7;
  }
  uint64_t v11 = sub_191BEB308(v9, a1, a2);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  else
  {
    uint64_t result = sub_191BEB634(v9, v11, a3);
    if (!v3)
    {
      uint64_t v14 = type metadata accessor for ViewableTimelineEntry();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 0, 1, v14);
    }
  }
  return result;
}

uint64_t sub_191BEAF1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = sub_191BEB308(a1, a2, a3);
  if (v8)
  {
    uint64_t v11 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 1, 1, v11);
  }
  else
  {
    uint64_t result = sub_191BEB634(a1, v7, a4);
    if (!v4)
    {
      uint64_t v10 = type metadata accessor for ViewableTimelineEntry();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a4, 0, 1, v10);
    }
  }
  return result;
}

uint64_t sub_191BEB000()
{
  type metadata accessor for WidgetArchivableMetadata(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF8968(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(v1 + 40 * v2 - 8);
    do
    {
      BOOL v4 = sub_191BED314(v3);
      --v2;
      v3 -= 5;
    }
    while (!v4 && v2 != 0);
    char v5 = !v4;
  }
  else
  {
    char v5 = 1;
  }
  char v6 = v5 & 1;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_191AF8968(v7);
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_191AF8968(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v10 - 1, v2))
  {
    __break(1u);
  }
  else if (v10 - 1 == v2 || !__OFADD__(v2, 1))
  {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_191BEB190()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF8920(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(v1 + 40 * v2 - 8);
    do
    {
      BOOL v4 = sub_191BED094(v3);
      --v2;
      v3 -= 5;
    }
    while (!v4 && v2 != 0);
    char v5 = !v4;
  }
  else
  {
    char v5 = 1;
  }
  char v6 = v5 & 1;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_191AF8920(v7);
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_191AF8920(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v10 - 1, v2))
  {
    __break(1u);
  }
  else if (v10 - 1 == v2 || !__OFADD__(v2, 1))
  {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_191BEB308(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF44B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v3 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  swift_beginAccess();
  sub_191B01614(v14, (uint64_t)v9, &qword_1E92E1AD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v15 = v3 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
    uint64_t v9 = (char *)type metadata accessor for WidgetArchivableMetadata(0);
    id v26 = *(id *)(v15 + *((int *)v9 + 7));
    id v16 = v26;
    uint64_t v17 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, a3);
    char v19 = v18;

    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return (uint64_t)v17;
    }
    id v26 = *(id *)(v15 + *((int *)v9 + 7));
    Swift::Int v20 = WidgetEnvironment.enumeratedCount()();
    Swift::Int v21 = a1 * v20;
    if ((unsigned __int128)(a1 * (__int128)v20) >> 64 == (a1 * v20) >> 63)
    {
      BOOL v22 = __OFADD__(v21, v17);
      v17 += v21;
      if (!v22)
      {
        sub_191BED19C(&qword_1E92E1008, MEMORY[0x1E4F3D720]);
        sub_191CF5788();
        sub_191CF57E8();
        uint64_t v23 = sub_191CF57D8();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if ((uint64_t)v17 >= v23) {
          return 0;
        }
        return (uint64_t)v17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  sub_191B01770((uint64_t)v9, &qword_1E92E1AD8);
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t sub_191BEB634@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v116 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A180);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v115 = (uint64_t)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_191CF3178();
  uint64_t v114 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  uint64_t v119 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for WidgetViewMetadata();
  uint64_t v118 = *(void *)(v112 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v112);
  uint64_t v117 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v121 = (char *)&v107 - v10;
  uint64_t v120 = sub_191CF3AD8();
  uint64_t v113 = *(void *)(v120 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v120);
  long long v110 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v111 = (char *)&v107 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v131 = (char *)&v107 - v15;
  uint64_t v16 = sub_191CF37A8();
  uint64_t v125 = *(void *)(v16 - 8);
  uint64_t v126 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v132 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  uint64_t v18 = *(void *)(v109 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v109);
  uint64_t v108 = (uint64_t)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v134 = (uint64_t)&v107 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (uint64_t)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_191CF44B8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  char v28 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = v3;
  uint64_t v29 = (uint64_t)&v3[OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates];
  swift_beginAccess();
  sub_191B01614(v29, v24, &qword_1E92E1AD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
LABEL_29:
    sub_191B01770(v24, &qword_1E92E1AD8);
    uint64_t result = sub_191CF5FC8();
    __break(1u);
    return result;
  }
  long long v30 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  uint64_t v124 = v25;
  v30(v28, v24, v25);
  uint64_t v31 = OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v32 = type metadata accessor for WidgetArchivableMetadata(0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v33 = *(int *)(v32 + 36);
    uint64_t v130 = &v133[v31];
    uint64_t v34 = *(void *)&v133[v31 + v33];
    if (*(void *)(v34 + 16) > a1)
    {
      uint64_t v129 = (void (*)(char *, uint64_t))v32;
      sub_191BED134(v34+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * a1, v134, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
      if (qword_1EB44A290 == -1) {
        goto LABEL_5;
      }
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_26:
  swift_once();
LABEL_5:
  uint64_t v35 = sub_191CF3858();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EB44C888);
  swift_retain_n();
  uint64_t v36 = sub_191CF3838();
  os_log_type_t v37 = sub_191CF5918();
  uint64_t v24 = v37;
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v123 = v26;
  if (v38)
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 138543362;
    long long v107 = v39 + 4;
    uint64_t v41 = &v130[*((int *)v129 + 6)];
    uint64_t v42 = v28;
    uint64_t v43 = *(void **)&v41[*(int *)(type metadata accessor for BundleStub() + 20)];
    id v137 = v43;
    id v44 = v43;
    sub_191CF5C08();
    void *v40 = v43;
    char v28 = v42;
    swift_release_n();
    _os_log_impl(&dword_191AF4000, v36, (os_log_type_t)v24, "Reading the view archive for %{public}@", v39, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v40, -1, -1);
    MEMORY[0x192FE5F00](v39, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v45 = v131;
  if (qword_1EB44B948 != -1) {
    swift_once();
  }
  id v46 = (id)qword_1EB44CBF8;
  sub_191CF3788();
  sub_191CF5A68();
  sub_191CF3768();
  uint64_t v48 = v127;
  unint64_t v47 = v128;
  sub_191CF44A8();
  if (!v48)
  {
    if ((v47 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v63 = *(void *)&v130[*((int *)v129 + 10)];
      if (*(void *)(v63 + 16) > v47)
      {
        unint64_t v64 = v121;
        sub_191BED134(v63+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v47, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
        *unint64_t v64 = sub_191CF3AA8() & 1;
        v64[1] = sub_191CF3AB8() & 1;
        v64[2] = sub_191CF3AC8() & 1;
        uint64_t v65 = v108;
        sub_191BED134(v134, v108, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        uint64_t v133 = v28;
        sub_191BED134((uint64_t)v64, v117, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
        uint64_t v66 = v113;
        long long v67 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
        uint64_t v68 = v111;
        uint64_t v130 = 0;
        uint64_t v69 = v120;
        v67(v111, v45, v120);
        uint64_t v70 = v114;
        (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v119, v65, v122);
        v67(v110, v68, v69);
        sub_191BED19C(&qword_1E92E1868, MEMORY[0x1E4F3C880]);
        uint64_t v71 = sub_191CF5038();
        long long v72 = *(int **)(v66 + 8);
        uint64_t v128 = v71;
        uint64_t v129 = (void (*)(char *, uint64_t))v72;
        ((void (*)(char *, uint64_t))v72)(v68, v69);
        uint64_t v73 = v109;
        uint64_t v74 = v65 + *(int *)(v109 + 20);
        uint64_t v127 = *(void **)v74;
        uint64_t v113 = *(void *)(v74 + 8);
        LODWORD(v111) = *(unsigned __int8 *)(v74 + 16);
        uint64_t v75 = v115;
        sub_191BED1E4(v117, v115, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v75, 0, 1, v112);
        uint64_t v76 = (uint64_t *)(v65 + *(int *)(v73 + 24));
        uint64_t v77 = *v76;
        unint64_t v78 = v76[1];
        sub_191B169E8(*v76, v78);
        sub_191BED2B4(v65, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        uint64_t v79 = v116;
        (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v116, v119, v122);
        uint64_t v80 = (int *)type metadata accessor for ViewableTimelineEntry();
        *(void *)(v79 + v80[5]) = v128;
        uint64_t v81 = v79 + v80[6];
        uint64_t v82 = v113;
        *(void *)uint64_t v81 = v127;
        *(void *)(v81 + 8) = v82;
        *(unsigned char *)(v81 + 16) = (_BYTE)v111;
        sub_191BED24C(v75, v79 + v80[7]);
        uint64_t v83 = (uint64_t *)(v79 + v80[8]);
        *uint64_t v83 = v77;
        v83[1] = v78;
        sub_191BED2B4((uint64_t)v121, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
        v129(v131, v120);
        sub_191CF5A58();
        unint64_t v84 = v132;
        sub_191CF3768();
        (*(void (**)(char *, uint64_t))(v125 + 8))(v84, v126);
        sub_191BED2B4(v134, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v133, v124);
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  id v137 = v48;
  id v49 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
  sub_191BB2F2C();
  if (swift_dynamicCast())
  {

    uint64_t v50 = v136;
    swift_retain_n();
    id v51 = v50;
    uint64_t v52 = sub_191CF3838();
    os_log_type_t v53 = sub_191CF5928();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      LODWORD(v131) = v54;
      uint64_t v56 = v55;
      uint64_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 138543618;
      uint64_t v58 = &v130[*((int *)v129 + 6)];
      uint64_t v59 = *(int *)(type metadata accessor for BundleStub() + 20);
      uint64_t v133 = v28;
      unint64_t v60 = *(void **)&v58[v59];
      id v135 = v60;
      id v61 = v60;
      sub_191CF5C08();
      *uint64_t v57 = v60;
      swift_release_n();
      *(_WORD *)(v56 + 12) = 2112;
      id v135 = v51;
      id v62 = v51;
      sub_191CF5C08();
      v57[1] = v51;

      char v28 = v133;
      _os_log_impl(&dword_191AF4000, v52, (os_log_type_t)v131, "Encountered an error reading the view archive for %{public}@; error: %@",
        (uint8_t *)v56,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v57, -1, -1);
      MEMORY[0x192FE5F00](v56, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v103 = v125;
    uint64_t v102 = v126;
    uint64_t v104 = v123;
    swift_willThrow();
  }
  else
  {

    swift_retain();
    id v86 = v48;
    swift_retain();
    id v87 = v48;
    uint64_t v88 = sub_191CF3838();
    os_log_type_t v89 = sub_191CF5928();
    int v90 = v89;
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v91 = swift_slowAlloc();
      LODWORD(v133) = v90;
      uint64_t v92 = v91;
      uint64_t v93 = (char *)swift_slowAlloc();
      uint64_t v131 = v93;
      *(_DWORD *)uint64_t v92 = 138543618;
      uint64_t v128 = v92 + 4;
      uint64_t v94 = &v130[*((int *)v129 + 6)];
      uint64_t v95 = v88;
      uint64_t v96 = v28;
      uint64_t v97 = *(void **)&v94[*(int *)(type metadata accessor for BundleStub() + 20)];
      id v137 = v97;
      id v98 = v97;
      sub_191CF5C08();
      *(void *)uint64_t v93 = v97;
      char v28 = v96;
      uint64_t v88 = v95;
      swift_release_n();
      *(_WORD *)(v92 + 12) = 2114;
      id v99 = v48;
      long long v100 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v137 = v100;
      sub_191CF5C08();
      long long v101 = v131;
      *((void *)v131 + 1) = v100;

      _os_log_impl(&dword_191AF4000, v95, (os_log_type_t)v133, "Encountered an error reading the view archive for %{public}@; error: %{public}@",
        (uint8_t *)v92,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v101, -1, -1);
      MEMORY[0x192FE5F00](v92, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    uint64_t v103 = v125;
    uint64_t v102 = v126;
    uint64_t v104 = v123;

    swift_willThrow();
  }
  uint64_t v105 = v124;
  sub_191CF5A58();
  long long v106 = v132;
  sub_191CF3768();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v106, v102);
  sub_191BED2B4(v134, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v28, v105);
}

uint64_t _TimelineArchivedViewCollection.deinit()
{
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange, &qword_1EB44B720);
  sub_191BED2B4(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, &qword_1E92E1AD8);
  return v0;
}

uint64_t _TimelineArchivedViewCollection.__deallocating_deinit()
{
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange, &qword_1EB44B720);
  sub_191BED2B4(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, &qword_1E92E1AD8);

  return swift_deallocClassInstance();
}

uint64_t sub_191BEC730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_191BED134(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

id sub_191BEC78C()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 32));

  return v2;
}

uint64_t sub_191BEC7D8()
{
  return sub_191BEA864();
}

id sub_191BEC7FC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = *(void **)(v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  *a1 = v4;

  return v4;
}

uint64_t sub_191BEC850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 20);
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a1, v4, v5);
}

uint64_t sub_191BEC8D8@<X0>(uint64_t a1@<X8>)
{
  return sub_191BE9E50(a1);
}

uint64_t sub_191BEC8FC()
{
  type metadata accessor for WidgetArchivableMetadata(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF8968(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_191BEC954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_191BED134(v3 + *(int *)(v4 + 44), a1, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
}

uint64_t sub_191BEC9B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_191BEC9F8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_191BECA38@<X0>(uint64_t *a1@<X8>)
{
  return sub_191BEA968(a1);
}

uint64_t sub_191BECA5C@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_191BEADD8(a1, a2, a3);
}

uint64_t sub_191BECA80@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_191BECAC8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_191BECB0C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_191BECB54(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 17) = v2;
  return result;
}

uint64_t sub_191BECB98@<X0>(uint64_t a1@<X8>)
{
  return sub_191BE9E50(a1);
}

uint64_t sub_191BECBC0()
{
  return type metadata accessor for _TimelineArchivedViewCollection();
}

void sub_191BECBC8()
{
  sub_191BED040(319, (unint64_t *)&unk_1EB44B728, MEMORY[0x1E4F26E60]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for WidgetArchivableMetadata(319);
    if (v1 <= 0x3F)
    {
      sub_191BED040(319, &qword_1E92E1AE0, MEMORY[0x1E4F3D720]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for _TimelineArchivedViewCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _TimelineArchivedViewCollection);
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.environment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.widget.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.reloadPolicy.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.creationDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.originatingBundle.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.entries.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.metrics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.copyWithoutRenderData()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

void sub_191BED040(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_191BED094(void *a1)
{
  return sub_191CE393C(a1);
}

uint64_t sub_191BED0B4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = a3 + 40 * v4 - 8;
    do
    {
      char v7 = a1(v6);
      if (v3) {
        break;
      }
      --v4;
      v6 -= 40;
    }
    while (!(v7 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_191BED134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BED19C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191BED1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191BED24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BED2B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_191BED314(void *a1)
{
  return sub_191BED094(a1);
}

double ActivityViewEntryMetadata.metrics.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

double ActivityViewEntryMetadata.metrics.setter(uint64_t a1)
{
  double result = *(double *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  *(double *)(v1 + 32) = result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.metrics.modify())()
{
  return nullsub_1;
}

uint64_t ActivityViewEntryMetadata.containsPrivacyRedactions.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ActivityViewEntryMetadata.containsPrivacyRedactions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.containsPrivacyRedactions.modify())()
{
  return nullsub_1;
}

__n128 ActivityViewEntryMetadata.backgroundTintColor.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 60);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 61);
  __n128 result = *(__n128 *)(v1 + 44);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 ActivityViewEntryMetadata.backgroundTintColor.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  unsigned __int8 v3 = a1[1].n128_u8[1];
  __n128 result = *a1;
  *(__n128 *)(v1 + 44) = *a1;
  *(unsigned char *)(v1 + 60) = v2;
  *(unsigned char *)(v1 + 61) = v3;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.backgroundTintColor.modify())()
{
  return nullsub_1;
}

__n128 ActivityViewEntryMetadata.textColor.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[5].n128_u8[0];
  unsigned __int8 v3 = v1[5].n128_u8[1];
  __n128 result = v1[4];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 ActivityViewEntryMetadata.textColor.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  unsigned __int8 v3 = a1[1].n128_u8[1];
  __n128 result = *a1;
  v1[4] = *a1;
  v1[5].n128_u8[0] = v2;
  v1[5].n128_u8[1] = v3;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.textColor.modify())()
{
  return nullsub_1;
}

void ActivityViewEntryMetadata.archivedFamily.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 82);
}

unsigned char *ActivityViewEntryMetadata.archivedFamily.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 82) = *result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.archivedFamily.modify())()
{
  return nullsub_1;
}

unint64_t sub_191BED494(char a1)
{
  unint64_t result = 0x7363697274656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6F6C6F4374786574;
      break;
    case 4:
      unint64_t result = 0x6465766968637261;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191BED560()
{
  return sub_191BED494(*v0);
}

uint64_t sub_191BED568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191BEE314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191BED590(uint64_t a1)
{
  unint64_t v2 = sub_191BEDDD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BED5CC(uint64_t a1)
{
  unint64_t v2 = sub_191BEDDD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityViewEntryMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1848);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v26 = v1[1];
  long long v27 = v8;
  uint64_t v9 = *((void *)v1 + 4);
  int v25 = *((unsigned __int8 *)v1 + 40);
  uint64_t v10 = *(void *)((char *)v1 + 44);
  uint64_t v23 = *(void *)((char *)v1 + 52);
  uint64_t v24 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 60);
  int v21 = *((unsigned __int8 *)v1 + 61);
  int v22 = v10;
  uint64_t v11 = *((void *)v1 + 9);
  *(void *)&long long v18 = *((void *)v1 + 8);
  *((void *)&v18 + 1) = v11;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 80);
  int v19 = *((unsigned __int8 *)v1 + 81);
  int v20 = v10;
  char v12 = *((unsigned char *)v1 + 82);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BEDDD4();
  sub_191CF6528();
  long long v29 = v27;
  long long v30 = v26;
  uint64_t v31 = v9;
  char v28 = 0;
  sub_191BEDE28();
  sub_191CF6278();
  if (!v2)
  {
    char v13 = v22;
    uint64_t v15 = v23;
    uint64_t v14 = v24;
    LOBYTE(v29) = 1;
    sub_191CF6228();
    *(void *)&long long v29 = v14;
    *((void *)&v29 + 1) = v15;
    LOBYTE(v30) = v13;
    BYTE1(v30) = v21;
    char v28 = 2;
    sub_191BEDE7C();
    sub_191CF6208();
    long long v29 = v18;
    LOBYTE(v30) = v20;
    BYTE1(v30) = v19;
    char v28 = 3;
    sub_191CF6208();
    LOBYTE(v29) = v12;
    char v28 = 4;
    sub_191BEDED0();
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityViewEntryMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0C30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BEDDD4();
  sub_191CF6508();
  if (!v2)
  {
    char v27 = 0;
    sub_191BEDF24();
    sub_191CF6178();
    uint64_t v9 = v28;
    uint64_t v10 = v29;
    uint64_t v11 = v30;
    uint64_t v12 = v31;
    uint64_t v13 = v32;
    LOBYTE(v28) = 1;
    char v14 = sub_191CF6128();
    char v27 = 2;
    sub_191BEDF78();
    sub_191CF6108();
    uint64_t v25 = v29;
    uint64_t v26 = v28;
    int v23 = BYTE1(v30);
    int v24 = v30;
    char v27 = 3;
    sub_191CF6108();
    uint64_t v16 = v26;
    uint64_t v21 = v29;
    uint64_t v22 = v28;
    int v19 = BYTE1(v30);
    int v20 = v30;
    char v27 = 4;
    sub_191BEDFCC();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v17 = v28;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v13;
    *(unsigned char *)(a2 + 40) = v14 & 1;
    *(void *)(a2 + 44) = v16;
    *(void *)(a2 + 52) = v25;
    *(unsigned char *)(a2 + 60) = v24;
    *(unsigned char *)(a2 + 61) = v23;
    uint64_t v18 = v21;
    *(void *)(a2 + 64) = v22;
    *(void *)(a2 + 72) = v18;
    *(unsigned char *)(a2 + 80) = v20;
    *(unsigned char *)(a2 + 81) = v19;
    *(unsigned char *)(a2 + 82) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191BEDBD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityViewEntryMetadata.init(from:)(a1, a2);
}

uint64_t sub_191BEDBF0(void *a1)
{
  return ActivityViewEntryMetadata.encode(to:)(a1);
}

uint64_t _s9WidgetKit25ActivityViewEntryMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 60);
  char v5 = *(unsigned char *)(a1 + 61);
  double v6 = *(double *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 60);
  char v9 = *(unsigned char *)(a2 + 61);
  char v12 = *(unsigned char *)(a2 + 80);
  char v13 = *(unsigned char *)(a1 + 80);
  char v16 = *(unsigned char *)(a2 + 81);
  char v17 = *(unsigned char *)(a1 + 81);
  int v14 = *(unsigned __int8 *)(a2 + 82);
  int v15 = *(unsigned __int8 *)(a1 + 82);
  BOOL v10 = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  uint64_t result = 0;
  if (v10 && v2 == v6 && ((v3 ^ v7) & 1) == 0)
  {
    if (v5)
    {
      if (v9) {
        goto LABEL_6;
      }
    }
    else if ((v9 & 1) == 0)
    {
      if (v4)
      {
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      else if ((v8 & 1) != 0 || (sub_191CF4DD8() & 1) == 0)
      {
        return 0;
      }
LABEL_6:
      if (v17)
      {
        if (v16) {
          return v15 ^ v14 ^ 1u;
        }
      }
      else if ((v16 & 1) == 0)
      {
        if (v13)
        {
          if (v12) {
            return v15 ^ v14 ^ 1u;
          }
        }
        else if (v12 & 1) == 0 && (sub_191CF4DD8())
        {
          return v15 ^ v14 ^ 1u;
        }
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_191BEDDD4()
{
  unint64_t result = qword_1E92E1DB8;
  if (!qword_1E92E1DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DB8);
  }
  return result;
}

unint64_t sub_191BEDE28()
{
  unint64_t result = qword_1E92E1500[0];
  if (!qword_1E92E1500[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E1500);
  }
  return result;
}

unint64_t sub_191BEDE7C()
{
  unint64_t result = qword_1E92E1400;
  if (!qword_1E92E1400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1400);
  }
  return result;
}

unint64_t sub_191BEDED0()
{
  unint64_t result = qword_1E92E1428;
  if (!qword_1E92E1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1428);
  }
  return result;
}

unint64_t sub_191BEDF24()
{
  unint64_t result = qword_1E92E0B38;
  if (!qword_1E92E0B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0B38);
  }
  return result;
}

unint64_t sub_191BEDF78()
{
  unint64_t result = qword_1E92E0AE8;
  if (!qword_1E92E0AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0AE8);
  }
  return result;
}

unint64_t sub_191BEDFCC()
{
  unint64_t result = qword_1E92E0AF8;
  if (!qword_1E92E0AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0AF8);
  }
  return result;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityViewEntryMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 83)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityViewEntryMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 83) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 83) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewEntryMetadata()
{
  return &type metadata for ActivityViewEntryMetadata;
}

unsigned char *storeEnumTagSinglePayload for ActivityViewEntryMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BEE1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewEntryMetadata.CodingKeys()
{
  return &type metadata for ActivityViewEntryMetadata.CodingKeys;
}

unint64_t sub_191BEE210()
{
  unint64_t result = qword_1E92E43D8;
  if (!qword_1E92E43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E43D8);
  }
  return result;
}

unint64_t sub_191BEE268()
{
  unint64_t result = qword_1E92E1DC8;
  if (!qword_1E92E1DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DC8);
  }
  return result;
}

unint64_t sub_191BEE2C0()
{
  unint64_t result = qword_1E92E1DC0;
  if (!qword_1E92E1DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DC0);
  }
  return result;
}

uint64_t sub_191BEE314(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7363697274656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000191D0DBF0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000191D0FDB0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xEE00796C696D6146)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t ControlAffordances.init(tint:status:actionHint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t destroy for ControlAffordances(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32))
  {
    sub_191B5D42C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 64))
  {
    sub_191B5D42C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ControlAffordances(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  unsigned int v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  if (!v5)
  {
    long long v13 = *(_OWORD *)(a2 + 24);
    *unsigned int v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    uint64_t v9 = *(void *)(a2 + 64);
    if (v9) {
      goto LABEL_3;
    }
LABEL_5:
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_191BB4E38(v6, v7, v8);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  uint64_t v9 = *(void *)(a2 + 64);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_191BB4E38(v10, v11, v12);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ControlAffordances(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  unsigned int v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v8 = *(void *)(a2 + 16);
      char v9 = *(unsigned char *)(a2 + 24);
      sub_191BB4E38(v7, v8, v9);
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      char v12 = *(unsigned char *)(a1 + 24);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v8;
      *(unsigned char *)(a1 + 24) = v9;
      sub_191B5D42C(v10, v11, v12);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_191BEE874(a1 + 8);
      long long v16 = *(_OWORD *)(a2 + 24);
      *unsigned int v4 = *v5;
      *(_OWORD *)(a1 + 24) = v16;
    }
  }
  else if (v6)
  {
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = *(void *)(a2 + 16);
    char v15 = *(unsigned char *)(a2 + 24);
    sub_191BB4E38(v13, v14, v15);
    *(void *)(a1 + 8) = v13;
    *(void *)(a1 + 16) = v14;
    *(unsigned char *)(a1 + 24) = v15;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 24);
    *unsigned int v4 = *v5;
    *(_OWORD *)(a1 + 24) = v17;
  }
  uint64_t v18 = (_OWORD *)(a1 + 40);
  int v19 = (_OWORD *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v22 = *(void *)(a2 + 48);
      char v23 = *(unsigned char *)(a2 + 56);
      sub_191BB4E38(v21, v22, v23);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void *)(a1 + 48);
      char v26 = *(unsigned char *)(a1 + 56);
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v22;
      *(unsigned char *)(a1 + 56) = v23;
      sub_191B5D42C(v24, v25, v26);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_191BEE874(a1 + 40);
      long long v30 = *(_OWORD *)(a2 + 56);
      *uint64_t v18 = *v19;
      *(_OWORD *)(a1 + 56) = v30;
    }
  }
  else if (v20)
  {
    uint64_t v27 = *(void *)(a2 + 40);
    uint64_t v28 = *(void *)(a2 + 48);
    char v29 = *(unsigned char *)(a2 + 56);
    sub_191BB4E38(v27, v28, v29);
    *(void *)(a1 + 40) = v27;
    *(void *)(a1 + 48) = v28;
    *(unsigned char *)(a1 + 56) = v29;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 56);
    *uint64_t v18 = *v19;
    *(_OWORD *)(a1 + 56) = v31;
  }
  return a1;
}

uint64_t sub_191BEE874(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ControlAffordances(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  if (*(void *)(a1 + 32))
  {
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4)
    {
      char v5 = *(unsigned char *)(a2 + 24);
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = *(void *)(a1 + 16);
      char v8 = *(unsigned char *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = v5;
      sub_191B5D42C(v6, v7, v8);
      *(void *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_191BEE874(a1 + 8);
  }
  long long v9 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v9;
LABEL_6:
  if (!*(void *)(a1 + 64))
  {
LABEL_10:
    long long v15 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v15;
    return a1;
  }
  uint64_t v10 = *(void *)(a2 + 64);
  if (!v10)
  {
    sub_191BEE874(a1 + 40);
    goto LABEL_10;
  }
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  char v14 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v11;
  sub_191B5D42C(v12, v13, v14);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAffordances(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlAffordances(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlAffordances()
{
  return &type metadata for ControlAffordances;
}

uint64_t sub_191BEEAAC()
{
  return swift_initClassMetadata2();
}

void sub_191BEEAF0()
{
  sub_191CF5BA8();

  JUMPOUT(0x192FE4BD0);
}

uint64_t sub_191BEEB84()
{
  sub_191BEEAF0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AtomicBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ActivityWidgetRequest.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  uint64_t v4 = sub_191CF3378();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ActivityWidgetRequest.defaultPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  sub_191B15F88(v1, *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8));
  return v1;
}

uint64_t ActivityWidgetRequest.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191BF6A08(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, a1, type metadata accessor for ActivityMetricsDefinition);
}

uint64_t ActivityWidgetRequest.PayloadMetadata.payloadID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityWidgetRequest.PayloadMetadata.isStale.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ActivityWidgetRequest.PayloadMetadata.isAlerting.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ActivityWidgetRequest.PayloadMetadata.isChatty.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t ActivityWidgetRequest.payloadMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 8);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 17);
  char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 18);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  *(unsigned char *)(a1 + 18) = v5;
  return swift_bridgeObjectRetain();
}

id ActivityWidgetRequest.fileHandle.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
}

id ActivityWidgetRequest.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  *a1 = v2;
  return v2;
}

void ActivityWidgetRequest.archiveVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
}

void sub_191BEED74(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = (void **)(*a2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  char v4 = *v3;
  *char v3 = v2;
  id v5 = v2;
}

id sub_191BEEDD8@<X0>(void **a1@<X8>)
{
  char v3 = (void **)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  char v4 = *v3;
  *a1 = *v3;

  return v4;
}

void sub_191BEEE38(void **a1)
{
  uint64_t v2 = *a1;
  char v3 = (void **)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  char v4 = *v3;
  *char v3 = v2;
}

uint64_t (*sub_191BEEE94())()
{
  return j__swift_endAccess;
}

unint64_t sub_191BEEEF0(char a1)
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646E6148656C6966;
      break;
    case 2:
      unint64_t result = 0x7363697274656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x50746C7561666564;
      break;
    case 5:
      unint64_t result = 0x656C6174537369;
      break;
    case 6:
      unint64_t result = 0x4964616F6C796170;
      break;
    case 7:
      unint64_t result = 0x697472656C417369;
      break;
    case 8:
      unint64_t result = 0x5665766968637261;
      break;
    case 9:
      unint64_t result = 0x7974746168437369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191BEF088(char a1)
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646E6148656C6966;
      break;
    case 2:
      unint64_t result = 0x7363697274656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x50746C7561666564;
      break;
    case 5:
      unint64_t result = 0x656C6174537369;
      break;
    case 6:
      unint64_t result = 0x4964616F6C796170;
      break;
    case 7:
      unint64_t result = 0x697472656C417369;
      break;
    case 8:
      unint64_t result = 0x5665766968637261;
      break;
    case 9:
      unint64_t result = 0x7974746168437369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191BEF220(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_191BEEEF0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_191BEEEF0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191BEF2AC()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191BEEEF0(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191BEF310()
{
  sub_191BEEEF0(*v0);
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BEF364()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191BEEEF0(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191BEF3C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191BF18E8();
  *a1 = result;
  return result;
}

unint64_t sub_191BEF3F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191BEEEF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_191BEF420()
{
  return sub_191BEF088(*v0);
}

uint64_t sub_191BEF428@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191BF18E8();
  *a1 = result;
  return result;
}

void sub_191BEF450(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_191BEF45C(uint64_t a1)
{
  unint64_t v2 = sub_191BF298C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BEF498(uint64_t a1)
{
  unint64_t v2 = sub_191BF298C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191BEF4D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BF68F8();
  sub_191CF6528();
  LOBYTE(v13) = 0;
  sub_191CF3378();
  sub_191BF29E0(&qword_1E92E0A98, MEMORY[0x1E4F17BF8]);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
    LOBYTE(v13) = 1;
    type metadata accessor for ActivityMetricsDefinition(0);
    sub_191BF29E0(&qword_1E92E0B68, (void (*)(uint64_t))type metadata accessor for ActivityMetricsDefinition);
    sub_191CF6278();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    char v12 = 2;
    sub_191B718A4();
    sub_191CF6278();
    LOBYTE(v13) = 3;
    sub_191CF6228();
    LOBYTE(v13) = 4;
    sub_191CF6218();
    LOBYTE(v13) = 5;
    sub_191CF6228();
    LOBYTE(v13) = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    char v12 = 6;
    sub_191BF2A9C();
    sub_191CF6208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191BEF7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191CF3378();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v29 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E17F0);
  uint64_t v26 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(v9 + 40);
  v11[v12] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BF68F8();
  long long v30 = v7;
  uint64_t v13 = v32;
  sub_191CF6508();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v27;
  uint64_t v14 = (uint64_t)v28;
  uint64_t v32 = v12;
  uint64_t v16 = v26;
  LOBYTE(v33) = 0;
  sub_191BF29E0((unint64_t *)&unk_1E92E1180, MEMORY[0x1E4F17BF8]);
  sub_191CF6178();
  long long v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v18 = v29;
  char v29 = (char *)v4;
  v17(v11, v18, v4);
  LOBYTE(v33) = 1;
  sub_191BF29E0(&qword_1E92E1668, (void (*)(uint64_t))type metadata accessor for ActivityMetricsDefinition);
  sub_191CF6178();
  sub_191BF694C(v14, (uint64_t)&v11[v8[5]], type metadata accessor for ActivityMetricsDefinition);
  char v34 = 2;
  sub_191B71714();
  sub_191CF6178();
  *(_OWORD *)&v11[v8[6]] = v33;
  LOBYTE(v33) = 3;
  v11[v8[7]] = sub_191CF6128() & 1;
  LOBYTE(v33) = 4;
  uint64_t v19 = sub_191CF6118();
  uint64_t v20 = (uint64_t *)&v11[v8[8]];
  uint64_t *v20 = v19;
  v20[1] = v21;
  LOBYTE(v33) = 5;
  v11[v8[9]] = sub_191CF6128() & 1;
  char v34 = 6;
  sub_191BF69B4();
  sub_191CF6108();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v31);
  v11[v32] = v33;
  sub_191BF6A08((uint64_t)v11, v24, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_191BF2B70((uint64_t)v11, type metadata accessor for ActivityWidgetRequest.CodingProxy);
}

uint64_t sub_191BEFDC8()
{
  uint64_t result = 0x7470697263736564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7363697274656DLL;
      break;
    case 2:
      uint64_t result = 0x50746C7561666564;
      break;
    case 3:
      uint64_t result = 0x656C6174537369;
      break;
    case 4:
      uint64_t result = 0x4964616F6C796170;
      break;
    case 5:
      uint64_t result = 0x697472656C417369;
      break;
    case 6:
      uint64_t result = 0x5665766968637261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191BEFED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191BF1934(a1, a2);
  *a3 = result;
  return result;
}

void sub_191BEFEFC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_191BEFF08(uint64_t a1)
{
  unint64_t v2 = sub_191BF68F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BEFF44(uint64_t a1)
{
  unint64_t v2 = sub_191BF68F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191BEFF80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191BEF7E8(a1, a2);
}

uint64_t sub_191BEFF98(void *a1)
{
  return sub_191BEF4D4(a1);
}

id ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, char a7, uint64_t a8, uint64_t a9, char *a10, char a11, char a12)
{
  id v18 = objc_allocWithZone(v12);
  return ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

id ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, char a7, uint64_t a8, uint64_t a9, char *a10, char a11, char a12)
{
  uint64_t v17 = *a6;
  char v18 = *a10;
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment] = 0;
  uint64_t v19 = &v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor];
  uint64_t v20 = sub_191CF3378();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a1, v20);
  sub_191BF6A08(a2, (uint64_t)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  uint64_t v22 = &v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  *uint64_t v22 = a3;
  v22[1] = a4;
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = a5;
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v17;
  v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v18;
  uint64_t v23 = &v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  *(void *)uint64_t v23 = a8;
  *((void *)v23 + 1) = a9;
  v23[16] = a7;
  v23[17] = a11;
  v23[18] = a12;
  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  id v24 = objc_msgSendSuper2(&v29, sel_init);
  sub_191BF2B70(a2, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v20);
  return v24;
}

uint64_t type metadata accessor for ActivityWidgetRequest(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44C400);
}

id ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void **a6, void **a7, char a8, long long a9, char *a10, char a11, char a12)
{
  id v19 = objc_allocWithZone(v12);
  id v20 = sub_191BF1C84(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, a11, a12);

  sub_191B1603C(a3, a4);
  return v20;
}

id ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void **a6, void **a7, char a8, uint64_t a9, uint64_t a10, char *a11, char a12, char a13)
{
  id v16 = sub_191BF1C84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);

  sub_191B1603C(a3, a4);
  return v16;
}

char *ActivityWidgetRequest.__allocating_init(from:)(void *a1)
{
  return sub_191BF1EEC(a1);
}

uint64_t sub_191BF03B8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4470);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BF298C();
  sub_191CF6528();
  *(void *)&long long v23 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  LOBYTE(v22[0]) = 0;
  sub_191B717BC();
  sub_191CF6278();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v23) = 2;
  type metadata accessor for ActivityMetricsDefinition(0);
  sub_191BF29E0(&qword_1E92E0B68, (void (*)(uint64_t))type metadata accessor for ActivityMetricsDefinition);
  sub_191CF6278();
  long long v23 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  LOBYTE(v22[0]) = 4;
  sub_191B718A4();
  sub_191CF6278();
  LOBYTE(v23) = 3;
  sub_191CF3378();
  sub_191BF29E0(&qword_1E92E0A98, MEMORY[0x1E4F17BF8]);
  sub_191CF6278();
  LOBYTE(v23) = 5;
  sub_191CF6228();
  LOBYTE(v23) = 7;
  sub_191CF6228();
  LOBYTE(v23) = 9;
  sub_191CF6228();
  int v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
  if (v9 != 2)
  {
    LOBYTE(v23) = v9 & 1;
    LOBYTE(v22[0]) = 8;
    sub_191BF2A9C();
    sub_191CF6278();
  }
  uint64_t v10 = (id *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  v22[0] = *v10;
  char v21 = 10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4480);
  sub_191BF2A28();
  sub_191CF6278();
  uint64_t v12 = self;
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
  v22[0] = 0;
  id v14 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v13, 1, v22);
  id v15 = v22[0];
  if (!v14)
  {
    id v19 = v15;
    sub_191CF2FE8();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v16 = (void *)sub_191CF30C8();
  char v18 = v17;

  v22[0] = v16;
  v22[1] = v18;
  char v21 = 1;
  sub_191CF6278();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_191B1603C((uint64_t)v16, (unint64_t)v18);
}

char *ActivityWidgetRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ActivityWidgetRequest.init(coder:)(a1);
}

char *ActivityWidgetRequest.init(coder:)(void *a1)
{
  uint64_t v3 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v74 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_191CF3378();
  uint64_t v73 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E1368);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  uint64_t v10 = (void (**)(char *, void, uint64_t, int *))*((void *)v9 - 1);
  MEMORY[0x1F4188790](v9);
  uint64_t v77 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WidgetEnvironment.Storage();
  id v13 = v1;
  uint64_t v72 = v12;
  id v14 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, &qword_1EB44C380);
  id v15 = (void *)sub_191CF5AC8();
  id v16 = (void *)sub_191CF5318();
  LODWORD(v71) = objc_msgSend(a1, sel_decodeBoolForKey_, v16);

  uint64_t v17 = (void *)sub_191CF5318();
  unsigned int v18 = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

  id v19 = (void *)sub_191CF5318();
  unsigned int v20 = objc_msgSend(a1, sel_decodeBoolForKey_, v19);

  sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  uint64_t v21 = sub_191CF5AC8();
  if (!v21) {
    goto LABEL_5;
  }
  uint64_t v22 = (void *)v21;
  uint64_t v70 = v10;
  uint64_t v67 = sub_191CF5338();
  uint64_t v24 = v23;

  sub_191B016E0(0, &qword_1EB44C680);
  uint64_t v25 = sub_191CF5AC8();
  if (!v25)
  {
    swift_bridgeObjectRelease();
LABEL_5:

LABEL_6:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v26 = (void *)v25;
  uint64_t v68 = v24;
  unsigned int v65 = v20;
  unsigned int v66 = v18;
  uint64_t v27 = sub_191CF30C8();
  unint64_t v29 = v28;

  sub_191CF2F88();
  swift_allocObject();
  uint64_t v30 = sub_191CF2F78();
  sub_191BF29E0((unint64_t *)&unk_1E92E1358, (void (*)(uint64_t))type metadata accessor for ActivityWidgetRequest.CodingProxy);
  unint64_t v69 = v29;
  sub_191CF2F58();
  uint64_t v63 = v30;
  uint64_t v64 = v27;
  v70[7](v8, 0, 1, v9);
  uint64_t v33 = v77;
  sub_191BF694C((uint64_t)v8, v77, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  if (!v14)
  {
    swift_release();
    swift_bridgeObjectRelease();

    sub_191B1603C(v64, v69);
    id v14 = v13;
LABEL_14:

    sub_191BF2B70(v33, type metadata accessor for ActivityWidgetRequest.CodingProxy);
    goto LABEL_6;
  }
  if (!v15)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_191B1603C(v64, v69);

    a1 = v13;
    goto LABEL_14;
  }
  uint64_t v70 = v14;
  id v62 = v15;

  uint64_t v34 = v73;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  uint64_t v36 = v75;
  v35(v75, v33, v76);
  uint64_t v37 = v74;
  sub_191BF6A08(v33 + v9[5], v74, type metadata accessor for ActivityMetricsDefinition);
  BOOL v38 = (uint64_t *)(v33 + v9[6]);
  uint64_t v40 = *v38;
  unint64_t v39 = v38[1];
  uint64_t v60 = v40;
  unint64_t v59 = v39;
  int v61 = *(unsigned __int8 *)(v33 + v9[10]);
  uint64_t v41 = (objc_class *)type metadata accessor for ActivityWidgetRequest(0);
  uint64_t v42 = objc_allocWithZone(v41);
  *(void *)&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment] = 0;
  uint64_t v43 = v36;
  uint64_t v44 = v76;
  v35(&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor], (uint64_t)v43, v76);
  sub_191BF6A08(v37, (uint64_t)&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  uint64_t v45 = (uint64_t *)&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  uint64_t v46 = v60;
  unint64_t v47 = v59;
  uint64_t *v45 = v60;
  v45[1] = v47;
  uint64_t v48 = v62;
  *(void *)&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = v62;
  id v49 = v70;
  *(void *)&v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v70;
  v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v61;
  uint64_t v50 = &v42[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  uint64_t v51 = v68;
  *(void *)uint64_t v50 = v67;
  *((void *)v50 + 1) = v51;
  v50[16] = (char)v71;
  v50[17] = v66;
  v50[18] = v65;
  id v71 = v49;
  id v52 = v48;
  sub_191B15F88(v46, v47);
  v78.receiver = v42;
  v78.super_class = v41;
  id v53 = objc_msgSendSuper2(&v78, sel_init);
  sub_191BF2B70(v37, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v75, v44);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v31 = (char *)v53;
  uint64_t v54 = sub_191CF5AC8();
  swift_release();
  sub_191B1603C(v64, v69);

  id v55 = v71;
  sub_191BF2B70(v77, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  if (v54)
  {
    uint64_t v56 = (void **)&v31[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
    swift_beginAccess();
    uint64_t v57 = *v56;
    *uint64_t v56 = (void *)v54;
  }
  return v31;
}

uint64_t sub_191BF11B0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  char v8 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
  uint64_t v10 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  uint64_t v12 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  int v38 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  id v13 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeBool_forKey_, v12, v13);

  uint64_t v14 = v11[1];
  uint64_t v37 = *v11;
  id v15 = (void *)sub_191CF5318();
  id v16 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  uint64_t v17 = *((unsigned __int8 *)v11 + 17);
  unsigned int v18 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeBool_forKey_, v17, v18);

  uint64_t v19 = *((unsigned __int8 *)v11 + 18);
  unsigned int v20 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeBool_forKey_, v19, v20);

  sub_191CF2FC8();
  swift_allocObject();
  sub_191CF2FB8();
  sub_191CF2F98();
  uint64_t v21 = v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  uint64_t v22 = sub_191CF3378();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v6, v21, v22);
  sub_191BF6A08(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, (uint64_t)&v6[v4[5]], type metadata accessor for ActivityMetricsDefinition);
  char v23 = *(unsigned char *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  unint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
  uint64_t v26 = (uint64_t *)&v6[v4[6]];
  *uint64_t v26 = v24;
  v26[1] = v25;
  v6[v4[7]] = v38;
  uint64_t v27 = &v6[v4[8]];
  *(void *)uint64_t v27 = v37;
  *((void *)v27 + 1) = v14;
  v6[v4[9]] = v17;
  v6[v4[10]] = v23;
  sub_191B15F88(v24, v25);
  sub_191BF29E0(&qword_1E92E0AC0, (void (*)(uint64_t))type metadata accessor for ActivityWidgetRequest.CodingProxy);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_191CF2FA8();
  unint64_t v30 = v29;
  sub_191BF2B70((uint64_t)v6, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  uint64_t v31 = (void *)sub_191CF30A8();
  uint64_t v32 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v31, v32);

  uint64_t v33 = (id *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  if (*v33)
  {
    id v34 = *v33;
    uint64_t v35 = (void *)sub_191CF5318();
    objc_msgSend(a1, sel_encodeObject_forKey_, v34, v35);
    sub_191B1603C(v28, v30);
  }
  else
  {
    sub_191B1603C(v28, v30);
  }
  return swift_release();
}

id ActivityWidgetRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ActivityWidgetRequest.init()()
{
}

id ActivityWidgetRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_191BF1898@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_191BF1EEC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191BF18C4(void *a1)
{
  return sub_191BF03B8(a1);
}

uint64_t sub_191BF18E8()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_191BF1934(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50746C7561666564 && a2 == 0xEE0064616F6C7961 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C6174537369 && a2 == 0xE700000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4964616F6C796170 && a2 == 0xE900000000000044 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697472656C417369 && a2 == 0xEA0000000000676ELL || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

id sub_191BF1C84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void **a6, void **a7, char a8, uint64_t a9, uint64_t a10, char *a11, char a12, char a13)
{
  uint64_t v19 = *a6;
  id v34 = *a7;
  char v35 = *a11;
  unsigned int v20 = (void **)&v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment] = 0;
  uint64_t v21 = &v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor];
  uint64_t v22 = sub_191CF3378();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v37 = v22;
  uint64_t v38 = a1;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  (*(void (**)(char *, uint64_t))(v23 + 16))(v21, v24);
  sub_191BF6A08(a2, (uint64_t)&v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  uint64_t v26 = (uint64_t *)&v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  *uint64_t v26 = a3;
  v26[1] = a4;
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = a5;
  uint64_t v40 = v19;
  uint64_t v27 = v13;
  id v28 = a5;
  sub_191B15F88(a3, a4);
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v27[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v19;
  if (v34)
  {
    uint64_t v40 = v34;
    WidgetEnvironment.filterForExtensions()();
    unint64_t v29 = v34;
  }
  else
  {
    unint64_t v29 = 0;
  }
  swift_beginAccess();
  unint64_t v30 = *v20;
  void *v20 = v29;

  v27[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v35;
  uint64_t v31 = &v27[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  *(void *)uint64_t v31 = a9;
  *((void *)v31 + 1) = a10;
  v31[16] = a8 & 1;
  v31[17] = a12 & 1;
  v31[18] = a13 & 1;

  v39.receiver = v27;
  v39.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  id v32 = objc_msgSendSuper2(&v39, sel_init);
  sub_191BF2B70(v25, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v38, v37);
  return v32;
}

char *sub_191BF1EEC(void *a1)
{
  uint64_t v2 = sub_191CF3378();
  uint64_t v74 = *(void *)(v2 - 8);
  uint64_t v75 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v77 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v57 - v5;
  id v76 = (id)type metadata accessor for ActivityMetricsDefinition(0);
  uint64_t v7 = MEMORY[0x1F4188790](v76);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44B8);
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (char *)a1[3];
  uint64_t v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v15);
  unint64_t v16 = sub_191BF298C();
  uint64_t v17 = v80;
  sub_191CF6508();
  if (!v17)
  {
    unint64_t v72 = v16;
    uint64_t v73 = v9;
    unsigned int v18 = v77;
    uint64_t v80 = v6;
    LOBYTE(v81) = 2;
    sub_191BF29E0(&qword_1E92E1668, (void (*)(uint64_t))type metadata accessor for ActivityMetricsDefinition);
    uint64_t v19 = v14;
    sub_191CF6178();
    uint64_t v20 = (uint64_t)v11;
    char v85 = 0;
    unint64_t v21 = sub_191B715A4();
    sub_191CF6178();
    uint64_t v22 = v81;
    char v85 = 4;
    unint64_t v23 = sub_191B71714();
    sub_191CF6178();
    unint64_t v70 = v21;
    unint64_t v71 = v23;
    id v76 = v22;
    uint64_t v24 = (uint64_t)v81;
    unint64_t v25 = v82;
    LOBYTE(v81) = 5;
    int v26 = sub_191CF6128();
    unint64_t v69 = v25;
    int v84 = v26;
    LOBYTE(v81) = 6;
    uint64_t v67 = sub_191CF6118();
    uint64_t v68 = v27;
    LOBYTE(v81) = 7;
    int v66 = sub_191CF6128();
    char v85 = 8;
    sub_191BF69B4();
    sub_191CF6108();
    uint64_t v65 = v24;
    char v29 = (char)v81;
    LOBYTE(v81) = 9;
    char v30 = sub_191CF60F8();
    LOBYTE(v81) = 3;
    sub_191BF29E0((unint64_t *)&unk_1E92E1180, MEMORY[0x1E4F17BF8]);
    sub_191CF6178();
    unint64_t v31 = v69;
    uint64_t v63 = v20;
    char v85 = 1;
    uint64_t v64 = v12;
    unint64_t v71 = (unint64_t)v19;
    sub_191CF6178();
    uint64_t v32 = (uint64_t)v81;
    unint64_t v33 = v82;
    sub_191B016E0(0, &qword_1EB449A20);
    sub_191B016E0(0, &qword_1EB44C380);
    uint64_t v61 = v32;
    unint64_t v62 = v33;
    uint64_t v34 = sub_191CF59A8();
    char v35 = (void *)v34;
    if (v34)
    {
      LODWORD(v72) = v30 & 1;
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      uint64_t v36 = v18;
      uint64_t v37 = v75;
      v58(v18, v80, v75);
      unint64_t v59 = type metadata accessor for ActivityMetricsDefinition;
      uint64_t v38 = (uint64_t)v73;
      sub_191BF6A08(v63, (uint64_t)v73, type metadata accessor for ActivityMetricsDefinition);
      Class v60 = (Class)type metadata accessor for ActivityWidgetRequest(0);
      objc_super v39 = objc_allocWithZone(v60);
      *(void *)&v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment] = 0;
      v58(&v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor], v36, v37);
      sub_191BF6A08(v38, (uint64_t)&v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], v59);
      uint64_t v40 = &v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
      uint64_t v41 = v65;
      void *v40 = v65;
      v40[1] = v31;
      *(void *)&v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = v35;
      id v42 = v76;
      *(void *)&v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v76;
      v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v29;
      uint64_t v43 = &v39[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
      uint64_t v44 = v68;
      *(void *)uint64_t v43 = v67;
      *((void *)v43 + 1) = v44;
      v43[16] = v84 & 1;
      v43[17] = v66 & 1;
      v43[18] = v72;
      sub_191B15F88(v41, v31);
      v83.receiver = v39;
      v83.super_class = v60;
      id v45 = v35;
      id v46 = v42;
      id v47 = objc_msgSendSuper2(&v83, sel_init);
      sub_191BF2B70(v38, type metadata accessor for ActivityMetricsDefinition);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v74 + 8);
      v48(v77, v75);
      char v85 = 10;
      id v15 = (char *)v47;
      sub_191CF6108();
      sub_191B1603C(v61, v62);

      sub_191B1603C(v65, v31);
      v48(v80, v75);
      sub_191BF2B70(v63, type metadata accessor for ActivityMetricsDefinition);
      (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v71, v64);
      uint64_t v54 = v81;
      id v55 = (void **)&v15[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
      swift_beginAccess();
      uint64_t v56 = *v55;
      *id v55 = v54;

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      return v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_191CF5E38();
    swift_allocError();
    uint64_t v51 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    *uint64_t v51 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_191CF8410;
    unint64_t v53 = v72;
    *(void *)(v52 + 56) = &type metadata for ActivityWidgetRequest.CodingKeys;
    *(void *)(v52 + 64) = v53;
    *(unsigned char *)(v52 + 32) = 1;
    sub_191CF5E18();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v51, *MEMORY[0x1E4FBBA80], v49);
    swift_willThrow();
    sub_191B1603C(v61, v62);

    sub_191B1603C(v65, v31);
    id v15 = (char *)(v74 + 8);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v80, v75);
    sub_191BF2B70(v63, type metadata accessor for ActivityMetricsDefinition);
    (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v71, v64);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  return v15;
}

unint64_t sub_191BF298C()
{
  unint64_t result = qword_1E92E4478;
  if (!qword_1E92E4478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4478);
  }
  return result;
}

uint64_t sub_191BF29E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191BF2A28()
{
  unint64_t result = qword_1E92E4488;
  if (!qword_1E92E4488)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4480);
    sub_191B717BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4488);
  }
  return result;
}

unint64_t sub_191BF2A9C()
{
  unint64_t result = qword_1E92E0F10;
  if (!qword_1E92E0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0F10);
  }
  return result;
}

uint64_t type metadata accessor for ActivityWidgetRequest.CodingProxy(uint64_t a1)
{
  return sub_191B4ED44(a1, qword_1E92E1B38);
}

uint64_t sub_191BF2B10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E1368);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191BF2B70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_191BF2BD0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_191BF2C38()
{
  return type metadata accessor for ActivityWidgetRequest(0);
}

uint64_t sub_191BF2C40()
{
  uint64_t result = sub_191CF3378();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivityMetricsDefinition(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for ActivityWidgetRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivityWidgetRequest);
}

uint64_t dispatch thunk of static ActivityWidgetRequest.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t sub_191BF2F20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 19)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityWidgetRequest.PayloadMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.PayloadMetadata()
{
  return &type metadata for ActivityWidgetRequest.PayloadMetadata;
}

void *sub_191BF30C8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF3378();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
    v9[16] = *((unsigned char *)a2 + v8 + 16);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
    v9[40] = *((unsigned char *)a2 + v8 + 40);
    *((void *)v9 + 6) = *(void *)((char *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    v9[88] = *((unsigned char *)a2 + v8 + 88);
    *((_OWORD *)v9 + 6) = *(_OWORD *)((char *)a2 + v8 + 96);
    uint64_t v68 = type metadata accessor for MetricsRequest(0);
    uint64_t v11 = *(int *)(v68 + 40);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    uint64_t v14 = sub_191CF43F8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v67(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    unint64_t v21 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v22 = *((void *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v64 = v22;
      uint64_t v65 = v15;
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v24 = v21[5];
      unint64_t v25 = &v19[v24];
      int v26 = &v20[v24];
      v25[16] = v26[16];
      *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
      v25[40] = v26[40];
      *((void *)v25 + 6) = *((void *)v26 + 6);
      *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
      v25[88] = v26[88];
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      uint64_t v27 = *(int *)(v68 + 40);
      id v28 = &v25[v27];
      char v29 = &v26[v27];
      int v66 = v19;
      if (v67(&v26[v27], 1, v14))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v28, v29, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v28, 0, 1, v14);
      }
      uint64_t v31 = v21[6];
      uint64_t v32 = &v19[v31];
      unint64_t v33 = &v20[v31];
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      v32[16] = v33[16];
      *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
      unsigned char v32[40] = v33[40];
      *((void *)v32 + 6) = *((void *)v33 + 6);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
      v32[88] = v33[88];
      *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
      uint64_t v34 = *(int *)(v68 + 40);
      char v35 = &v32[v34];
      uint64_t v36 = &v33[v34];
      if (v67(&v33[v34], 1, v14))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v35, v36, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v35, 0, 1, v14);
      }
      uint64_t v38 = v21[7];
      objc_super v39 = &v19[v38];
      uint64_t v40 = &v20[v38];
      *(_OWORD *)objc_super v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
      *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
      v39[40] = v40[40];
      *((void *)v39 + 6) = *((void *)v40 + 6);
      *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      v39[88] = v40[88];
      *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
      uint64_t v41 = *(int *)(v68 + 40);
      id v42 = &v39[v41];
      uint64_t v43 = &v40[v41];
      if (v67(&v40[v41], 1, v14))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        uint64_t v45 = v65;
      }
      else
      {
        uint64_t v45 = v65;
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v42, v43, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v42, 0, 1, v14);
      }
      uint64_t v46 = v21[8];
      id v47 = (char *)v66 + v46;
      uint64_t v48 = &v20[v46];
      *(_OWORD *)id v47 = *(_OWORD *)v48;
      v47[16] = v48[16];
      *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
      v47[40] = v48[40];
      *((void *)v47 + 6) = *((void *)v48 + 6);
      *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
      *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
      v47[88] = v48[88];
      *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
      uint64_t v49 = *(int *)(v68 + 40);
      uint64_t v50 = &v47[v49];
      uint64_t v51 = &v48[v49];
      if (v67(&v48[v49], 1, v14))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v50, v51, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v50, 0, 1, v14);
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v64 + 56))(v66, 0, 1, v21);
    }
    uint64_t v53 = a3[6];
    uint64_t v54 = (void *)((char *)a1 + v53);
    id v55 = (void *)((char *)a2 + v53);
    uint64_t v56 = *v55;
    unint64_t v57 = v55[1];
    sub_191B15F88(*v55, v57);
    *uint64_t v54 = v56;
    v54[1] = v57;
    uint64_t v58 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    unint64_t v59 = (void *)((char *)a1 + v58);
    Class v60 = (void *)((char *)a2 + v58);
    uint64_t v61 = v60[1];
    *unint64_t v59 = *v60;
    v59[1] = v61;
    uint64_t v62 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v62) = *((unsigned char *)a2 + v62);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191BF380C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = v5 + *(int *)(v6 + 40);
  uint64_t v8 = sub_191CF43F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v5 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v12 - 1) + 48))(v11, 1, v12))
  {
    uint64_t v19 = v6;
    uint64_t v13 = *(int *)(v6 + 40);
    uint64_t v14 = v11 + v12[5] + v13;
    if (!v10(v14, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
      uint64_t v13 = *(int *)(v19 + 40);
    }
    uint64_t v15 = v11 + v12[6] + v13;
    if (!v10(v15, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
      uint64_t v13 = *(int *)(v19 + 40);
    }
    uint64_t v16 = v11 + v12[7] + v13;
    if (!v10(v16, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
      uint64_t v13 = *(int *)(v19 + 40);
    }
    uint64_t v17 = v11 + v12[8] + v13;
    if (!v10(v17, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    }
  }
  sub_191B1603C(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8));

  return swift_bridgeObjectRelease();
}

uint64_t sub_191BF3AD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  uint64_t v64 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v64 + 40);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v62 = v14;
  if (v63(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v17 = (_OWORD *)(v8 + v16);
  uint64_t v18 = (_OWORD *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v61 = a3;
    *uint64_t v17 = *v18;
    uint64_t v22 = v19[5];
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    v23[16] = v24[16];
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v23[40] = v24[40];
    *((void *)v23 + 6) = *((void *)v24 + 6);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
    v23[88] = v24[88];
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    uint64_t v25 = *(int *)(v64 + 40);
    int v26 = &v23[v25];
    uint64_t v27 = &v24[v25];
    if (v63(&v24[v25], 1, v13))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = v19[6];
    uint64_t v30 = (char *)v17 + v29;
    uint64_t v31 = (char *)v18 + v29;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    char v30[16] = v31[16];
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    uint64_t v32 = *(int *)(v64 + 40);
    unint64_t v33 = &v30[v32];
    uint64_t v34 = &v31[v32];
    if (v63(&v31[v32], 1, v13))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v33, 0, 1, v13);
    }
    uint64_t v36 = v19[7];
    uint64_t v37 = (char *)v17 + v36;
    uint64_t v38 = (char *)v18 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v64 + 40);
    uint64_t v40 = &v37[v39];
    uint64_t v41 = &v38[v39];
    if (v63(&v38[v39], 1, v13))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v40, v41, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v40, 0, 1, v13);
    }
    uint64_t v43 = v19[8];
    uint64_t v44 = (char *)v17 + v43;
    uint64_t v45 = (char *)v18 + v43;
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    uint64_t v46 = *(int *)(v64 + 40);
    id v47 = &v44[v46];
    uint64_t v48 = &v45[v46];
    a3 = v61;
    if (v63(&v45[v46], 1, v13))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v47, v48, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v47, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v50 = a3[6];
  uint64_t v51 = (uint64_t *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *v52;
  unint64_t v54 = v52[1];
  sub_191B15F88(*v52, v54);
  *uint64_t v51 = v53;
  v51[1] = v54;
  uint64_t v55 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v56 = (void *)(a1 + v55);
  unint64_t v57 = (void *)(a2 + v55);
  uint64_t v58 = v57[1];
  *uint64_t v56 = *v57;
  v56[1] = v58;
  uint64_t v59 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v59) = *(unsigned char *)(a2 + v59);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191BF41B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v137 = a2;
  uint64_t v9 = a2 + v7;
  LOBYTE(v7) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v7;
  LOBYTE(v7) = *(unsigned char *)(v9 + 40);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(unsigned char *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  long long v10 = *(_OWORD *)(v9 + 56);
  long long v11 = *(_OWORD *)(v9 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  uint64_t v140 = type metadata accessor for MetricsRequest(0);
  uint64_t v12 = *(int *)(v140 + 40);
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = sub_191CF43F8();
  uint64_t v139 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v139 + 48);
  int v17 = v16(v13, 1, v15);
  uint64_t v141 = (uint64_t (*)(char *, uint64_t, uint64_t))v16;
  int v18 = v16(v14, 1, v15);
  uint64_t v138 = a3;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v139 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v139 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v139 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (void *)(v9 + v20);
  uint64_t v23 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_191BF2B70((uint64_t)v21, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    uint64_t v41 = v23[5];
    uint64_t v42 = (char *)v21 + v41;
    uint64_t v43 = (char *)v22 + v41;
    long long v44 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *(_OWORD *)uint64_t v42 = v44;
    long long v45 = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *(_OWORD *)(v42 + 24) = v45;
    *((void *)v42 + 6) = *((void *)v43 + 6);
    long long v46 = *(_OWORD *)(v43 + 56);
    long long v47 = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *(_OWORD *)(v42 + 72) = v47;
    *(_OWORD *)(v42 + 56) = v46;
    *((void *)v42 + 12) = *((void *)v43 + 12);
    *((void *)v42 + 13) = *((void *)v43 + 13);
    uint64_t v48 = *(int *)(v140 + 40);
    uint64_t v49 = &v42[v48];
    uint64_t v50 = &v43[v48];
    int v51 = v141(&v42[v48], 1, v15);
    int v52 = v141(v50, 1, v15);
    if (v51)
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v49, v50, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v49, 0, 1, v15);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v139 + 24))(v49, v50, v15);
LABEL_32:
        uint64_t v87 = v23[6];
        uint64_t v88 = (char *)v21 + v87;
        os_log_type_t v89 = (char *)v22 + v87;
        long long v90 = *(_OWORD *)v89;
        v88[16] = v89[16];
        *(_OWORD *)uint64_t v88 = v90;
        long long v91 = *(_OWORD *)(v89 + 24);
        v88[40] = v89[40];
        *(_OWORD *)(v88 + 24) = v91;
        *((void *)v88 + 6) = *((void *)v89 + 6);
        long long v92 = *(_OWORD *)(v89 + 56);
        long long v93 = *(_OWORD *)(v89 + 72);
        v88[88] = v89[88];
        *(_OWORD *)(v88 + 72) = v93;
        *(_OWORD *)(v88 + 56) = v92;
        *((void *)v88 + 12) = *((void *)v89 + 12);
        *((void *)v88 + 13) = *((void *)v89 + 13);
        uint64_t v94 = *(int *)(v140 + 40);
        uint64_t v95 = &v88[v94];
        uint64_t v96 = &v89[v94];
        int v97 = v141(&v88[v94], 1, v15);
        int v98 = v141(v96, 1, v15);
        if (v97)
        {
          if (!v98)
          {
            (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v95, v96, v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v95, 0, 1, v15);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v98)
          {
            (*(void (**)(char *, char *, uint64_t))(v139 + 24))(v95, v96, v15);
LABEL_38:
            uint64_t v100 = v23[7];
            long long v101 = (char *)v21 + v100;
            uint64_t v102 = (char *)v22 + v100;
            long long v103 = *(_OWORD *)v102;
            v101[16] = v102[16];
            *(_OWORD *)long long v101 = v103;
            long long v104 = *(_OWORD *)(v102 + 24);
            v101[40] = v102[40];
            *(_OWORD *)(v101 + 24) = v104;
            *((void *)v101 + 6) = *((void *)v102 + 6);
            long long v105 = *(_OWORD *)(v102 + 56);
            long long v106 = *(_OWORD *)(v102 + 72);
            v101[88] = v102[88];
            *(_OWORD *)(v101 + 72) = v106;
            *(_OWORD *)(v101 + 56) = v105;
            *((void *)v101 + 12) = *((void *)v102 + 12);
            *((void *)v101 + 13) = *((void *)v102 + 13);
            uint64_t v107 = *(int *)(v140 + 40);
            uint64_t v108 = &v101[v107];
            uint64_t v109 = &v102[v107];
            int v110 = v141(&v101[v107], 1, v15);
            int v111 = v141(v109, 1, v15);
            if (v110)
            {
              if (!v111)
              {
                (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v108, v109, v15);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v108, 0, 1, v15);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v111)
              {
                (*(void (**)(char *, char *, uint64_t))(v139 + 24))(v108, v109, v15);
LABEL_44:
                uint64_t v113 = v23[8];
                uint64_t v114 = (char *)v21 + v113;
                uint64_t v115 = (char *)v22 + v113;
                long long v116 = *(_OWORD *)v115;
                v114[16] = v115[16];
                *(_OWORD *)uint64_t v114 = v116;
                long long v117 = *(_OWORD *)(v115 + 24);
                unsigned char v114[40] = v115[40];
                *(_OWORD *)(v114 + 24) = v117;
                *((void *)v114 + 6) = *((void *)v115 + 6);
                long long v118 = *(_OWORD *)(v115 + 56);
                long long v119 = *(_OWORD *)(v115 + 72);
                v114[88] = v115[88];
                *(_OWORD *)(v114 + 72) = v119;
                *(_OWORD *)(v114 + 56) = v118;
                *((void *)v114 + 12) = *((void *)v115 + 12);
                *((void *)v114 + 13) = *((void *)v115 + 13);
                uint64_t v120 = *(int *)(v140 + 40);
                uint64_t v121 = &v114[v120];
                uint64_t v122 = &v115[v120];
                int v123 = v141(&v114[v120], 1, v15);
                int v124 = v141(v122, 1, v15);
                uint64_t v40 = v138;
                if (v123)
                {
                  if (!v124)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v121, v122, v15);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v121, 0, 1, v15);
                    goto LABEL_50;
                  }
                }
                else
                {
                  if (!v124)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v139 + 24))(v121, v122, v15);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v139 + 8))(v121, v15);
                }
                uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v139 + 8))(v108, v15);
            }
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v139 + 8))(v95, v15);
        }
        uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v139 + 8))(v49, v15);
    }
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v49, v50, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_32;
  }
  if (v27)
  {
LABEL_13:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v21, v22, *(void *)(*(void *)(v39 - 8) + 64));
    uint64_t v40 = v138;
    goto LABEL_50;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  uint64_t v28 = v23[5];
  uint64_t v29 = (char *)v21 + v28;
  uint64_t v30 = (char *)v22 + v28;
  long long v31 = *(_OWORD *)v30;
  v29[16] = v30[16];
  *(_OWORD *)uint64_t v29 = v31;
  long long v32 = *(_OWORD *)(v30 + 24);
  v29[40] = v30[40];
  *(_OWORD *)(v29 + 24) = v32;
  *((void *)v29 + 6) = *((void *)v30 + 6);
  long long v33 = *(_OWORD *)(v30 + 56);
  long long v34 = *(_OWORD *)(v30 + 72);
  v29[88] = v30[88];
  *(_OWORD *)(v29 + 72) = v34;
  *(_OWORD *)(v29 + 56) = v33;
  *((void *)v29 + 12) = *((void *)v30 + 12);
  *((void *)v29 + 13) = *((void *)v30 + 13);
  uint64_t v35 = *(int *)(v140 + 40);
  uint64_t v36 = &v29[v35];
  uint64_t v37 = &v30[v35];
  if (v141(&v30[v35], 1, v15))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v36, v37, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v36, 0, 1, v15);
  }
  uint64_t v53 = v23[6];
  unint64_t v54 = (char *)v21 + v53;
  uint64_t v55 = (char *)v22 + v53;
  long long v56 = *(_OWORD *)v55;
  v54[16] = v55[16];
  *(_OWORD *)unint64_t v54 = v56;
  long long v57 = *(_OWORD *)(v55 + 24);
  v54[40] = v55[40];
  *(_OWORD *)(v54 + 24) = v57;
  *((void *)v54 + 6) = *((void *)v55 + 6);
  long long v58 = *(_OWORD *)(v55 + 56);
  long long v59 = *(_OWORD *)(v55 + 72);
  v54[88] = v55[88];
  *(_OWORD *)(v54 + 72) = v59;
  *(_OWORD *)(v54 + 56) = v58;
  *((void *)v54 + 12) = *((void *)v55 + 12);
  *((void *)v54 + 13) = *((void *)v55 + 13);
  uint64_t v60 = *(int *)(v140 + 40);
  uint64_t v61 = &v54[v60];
  uint64_t v62 = &v55[v60];
  if (v141(&v55[v60], 1, v15))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v61, v62, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v61, 0, 1, v15);
  }
  uint64_t v64 = v23[7];
  uint64_t v65 = (char *)v21 + v64;
  int v66 = (char *)v22 + v64;
  long long v67 = *(_OWORD *)v66;
  v65[16] = v66[16];
  *(_OWORD *)uint64_t v65 = v67;
  long long v68 = *(_OWORD *)(v66 + 24);
  v65[40] = v66[40];
  *(_OWORD *)(v65 + 24) = v68;
  *((void *)v65 + 6) = *((void *)v66 + 6);
  long long v69 = *(_OWORD *)(v66 + 56);
  long long v70 = *(_OWORD *)(v66 + 72);
  v65[88] = v66[88];
  *(_OWORD *)(v65 + 72) = v70;
  *(_OWORD *)(v65 + 56) = v69;
  *((void *)v65 + 12) = *((void *)v66 + 12);
  *((void *)v65 + 13) = *((void *)v66 + 13);
  uint64_t v71 = *(int *)(v140 + 40);
  unint64_t v72 = &v65[v71];
  uint64_t v73 = &v66[v71];
  if (v141(&v66[v71], 1, v15))
  {
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v72, v73, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v72, 0, 1, v15);
  }
  uint64_t v75 = v23[8];
  id v76 = (char *)v21 + v75;
  uint64_t v77 = (char *)v22 + v75;
  long long v78 = *(_OWORD *)v77;
  v76[16] = v77[16];
  *(_OWORD *)id v76 = v78;
  long long v79 = *(_OWORD *)(v77 + 24);
  v76[40] = v77[40];
  *(_OWORD *)(v76 + 24) = v79;
  *((void *)v76 + 6) = *((void *)v77 + 6);
  long long v80 = *(_OWORD *)(v77 + 56);
  long long v81 = *(_OWORD *)(v77 + 72);
  v76[88] = v77[88];
  *(_OWORD *)(v76 + 72) = v81;
  *(_OWORD *)(v76 + 56) = v80;
  *((void *)v76 + 12) = *((void *)v77 + 12);
  *((void *)v76 + 13) = *((void *)v77 + 13);
  uint64_t v82 = *(int *)(v140 + 40);
  objc_super v83 = &v76[v82];
  int v84 = &v77[v82];
  uint64_t v40 = v138;
  if (v141(&v77[v82], 1, v15))
  {
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v83, v84, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v83, 0, 1, v15);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
LABEL_50:
  uint64_t v126 = v40[6];
  uint64_t v127 = (uint64_t *)(a1 + v126);
  uint64_t v128 = (uint64_t *)(v137 + v126);
  uint64_t v129 = *v128;
  unint64_t v130 = v128[1];
  sub_191B15F88(*v128, v130);
  uint64_t v131 = *v127;
  unint64_t v132 = v127[1];
  *uint64_t v127 = v129;
  v127[1] = v130;
  sub_191B1603C(v131, v132);
  *(unsigned char *)(a1 + v40[7]) = *(unsigned char *)(v137 + v40[7]);
  uint64_t v133 = v40[8];
  uint64_t v134 = (void *)(a1 + v133);
  id v135 = (void *)(v137 + v133);
  *uint64_t v134 = *v135;
  v134[1] = v135[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v40[9]) = *(unsigned char *)(v137 + v40[9]);
  *(unsigned char *)(a1 + v40[10]) = *(unsigned char *)(v137 + v40[10]);
  return a1;
}

uint64_t sub_191BF4F3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  uint64_t v56 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v56 + 40);
  long long v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v54 = v14;
  if (v55(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  int v17 = (_OWORD *)(v8 + v16);
  int v18 = (_OWORD *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v53 = a3;
    *int v17 = *v18;
    uint64_t v22 = v19[5];
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    v23[16] = v24[16];
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v23[40] = v24[40];
    *((void *)v23 + 6) = *((void *)v24 + 6);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
    v23[88] = v24[88];
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    uint64_t v25 = *(int *)(v56 + 40);
    int v26 = &v23[v25];
    int v27 = &v24[v25];
    if (v55(&v24[v25], 1, v13))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = v19[6];
    uint64_t v30 = (char *)v17 + v29;
    long long v31 = (char *)v18 + v29;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    char v30[16] = v31[16];
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    uint64_t v32 = *(int *)(v56 + 40);
    long long v33 = &v30[v32];
    long long v34 = &v31[v32];
    if (v55(&v31[v32], 1, v13))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v33, 0, 1, v13);
    }
    uint64_t v36 = v19[7];
    uint64_t v37 = (char *)v17 + v36;
    uint64_t v38 = (char *)v18 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v56 + 40);
    uint64_t v40 = &v37[v39];
    uint64_t v41 = &v38[v39];
    if (v55(&v38[v39], 1, v13))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v40, v41, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v40, 0, 1, v13);
    }
    uint64_t v43 = v19[8];
    long long v44 = (char *)v17 + v43;
    long long v45 = (char *)v18 + v43;
    *(_OWORD *)long long v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    uint64_t v46 = *(int *)(v56 + 40);
    long long v47 = &v44[v46];
    uint64_t v48 = &v45[v46];
    a3 = v53;
    if (v55(&v45[v46], 1, v13))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v47, v48, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v47, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v50 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v51 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_191BF5600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v104 = a2;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  uint64_t v107 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v107 + 40);
  long long v11 = (void *)(v8 + v10);
  uint64_t v12 = (void *)(v9 + v10);
  uint64_t v13 = sub_191CF43F8();
  uint64_t v106 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v106 + 48);
  int v15 = v14(v11, 1, v13);
  uint64_t v108 = (uint64_t (*)(char *, uint64_t, uint64_t))v14;
  int v16 = v14(v12, 1, v13);
  long long v105 = a3;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v106 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v106 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v106 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v19 = (_OWORD *)(v8 + v18);
  uint64_t v20 = (_OWORD *)(v9 + v18);
  uint64_t v21 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_191BF2B70((uint64_t)v19, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *uint64_t v19 = *v20;
    uint64_t v36 = v21[5];
    uint64_t v37 = (char *)v19 + v36;
    uint64_t v38 = (char *)v20 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v107 + 40);
    uint64_t v40 = &v37[v39];
    uint64_t v41 = &v38[v39];
    int v42 = v108(&v37[v39], 1, v13);
    int v43 = v108(v41, 1, v13);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v40, v41, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v40, 0, 1, v13);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v40, v41, v13);
LABEL_34:
        uint64_t v77 = v21[6];
        long long v78 = (char *)v19 + v77;
        long long v79 = (char *)v20 + v77;
        *(_OWORD *)long long v78 = *(_OWORD *)v79;
        v78[16] = v79[16];
        *(_OWORD *)(v78 + 24) = *(_OWORD *)(v79 + 24);
        v78[40] = v79[40];
        *((void *)v78 + 6) = *((void *)v79 + 6);
        *(_OWORD *)(v78 + 56) = *(_OWORD *)(v79 + 56);
        *(_OWORD *)(v78 + 72) = *(_OWORD *)(v79 + 72);
        v78[88] = v79[88];
        *((_OWORD *)v78 + 6) = *((_OWORD *)v79 + 6);
        uint64_t v80 = *(int *)(v107 + 40);
        long long v81 = &v78[v80];
        uint64_t v82 = &v79[v80];
        int v83 = v108(&v78[v80], 1, v13);
        int v84 = v108(v82, 1, v13);
        if (v83)
        {
          if (!v84)
          {
            (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v81, v82, v13);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v81, 0, 1, v13);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v84)
          {
            (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v81, v82, v13);
LABEL_40:
            uint64_t v86 = v21[7];
            uint64_t v87 = (char *)v19 + v86;
            uint64_t v88 = (char *)v20 + v86;
            *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
            v87[16] = v88[16];
            *(_OWORD *)(v87 + 24) = *(_OWORD *)(v88 + 24);
            v87[40] = v88[40];
            *((void *)v87 + 6) = *((void *)v88 + 6);
            *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
            *(_OWORD *)(v87 + 72) = *(_OWORD *)(v88 + 72);
            v87[88] = v88[88];
            *((_OWORD *)v87 + 6) = *((_OWORD *)v88 + 6);
            uint64_t v89 = *(int *)(v107 + 40);
            long long v90 = &v87[v89];
            long long v91 = &v88[v89];
            int v92 = v108(&v87[v89], 1, v13);
            int v93 = v108(v91, 1, v13);
            if (v92)
            {
              if (!v93)
              {
                (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v90, v91, v13);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v90, 0, 1, v13);
                goto LABEL_46;
              }
            }
            else
            {
              if (!v93)
              {
                (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v90, v91, v13);
LABEL_46:
                uint64_t v95 = v21[8];
                uint64_t v96 = (char *)v19 + v95;
                int v97 = (char *)v20 + v95;
                *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
                v96[16] = v97[16];
                *(_OWORD *)(v96 + 24) = *(_OWORD *)(v97 + 24);
                v96[40] = v97[40];
                *((void *)v96 + 6) = *((void *)v97 + 6);
                *(_OWORD *)(v96 + 56) = *(_OWORD *)(v97 + 56);
                *(_OWORD *)(v96 + 72) = *(_OWORD *)(v97 + 72);
                v96[88] = v97[88];
                *((_OWORD *)v96 + 6) = *((_OWORD *)v97 + 6);
                uint64_t v98 = *(int *)(v107 + 40);
                uint64_t v99 = &v96[v98];
                uint64_t v100 = &v97[v98];
                int v101 = v108(&v96[v98], 1, v13);
                int v102 = v108(v100, 1, v13);
                long long v34 = v105;
                if (v101)
                {
                  if (!v102)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v99, v100, v13);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v99, 0, 1, v13);
                    goto LABEL_14;
                  }
                }
                else
                {
                  if (!v102)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v99, v100, v13);
                    goto LABEL_14;
                  }
                  (*(void (**)(char *, uint64_t))(v106 + 8))(v99, v13);
                }
                uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
                goto LABEL_14;
              }
              (*(void (**)(char *, uint64_t))(v106 + 8))(v90, v13);
            }
            uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v106 + 8))(v81, v13);
        }
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v40, v13);
    }
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v40, v41, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_34;
  }
  if (v25)
  {
LABEL_13:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v19, v20, *(void *)(*(void *)(v33 - 8) + 64));
    long long v34 = v105;
LABEL_14:
    uint64_t v35 = v104;
    goto LABEL_30;
  }
  *uint64_t v19 = *v20;
  uint64_t v26 = v21[5];
  int v27 = (char *)v19 + v26;
  uint64_t v28 = (char *)v20 + v26;
  v27[16] = v28[16];
  *(_OWORD *)int v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
  v27[40] = v28[40];
  *((void *)v27 + 6) = *((void *)v28 + 6);
  *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
  *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
  v27[88] = v28[88];
  *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
  uint64_t v29 = *(int *)(v107 + 40);
  uint64_t v30 = &v27[v29];
  long long v31 = &v28[v29];
  if (v108(&v28[v29], 1, v13))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v30, v31, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v30, 0, 1, v13);
  }
  uint64_t v44 = v21[6];
  long long v45 = (char *)v19 + v44;
  uint64_t v46 = (char *)v20 + v44;
  *(_OWORD *)long long v45 = *(_OWORD *)v46;
  v45[16] = v46[16];
  *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
  v45[40] = v46[40];
  *((void *)v45 + 6) = *((void *)v46 + 6);
  *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
  *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
  v45[88] = v46[88];
  *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
  uint64_t v47 = *(int *)(v107 + 40);
  uint64_t v48 = &v45[v47];
  uint64_t v49 = &v46[v47];
  if (v108(&v46[v47], 1, v13))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v48, v49, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v48, 0, 1, v13);
  }
  uint64_t v51 = v21[7];
  int v52 = (char *)v19 + v51;
  uint64_t v53 = (char *)v20 + v51;
  *(_OWORD *)int v52 = *(_OWORD *)v53;
  v52[16] = v53[16];
  *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
  v52[40] = v53[40];
  *((void *)v52 + 6) = *((void *)v53 + 6);
  *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
  *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
  v52[88] = v53[88];
  *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
  uint64_t v54 = *(int *)(v107 + 40);
  uint64_t v55 = &v52[v54];
  uint64_t v56 = &v53[v54];
  if (v108(&v53[v54], 1, v13))
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v55, v56, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v55, 0, 1, v13);
  }
  uint64_t v58 = v21[8];
  long long v59 = v19;
  uint64_t v60 = (char *)v19 + v58;
  uint64_t v61 = (char *)v20 + v58;
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  v60[16] = v61[16];
  *(_OWORD *)(v60 + 24) = *(_OWORD *)(v61 + 24);
  v60[40] = v61[40];
  *((void *)v60 + 6) = *((void *)v61 + 6);
  *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
  v60[88] = v61[88];
  *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
  uint64_t v62 = *(int *)(v107 + 40);
  uint64_t v63 = &v60[v62];
  uint64_t v64 = &v61[v62];
  long long v34 = v105;
  if (v108(&v61[v62], 1, v13))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v63, v64, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v63, 0, 1, v13);
  }
  uint64_t v35 = v104;
  (*(void (**)(_OWORD *, void, uint64_t, int *))(v22 + 56))(v59, 0, 1, v21);
LABEL_30:
  uint64_t v66 = v34[6];
  uint64_t v67 = *(void *)(a1 + v66);
  unint64_t v68 = *(void *)(a1 + v66 + 8);
  *(_OWORD *)(a1 + v66) = *(_OWORD *)(v35 + v66);
  sub_191B1603C(v67, v68);
  uint64_t v69 = v34[8];
  *(unsigned char *)(a1 + v34[7]) = *(unsigned char *)(v35 + v34[7]);
  long long v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)(v35 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *long long v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = v34[10];
  *(unsigned char *)(a1 + v34[9]) = *(unsigned char *)(v35 + v34[9]);
  *(unsigned char *)(a1 + v74) = *(unsigned char *)(v35 + v74);
  return a1;
}

uint64_t sub_191BF6318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BF632C);
}

uint64_t sub_191BF632C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ActivityMetricsDefinition(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_191BF6444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BF6458);
}

uint64_t sub_191BF6458(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_191CF3378();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_191BF656C()
{
  uint64_t result = sub_191CF3378();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivityMetricsDefinition(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityWidgetRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActivityWidgetRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BF67B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.CodingKeys()
{
  return &type metadata for ActivityWidgetRequest.CodingKeys;
}

unint64_t sub_191BF67F4()
{
  unint64_t result = qword_1E92E4498;
  if (!qword_1E92E4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4498);
  }
  return result;
}

unint64_t sub_191BF684C()
{
  unint64_t result = qword_1E92E44A0;
  if (!qword_1E92E44A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E44A0);
  }
  return result;
}

unint64_t sub_191BF68A4()
{
  unint64_t result = qword_1E92E44A8;
  if (!qword_1E92E44A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E44A8);
  }
  return result;
}

unint64_t sub_191BF68F8()
{
  unint64_t result = qword_1E92E1BE8;
  if (!qword_1E92E1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1BE8);
  }
  return result;
}

uint64_t sub_191BF694C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_191BF69B4()
{
  unint64_t result = qword_1EB449C00;
  if (!qword_1EB449C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449C00);
  }
  return result;
}

uint64_t sub_191BF6A08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for ActivityWidgetRequest.CodingProxy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActivityWidgetRequest.CodingProxy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BF6BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.CodingProxy.CodingKeys()
{
  return &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys;
}

unint64_t sub_191BF6C08()
{
  unint64_t result = qword_1E92E44C8;
  if (!qword_1E92E44C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E44C8);
  }
  return result;
}

unint64_t sub_191BF6C60()
{
  unint64_t result = qword_1E92E1C00;
  if (!qword_1E92E1C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C00);
  }
  return result;
}

unint64_t sub_191BF6CB8()
{
  unint64_t result = qword_1E92E1BF8;
  if (!qword_1E92E1BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1BF8);
  }
  return result;
}

uint64_t sub_191BF6D0C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WGAutoreleasePool()
{
  return self;
}

uint64_t sub_191BF6D40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191BF6D54(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_191BF6D68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_191BF6D7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_191BF6D90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_191BF6DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_191BF6DCC()
{
  MEMORY[0x192FE5F00](*(void *)(v0 + 16), -1, -1);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

void sub_191BF6E30(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_191BF6E98()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_191CF38F8();
  swift_release();

  return swift_release();
}

uint64_t sub_191BF6F10()
{
  type metadata accessor for DatePublisher(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_191BF7014(20.0);
  qword_1EB44C770 = v0;
  return result;
}

uint64_t sub_191BF6F54(uint64_t a1)
{
  return sub_191BF6FA8(60.0, a1, 0x796C6574756E696DLL, 0xE800000000000000, &qword_1EB44C778);
}

uint64_t sub_191BF6F7C(uint64_t a1)
{
  return sub_191BF6FA8(5.0, a1, 0x6F63657365766966, 0xEB0000000073646ELL, &qword_1EB44C780);
}

uint64_t sub_191BF6FA8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  type metadata accessor for DatePublisher(0);
  uint64_t v9 = swift_allocObject();
  uint64_t result = sub_191BF7248(a3, a4, a1);
  *a5 = v9;
  return result;
}

uint64_t sub_191BF7014(double a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448A30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF3178();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  sub_191CF3168();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_191CF38D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v14, v6, v3);
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters) = MEMORY[0x1E4FBC870];
  *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = 0;
  *(double *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period) = 1.0 / a1;
  int v15 = (void *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  *int v15 = 0x746C7561666564;
  v15[1] = 0xE700000000000000;
  return v1;
}

uint64_t sub_191BF7248(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448A30);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF3178();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v16 = (char *)&v21 - v15;
  uint64_t v17 = v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  sub_191CF3168();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  sub_191CF38D8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v9, v6);
  *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters) = MEMORY[0x1E4FBC870];
  *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = 0;
  *(double *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period) = a3;
  uint64_t v18 = (void *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  uint64_t v19 = v22;
  *uint64_t v18 = a1;
  v18[1] = v19;
  return v3;
}

uint64_t sub_191BF7470(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v3 = sub_191CF3178();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v58 - v7;
  BSDispatchQueueAssertMain();
  uint64_t v9 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  unint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = qword_1E92E0C78;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v64 = v10;
  uint64_t v13 = sub_191CF3858();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92F2470);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_191CF3838();
  os_log_type_t v16 = sub_191CF5948();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v61 = v8;
  if (v17)
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = v19;
    uint64_t v62 = v2;
    *(_DWORD *)uint64_t v18 = 136446210;
    swift_bridgeObjectRetain();
    v66[1] = sub_191C5C36C(v64, v11, aBlock);
    uint64_t v2 = v62;
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v15, v16, "startTickingForView %{public}s.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v19, -1, -1);
    MEMORY[0x192FE5F00](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters;
  swift_beginAccess();
  uint64_t v21 = *(void *)(*(void *)v20 + 16);
  uint64_t v62 = v20;
  if (v21)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_191CF3838();
    os_log_type_t v23 = sub_191CF5948();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v59 = v14;
      uint64_t v26 = v25;
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v24 = 136446466;
      swift_bridgeObjectRetain();
      v66[0] = sub_191C5C36C(v64, v11, aBlock);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      v66[0] = v63;
      uint64_t v27 = sub_191CF5368();
      v66[0] = sub_191C5C36C(v27, v28, aBlock);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v22, v23, "Publishing %{public}s to new requester %{public}s.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v26, -1, -1);
      MEMORY[0x192FE5F00](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v50 = v60;
    uint64_t v49 = v61;
    sub_191CF3168();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v50, v49, v3);
    swift_retain();
    sub_191CF3908();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v49, v3);
  }
  else
  {
    id v29 = objc_allocWithZone(MEMORY[0x1E4F4F6F0]);
    swift_bridgeObjectRetain();
    uint64_t v30 = v64;
    long long v31 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_initWithIdentifier_, v31);

    uint64_t v33 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer);
    *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = v32;
    id v34 = v32;

    double v35 = *(double *)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period);
    if (v35 >= 1.0) {
      double v36 = 1.0;
    }
    else {
      double v36 = v35 / 10.0;
    }
    sub_191BBE468();
    uint64_t v37 = (void *)sub_191CF5A18();
    uint64_t v38 = swift_allocObject();
    swift_weakInit();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = v30;
    v39[4] = v11;
    aBlock[4] = (uint64_t)sub_191BFC684;
    aBlock[5] = (uint64_t)v39;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_191BF6E30;
    aBlock[3] = (uint64_t)&block_descriptor_2;
    uint64_t v40 = _Block_copy(aBlock);
    uint64_t v59 = v14;
    swift_bridgeObjectRetain();
    swift_release();
    id v58 = v34;
    objc_msgSend(v34, sel_scheduleRepeatingWithFireInterval_repeatInterval_leewayInterval_queue_handler_, v37, v40, 0.0, v35, v36);
    _Block_release(v40);

    uint64_t v41 = v61;
    sub_191CF3168();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v60, v41, v3);
    swift_retain();
    sub_191CF3908();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v41, v3);
    swift_bridgeObjectRetain_n();
    int v42 = sub_191CF3838();
    os_log_type_t v43 = sub_191CF5948();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      aBlock[0] = v45;
      *(_DWORD *)uint64_t v44 = 136446466;
      swift_bridgeObjectRetain();
      v66[0] = sub_191C5C36C(v64, v11, aBlock);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v46 = v63;
      v66[0] = v63;
      uint64_t v47 = sub_191CF5368();
      v66[0] = sub_191C5C36C(v47, v48, aBlock);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v42, v43, "Started machtimer %{public}s %{public}s.", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v45, -1, -1);
      MEMORY[0x192FE5F00](v44, -1, -1);

      goto LABEL_18;
    }

    swift_bridgeObjectRelease_n();
  }
  uint64_t v46 = v63;
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_191CF3838();
  os_log_type_t v52 = sub_191CF5918();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    aBlock[0] = v54;
    *(_DWORD *)uint64_t v53 = 136446466;
    swift_bridgeObjectRetain();
    v66[0] = sub_191C5C36C(v64, v11, aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v53 + 12) = 2082;
    v66[0] = v46;
    uint64_t v55 = sub_191CF5368();
    v66[0] = sub_191C5C36C(v55, v56, aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v51, v52, "Add reference to %{public}s: %{public}s", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v54, -1, -1);
    MEMORY[0x192FE5F00](v53, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  sub_191B43B30(v66, v46);
  return swift_endAccess();
}

uint64_t sub_191BF7E60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_191CF3178();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1E92E0C78 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_191CF3858();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E92F2470);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_191CF3838();
    os_log_type_t v16 = sub_191CF5918();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v21 = a3;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v6;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v25 = v19;
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v18 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_191C5C36C(v21, a4, &v25);
      uint64_t v7 = v22;
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v15, v16, "Tick %{public}s.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v19, -1, -1);
      uint64_t v20 = v18;
      uint64_t v6 = v23;
      MEMORY[0x192FE5F00](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_191CF3168();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    swift_retain();
    sub_191CF3908();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return swift_release();
  }
  return result;
}

void sub_191BF816C()
{
  uint64_t v1 = v0;
  BSDispatchQueueAssertMain();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name + 8);
  uint64_t v4 = qword_1E92E0C78;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191CF3858();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92F2470);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_191CF3838();
  os_log_type_t v7 = sub_191CF5918();
  uint64_t v19 = v3;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v20[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    swift_bridgeObjectRetain();
    sub_191C5C36C(v3, v2, v20);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v10 = sub_191CF5368();
    sub_191C5C36C(v10, v11, v20);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v6, v7, "Remove reference from %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v9, -1, -1);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters;
  swift_beginAccess();
  sub_191C781CC();
  swift_endAccess();
  if (*(void *)(*(void *)v12 + 16))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF3838();
    os_log_type_t v14 = sub_191CF5948();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v20[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_191C5C36C(v19, v2, v20);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v13, v14, "Stopped %{public}s.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v16, -1, -1);
      MEMORY[0x192FE5F00](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v17 = OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer), sel_invalidate);
    uint64_t v18 = *(void **)(v1 + v17);
    *(void *)(v1 + v17) = 0;
  }
}

uint64_t sub_191BF8510()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448A30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_191BF85E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v35 = a2;
  uint64_t v9 = sub_191CF3178();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *a1;
  char v17 = *((unsigned char *)a1 + 8);
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = swift_getKeyPath();
  *(unsigned char *)(a3 + 24) = 0;
  uint64_t v18 = (int *)type metadata accessor for _ClockHandRotationEffect(0);
  uint64_t v19 = (uint64_t *)(a3 + v18[6]);
  *uint64_t v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  swift_storeEnumTagMultiPayload();
  *(void *)(a3 + v18[7]) = 0;
  uint64_t v20 = a3 + v18[8];
  sub_191CF3168();
  long long v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v31(v13, v15, v9);
  uint64_t v33 = v20;
  sub_191CF4FB8();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v34 = v10 + 8;
  id v32 = v21;
  v21(v15, v9);
  if (v17) {
    uint64_t v22 = qword_191D01B50[v16];
  }
  else {
    uint64_t v22 = v16;
  }
  *(void *)(a3 + v18[11]) = v22;
  uint64_t v36 = v16;
  char v37 = v17;
  *(void *)(a3 + v18[9]) = sub_191BFC390();
  uint64_t v23 = a3 + v18[12];
  uint64_t v24 = sub_191CF3318();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v23;
  uint64_t v27 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v35, v24);
  unint64_t v28 = (double *)(a3 + v18[10]);
  *unint64_t v28 = a4;
  v28[1] = a5;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  sub_191CF38F8();
  swift_release();
  swift_release();
  swift_release();
  v31(v13, v15, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  sub_191CF4FD8();
  v32(v15, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
}

uint64_t sub_191BF892C()
{
  uint64_t v1 = 0x646F69726570;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E6F5A656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F68636E61;
  }
}

uint64_t sub_191BF8980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191BFC4BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191BF89A8(uint64_t a1)
{
  unint64_t v2 = sub_191BF8CE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191BF89E4(uint64_t a1)
{
  unint64_t v2 = sub_191BF8CE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _ClockHandRotationEffect.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = sub_191CF3318();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CC0);
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BF8CE8();
  sub_191CF6508();
  if (!v2)
  {
    uint64_t v10 = (uint64_t)v6;
    uint64_t v11 = v16;
    type metadata accessor for CGPoint(0);
    char v20 = 0;
    sub_191BF8D3C((unint64_t *)&unk_1E92E0CA8, type metadata accessor for CGPoint);
    sub_191CF6178();
    double v12 = v18;
    double v13 = v19;
    LOBYTE(v18) = 1;
    sub_191CF6138();
    double v18 = *(double *)&v15;
    LOBYTE(v19) = 0;
    char v20 = 2;
    sub_191BF8D3C((unint64_t *)&unk_1E92E0C68, MEMORY[0x1E4F27D68]);
    sub_191CF6178();
    sub_191BF85E8((uint64_t *)&v18, v10, v11, v12, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_191BF8CE8()
{
  unint64_t result = qword_1EB4471F8;
  if (!qword_1EB4471F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4471F8);
  }
  return result;
}

uint64_t sub_191BF8D3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _ClockHandRotationEffect.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191BF8CE8();
  sub_191CF6528();
  long long v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for _ClockHandRotationEffect(0) + 40));
  v10[15] = 0;
  type metadata accessor for CGPoint(0);
  sub_191BF8D3C(&qword_1E92E0748, type metadata accessor for CGPoint);
  sub_191CF6278();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_191CF6238();
    LOBYTE(v11) = 2;
    sub_191CF3318();
    sub_191BF8D3C(&qword_1E92E0740, MEMORY[0x1E4F27D68]);
    sub_191CF6278();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for _ClockHandRotationEffect(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB448A90);
}

uint64_t _ClockHandRotationEffect.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v100 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C80);
  uint64_t v98 = *(void *)(v5 - 8);
  uint64_t v99 = v5;
  MEMORY[0x1F4188790](v5);
  int v97 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF3B98();
  uint64_t v94 = *(void *)(v7 - 8);
  uint64_t v95 = v7;
  MEMORY[0x1F4188790](v7);
  long long v90 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for _ClockHandRotationEffect(0);
  uint64_t v91 = *(void *)(v101 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v101);
  uint64_t v96 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = (uint64_t)&v78 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_191CF3178();
  uint64_t v15 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C90);
  MEMORY[0x1F4188790](v18 - 8);
  char v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44D0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44D8);
  MEMORY[0x1F4188790](v80);
  uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44E0);
  MEMORY[0x1F4188790](v81);
  uint64_t v82 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44E8);
  MEMORY[0x1F4188790](v83);
  uint64_t v85 = (uint64_t)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44F0);
  MEMORY[0x1F4188790](v84);
  uint64_t v87 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44F8);
  MEMORY[0x1F4188790](v86);
  uint64_t v93 = (uint64_t)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4500);
  MEMORY[0x1F4188790](v88);
  uint64_t v89 = (uint64_t)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v20, a1, v32);
  uint64_t KeyPath = swift_getKeyPath();
  sub_191B01614((uint64_t)v20, (uint64_t)v24, &qword_1E92E0C90);
  uint64_t v34 = *(int *)(v22 + 44);
  uint64_t v35 = v101;
  uint64_t v36 = &v24[v34];
  *(void *)uint64_t v36 = KeyPath;
  uint64_t v37 = v78;
  v36[8] = 0;
  sub_191B01770((uint64_t)v20, &qword_1E92E0C90);
  sub_191BDD3F4((uint64_t)v14);
  uint64_t v38 = v79;
  sub_191BFA42C(v3, v79);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v37) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
    sub_191CF4FC8();
    sub_191BFA490(v38);
    sub_191B01770((uint64_t)v14, &qword_1EB44B520);
  }
  else
  {
    sub_191BFA490(v38);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v37);
  }
  double v39 = (double)sub_191CF32E8();
  sub_191CF30F8();
  long double v41 = v40 + v39;
  long double v42 = *(double *)(v3 + *(int *)(v35 + 44));
  long double v43 = fmod(v41, v42);
  long double v44 = (v43 + v43) * 3.14159265 / v42;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v37);
  sub_191CF5108();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_191B01614((uint64_t)v24, (uint64_t)v26, &qword_1E92E44D0);
  uint64_t v49 = &v26[*(int *)(v80 + 36)];
  *(long double *)uint64_t v49 = v44;
  *((void *)v49 + 1) = v46;
  *((void *)v49 + 2) = v48;
  sub_191B01770((uint64_t)v24, &qword_1E92E44D0);
  uint64_t v50 = swift_getKeyPath();
  uint64_t v52 = v94;
  uint64_t v51 = v95;
  uint64_t v53 = v90;
  (*(void (**)(char *, void, uint64_t))(v94 + 104))(v90, *MEMORY[0x1E4F3CBD8], v95);
  uint64_t v54 = (uint64_t)v82;
  uint64_t v55 = (uint64_t *)&v82[*(int *)(v81 + 36)];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CA0);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v55 + *(int *)(v56 + 28), v53, v51);
  *uint64_t v55 = v50;
  sub_191B01614((uint64_t)v26, v54, &qword_1E92E44D8);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  sub_191B01770((uint64_t)v26, &qword_1E92E44D8);
  uint64_t v57 = v96;
  sub_191BFA42C(v3, v96);
  unint64_t v58 = (*(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  uint64_t v59 = swift_allocObject();
  sub_191BFA518(v57, v59 + v58);
  uint64_t v60 = v85;
  sub_191B01614(v54, v85, &qword_1E92E44E0);
  uint64_t v61 = (uint64_t (**)())(v60 + *(int *)(v83 + 36));
  *uint64_t v61 = sub_191BFA57C;
  v61[1] = (uint64_t (*)())v59;
  v61[2] = 0;
  v61[3] = 0;
  sub_191B01770(v54, &qword_1E92E44E0);
  sub_191BFA42C(v3, v57);
  uint64_t v62 = swift_allocObject();
  sub_191BFA518(v57, v62 + v58);
  uint64_t v63 = v87;
  sub_191B01614(v60, v87, &qword_1E92E44E8);
  uint64_t v64 = (void *)(v63 + *(int *)(v84 + 36));
  *uint64_t v64 = 0;
  v64[1] = 0;
  v64[2] = sub_191BFA598;
  v64[3] = v62;
  sub_191B01770(v60, &qword_1E92E44E8);
  uint64_t v65 = *(void *)v3;
  char v66 = *(unsigned char *)(v3 + 8);
  sub_191B1BB50(*(void *)v3, v66);
  LOBYTE(v60) = sub_191BDD1F0(v65, v66);
  sub_191B172D4(v65, v66);
  sub_191BFA42C(v3, v57);
  uint64_t v67 = swift_allocObject();
  sub_191BFA518(v57, v67 + v58);
  uint64_t v68 = v93;
  sub_191B01614(v63, v93, &qword_1E92E44F0);
  uint64_t v69 = v68 + *(int *)(v86 + 36);
  *(unsigned char *)uint64_t v69 = v60 & 1;
  *(void *)(v69 + 8) = sub_191BFA618;
  *(void *)(v69 + 16) = v67;
  sub_191B01770(v63, &qword_1E92E44F0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448A30);
  long long v70 = v97;
  sub_191CF38E8();
  swift_endAccess();
  sub_191BFA42C(v3, v57);
  uint64_t v71 = swift_allocObject();
  sub_191BFA518(v57, v71 + v58);
  uint64_t v72 = v89;
  sub_191B01614(v68, v89, &qword_1E92E44F8);
  uint64_t v73 = v88;
  uint64_t v75 = v98;
  uint64_t v74 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v72 + *(int *)(v88 + 52), v70, v99);
  uint64_t v76 = (uint64_t (**)(uint64_t))(v72 + *(int *)(v73 + 56));
  *uint64_t v76 = sub_191BFA68C;
  v76[1] = (uint64_t (*)(uint64_t))v71;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v70, v74);
  sub_191B01770(v68, &qword_1E92E44F8);
  return sub_191BFA6FC(v72, v100);
}

uint64_t sub_191BF9AE4()
{
  return sub_191CF3DE8();
}

uint64_t sub_191BF9B08(uint64_t a1)
{
  uint64_t v2 = sub_191CF3B98();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_191CF3DF8();
}

uint64_t sub_191BF9BD0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  type metadata accessor for _ClockHandRotationEffect(0);
  uint64_t v3 = sub_191CF50B8();
  return a2(v3);
}

uint64_t sub_191BF9C20(unsigned char *a1)
{
  uint64_t v2 = sub_191CF3178();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v10 - v8;
  if ((*a1 & 1) == 0)
  {
    type metadata accessor for _ClockHandRotationEffect(0);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_191CF38F8();
    swift_release();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
    sub_191CF4FD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  return result;
}

uint64_t sub_191BF9DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3178();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)a2;
  char v12 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v12);
  char v13 = sub_191BDD1F0(v11, v12);
  uint64_t result = sub_191B172D4(v11, v12);
  if ((v13 & 1) == 0)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    type metadata accessor for _ClockHandRotationEffect(0);
    v15(v8, (uint64_t)v10, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
    sub_191CF4FD8();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

uint64_t sub_191BF9F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_191BF8D3C(&qword_1EB448A70, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);

  return MEMORY[0x1F40FA660](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191BF9FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_191BF8D3C(&qword_1EB448A70, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);

  return MEMORY[0x1F40FA668](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191BFA09C()
{
  return sub_191CF46C8();
}

uint64_t sub_191BFA12C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return _ClockHandRotationEffect.init(from:)(a1, a2);
}

uint64_t sub_191BFA144(void *a1)
{
  return _ClockHandRotationEffect.encode(to:)(a1);
}

uint64_t View._clockHandRotationEffect(_:in:anchor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12 = sub_191CF3318();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for _ClockHandRotationEffect(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = *(void *)a1;
  char v23 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_191BF85E8(&v22, (uint64_t)v15, (uint64_t)v18, a5, a6);
  MEMORY[0x192FE3AA0](v18, a3, v16, a4);
  return sub_191BFA490((uint64_t)v18);
}

uint64_t sub_191BFA2F4@<X0>(unsigned char *a1@<X8>)
{
  sub_191BFC690();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BFA344@<X0>(unsigned char *a1@<X8>)
{
  sub_191BFC690();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BFA394()
{
  return sub_191CF4078();
}

uint64_t sub_191BFA3E0()
{
  return sub_191CF4078();
}

uint64_t sub_191BFA42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BFA490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191BFA4EC()
{
  return sub_191CF3DE8();
}

uint64_t sub_191BFA518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BFA57C()
{
  return sub_191BFA5B0(sub_191BF7470);
}

uint64_t sub_191BFA598()
{
  return sub_191BFA5B0((uint64_t (*)(uint64_t))sub_191BF816C);
}

uint64_t sub_191BFA5B0(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for _ClockHandRotationEffect(0) - 8);
  return sub_191BF9BD0(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_191BFA618(unsigned char *a1)
{
  type metadata accessor for _ClockHandRotationEffect(0);

  return sub_191BF9C20(a1);
}

uint64_t sub_191BFA68C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for _ClockHandRotationEffect(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_191BF9DB8(a1, v4);
}

uint64_t sub_191BFA6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BFA764()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191BFA780()
{
  return sub_191BF8D3C(&qword_1EB448A88, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);
}

uint64_t sub_191BFA7C8()
{
  return sub_191BF8D3C(&qword_1EB448A80, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);
}

uint64_t sub_191BFA810()
{
  return sub_191BF8D3C(&qword_1EB448A78, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);
}

uint64_t sub_191BFA858()
{
  return type metadata accessor for DatePublisher(0);
}

uint64_t type metadata accessor for DatePublisher(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB4471D8);
}

void sub_191BFA880()
{
  sub_191BFBD8C(319, &qword_1EB4471A8, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t initializeBufferWithCopyOfBuffer for _ClockHandRotationEffect(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_191B1BB50(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_191B1BB50(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_191CF3178();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[8];
    *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = a2 + v18;
    uint64_t v21 = sub_191CF3178();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
    *(void *)(v19 + *(int *)(v22 + 28)) = *(void *)(v20 + *(int *)(v22 + 28));
    uint64_t v23 = a3[10];
    *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
    *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
    uint64_t v24 = a3[12];
    *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
    uint64_t v25 = a1 + v24;
    uint64_t v26 = a2 + v24;
    uint64_t v27 = sub_191CF3318();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_retain();
    swift_retain();
    v28(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for _ClockHandRotationEffect(uint64_t a1, int *a2)
{
  sub_191B172D4(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_191B172D4(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_191CF3178();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  swift_release();
  swift_release();
  uint64_t v9 = a1 + a2[12];
  uint64_t v10 = sub_191CF3318();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_191B1BB50(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_191CF3178();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  *(void *)(v17 + *(int *)(v20 + 28)) = *(void *)(v18 + *(int *)(v20 + 28));
  uint64_t v21 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_191CF3318();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_retain();
  swift_retain();
  v26(v23, v24, v25);
  return a1;
}

uint64_t assignWithCopy for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_191B172D4(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_191B1BB50(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_191B172D4(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_191B01770(a1 + v14, (uint64_t *)&unk_1EB448A38);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_191CF3178();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  *(void *)(v21 + *(int *)(v24 + 28)) = *(void *)(v22 + *(int *)(v24 + 28));
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v28 = a3[12];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_191CF3318();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

uint64_t initializeWithTake for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_191CF3178();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  *(void *)(v14 + *(int *)(v17 + 28)) = *(void *)(v15 + *(int *)(v17 + 28));
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_191CF3318();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for _ClockHandRotationEffect(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_191B172D4(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_191B172D4(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_191B01770(a1 + v13, (uint64_t *)&unk_1EB448A38);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_191CF3178();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v14, v15, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v20 = a3[8];
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t)a2 + v20;
  uint64_t v23 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  *(void *)(v21 + *(int *)(v24 + 28)) = *(void *)(v22 + *(int *)(v24 + 28));
  swift_release();
  *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_release();
  uint64_t v25 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(void *)(a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t)a2 + v26;
  uint64_t v29 = sub_191CF3318();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BFB8C4);
}

uint64_t sub_191BFB8C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C88);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[9]);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_191CF3318();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[12];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BFBA5C);
}

uint64_t sub_191BFBA5C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C88);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_5:
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9]) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = sub_191CF3318();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[12];
    return v15(v17, a2, a2, v16);
  }
  return result;
}

void sub_191BFBBE0()
{
  sub_191BFBD30();
  if (v0 <= 0x3F)
  {
    sub_191BFBD8C(319, qword_1EB448AA0, MEMORY[0x1E4F3ECC8]);
    if (v1 <= 0x3F)
    {
      sub_191CF3318();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_191BFBD30()
{
  if (!qword_1EB448B58[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44B520);
    unint64_t v0 = sub_191CF39A8();
    if (!v1) {
      atomic_store(v0, qword_1EB448B58);
    }
  }
}

void sub_191BFBD8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_191CF3178();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ClockHandRotationEffect.Period(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _ClockHandRotationEffect.Period(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_191BFBE50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_191BFBE6C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ClockHandRotationEffect.Period()
{
  return &type metadata for _ClockHandRotationEffect.Period;
}

unint64_t sub_191BFBEA0()
{
  unint64_t result = qword_1E92E4508;
  if (!qword_1E92E4508)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4508);
  }
  return result;
}

uint64_t sub_191BFBEFC()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for _ClockHandRotationEffect.CodableKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191BFC064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ClockHandRotationEffect.CodableKeys()
{
  return &type metadata for _ClockHandRotationEffect.CodableKeys;
}

unint64_t sub_191BFC0A0()
{
  unint64_t result = qword_1E92E4510;
  if (!qword_1E92E4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4510);
  }
  return result;
}

unint64_t sub_191BFC0F8()
{
  unint64_t result = qword_1EB4471F0;
  if (!qword_1EB4471F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4471F0);
  }
  return result;
}

unint64_t sub_191BFC150()
{
  unint64_t result = qword_1EB4471E8;
  if (!qword_1EB4471E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4471E8);
  }
  return result;
}

uint64_t sub_191BFC1A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_191CF38F8();
  swift_release();

  return swift_release();
}

uint64_t sub_191BFC220(uint64_t a1)
{
  uint64_t v2 = sub_191CF3178();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_191CF3908();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_191BFC390()
{
  double v1 = *(double *)v0;
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (v1 != 0.0)
    {
      if (*(void *)&v1 == 1) {
        goto LABEL_4;
      }
LABEL_16:
      if (qword_1EB4471D0 != -1) {
        swift_once();
      }
      uint64_t v2 = &qword_1EB44C770;
      return *v2;
    }
  }
  else
  {
    double v3 = *(double *)v0;
    if (v1 < 43200.0 || v3 > 1.79769313e308)
    {
      if (v3 >= 3600.0 && v3 < 43200.0)
      {
LABEL_4:
        if (qword_1EB448A50 != -1) {
          swift_once();
        }
        uint64_t v2 = &qword_1EB44C780;
        return *v2;
      }
      goto LABEL_16;
    }
  }
  if (qword_1EB448A48 != -1) {
    swift_once();
  }
  uint64_t v2 = &qword_1EB44C778;
  return *v2;
}

uint64_t sub_191BFC4BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F68636E61 && a2 == 0xE600000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_191BFC60C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_191BFC644()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191BFC684(uint64_t a1)
{
  return sub_191BF7E60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_191BFC690()
{
  unint64_t result = qword_1E92E1020;
  if (!qword_1E92E1020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1020);
  }
  return result;
}

uint64_t EnvironmentValues._wantsCustomFontsEmbeddedInArchive.getter()
{
  sub_191B4F734();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._wantsCustomFontsEmbeddedInArchive.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues._wantsCustomFontsEmbeddedInArchive.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F734();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BFC7E0;
}

uint64_t sub_191BFC7E0(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s36WantsCustomFontsEmbeddedInArchiveKeyVMa()
{
  return &_s36WantsCustomFontsEmbeddedInArchiveKeyVN;
}

uint64_t sub_191BFC830()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C990 = result;
  return result;
}

uint64_t sub_191BFC858()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A610);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C978 = v0;
  unk_1EB44C980 = 0xD000000000000025;
  qword_1EB44C988 = 0x8000000191D0FF90;
  return result;
}

ValueMetadata *type metadata accessor for WantsCustomFontsEmbeddedInArchiveKey()
{
  return &type metadata for WantsCustomFontsEmbeddedInArchiveKey;
}

uint64_t sub_191BFC8E0()
{
  if (qword_1EB44A718 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191BFC93C()
{
  if (qword_1EB44A710 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C978;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t EnvironmentValues.inJindo.getter()
{
  sub_191BFCA00();
  sub_191CF4068();
  return v1;
}

unint64_t sub_191BFCA00()
{
  unint64_t result = qword_1E92E2298;
  if (!qword_1E92E2298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2298);
  }
  return result;
}

uint64_t EnvironmentValues.inJindo.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.inJindo.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BFCA00();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BFCB04;
}

uint64_t sub_191BFCB04(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

uint64_t sub_191BFCB3C@<X0>(unsigned char *a1@<X8>)
{
  sub_191BFCA00();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191BFCB8C()
{
  return sub_191CF4078();
}

ValueMetadata *_s22_InJindoEnvironmentKeyVMa()
{
  return &_s22_InJindoEnvironmentKeyVN;
}

uint64_t destroy for WidgetURLSessionEventConfiguration()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for WidgetURLSessionEventConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for WidgetURLSessionEventConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WidgetURLSessionEventConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetURLSessionEventConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetURLSessionEventConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewSource()
{
  return &type metadata for ActivityViewSource;
}

void *sub_191BFCDB0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF3378();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_191B15F88(*v10, v12);
    *uint64_t v9 = v11;
    v9[1] = v12;
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_191BFCEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_191B1603C(v6, v7);
}

uint64_t sub_191BFCF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_191B15F88(*v9, v11);
  *uint64_t v8 = v10;
  v8[1] = v11;
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191BFCFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_191B15F88(*v9, v11);
  uint64_t v12 = *v8;
  unint64_t v13 = v8[1];
  *uint64_t v8 = v10;
  v8[1] = v11;
  sub_191B1603C(v12, v13);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191BFD06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_191BFD0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  unint64_t v9 = *(void *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_191B1603C(v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191BFD184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BFD198);
}

uint64_t sub_191BFD198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3378();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_191BFD268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BFD27C);
}

uint64_t sub_191BFD27C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF3378();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for ActivityViewSourceContext()
{
  uint64_t result = qword_1E92E1678;
  if (!qword_1E92E1678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191BFD384()
{
  uint64_t result = sub_191CF3378();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191BFD424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v113 = a3;
  os_log_t v122 = (os_log_t)type metadata accessor for ActivityViewSourceContext();
  uint64_t v5 = MEMORY[0x1F4188790](v122);
  uint64_t v115 = (uint64_t)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v121 = (uint64_t)&v107 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_191CF5BC8();
  uint64_t v119 = *(void *)(v8 - 8);
  uint64_t v120 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v114 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v112 = (char *)&v107 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  long long v117 = (char *)&v107 - v14;
  MEMORY[0x1F4188790](v13);
  int v123 = (uint64_t *)((char *)&v107 - v15);
  uint64_t v16 = sub_191CF5BC8();
  uint64_t v126 = *(void *)(v16 - 8);
  uint64_t v127 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v116 = (uint64_t)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v107 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v107 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v107 - v25;
  uint64_t v27 = *(void *)(a1 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28((char *)&v107 - v25, 1, 1, a1);
  uint64_t v29 = v125;
  sub_191CF3348();
  int v124 = v26;
  uint64_t v125 = v29;
  if (v29)
  {
    if (qword_1E92E1198 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_191CF3858();
    __swift_project_value_buffer(v30, (uint64_t)qword_1E92F24A8);
    uint64_t v31 = v121;
    sub_191BFE21C(v130, v121);
    id v32 = v125;
    uint64_t v33 = v125;
    id v34 = v32;
    uint64_t v35 = sub_191CF3838();
    os_log_type_t v36 = sub_191CF5928();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      int v123 = (void *)swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      v129[0] = v130;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v38 = sub_191CF3328();
      unint64_t v40 = v39;
      uint64_t v41 = sub_191CF3098();
      unint64_t v43 = v42;
      sub_191B1603C(v38, v40);
      uint64_t v128 = sub_191C5C36C(v41, v43, v129);
      id v44 = v125;
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      sub_191BFE280(v31);
      *(_WORD *)(v37 + 12) = 2112;
      id v45 = v44;
      uint64_t v46 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v128 = v46;
      sub_191CF5C08();
      uint64_t v47 = v123;
      *int v123 = v46;

      _os_log_impl(&dword_191AF4000, v35, v36, "Error decoding activity attributes: %s: %@", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v47, -1, -1);
      uint64_t v48 = v130;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v48, -1, -1);
      MEMORY[0x192FE5F00](v37, -1, -1);
    }
    else
    {
      sub_191BFE280(v31);
    }
    uint64_t v84 = v126;
    uint64_t v83 = v127;
    uint64_t v85 = v124;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v85, v83);
  }
  uint64_t v109 = v21;
  uint64_t v108 = v27;
  uint64_t v111 = a2;
  v28(v24, 0, 1, a1);
  (*(void (**)(char *, char *, uint64_t))(v126 + 40))(v26, v24, v127);
  if (qword_1E92E1198 != -1) {
    swift_once();
  }
  uint64_t v121 = a1;
  uint64_t v49 = sub_191CF3858();
  uint64_t v110 = __swift_project_value_buffer(v49, (uint64_t)qword_1E92F24A8);
  uint64_t v50 = sub_191CF3838();
  os_log_type_t v51 = sub_191CF5918();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v53 = v109;
  if (v52)
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v129[0] = v55;
    *(_DWORD *)uint64_t v54 = 136315138;
    uint64_t v56 = v124;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v53, v56, v127);
    uint64_t v57 = sub_191CF5368();
    uint64_t v128 = sub_191C5C36C(v57, v58, v129);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v50, v51, "Decoded activity attributes: %s", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v55, -1, -1);
    MEMORY[0x192FE5F00](v54, -1, -1);
  }

  uint64_t v59 = v130;
  uint64_t v60 = AssociatedTypeWitness;
  uint64_t v109 = *(char **)(AssociatedTypeWitness - 8);
  uint64_t v61 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v109 + 7);
  v61((char *)v123, 1, 1, AssociatedTypeWitness);
  sub_191CF2E28();
  swift_allocObject();
  uint64_t v62 = sub_191CF2E18();
  swift_getAssociatedConformanceWitness();
  uint64_t v63 = v117;
  id v64 = v125;
  sub_191CF2E08();
  if (v64)
  {
    swift_release();
    uint64_t v65 = v115;
    sub_191BFE21C(v59, v115);
    id v66 = v64;
    id v67 = v64;
    uint64_t v68 = sub_191CF3838();
    os_log_type_t v69 = sub_191CF5928();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v125 = (void *)swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      v129[0] = v130;
      *(_DWORD *)uint64_t v70 = 136315394;
      uint64_t v71 = (uint64_t *)(v65 + SHIDWORD(v122[2].isa));
      uint64_t v72 = *v71;
      unint64_t v73 = v71[1];
      sub_191B15F88(*v71, v73);
      uint64_t v74 = sub_191CF3098();
      os_log_t v122 = v68;
      uint64_t v75 = v65;
      unint64_t v77 = v76;
      sub_191B1603C(v72, v73);
      uint64_t v128 = sub_191C5C36C(v74, v77, v129);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      sub_191BFE280(v75);
      *(_WORD *)(v70 + 12) = 2112;
      id v78 = v64;
      uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v128 = v79;
      sub_191CF5C08();
      uint64_t v80 = v125;
      *uint64_t v125 = v79;

      os_log_t v81 = v122;
      _os_log_impl(&dword_191AF4000, v122, v69, "Error decoding activity state: %s: %@", (uint8_t *)v70, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v80, -1, -1);
      uint64_t v82 = v130;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v82, -1, -1);
      MEMORY[0x192FE5F00](v70, -1, -1);
    }
    else
    {
      sub_191BFE280(v65);
    }
    uint64_t v84 = v126;
    uint64_t v83 = v127;
    uint64_t v85 = v124;
    uint64_t v106 = v119;
    swift_willThrow();
    (*(void (**)(void *, uint64_t))(v106 + 8))(v123, v120);
    return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v85, v83);
  }
  uint64_t v115 = v62;
  v61(v63, 0, 1, v60);
  uint64_t v87 = v119;
  uint64_t v86 = v120;
  uint64_t v88 = v123;
  (*(void (**)(void *, char *, uint64_t))(v119 + 40))(v123, v63, v120);
  uint64_t v89 = sub_191CF3838();
  os_log_type_t v90 = sub_191CF5918();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v125 = 0;
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    long long v117 = (char *)swift_slowAlloc();
    v129[0] = (uint64_t)v117;
    *(_DWORD *)uint64_t v91 = 136315138;
    uint64_t v110 = (uint64_t)(v91 + 4);
    swift_beginAccess();
    (*(void (**)(char *, void *, uint64_t))(v87 + 16))(v112, v88, v86);
    uint64_t v92 = sub_191CF5368();
    uint64_t v128 = sub_191C5C36C(v92, v93, v129);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v89, v90, "Decoded activity state: %s", v91, 0xCu);
    uint64_t v94 = v117;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v94, -1, -1);
    MEMORY[0x192FE5F00](v91, -1, -1);
  }

  swift_release();
  uint64_t v96 = v126;
  uint64_t v95 = v127;
  int v97 = v124;
  uint64_t v98 = (uint64_t)v114;
  uint64_t v127 = sub_191CF3368();
  uint64_t v100 = v99;
  swift_beginAccess();
  uint64_t v101 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v116, v97, v95);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v101, 1, v121);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v103 = v123;
    swift_beginAccess();
    uint64_t v105 = v119;
    uint64_t v104 = v120;
    (*(void (**)(uint64_t, void *, uint64_t))(v119 + 16))(v98, v103, v120);
    uint64_t result = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v109 + 6))(v98, 1, AssociatedTypeWitness);
    if (result != 1)
    {
      sub_191B9B458(v127, v100, v116, v98, *(unsigned char *)(v130 + SLODWORD(v122[3].isa)), v121, v113);
      (*(void (**)(void *, uint64_t))(v105 + 8))(v103, v104);
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v97, v95);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191BFE21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityViewSourceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191BFE280(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityViewSourceContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EnvironmentValues._widgetAccessoryBackgroundAccentable.getter()
{
  sub_191BA0A90();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._widgetAccessoryBackgroundAccentable.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues._widgetAccessoryBackgroundAccentable.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BA0A90();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191BFE3C8;
}

uint64_t sub_191BFE3C8(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *type metadata accessor for WidgetAccessoryBackgroundAccentableEnvironmentKey()
{
  return &type metadata for WidgetAccessoryBackgroundAccentableEnvironmentKey;
}

uint64_t *sub_191BFE418(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_191CF3078();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for BundleStub();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
    uint64_t v30 = (char *)a1 + v21;
    uint64_t v29 = (char *)a2 + v21;
    uint64_t v23 = sub_191CF3178();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    id v25 = v13;
    swift_bridgeObjectRetain();
    id v26 = v19;
    id v27 = v22;
    v24(v30, v29, v23);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_191BFE650(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }

  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_release();
}

char *sub_191BFE79C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for BundleStub();
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v11;
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v17 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = *(void **)&a2[v18];
  *(void *)&a1[v18] = v20;
  uint64_t v28 = &a1[v19];
  id v27 = &a2[v19];
  uint64_t v21 = sub_191CF3178();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  id v23 = v11;
  swift_bridgeObjectRetain();
  id v24 = v17;
  id v25 = v20;
  v22(v28, v27, v21);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_retain();
  return a1;
}

char *sub_191BFE988(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for BundleStub();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = *(void **)&a2[v13];
  uint64_t v15 = *(void **)&a1[v13];
  *(void *)&a1[v13] = v14;
  id v16 = v14;

  uint64_t v17 = *(int *)(v12 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *((_DWORD *)v21 + 1) = *((_DWORD *)v22 + 1);
  uint64_t v23 = a3[6];
  id v24 = *(void **)&a2[v23];
  id v25 = *(void **)&a1[v23];
  *(void *)&a1[v23] = v24;
  id v26 = v24;

  uint64_t v27 = a3[7];
  uint64_t v28 = *(void **)&a2[v27];
  uint64_t v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  uint64_t v31 = a3[8];
  id v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_191BFEC08(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for BundleStub();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  *(_OWORD *)&a1[*(int *)(v9 + 24)] = *(_OWORD *)&a2[*(int *)(v9 + 24)];
  uint64_t v10 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_191BFEDB4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for BundleStub();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = *(void **)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];

  uint64_t v15 = *(int *)(v12 + 24);
  id v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)id v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v21 = *(void **)&a1[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];

  uint64_t v22 = a3[7];
  uint64_t v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  uint64_t v24 = a3[8];
  id v25 = &a1[v24];
  id v26 = &a2[v24];
  uint64_t v27 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  return a1;
}

uint64_t sub_191BFEFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191BFF010);
}

uint64_t sub_191BFF010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BundleStub();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_191CF3178();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_191BFF13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191BFF150);
}

uint64_t sub_191BFF150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BundleStub();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_191CF3178();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ControlArchiveStorageMetadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E2BA8);
}

uint64_t sub_191BFF29C()
{
  uint64_t result = type metadata accessor for BundleStub();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF3178();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191BFF388(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_191CF3078();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v10 = type metadata accessor for BundleStub();
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
    *(uint64_t *)((char *)a1 + v17[5]) = *(uint64_t *)((char *)a2 + v17[5]);
    uint64_t v18 = v17[6];
    uint64_t v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    uint64_t v20 = v17[7];
    uint64_t v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
    uint64_t v22 = v17[8];
    id v30 = (char *)a2 + v22;
    uint64_t v31 = (char *)a1 + v22;
    uint64_t v23 = sub_191CF3178();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    id v25 = v12;
    swift_bridgeObjectRetain();
    id v26 = v19;
    id v27 = v21;
    v24(v31, v30, v23);
    *(uint64_t *)((char *)a1 + v17[9]) = *(uint64_t *)((char *)a2 + v17[9]);
    uint64_t v28 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v28) = *(_DWORD *)((char *)a2 + v28);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191BFF5F4(uint64_t a1)
{
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);

  uint64_t v5 = a1 + v4[8];
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_bridgeObjectRelease();
}

char *sub_191BFF758(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v8 = type metadata accessor for BundleStub();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v10;
  uint64_t v11 = *(int *)(v8 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  uint64_t v15 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)&a1[v15[5]] = *(void *)&a2[v15[5]];
  uint64_t v16 = v15[6];
  uint64_t v17 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v17;
  uint64_t v18 = v15[7];
  uint64_t v19 = *(void **)&a2[v18];
  *(void *)&a1[v18] = v19;
  uint64_t v20 = v15[8];
  uint64_t v28 = &a2[v20];
  uint64_t v29 = &a1[v20];
  uint64_t v21 = sub_191CF3178();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  id v23 = v10;
  swift_bridgeObjectRetain();
  id v24 = v17;
  id v25 = v19;
  v22(v29, v28, v21);
  *(void *)&a1[v15[9]] = *(void *)&a2[v15[9]];
  uint64_t v26 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(_DWORD *)&a1[v26] = *(_DWORD *)&a2[v26];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_191BFF974(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for BundleStub();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = *(void **)&a2[v13];
  uint64_t v15 = *(void **)&a1[v13];
  *(void *)&a1[v13] = v14;
  id v16 = v14;

  uint64_t v17 = *(int *)(v12 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = &a1[v21];
  id v23 = &a2[v21];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
  uint64_t v24 = v20[6];
  id v25 = *(void **)&a2[v24];
  uint64_t v26 = *(void **)&a1[v24];
  *(void *)&a1[v24] = v25;
  id v27 = v25;

  uint64_t v28 = v20[7];
  uint64_t v29 = *(void **)&a2[v28];
  id v30 = *(void **)&a1[v28];
  *(void *)&a1[v28] = v29;
  id v31 = v29;

  uint64_t v32 = v20[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  *(void *)&a1[v20[9]] = *(void *)&a2[v20[9]];
  swift_retain();
  swift_release();
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[*(int *)(a3 + 24)] = *(_DWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_191BFFC28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for BundleStub();
  *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
  *(_OWORD *)&a1[*(int *)(v9 + 24)] = *(_OWORD *)&a2[*(int *)(v9 + 24)];
  int v10 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)&a1[v10[5]] = *(void *)&a2[v10[5]];
  *(void *)&a1[v10[6]] = *(void *)&a2[v10[6]];
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v11 = v10[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)&a1[v10[9]] = *(void *)&a2[v10[9]];
  uint64_t v15 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  return a1;
}

char *sub_191BFFDFC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for BundleStub();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = *(void **)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];

  uint64_t v15 = *(int *)(v12 + 24);
  id v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)id v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(void *)&a1[v20[5]] = *(void *)&a2[v20[5]];
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  uint64_t v23 = v20[7];
  uint64_t v24 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  uint64_t v25 = v20[8];
  uint64_t v26 = &a1[v25];
  id v27 = &a2[v25];
  uint64_t v28 = sub_191CF3178();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  *(void *)&a1[v20[9]] = *(void *)&a2[v20[9]];
  swift_release();
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[*(int *)(a3 + 24)] = *(_DWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_191C00074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C00088);
}

uint64_t sub_191C00088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ControlArchiveStorageMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191C00148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C0015C);
}

uint64_t sub_191C0015C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ControlArchiveStorageMetadata(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ControlArchiveStorage(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E2B78);
}

uint64_t sub_191C00238()
{
  uint64_t result = type metadata accessor for ControlArchiveStorageMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191C002E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD17C0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191CF6488();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191CF6488();
    sub_191C019C8(&qword_1E92E4520, MEMORY[0x1E4F276F0]);
    sub_191CF5278();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for BundleStub();
  sub_191CF5B68();
  sub_191CF5388();
  uint64_t v9 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  sub_191CF6498();
  sub_191CF6498();
  id v10 = *(id *)(v1 + v9[6]);
  sub_191CF5B68();

  id v11 = *(id *)(v1 + v9[7]);
  WidgetEnvironment.Storage.hash.getter();
  sub_191CF6478();

  sub_191CF3178();
  sub_191C019C8(&qword_1E92E3480, MEMORY[0x1E4F27928]);
  sub_191CF5278();
  v13[1] = *(void *)(v1 + v9[9]);
  sub_191CF34B8();
  sub_191C019C8(&qword_1E92E3A40, MEMORY[0x1E4F58930]);
  return sub_191CF5278();
}

uint64_t sub_191C005FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C01AA4();
  sub_191CF6528();
  LOBYTE(v12) = 0;
  type metadata accessor for BundleStub();
  sub_191C019C8(&qword_1EB44BA70, (void (*)(uint64_t))type metadata accessor for BundleStub);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
    uint64_t v12 = *(void *)(v3 + v9[5]);
    HIBYTE(v11) = 1;
    sub_191B71768();
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + v9[6]);
    HIBYTE(v11) = 2;
    sub_191B016E0(0, &qword_1E92E2AF0);
    sub_191C01BC0(&qword_1E92E24A0);
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + v9[7]);
    HIBYTE(v11) = 3;
    sub_191B717BC();
    sub_191CF6278();
    LOBYTE(v12) = 4;
    sub_191CF3178();
    sub_191C019C8((unint64_t *)&unk_1EB44BA50, MEMORY[0x1E4F27928]);
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + v9[9]);
    HIBYTE(v11) = 5;
    sub_191CF34B8();
    sub_191C019C8(&qword_1E92E2458, MEMORY[0x1E4F58930]);
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_191C0097C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_191CF3178();
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v6);
  uint64_t v23 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2248);
  uint64_t v21 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_191C01AA4();
  uint64_t v24 = v9;
  uint64_t v14 = v27;
  sub_191CF6508();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    id v27 = v5;
    uint64_t v15 = (uint64_t)v12;
    uint64_t v16 = v22;
    LOBYTE(v29) = 0;
    sub_191C019C8(&qword_1EB448D98, (void (*)(uint64_t))type metadata accessor for BundleStub);
    uint64_t v17 = (uint64_t)v23;
    sub_191CF6178();
    sub_191C01B58(v17, v15, (uint64_t (*)(void))type metadata accessor for BundleStub);
    char v28 = 1;
    sub_191B714B4();
    sub_191CF6178();
    *(void *)(v15 + v10[5]) = v29;
    sub_191B016E0(0, &qword_1E92E2AF0);
    char v28 = 2;
    sub_191C01BC0(&qword_1E92E2200);
    sub_191CF6178();
    *(void *)(v15 + v10[6]) = v29;
    char v28 = 3;
    sub_191B715A4();
    sub_191CF6178();
    *(void *)(v15 + v10[7]) = v29;
    LOBYTE(v29) = 4;
    sub_191C019C8(&qword_1EB448DB8, MEMORY[0x1E4F27928]);
    uint64_t v18 = v27;
    sub_191CF6178();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v15 + v10[8], v18, v3);
    sub_191CF34B8();
    char v28 = 5;
    sub_191C019C8(&qword_1E92E2150, MEMORY[0x1E4F58930]);
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
    *(void *)(v15 + MEMORY[0x24]) = v29;
    sub_191C01C14(v15, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    sub_191C01AF8(v15, type metadata accessor for ControlArchiveStorageMetadata);
  }
}

unint64_t sub_191C00FC8()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65566D6574737973;
      break;
    case 2:
      unint64_t result = 0x6C6F72746E6F63;
      break;
    case 3:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 4:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 5:
      unint64_t result = 0x6574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191C010AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C025E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C010D4(uint64_t a1)
{
  unint64_t v2 = sub_191C01AA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C01110(uint64_t a1)
{
  unint64_t v2 = sub_191C01AA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_191C0114C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_191C01164(void *a1)
{
  return sub_191C005FC(a1);
}

uint64_t sub_191C0117C()
{
  return sub_191CF64C8();
}

uint64_t sub_191C011C0()
{
  return sub_191CF64C8();
}

uint64_t sub_191C01200()
{
  return sub_191C019C8(&qword_1E92E4518, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorageMetadata);
}

uint64_t sub_191C01248()
{
  uint64_t v1 = 0x617461646174656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574616C706D6574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x5665766968637261;
  }
}

uint64_t sub_191C012B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C028B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C012DC(uint64_t a1)
{
  unint64_t v2 = sub_191C01974();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C01318(uint64_t a1)
{
  unint64_t v2 = sub_191C01974();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C01354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for ControlArchiveStorageMetadata(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2230);
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C01974();
  sub_191CF6508();
  if (!v2)
  {
    uint64_t v19 = a1;
    uint64_t v10 = v21;
    char v25 = 0;
    uint64_t v11 = sub_191CF6188();
    if ((int)v11 >= 2)
    {
      char v24 = 1;
      sub_191C019C8(&qword_1E92E21F0, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorageMetadata);
      sub_191CF6178();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2BB8);
      char v23 = 2;
      sub_191C01A10(&qword_1E92E21F8, &qword_1E92E2190);
      sub_191CF6178();
      uint64_t v15 = v22;
      if (*(void *)(v22 + 16))
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v7);
        uint64_t v16 = v20;
        sub_191C01B58((uint64_t)v6, v20, type metadata accessor for ControlArchiveStorageMetadata);
        uint64_t v17 = type metadata accessor for ControlArchiveStorage(0);
        *(void *)(v16 + *(int *)(v17 + 20)) = v15;
        *(_DWORD *)(v16 + *(int *)(v17 + 24)) = v11;
        uint64_t v13 = (uint64_t)v19;
        return __swift_destroy_boxed_opaque_existential_1(v13);
      }
      swift_bridgeObjectRelease();
      sub_191B16380();
      swift_allocError();
      *(void *)uint64_t v18 = 0xD00000000000001ELL;
      *(void *)(v18 + 8) = 0x8000000191D0FFC0;
      *(unsigned char *)(v18 + 16) = 2;
      swift_willThrow();
      sub_191C01AF8((uint64_t)v6, type metadata accessor for ControlArchiveStorageMetadata);
    }
    else
    {
      sub_191B16380();
      swift_allocError();
      *(void *)uint64_t v12 = (v11 << 32) | 2;
      *(void *)(v12 + 8) = 0;
      *(unsigned char *)(v12 + 16) = 0;
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v7);
    a1 = v19;
  }
  uint64_t v13 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_191C0170C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C01974();
  sub_191CF6528();
  char v13 = 0;
  sub_191CF6288();
  if (!v2)
  {
    char v12 = 1;
    type metadata accessor for ControlArchiveStorageMetadata(0);
    sub_191C019C8(&qword_1E92E2490, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorageMetadata);
    sub_191CF6278();
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for ControlArchiveStorage(0) + 20));
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2BB8);
    sub_191C01A10(&qword_1E92E2498, &qword_1E92E2480);
    sub_191CF6278();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191C01944@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C01354(a1, a2);
}

uint64_t sub_191C0195C(void *a1)
{
  return sub_191C0170C(a1);
}

unint64_t sub_191C01974()
{
  unint64_t result = qword_1E92E2B60;
  if (!qword_1E92E2B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B60);
  }
  return result;
}

uint64_t sub_191C019C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C01A10(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E2BB8);
    sub_191C019C8(a2, (void (*)(uint64_t))type metadata accessor for ControlTemplateType);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191C01AA4()
{
  unint64_t result = qword_1E92E2B90;
  if (!qword_1E92E2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B90);
  }
  return result;
}

uint64_t sub_191C01AF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C01B58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C01BC0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191B016E0(255, &qword_1E92E2AF0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C01C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlArchiveStorageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C01C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlArchiveStorageMetadata(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v59 = (uint64_t)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v53 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v57 = (char *)v53 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v58 = (uint64_t)v53 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v56 = (uint64_t)v53 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v55 = (uint64_t)v53 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v53 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  char v23 = (char *)v53 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)v53 - v25;
  MEMORY[0x1F4188790](v24);
  char v28 = (char *)v53 - v27;
  uint64_t v29 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  char v30 = sub_191CF5B58();
  sub_191C01C14(a1, (uint64_t)v28);
  sub_191C01C14(a2, (uint64_t)v26);
  if ((v30 & 1) == 0)
  {
    sub_191C01AF8((uint64_t)v26, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01AF8((uint64_t)v28, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01C14(a1, (uint64_t)v23);
    sub_191C01C14(a2, (uint64_t)v20);
    goto LABEL_9;
  }
  v53[1] = v29;
  uint64_t v54 = v4;
  char v31 = static BundleStub.== infix(_:_:)((uint64_t)v28, (uint64_t)v26);
  sub_191C01AF8((uint64_t)v26, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01AF8((uint64_t)v28, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01C14(a1, (uint64_t)v23);
  sub_191C01C14(a2, (uint64_t)v20);
  if ((v31 & 1) == 0)
  {
LABEL_9:
    sub_191C01AF8((uint64_t)v20, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01AF8((uint64_t)v23, type metadata accessor for ControlArchiveStorageMetadata);
    uint64_t v34 = v55;
    sub_191C01C14(a1, v55);
    uint64_t v35 = v56;
    sub_191C01C14(a2, v56);
    uint64_t v36 = (uint64_t)v57;
    goto LABEL_10;
  }
  uint64_t v32 = v54;
  char v33 = sub_191CF3158();
  sub_191C01AF8((uint64_t)v20, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01AF8((uint64_t)v23, type metadata accessor for ControlArchiveStorageMetadata);
  uint64_t v34 = v55;
  sub_191C01C14(a1, v55);
  uint64_t v35 = v56;
  sub_191C01C14(a2, v56);
  uint64_t v36 = (uint64_t)v57;
  if ((v33 & 1) == 0)
  {
LABEL_10:
    sub_191C01AF8(v35, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01AF8(v34, type metadata accessor for ControlArchiveStorageMetadata);
    goto LABEL_11;
  }
  uint64_t v37 = (int *)(v34 + *(int *)(v32 + 20));
  uint64_t v38 = v34;
  int v40 = *v37;
  int v39 = v37[1];
  sub_191C01AF8(v38, type metadata accessor for ControlArchiveStorageMetadata);
  uint64_t v41 = (int *)(v35 + *(int *)(v32 + 20));
  int v43 = *v41;
  int v42 = v41[1];
  sub_191C01AF8(v35, type metadata accessor for ControlArchiveStorageMetadata);
  if (v40 != v43)
  {
LABEL_11:
    uint64_t v44 = v58;
    sub_191C01C14(a1, v58);
    sub_191C01C14(a2, v36);
    goto LABEL_12;
  }
  uint64_t v44 = v58;
  sub_191C01C14(a1, v58);
  sub_191C01C14(a2, v36);
  if (v39 != v42)
  {
LABEL_12:
    sub_191C01AF8(v36, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01AF8(v44, type metadata accessor for ControlArchiveStorageMetadata);
    sub_191C01C14(a1, (uint64_t)v9);
    sub_191C01C14(a2, v59);
    goto LABEL_13;
  }
  uint64_t v45 = *(int *)(v54 + 28);
  uint64_t v46 = *(void **)(v36 + v45);
  id v47 = *(id *)(v44 + v45);
  id v48 = v46;
  uint64_t v49 = v36;
  char v50 = sub_191CF5B58();

  sub_191C01AF8(v49, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01AF8(v44, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01C14(a1, (uint64_t)v9);
  sub_191C01C14(a2, v59);
  if ((v50 & 1) == 0)
  {
LABEL_13:
    char v51 = 0;
    goto LABEL_14;
  }
  sub_191CF34B8();
  char v51 = sub_191CF3488();
LABEL_14:
  sub_191C01AF8((uint64_t)v9, type metadata accessor for ControlArchiveStorageMetadata);
  sub_191C01AF8(v59, type metadata accessor for ControlArchiveStorageMetadata);
  return v51 & 1;
}

unsigned char *storeEnumTagSinglePayload for ControlArchiveStorageMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C02298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlArchiveStorageMetadata.CodingKeys()
{
  return &type metadata for ControlArchiveStorageMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ControlArchiveStorage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C0239CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlArchiveStorage.CodingKeys()
{
  return &type metadata for ControlArchiveStorage.CodingKeys;
}

unint64_t sub_191C023D8()
{
  unint64_t result = qword_1E92E4528;
  if (!qword_1E92E4528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4528);
  }
  return result;
}

unint64_t sub_191C02430()
{
  unint64_t result = qword_1E92E4530;
  if (!qword_1E92E4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4530);
  }
  return result;
}

unint64_t sub_191C02488()
{
  unint64_t result = qword_1E92E2BA0;
  if (!qword_1E92E2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2BA0);
  }
  return result;
}

unint64_t sub_191C024E0()
{
  unint64_t result = qword_1E92E2B98;
  if (!qword_1E92E2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B98);
  }
  return result;
}

unint64_t sub_191C02538()
{
  unint64_t result = qword_1E92E2B70;
  if (!qword_1E92E2B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B70);
  }
  return result;
}

unint64_t sub_191C02590()
{
  unint64_t result = qword_1E92E2B68;
  if (!qword_1E92E2B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B68);
  }
  return result;
}

uint64_t sub_191C025E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000191D0CED0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_191C028B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t type metadata accessor for WidgetExtensionSessionWatchdog()
{
  return self;
}

void sub_191C02A5C(uint64_t a1, void *a2)
{
  id v22[2] = *(id *)MEMORY[0x1E4F143B8];
  v22[0] = 0;
  id v4 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v22);
  id v5 = v22[0];
  if (!v4)
  {
    uint64_t v16 = v5;
    uint64_t v17 = sub_191CF2FE8();

    swift_willThrow();
    sub_191C02CAC();
    swift_allocError();
    *(void *)uint64_t v18 = v17;
    *(unsigned char *)(v18 + 8) = 0;
    swift_willThrow();
    return;
  }
  char v6 = (void *)sub_191CF30C8();
  uint64_t v8 = v7;

  v22[0] = 0;
  sub_191B15F88((uint64_t)v6, (unint64_t)v8);
  unsigned int v9 = objc_msgSend(a2, sel_seekToOffset_error_, 0, v22);
  id v10 = v22[0];
  if (!v9)
  {
    id v19 = v22[0];
    sub_191B1603C((uint64_t)v6, (unint64_t)v8);
LABEL_8:
    uint64_t v12 = (void *)sub_191CF2FE8();

    swift_willThrow();
    goto LABEL_9;
  }
  v22[0] = v6;
  v22[1] = v8;
  sub_191B1632C();
  id v11 = v10;
  sub_191CF58D8();
  uint64_t v12 = v2;
  sub_191B1603C((uint64_t)v6, (unint64_t)v8);
  if (!v2)
  {
    uint64_t v13 = sub_191CF58E8();
    v22[0] = 0;
    uint64_t v14 = objc_msgSend(a2, sel_truncateAtOffset_error_, v13, v22);
    id v15 = v22[0];
    if (v14)
    {
      sub_191B1603C((uint64_t)v6, (unint64_t)v8);
      return;
    }
    id v19 = v15;
    goto LABEL_8;
  }
LABEL_9:
  sub_191C02CAC();
  swift_allocError();
  *(void *)uint64_t v20 = v12;
  *(unsigned char *)(v20 + 8) = 1;
  id v21 = v12;
  swift_willThrow();
  sub_191B1603C((uint64_t)v6, (unint64_t)v8);
}

unint64_t sub_191C02CAC()
{
  unint64_t result = qword_1E92E4538;
  if (!qword_1E92E4538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4538);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for WidgetRelevanceArchiverError(id *a1)
{
}

uint64_t assignWithCopy for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  char v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceArchiverError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceArchiverError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191C02E80(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_191C02E88(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceArchiverError()
{
  return &type metadata for WidgetRelevanceArchiverError;
}

uint64_t sub_191C02EA8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  id v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_191CF5BC8();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  char v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  char v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  int v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  char v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  BOOL v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  char v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_191CF5448();
  uint64_t v61 = sub_191CF5228();
  uint64_t v56 = sub_191CF5F08();
  sub_191CF5EA8();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_191CF5438();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    char v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_191CF5BF8();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_191CF5EE8();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_191CF5BF8();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    BOOL v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    int v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_191CF5EE8();
      sub_191CF5BF8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

BOOL WidgetRenderScheme.actuallyIncludeBackground.getter()
{
  return (unint64_t)(*(void *)(v0 + 8) - 3) < 0xFFFFFFFFFFFFFFFELL;
}

unsigned char *WidgetRenderScheme.init(renderingMode:backgroundViewPolicy:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

void static WidgetRenderScheme.default.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
}

void WidgetRenderScheme.renderingMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *WidgetRenderScheme.renderingMode.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*WidgetRenderScheme.renderingMode.modify())()
{
  return nullsub_1;
}

uint64_t WidgetRenderScheme.backgroundViewPolicy.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t WidgetRenderScheme.backgroundViewPolicy.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*WidgetRenderScheme.backgroundViewPolicy.modify())()
{
  return nullsub_1;
}

BOOL WidgetRenderScheme.developerFacingEnvironmentShowsWidgetBackground.getter()
{
  return *(void *)(v0 + 8) != 1;
}

uint64_t sub_191C0364C()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x6E697265646E6572;
  }
}

uint64_t sub_191C03698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C04470(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C036C0(uint64_t a1)
{
  unint64_t v2 = sub_191C0407C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C036FC(uint64_t a1)
{
  unint64_t v2 = sub_191C0407C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void WidgetRenderScheme.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = (unint64_t)objc_msgSend(a1, sel_renderingMode);
  if (v4 >= 3) {
    char v5 = 0;
  }
  else {
    char v5 = 0x10200u >> (8 * v4);
  }
  id v6 = objc_msgSend(a1, sel_backgroundViewPolicy);

  *(unsigned char *)a2 = v5;
  *(void *)(a2 + 8) = v6;
}

uint64_t WidgetRenderScheme.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A730);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0407C();
  sub_191CF6508();
  if (!v2)
  {
    char v14 = 0;
    sub_191C040D0();
    sub_191CF6178();
    char v9 = v15;
    char v13 = 1;
    uint64_t v11 = sub_191CF6198();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t WidgetRenderScheme.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A478);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  unint64_t v11 = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0407C();
  sub_191CF6528();
  char v14 = v8;
  char v13 = 0;
  sub_191C04124();
  sub_191CF6278();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (!HIDWORD(v11))
  {
    char v12 = 1;
    sub_191CF6298();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t result = sub_191CF5FB8();
  __break(1u);
  return result;
}

uint64_t WidgetRenderScheme.description.getter()
{
  sub_191CF5D88();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v0 = (id)NSStringFromCHSWidgetBackgroundViewPolicy();
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 0;
}

BOOL static WidgetRenderScheme.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2 && *((void *)a1 + 1) < *((void *)a2 + 1);
}

uint64_t WidgetRenderScheme.hash(into:)()
{
  return sub_191CF6478();
}

BOOL static WidgetRenderScheme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

uint64_t WidgetRenderScheme.hashValue.getter()
{
  return sub_191CF64C8();
}

BOOL sub_191C03D84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2 && *((void *)a1 + 1) < *((void *)a2 + 1);
}

BOOL sub_191C03DB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1 || *((void *)a2 + 1) >= *((void *)a1 + 1);
}

BOOL sub_191C03DDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2 || *((void *)a1 + 1) >= *((void *)a2 + 1);
}

BOOL sub_191C03E08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1 && *((void *)a2 + 1) < *((void *)a1 + 1);
}

uint64_t sub_191C03E34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetRenderScheme.init(from:)(a1, a2);
}

uint64_t sub_191C03E4C(void *a1)
{
  return WidgetRenderScheme.encode(to:)(a1);
}

uint64_t sub_191C03E64()
{
  return sub_191CF64C8();
}

uint64_t sub_191C03EC4()
{
  return sub_191CF6478();
}

uint64_t sub_191C03F04()
{
  return sub_191CF64C8();
}

BOOL sub_191C03F64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

uint64_t Sequence<>.widgetRenderSchemes.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_191C02EA8((void (*)(char *, char *))sub_191C03FF4, 0, a1, (char *)&type metadata for WidgetRenderScheme, MEMORY[0x1E4FBC248], a2, MEMORY[0x1E4FBC278], a8);
}

void sub_191C03FF4(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  unint64_t v4 = (unint64_t)objc_msgSend(v3, sel_renderingMode);
  if (v4 >= 3) {
    char v5 = 0;
  }
  else {
    char v5 = 0x10200u >> (8 * v4);
  }
  id v6 = objc_msgSend(v3, sel_backgroundViewPolicy);

  *(unsigned char *)a2 = v5;
  *(void *)(a2 + 8) = v6;
}

unint64_t sub_191C0407C()
{
  unint64_t result = qword_1EB44A638;
  if (!qword_1EB44A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A638);
  }
  return result;
}

unint64_t sub_191C040D0()
{
  unint64_t result = qword_1EB44A690;
  if (!qword_1EB44A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A690);
  }
  return result;
}

unint64_t sub_191C04124()
{
  unint64_t result = qword_1EB44A470;
  if (!qword_1EB44A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A470);
  }
  return result;
}

unint64_t sub_191C0417C()
{
  unint64_t result = qword_1EB44A5A8;
  if (!qword_1EB44A5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A5A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetRenderScheme(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRenderScheme(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderScheme()
{
  return &type metadata for WidgetRenderScheme;
}

unsigned char *storeEnumTagSinglePayload for WidgetRenderScheme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C04330);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderScheme.CodingKeys()
{
  return &type metadata for WidgetRenderScheme.CodingKeys;
}

unint64_t sub_191C0436C()
{
  unint64_t result = qword_1E92E4540;
  if (!qword_1E92E4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4540);
  }
  return result;
}

unint64_t sub_191C043C4()
{
  unint64_t result = qword_1EB44A648;
  if (!qword_1EB44A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A648);
  }
  return result;
}

unint64_t sub_191C0441C()
{
  unint64_t result = qword_1EB44A640;
  if (!qword_1EB44A640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A640);
  }
  return result;
}

uint64_t sub_191C04470(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000191D100B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_191C04584(uint64_t a1)
{
  uint64_t v3 = sub_191CF2D68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetRelevanceEntry.Attribute();
  MEMORY[0x1F4188790](v7);
  char v9 = (uint64_t *)((char *)&v18 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v18 - v8, v1 + *(int *)(a1 + 28), v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v11 = v9[1];
    if (v11)
    {
      if (v11 == 1)
      {
        return 0;
      }
      else
      {
        uint64_t v14 = *v9;
        id v15 = objc_allocWithZone(MEMORY[0x1E4F58EB0]);
        uint64_t v16 = (void *)sub_191CF5318();
        sub_191C047E0(v14, v11);
        id v12 = objc_msgSend(v15, sel_initWithNamedGroupIdentifier_, v16);
      }
    }
    else
    {
      return objc_msgSend(self, sel_ungrouped);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v9, v3);
    char v13 = (void *)sub_191CF2D58();
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58EC8]), sel_initWithRelevantContext_, v13);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v12;
}

uint64_t sub_191C047E0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 sub_191C047F4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15 = sub_191CF3008();
  MEMORY[0x1F4188790](v15 - 8);
  char v27 = *a6;
  uint64_t v16 = a1;
  uint64_t v17 = (void *)sub_191CF2C58();
  *(void *)a8 = 2;
  *(void *)(a8 + 8) = v17;
  *(void *)(a8 + 16) = v16;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 40) = 0;
  *(void *)(a8 + 48) = a3;
  id v18 = v17;
  swift_bridgeObjectRetain();
  if (a5)
  {
    uint64_t v19 = a4;
  }
  else
  {
    sub_191CF2C78();
    uint64_t v19 = sub_191CF5358();
    a5 = v20;
  }
  *(void *)(a8 + 152) = v19;
  *(void *)(a8 + 160) = a5;
  *(unsigned char *)(a8 + 168) = v27;
  *(void *)(a8 + 128) = &type metadata for ControlButtonTemplateProvider;
  *(void *)(a8 + 136) = &off_1EE2A28D8;
  uint64_t v21 = swift_allocObject();
  *(void *)(a8 + 104) = v21;
  long long v22 = *(_OWORD *)(a7 + 80);
  *(_OWORD *)(v21 + 80) = *(_OWORD *)(a7 + 64);
  *(_OWORD *)(v21 + 96) = v22;
  *(_OWORD *)(v21 + 112) = *(_OWORD *)(a7 + 96);
  *(void *)(v21 + 128) = *(void *)(a7 + 112);
  long long v23 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a7;
  *(_OWORD *)(v21 + 32) = v23;
  __n128 result = *(__n128 *)(a7 + 32);
  long long v25 = *(_OWORD *)(a7 + 48);
  *(__n128 *)(v21 + 48) = result;
  *(_OWORD *)(v21 + 64) = v25;
  *(unsigned char *)(a8 + 144) = 0;
  *(void *)(a8 + 56) = v16;
  *(void *)(a8 + 64) = a2;
  *(void *)(a8 + 72) = 0;
  *(void *)(a8 + 80) = 0;
  *(void *)(a8 + 88) = 2;
  *(void *)(a8 + 96) = v17;
  return result;
}

uint64_t ControlButton.init<A, B>(kind:intent:displayName:preferredSize:title:subtitle:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  char v31 = *a6;
  uint64_t v20 = sub_191CF2C68();
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  long long v22 = (void *)swift_allocObject();
  id v22[2] = a14;
  id v22[3] = a15;
  v22[4] = a16;
  v22[5] = a17;
  uint64_t v22[6] = a18;
  v22[7] = a19;
  long long v23 = (void *)swift_allocObject();
  v23[2] = a14;
  v23[3] = a15;
  uint64_t v23[4] = a16;
  v23[5] = a17;
  v23[6] = a18;
  v23[7] = a19;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a14;
  v24[3] = a15;
  v24[4] = a16;
  v24[5] = a17;
  v24[6] = a18;
  v24[7] = a19;
  v24[8] = a7;
  v24[9] = a8;
  long long v25 = (void *)swift_allocObject();
  v25[2] = a14;
  v25[3] = a15;
  v25[4] = a16;
  v25[5] = a17;
  v25[6] = a18;
  v25[7] = a19;
  v25[8] = a10;
  v25[9] = a11;
  swift_retain();
  swift_retain();
  sub_191B17508(a12);
  swift_bridgeObjectRetain();
  sub_191C04D64(a1, a2, v30, v29, (uint64_t)sub_191C04BFC, (uint64_t)v22, (uint64_t)sub_191C04C10, (uint64_t)v23, (uint64_t)v38, (uint64_t)sub_191C04CA4, (uint64_t)v24, sub_191C04D4C, (uint64_t)v25, a12, a13, a14, a17);
  char v37 = v31;
  sub_191C047F4(a1, a2, a3, a4, a5, &v37, (uint64_t)v38, a9);
  sub_191B16F2C(a12);
  swift_release();

  return swift_release();
}

{
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v37;
  unsigned char v38[128];
  uint64_t vars8;

  char v31 = *a6;
  uint64_t v20 = sub_191CF2C68();
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  long long v22 = (void *)swift_allocObject();
  id v22[2] = a14;
  id v22[3] = a15;
  v22[4] = a16;
  v22[5] = a17;
  uint64_t v22[6] = a18;
  v22[7] = a19;
  long long v23 = (void *)swift_allocObject();
  v23[2] = a14;
  v23[3] = a15;
  uint64_t v23[4] = a16;
  v23[5] = a17;
  v23[6] = a18;
  v23[7] = a19;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a14;
  v24[3] = a15;
  v24[4] = a16;
  v24[5] = a17;
  v24[6] = a18;
  v24[7] = a19;
  v24[8] = a7;
  v24[9] = a8;
  long long v25 = (void *)swift_allocObject();
  v25[2] = a14;
  v25[3] = a15;
  v25[4] = a16;
  v25[5] = a17;
  v25[6] = a18;
  v25[7] = a19;
  v25[8] = a10;
  v25[9] = a11;
  swift_retain();
  swift_retain();
  sub_191B17508(a12);
  swift_bridgeObjectRetain();
  sub_191C04D64(a1, a2, v30, v29, (uint64_t)sub_191C04BFC, (uint64_t)v22, (uint64_t)sub_191C04C10, (uint64_t)v23, (uint64_t)v38, (uint64_t)sub_191C054DC, (uint64_t)v24, sub_191C05590, (uint64_t)v25, a12, a13, a14, a17);
  char v37 = v31;
  sub_191C047F4(a1, a2, a3, a4, a5, &v37, (uint64_t)v38, a9);
  sub_191B16F2C(a12);
  swift_release();

  return swift_release();
}

uint64_t sub_191C04BEC()
{
  return swift_deallocObject();
}

uint64_t sub_191C04C00()
{
  return swift_deallocObject();
}

uint64_t sub_191C04C14(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191C04CA4(uint64_t a1, uint64_t a2)
{
  return sub_191C055A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191C04C14);
}

uint64_t sub_191C04CBC(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191C04D4C(uint64_t a1, uint64_t a2)
{
  return sub_191C055A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191C04CBC);
}

uint64_t sub_191C04D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21 = a12;
  long long v22 = (void *)swift_allocObject();
  id v22[2] = a16;
  id v22[3] = a17;
  v22[4] = a10;
  v22[5] = a11;
  if (a12)
  {
    long long v23 = (void *)swift_allocObject();
    v23[2] = a16;
    v23[3] = a17;
    uint64_t v23[4] = a12;
    v23[5] = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_191B16F2C(0);
    uint64_t v21 = &unk_1E92E4588;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    long long v23 = 0;
  }
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a16;
  v24[3] = a17;
  v24[4] = a14;
  v24[5] = a15;
  swift_retain();
  sub_191B17508((uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191B17508((uint64_t)v21);
  swift_release();
  swift_release();
  sub_191B16F2C((uint64_t)v21);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  sub_191B16F2C((uint64_t)v21);
  uint64_t result = swift_release();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(void *)(a9 + 72) = &unk_1E92E4568;
  *(void *)(a9 + 80) = v22;
  *(void *)(a9 + 88) = v21;
  *(void *)(a9 + 96) = v23;
  *(void *)(a9 + 104) = &unk_1E92E4578;
  *(void *)(a9 + 112) = v24;
  return result;
}

uint64_t sub_191C05214@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF2D28();
  return ControlAction.init<A>(_:)((uint64_t)v5, a1, a2);
}

uint64_t sub_191C052A8()
{
  return swift_deallocObject();
}

uint64_t sub_191C052B8@<X0>(void *a1@<X8>)
{
  return sub_191C05214(*(void *)(v1 + 16), a1);
}

uint64_t sub_191C052DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191C053D4()
{
  return swift_deallocObject();
}

uint64_t sub_191C053E4()
{
  return sub_191C052DC(*(void *)(v0 + 16));
}

uint64_t sub_191C05408(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  v2(v1, v3);
  return sub_191CF5038();
}

uint64_t sub_191C054A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C054DC(uint64_t a1, uint64_t a2)
{
  return sub_191C055A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191C05408);
}

uint64_t sub_191C054F4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  v2(v1, v3);
  return sub_191CF5038();
}

uint64_t sub_191C05590(uint64_t a1, uint64_t a2)
{
  return sub_191C055A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_191C054F4);
}

uint64_t sub_191C055A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t ControlButton.init<A>(kind:intent:displayName:preferredSize:title:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v27 = *a6;
  uint64_t v16 = sub_191CF2C68();
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  id v18 = (void *)swift_allocObject();
  void v18[2] = a12;
  void v18[3] = a13;
  v18[4] = a14;
  v18[5] = a15;
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = a12;
  v19[3] = a13;
  void v19[4] = a14;
  v19[5] = a15;
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v20[2] = a12;
  uint64_t v20[3] = a13;
  v20[4] = a14;
  v20[5] = a15;
  v20[6] = a7;
  v20[7] = a8;
  swift_retain();
  sub_191B17508(a10);
  swift_bridgeObjectRetain();
  sub_191C04D64(a1, a2, v25, v24, (uint64_t)sub_191C07DE8, (uint64_t)v18, (uint64_t)sub_191C07DE4, (uint64_t)v19, (uint64_t)v33, (uint64_t)sub_191C05884, (uint64_t)v20, 0, 0, a10, a11, a12, a14);
  char v32 = v27;
  sub_191C047F4(a1, a2, a3, a4, a5, &v32, (uint64_t)v33, a9);
  sub_191B16F2C(a10);

  return swift_release();
}

{
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v32;
  unsigned char v33[128];
  uint64_t vars8;

  char v27 = *a6;
  uint64_t v16 = sub_191CF2C68();
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  id v18 = (void *)swift_allocObject();
  void v18[2] = a12;
  void v18[3] = a13;
  v18[4] = a14;
  v18[5] = a15;
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = a12;
  v19[3] = a13;
  void v19[4] = a14;
  v19[5] = a15;
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v20[2] = a12;
  uint64_t v20[3] = a13;
  v20[4] = a14;
  v20[5] = a15;
  v20[6] = a7;
  v20[7] = a8;
  swift_retain();
  sub_191B17508(a10);
  swift_bridgeObjectRetain();
  sub_191C04D64(a1, a2, v25, v24, (uint64_t)sub_191C05AF8, (uint64_t)v18, (uint64_t)sub_191C05C20, (uint64_t)v19, (uint64_t)v33, (uint64_t)sub_191C05CDC, (uint64_t)v20, 0, 0, a10, a11, a12, a14);
  char v32 = v27;
  sub_191C047F4(a1, a2, a3, a4, a5, &v32, (uint64_t)v33, a9);
  sub_191B16F2C(a10);

  return swift_release();
}

uint64_t sub_191C0579C()
{
  return swift_deallocObject();
}

uint64_t sub_191C057AC()
{
  return swift_deallocObject();
}

uint64_t sub_191C057BC(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  v2(v1);
  return sub_191CF5038();
}

uint64_t sub_191C0584C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C05884(uint64_t a1, uint64_t a2)
{
  return sub_191C05CF4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_191C057BC);
}

uint64_t sub_191C05A54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF2D28();
  return ControlAction.init<A>(_:)((uint64_t)v5, a1, a2);
}

uint64_t sub_191C05AE8()
{
  return swift_deallocObject();
}

uint64_t sub_191C05AF8@<X0>(void *a1@<X8>)
{
  return sub_191C05A54(*(void *)(v1 + 16), a1);
}

uint64_t sub_191C05B18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191C05C10()
{
  return swift_deallocObject();
}

uint64_t sub_191C05C20()
{
  return sub_191C05B18(*(void *)(v0 + 16));
}

uint64_t sub_191C05C40(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  v2(v1, v3);
  return sub_191CF5038();
}

uint64_t sub_191C05CDC(uint64_t a1, uint64_t a2)
{
  return sub_191C05CF4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_191C05C40);
}

uint64_t sub_191C05CF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_191C05D0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 160);
  unsigned __int8 v5 = *(unsigned char *)(v1 + 168);
  return sub_191C92E54(v1 + 56, v2, v3, &v5, 0, 0, 0, 0, a1, 0);
}

uint64_t ControlButton.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  uint64_t v1 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_191CF8410;
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 168);
  sub_191C92E54(v0 + 56, v4, v5, &v7, 0, 0, 0, 0, v3 + v2, 0);
  sub_191B5D22C();
  sub_191CF4418();
  return swift_bridgeObjectRelease();
}

uint64_t ControlButton.init<A>(kind:intent:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = a6;
  v19[3] = a7;
  void v19[4] = a8;
  v19[5] = a10;
  char v21 = 0;
  return ControlButton.init<A, B>(kind:intent:displayName:preferredSize:title:subtitle:affordances:)(a1, a2, a3, 0, 0, &v21, a4, a5, a9, (uint64_t)nullsub_1, (uint64_t)v19, 0, 0, a6, a7, MEMORY[0x1E4F3F058], a8, a10, MEMORY[0x1E4F3F050]);
}

uint64_t sub_191C05F64()
{
  return swift_deallocObject();
}

uint64_t ControlButton.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v4, a2);
  sub_191B15E0C(v4 + 104, (uint64_t)&v18);
  if (v22 == 1) {
    return sub_191BB2C20((uint64_t)&v18);
  }
  sub_191B004A8(&v18, (uint64_t)v29);
  sub_191AFEE28((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0D78);
  if ((swift_dynamicCast() & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  uint64_t v8 = v19;
  char v9 = v20;
  uint64_t v10 = v25;
  uint64_t v11 = v26;
  long long v14 = v23;
  long long v15 = v22;
  long long v13 = v24;
  long long v16 = v27;
  long long v17 = v18;
  uint64_t v20 = &type metadata for ControlButtonTemplateProvider;
  char v21 = &off_1EE2A28D8;
  uint64_t v12 = swift_allocObject();
  *(void *)&long long v18 = v12;
  *(_OWORD *)(v12 + 16) = v17;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v9;
  *(unsigned char *)(v12 + 48) = a1 & 1;
  *(_OWORD *)(v12 + 56) = v15;
  *(_OWORD *)(v12 + 72) = v14;
  *(_OWORD *)(v12 + 88) = v13;
  *(void *)(v12 + 104) = v10;
  *(void *)(v12 + 112) = v11;
  *(_OWORD *)(v12 + 120) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  LOBYTE(v22) = 0;
  return sub_191BE329C((uint64_t)&v18, a3 + 104);
}

uint64_t sub_191C06100()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 104)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C06170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C061B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 144)) {
    swift_release();
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(a1 + 104);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C06234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  char v9 = *(unsigned char *)(a2 + 144);
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v8;
  if (v9)
  {
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v12;
    swift_retain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 128) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 104, a2 + 104);
  }
  *(unsigned char *)(a1 + 144) = v9;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191C06350(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = *(void **)(a2 + 96);
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v7;
  id v9 = v7;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 104);
    if (*(unsigned char *)(a2 + 144))
    {
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      *(unsigned char *)(a1 + 144) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v11 = *(void *)(a2 + 128);
      *(void *)(a1 + 128) = v11;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 104, a2 + 104);
      *(unsigned char *)(a1 + 144) = 0;
    }
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

__n128 __swift_memcpy169_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_191C0651C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void **)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;

  if (a1 != a2)
  {
    sub_191BB2C20(a1 + 104);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  }
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t sub_191C065EC(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 169)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191C06634(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 169) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ControlButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191C066B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlButtonTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 88)) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 80);
  long long v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  *(void *)(a1 + 80) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 96) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v8;
  }
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v7;
      *(void *)(a1 + 96) = v9;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v6;
      *(void *)(a1 + 96) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlButtonTemplateProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlButtonTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlButtonTemplateProvider()
{
  return &type metadata for ControlButtonTemplateProvider;
}

uint64_t sub_191C06B4C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 16) = a3;
  *(unsigned char *)(v6 + 88) = a2;
  *(void *)(v6 + 40) = *(void *)(a5 - 8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v6 + 48) = v10;
  *(void *)(v6 + 56) = sub_191CF5698();
  *(void *)(v6 + 64) = sub_191CF5688();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 72) = v11;
  void *v11 = v6;
  v11[1] = sub_191C06C88;
  return sub_191BD399C(v10, a1, a5, a6);
}

uint64_t sub_191C06C88()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191BE96C8;
  }
  else {
    uint64_t v4 = sub_191C07E00;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C06DE4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 16) = a3;
  *(unsigned char *)(v6 + 88) = a2;
  *(void *)(v6 + 40) = *(void *)(a5 - 8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v6 + 48) = v10;
  *(void *)(v6 + 56) = sub_191CF5698();
  *(void *)(v6 + 64) = sub_191CF5688();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 72) = v11;
  void *v11 = v6;
  v11[1] = sub_191C06F20;
  return sub_191BD399C(v10, a1, a5, a6);
}

uint64_t sub_191C06F20()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191BE6AF8;
  }
  else {
    uint64_t v4 = sub_191C0707C;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C0707C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 88);
  swift_release();
  uint64_t v6 = v4(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_191C07138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a4;
  v6[5] = a5;
  v6[2] = a1;
  v6[3] = a3;
  v6[6] = *(void *)(a5 - 8);
  uint64_t v10 = swift_task_alloc();
  v6[7] = v10;
  v6[8] = sub_191CF5698();
  v6[9] = sub_191CF5688();
  uint64_t v11 = (void *)swift_task_alloc();
  v6[10] = v11;
  void *v11 = v6;
  v11[1] = sub_191C07270;
  return sub_191BD399C(v10, a2, a5, a6);
}

uint64_t sub_191C07270()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C074DC;
  }
  else {
    uint64_t v4 = sub_191C073CC;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C073CC()
{
  long long v16 = v0;
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  if (v1)
  {
    uint64_t v5 = (_OWORD *)v0[2];
    ((void (*)(_OWORD *__return_ptr, void))v0[3])(v14, v0[7]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    long long v6 = v14[2];
    long long v7 = v14[3];
    uint64_t v8 = v15;
    long long v9 = v14[1];
    *uint64_t v5 = v14[0];
    v5[1] = v9;
  }
  else
  {
    uint64_t v10 = v0[2];
    (*(void (**)(void, void))(v3 + 8))(v0[7], v0[5]);
    uint64_t v8 = 0;
    *(void *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0;
    long long v6 = 0uLL;
    *(_OWORD *)(v10 + 16) = 0u;
    long long v7 = 0uLL;
  }
  uint64_t v11 = v0[2];
  *(_OWORD *)(v11 + 32) = v6;
  *(_OWORD *)(v11 + 48) = v7;
  *(void *)(v11 + 64) = v8;
  swift_task_dealloc();
  long long v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_191C074DC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C0754C()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_191C07574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 272) = a1;
  *(void *)(v4 + 280) = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  *(void *)(v4 + 288) = a3;
  *(void *)(v4 + 296) = v5;
  *(void *)(v4 + 304) = v6;
  long long v7 = *((_OWORD *)v3 + 1);
  *(unsigned char *)(v4 + 448) = *((unsigned char *)v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 5);
  *(_OWORD *)(v4 + 312) = v7;
  *(_OWORD *)(v4 + 328) = v8;
  long long v9 = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(v4 + 344) = *(_OWORD *)(v3 + 7);
  *(_OWORD *)(v4 + 360) = v9;
  long long v10 = *(_OWORD *)(v3 + 13);
  *(_OWORD *)(v4 + 376) = *(_OWORD *)(v3 + 11);
  *(_OWORD *)(v4 + 392) = v10;
  sub_191CF5698();
  *(void *)(v4 + 408) = sub_191CF5688();
  uint64_t v12 = sub_191CF5648();
  *(void *)(v4 + 416) = v12;
  *(void *)(v4 + 424) = v11;
  return MEMORY[0x1F4188298](sub_191C07648, v12, v11);
}

uint64_t sub_191C07648()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 368);
  char v6 = *(unsigned char *)(v0 + 448);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v10 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);
  uint64_t v11 = *(void **)(v0 + 288);
  uint64_t v12 = *(uint64_t **)(v0 + 272);
  *(void *)(v0 + 16) = *(void *)(v0 + 296);
  *(void *)(v0 + 24) = v10;
  *(void *)(v0 + 32) = v9;
  *(void *)(v0 + 40) = v8;
  *(unsigned char *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v7;
  long long v23 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 80) = v23;
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v4;
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = v1;
  *(void *)(v0 + 128) = v2;
  *(void *)(v0 + 136) = v11;
  long long v13 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v13;
  long long v14 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v14;
  long long v15 = *(_OWORD *)(v0 + 16);
  long long v16 = *(_OWORD *)(v0 + 32);
  long long v17 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v17;
  *(_OWORD *)(v0 + 144) = v15;
  *(_OWORD *)(v0 + 160) = v16;
  v12[3] = type metadata accessor for ControlTemplateButton(0);
  v12[4] = sub_191B9837C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_191B17508(v4);
  swift_retain();
  id v19 = v11;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v20;
  void *v20 = v0;
  v20[1] = sub_191C077D8;
  uint64_t v21 = *(void *)(v0 + 280);
  return sub_191C2C6B4((uint64_t)boxed_opaque_existential_1, v21);
}

uint64_t sub_191C077D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 424);
  uint64_t v4 = *(void *)(v2 + 416);
  if (v0) {
    uint64_t v5 = sub_191C07984;
  }
  else {
    uint64_t v5 = sub_191C07914;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191C07914()
{
  sub_191C07A80(v0 + 16);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C07984()
{
  uint64_t v1 = *(void *)(v0 + 272);
  sub_191C07A80(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191C07A00()
{
  return sub_191BE854C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_191C07A3C()
{
  return sub_191C07A74(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_191C07A74(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191C07A80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void **)(a1 + 120);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(v2);

  swift_release();
  return a1;
}

uint64_t sub_191C07B1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C07B54(uint64_t a1, char a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_191B8B028;
  return sub_191C06B4C(a1, a2, v9, v8, v6, v7);
}

uint64_t sub_191C07C18()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_191C07C58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_191B0A348;
  return sub_191C07138(a1, a2, v9, v8, v6, v7);
}

uint64_t sub_191C07D20(uint64_t a1, char a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_191B8A874;
  return sub_191C06DE4(a1, a2, v9, v8, v6, v7);
}

uint64_t WidgetPersonality.extensionBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_191C07E58()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WidgetPersonality.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CHKWidgetPersonality_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetPersonality.__allocating_init(extensionBundleIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = &v9[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v11 = &v9[OBJC_IVAR___CHKWidgetPersonality_kind];
  *(void *)uint64_t v11 = a3;
  *((void *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id WidgetPersonality.init(extensionBundleIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = &v4[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  uint64_t v6 = &v4[OBJC_IVAR___CHKWidgetPersonality_kind];
  *(void *)uint64_t v6 = a3;
  *((void *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for WidgetPersonality()
{
  return self;
}

id WidgetPersonality.__allocating_init<A>(_:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_191C08A64(a1);
  swift_unknownObjectRelease();
  return v4;
}

id WidgetPersonality.init<A>(_:)(void *a1)
{
  id v1 = sub_191C08A64(a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_191C08070(void *a1)
{
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier + 8);
  id v5 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  uint64_t v6 = sub_191CF5338();
  uint64_t v8 = v7;

  if (v4 == v6 && v3 == v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_191CF6348();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR___CHKWidgetPersonality_kind);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR___CHKWidgetPersonality_kind + 8);
  id v14 = objc_msgSend(a1, sel_kind);
  uint64_t v15 = sub_191CF5338();
  uint64_t v17 = v16;

  if (v13 == v15 && v12 == v17) {
    char v11 = 1;
  }
  else {
    char v11 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_191C082CC()
{
  return sub_191CF64B8();
}

id sub_191C08388(uint64_t a1)
{
  sub_191C08B38(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_191B88CAC((uint64_t)v5);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E45A8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v2 = objc_msgSend(v4, sel_matchesPersonality_, v1);
  swift_unknownObjectRelease();
  return v2;
}

id WidgetPersonality.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WidgetPersonality.init(coder:)(a1);
}

id WidgetPersonality.init(coder:)(void *a1)
{
  id v2 = v1;
  sub_191C08BA0();
  id v4 = v2;
  uint64_t v5 = sub_191CF5AC8();
  if (!v5) {
    goto LABEL_5;
  }
  uint64_t v6 = (void *)v5;
  uint64_t v7 = sub_191CF5AC8();
  if (!v7)
  {

LABEL_5:
    type metadata accessor for WidgetPersonality();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v8 = (void *)v7;
  uint64_t v9 = sub_191CF5338();
  char v10 = (uint64_t *)&v4[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  uint64_t *v10 = v9;
  v10[1] = v11;
  uint64_t v12 = sub_191CF5338();
  uint64_t v14 = v13;

  uint64_t v15 = (uint64_t *)&v4[OBJC_IVAR___CHKWidgetPersonality_kind];
  *uint64_t v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for WidgetPersonality();
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

void sub_191C08640(void *a1)
{
  id v2 = (void *)sub_191CF5318();
  id v3 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  id v4 = (void *)sub_191CF5318();
  id v5 = (id)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
}

uint64_t sub_191C08888()
{
  return 91;
}

id WidgetPersonality.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void WidgetPersonality.init()()
{
}

id WidgetPersonality.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_191C08A64(void *a1)
{
  id v3 = v1;
  id v4 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  uint64_t v5 = sub_191CF5338();
  uint64_t v7 = v6;

  uint64_t v8 = (uint64_t *)&v3[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *uint64_t v8 = v5;
  v8[1] = v7;
  id v9 = objc_msgSend(a1, sel_kind);
  uint64_t v10 = sub_191CF5338();
  uint64_t v12 = v11;

  uint64_t v13 = (uint64_t *)&v3[OBJC_IVAR___CHKWidgetPersonality_kind];
  *uint64_t v13 = v10;
  v13[1] = v12;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_191C08B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_191C08BA0()
{
  unint64_t result = qword_1EB44BBA0;
  if (!qword_1EB44BBA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44BBA0);
  }
  return result;
}

uint64_t method lookup function for WidgetPersonality(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetPersonality);
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init(extensionBundleIdentifier:kind:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WidgetPersonality.matches(personality:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of static WidgetPersonality.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WidgetPersonality.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t Preview.init<A>(_:as:widget:timeline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a8;
  v12[3] = a9;
  v12[4] = a4;
  v12[5] = a5;
  sub_191BC1FE0();
  return sub_191CF36E8();
}

uint64_t sub_191C08D78()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C08DB0@<X0>(uint64_t a1@<X8>)
{
  objc_super v2 = *(uint64_t (**)(void))(v1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 16);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
  return v2();
}

uint64_t Preview.init<A, B>(_:as:widget:timelineProvider:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v16 = *a3;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a8;
  void v17[3] = a9;
  void v17[4] = a10;
  v17[5] = a11;
  v17[6] = a4;
  v17[7] = a5;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  objc_super v18 = (void *)swift_allocObject();
  void v18[2] = a8;
  void v18[3] = a9;
  v18[4] = a10;
  v18[5] = a11;
  v18[6] = a6;
  unsigned char v18[7] = a7;
  long long v22 = sub_191C08F18;
  long long v23 = v17;
  char v24 = v16;
  uint64_t v25 = 0;
  sub_191C08F94((uint64_t)v20, (uint64_t)v26);
  v26[5] = sub_191C08F58;
  v26[6] = v18;
  sub_191BC205C();
  return sub_191CF36E8();
}

uint64_t sub_191C08F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  id v3 = (uint64_t (*)(void))v1[6];
  a1[3] = v1[2];
  a1[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v3();
}

uint64_t sub_191C08F58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 48);
  a1[3] = *(void *)(v1 + 24);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v2();
}

uint64_t sub_191C08F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Preview.init<A, B>(_:as:using:widget:timelineProvider:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v16 = *a3;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a9;
  void v17[3] = a10;
  void v17[4] = a11;
  v17[5] = a12;
  v17[6] = a5;
  v17[7] = a6;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  objc_super v18 = (void *)swift_allocObject();
  void v18[2] = a9;
  void v18[3] = a10;
  v18[4] = a11;
  v18[5] = a12;
  v18[6] = a7;
  unsigned char v18[7] = a8;
  long long v23 = sub_191C0911C;
  char v24 = v17;
  char v25 = v16;
  uint64_t v26 = a4;
  sub_191C08F94((uint64_t)v21, (uint64_t)v27);
  v27[5] = sub_191C09158;
  v27[6] = v18;
  sub_191BC205C();
  return sub_191CF36E8();
}

{
  char v15;
  void *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  void *v20;
  uint64_t v24[7];
  char v25;
  uint64_t v26;
  void v27[8];

  objc_super v15 = *a3;
  char v16 = (void *)swift_allocObject();
  v16[2] = a9;
  v16[3] = a10;
  v16[4] = a11;
  void v16[5] = a12;
  uint64_t v16[6] = a5;
  v16[7] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24[3] = AssociatedTypeWitness;
  v24[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  id v19 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(boxed_opaque_existential_1, a4, AssociatedTypeWitness);
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a9;
  uint64_t v20[3] = a10;
  v20[4] = a11;
  v20[5] = a12;
  v20[6] = a7;
  v20[7] = a8;
  v24[5] = (uint64_t)sub_191C0911C;
  v24[6] = (uint64_t)v16;
  char v25 = v15;
  uint64_t v26 = 0;
  sub_191C08F94((uint64_t)v24, (uint64_t)v27);
  v27[5] = sub_191C09158;
  v27[6] = v20;
  sub_191BC205C();
  sub_191CF36E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a4, AssociatedTypeWitness);
}

uint64_t sub_191C09120()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C09328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  id v3 = (uint64_t (*)(void))v1[6];
  a1[3] = v1[3];
  a1[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v3();
}

uint64_t sub_191C09368@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 48);
  a1[3] = *(void *)(v1 + 16);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v2();
}

uint64_t static PreviewTimelineBuilder.buildExpression<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7D8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_191CF8410;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v6 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  return v6;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static PreviewTimelineBuilder.buildPartialBlock(accumulated:next:)()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_191BCCCCC(v0);
}

uint64_t static PreviewTimelineBuilder.buildArray(_:)(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_191BCCCCC(v5);
    }
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewTimelineBuilder()
{
  return &type metadata for PreviewTimelineBuilder;
}

uint64_t static WidgetLocalizations.< infix(_:_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v0 = sub_191CF34D8();
  uint64_t v2 = v1;
  if (v0 == sub_191CF34D8() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t WidgetLocalizations.__allocating_init(identifier:availableLocalizations:supportsMixedLocalizations:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = swift_allocObject();
  sub_191CF34C8();
  *(void *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = a3;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = a4;
  return v6;
}

uint64_t WidgetLocalizations.init(identifier:availableLocalizations:supportsMixedLocalizations:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF34C8();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier, v10, v7);
  *(void *)(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = a3;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = a4;
  return v4;
}

uint64_t static WidgetLocalizations.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_191C09790(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_191CD67A4(*a1, *a2);
}

uint64_t sub_191C0979C()
{
  return sub_191CD6A74();
}

uint64_t sub_191C097A4()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C0983C()
{
  return sub_191CD7080();
}

uint64_t sub_191C09844@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191C0B300();
  *a1 = result;
  return result;
}

void sub_191C09874(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0x8000000191D0CC70;
  unint64_t v5 = 0xD000000000000016;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v4 = 0x8000000191D0CC90;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696669746E656469;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_191C098DC()
{
  unint64_t v1 = 0xD000000000000016;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_191C09940@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191C0B300();
  *a1 = result;
  return result;
}

uint64_t sub_191C09968(uint64_t a1)
{
  unint64_t v2 = sub_191C0A730();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C099A4(uint64_t a1)
{
  unint64_t v2 = sub_191C0A730();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_191C099E0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier, v3);
  uint64_t v6 = sub_191CF63B8();
  uint64_t v7 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

  uint64_t v8 = (void *)sub_191CF5528();
  uint64_t v9 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  uint64_t v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
  uint64_t v11 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeBool_forKey_, v10, v11);
}

uint64_t WidgetLocalizations.__allocating_init(coder:)(void *a1)
{
  return 0;
}

uint64_t WidgetLocalizations.init(coder:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E45B8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v9 = (void *)sub_191CF5318();
  id v10 = objc_msgSend(a1, sel_decodeObjectForKey_, v9);

  if (v10)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_191BC2C50((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {
    sub_191B01770((uint64_t)v25, (uint64_t *)&unk_1EB44BC90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  int v11 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, v11 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:

    swift_release();
    sub_191B01770((uint64_t)v4, &qword_1E92E45B8);
LABEL_24:
    swift_deallocPartialClassInstance();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v12 = (void *)sub_191CF5318();
  id v13 = objc_msgSend(a1, sel_decodeObjectForKey_, v12);

  if (v13)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_191BC2C50((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {

    swift_release();
LABEL_22:
    sub_191B01770((uint64_t)v25, (uint64_t *)&unk_1EB44BC90);
    goto LABEL_23;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_release();
LABEL_23:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_24;
  }
  uint64_t v14 = v22;
  objc_super v15 = (void *)sub_191CF5318();
  id v16 = objc_msgSend(a1, sel_decodeObjectForKey_, v15);

  if (v16)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_191BC2C50((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {

    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v17 = v22;
  swift_release();
  sub_191CF34D8();
  type metadata accessor for WidgetLocalizations();
  uint64_t v18 = swift_allocObject();
  sub_191CF34C8();

  *(void *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = v14;
  *(unsigned char *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = v17;
  id v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  swift_deallocPartialClassInstance();
  swift_setDeallocating();
  v19((char *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier), v5);
  swift_bridgeObjectRelease();
  swift_deallocClassInstance();
  return 0;
}

uint64_t type metadata accessor for WidgetLocalizations()
{
  uint64_t result = qword_1EB44A5C0;
  if (!qword_1EB44A5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C0A23C()
{
  sub_191CF5D88();
  sub_191CF53B8();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x192FE42B0](v0, MEMORY[0x1E4FBB1A0]);
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191C0B34C(&qword_1E92E1990);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t WidgetLocalizations.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetLocalizations.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_191C0A50C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BAD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0A730();
  sub_191CF6528();
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191C0B34C(&qword_1EB44A4A8);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
    sub_191C0ABA0(&qword_1EB44BAD0);
    sub_191CF6278();
    v10[14] = 2;
    sub_191CF6228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_191C0A730()
{
  unint64_t result = qword_1EB44BF50;
  if (!qword_1EB44BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF50);
  }
  return result;
}

uint64_t WidgetLocalizations.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  WidgetLocalizations.init(from:)(a1);
  return v2;
}

uint64_t WidgetLocalizations.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C048);
  uint64_t v4 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0A730();
  sub_191CF6508();
  if (v1)
  {
    uint64_t v7 = v16;
    type metadata accessor for WidgetLocalizations();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v4;
    uint64_t v9 = v14;
    char v20 = 0;
    sub_191C0B34C((unint64_t *)&unk_1EB44A5D0);
    sub_191CF6178();
    uint64_t v7 = v16;
    id v10 = *(void (**)(void))(v9 + 32);
    v13[1] = v16 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier;
    v10();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
    char v19 = 1;
    sub_191C0ABA0(&qword_1EB44C008);
    sub_191CF6178();
    *(void *)(v7 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = v17;
    char v18 = 2;
    char v12 = sub_191CF6128();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v15);
    *(unsigned char *)(v7 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = v12 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_191C0ABA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB44BFF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C0AC04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for WidgetLocalizations();
  uint64_t v5 = swift_allocObject();
  uint64_t result = WidgetLocalizations.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_191C0AC60(void *a1)
{
  return sub_191C0A50C(a1);
}

uint64_t sub_191C0AC84()
{
  return sub_191C0A23C();
}

uint64_t sub_191C0ACAC()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v0 = sub_191CF34D8();
  uint64_t v2 = v1;
  if (v0 == sub_191CF34D8() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_191C0AD64(uint64_t *a1, uint64_t *a2)
{
  return _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191C0B34C((unint64_t *)&qword_1E92E0770);
  sub_191CF54C8();
  sub_191CF54C8();
  if (v10 == v8 && v11 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  if (sub_191B6C410(*(void **)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations), *(void **)(a2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations)))char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) ^ *(unsigned char *)(a2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) ^ 1; {
  else
  }
    char v6 = 0;
  return v6 & 1;
}

unint64_t sub_191C0AEAC()
{
  unint64_t result = qword_1E92E45C0;
  if (!qword_1E92E45C0)
  {
    type metadata accessor for WidgetLocalizations();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E45C0);
  }
  return result;
}

uint64_t sub_191C0AF04()
{
  return type metadata accessor for WidgetLocalizations();
}

void sub_191C0AF0C()
{
  sub_191C0B09C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for WidgetLocalizations(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetLocalizations);
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(identifier:availableLocalizations:supportsMixedLocalizations:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WidgetLocalizations.encode(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetLocalizations.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of WidgetLocalizations.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_191C0B09C()
{
  if (!qword_1EB44A5E0)
  {
    unint64_t v0 = sub_191CF34E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB44A5E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WidgetLocalizations.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C0B1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocalizations.CodingKeys()
{
  return &type metadata for WidgetLocalizations.CodingKeys;
}

unint64_t sub_191C0B1FC()
{
  unint64_t result = qword_1E92E45C8;
  if (!qword_1E92E45C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E45C8);
  }
  return result;
}

unint64_t sub_191C0B254()
{
  unint64_t result = qword_1EB44BF60;
  if (!qword_1EB44BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF60);
  }
  return result;
}

unint64_t sub_191C0B2AC()
{
  unint64_t result = qword_1EB44BF58;
  if (!qword_1EB44BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF58);
  }
  return result;
}

uint64_t sub_191C0B300()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_191C0B34C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB44AB40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static WidgetIsSnapshottingKey.defaultValue.getter()
{
  return byte_1E92E45D0;
}

uint64_t static WidgetIsSnapshottingKey.defaultValue.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E45D0 = a1;
  return result;
}

uint64_t (*static WidgetIsSnapshottingKey.defaultValue.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_191C0B478@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E92E45D0;
  return result;
}

uint64_t EnvironmentValues.widgetIsSnapshotting.getter()
{
  return sub_191C0BCF8((void (*)(void))sub_191BFC690);
}

uint64_t EnvironmentValues.widgetIsSnapshotting.setter(uint64_t a1)
{
  return sub_191C0BE50(a1, (void (*)(void))sub_191BFC690);
}

uint64_t (*EnvironmentValues.widgetIsSnapshotting.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BFC690();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C0B578;
}

uint64_t sub_191C0B578(uint64_t a1)
{
  return sub_191BDB020(a1);
}

uint64_t sub_191C0B584()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  __swift_allocate_value_buffer(v0, qword_1E92E18A0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E18A0);
  uint64_t v2 = sub_191CF3178();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_191C0B61C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E18B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E18A0);

  return sub_191C0B950(v3, a1);
}

uint64_t sub_191C0B698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191C0C030();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.widgetReferenceDate.getter()
{
  sub_191C0B744();

  return sub_191CF4068();
}

unint64_t sub_191C0B744()
{
  unint64_t result = qword_1E92E18C0;
  if (!qword_1E92E18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E18C0);
  }
  return result;
}

uint64_t sub_191C0B798()
{
  return sub_191CF4068();
}

uint64_t sub_191C0B7D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_191C0B950(a1, (uint64_t)&v9 - v6);
  sub_191C0B950((uint64_t)v7, (uint64_t)v5);
  sub_191C0B744();
  sub_191CF4078();
  return sub_191C0B9B8((uint64_t)v7);
}

uint64_t EnvironmentValues.widgetReferenceDate.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  MEMORY[0x1F4188790](v2 - 8);
  sub_191C0B950(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191C0B744();
  sub_191CF4078();
  return sub_191C0B9B8(a1);
}

uint64_t sub_191C0B950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C0B9B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*EnvironmentValues.widgetReferenceDate.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_191C0B744();
  sub_191CF4068();
  return sub_191C0BAD8;
}

void sub_191C0BAD8(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_191C0B950((*a1)[3], (*a1)[2]);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    sub_191C0B950(v3[2], v3[1]);
    sub_191CF4078();
    sub_191C0B9B8((uint64_t)v6);
  }
  else
  {
    sub_191CF4078();
  }
  sub_191C0B9B8((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t static WidgetAnimationsPausedKey.defaultValue.getter()
{
  return byte_1E92E45D8;
}

uint64_t static WidgetAnimationsPausedKey.defaultValue.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E45D8 = a1;
  return result;
}

uint64_t (*static WidgetAnimationsPausedKey.defaultValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C0BC8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E92E45D8;
  return result;
}

uint64_t EnvironmentValues.widgetAnimationsPaused.getter()
{
  return sub_191C0BCF8((void (*)(void))sub_191C0BD40);
}

uint64_t sub_191C0BCF8(void (*a1)(void))
{
  a1();
  sub_191CF4068();
  return v2;
}

unint64_t sub_191C0BD40()
{
  unint64_t result = qword_1E92E1948;
  if (!qword_1E92E1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1948);
  }
  return result;
}

uint64_t sub_191C0BD94@<X0>(unsigned char *a1@<X8>)
{
  sub_191C0BD40();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191C0BDE4()
{
  return sub_191CF4078();
}

uint64_t EnvironmentValues.widgetAnimationsPaused.setter(uint64_t a1)
{
  return sub_191C0BE50(a1, (void (*)(void))sub_191C0BD40);
}

uint64_t sub_191C0BE50(uint64_t a1, void (*a2)(void))
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.widgetAnimationsPaused.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191C0BD40();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C0BF0C;
}

uint64_t sub_191C0BF0C(uint64_t a1)
{
  return sub_191BDB020(a1);
}

uint64_t sub_191C0BF20()
{
  return sub_191CF4068();
}

uint64_t sub_191C0BF64@<X0>(unsigned char *a1@<X8>)
{
  sub_191C0BD40();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191C0BFB4()
{
  return sub_191CF4078();
}

ValueMetadata *type metadata accessor for WidgetIsSnapshottingKey()
{
  return &type metadata for WidgetIsSnapshottingKey;
}

ValueMetadata *type metadata accessor for WidgetAnimationsPausedKey()
{
  return &type metadata for WidgetAnimationsPausedKey;
}

ValueMetadata *_s22WidgetReferenceDateKeyVMa()
{
  return &_s22WidgetReferenceDateKeyVN;
}

unint64_t sub_191C0C030()
{
  unint64_t result = qword_1E92E45E0;
  if (!qword_1E92E45E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44B520);
    sub_191C0C0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E45E0);
  }
  return result;
}

unint64_t sub_191C0C0A4()
{
  unint64_t result = qword_1E92E1AB8;
  if (!qword_1E92E1AB8)
  {
    sub_191CF3178();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1AB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundAbsent.View()
{
  return &type metadata for WidgetBackgroundAbsent.View;
}

uint64_t sub_191C0C10C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C0C128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v36 = (uint64_t)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E45E8) - 8;
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v4 - 8);
  char v33 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_191CF43B8();
  sub_191C0C4A0((uint64_t)v62);
  long long v6 = v62[0];
  uint64_t v31 = *((void *)&v62[0] + 1);
  uint64_t v32 = *(void *)&v62[0];
  uint64_t v7 = *(void *)&v62[1];
  uint64_t v8 = *(void *)&v62[2];
  int v29 = BYTE8(v62[2]);
  long long v28 = v62[3];
  uint64_t v27 = *(void *)&v62[4];
  uint64_t v25 = *((void *)&v62[1] + 1);
  uint64_t v26 = *((void *)&v62[4] + 1);
  char v9 = v62[5];
  uint64_t v10 = *((void *)&v62[5] + 1);
  uint64_t v11 = *(void *)&v62[6];
  char v12 = BYTE8(v62[6]);
  uint64_t v13 = *(void *)&v62[7];
  char v60 = 1;
  char v59 = v62[5];
  char v58 = BYTE8(v62[6]);
  char v14 = sub_191CF4948();
  char v61 = 1;
  uint64_t v38 = v30;
  uint64_t v39 = 0;
  char v40 = 1;
  long long v41 = v6;
  uint64_t v42 = v7;
  uint64_t v43 = v25;
  uint64_t v44 = v8;
  char v45 = v29;
  long long v46 = v28;
  uint64_t v47 = v27;
  uint64_t v48 = v26;
  char v49 = v9;
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  char v52 = v12;
  uint64_t v53 = v13;
  char v54 = v14;
  long long v56 = 0u;
  long long v55 = 0u;
  char v57 = 1;
  sub_191CF5088();
  sub_191C21AD8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v62, 0.0, 1, INFINITY, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_191B5D42C(v10, v11, v12);
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_systemBackgroundColor);
  uint64_t v16 = MEMORY[0x192FE3B90](v15);
  char v17 = sub_191CF4948();
  *(void *)&v62[19] = v16;
  BYTE8(v62[19]) = v17;
  sub_191CF5338();
  uint64_t v18 = (uint64_t)v33;
  sub_191CF3068();
  swift_bridgeObjectRelease();
  uint64_t v19 = v36;
  sub_191BD17C0(v18, v36);
  char v20 = v34;
  sub_191C0C708(v19, (uint64_t)&v34[*(int *)(v35 + 44)]);
  memcpy(v20, v62, 0x139uLL);
  sub_191C0C76C((uint64_t)v62);
  sub_191C0C810(v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E45F0);
  uint64_t v22 = v37;
  sub_191BD17C0(v18, v37 + *(int *)(v21 + 36));
  sub_191C0C86C((uint64_t)v20, v22);
  sub_191BD1DF4(v18);
  return sub_191C0C8D4((uint64_t)v62);
}

uint64_t sub_191C0C4A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = sub_191CF4E78();
  uint64_t v23 = sub_191CF4A88();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = sub_191CF4DE8();
  uint64_t v20 = swift_getKeyPath();
  char v19 = sub_191CF4968();
  sub_191CF4358();
  uint64_t v2 = sub_191CF4B78();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_191CF49B8();
  uint64_t v7 = sub_191CF4B68();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_191B5D42C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_191CF4DE8();
  uint64_t v12 = sub_191CF4B48();
  uint64_t v14 = v13;
  LOBYTE(v2) = v15;
  uint64_t v17 = v16;
  swift_release();
  LOBYTE(v2) = v2 & 1;
  sub_191B5D42C(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v21;
  *(unsigned char *)(a1 + 40) = v19;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(unsigned char *)(a1 + 80) = 1;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v2;
  *(void *)(a1 + 112) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191BB4E38(v12, v14, v2);
  swift_bridgeObjectRetain();
  sub_191B5D42C(v12, v14, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C0C708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C0C76C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191BB4E38(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_191C0C810(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191C0C86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E45E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C0C8D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_191B5D42C(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191C0C978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3F88();
  *a1 = result;
  return result;
}

uint64_t sub_191C0C9A4()
{
  return sub_191CF3F98();
}

unint64_t sub_191C0C9DC()
{
  unint64_t result = qword_1E92E45F8;
  if (!qword_1E92E45F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E45F0);
    sub_191C0CA88();
    sub_191C0CCF0(qword_1EB44A0B8, (void (*)(uint64_t))type metadata accessor for WidgetURLMetadataModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E45F8);
  }
  return result;
}

unint64_t sub_191C0CA88()
{
  unint64_t result = qword_1E92E4600;
  if (!qword_1E92E4600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E45E8);
    sub_191C0CB34();
    sub_191C0CCF0(&qword_1EB44AD28, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4600);
  }
  return result;
}

unint64_t sub_191C0CB34()
{
  unint64_t result = qword_1E92E4608;
  if (!qword_1E92E4608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4610);
    sub_191C0CBD4();
    sub_191B00398(&qword_1E92E1058, qword_1E92E1060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4608);
  }
  return result;
}

unint64_t sub_191C0CBD4()
{
  unint64_t result = qword_1E92E4618;
  if (!qword_1E92E4618)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4620);
    sub_191C0CC50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4618);
  }
  return result;
}

unint64_t sub_191C0CC50()
{
  unint64_t result = qword_1E92E4628;
  if (!qword_1E92E4628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4630);
    sub_191B00398(&qword_1E92E4638, &qword_1E92E4640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4628);
  }
  return result;
}

uint64_t sub_191C0CCF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C0CD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191C0E100();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues._widgetAccentedDesaturatedMode.getter()
{
  sub_191BA3084();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._widgetAccentedDesaturatedMode.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues._widgetAccentedDesaturatedMode.modify(uint64_t a1))(void *a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_191BA3084();
  sub_191CF4068();
  return sub_191C0CE74;
}

uint64_t sub_191C0CE74(void *a1)
{
  a1[1] = *a1;
  return sub_191CF4078();
}

uint64_t sub_191C0CEAC()
{
  return 0x6465746E65636361;
}

uint64_t sub_191C0CEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465746E65636361 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191C0CF5C(uint64_t a1)
{
  unint64_t v2 = sub_191C0D154();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C0CF98(uint64_t a1)
{
  unint64_t v2 = sub_191C0D154();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetAccentedDesaturatedViewModifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0D154();
  sub_191CF6508();
  if (!v2)
  {
    char v9 = sub_191CF6128();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v11 = swift_getKeyPath();
    *(void *)a2 = KeyPath;
    *(unsigned char *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v11;
    *(unsigned char *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 25) = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_191C0D154()
{
  unint64_t result = qword_1E92E2130;
  if (!qword_1E92E2130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2130);
  }
  return result;
}

uint64_t WidgetAccentedDesaturatedViewModifier.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0D154();
  sub_191CF6528();
  sub_191CF6228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetAccentedDesaturatedViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0ED0);
  *(void *)&long long v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EB0);
  MEMORY[0x1F4188790](v7);
  char v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EA8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v34 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v35 = &v31[-v13];
  uint64_t v14 = *(void *)v2;
  char v15 = *(unsigned char *)(v2 + 8);
  uint64_t v16 = *(void *)(v2 + 16);
  char v17 = *(unsigned char *)(v2 + 24);
  int v18 = *(unsigned __int8 *)(v3 + 25);
  sub_191B1BB50(v14, v15);
  sub_191B1BB50(v16, v17);
  sub_191B1BB50(v16, v17);
  sub_191BDD890(v16, v17, &v39);
  sub_191B172D4(v16, v17);
  sub_191B172D4(v14, v15);
  sub_191B172D4(v16, v17);
  if (v39 != 1)
  {
    uint64_t v27 = v38;
    long long v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v38 + 16);
    v28(v6, v36, v4);
    v28(v9, (uint64_t)v6, v4);
    swift_storeEnumTagMultiPayload();
    sub_191C0D9A0();
    sub_191C0DA1C();
    sub_191CF44D8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 8))(v6, v4);
  }
  int v32 = v18;
  uint64_t v33 = v10;
  uint64_t v19 = v38;
  sub_191B1BB50(v14, v15);
  sub_191B1BB50(v16, v17);
  sub_191B1BB50(v14, v15);
  uint64_t v20 = sub_191BDD684(v14, v15);
  sub_191B172D4(v14, v15);
  sub_191B172D4(v14, v15);
  sub_191B172D4(v16, v17);
  long long v21 = xmmword_191D029F0;
  if (v20 != 1)
  {
    if (v20 == 3)
    {
      uint64_t v22 = (uint64_t)v9;
      uint64_t v24 = (uint64_t)v35;
      uint64_t v23 = v36;
      uint64_t v25 = v33;
      uint64_t v26 = (uint64_t)v34;
      goto LABEL_11;
    }
    uint64_t v22 = (uint64_t)v9;
    uint64_t v24 = (uint64_t)v35;
    uint64_t v23 = v36;
    uint64_t v25 = v33;
    uint64_t v26 = (uint64_t)v34;
    if (v20 == 2 && (v32 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  uint64_t v22 = (uint64_t)v9;
  uint64_t v24 = (uint64_t)v35;
  uint64_t v23 = v36;
  uint64_t v25 = v33;
  uint64_t v26 = (uint64_t)v34;
  if ((v32 & 1) == 0) {
LABEL_9:
  }
    long long v21 = xmmword_191D02A00;
LABEL_11:
  long long v38 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v26, v23, v4);
  uint64_t v30 = v26 + *(int *)(v25 + 36);
  *(_OWORD *)(v30 + 44) = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 60) = v38;
  *(_DWORD *)(v30 + 76) = 0;
  sub_191C0DA78(v26, v24);
  sub_191C0DAE0(v24, v22);
  swift_storeEnumTagMultiPayload();
  sub_191C0D9A0();
  sub_191C0DA1C();
  sub_191CF44D8();
  return sub_191C0DB48(v24);
}

uint64_t sub_191C0D6FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetAccentedDesaturatedViewModifier.init(from:)(a1, a2);
}

uint64_t sub_191C0D714(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0D154();
  sub_191CF6528();
  sub_191CF6228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191C0D848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_191C0E158();

  return MEMORY[0x1F40FA660](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191C0D8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_191C0E158();

  return MEMORY[0x1F40FA668](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191C0D940()
{
  return sub_191CF46C8();
}

unint64_t sub_191C0D9A0()
{
  unint64_t result = qword_1E92E0EA0;
  if (!qword_1E92E0EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0EA8);
    sub_191C0DA1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0EA0);
  }
  return result;
}

unint64_t sub_191C0DA1C()
{
  unint64_t result = qword_1E92E0EC8;
  if (!qword_1E92E0EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0EC8);
  }
  return result;
}

uint64_t sub_191C0DA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C0DAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C0DB48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0EA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191C0DBAC()
{
  unint64_t result = qword_1E92E2388;
  if (!qword_1E92E2388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2388);
  }
  return result;
}

unint64_t sub_191C0DC04()
{
  unint64_t result = qword_1E92E2380;
  if (!qword_1E92E2380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2380);
  }
  return result;
}

uint64_t sub_191C0DC5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_191B1BB50(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_191B1BB50(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_191B172D4(v10, v11);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B172D4(v9, v10);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedViewModifier()
{
  return &type metadata for WidgetAccentedDesaturatedViewModifier;
}

unint64_t sub_191C0DE98()
{
  unint64_t result = qword_1E92E0EB8;
  if (!qword_1E92E0EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0EC0);
    sub_191C0D9A0();
    sub_191C0DA1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0EB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C0DFB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedViewModifier.CodingKeys()
{
  return &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedModeKey()
{
  return &type metadata for WidgetAccentedDesaturatedModeKey;
}

unint64_t sub_191C0DFFC()
{
  unint64_t result = qword_1E92E4648;
  if (!qword_1E92E4648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4648);
  }
  return result;
}

unint64_t sub_191C0E054()
{
  unint64_t result = qword_1E92E1F70;
  if (!qword_1E92E1F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1F70);
  }
  return result;
}

unint64_t sub_191C0E0AC()
{
  unint64_t result = qword_1E92E2138;
  if (!qword_1E92E2138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2138);
  }
  return result;
}

unint64_t sub_191C0E100()
{
  unint64_t result = qword_1E92E4650;
  if (!qword_1E92E4650)
  {
    type metadata accessor for CHSTintAccentedDesaturatedMode(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4650);
  }
  return result;
}

unint64_t sub_191C0E158()
{
  unint64_t result = qword_1E92E2378;
  if (!qword_1E92E2378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2378);
  }
  return result;
}

uint64_t sub_191C0E1AC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4658);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_191B15F88(a1, a2);
      break;
    default:
      break;
  }
  sub_191B15F88(a1, a2);
  sub_191B15F88(a3, a4);
  sub_191CF30E8();
  sub_191B1603C(a1, a2);
  switch(a4 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_191B15F88(a3, a4);
      break;
    default:
      break;
  }
  sub_191CF30E8();
  sub_191B1603C(a3, a4);
  uint64_t v11 = *(int *)(v8 + 56);
  v10[v11] = 0;
  sub_191CF30D8();
  sub_191C0F3EC();
  while (1)
  {
    sub_191CF5BF8();
    if (v19) {
      break;
    }
    unsigned int v12 = v18;
    sub_191CF5BF8();
    if (v17) {
      break;
    }
    if (v12 < v16)
    {
      uint64_t v13 = 1;
      goto LABEL_11;
    }
  }
  uint64_t v13 = 0;
  v10[v11] = 1;
LABEL_11:
  sub_191C0F444((uint64_t)v10);
  return v13;
}

unsigned char *sub_191C0E3DC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_191C0E3E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_191B15F88(v3, v2);
}

uint64_t sub_191C0E424()
{
  return 0x65756C6156776172;
}

uint64_t sub_191C0E440(uint64_t a1)
{
  unint64_t v2 = sub_191C0F960();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C0E47C(uint64_t a1)
{
  unint64_t v2 = sub_191C0F960();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C0E4B8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AA98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0F960();
  sub_191CF6508();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v9 = sub_191CF6128();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_191C0E618(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A810);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0F960();
  sub_191CF6528();
  sub_191CF6228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191C0E74C(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_191C0E760(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_191C0E774(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_191C0E788(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_191C0E79C()
{
  if (*v0) {
    return 1702195828;
  }
  else {
    return 0x65736C6166;
  }
}

uint64_t sub_191C0E7CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A818);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0F614();
  sub_191CF6528();
  v11[0] = a2;
  v11[1] = a3;
  sub_191B718A4();
  sub_191CF6278();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_191C0E91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191C0E9B4(uint64_t a1)
{
  unint64_t v2 = sub_191C0F614();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C0E9F0(uint64_t a1)
{
  unint64_t v2 = sub_191C0F614();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_191C0EA2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_191C0F4A4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_191C0EA58(void *a1)
{
  return sub_191C0E7CC(a1, *v1, v1[1]);
}

unint64_t sub_191C0EA78()
{
  unint64_t result = qword_1EB44BF80;
  if (!qword_1EB44BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF80);
  }
  return result;
}

uint64_t sub_191C0EACC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_191B15F88(*a1, v3);
  sub_191B15F88(v4, v5);
  char v6 = sub_191C0E1AC(v2, v3, v4, v5);
  sub_191B1603C(v2, v3);
  sub_191B1603C(v4, v5);
  return v6 & 1;
}

BOOL sub_191C0EB58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_191B15F88(*a2, v5);
  sub_191B15F88(v2, v3);
  char v6 = sub_191C0E1AC(v4, v5, v2, v3);
  sub_191B1603C(v4, v5);
  sub_191B1603C(v2, v3);
  return (v6 & 1) == 0;
}

BOOL sub_191C0EBE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_191B15F88(*a1, v3);
  sub_191B15F88(v4, v5);
  char v6 = sub_191C0E1AC(v2, v3, v4, v5);
  sub_191B1603C(v2, v3);
  sub_191B1603C(v4, v5);
  return (v6 & 1) == 0;
}

uint64_t sub_191C0EC78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_191B15F88(*a2, v5);
  sub_191B15F88(v2, v3);
  char v6 = sub_191C0E1AC(v4, v5, v2, v3);
  sub_191B1603C(v4, v5);
  sub_191B1603C(v2, v3);
  return v6 & 1;
}

uint64_t sub_191C0ED04()
{
  return sub_191CF3098();
}

BOOL sub_191C0ED0C(uint64_t a1, uint64_t a2)
{
  return sub_191C0F29C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

double sub_191C0ED20@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_191C0ED2C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)a2 = *(unsigned char *)result;
  *(void *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_191C0ED40@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  char v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_191B15F88(a2, a3);
      char v10 = (char *)sub_191CF2ED8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_191CF2EF8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_191CF2EE8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x191C0EFA4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_191B1603C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v17 = (char *)sub_191CF2ED8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_191CF2EF8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_191CF2EE8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_191C0EFB4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_191B15F88(a1, a2);
      char v5 = sub_191C0F1E4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_191B1603C(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_191C0F1E4(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_191B1603C(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_191C0ED40((uint64_t)__s1, a3, a4, &v14);
      sub_191B1603C(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_191C0F1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_191CF2ED8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_191CF2EF8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_191CF2EE8();
  sub_191C0ED40(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

BOOL sub_191C0F29C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x191C0F3CCLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_19;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12 && (v8 < 1 || (sub_191B15F88(a3, a4), (sub_191C0EFB4(a1, a2, a3, a4) & 1) != 0))) {
            return 1;
          }
          else {
            return 0;
          }
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_20;
        case 3uLL:
          return !v8;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_191C0F3EC()
{
  unint64_t result = qword_1E92E4660;
  if (!qword_1E92E4660)
  {
    sub_191CF30D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4660);
  }
  return result;
}

uint64_t sub_191C0F444(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4658);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_191C0F4A4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AAA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C0F614();
  sub_191CF6508();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_191B71714();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v7 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_191C0F614()
{
  unint64_t result = qword_1EB44A920;
  if (!qword_1EB44A920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A920);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparableData.CodingKeys()
{
  return &type metadata for ComparableData.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlPushInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_191B15F88(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for ControlPushInfo(uint64_t a1)
{
  return sub_191B1603C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for ControlPushInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_191B15F88(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_191B1603C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for ControlPushInfo(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_191B1603C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlPushInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ControlPushInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparableData()
{
  return &type metadata for ComparableData;
}

unint64_t sub_191C0F804()
{
  unint64_t result = qword_1E92E4668;
  if (!qword_1E92E4668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4668);
  }
  return result;
}

unint64_t sub_191C0F85C()
{
  unint64_t result = qword_1EB44B500;
  if (!qword_1EB44B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B500);
  }
  return result;
}

unint64_t sub_191C0F8B4()
{
  unint64_t result = qword_1EB44A930;
  if (!qword_1EB44A930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A930);
  }
  return result;
}

unint64_t sub_191C0F90C()
{
  unint64_t result = qword_1EB44A928;
  if (!qword_1EB44A928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A928);
  }
  return result;
}

unint64_t sub_191C0F960()
{
  unint64_t result = qword_1EB44A8D0;
  if (!qword_1EB44A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A8D0);
  }
  return result;
}

unsigned char *_s9WidgetKit14ComparableDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C0FA50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableBool.CodingKeys()
{
  return &type metadata for CodableBool.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CodableBool(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CodableBool(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C0FBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableBool()
{
  return &type metadata for CodableBool;
}

unint64_t sub_191C0FC30()
{
  unint64_t result = qword_1E92E4670;
  if (!qword_1E92E4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4670);
  }
  return result;
}

unint64_t sub_191C0FC88()
{
  unint64_t result = qword_1EB44A8E0;
  if (!qword_1EB44A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A8E0);
  }
  return result;
}

unint64_t sub_191C0FCE0()
{
  unint64_t result = qword_1EB44A8D8;
  if (!qword_1EB44A8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A8D8);
  }
  return result;
}

unsigned char *sub_191C0FD38@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_191C0E3DC(a1, a2);
}

double sub_191C0FD50@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  return sub_191C0ED20(a1, a2);
}

uint64_t sub_191C0FD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C0ED2C(a1, a2);
}

ValueMetadata *type metadata accessor for ControlViewSource()
{
  return &type metadata for ControlViewSource;
}

uint64_t destroy for ControlViewSource.ProviderType(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    return swift_release();
  }
  else {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t initializeWithCopy for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
    char v5 = 1;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 40) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

ValueMetadata *type metadata accessor for ControlViewSource.ProviderType()
{
  return &type metadata for ControlViewSource.ProviderType;
}

uint64_t sub_191C0FFD8()
{
  sub_191CF5D88();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF5958();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v1 = *(id *)(v0 + 40);
  id v2 = objc_msgSend(v1, sel_description);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191C101AC();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_191C101AC()
{
  sub_191B15E0C(v0, (uint64_t)v4);
  if (v5)
  {
    swift_release();
    return 4804673;
  }
  else
  {
    sub_191B004A8(v4, (uint64_t)v3);
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    swift_getDynamicType();
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t v1 = 675893331;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  return v1;
}

uint64_t sub_191C10264()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191C10294()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_191C102CC(uint64_t a1)
{
  unint64_t result = sub_191C102F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_191C102F4()
{
  unint64_t result = qword_1E92E2470;
  if (!qword_1E92E2470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2470);
  }
  return result;
}

uint64_t sub_191C1034C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_191BB2F6C((uint64_t)a1, (uint64_t)v25);
    sub_191BB2F6C((uint64_t)a2, (uint64_t)v22);
  }
  else
  {
    char v5 = sub_191CF6348();
    sub_191BB2F6C((uint64_t)a1, (uint64_t)v25);
    sub_191BB2F6C((uint64_t)a2, (uint64_t)v22);
    if ((v5 & 1) == 0)
    {
      sub_191B15E68((uint64_t)v22);
      sub_191B15E68((uint64_t)v25);
LABEL_17:
      sub_191BB2F6C((uint64_t)a1, (uint64_t)v20);
      sub_191BB2F6C((uint64_t)a2, (uint64_t)v18);
LABEL_18:
      sub_191B15E68((uint64_t)v18);
      sub_191B15E68((uint64_t)v20);
      sub_191BB2F6C((uint64_t)a1, (uint64_t)v16);
      sub_191BB2F6C((uint64_t)a2, (uint64_t)v15);
      goto LABEL_19;
    }
  }
  uint64_t v6 = v24;
  if (!v27)
  {
    swift_bridgeObjectRetain();
    sub_191B15E68((uint64_t)v22);
    sub_191B15E68((uint64_t)v25);
    if (!v6) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v24)
  {
    swift_bridgeObjectRetain();
    sub_191B15E68((uint64_t)v22);
    sub_191B15E68((uint64_t)v25);
    goto LABEL_16;
  }
  if (v26 == v23 && v27 == v24)
  {
    swift_bridgeObjectRetain();
    sub_191B15E68((uint64_t)v22);
    sub_191B15E68((uint64_t)v25);
    swift_bridgeObjectRelease();
LABEL_14:
    sub_191BB2F6C((uint64_t)a1, (uint64_t)v20);
    sub_191BB2F6C((uint64_t)a2, (uint64_t)v18);
    goto LABEL_22;
  }
  char v9 = sub_191CF6348();
  swift_bridgeObjectRetain();
  sub_191B15E68((uint64_t)v22);
  sub_191B15E68((uint64_t)v25);
  swift_bridgeObjectRelease();
  sub_191BB2F6C((uint64_t)a1, (uint64_t)v20);
  sub_191BB2F6C((uint64_t)a2, (uint64_t)v18);
  if ((v9 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_22:
  uint64_t v10 = v21;
  uint64_t v11 = v19;
  sub_191B15E68((uint64_t)v18);
  sub_191B15E68((uint64_t)v20);
  sub_191BB2F6C((uint64_t)a1, (uint64_t)v16);
  sub_191BB2F6C((uint64_t)a2, (uint64_t)v15);
  if (v10 == v11)
  {
    sub_191B886E4();
    uint64_t v12 = (void *)v15[5];
    id v13 = v17;
    id v14 = v12;
    char v7 = sub_191CF5B58();

    goto LABEL_20;
  }
LABEL_19:
  char v7 = 0;
LABEL_20:
  sub_191B15E68((uint64_t)v15);
  sub_191B15E68((uint64_t)v16);
  return v7 & 1;
}

uint64_t EnvironmentValues._developmentMode.getter()
{
  sub_191B4F31C();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._developmentMode.setter()
{
  return sub_191CF4078();
}

uint64_t sub_191C10638()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C958 = result;
  return result;
}

uint64_t sub_191C10660()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A5F8);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C940 = v0;
  *(void *)algn_1EB44C948 = 0xD000000000000010;
  qword_1EB44C950 = 0x8000000191D0DD40;
  return result;
}

uint64_t sub_191C106D8()
{
  if (qword_1EB44A590 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191C10734()
{
  if (qword_1EB44A6B8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C940;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*EnvironmentValues._developmentMode.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F31C();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C10828;
}

uint64_t sub_191C10828(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s29DevelopmentModeEnvironmentKeyVMa()
{
  return &_s29DevelopmentModeEnvironmentKeyVN;
}

ValueMetadata *type metadata accessor for DevelopmentModeKey()
{
  return &type metadata for DevelopmentModeKey;
}

uint64_t static WidgetExtensionSession.makeLoggingIdentifier(sessionIdentifier:extensionBundleIdentifier:deviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_191C10BBC();
    sub_191CF5798();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0BF8);
    sub_191C10C10();
    sub_191C10C6C();
    sub_191CF54B8();
    uint64_t v6 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191CF34D8();
  sub_191C10BBC();
  sub_191CF5798();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0BF8);
  sub_191C10C10();
  sub_191C10C6C();
  sub_191CF54B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191CF3188();
  sub_191CF5798();
  sub_191CF54B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    sub_191CF53B8();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 91;
}

unint64_t sub_191C10BBC()
{
  unint64_t result = qword_1E92E0BA8;
  if (!qword_1E92E0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0BA8);
  }
  return result;
}

unint64_t sub_191C10C10()
{
  unint64_t result = qword_1E92E0BF0;
  if (!qword_1E92E0BF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0BF0);
  }
  return result;
}

unint64_t sub_191C10C6C()
{
  unint64_t result = qword_1E92E0BB8;
  if (!qword_1E92E0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0BB8);
  }
  return result;
}

uint64_t dispatch thunk of WidgetExtensionSessionAssertionInvalidatable.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetExtensionSessionSuspensionObserving.invalidate(_:onSuspendOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetIdiomModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  sub_191BDE084(*a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for WidgetIdiomModifier(uint64_t a1)
{
  return sub_191BDE088(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for WidgetIdiomModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  sub_191BDE084(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_191BDE088(v5, v6);
  return a1;
}

uint64_t *assignWithTake for WidgetIdiomModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_191BDE088(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetIdiomModifier()
{
  return &type metadata for WidgetIdiomModifier;
}

uint64_t sub_191C10DE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C10E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A550);
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A528);
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A558);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)v2;
  uint64_t v14 = *(unsigned __int8 *)(v2 + 8);
  sub_191BDE084(v13, v14);
  sub_191BDCC58(v13, v14, &v24);
  sub_191BDE088(v13, v14);
  switch((char)v24)
  {
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C111D0);
    default:
      int IsAccessory = CHSWidgetFamilyIsAccessory();
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A548);
      unint64_t v17 = sub_191C111F4();
      if (IsAccessory)
      {
        sub_191CF4C58();
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = v16;
        unint64_t v25 = v17;
        swift_getOpaqueTypeConformance2();
        uint64_t v24 = v16;
        unint64_t v25 = v17;
        swift_getOpaqueTypeConformance2();
        sub_191CF44D8();
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
      else
      {
        sub_191CF4BD8();
        uint64_t v19 = v21;
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v8, v5, v3);
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = v16;
        unint64_t v25 = v17;
        swift_getOpaqueTypeConformance2();
        uint64_t v24 = v16;
        unint64_t v25 = v17;
        swift_getOpaqueTypeConformance2();
        sub_191CF44D8();
        return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v3);
      }
  }
}

unint64_t sub_191C111F4()
{
  unint64_t result = qword_1EB44A540;
  if (!qword_1EB44A540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A540);
  }
  return result;
}

unint64_t sub_191C11254()
{
  unint64_t result = qword_1EB44A530;
  if (!qword_1EB44A530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A538);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A548);
    sub_191C111F4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A530);
  }
  return result;
}

uint64_t EnvironmentValues.activityFamily.getter()
{
  sub_191C1137C();

  return sub_191CF4068();
}

unint64_t sub_191C1137C()
{
  unint64_t result = qword_1E92E22E0;
  if (!qword_1E92E22E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E22E0);
  }
  return result;
}

uint64_t sub_191C113D0@<X0>(unsigned char *a1@<X8>)
{
  sub_191C1137C();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191C11420()
{
  return sub_191CF4078();
}

uint64_t EnvironmentValues.activityFamily.setter()
{
  return sub_191CF4078();
}

void static ActivityFamily.defaultFamily.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

WidgetKit::ActivityFamily_optional __swiftcall ActivityFamily.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::ActivityFamily_optional)rawValue;
}

uint64_t ActivityFamily.rawValue.getter()
{
  return *v0;
}

uint64_t ActivityFamily.description.getter()
{
  if (*v0) {
    return 0x6D756964656DLL;
  }
  else {
    return 0x6C6C616D73;
  }
}

uint64_t sub_191C11510()
{
  return sub_191CF5508();
}

uint64_t sub_191C11570()
{
  return sub_191CF54E8();
}

uint64_t sub_191C115C0()
{
  if (*v0) {
    return 0x6D756964656DLL;
  }
  else {
    return 0x6C6C616D73;
  }
}

uint64_t ActivityFamily.filePath.getter()
{
  return 980246886;
}

uint64_t sub_191C11670()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C880 = result;
  return result;
}

uint64_t sub_191C11698()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A140);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C868 = v0;
  strcpy(byte_1EB44C870, "activityFamily");
  HIBYTE(qword_1EB44C878) = -18;
  return result;
}

uint64_t sub_191C11718()
{
  if (qword_1EB44A160 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t *sub_191C11774@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result != 1 && v2) {
    *a2 = 1;
  }
  else {
    *a2 = v2;
  }
  return result;
}

uint64_t sub_191C11798()
{
  if (qword_1EB44A128 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C868;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t WidgetConfiguration.supplementalActivityFamilies(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_191CDB0C8((uint64_t)sub_191C1192C, v2);

  return swift_release();
}

uint64_t sub_191C118B4()
{
  type metadata accessor for WidgetDescriptor(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_191BCCB84(v0);
}

uint64_t sub_191C118F4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191C1192C()
{
  return sub_191C118B4();
}

uint64_t (*EnvironmentValues.activityFamily.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_191C1137C();
  sub_191CF4068();
  return sub_191C119A0;
}

uint64_t sub_191C119A0(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

uint64_t sub_191C119D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191C11D00();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t static SupportedActivityFamiliesEnvironmentKey.defaultValue.getter()
{
  return sub_191BA8184((uint64_t)&unk_1EE2A3630);
}

uint64_t sub_191C11A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191BA8184((uint64_t)&unk_1EE2A3658);
  *a1 = result;
  return result;
}

uint64_t sub_191C11A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191C11FC4();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.supportedActivityFamilies.getter()
{
  sub_191C11CA8();
  sub_191CF4068();
  return v1;
}

uint64_t sub_191C11B18()
{
  return sub_191CF4078();
}

uint64_t EnvironmentValues.supportedActivityFamilies.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.supportedActivityFamilies.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_191C11CA8();
  sub_191CF4068();
  return sub_191C11C14;
}

uint64_t sub_191C11C14(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_191CF4078();
  }
  swift_bridgeObjectRetain();
  sub_191CF4078();

  return swift_bridgeObjectRelease();
}

unint64_t sub_191C11CA8()
{
  unint64_t result = qword_1E92E4678;
  if (!qword_1E92E4678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4678);
  }
  return result;
}

unint64_t sub_191C11D00()
{
  unint64_t result = qword_1E92E0AF0;
  if (!qword_1E92E0AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0AF0);
  }
  return result;
}

uint64_t sub_191C11D54@<X0>(unsigned char *a1@<X8>)
{
  sub_191C1137C();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191C11DA4()
{
  return sub_191CF4078();
}

uint64_t sub_191C11DF0@<X0>(void *a1@<X8>)
{
  sub_191C11CA8();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivityFamily(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C11F10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityFamily()
{
  return &type metadata for ActivityFamily;
}

ValueMetadata *type metadata accessor for SupportedActivityFamiliesEnvironmentKey()
{
  return &type metadata for SupportedActivityFamiliesEnvironmentKey;
}

uint64_t sub_191C11F58()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ActivityFamilyEnvironmentKey()
{
  return &type metadata for ActivityFamilyEnvironmentKey;
}

unint64_t sub_191C11FC4()
{
  unint64_t result = qword_1E92E4680;
  if (!qword_1E92E4680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4680);
  }
  return result;
}

unint64_t sub_191C12020()
{
  unint64_t result = qword_1E92E1C08;
  if (!qword_1E92E1C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C08);
  }
  return result;
}

uint64_t static WidgetArchiver.archive(_:to:delegate:)(void *a1, void *a2, void *a3)
{
  sub_191AFEE28((uint64_t)a1, (uint64_t)v12);
  if (a3)
  {
    id v7 = a3;
  }
  else
  {
    uint64_t v8 = v13;
    uint64_t v9 = v14;
    uint64_t v10 = __swift_project_boxed_opaque_existential_1(v12, v13);
    id v7 = sub_191C19C74((uint64_t)v10, v8, v9);
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  sub_191C12358(a1, (uint64_t)v7, v3, a2);
  return swift_release();
}

id sub_191C12128(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
    unsigned int v4 = (void *)sub_191CF5238();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = 0;
  }

  return v4;
}

uint64_t sub_191C121C4()
{
  id v1 = objc_msgSend(v0, sel_infoDictionary);
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_191CF5248();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_191B1CB2C(0x656C646E75424643, 0xEF6E6F6973726556), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_191B4F964(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_11:
    sub_191B01770((uint64_t)&v8, (uint64_t *)&unk_1EB44BC90);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_191C122EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

void sub_191C12358(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v22 = a3;
  uint64_t v20 = sub_191CF37A8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AFA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_191CF4488();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)(v10 + 8) + 32))(&aBlock, v11);
  uint64_t v12 = aBlock;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v14 = sub_191AFA438(KeyPath);

  swift_release();
  if (v14)
  {
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_191CF6018();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_4:
        v19[6] = v4;
        if ((v14 & 0xC000000000000001) != 0)
        {
          id v15 = (id)MEMORY[0x192FE4B60](0, v14);
        }
        else
        {
          if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x191C1302CLL);
          }
          id v15 = *(id *)(v14 + 32);
        }
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(void *)(swift_initStackObject() + 16) = 0;
      }
    }
    else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_191C1AD00();
  swift_allocError();
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(v18 + 32) = 3;
  swift_willThrow();
}

uint64_t sub_191C13058(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v21 = sub_191CF37A8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AFA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_191CF4488();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)(v11 + 8) + 32))(&aBlock, v10);
  uint64_t v12 = aBlock;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v14 = sub_191AFA438(KeyPath);

  swift_release();
  if (v14)
  {
    v20[5] = a3;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_191CF6018();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_4:
        _OWORD v20[2] = v4;
        if ((v14 & 0xC000000000000001) != 0)
        {
          id v15 = (id)MEMORY[0x192FE4B60](0, v14);
        }
        else
        {
          if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x191C13D50);
          }
          id v15 = *(id *)(v14 + 32);
        }
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(void *)(swift_initStackObject() + 16) = 0;
      }
    }
    else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_191C1AD00();
  swift_allocError();
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(v18 + 32) = 3;
  return swift_willThrow();
}

uint64_t sub_191C13D7C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v19[9] = a3;
  uint64_t v20 = sub_191CF37A8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AFA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_191CF4488();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)(v10 + 8) + 32))(&aBlock, v9);
  uint64_t v11 = aBlock;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v13 = sub_191AFA438(KeyPath);

  swift_release();
  if (v13)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_191CF6018();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_4:
        uint64_t v22 = v3;
        v19[8] = a2;
        if ((v13 & 0xC000000000000001) != 0)
        {
          id v14 = (id)MEMORY[0x192FE4B60](0, v13);
        }
        else
        {
          if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x191C14A40);
          }
          id v14 = *(id *)(v13 + 32);
        }
        id v15 = v14;
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(void *)(swift_initStackObject() + 16) = 0;
      }
    }
    else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_191C1AD00();
  swift_allocError();
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(unsigned char *)(v17 + 32) = 3;
  return swift_willThrow();
}

uint64_t static WidgetArchiver.archive(_:to:delegate:)(void *a1, uint64_t a2, void *a3)
{
  sub_191AFEE28((uint64_t)a1, (uint64_t)v13);
  if (a3)
  {
    id v6 = a3;
  }
  else
  {
    uint64_t v7 = v14;
    uint64_t v8 = v15;
    uint64_t v9 = __swift_project_boxed_opaque_existential_1(v13, v14);
    id v6 = sub_191C19C74((uint64_t)v9, v7, v8);
  }
  swift_retain();
  uint64_t v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  MEMORY[0x1F4188790](v10);
  _OWORD v12[2] = a2;
  sub_191C13058(a1, (uint64_t)v6, (uint64_t)sub_191C19FD4, (uint64_t)v12);
  return swift_release();
}

uint64_t static WidgetArchiver.archive(_:delegate:)(void *a1, uint64_t a2)
{
  sub_191AFEE28((uint64_t)a1, (uint64_t)v11);
  if (!a2)
  {
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_191C19C74((uint64_t)v8, v6, v7);
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_191C13D7C(a1, v2, (uint64_t)&v10);
  uint64_t result = swift_release();
  if (!v3) {
    return v10;
  }
  return result;
}

uint64_t WidgetArchiver.ArchivingDelegate.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_191C19A3C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

unint64_t WidgetArchiver.ArchivingError.errorDescription.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t result = 0xD000000000000024;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t v14 = v1;
      sub_191CF5D88();
      sub_191CF53B8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
      sub_191CF5F38();
      sub_191C1A000(v1, v2, v3, v4, 1);
      return 0;
    case 2:
      sub_191CF5D88();
      sub_191CF53B8();
      type metadata accessor for CGSize(0);
      sub_191CF5F38();
      sub_191CF53B8();
      sub_191CF5F38();
      return 0;
    case 3:
      return result;
    default:
      int64_t v6 = v1[2];
      if (v6)
      {
        uint64_t v15 = MEMORY[0x1E4FBC860];
        sub_191AFB944(0, v6, 0);
        uint64_t v7 = v1 + 4;
        do
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FB8);
          uint64_t v8 = sub_191CF5368();
          uint64_t v10 = v9;
          unint64_t v12 = *(void *)(v15 + 16);
          unint64_t v11 = *(void *)(v15 + 24);
          if (v12 >= v11 >> 1) {
            sub_191AFB944(v11 > 1, v12 + 1, 1);
          }
          *(void *)(v15 + 16) = v12 + 1;
          uint64_t v13 = v15 + 16 * v12;
          *(void *)(v13 + 32) = v8;
          *(void *)(v13 + 40) = v10;
          ++v7;
          --v6;
        }
        while (v6);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
      sub_191B5A8B4();
      sub_191CF5288();
      swift_bridgeObjectRelease();
      sub_191CF5D88();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t sub_191C15014()
{
  return sub_191CF64C8();
}

uint64_t sub_191C15074()
{
  return sub_191CF5B68();
}

uint64_t sub_191C150B8()
{
  return sub_191CF64C8();
}

uint64_t sub_191C15114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  return sub_191CF5B58() & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191CF3178();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

id WidgetArchiver.ArchivingDelegate.SelectableRegionKey.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1
                + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20));
  *a1 = v3;

  return v3;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.init(date:environment:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  *(void *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

void WidgetArchiver.ArchivingDelegate.SelectableRegionKey.hash(into:)()
{
  sub_191CF3178();
  sub_191C1AD9C(&qword_1E92E3480, MEMORY[0x1E4F27928]);
  sub_191CF5278();
  id v1 = objc_retain(*(id *)(v0
                         + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0)
                                  + 20)));
  WidgetEnvironment.Storage.hash.getter();
  sub_191CF6478();
}

uint64_t static WidgetArchiver.ArchivingDelegate.SelectableRegionKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_191CF3158() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20);
  uint64_t v5 = *(void **)(a1 + v4);
  uint64_t v6 = *(void **)(a2 + v4);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  id v7 = v5;
  id v8 = v6;
  char v9 = sub_191CF5B58();

  return v9 & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t sub_191C154A0()
{
  return sub_191CF64C8();
}

uint64_t sub_191C15548()
{
  return sub_191CF6478();
}

uint64_t sub_191C155D8()
{
  return sub_191CF64C8();
}

uint64_t sub_191C1567C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_191CF3158() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = *(void **)(a1 + v6);
  id v8 = *(void **)(a2 + v6);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  id v9 = v7;
  id v10 = v8;
  char v11 = sub_191CF5B58();

  return v11 & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegion.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double WidgetArchiver.ArchivingDelegate.SelectableRegion.boundingRect.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegion.accessibilityNode.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_191B169E8(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t WidgetArchiver.ArchivingDelegate.bundleStub.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191C1C20C(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

double WidgetArchiver.ArchivingDelegate.systemVersion.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion);
  *a1 = result;
  return result;
}

uint64_t sub_191C157D0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_191C15818(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_191C15864())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C158C0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_191C1592C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_191C15978(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_191C159CC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C15A28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_191C15A78(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*sub_191C15ACC())()
{
  return j__swift_endAccess;
}

uint64_t sub_191C15B28()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_191C15B70(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_191C15BBC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C15C18()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_191C15C60(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_191C15CAC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C15D08()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF4058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection;
  sub_191B01614(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, (uint64_t)v40, &qword_1EB449FB8);
  uint64_t v10 = v41;
  if (v41)
  {
    uint64_t v11 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    unint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    id v13 = objc_msgSend(v12, sel_extensionIdentity);

    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    uint64_t v14 = sub_191CF34D8();
    uint64_t v16 = v15;
    swift_endAccess();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if (v14 == 0xD000000000000026 && v16 == 0x8000000191D0C940)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    char v17 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v17) {
      return 0;
    }
  }
  else
  {
    sub_191B01770((uint64_t)v40, &qword_1EB449FB8);
  }
  uint64_t v18 = v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  swift_beginAccess();
  sub_191B01614(v18, (uint64_t)v4, (uint64_t *)&unk_1EB44BBB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t v19 = (uint64_t *)&unk_1EB44BBB8;
    uint64_t v20 = (long long *)v4;
LABEL_12:
    sub_191B01770((uint64_t)v20, v19);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_191B01614(v9, (uint64_t)&v38, &qword_1EB449FB8);
  if (!v39)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v19 = &qword_1EB449FB8;
    uint64_t v20 = &v38;
    goto LABEL_12;
  }
  sub_191B004A8(&v38, (uint64_t)v40);
  double v21 = sub_191B54088();
  unsigned __int8 v23 = v22;
  double v24 = v21;
  uint64_t v26 = v25;
  uint64_t v27 = v41;
  uint64_t v28 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  char v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  id v30 = objc_msgSend(v29, sel_family);

  uint64_t v31 = v41;
  uint64_t v32 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  uint64_t v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
  sub_191B4EC44();
  sub_191CF4068();
  uint64_t v34 = (void *)v38;
  uint64_t v35 = sub_191B53CB4((uint64_t)v30, v33, (void *)v38, v23, v26, v24);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return v35;
}

uint64_t sub_191C16160(uint64_t a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes);
  swift_beginAccess();
  uint64_t v4 = *v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_191B41774(0, v4[2] + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v4 = sub_191B41774((void *)(v6 > 1), v7 + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  long long v4[2] = v7 + 1;
  v4[v7 + 4] = a1;
  return swift_endAccess();
}

void *sub_191C16238(void *a1)
{
  uint64_t v2 = (void *)sub_191C1A03C(a1);
  uint64_t v3 = v2;
  if (!v1) {
    id v4 = v2;
  }
  return v3;
}

uint64_t sub_191C16270()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *v2;
  if (*(void *)(*v2 + 16))
  {
    unint64_t v9 = *v2;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 0;
    swift_bridgeObjectRetain();
    unint64_t v5 = WidgetArchiver.ArchivingError.errorDescription.getter();
    if (v6)
    {
      unint64_t v9 = v5;
      uint64_t v10 = v6;
      sub_191C1637C((uint64_t *)&v9);
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
    swift_beginAccess();
    if (*v7)
    {
      sub_191C1AD00();
      swift_allocError();
      *(void *)uint64_t v8 = v4;
      *(void *)(v8 + 8) = 0;
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(unsigned char *)(v8 + 32) = 0;
      return swift_willThrow();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_191C1637C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191CF3858();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB44C888);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5928();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_191C5C36C(v2, v1, &v8);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v4, v5, "%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v7, -1, -1);
    MEMORY[0x192FE5F00](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t WidgetArchiver.ArchivingDelegate.deinit()
{
  sub_191C1C344(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(void))type metadata accessor for BundleStub);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B01770(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment, (uint64_t *)&unk_1EB44BBB8);
  swift_bridgeObjectRelease();
  sub_191B01770(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1EB449FB8);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  swift_bridgeObjectRelease();
  sub_191B01770(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType, &qword_1EB44AFA0);
  return v0;
}

uint64_t WidgetArchiver.ArchivingDelegate.__deallocating_deinit()
{
  WidgetArchiver.ArchivingDelegate.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_191C1665C(uint64_t a1)
{
  return sub_191C16160(a1);
}

void *sub_191C16680(void *a1)
{
  uint64_t v2 = (void *)sub_191C1A03C(a1);
  uint64_t v3 = v2;
  if (!v1) {
    id v4 = v2;
  }
  return v3;
}

uint64_t sub_191C166C0(uint64_t a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
}

id sub_191C16738()
{
  uint64_t v0 = self;
  id result = objc_msgSend(v0, sel_currentState);
  if (result)
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_191CF3858();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB44CCE0);
    uint64_t v3 = sub_191CF3838();
    os_log_type_t v4 = sub_191CF5918();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_191AF4000, v3, v4, "Flushing CATransaction because one was opened during archiving.", v5, 2u);
      MEMORY[0x192FE5F00](v5, -1, -1);
    }

    return objc_msgSend(v0, sel_flush);
  }
  return result;
}

void sub_191C1685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v57 = a8;
  uint64_t v61 = a7;
  uint64_t v69 = a6;
  uint64_t v56 = a3;
  uint64_t v59 = sub_191CF4898();
  uint64_t v54 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  v40[0] = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_191CF3178();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  long long v46 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  uint64_t v11 = MEMORY[0x1F4188790](v45);
  char v49 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v50 = (char *)v40 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  v40[1] = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v42 = (char *)v40 - v18;
  MEMORY[0x1F4188790](v17);
  long long v55 = (char *)v40 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v44 = (char *)v40 - v24;
  MEMORY[0x1F4188790](v23);
  char v60 = (char *)v40 - v25;
  uint64_t v63 = type metadata accessor for WidgetViewMetadata();
  uint64_t v53 = *(void *)(v63 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v63);
  char v52 = (char *)v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v51 = (char *)v40 - v29;
  MEMORY[0x1F4188790](v28);
  id v64 = (char *)v40 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v62 = (char *)v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v41 = sub_191CF43A8();
  MEMORY[0x1F4188790](v41);
  uint64_t v34 = sub_191CF3CF8();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v66 = sub_191CF4058();
  uint64_t v65 = *(void *)(v66 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v66);
  char v58 = (char *)v40 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v68 = (char *)v40 - v37;
  uint64_t v38 = type metadata accessor for ViewableTimelineEntry();
  MEMORY[0x1F4188790](v38);
  id v67 = (char *)v40 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_191C16EE0(uint64_t a1)
{
  *(void *)(v5 + 16) = a1;
  sub_191C16738();
  uint64_t v11 = v7;
  uint64_t v12 = *(void *)(v7 + 16);
  if (!v12)
  {
    __break(1u);
    goto LABEL_68;
  }
  *(void *)(v10 - 296) = v2;
  unint64_t v13 = v2 / v12;
  if (v2 / v12 < 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v14 = *(void *)(v10 - 344);
  unint64_t v15 = *(void *)(v14 + 16);
  if (v13 >= v15)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  *(void *)(v10 - 408) = v15;
  unint64_t v5 = *(void *)(v10 - 296) - v13 * v12;
  sub_191C1C20C(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v13, *(void *)(v10 - 248), (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  *(void *)(v10 - 416) = v12;
  uint64_t v16 = *(void *)(v10 - 264);
  uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16);
  v16 += 16;
  unint64_t v18 = v11
      + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64))
      + *(void *)(v16 + 56) * v5;
  uint64_t v19 = *(void *)(v10 - 240);
  uint64_t v20 = *(void *)(v10 - 256);
  *(void *)(v10 - 352) = v16;
  *(void *)(v10 - 360) = v17;
  v17(v19, v18, v20);
  uint64_t v21 = (uint64_t)&type metadata for FeatureFlags.Widgets;
  *(void *)(v10 - 136) = &type metadata for FeatureFlags.Widgets;
  unint64_t v5 = sub_191BDED7C();
  *(void *)(v10 - 128) = v5;
  *(unsigned char *)(v10 - 160) = 1;
  char v22 = sub_191CF3438();
  __swift_destroy_boxed_opaque_existential_1(v10 - 160);
  if ((v22 & 1) == 0) {
    goto LABEL_9;
  }
  if (qword_1EB44BAA8 != -1) {
    goto LABEL_74;
  }
  while (1)
  {
    if (dyld_program_sdk_at_least())
    {
      sub_191CF3CE8();
      sub_191CF3EB8();
    }
LABEL_9:
    sub_191B0171C();
    sub_191CF4068();
    uint64_t v23 = *(void **)(v10 - 160);
    id v24 = objc_msgSend(v23, sel_dynamicTextSupport);

    if (v24 == (id)2)
    {
      (*(void (**)(unint64_t, void, void))(v3 + 104))(v1, *MEMORY[0x1E4F3D5B8], *(void *)(v10 - 496));
      sub_191CF3D98();
    }
    *(void *)(v10 - 344) = *(void *)(v10 + 24);
    *(void *)(v10 - 160) = *(void *)(*(void *)(v10 - 248) + *(int *)(v4 + 20));
    swift_retain();
    *(void *)(v10 - 160) = sub_191CF5038();
    sub_191CF4338();
    uint64_t v25 = *(void *)(v10 - 256);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 - 360);
    v26(*(void *)(v10 - 328), v19, v25);
    sub_191CF41D8();
    v26(v8, v19, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 264) + 56))(v8, 0, 1, v25);
    uint64_t v27 = *(void *)(v10 - 304);
    uint64_t v28 = v27 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
    swift_beginAccess();
    sub_191C1C274(v8, v28);
    swift_endAccess();
    uint64_t v29 = *(void **)(v10 - 336);
    uint64_t v30 = v29[3];
    uint64_t v31 = v29[4];
    __swift_project_boxed_opaque_existential_1(v29, v30);
    uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)(v31 + 8) + 16))(v30);
    uint64_t v33 = *(void *)(v27 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying + 24);
    uint64_t v34 = *(void *)(v27 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v27 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying), v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 8))(v32, v33, v34);

    *(void *)(v10 - 136) = v21;
    *(void *)(v10 - 128) = v5;
    *(unsigned char *)(v10 - 160) = 0;
    LOBYTE(v32) = sub_191CF3438();
    __swift_destroy_boxed_opaque_existential_1(v10 - 160);
    if (v32)
    {
      if (qword_1EB44BAA8 != -1) {
        swift_once();
      }
      int v35 = dyld_program_sdk_at_least();
      id v36 = objc_msgSend(self, sel_mainBundle);
      uint64_t v37 = (uint64_t)objc_msgSend(v36, sel_bundleIdentifier);

      if (v37)
      {
        sub_191CF5338();

        char v38 = sub_191CF53E8();
        swift_bridgeObjectRelease();
        sub_191AFEE28((uint64_t)v29, v10 - 160);
        if (v38)
        {
          uint64_t v39 = *(void *)(v10 - 136);
          uint64_t v40 = *(void *)(v10 - 128);
          __swift_project_boxed_opaque_existential_1((void *)(v10 - 160), v39);
          uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 8) + 16))(v39);
          objc_msgSend((id)v37, sel_family);

          LOBYTE(v37) = CHSWidgetFamilyIsAccessory();
        }
        else
        {
          LOBYTE(v37) = 0;
        }
      }
      else
      {
        sub_191AFEE28((uint64_t)v29, v10 - 160);
      }
      __swift_destroy_boxed_opaque_existential_1(v10 - 160);
      uint64_t v42 = v29[3];
      uint64_t v41 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v42);
      uint64_t v43 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v41 + 8) + 16))(v42);
      LOBYTE(v42) = sub_191C35CF4(v43, *(void *)(v10 - 288));

      sub_191AFEE28((uint64_t)v29, v10 - 224);
      BOOL v44 = 1;
      if ((v42 & 1) == 0 && (v37 & 1) == 0)
      {
        uint64_t v45 = *(void *)(v10 - 200);
        uint64_t v46 = *(void *)(v10 - 192);
        __swift_project_boxed_opaque_existential_1((void *)(v10 - 224), v45);
        uint64_t v47 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v46 + 8) + 16))(v45);
        id v48 = objc_msgSend(v47, sel_family);

        BOOL v44 = v48 == (id)12;
      }
      __swift_destroy_boxed_opaque_existential_1(v10 - 224);
      sub_191C1C790();
      sub_191CF4268();
      char v49 = *(unsigned char *)(v10 - 176);
      sub_191B4F31C();
      sub_191CF4068();
      if (v35 && (v49 & 1) == 0 && !v44 && *(unsigned char *)(v10 - 176))
      {
        uint64_t v50 = *(void ***)(v10 + 16);
        sub_191C1C7E4();
        *(void *)(v10 - 176) = sub_191CF5038();
        sub_191CF4338();
        if (qword_1EB44A290 != -1) {
          swift_once();
        }
        uint64_t v51 = sub_191CF3858();
        __swift_project_value_buffer(v51, (uint64_t)qword_1EB44C888);
        char v52 = sub_191CF3838();
        os_log_type_t v53 = sub_191CF5928();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v54 = 0;
          MEMORY[0x192FE5F00](v54, -1, -1);
        }

        sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
        uint64_t v55 = sub_191CF5338();
        id v57 = sub_191BDA6B4(v55, v56, 1302, 0, 0xD000000000000021, 0x8000000191D0F880);
        char v58 = *v50;
        *uint64_t v50 = v57;
      }
    }
    sub_191CF4068();
    uint64_t v59 = *(void **)(v10 - 160);
    sub_191CF3D68();
    objc_msgSend(v59, sel__effectiveSizePixelAlignedForDisplayScale_);

    sub_191CF4308();
    uint64_t v61 = v29[3];
    uint64_t v60 = v29[4];
    __swift_project_boxed_opaque_existential_1(v29, v61);

    sub_191CF4068();
    uint64_t v62 = *(void **)(v10 - 160);
    objc_msgSend(v62, sel_safeAreaInsets);

    sub_191CF4258();
    uint64_t v63 = *(void *)(v10 - 280);
    uint64_t v64 = *(void *)(v10 - 400);
    uint64_t v65 = v64 + *(int *)(v63 + 28);
    uint64_t v66 = sub_191CF3078();
    uint64_t v67 = *(void *)(v66 - 8);
    *(void *)(v10 - 504) = v67;
    uint64_t v69 = v67 + 56;
    uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
    v68(v65, 1, 1, v66);
    uint64_t v70 = v64 + *(int *)(v63 + 32);
    uint64_t v71 = *(void *)(v10 - 376);
    uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
    uint64_t v73 = *(void *)(v10 - 320);
    v72(v70, 1, 1, v73);
    *(_WORD *)uint64_t v64 = 0;
    *(unsigned char *)(v64 + 2) = 0;
    sub_191B01770(v65, (uint64_t *)&unk_1EB44BBA8);
    *(void *)(v10 - 512) = v66;
    *(void *)(v10 - 520) = v69;
    *(void *)(v10 - 528) = v68;
    v68(v65, 1, 1, v66);
    sub_191B01770(v70, &qword_1EB44AF40);
    v72(v70, 1, 1, v73);
    uint64_t v4 = *(void *)(v10 - 272);
    sub_191C1C2DC(v64, v4, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
    sub_191BD37E0();
    uint64_t v8 = *(void *)(v10 - 312);
    sub_191CF4268();
    sub_191CF4778();
    sub_191C1AD9C(&qword_1EB449B68, MEMORY[0x1E4F3DDF8]);
    unint64_t v5 = *(void *)(v10 - 368);
    sub_191CF4268();
    uint64_t v74 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v71 + 48);
    uint64_t v75 = v73;
    uint64_t v11 = *(void *)(v10 - 280);
    *(void *)(v10 - 400) = v71 + 48;
    *(void *)(v10 - 496) = v74;
    int v76 = v74(v5, 1, v75);
    uint64_t v6 = *(void *)(v10 - 392);
    if (v76 != 1)
    {
      sub_191C1C72C(v5, v4 + *(int *)(v11 + 32), &qword_1EB44AF40);
      uint64_t v77 = *(void *)(v10 - 480);
      sub_191B01614(v8, v77, (uint64_t *)&unk_1EB44BBA8);
      uint64_t v78 = *(void *)(v10 - 488);
      sub_191B01614(v5, v78, &qword_1EB44AF40);
      uint64_t v79 = *(void *)(v10 - 504);
      uint64_t v80 = *(void *)(v10 - 512);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v77, 1, v80) == 1)
      {
        uint64_t v81 = *(void *)(v10 - 536);
        sub_191B01614(v78, v81, &qword_1EB44AF40);
        uint64_t v82 = *(void *)(v10 - 320);
        int v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 - 496))(v81, 1, v82);
        uint64_t v84 = v78;
        uint64_t v85 = *(void *)(v10 - 472);
        if (v83 == 1)
        {
          sub_191B01770(v84, &qword_1EB44AF40);
          sub_191B01770(v8, (uint64_t *)&unk_1EB44BBA8);
          sub_191B01770(v81, &qword_1EB44AF40);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 - 528))(v85, 1, 1, v80);
        }
        else
        {
          sub_191CF4788();
          sub_191B01770(v84, &qword_1EB44AF40);
          sub_191B01770(v8, (uint64_t *)&unk_1EB44BBA8);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 376) + 8))(v81, v82);
        }
        sub_191B01770(v77, (uint64_t *)&unk_1EB44BBA8);
        unint64_t v5 = *(void *)(v10 - 368);
      }
      else
      {
        sub_191B01770(v78, &qword_1EB44AF40);
        sub_191B01770(v8, (uint64_t *)&unk_1EB44BBA8);
        uint64_t v85 = *(void *)(v10 - 472);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v85, v77, v80);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 - 528))(v85, 0, 1, v80);
      }
      sub_191B015B0(v85, v8, (uint64_t *)&unk_1EB44BBA8);
    }
    sub_191C1C72C(v8, v4 + *(int *)(v11 + 28), (uint64_t *)&unk_1EB44BBA8);
    sub_191C1C20C(v4, v6, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
    uint64_t v86 = *(unint64_t **)(v10 - 344);
    unint64_t v1 = *v86;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v86 = v1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_71:
      unint64_t v1 = sub_191B4188C(0, *(void *)(v1 + 16) + 1, 1, v1);
      **(void **)(v10 - 344) = v1;
    }
    uint64_t v19 = *(void *)(v10 - 304);
    uint64_t v21 = *(void *)(v10 - 296);
    unint64_t v89 = *(void *)(v1 + 16);
    unint64_t v88 = *(void *)(v1 + 24);
    if (v89 >= v88 >> 1)
    {
      unint64_t v1 = sub_191B4188C(v88 > 1, v89 + 1, 1, v1);
      **(void **)(v10 - 344) = v1;
    }
    *(void *)(v1 + 16) = v89 + 1;
    sub_191C1C2DC(v6, v1+ ((*(unsigned __int8 *)(*(void *)(v10 - 384) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 384) + 80))+ *(void *)(*(void *)(v10 - 384) + 72) * v89, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
    if (qword_1EB44AEB8 != -1) {
      swift_once();
    }
    uint64_t v90 = sub_191CF3858();
    unint64_t v1 = __swift_project_value_buffer(v90, (uint64_t)qword_1EB44CB78);
    uint64_t v91 = sub_191CF3838();
    os_log_type_t v92 = sub_191CF5918();
    if (os_log_type_enabled(v91, v92))
    {
      unint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v93 = 134349056;
      uint64_t v8 = *(void *)(v10 - 312);
      *(void *)(v10 - 160) = v21;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v91, v92, "Archiving entry %{public}ld", v93, 0xCu);
      uint64_t v94 = v93;
      uint64_t v4 = *(void *)(v10 - 272);
      MEMORY[0x192FE5F00](v94, -1, -1);
    }

    uint64_t v95 = (unsigned char *)(v19 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
    swift_beginAccess();
    if (*v95 == 1)
    {
      uint64_t v96 = sub_191CF3838();
      os_log_type_t v97 = sub_191CF5918();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl(&dword_191AF4000, v96, v97, "Asked to include selectable regions.", v98, 2u);
        uint64_t v99 = v98;
        uint64_t v4 = *(void *)(v10 - 272);
        MEMORY[0x192FE5F00](v99, -1, -1);
      }

      *(void *)(v10 - 176) = MEMORY[0x1E4FBC860];
      uint64_t v100 = sub_191CF3838();
      os_log_type_t v101 = sub_191CF5918();
      if (os_log_type_enabled(v100, v101))
      {
        int v102 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int v102 = 134217984;
        uint64_t v21 = *(void *)(v10 - 296);
        *(void *)(v10 - 224) = v21;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v100, v101, "%ld BEGIN", v102, 0xCu);
        uint64_t v103 = v102;
        uint64_t v4 = *(void *)(v10 - 272);
        MEMORY[0x192FE5F00](v103, -1, -1);
      }

      MEMORY[0x1F4188790](v104);
      sub_191CF41C8();
      uint64_t v105 = sub_191CF3838();
      os_log_type_t v106 = sub_191CF5918();
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v107 = 134217984;
        uint64_t v4 = *(void *)(v10 - 272);
        *(void *)(v10 - 224) = v21;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v105, v106, "%ld END", v107, 0xCu);
        MEMORY[0x192FE5F00](v107, -1, -1);
      }

      uint64_t v108 = *(void *)(v10 - 448);
      uint64_t v109 = *(void *)(v10 - 456);
      uint64_t v110 = *(void *)(v10 - 440);
      (*(void (**)(uint64_t, void, uint64_t))(v108 + 16))(v109, *(void *)(v10 - 248), v110);
      uint64_t v111 = *(void *)(v10 - 328);
      uint64_t v112 = *(void *)(v10 - 256);
      (*(void (**)(uint64_t, void, uint64_t))(v10 - 360))(v111, *(void *)(v10 - 240), v112);
      *(void *)(v10 - 224) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
      WidgetEnvironment.apply(environmentValues:)();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 264) + 8))(v111, v112);
      uint64_t v113 = *(void *)(v10 - 224);
      uint64_t v114 = *(void *)(v10 - 424);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v114, v109, v110);
      *(void *)(v114 + *(int *)(*(void *)(v10 - 464) + 20)) = v113;
      uint64_t v115 = *(void *)(v10 - 432);
      sub_191C1C20C(v114, v115, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      uint64_t v116 = *(void *)(v10 - 176);
      long long v117 = (void *)(v19 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v118 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v10 - 184) = *v117;
      *long long v117 = 0x8000000000000000;
      sub_191B4B7FC(v116, v115, v118);
      *long long v117 = *(void *)(v10 - 184);
      swift_bridgeObjectRelease();
      unint64_t v1 = (unint64_t)type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey;
      sub_191C1C344(v115, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      swift_endAccess();
      sub_191C1C344(v114, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v10 - 312);
      uint64_t v11 = *(void *)(v10 - 280);
    }
    if (double v119 = COERCE_DOUBLE(sub_191C15D08()), (v121)
      || (v122 = v119, double v123 = v120, v119 == 0.0) && v120 == 0.0
      || (unint64_t v1 = v4 + *(int *)(v11 + 32),
          uint64_t v124 = *(void *)(v10 - 320),
          (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 - 496))(v1, 1, v124)))
    {
      uint64_t v3 = 0;
      uint64_t v125 = *(void *)(v10 - 408);
    }
    else
    {
      unint64_t v130 = v5;
      uint64_t v131 = *(void *)(v10 - 376);
      uint64_t v132 = *(void *)(v10 - 544);
      (*(void (**)(void))(v131 + 16))();
      uint64_t v133 = v124;
      uint64_t v3 = 0;
      sub_191C18C88(v122, v123);
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v132, v133);
      uint64_t v125 = *(void *)(v10 - 408);
      unint64_t v5 = v130;
    }
    uint64_t v126 = *(void *)(v10 - 416);
    uint64_t v127 = v125 * v126;
    if ((unsigned __int128)(v125 * (__int128)v126) >> 64 == (v125 * v126) >> 63) {
      break;
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    swift_once();
  }
  if (v21 < 0 || v127 <= v21) {
    goto LABEL_73;
  }
  if (v21 + 1 == v127)
  {
    uint64_t v128 = **(void **)(v10 - 344);
    swift_bridgeObjectRetain();
    sub_191C1C3A4(*(void **)(v10 - 336), v19, v128);
    swift_bridgeObjectRelease();
    sub_191CF4248();
    sub_191B01770(v8, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770(*(void *)(v10 - 288), (uint64_t *)&unk_1EB44BB00);
    (*(void (**)(void, void))(*(void *)(v10 - 264) + 8))(*(void *)(v10 - 240), *(void *)(v10 - 256));
    sub_191C1C344(*(void *)(v10 - 248), (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    sub_191B01770(v5, &qword_1EB44AF40);
    uint64_t v4 = *(void *)(v10 - 272);
  }
  else
  {
    sub_191B01770(v8, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770(*(void *)(v10 - 288), (uint64_t *)&unk_1EB44BB00);
    (*(void (**)(void, void))(*(void *)(v10 - 264) + 8))(*(void *)(v10 - 240), *(void *)(v10 - 256));
    sub_191C1C344(*(void *)(v10 - 248), (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    sub_191B01770(v5, &qword_1EB44AF40);
  }
  return sub_191C1C344(v4, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
}

void sub_191C184A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v66 = a2;
  uint64_t v67 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E46A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_191CF4598();
  uint64_t v7 = *(void *)(v68 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v68);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v13 = (char *)&v64 - v12;
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v64 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E46A8);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4568();
  sub_191CF5D28();
  sub_191C1C838((uint64_t)v70);
  uint64_t v19 = sub_191CF48F8();
  char v20 = swift_dynamicCast();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  if (v20)
  {
    uint64_t v22 = *(void *)(v19 - 8);
    v21(v18, 0, 1, v19);
    uint64_t v65 = sub_191CF48E8();
    unint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v19);
    if (qword_1EB44AEB8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191CF3858();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB44CB78);
    uint64_t v26 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, a1, v68);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_191CF3838();
    os_log_type_t v28 = sub_191CF5918();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v30 = v24;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v70[0] = v64;
      *(_DWORD *)uint64_t v31 = 134218498;
      uint64_t v69 = v66;
      sub_191CF5C08();
      *(_WORD *)(v31 + 12) = 2080;
      LODWORD(v66) = v29;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_191C5C36C(v65, v30, v70);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2080;
      sub_191CF4578();
      uint64_t v32 = sub_191CF5AA8();
      uint64_t v69 = sub_191C5C36C(v32, v33, v70);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v68);
      _os_log_impl(&dword_191AF4000, v27, (os_log_type_t)v66, "%ld Found region: %s with rect: %s", (uint8_t *)v31, 0x20u);
      uint64_t v34 = v64;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v34, -1, -1);
      uint64_t v35 = v31;
      unint64_t v24 = v30;
      MEMORY[0x192FE5F00](v35, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v26);
    }

    uint64_t v45 = (void **)v67;
    sub_191CF4578();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    sub_191CF4588();
    uint64_t v54 = sub_191CF4658();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v6, 1, v54) == 1)
    {
      sub_191B01770((uint64_t)v6, &qword_1E92E46A0);
      uint64_t v56 = 0;
      unint64_t v57 = 0xF000000000000000;
    }
    else
    {
      uint64_t v56 = sub_191CF4648();
      unint64_t v57 = v58;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v54);
    }
    uint64_t v59 = *v45;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char *v45 = v59;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v59 = sub_191B418C0(0, v59[2] + 1, 1, v59);
      char *v45 = v59;
    }
    unint64_t v62 = v59[2];
    unint64_t v61 = v59[3];
    if (v62 >= v61 >> 1)
    {
      uint64_t v59 = sub_191B418C0((void *)(v61 > 1), v62 + 1, 1, v59);
      char *v45 = v59;
    }
    v59[2] = v62 + 1;
    uint64_t v63 = &v59[8 * v62];
    v63[4] = v65;
    v63[5] = v24;
    v63[6] = v47;
    v63[7] = v49;
    v63[8] = v51;
    v63[9] = v53;
    v63[10] = v56;
    v63[11] = v57;
  }
  else
  {
    v21(v18, 1, 1, v19);
    sub_191B01770((uint64_t)v18, &qword_1E92E46A8);
    if (qword_1EB44AEB8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_191CF3858();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EB44CB78);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v38 = v68;
    v37(v15, a1, v68);
    uint64_t v39 = sub_191CF3838();
    os_log_type_t v40 = sub_191CF5918();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      v70[0] = v67;
      *(_DWORD *)uint64_t v41 = 134218242;
      uint64_t v69 = v66;
      sub_191CF5C08();
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v66 = v41 + 14;
      v37(v10, (uint64_t)v15, v38);
      uint64_t v42 = sub_191CF5368();
      uint64_t v69 = sub_191C5C36C(v42, v43, v70);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v38);
      _os_log_impl(&dword_191AF4000, v39, v40, "%ld View proxy does not have a selection identifier: %s", (uint8_t *)v41, 0x16u);
      uint64_t v44 = v67;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v44, -1, -1);
      MEMORY[0x192FE5F00](v41, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v38);
    }
  }
}

uint64_t sub_191C18C88(double a1, double a2)
{
  uint64_t v5 = sub_191CF4898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v34 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4878();
  uint64_t v14 = sub_191CF4868();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_191B01770((uint64_t)v13, qword_1EB4496F8);
  }
  else
  {
    sub_191C19060(a1, a2);
    if (v2) {
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t result = sub_191CF4888();
  if (result)
  {
    uint64_t v17 = *(void *)(result + 16);
    if (v17)
    {
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v18 = v6 + 16;
      uint64_t v31 = v8;
      uint64_t v32 = v19;
      unint64_t v20 = result + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
      uint64_t v21 = *(void *)(v18 + 56);
      v27[1] = result;
      uint64_t v28 = v21;
      uint64_t v22 = v18;
      unint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 40);
      unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 32);
      uint64_t v33 = v22;
      int v29 = (void (**)(char *, char *, uint64_t))(v22 + 16);
      unint64_t v30 = (void (**)(char *, uint64_t))(v22 - 8);
      v27[0] = (unint64_t)v23 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        uint64_t v25 = v34;
        v32(v34, v20, v5);
        uint64_t v26 = *v23;
        (*v23)(v25, 0, 1, v5);
        if ((*v24)(v25, 1, v5) == 1) {
          break;
        }
        (*v29)(v8, v25, v5);
        sub_191C18C88(a1, a2);
        if (v2)
        {
          (*v30)(v8, v5);
          return swift_bridgeObjectRelease();
        }
        (*v30)(v8, v5);
        v20 += v28;
        if (!--v17) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_14:
      v26(v34, 1, 1, v5);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t WidgetArchiver.deinit()
{
  return v0;
}

uint64_t WidgetArchiver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_191C19060(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191CF4848();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (id *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v11 + 16))(v13, v3, v10);
  int v14 = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_191C19378(a1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == *MEMORY[0x1E4F3DE50])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v13, v10);
    id v15 = *v13;
    objc_msgSend(*v13, sel_size);
    double v17 = v16;
    objc_msgSend(v15, sel_scale);
    double v19 = v17 * v18;
    objc_msgSend(v15, sel_size);
    double v21 = v20;
    objc_msgSend(v15, sel_scale);
    double v23 = v21 * v22;
    if (v19 > a1 || v23 > a2)
    {
      sub_191C1AD00();
      swift_allocError();
      *(double *)uint64_t v25 = v19;
      *(double *)(v25 + 8) = v23;
      *(double *)(v25 + 16) = a1;
      *(double *)(v25 + 24) = a2;
      *(unsigned char *)(v25 + 32) = 2;
      swift_willThrow();
    }
  }
  else
  {
    sub_191CF5FC8();
    __break(1u);
  }
}

void sub_191C19378(double a1, double a2)
{
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF4828();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4838();
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == *MEMORY[0x1E4F3DE40])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    int v14 = self;
    id v15 = (void *)sub_191CF3038();
    id v16 = objc_msgSend(v14, sel_wk_uniqueWithURL_, v15);

    sub_191CF47F8();
    id v2 = v16;
    double v17 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_imageNamed_inBundle_withConfiguration_, v17, v2, 0);

    if (v18)
    {
      id v19 = v18;
      objc_msgSend(v19, sel_size);
      double v21 = v20;
      objc_msgSend(v19, sel_scale);
      double v23 = v21 * v22;
      objc_msgSend(v19, sel_size);
      double v25 = v24;
      objc_msgSend(v19, sel_scale);
      double v27 = v25 * v26;
      if (v23 > a1 || v27 > a2)
      {
        sub_191C1AD00();
        swift_allocError();
        *(double *)uint64_t v29 = v23;
        *(double *)(v29 + 8) = v27;
        *(double *)(v29 + 16) = a1;
        *(double *)(v29 + 24) = a2;
        *(unsigned char *)(v29 + 32) = 2;
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      goto LABEL_12;
    }
  }
  else
  {
    if (v13 == *MEMORY[0x1E4F3DE48]) {
      return;
    }
    sub_191CF5FC8();
    __break(1u);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v19 = v2;
LABEL_12:
}

uint64_t sub_191C1974C(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a7;
  uint64_t v29 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a4, a7);
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions) = 0;
  uint64_t v15 = MEMORY[0x1E4FBC868];
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion) = 2;
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing) = 0;
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes) = MEMORY[0x1E4FBC860];
  uint64_t v16 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  uint64_t v17 = sub_191CF4058();
  uint64_t v18 = *a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily) = v15;
  uint64_t v19 = OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_allowedImageTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B030);
  uint64_t v20 = sub_191CF3738();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8440;
  sub_191CF3728();
  sub_191CF36F8();
  sub_191CF3718();
  sub_191CF3708();
  uint64_t v23 = sub_191BA73F4(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(a6 + v19) = v23;
  uint64_t v24 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType;
  sub_191CF36F8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  sub_191C1C2DC(a2, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(void))type metadata accessor for BundleStub);
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion) = v18;
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode) = a3;
  sub_191B015B0(a5, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1EB449FB8);
  sub_191B004A8(&v27, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  return a6;
}

uint64_t sub_191C19A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = a3;
  void v21[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void))(*(void *)(a3 - 8) + 32))();
  if (qword_1EB44BA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = qword_1EB44BA48;
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t result = sub_191AFEE28((uint64_t)v21, (uint64_t)v19);
  uint64_t v10 = xmmword_1EB44CC98;
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v17 = *(void *)xmmword_1EB44CC98;
    uint64_t v11 = v17;
    uint64_t v18 = *(void *)(qword_1EB44CCA8 + 8);
    uint64_t v12 = v18;
    v16[0] = xmmword_1EB44CC98;
    type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v15 = v10;
    swift_retain_n();
    uint64_t v14 = sub_191C1974C(&v20, (uint64_t)v8, 0, (uint64_t)&v15, (uint64_t)v19, v13, v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_191C19C34(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v1);

  return sub_191C19C74((uint64_t)v3, v1, v2);
}

id sub_191C19C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v11 = result;
    unsigned int v12 = objc_msgSend(result, sel_isInternalInstall);

    if (v12)
    {
      id v13 = objc_msgSend(self, sel_processInfo);
      id v14 = objc_msgSend(v13, sel_environment);

      uint64_t v15 = sub_191CF5248();
      if (*(void *)(v15 + 16))
      {
        sub_191B1CB2C(0xD000000000000011, 0x8000000191D0D750);
        char v17 = v16;
        swift_bridgeObjectRelease();
        if (v17)
        {
          if (qword_1EB44BA38 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v18 = qword_1EB44BA48;
          (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 8))(a2);
          type metadata accessor for TestingNilDescriptorQuerying();
          uint64_t v19 = swift_allocObject();
          type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
          long long v33 = 0u;
          long long v34 = 0u;
          uint64_t v35 = 0;
          uint64_t v20 = swift_allocObject();
          uint64_t v21 = sub_191B101B8(v18, (uint64_t)v8, 0, v19, (uint64_t)&v33, v20);
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v22 = type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    uint64_t v23 = v37;
    uint64_t v24 = v38;
    double v25 = __swift_project_boxed_opaque_existential_1(v36, v37);
    *((void *)&v34 + 1) = v23;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v35 = v26;
    long long v27 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
    uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16);
    uint64_t v29 = v28(v27, v25, v23);
    MEMORY[0x1F4188790](v29);
    uint64_t v31 = (char *)&v32 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    v28((uint64_t *)v31, v27, v23);
    uint64_t v21 = sub_191C19A3C((uint64_t)v31, v22, v23, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return (id)v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_191C19FD4()
{
  return sub_191CF41F8();
}

void sub_191C1A000(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
  }
  else if (!a5)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44AEE8);
}

int64_t sub_191C1A03C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF4058();
  uint64_t v8 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_191CF3858();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB44C888);
  id v13 = a1;
  uint64_t v86 = v12;
  id v14 = sub_191CF3838();
  os_log_type_t v15 = sub_191CF5918();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 67240704;
    double v85 = *(double *)&v10;
    LODWORD(Width) = CGImageGetIdentifier();
    uint64_t v84 = v2;
    sub_191CF5C08();
    *(_WORD *)(v16 + 8) = 2048;
    size_t Width = CGImageGetWidth(v13);
    sub_191CF5C08();
    *(_WORD *)(v16 + 18) = 2048;
    size_t Width = CGImageGetHeight(v13);
    uint64_t v2 = v84;
    uint64_t v10 = *(char **)&v85;
    sub_191CF5C08();

    _os_log_impl(&dword_191AF4000, v14, v15, "Filtered image [%{public}u: %ld-%ld]: enter", (uint8_t *)v16, 0x1Cu);
    MEMORY[0x192FE5F00](v16, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = (uint64_t)v2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  swift_beginAccess();
  sub_191B01614(v17, (uint64_t)v6, (uint64_t *)&unk_1EB44BBB8);
  if (v8[6](v6, 1, v7) == 1)
  {
    sub_191B01770((uint64_t)v6, (uint64_t *)&unk_1EB44BBB8);
    goto LABEL_18;
  }
  v8[4](v10, (uint64_t)v6, v7);
  sub_191B4F2C8();
  sub_191CF4068();
  int v83 = v87;
  sub_191B0171C();
  sub_191CF4068();
  uint64_t v18 = v88;
  uint64_t v19 = (char *)v2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily;
  swift_beginAccess();
  uint64_t v20 = *(void *)v19;
  if (*(void *)(*(void *)v19 + 16))
  {
    uint64_t v21 = v18;
    id v22 = v18;
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_191B1DBE0(v83, (uint64_t)v22);
    if (v24)
    {
      double v25 = (double *)(*(void *)(v20 + 56) + 16 * v23);
      double v26 = *v25;
      double v27 = v25[1];

      swift_bridgeObjectRelease();
      double v28 = (double)(uint64_t)CGImageGetWidth(v13);
      sub_191CF3D68();
      double v30 = v28 / v29;
      double Height = (double)(uint64_t)CGImageGetHeight(v13);
      sub_191CF3D68();
      double v33 = Height / v32;
      if (v26 * v27 >= v30 * v33)
      {
        ((void (*)(char *, uint64_t, double, double))v8[1])(v10, v7, v30 * v33, v26 * v27);
      }
      else
      {
        uint64_t v84 = v13;
        long long v34 = sub_191CF3838();
        os_log_type_t v35 = sub_191CF5918();
        int v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v37 = (_DWORD *)swift_slowAlloc();
          LODWORD(v81) = v36;
          uint64_t v38 = v37;
          *uint64_t v37 = 67240704;
          double v85 = *(double *)&v10;
          uint64_t v80 = v37 + 1;
          uint64_t v39 = v84;
          LODWORD(v87) = CGImageGetIdentifier();
          uint64_t v82 = v8;
          sub_191CF5C08();

          *((_WORD *)v38 + 4) = 2048;
          size_t v87 = *(void *)&v30;
          uint64_t v8 = v82;
          sub_191CF5C08();
          *((_WORD *)v38 + 9) = 2048;
          size_t v87 = *(void *)&v33;
          uint64_t v10 = *(char **)&v85;
          sub_191CF5C08();
          _os_log_impl(&dword_191AF4000, v34, (os_log_type_t)v81, "Filtered image [%{public}u]: new largest image: (%f, %f", (uint8_t *)v38, 0x1Cu);
          MEMORY[0x192FE5F00](v38, -1, -1);
        }
        else
        {

          long long v34 = v84;
        }

        swift_beginAccess();
        id v78 = v22;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = *(void *)v19;
        *(void *)uint64_t v19 = 0x8000000000000000;
        sub_191B4B6B8(v83, v78, isUniquelyReferenced_nonNull_native, v30, v33);
        *(void *)uint64_t v19 = v90;

        swift_bridgeObjectRelease();
        swift_endAccess();

        ((void (*)(char *, uint64_t))v8[1])(v10, v7);
      }
      goto LABEL_18;
    }

    swift_bridgeObjectRelease();
    uint64_t v18 = v21;
  }
  uint64_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))v18;
  double v40 = (double)(uint64_t)CGImageGetWidth(v13);
  sub_191CF3D68();
  double v42 = v40 / v41;
  double v43 = (double)(uint64_t)CGImageGetHeight(v13);
  double v85 = *(double *)&v10;
  sub_191CF3D68();
  double v45 = v43 / v44;
  uint64_t v46 = v13;
  uint64_t v47 = sub_191CF3838();
  os_log_type_t v48 = sub_191CF5918();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 67240704;
    uint64_t v81 = v13;
    uint64_t v84 = v2;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_191CF5C08();

    *(_WORD *)(v49 + 8) = 2048;
    size_t v87 = *(void *)&v42;
    sub_191CF5C08();
    *(_WORD *)(v49 + 18) = 2048;
    id v13 = v81;
    size_t v87 = *(void *)&v45;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v47, v48, "Filtered image [%{public}u]: new largest image: (%f, %f", (uint8_t *)v49, 0x1Cu);
    MEMORY[0x192FE5F00](v49, -1, -1);
  }
  else
  {

    uint64_t v47 = v46;
  }

  swift_beginAccess();
  uint64_t v50 = v82;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v90 = *(void *)v19;
  *(void *)uint64_t v19 = 0x8000000000000000;
  sub_191B4B6B8(v83, v50, v51, v42, v45);
  *(void *)uint64_t v19 = v90;

  swift_bridgeObjectRelease();
  swift_endAccess();

  ((void (*)(double, uint64_t))v8[1])(COERCE_DOUBLE(*(void *)&v85), v7);
LABEL_18:
  *(double *)&uint64_t v52 = COERCE_DOUBLE(sub_191C15D08());
  if (v54)
  {
    uint64_t v66 = v13;
    unint64_t v62 = sub_191CF3838();
    os_log_type_t v67 = sub_191CF5948();
    if (!os_log_type_enabled(v62, v67))
    {

      unint64_t v62 = v66;
LABEL_33:

      return (int64_t)v13;
    }
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 67240704;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_191CF5C08();
    *(_WORD *)(v68 + 8) = 2048;
    size_t v87 = CGImageGetWidth(v66);
    sub_191CF5C08();
    *(_WORD *)(v68 + 18) = 2048;
    size_t v87 = CGImageGetHeight(v66);
    sub_191CF5C08();

    _os_log_impl(&dword_191AF4000, v62, v67, "Filtered image [%{public}u: %ld-%ld]: exit (no size constraints configured)", (uint8_t *)v68, 0x1Cu);
    uint64_t v69 = v68;
LABEL_28:
    MEMORY[0x192FE5F00](v69, -1, -1);
    goto LABEL_33;
  }
  double v55 = *(double *)&v52;
  double v56 = v53;
  int64_t v57 = CGImageGetWidth(v13);
  int64_t result = CGImageGetHeight(v13);
  uint64_t v59 = v57 * result;
  if ((unsigned __int128)(v57 * (__int128)result) >> 64 == (v57 * result) >> 63)
  {
    double v60 = v55 * v56;
    unint64_t v61 = v13;
    unint64_t v62 = sub_191CF3838();
    os_log_type_t v63 = sub_191CF5918();
    BOOL v64 = os_log_type_enabled(v62, v63);
    if (v55 * v56 < (double)v59)
    {
      double v85 = v55;
      if (v64)
      {
        uint64_t v65 = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 67240704;
        LODWORD(v87) = CGImageGetIdentifier();
        sub_191CF5C08();
        *(_WORD *)(v65 + 8) = 2048;
        size_t v87 = CGImageGetWidth(v61);
        sub_191CF5C08();
        *(_WORD *)(v65 + 18) = 2048;
        size_t v87 = CGImageGetHeight(v61);
        sub_191CF5C08();

        _os_log_impl(&dword_191AF4000, v62, v63, "Filtered image [%{public}u: %ld-%ld]: exit (too large)", (uint8_t *)v65, 0x1Cu);
        MEMORY[0x192FE5F00](v65, -1, -1);
      }
      else
      {

        unint64_t v62 = v61;
      }

      uint64_t v71 = v61;
      uint64_t v72 = sub_191CF3838();
      os_log_type_t v73 = sub_191CF5938();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 67241216;
        LODWORD(v87) = CGImageGetIdentifier();
        sub_191CF5C08();
        *(_WORD *)(v74 + 8) = 2048;
        size_t v87 = CGImageGetWidth(v71);
        sub_191CF5C08();
        *(_WORD *)(v74 + 18) = 2048;
        size_t v87 = CGImageGetHeight(v71);
        sub_191CF5C08();

        *(_WORD *)(v74 + 28) = 2048;
        size_t v87 = v59;
        sub_191CF5C08();
        *(_WORD *)(v74 + 38) = 2048;
        size_t v87 = *(void *)&v60;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v72, v73, "Widget archival failed due to image being too large [%{public}u] - (%ld, %ld), totalArea: %ld > max[%f].", (uint8_t *)v74, 0x30u);
        MEMORY[0x192FE5F00](v74, -1, -1);
      }
      else
      {

        uint64_t v72 = v71;
      }

      double v75 = (double)(uint64_t)CGImageGetWidth(v71);
      double v76 = (double)(uint64_t)CGImageGetHeight(v71);
      sub_191C1AD00();
      swift_allocError();
      *(double *)uint64_t v77 = v75;
      *(double *)(v77 + 8) = v76;
      *(double *)(v77 + 16) = v85;
      *(double *)(v77 + 24) = v56;
      *(unsigned char *)(v77 + 32) = 2;
      swift_willThrow();
      return (int64_t)v13;
    }
    if (!v64)
    {

      unint64_t v62 = v61;
      goto LABEL_33;
    }
    uint64_t v70 = swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = 67240704;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_191CF5C08();
    *(_WORD *)(v70 + 8) = 2048;
    size_t v87 = CGImageGetWidth(v61);
    sub_191CF5C08();
    *(_WORD *)(v70 + 18) = 2048;
    size_t v87 = CGImageGetHeight(v61);
    sub_191CF5C08();

    _os_log_impl(&dword_191AF4000, v62, v63, "Filtered image [%{public}u: %ld-%ld]: exit (allowed)", (uint8_t *)v70, 0x1Cu);
    uint64_t v69 = v70;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

unint64_t sub_191C1AD00()
{
  unint64_t result = qword_1E92E1B30;
  if (!qword_1E92E1B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1B30);
  }
  return result;
}

uint64_t sub_191C1AD54()
{
  return sub_191C1AD9C(&qword_1E92E4690, (void (*)(uint64_t))type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
}

uint64_t sub_191C1AD9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C1ADE4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions, a2);
}

uint64_t sub_191C1ADF0(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
}

uint64_t sub_191C1ADFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_191C1AE58@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_191C1AEAC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_191C1AEFC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing, a2);
}

uint64_t sub_191C1AF08(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
}

uint64_t sub_191C1AF14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  uint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_191C1AF70(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
}

uint64_t keypath_setTm(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  uint64_t v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v6 = v5;
  return result;
}

uint64_t type metadata accessor for TestingNilDescriptorQuerying()
{
  return self;
}

uint64_t type metadata accessor for WidgetArchiver()
{
  return self;
}

uint64_t method lookup function for WidgetArchiver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetArchiver);
}

id sub_191C1B028(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
    return result;
  }
  if (!a5) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for WidgetArchiver.ArchivingError(uint64_t a1)
{
}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_191C1B028(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_191C1B028(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_191C1A000(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_191C1A000(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetArchiver.ArchivingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetArchiver.ArchivingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191C1B220(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 2u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_191C1B238(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ArchivingError()
{
  return &type metadata for WidgetArchiver.ArchivingError;
}

uint64_t sub_191C1B264()
{
  return type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
}

uint64_t type metadata accessor for WidgetArchiver.ArchivingDelegate(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44AF00);
}

void sub_191C1B28C()
{
  type metadata accessor for BundleStub();
  if (v0 <= 0x3F)
  {
    sub_191C1B760(319, (unint64_t *)&qword_1EB44B1A8, MEMORY[0x1E4F3D2F8]);
    if (v1 <= 0x3F)
    {
      sub_191C1B760(319, (unint64_t *)&qword_1EB44AF98, MEMORY[0x1E4FBCEA8]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for WidgetArchiver.ArchivingDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetArchiver.ArchivingDelegate);
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.maximumAllowedImagePixelSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.viewDataNeedsUpdate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failedToEncodeView(type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.filteredImage(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

void sub_191C1B760(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF3178();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t initializeWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C1BB14);
}

uint64_t sub_191C1BB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C1BBE8);
}

uint64_t sub_191C1BBE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF3178();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_191C1BCA4()
{
  uint64_t result = sub_191CF3178();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    return sub_191B1603C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  int v5 = (_OWORD *)(a2 + 48);
  unint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_191B15F88(v7, v6);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v6;
  }
  return a1;
}

void *assignWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  long long v4 = a2 + 6;
  unint64_t v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_191B15F88(*v4, v5);
      uint64_t v8 = a1[6];
      unint64_t v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_191B1603C(v8, v9);
      return a1;
    }
    sub_191B71DDC((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_191B15F88(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = (void *)(a2 + 48);
  unint64_t v7 = *(void *)(a1 + 56);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 56);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v6;
      *(void *)(a1 + 56) = v8;
      sub_191B1603C(v9, v7);
      return a1;
    }
    sub_191B71DDC(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineViewSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineViewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegion()
{
  return &type metadata for WidgetArchiver.ArchivingDelegate.SelectableRegion;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v3 = *(void **)(a2 + 8);
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for WidgetArchiver._LargestImageSizeKey()
{
  return &type metadata for WidgetArchiver._LargestImageSizeKey;
}

unint64_t sub_191C1C110()
{
  unint64_t result = qword_1EB4496C0;
  if (!qword_1EB4496C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4496C0);
  }
  return result;
}

uint64_t sub_191C1C188()
{
  return swift_deallocObject();
}

uint64_t sub_191C1C1CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C1C204()
{
  return sub_191B8A110(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_191C1C20C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C1C274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C1C2DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C1C344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C1C3A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v5 = sub_191CF3178();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for WidgetArchivableMetadata(0);
  MEMORY[0x1F4188790](v33);
  os_log_type_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  double v32 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 16))(v17);
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v18 + 8) + 32))(&v36, v19);
  uint64_t v20 = a2;
  sub_191C1C20C(a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BundleStub);
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 56))(v22);
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  (*(void (**)(uint64_t))(*(void *)(v24 + 8) + 64))(v25);
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  (*(void (**)(uint64_t))(*(void *)(v26 + 8) + 40))(v27);
  uint64_t v35 = *(void *)(v20 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion);
  uint64_t v28 = v34;
  swift_bridgeObjectRetain();
  sub_191B70AE0(v32, &v36, (uint64_t)v13, v23, (uint64_t)v10, (uint64_t)v7, &v35, v28, v15);
  sub_191CF2FC8();
  swift_allocObject();
  sub_191CF2FB8();
  sub_191C1AD9C(&qword_1EB44AE28, (void (*)(uint64_t))type metadata accessor for WidgetArchivableMetadata);
  uint64_t v29 = sub_191CF2FA8();
  sub_191C1C344((uint64_t)v15, type metadata accessor for WidgetArchivableMetadata);
  swift_release();
  return v29;
}

void sub_191C1C724(uint64_t a1)
{
  sub_191C184A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191C1C72C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

unint64_t sub_191C1C790()
{
  unint64_t result = qword_1EB449F50;
  if (!qword_1EB449F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F50);
  }
  return result;
}

unint64_t sub_191C1C7E4()
{
  unint64_t result = qword_1E92E4698;
  if (!qword_1E92E4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4698);
  }
  return result;
}

uint64_t sub_191C1C838(uint64_t a1)
{
  return a1;
}

void sub_191C1C88C(uint64_t a1)
{
  sub_191C1685C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_191C1C8CC()
{
  return sub_191B89E78(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 40));
}

void destroy for WidgetLayoutInsetsModifier(uint64_t a1)
{
  sub_191B1BBA0(*(id *)a1, *(unsigned char *)(a1 + 8));
  unint64_t v2 = *(void **)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  sub_191B1BBA0(v2, v3);
}

uint64_t initializeWithCopy for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB44(v6, v2);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  uint64_t v8 = *(void **)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB44(v8, v2);
  uint64_t v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v2;
  sub_191B1BBA0(v9, v10);
  return a1;
}

uint64_t assignWithTake for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B1BBA0(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetLayoutInsetsModifier()
{
  return &type metadata for WidgetLayoutInsetsModifier;
}

uint64_t sub_191C1CAA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C1CAC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v39 = a4;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F08);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449E98);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449ED8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449EF8);
  uint64_t v15 = MEMORY[0x1F4188790](v35);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v34 - v18;
  a3 &= 1u;
  sub_191B1BB44(a2, a3);
  id v20 = sub_191BDC0A4(a2, a3);
  sub_191B1BBA0(a2, a3);
  objc_msgSend(v20, sel_layoutInsets);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;

  sub_191B1BB44(a2, a3);
  id v27 = sub_191BDC0A4(a2, a3);
  sub_191B1BBA0(a2, a3);
  objc_msgSend(v27, sel_size);

  sub_191B1BB44(a2, a3);
  id v28 = sub_191BDC0A4(a2, a3);
  sub_191B1BBA0(a2, a3);
  objc_msgSend(v28, sel_size);

  sub_191CF5088();
  sub_191CF3A38();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v10, v36, v29);
  double v30 = &v10[*(int *)(v8 + 44)];
  long long v31 = v41;
  *(_OWORD *)double v30 = v40;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v42;
  LOBYTE(v8) = sub_191CF4948();
  sub_191B01614((uint64_t)v10, (uint64_t)v14, &qword_1EB449E98);
  double v32 = &v14[*(int *)(v12 + 44)];
  *double v32 = v8;
  *((void *)v32 + 1) = v22;
  *((void *)v32 + 2) = v24;
  *((void *)v32 + 3) = v24;
  *((void *)v32 + 4) = v26;
  unsigned char v32[40] = 0;
  sub_191B01770((uint64_t)v10, &qword_1EB449E98);
  sub_191B01614((uint64_t)v14, (uint64_t)v17, &qword_1EB449ED8);
  *(_WORD *)&v17[*(int *)(v35 + 36)] = 0;
  sub_191B01770((uint64_t)v14, &qword_1EB449ED8);
  sub_191C1CF18((uint64_t)v17, (uint64_t)v19);
  sub_191B01614((uint64_t)v19, v37, &qword_1EB449EF8);
  swift_storeEnumTagMultiPayload();
  sub_191C1CF80();
  sub_191B00398(&qword_1EB449F30, &qword_1EB449F38);
  sub_191CF44D8();
  return sub_191B01770((uint64_t)v19, &qword_1EB449EF8);
}

uint64_t sub_191C1CF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C1CAC4(a1, *(void **)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_191C1CF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191C1CF80()
{
  unint64_t result = qword_1EB449EF0;
  if (!qword_1EB449EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449EF8);
    sub_191C1D020();
    sub_191B00398(&qword_1EB449E68, &qword_1EB449E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449EF0);
  }
  return result;
}

unint64_t sub_191C1D020()
{
  unint64_t result = qword_1EB449ED0;
  if (!qword_1EB449ED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449ED8);
    sub_191C1D09C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449ED0);
  }
  return result;
}

unint64_t sub_191C1D09C()
{
  unint64_t result = qword_1EB449E90;
  if (!qword_1EB449E90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E98);
    sub_191B00398(&qword_1EB449F30, &qword_1EB449F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449E90);
  }
  return result;
}

unint64_t sub_191C1D140()
{
  unint64_t result = qword_1EB449F10;
  if (!qword_1EB449F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449F18);
    sub_191C1CF80();
    sub_191B00398(&qword_1EB449F30, &qword_1EB449F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F10);
  }
  return result;
}

char *sub_191C1D1E0(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    char v5 = a1;
    *((void *)a1 + 1) = a2[1];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_191CF3078();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_191C1D374(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_191CF3078();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_191C1D44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v5;
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_191C1D58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  id v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_191C1D740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_191CF3078();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_191C1D85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_191CF3078();
  uint64_t v11 = *(void *)(v10 - 8);
  id v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_191C1DA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C1DA18);
}

uint64_t sub_191C1DA18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_191C1DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C1DAE0);
}

void *sub_191C1DAE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for JindoViewStates.Metadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E1C80);
}

void sub_191C1DBAC()
{
  sub_191C218C8(319, (unint64_t *)&qword_1EB44C548, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_191C1DC7C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    uint64_t v18 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
    *(unsigned char *)(v9 + 16) = *((unsigned char *)a2 + v8 + 16);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
    *(unsigned char *)(v9 + 40) = *((unsigned char *)a2 + v8 + 40);
    *(void *)(v9 + 48) = *(uint64_t *)((char *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    *(unsigned char *)(v9 + 88) = *((unsigned char *)a2 + v8 + 88);
    *(_OWORD *)(v9 + 96) = *(_OWORD *)((char *)a2 + v8 + 96);
    uint64_t v74 = type metadata accessor for MetricsRequest(0);
    uint64_t v11 = *(int *)(v74 + 40);
    id v12 = (void *)(v9 + v11);
    int v13 = (const void *)(v10 + v11);
    uint64_t v14 = sub_191CF43F8();
    uint64_t v15 = *(void *)(v14 - 8);
    os_log_type_t v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    if (v73(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    id v20 = (_OWORD *)(v9 + v19);
    uint64_t v21 = (_OWORD *)(v10 + v19);
    uint64_t v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v70 = v23;
      uint64_t v71 = v15;
      _OWORD *v20 = *v21;
      uint64_t v25 = v22[5];
      uint64_t v26 = (char *)v20 + v25;
      id v27 = (char *)v21 + v25;
      v26[16] = v27[16];
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 24) = *(_OWORD *)(v27 + 24);
      v26[40] = v27[40];
      *((void *)v26 + 6) = *((void *)v27 + 6);
      *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      v26[88] = v27[88];
      *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
      uint64_t v28 = *(int *)(v74 + 40);
      uint64_t v29 = &v26[v28];
      double v30 = &v27[v28];
      uint64_t v72 = v20;
      if (v73(&v27[v28], 1, v14))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v29, v30, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v29, 0, 1, v14);
      }
      uint64_t v32 = v22[6];
      uint64_t v33 = (char *)v20 + v32;
      uint64_t v34 = (char *)v21 + v32;
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
      *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
      v33[40] = v34[40];
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *(_OWORD *)(v33 + 56) = *(_OWORD *)(v34 + 56);
      *(_OWORD *)(v33 + 72) = *(_OWORD *)(v34 + 72);
      v33[88] = v34[88];
      *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
      uint64_t v35 = *(int *)(v74 + 40);
      uint64_t v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      if (v73(&v34[v35], 1, v14))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v36, v37, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v36, 0, 1, v14);
      }
      uint64_t v39 = v22[7];
      long long v40 = (char *)v20 + v39;
      long long v41 = (char *)v21 + v39;
      *(_OWORD *)long long v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
      *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
      v40[40] = v41[40];
      *((void *)v40 + 6) = *((void *)v41 + 6);
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
      v40[88] = v41[88];
      *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
      uint64_t v42 = *(int *)(v74 + 40);
      double v43 = &v40[v42];
      double v44 = &v41[v42];
      if (v73(&v41[v42], 1, v14))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        uint64_t v46 = v71;
      }
      else
      {
        uint64_t v46 = v71;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v43, v44, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v43, 0, 1, v14);
      }
      uint64_t v47 = v22[8];
      os_log_type_t v48 = (char *)v72 + v47;
      uint64_t v49 = (char *)v21 + v47;
      *(_OWORD *)os_log_type_t v48 = *(_OWORD *)v49;
      v48[16] = v49[16];
      *(_OWORD *)(v48 + 24) = *(_OWORD *)(v49 + 24);
      v48[40] = v49[40];
      *((void *)v48 + 6) = *((void *)v49 + 6);
      *(_OWORD *)(v48 + 56) = *(_OWORD *)(v49 + 56);
      *(_OWORD *)(v48 + 72) = *(_OWORD *)(v49 + 72);
      v48[88] = v49[88];
      *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
      uint64_t v50 = *(int *)(v74 + 40);
      char v51 = &v48[v50];
      uint64_t v52 = &v49[v50];
      if (v73(&v49[v50], 1, v14))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v51, v52, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v14);
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v70 + 56))(v72, 0, 1, v22);
    }
    uint64_t v54 = a3[7];
    uint64_t v55 = a3[8];
    double v56 = *(void **)((char *)a2 + v54);
    *(void *)(a1 + v54) = v56;
    int64_t v57 = (void *)(a1 + v55);
    unint64_t v58 = (uint64_t *)((char *)a2 + v55);
    uint64_t v59 = v58[1];
    *int64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = a3[10];
    *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(unsigned char *)(a1 + v60) = *((unsigned char *)a2 + v60);
    uint64_t v61 = a3[11];
    uint64_t v75 = a1;
    unint64_t v62 = (void *)(a1 + v61);
    os_log_type_t v63 = (char *)a2 + v61;
    uint64_t v64 = sub_191CF4058();
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
    id v67 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66(v63, 1, v64))
    {
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
      memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    return v75;
  }
  return v18;
}

uint64_t sub_191C1E4A0(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for MetricsRequest(0);
  uint64_t v6 = v4 + *(int *)(v5 + 40);
  uint64_t v7 = sub_191CF43F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v4 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    uint64_t v21 = v5;
    uint64_t v12 = *(int *)(v5 + 40);
    uint64_t v13 = v10 + v11[5] + v12;
    if (!v9(v13, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
      uint64_t v12 = *(int *)(v21 + 40);
    }
    uint64_t v14 = v10 + v11[6] + v12;
    if (!v9(v14, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      uint64_t v12 = *(int *)(v21 + 40);
    }
    uint64_t v15 = v10 + v11[7] + v12;
    if (!v9(v15, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      uint64_t v12 = *(int *)(v21 + 40);
    }
    uint64_t v16 = v10 + v11[8] + v12;
    if (!v9(v16, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[11];
  uint64_t v18 = sub_191CF4058();
  uint64_t v22 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v17, 1, v18);
  if (!result)
  {
    id v20 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    return v20(v17, v18);
  }
  return result;
}

uint64_t sub_191C1E7E4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  uint64_t v69 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v69 + 40);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v67 = v14;
  if (v68(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v17 = (_OWORD *)(v8 + v16);
  uint64_t v18 = (_OWORD *)(v9 + v16);
  uint64_t v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v66 = a3;
    *uint64_t v17 = *v18;
    uint64_t v22 = v19[5];
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    v23[16] = v24[16];
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v23[40] = v24[40];
    *((void *)v23 + 6) = *((void *)v24 + 6);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
    v23[88] = v24[88];
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    uint64_t v25 = *(int *)(v69 + 40);
    uint64_t v26 = &v23[v25];
    id v27 = &v24[v25];
    if (v68(&v24[v25], 1, v13))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = v19[6];
    double v30 = (char *)v17 + v29;
    uint64_t v31 = (char *)v18 + v29;
    *(_OWORD *)double v30 = *(_OWORD *)v31;
    char v30[16] = v31[16];
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    uint64_t v32 = *(int *)(v69 + 40);
    uint64_t v33 = &v30[v32];
    uint64_t v34 = &v31[v32];
    if (v68(&v31[v32], 1, v13))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v33, 0, 1, v13);
    }
    uint64_t v36 = v19[7];
    uint64_t v37 = (char *)v17 + v36;
    uint64_t v38 = (char *)v18 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v69 + 40);
    long long v40 = &v37[v39];
    long long v41 = &v38[v39];
    if (v68(&v38[v39], 1, v13))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v40, v41, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v40, 0, 1, v13);
    }
    uint64_t v43 = v19[8];
    double v44 = (char *)v17 + v43;
    uint64_t v45 = (char *)v18 + v43;
    *(_OWORD *)double v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    uint64_t v46 = *(int *)(v69 + 40);
    uint64_t v47 = &v44[v46];
    os_log_type_t v48 = &v45[v46];
    a3 = v66;
    if (v68(&v45[v46], 1, v13))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v47, v48, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v47, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[8];
  uint64_t v52 = *(void **)(a2 + v50);
  *(void *)(a1 + v50) = v52;
  uint64_t v53 = (void *)(a1 + v51);
  uint64_t v54 = (void *)(a2 + v51);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[11];
  uint64_t v70 = a1;
  unint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (const void *)(a2 + v57);
  uint64_t v60 = sub_191CF4058();
  uint64_t v61 = *(void *)(v60 - 8);
  unint64_t v62 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
  id v63 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v62(v59, 1, v60))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v58, v59, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(v58, v59, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  return v70;
}

void *sub_191C1EF9C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v143 = a2;
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 24);
  unsigned char v7[40] = *((unsigned char *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = v10;
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 56);
  long long v12 = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((unsigned char *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((void *)v7 + 12) = *(void *)((char *)a2 + v6 + 96);
  *((void *)v7 + 13) = *(void *)((char *)a2 + v6 + 104);
  uint64_t v146 = type metadata accessor for MetricsRequest(0);
  uint64_t v13 = *(int *)(v146 + 40);
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_191CF43F8();
  uint64_t v145 = *(void *)(v16 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
  int v18 = v17(v14, 1, v16);
  uint64_t v147 = v17;
  int v19 = v17(v15, 1, v16);
  uint64_t v144 = a3;
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v145 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_191C2676C((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = *((void *)v23 + 1);
    uint64_t v42 = v24[5];
    uint64_t v43 = &v22[v42];
    double v44 = &v23[v42];
    long long v45 = *(_OWORD *)v44;
    v43[16] = v44[16];
    *(_OWORD *)uint64_t v43 = v45;
    long long v46 = *(_OWORD *)(v44 + 24);
    v43[40] = v44[40];
    *(_OWORD *)(v43 + 24) = v46;
    *((void *)v43 + 6) = *((void *)v44 + 6);
    long long v47 = *(_OWORD *)(v44 + 56);
    long long v48 = *(_OWORD *)(v44 + 72);
    v43[88] = v44[88];
    *(_OWORD *)(v43 + 72) = v48;
    *(_OWORD *)(v43 + 56) = v47;
    *((void *)v43 + 12) = *((void *)v44 + 12);
    *((void *)v43 + 13) = *((void *)v44 + 13);
    uint64_t v49 = *(int *)(v146 + 40);
    uint64_t v50 = &v43[v49];
    uint64_t v51 = &v44[v49];
    int v52 = v147(&v43[v49], 1, v16);
    int v53 = v147(v51, 1, v16);
    if (v52)
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v50, v51, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v50, 0, 1, v16);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v50, v51, v16);
LABEL_32:
        uint64_t v88 = v24[6];
        unint64_t v89 = &v22[v88];
        uint64_t v90 = &v23[v88];
        long long v91 = *(_OWORD *)v90;
        v89[16] = v90[16];
        *(_OWORD *)unint64_t v89 = v91;
        long long v92 = *(_OWORD *)(v90 + 24);
        v89[40] = v90[40];
        *(_OWORD *)(v89 + 24) = v92;
        *((void *)v89 + 6) = *((void *)v90 + 6);
        long long v93 = *(_OWORD *)(v90 + 56);
        long long v94 = *(_OWORD *)(v90 + 72);
        v89[88] = v90[88];
        *(_OWORD *)(v89 + 72) = v94;
        *(_OWORD *)(v89 + 56) = v93;
        *((void *)v89 + 12) = *((void *)v90 + 12);
        *((void *)v89 + 13) = *((void *)v90 + 13);
        uint64_t v95 = *(int *)(v146 + 40);
        uint64_t v96 = &v89[v95];
        os_log_type_t v97 = &v90[v95];
        int v98 = v147(&v89[v95], 1, v16);
        int v99 = v147(v97, 1, v16);
        if (v98)
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v96, v97, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v96, 0, 1, v16);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v96, v97, v16);
LABEL_38:
            uint64_t v101 = v24[7];
            int v102 = &v22[v101];
            uint64_t v103 = &v23[v101];
            long long v104 = *(_OWORD *)v103;
            v102[16] = v103[16];
            *(_OWORD *)int v102 = v104;
            long long v105 = *(_OWORD *)(v103 + 24);
            v102[40] = v103[40];
            *(_OWORD *)(v102 + 24) = v105;
            *((void *)v102 + 6) = *((void *)v103 + 6);
            long long v106 = *(_OWORD *)(v103 + 56);
            long long v107 = *(_OWORD *)(v103 + 72);
            v102[88] = v103[88];
            *(_OWORD *)(v102 + 72) = v107;
            *(_OWORD *)(v102 + 56) = v106;
            *((void *)v102 + 12) = *((void *)v103 + 12);
            *((void *)v102 + 13) = *((void *)v103 + 13);
            uint64_t v108 = *(int *)(v146 + 40);
            uint64_t v109 = &v102[v108];
            uint64_t v110 = &v103[v108];
            int v111 = v147(&v102[v108], 1, v16);
            int v112 = v147(v110, 1, v16);
            if (v111)
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v109, v110, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v109, 0, 1, v16);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v109, v110, v16);
LABEL_44:
                uint64_t v114 = v24[8];
                uint64_t v115 = &v22[v114];
                uint64_t v116 = &v23[v114];
                long long v117 = *(_OWORD *)v116;
                v115[16] = v116[16];
                *(_OWORD *)uint64_t v115 = v117;
                long long v118 = *(_OWORD *)(v116 + 24);
                v115[40] = v116[40];
                *(_OWORD *)(v115 + 24) = v118;
                *((void *)v115 + 6) = *((void *)v116 + 6);
                long long v119 = *(_OWORD *)(v116 + 56);
                long long v120 = *(_OWORD *)(v116 + 72);
                v115[88] = v116[88];
                *(_OWORD *)(v115 + 72) = v120;
                *(_OWORD *)(v115 + 56) = v119;
                *((void *)v115 + 12) = *((void *)v116 + 12);
                *((void *)v115 + 13) = *((void *)v116 + 13);
                uint64_t v121 = *(int *)(v146 + 40);
                double v122 = &v115[v121];
                double v123 = &v116[v121];
                int v124 = v147(&v115[v121], 1, v16);
                int v125 = v147(v123, 1, v16);
                long long v41 = v144;
                if (v124)
                {
                  if (!v125)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v122, v123, v16);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v122, 0, 1, v16);
                    goto LABEL_50;
                  }
                }
                else
                {
                  if (!v125)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v145 + 24))(v122, v123, v16);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v145 + 8))(v122, v16);
                }
                uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v122, v123, *(void *)(*(void *)(v126 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v145 + 8))(v109, v16);
            }
            uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v145 + 8))(v96, v16);
        }
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v145 + 8))(v50, v16);
    }
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v50, v51, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_32;
  }
  if (v28)
  {
LABEL_13:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v22, v23, *(void *)(*(void *)(v40 - 8) + 64));
    long long v41 = v144;
    goto LABEL_50;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  uint64_t v29 = v24[5];
  double v30 = &v22[v29];
  uint64_t v31 = &v23[v29];
  long long v32 = *(_OWORD *)v31;
  char v30[16] = v31[16];
  *(_OWORD *)double v30 = v32;
  long long v33 = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *(_OWORD *)(v30 + 24) = v33;
  *((void *)v30 + 6) = *((void *)v31 + 6);
  long long v34 = *(_OWORD *)(v31 + 56);
  long long v35 = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *(_OWORD *)(v30 + 72) = v35;
  *(_OWORD *)(v30 + 56) = v34;
  *((void *)v30 + 12) = *((void *)v31 + 12);
  *((void *)v30 + 13) = *((void *)v31 + 13);
  uint64_t v36 = *(int *)(v146 + 40);
  uint64_t v37 = &v30[v36];
  uint64_t v38 = &v31[v36];
  if (v147(&v31[v36], 1, v16))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v37, v38, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v37, 0, 1, v16);
  }
  uint64_t v54 = v24[6];
  uint64_t v55 = &v22[v54];
  uint64_t v56 = &v23[v54];
  long long v57 = *(_OWORD *)v56;
  v55[16] = v56[16];
  *(_OWORD *)uint64_t v55 = v57;
  long long v58 = *(_OWORD *)(v56 + 24);
  v55[40] = v56[40];
  *(_OWORD *)(v55 + 24) = v58;
  *((void *)v55 + 6) = *((void *)v56 + 6);
  long long v59 = *(_OWORD *)(v56 + 56);
  long long v60 = *(_OWORD *)(v56 + 72);
  v55[88] = v56[88];
  *(_OWORD *)(v55 + 72) = v60;
  *(_OWORD *)(v55 + 56) = v59;
  *((void *)v55 + 12) = *((void *)v56 + 12);
  *((void *)v55 + 13) = *((void *)v56 + 13);
  uint64_t v61 = *(int *)(v146 + 40);
  unint64_t v62 = &v55[v61];
  id v63 = &v56[v61];
  if (v147(&v56[v61], 1, v16))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v62, v63, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v62, 0, 1, v16);
  }
  uint64_t v65 = v24[7];
  uint64_t v66 = &v22[v65];
  uint64_t v67 = &v23[v65];
  long long v68 = *(_OWORD *)v67;
  v66[16] = v67[16];
  *(_OWORD *)uint64_t v66 = v68;
  long long v69 = *(_OWORD *)(v67 + 24);
  unsigned char v66[40] = v67[40];
  *(_OWORD *)(v66 + 24) = v69;
  *((void *)v66 + 6) = *((void *)v67 + 6);
  long long v70 = *(_OWORD *)(v67 + 56);
  long long v71 = *(_OWORD *)(v67 + 72);
  v66[88] = v67[88];
  *(_OWORD *)(v66 + 72) = v71;
  *(_OWORD *)(v66 + 56) = v70;
  *((void *)v66 + 12) = *((void *)v67 + 12);
  *((void *)v66 + 13) = *((void *)v67 + 13);
  uint64_t v72 = *(int *)(v146 + 40);
  os_log_type_t v73 = &v66[v72];
  uint64_t v74 = &v67[v72];
  if (v147(&v67[v72], 1, v16))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v73, v74, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v73, 0, 1, v16);
  }
  uint64_t v76 = v24[8];
  uint64_t v77 = &v22[v76];
  id v78 = &v23[v76];
  long long v79 = *(_OWORD *)v78;
  v77[16] = v78[16];
  *(_OWORD *)uint64_t v77 = v79;
  long long v80 = *(_OWORD *)(v78 + 24);
  v77[40] = v78[40];
  *(_OWORD *)(v77 + 24) = v80;
  *((void *)v77 + 6) = *((void *)v78 + 6);
  long long v81 = *(_OWORD *)(v78 + 56);
  long long v82 = *(_OWORD *)(v78 + 72);
  v77[88] = v78[88];
  *(_OWORD *)(v77 + 72) = v82;
  *(_OWORD *)(v77 + 56) = v81;
  *((void *)v77 + 12) = *((void *)v78 + 12);
  *((void *)v77 + 13) = *((void *)v78 + 13);
  uint64_t v83 = *(int *)(v146 + 40);
  uint64_t v84 = &v77[v83];
  double v85 = &v78[v83];
  long long v41 = v144;
  if (v147(&v78[v83], 1, v16))
  {
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v84, v85, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v84, 0, 1, v16);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_50:
  uint64_t v127 = v41[7];
  uint64_t v128 = *(void **)((char *)v143 + v127);
  uint64_t v129 = *(void **)((char *)a1 + v127);
  *(void *)((char *)a1 + v127) = v128;
  id v130 = v128;

  uint64_t v131 = v41[8];
  uint64_t v132 = (char *)a1 + v131;
  uint64_t v133 = (char *)v143 + v131;
  *(void *)((char *)a1 + v131) = *(void *)((char *)v143 + v131);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v132 + 1) = *((void *)v133 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v41[9]) = *(void *)((char *)v143 + v41[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v41[10]) = *((unsigned char *)v143 + v41[10]);
  uint64_t v134 = v41[11];
  id v135 = (char *)a1 + v134;
  unint64_t v136 = (char *)v143 + v134;
  uint64_t v137 = sub_191CF4058();
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v139 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48);
  LODWORD(v133) = v139(v135, 1, v137);
  int v140 = v139(v136, 1, v137);
  if (!v133)
  {
    if (!v140)
    {
      (*(void (**)(char *, char *, uint64_t))(v138 + 24))(v135, v136, v137);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v138 + 8))(v135, v137);
    goto LABEL_55;
  }
  if (v140)
  {
LABEL_55:
    uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v135, v136, *(void *)(*(void *)(v141 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v135, v136, v137);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
  return a1;
}

uint64_t sub_191C1FE2C(uint64_t a1, uint64_t a2, int *a3)
{
  int v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(a2 + v6 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(unsigned char *)(v7 + 40) = *(unsigned char *)(a2 + v6 + 40);
  *(void *)(v7 + 48) = *(void *)(a2 + v6 + 48);
  long long v9 = *(_OWORD *)(a2 + v6 + 56);
  long long v10 = *(_OWORD *)(a2 + v6 + 72);
  *(unsigned char *)(v7 + 88) = *(unsigned char *)(a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v10;
  *(_OWORD *)(v7 + 56) = v9;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  uint64_t v63 = type metadata accessor for MetricsRequest(0);
  uint64_t v11 = *(int *)(v63 + 40);
  long long v12 = (void *)(v7 + v11);
  uint64_t v13 = (const void *)(v8 + v11);
  uint64_t v14 = sub_191CF43F8();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v62 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v61 = v15;
  if (v62(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  int v18 = (_OWORD *)(v7 + v17);
  int v19 = (_OWORD *)(v8 + v17);
  uint64_t v20 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    long long v60 = v3;
    *int v18 = *v19;
    uint64_t v23 = v20[5];
    uint64_t v24 = (char *)v18 + v23;
    uint64_t v25 = (char *)v19 + v23;
    v24[16] = v25[16];
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
    v24[40] = v25[40];
    *((void *)v24 + 6) = *((void *)v25 + 6);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
    v24[88] = v25[88];
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    uint64_t v26 = *(int *)(v63 + 40);
    int v27 = &v24[v26];
    int v28 = &v25[v26];
    if (v62(&v25[v26], 1, v14))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v27, v28, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v27, 0, 1, v14);
    }
    uint64_t v30 = v20[6];
    uint64_t v31 = (char *)v18 + v30;
    long long v32 = (char *)v19 + v30;
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
    unsigned char v31[40] = v32[40];
    *((void *)v31 + 6) = *((void *)v32 + 6);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
    *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
    v31[88] = v32[88];
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    uint64_t v33 = *(int *)(v63 + 40);
    long long v34 = &v31[v33];
    long long v35 = &v32[v33];
    if (v62(&v32[v33], 1, v14))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v34, v35, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = v20[7];
    uint64_t v38 = (char *)v18 + v37;
    uint64_t v39 = (char *)v19 + v37;
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((void *)v38 + 6) = *((void *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    uint64_t v40 = *(int *)(v63 + 40);
    long long v41 = &v38[v40];
    uint64_t v42 = &v39[v40];
    if (v62(&v39[v40], 1, v14))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v41, v42, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v41, 0, 1, v14);
    }
    uint64_t v44 = v20[8];
    long long v45 = (char *)v18 + v44;
    long long v46 = (char *)v19 + v44;
    *(_OWORD *)long long v45 = *(_OWORD *)v46;
    v45[16] = v46[16];
    *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
    v45[40] = v46[40];
    *((void *)v45 + 6) = *((void *)v46 + 6);
    *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
    *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
    v45[88] = v46[88];
    *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
    uint64_t v47 = *(int *)(v63 + 40);
    long long v48 = &v45[v47];
    uint64_t v49 = &v46[v47];
    int v3 = v60;
    if (v62(&v46[v47], 1, v14))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v48, v49, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v48, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v51 = v3[8];
  *(void *)(a1 + v3[7]) = *(void *)(a2 + v3[7]);
  *(_OWORD *)(a1 + v51) = *(_OWORD *)(a2 + v51);
  uint64_t v52 = v3[10];
  *(void *)(a1 + v3[9]) = *(void *)(a2 + v3[9]);
  *(unsigned char *)(a1 + v52) = *(unsigned char *)(a2 + v52);
  uint64_t v53 = v3[11];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  uint64_t v56 = sub_191CF4058();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v57 + 32))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  return a1;
}

uint64_t sub_191C205A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v117 = a2;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(a2 + v6 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(unsigned char *)(v7 + 40) = *(unsigned char *)(a2 + v6 + 40);
  *(void *)(v7 + 48) = *(void *)(a2 + v6 + 48);
  long long v9 = *(_OWORD *)(a2 + v6 + 56);
  long long v10 = *(_OWORD *)(a2 + v6 + 72);
  *(unsigned char *)(v7 + 88) = *(unsigned char *)(a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v10;
  *(_OWORD *)(v7 + 56) = v9;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  uint64_t v120 = type metadata accessor for MetricsRequest(0);
  uint64_t v11 = *(int *)(v120 + 40);
  long long v12 = (void *)(v7 + v11);
  uint64_t v13 = (void *)(v8 + v11);
  uint64_t v14 = sub_191CF43F8();
  uint64_t v119 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v119 + 48);
  int v16 = v15(v12, 1, v14);
  uint64_t v121 = (uint64_t (*)(char *, uint64_t, uint64_t))v15;
  uint64_t v122 = v14;
  int v17 = v15(v13, 1, v14);
  long long v118 = a3;
  if (v16)
  {
    if (v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = v14;
    }
    else
    {
      uint64_t v19 = v14;
      (*(void (**)(void *, void *, uint64_t))(v119 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v12, 0, 1, v14);
    }
  }
  else
  {
    uint64_t v19 = v14;
    if (v17)
    {
      (*(void (**)(void *, uint64_t))(v119 + 8))(v12, v14);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v119 + 40))(v12, v13, v14);
    }
  }
  uint64_t v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v22 = (_OWORD *)(v7 + v21);
  uint64_t v23 = (_OWORD *)(v8 + v21);
  uint64_t v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *uint64_t v22 = *v23;
      uint64_t v38 = v24[5];
      uint64_t v39 = v22;
      uint64_t v40 = (char *)v22 + v38;
      long long v41 = (char *)v23 + v38;
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
      *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
      v40[40] = v41[40];
      *((void *)v40 + 6) = *((void *)v41 + 6);
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
      v40[88] = v41[88];
      *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
      uint64_t v42 = *(int *)(v120 + 40);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      int v45 = v121(&v40[v42], 1, v19);
      int v46 = v121(v44, 1, v19);
      if (v45)
      {
        if (v46)
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
          uint64_t v48 = v122;
        }
        else
        {
          uint64_t v48 = v122;
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v43, v44, v122);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v43, 0, 1, v122);
        }
      }
      else
      {
        uint64_t v48 = v122;
        if (v46)
        {
          (*(void (**)(char *, uint64_t))(v119 + 8))(v43, v122);
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v43, v44, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v43, v44, v122);
        }
      }
      uint64_t v71 = v24[6];
      uint64_t v72 = (char *)v39 + v71;
      os_log_type_t v73 = (char *)v23 + v71;
      *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
      v72[16] = v73[16];
      *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
      v72[40] = v73[40];
      *((void *)v72 + 6) = *((void *)v73 + 6);
      *(_OWORD *)(v72 + 56) = *(_OWORD *)(v73 + 56);
      *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
      v72[88] = v73[88];
      *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
      uint64_t v74 = *(int *)(v120 + 40);
      uint64_t v75 = &v72[v74];
      uint64_t v76 = &v73[v74];
      int v77 = v121(&v72[v74], 1, v48);
      int v78 = v121(v76, 1, v48);
      if (v77)
      {
        if (v78)
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
          uint64_t v80 = v122;
        }
        else
        {
          uint64_t v80 = v122;
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v75, v76, v122);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v75, 0, 1, v122);
        }
      }
      else
      {
        uint64_t v80 = v122;
        if (v78)
        {
          (*(void (**)(char *, uint64_t))(v119 + 8))(v75, v122);
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v75, v76, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v75, v76, v122);
        }
      }
      uint64_t v82 = v24[7];
      uint64_t v83 = (char *)v39 + v82;
      uint64_t v84 = (char *)v23 + v82;
      *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
      v83[16] = v84[16];
      *(_OWORD *)(v83 + 24) = *(_OWORD *)(v84 + 24);
      v83[40] = v84[40];
      *((void *)v83 + 6) = *((void *)v84 + 6);
      *(_OWORD *)(v83 + 56) = *(_OWORD *)(v84 + 56);
      *(_OWORD *)(v83 + 72) = *(_OWORD *)(v84 + 72);
      v83[88] = v84[88];
      *((_OWORD *)v83 + 6) = *((_OWORD *)v84 + 6);
      uint64_t v85 = *(int *)(v120 + 40);
      uint64_t v86 = &v83[v85];
      uint64_t v87 = &v84[v85];
      int v88 = v121(&v83[v85], 1, v80);
      int v89 = v121(v87, 1, v80);
      if (v88)
      {
        if (v89)
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
          uint64_t v91 = v122;
        }
        else
        {
          uint64_t v91 = v122;
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v86, v87, v122);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v86, 0, 1, v122);
        }
      }
      else
      {
        uint64_t v91 = v122;
        if (v89)
        {
          (*(void (**)(char *, uint64_t))(v119 + 8))(v86, v122);
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v86, v87, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v86, v87, v122);
        }
      }
      uint64_t v93 = v24[8];
      long long v94 = (char *)v39 + v93;
      uint64_t v95 = (char *)v23 + v93;
      *(_OWORD *)long long v94 = *(_OWORD *)v95;
      v94[16] = v95[16];
      *(_OWORD *)(v94 + 24) = *(_OWORD *)(v95 + 24);
      v94[40] = v95[40];
      *((void *)v94 + 6) = *((void *)v95 + 6);
      *(_OWORD *)(v94 + 56) = *(_OWORD *)(v95 + 56);
      *(_OWORD *)(v94 + 72) = *(_OWORD *)(v95 + 72);
      v94[88] = v95[88];
      *((_OWORD *)v94 + 6) = *((_OWORD *)v95 + 6);
      uint64_t v96 = *(int *)(v120 + 40);
      os_log_type_t v97 = &v94[v96];
      int v98 = &v95[v96];
      int v99 = v121(&v94[v96], 1, v91);
      int v100 = v121(v98, 1, v91);
      uint64_t v37 = v118;
      if (v99)
      {
        if (!v100)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v97, v98, v122);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v97, 0, 1, v122);
          goto LABEL_53;
        }
      }
      else
      {
        if (!v100)
        {
          (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v97, v98, v122);
          goto LABEL_53;
        }
        (*(void (**)(char *, uint64_t))(v119 + 8))(v97, v122);
      }
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
      goto LABEL_53;
    }
    sub_191C2676C((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
LABEL_14:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v22, v23, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v37 = v118;
    goto LABEL_53;
  }
  if (v28) {
    goto LABEL_14;
  }
  *uint64_t v22 = *v23;
  uint64_t v29 = v24[5];
  uint64_t v30 = (char *)v22 + v29;
  uint64_t v31 = (char *)v23 + v29;
  char v30[16] = v31[16];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *((void *)v30 + 6) = *((void *)v31 + 6);
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  uint64_t v32 = *(int *)(v120 + 40);
  uint64_t v33 = &v30[v32];
  long long v34 = &v31[v32];
  if (v121(&v31[v32], 1, v19))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v33, v34, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v33, 0, 1, v19);
  }
  uint64_t v49 = v24[6];
  uint64_t v50 = (char *)v22 + v49;
  uint64_t v51 = (char *)v23 + v49;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
  v50[40] = v51[40];
  *((void *)v50 + 6) = *((void *)v51 + 6);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  v50[88] = v51[88];
  *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
  uint64_t v52 = *(int *)(v120 + 40);
  uint64_t v53 = &v50[v52];
  uint64_t v54 = &v51[v52];
  if (v121(&v51[v52], 1, v19))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v53, v54, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v53, 0, 1, v19);
  }
  uint64_t v56 = v24[7];
  uint64_t v57 = (char *)v22 + v56;
  uint64_t v58 = (char *)v23 + v56;
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  v57[40] = v58[40];
  *((void *)v57 + 6) = *((void *)v58 + 6);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
  v57[88] = v58[88];
  *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
  uint64_t v59 = *(int *)(v120 + 40);
  long long v60 = &v57[v59];
  uint64_t v61 = &v58[v59];
  if (v121(&v58[v59], 1, v19))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v60, v61, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v60, 0, 1, v19);
  }
  uint64_t v63 = v24[8];
  uint64_t v64 = (char *)v22 + v63;
  uint64_t v65 = (char *)v23 + v63;
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  v64[16] = v65[16];
  *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 24);
  v64[40] = v65[40];
  *((void *)v64 + 6) = *((void *)v65 + 6);
  *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
  *(_OWORD *)(v64 + 72) = *(_OWORD *)(v65 + 72);
  v64[88] = v65[88];
  *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
  uint64_t v66 = *(int *)(v120 + 40);
  uint64_t v67 = &v64[v66];
  long long v68 = &v65[v66];
  uint64_t v37 = v118;
  if (v121(&v65[v66], 1, v19))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v67, v68, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v67, 0, 1, v19);
  }
  (*(void (**)(_OWORD *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_53:
  uint64_t v102 = v37[7];
  uint64_t v103 = *(void **)(a1 + v102);
  *(void *)(a1 + v102) = *(void *)(v117 + v102);

  uint64_t v104 = v37[8];
  uint64_t v105 = a1 + v104;
  uint64_t v106 = v117 + v104;
  *(void *)(a1 + v104) = *(void *)(v117 + v104);
  swift_bridgeObjectRelease();
  *(void *)(v105 + 8) = *(void *)(v106 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v37[9]) = *(void *)(v117 + v37[9]);
  swift_bridgeObjectRelease();
  uint64_t v107 = v37[11];
  *(unsigned char *)(a1 + v37[10]) = *(unsigned char *)(v117 + v37[10]);
  uint64_t v108 = (void *)(a1 + v107);
  uint64_t v109 = (void *)(v117 + v107);
  uint64_t v110 = sub_191CF4058();
  uint64_t v111 = *(void *)(v110 - 8);
  int v112 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v111 + 48);
  int v113 = v112(v108, 1, v110);
  int v114 = v112(v109, 1, v110);
  if (!v113)
  {
    if (!v114)
    {
      (*(void (**)(void *, void *, uint64_t))(v111 + 40))(v108, v109, v110);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v111 + 8))(v108, v110);
    goto LABEL_58;
  }
  if (v114)
  {
LABEL_58:
    uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v108, v109, *(void *)(*(void *)(v115 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v111 + 32))(v108, v109, v110);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
  return a1;
}

uint64_t sub_191C214F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C21508);
}

uint64_t sub_191C21508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_191C21638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C2164C);
}

uint64_t sub_191C2164C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for JindoViewStates(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E1C90);
}

void sub_191C2179C()
{
  type metadata accessor for ActivityMetricsDefinition(319);
  if (v0 <= 0x3F)
  {
    sub_191C218C8(319, (unint64_t *)&qword_1EB44B1A8, MEMORY[0x1E4F3D2F8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_191C218C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191C2191C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_191CF5938();
    uint64_t v25 = (void *)sub_191CF4938();
    sub_191CF3748();
  }
  sub_191CF3CB8();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

uint64_t sub_191C21AD8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_191CF5938();
    uint64_t v23 = (void *)sub_191CF4938();
    sub_191CF3748();
  }
  sub_191CF3CB8();
  long long v24 = v13[9];
  a9[8] = v13[8];
  a9[9] = v24;
  a9[10] = v13[10];
  *(_OWORD *)((char *)a9 + 169) = *(_OWORD *)((char *)v13 + 169);
  long long v25 = v13[5];
  a9[4] = v13[4];
  a9[5] = v25;
  long long v26 = v13[7];
  a9[6] = v13[6];
  a9[7] = v26;
  long long v27 = v13[1];
  *a9 = *v13;
  a9[1] = v27;
  long long v28 = v13[3];
  a9[2] = v13[2];
  a9[3] = v28;
  a9[16] = v34;
  a9[17] = v35;
  a9[18] = v36;
  a9[12] = v30;
  a9[13] = v31;
  a9[14] = v32;
  a9[15] = v33;

  return sub_191C2752C((uint64_t)v13);
}

__n128 sub_191C21CB8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_191CF5938();
    uint64_t v23 = (void *)sub_191CF4938();
    sub_191CF3748();
  }
  sub_191CF3CB8();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB449E88) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *long long v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_191C21EA4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C26AE0();
  sub_191CF6528();
  *(void *)&long long v12 = *(void *)v3;
  char v15 = 0;
  sub_191B717BC();
  sub_191CF6278();
  if (!v2)
  {
    *(void *)&long long v12 = *(void *)(v3 + 8);
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD0);
    sub_191C26BF0(&qword_1E92E17D0, (void (*)(void))sub_191C26C6C);
    sub_191CF6278();
    char v9 = *(unsigned char *)(v3 + 32);
    char v10 = *(unsigned char *)(v3 + 33);
    long long v12 = *(_OWORD *)(v3 + 16);
    char v13 = v9;
    char v14 = v10;
    char v15 = 2;
    sub_191BEDE7C();
    sub_191CF6208();
    type metadata accessor for JindoViewStates.Metadata(0);
    LOBYTE(v12) = 3;
    sub_191CF3078();
    sub_191C227C4(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
    sub_191CF6208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191C22148@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C18);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for JindoViewStates.Metadata(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((_WORD *)v13 + 16) = 256;
  *((void *)v13 + 1) = v14;
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 36)];
  uint64_t v16 = sub_191CF3078();
  int v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v28 = v15;
  v17(v15, 1, 1, v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C26AE0();
  sub_191CF6508();
  if (v2)
  {
    uint64_t v21 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_191B01770(v21, (uint64_t *)&unk_1EB44BBA8);
  }
  else
  {
    uint64_t v18 = (uint64_t)v6;
    uint64_t v19 = v26;
    char v32 = 0;
    sub_191B715A4();
    uint64_t v20 = v27;
    sub_191CF6178();
    *(void *)char v13 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD0);
    char v32 = 1;
    sub_191C26BF0(&qword_1E92E0BC0, (void (*)(void))sub_191C26B34);
    sub_191CF6178();
    *((void *)v13 + 1) = v29;
    char v32 = 2;
    sub_191BEDF78();
    sub_191CF6108();
    char v22 = v30;
    char v23 = v31;
    *((_OWORD *)v13 + 1) = v29;
    v13[32] = v22;
    v13[33] = v23;
    LOBYTE(v29) = 3;
    sub_191C227C4(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
    sub_191C26B88(v18, v28);
    sub_191C267CC((uint64_t)v13, v25, type metadata accessor for JindoViewStates.Metadata);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191C2676C((uint64_t)v13, type metadata accessor for JindoViewStates.Metadata);
  }
}

unint64_t sub_191C225B8()
{
  unint64_t result = 0x6D6E6F7269766E65;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0x726F6C6F4379656BLL;
      break;
    case 3:
      unint64_t result = 0x5255746567646977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191C22658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C27354(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C22680(uint64_t a1)
{
  unint64_t v2 = sub_191C26AE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C226BC(uint64_t a1)
{
  unint64_t v2 = sub_191C26AE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C226F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C22148(a1, a2);
}

uint64_t sub_191C22710(void *a1)
{
  return sub_191C21EA4(a1);
}

uint64_t sub_191C22728()
{
  return MEMORY[0x1E4F3EDF8];
}

uint64_t sub_191C22734()
{
  return sub_191C227C4(&qword_1E92E0B10, (void (*)(uint64_t))type metadata accessor for JindoViewStates.Metadata);
}

uint64_t sub_191C2277C()
{
  return sub_191C227C4(&qword_1E92E1440, (void (*)(uint64_t))type metadata accessor for JindoViewStates.Metadata);
}

uint64_t sub_191C227C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C2280C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a3;
  int v17 = (int *)type metadata accessor for JindoViewStates(0);
  *(uint64_t *)((char *)a4 + v17[9]) = MEMORY[0x1E4FBC868];
  *((unsigned char *)a4 + v17[10]) = 4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))((char *)a4 + v17[11], 1, 1, v8);
  sub_191AFEE28(a1, (uint64_t)(a4 + 1));
  sub_191C267CC(a2, (uint64_t)a4 + v17[6], type metadata accessor for ActivityMetricsDefinition);
  *(uint64_t *)((char *)a4 + v17[7]) = (uint64_t)v16;
  id v18 = v16;
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v15[*(int *)(v13 + 28)], v11, v8);
  *(void *)uint64_t v15 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v19 = sub_191AFE1D0((uint64_t)v15);
  uint64_t result = sub_191C2676C((uint64_t)v15, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v21 = (uint64_t *)((char *)a4 + v17[8]);
  *uint64_t v21 = &unk_1EE29EAC8;
  v21[1] = v19;
  uint64_t v22 = *(void *)(v19 + 16);
  uint64_t v23 = qword_1EE29EAD8 * v22;
  if ((unsigned __int128)(qword_1EE29EAD8 * (__int128)v22) >> 64 == (qword_1EE29EAD8 * v22) >> 63)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_191C2676C(a2, type metadata accessor for ActivityMetricsDefinition);
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191C22AA0@<X0>(void *a1@<X8>)
{
  uint64_t v107 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v106 = (uint64_t)v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_191CF3998();
  int v113 = *(void (***)(char *, uint64_t))(v125 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v125);
  int v124 = (char *)v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  double v123 = (char *)v100 - v6;
  uint64_t v122 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1F4188790](v122);
  uint64_t v129 = (void *)((char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AA8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v121 = (uint64_t)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v108 = (uint64_t)v100 - v11;
  uint64_t v126 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  uint64_t v12 = MEMORY[0x1F4188790](v126);
  uint64_t v119 = (void **)((char *)v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char **)((char *)v100 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v128 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v100 - v19;
  uint64_t v21 = sub_191CF4058();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v120 = (char *)v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)v100 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  char v30 = (char *)v100 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v103 = (char *)v100 - v31;
  uint64_t v105 = type metadata accessor for JindoViewStates(0);
  uint64_t v32 = *(int *)(v105 + 28);
  uint64_t v109 = v1;
  uint64_t v104 = v32;
  long long v33 = *(char **)(v1 + v32);
  long long v34 = &v33[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  uint64_t v35 = *(void *)(*(void *)v34 + 16);
  uint64_t v110 = v22;
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    uint64_t v72 = v103;
LABEL_31:
    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44BBB8);
    goto LABEL_33;
  }
  uint64_t v102 = v20;
  long long v36 = v33;
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  uint64_t v37 = (char *)v15 + *(int *)(v126 + 20);
  uint64_t v127 = *(void (**)(void))(v22 + 16);
  ((void (*)(char *, char *, uint64_t))v127)(v37, v30, v21);
  *uint64_t v15 = v36;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v101 = v36;
  uint64_t v116 = v38;
  uint64_t v117 = v22 + 8;
  v38(v30, v21);
  uint64_t v39 = v108;
  sub_191C26A78((uint64_t)v15, v108, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v40 = v39;
  uint64_t v41 = v121;
  sub_191B01614(v40, v121, &qword_1E92E1AA8);
  uint64_t v42 = v41;
  uint64_t v43 = v119;
  sub_191C26A78(v42, (uint64_t)v119, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v44 = *v43;
  int v45 = v129;
  uint64_t v121 = (uint64_t)v129 + *(int *)(v122 + 20);
  uint64_t v122 = v22 + 16;
  uint64_t v126 = v21;
  v127();
  id v46 = v44;
  uint64_t v47 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  id v130 = v46;
  id v48 = v46;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_191B4FF68(&v130, v47);
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();

  uint64_t *v45 = v49;
  v45[1] = v51;
  v45[2] = v53;
  sub_191C2676C((uint64_t)v43, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  unint64_t v54 = v45[1];
  uint64_t v55 = v45;
  if (v54 >> 62) {
    goto LABEL_38;
  }
  uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v57 = v120;
  uint64_t v21 = v126;
  if (v56 >= 1)
  {
    uint64_t v119 = (void **)(v110 + 32);
    long long v118 = (unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
    unsigned int v115 = *MEMORY[0x1E4F3C5B8];
    int v114 = (void (**)(char *, void, uint64_t))(v113 + 13);
    ++v113;
    uint64_t v120 = (char *)(v110 + 56);
    v100[1] = (v110 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    int v112 = v27;
    while (1)
    {
      sub_191B3CC80(v56 - 1);
      if ((v58 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = MEMORY[0x1E4FBC860];
        *uint64_t v55 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        v55[1] = v59;
        swift_bridgeObjectRelease();
        v55[2] = v59;
      }
      ((void (*)(char *, uint64_t, uint64_t))v127)(v27, v121, v21);
      if (v54 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_191CF6018();
        swift_bridgeObjectRelease();
        if (!v60) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v60 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v60) {
          goto LABEL_17;
        }
      }
      if (v60 < 1)
      {
        __break(1u);
LABEL_38:
        swift_bridgeObjectRetain_n();
        uint64_t v56 = sub_191CF6018();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      for (uint64_t i = 0; i != v60; ++i)
      {
        if ((v54 & 0xC000000000000001) != 0)
        {
          uint64_t v62 = MEMORY[0x192FE4B60](i, v54);
        }
        else
        {
          uint64_t v62 = *(void *)(v54 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(void **)(v62 + 16) + 112))(v27);
        swift_release();
      }
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v63 = (void (*)(char *, char *, uint64_t))*v119;
      uint64_t v64 = v128;
      uint64_t v21 = v126;
      ((void (*)(char *, char *, uint64_t))*v119)(v128, v27, v126);
      uint64_t v65 = *(void (**)(char *, void, uint64_t, uint64_t))v120;
      (*(void (**)(char *, void, uint64_t, uint64_t))v120)(v64, 0, 1, v21);
      if ((*v118)(v64, 1, v21) == 1)
      {
        uint64_t v74 = v110;
        uint64_t v72 = v103;
        uint64_t v75 = v108;
        uint64_t v20 = v102;
        uint64_t v55 = v129;
        os_log_type_t v73 = v101;
        goto LABEL_29;
      }
      uint64_t v111 = v65;
      v63(v57, v64, v21);
      uint64_t v66 = v57;
      uint64_t v67 = v123;
      sub_191CF3D28();
      long long v68 = v124;
      uint64_t v69 = v125;
      (*v114)(v124, v115, v125);
      char v70 = sub_191CF3988();
      uint64_t v71 = *v113;
      (*v113)(v68, v69);
      v71(v67, v69);
      if (v70)
      {
        sub_191C2676C((uint64_t)v129, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        uint64_t v20 = v102;
        v63(v102, v66, v21);
        v111(v20, 0, 1, v21);
        uint64_t v74 = v110;
        uint64_t v72 = v103;
        uint64_t v75 = v108;
        os_log_type_t v73 = v101;
        goto LABEL_30;
      }
      v116(v66, v21);
      uint64_t v55 = v129;
      unint64_t v54 = v129[1];
      uint64_t v57 = v66;
      if (v54 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v56 = sub_191CF6018();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      uint64_t v27 = v112;
      if (v56 <= 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v74 = v110;
        uint64_t v75 = v108;
        uint64_t v65 = v111;
        v111(v128, 1, 1, v21);
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v74 = v110;
  uint64_t v65 = *(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56);
  uint64_t v75 = v108;
  v65(v128, 1, 1, v21);
LABEL_28:
  uint64_t v72 = v103;
  uint64_t v20 = v102;
  os_log_type_t v73 = v101;
LABEL_29:
  sub_191C2676C((uint64_t)v55, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  v65(v20, 1, 1, v21);
LABEL_30:
  sub_191B01770(v75, &qword_1E92E1AA8);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v20, 1, v21) == 1) {
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v72, v20, v21);
LABEL_33:
  uint64_t v76 = (void *)(v109 + 8);
  int v77 = __swift_project_boxed_opaque_existential_1((void *)(v109 + 8), *(void *)(v109 + 32));
  uint64_t v78 = *(void *)((char *)v77 + *(int *)(type metadata accessor for DynamicIsland() + 20));
  if (v78)
  {
    swift_retain();
    sub_191CF4DB8();
    unsigned int v80 = v79;
    unsigned int v82 = v81;
    unsigned int v84 = v83;
    unsigned int v86 = v85;
    swift_release();
    unint64_t v87 = v80 | ((unint64_t)v82 << 32);
    unint64_t v88 = v84 | ((unint64_t)v86 << 32);
  }
  else
  {
    unint64_t v87 = 0;
    unint64_t v88 = 0;
  }
  BOOL v89 = v78 == 0;
  uint64_t v90 = v109;
  id v130 = *(void **)(v109 + v104);
  id v91 = v130;
  WidgetEnvironment.filterForArchiving()();
  uint64_t v92 = v130;
  uint64_t v93 = *(void *)(v90 + *(int *)(v105 + 36));
  long long v94 = __swift_project_boxed_opaque_existential_1(v76, *(void *)(v90 + 32));
  uint64_t v95 = v106;
  sub_191B01614((uint64_t)v94, v106, (uint64_t *)&unk_1EB44BBA8);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v110 + 8);
  swift_bridgeObjectRetain();
  v96(v72, v21);
  os_log_type_t v97 = v107;
  *uint64_t v107 = v92;
  v97[1] = v93;
  v97[2] = v87;
  v97[3] = v88;
  *((unsigned char *)v97 + 32) = v89;
  *((unsigned char *)v97 + 33) = 0;
  uint64_t v98 = type metadata accessor for JindoViewStates.Metadata(0);
  return sub_191BD10DC(v95, (uint64_t)v97 + *(int *)(v98 + 28));
}

uint64_t sub_191C23734(uint64_t a1, uint64_t a2)
{
  uint64_t v196 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E26E8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF3998();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v158 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v173 = (char *)&v157 - v11;
  uint64_t v12 = sub_191CF3CF8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v179 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1270);
  MEMORY[0x1F4188790](v161);
  uint64_t v160 = (uint64_t)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v177 = (uint64_t)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for CommonActivityArchivingModifiers();
  MEMORY[0x1F4188790](v190);
  v191 = (char *)&v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1250);
  uint64_t v18 = MEMORY[0x1F4188790](v186);
  uint64_t v159 = (uint64_t)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v198 = (uint64_t)&v157 - v20;
  uint64_t v176 = type metadata accessor for MetricsRequest(0);
  uint64_t v21 = MEMORY[0x1F4188790](v176);
  id v174 = (char *)&v157 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v178 = (uint64_t)&v157 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v175 = (uint64_t)&v157 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v195 = (char *)&v157 - v27;
  uint64_t v28 = (void *)sub_191CF43A8();
  uint64_t v184 = *(v28 - 1);
  p_isa = v28;
  MEMORY[0x1F4188790](v28);
  uint64_t v181 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v183 = (uint64_t)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v180 = *(void *)(v182 - 8);
  MEMORY[0x1F4188790](v182);
  uint64_t v194 = (uint64_t)&v157 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_191CF4058();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v192 = (char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v157 - v38;
  MEMORY[0x1F4188790](v37);
  char v199 = (char *)&v157 - v40;
  uint64_t v193 = (int *)type metadata accessor for JindoViewStates(0);
  uint64_t v41 = v193[8];
  os_log_t v200 = v2;
  uint64_t v42 = (uint64_t *)((char *)v2 + v41);
  uint64_t v43 = *(uint64_t *)((char *)&v2[1].isa + v41);
  uint64_t v44 = *(void *)(v43 + 16);
  if (!v44)
  {
    __break(1u);
    goto LABEL_71;
  }
  unint64_t v45 = a1 / v44;
  if (a1 / v44 < 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v46 = *v42;
  if (v45 >= *(void *)(v46 + 16))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v47 = a1 % v44;
  if (v47 < 0)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    swift_once();
    goto LABEL_32;
  }
  uint64_t v157 = v6;
  uint64_t v168 = v8;
  uint64_t v169 = v7;
  uint64_t v189 = v39;
  uint64_t v171 = *(char *)(v46 + v45 + 32);
  uint64_t v172 = a1;
  uint64_t v48 = v171;
  uint64_t v49 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  uint64_t v50 = v199;
  v49(v199, v43+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v47, v33);
  uint64_t v51 = v193;
  uint64_t v52 = v193[10];
  os_log_t v53 = v200;
  uint64_t v232 = v48;
  *((unsigned char *)&v200->isa + v52) = v48;
  uint64_t v54 = (uint64_t)v53 + v51[11];
  sub_191B01770(v54, (uint64_t *)&unk_1EB44BBB8);
  uint64_t v187 = (void (*)(char *, uint64_t, uint64_t))v49;
  uint64_t v188 = v34 + 16;
  v49((char *)v54, (unint64_t)v50, v33);
  uint64_t v170 = v34;
  uint64_t v55 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56);
  uint64_t v197 = v33;
  v55(v54, 0, 1, v33);
  uint64_t v56 = (uint64_t)v181;
  sub_191CF3D88();
  uint64_t v57 = v183;
  ActivityMetricsDefinition.jindoMetrics(for:)(v56, v183);
  (*(void (**)(uint64_t, void *))(v184 + 8))(v56, p_isa);
  uint64_t v58 = v182;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v57, 1, v182) == 1)
  {
    __break(1u);
    JUMPOUT(0x191C250B0);
  }
  uint64_t v34 = v194;
  sub_191C26A78(v57, v194, type metadata accessor for JindoMetricsDefinition);
  uint64_t v39 = v195;
  sub_191C267CC(v34 + *(int *)(v58 + 4 * qword_191D03F50[v171]), (uint64_t)v195, type metadata accessor for MetricsRequest);
  uint64_t v59 = *((void *)v39 + 12);
  long long v231 = 0u;
  long long v230 = 0u;
  if (v39[88]) {
    goto LABEL_12;
  }
  double v60 = *((double *)v39 + 9);
  double v61 = *((double *)v39 + 10);
  double v62 = *((double *)v39 + 7);
  double v63 = *((double *)v39 + 8);
  *(double *)&long long v230 = v62;
  *((double *)&v230 + 1) = v63;
  *(double *)&long long v231 = v60;
  *((double *)&v231 + 1) = v61;
  if (v63 <= 0.0)
  {
    if (v61 <= 0.0) {
      goto LABEL_9;
    }
LABEL_20:
    *((void *)&v231 + 1) = v59;
    if (v62 <= 0.0)
    {
LABEL_10:
      if (v60 <= 0.0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    goto LABEL_21;
  }
  *((void *)&v230 + 1) = v59;
  if (v61 > 0.0) {
    goto LABEL_20;
  }
LABEL_9:
  if (v62 <= 0.0) {
    goto LABEL_10;
  }
LABEL_21:
  *(void *)&long long v230 = v59;
  if (v60 > 0.0) {
LABEL_11:
  }
    *(void *)&long long v231 = v59;
LABEL_12:
  os_log_t v64 = v200 + 1;
  __swift_project_boxed_opaque_existential_1(&v200[1].isa, (uint64_t)v200[4].isa);
  uint64_t v65 = sub_191B9C8C4(v232);
  double v66 = *(double *)v39;
  double v67 = *(double *)v39;
  if (v39[16] == 1) {
    double v67 = *((double *)v39 + 1);
  }
  double v68 = *((double *)v39 + 3);
  double v69 = v68;
  if (v39[40] == 1) {
    double v69 = *((double *)v39 + 4);
  }
  p_isa = &v64->isa;
  switch(v232)
  {
    case 1:
      uint64_t v70 = sub_191CF5098();
      break;
    case 2:
      uint64_t v70 = sub_191CF50A8();
      break;
    case 3:
      uint64_t v70 = sub_191CF5088();
      break;
    default:
      uint64_t v70 = sub_191CF5078();
      break;
  }
  sub_191C2191C(v66, 0, 0.0, 1, v67, 0, v68, 0, (uint64_t)&v215, 0.0, 1, v69, 0, v70, v71, v65);
  swift_release();
  uint64_t v72 = v215;
  uint64_t v73 = v216;
  char v74 = LOBYTE(v217);
  uint64_t v162 = v218;
  LODWORD(v184) = v219;
  uint64_t v183 = *(void *)v220;
  LODWORD(v182) = v220[8];
  uint64_t v181 = *(char **)&v221[4];
  LODWORD(v180) = v222;
  uint64_t v171 = v223;
  int v167 = v224;
  uint64_t v166 = v226;
  int v165 = v227;
  uint64_t v163 = v229;
  uint64_t v164 = v228;
  uint64_t v75 = v175;
  sub_191C267CC((uint64_t)v39, v175, type metadata accessor for MetricsRequest);
  uint64_t v76 = v191;
  unsigned char *v191 = v232;
  uint64_t v77 = (uint64_t)&v76[*(int *)(v190 + 20)];
  sub_191C26A78(v75, v77, type metadata accessor for MetricsRequest);
  uint64_t v78 = v177;
  sub_191B01614(v77 + *(int *)(v176 + 40), v177, &qword_1E92E1F80);
  uint64_t v79 = sub_191CF43F8();
  LODWORD(v75) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79);
  sub_191B01770(v78, &qword_1E92E1F80);
  if (v75 == 1)
  {
    uint64_t v80 = v72;
    switch(v232)
    {
      case 1:
      case 2:
      case 3:
        uint64_t v81 = type metadata accessor for CompactJindoActivityFontDefinition();
        unsigned int v82 = (unint64_t *)&unk_1E92E17B0;
        unsigned int v83 = type metadata accessor for CompactJindoActivityFontDefinition;
        break;
      default:
        uint64_t v81 = type metadata accessor for ExpandedJindoActivityFontDefinition();
        unsigned int v82 = (unint64_t *)&unk_1E92E17B8;
        unsigned int v83 = type metadata accessor for ExpandedJindoActivityFontDefinition;
        break;
    }
    uint64_t v84 = sub_191C227C4(v82, (void (*)(uint64_t))v83);
  }
  else
  {
    uint64_t v81 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition();
    uint64_t v84 = sub_191C227C4(&qword_1E92E3B18, (void (*)(uint64_t))type metadata accessor for RectangularHomeScreenComplicationFontDefinition);
    uint64_t v80 = v72;
  }
  uint64_t v85 = v162;
  uint64_t v86 = (uint64_t)v191;
  unint64_t v87 = (uint64_t *)&v191[*(int *)(v190 + 24)];
  *unint64_t v87 = v81;
  v87[1] = v84;
  uint64_t v88 = v198;
  sub_191C267CC(v86, v198 + *(int *)(v186 + 36), (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
  *(void *)uint64_t v88 = v80;
  *(void *)(v88 + 8) = v73;
  *(unsigned char *)(v88 + 16) = v74;
  *(void *)(v88 + 24) = v85;
  *(unsigned char *)(v88 + 32) = v184;
  *(void *)(v88 + 40) = v183;
  *(unsigned char *)(v88 + 48) = v182;
  *(void *)(v88 + 56) = v181;
  *(unsigned char *)(v88 + 64) = v180;
  *(void *)(v88 + 72) = v171;
  *(unsigned char *)(v88 + 80) = v167;
  *(void *)(v88 + 88) = v166;
  *(unsigned char *)(v88 + 96) = v165;
  uint64_t v89 = v163;
  *(void *)(v88 + 104) = v164;
  *(void *)(v88 + 112) = v89;
  sub_191C2676C(v86, (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
  if (qword_1E92E1420 != -1) {
    goto LABEL_74;
  }
LABEL_32:
  char v90 = dyld_program_sdk_at_least();
  uint64_t v91 = v197;
  uint64_t v92 = (uint64_t)v189;
  if (v90)
  {
    double v93 = *((double *)v39 + 6);
    swift_beginAccess();
    double v94 = *(double *)&v230;
    double v95 = *(double *)&v231;
    double v96 = v93 + (*(double *)&v230 + *(double *)&v231) * -0.5;
    switch(v232)
    {
      case 1:
        v212 = &type metadata for LeadingConcentricClip;
        unint64_t v102 = sub_191C26A24();
        goto LABEL_38;
      case 2:
        v212 = &type metadata for TrailingConcentricClip;
        unint64_t v102 = sub_191C269D0();
LABEL_38:
        uint64_t v213 = v102;
        double v209 = v96;
        break;
      default:
        os_log_type_t v97 = (ValueMetadata *)sub_191CF3C78();
        v212 = v97;
        uint64_t v213 = sub_191C227C4(&qword_1E92E1288, MEMORY[0x1E4F3CDB8]);
        boxed_opaque_existential_1 = (double *)__swift_allocate_boxed_opaque_existential_1((uint64_t *)&v209);
        int v99 = (char *)boxed_opaque_existential_1 + SHIDWORD(v97[1].Kind);
        uint64_t v100 = *MEMORY[0x1E4F3D4A0];
        uint64_t v101 = sub_191CF4368();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 104))(v99, v100, v101);
        double *boxed_opaque_existential_1 = v96;
        boxed_opaque_existential_1[1] = v96;
        break;
    }
    v191 = __swift_project_boxed_opaque_existential_1(&v209, (uint64_t)v212);
    double v103 = -*((double *)&v230 + 1);
    double v104 = -*((double *)&v231 + 1);
    char v105 = sub_191CF4948();
    uint64_t v106 = v160;
    sub_191B01614(v198, v160, &qword_1E92E1250);
    uint64_t v107 = v106 + *(int *)(v161 + 36);
    *(unsigned char *)uint64_t v107 = v105;
    *(double *)(v107 + 8) = -v94;
    *(double *)(v107 + 16) = v103;
    *(double *)(v107 + 24) = -v95;
    *(double *)(v107 + 32) = v104;
    *(unsigned char *)(v107 + 40) = 0;
    sub_191CF39B8();
    uint64_t v207 = sub_191CF3BA8();
    unint64_t v108 = sub_191C26954();
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v203 = v108;
    uint64_t v204 = WitnessTable;
    uint64_t v208 = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v205);
    sub_191CF4D58();
    sub_191B01770(v106, &qword_1E92E1270);
    uint64_t v110 = v208;
    __swift_project_boxed_opaque_existential_1(&v205, v207);
    uint64_t v111 = sub_191CF3BA8();
    uint64_t v218 = v111;
    uint64_t v201 = v110;
    uint64_t v202 = MEMORY[0x1E4F3CAA8];
    uint64_t v219 = swift_getWitnessTable();
    int v112 = __swift_allocate_boxed_opaque_existential_1(&v215);
    sub_191CF4D28();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v205);
    uint64_t v113 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
    MEMORY[0x1F4188790](v113);
    (*(void (**)(char *, uint64_t *, uint64_t))(v115 + 16))((char *)&v157 - v114, v112, v111);
    double v209 = COERCE_DOUBLE(sub_191CF5038());
    sub_191CF4338();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v215);
    uint64_t v91 = v197;
    uint64_t v92 = (uint64_t)v189;
    uint64_t v34 = v194;
  }
  else
  {
    sub_191B01614(v198, v159, &qword_1E92E1250);
    sub_191C26834();
    uint64_t v215 = sub_191CF5038();
    sub_191CF4338();
  }
  uint64_t v116 = v187;
  v187((char *)v92, (uint64_t)v199, v91);
  __swift_project_boxed_opaque_existential_1(p_isa, (uint64_t)v200[4].isa);
  sub_191B9CA70(v92, v232, (uint64_t *)v34);
  sub_191CF3CD8();
  sub_191CF3EB8();
  LOBYTE(v215) = 1;
  sub_191BFCA00();
  sub_191CF4078();
  v116(v192, v92, v91);
  sub_191CF41D8();
  uint64_t v117 = v178;
  sub_191C267CC((uint64_t)v39, v178, type metadata accessor for MetricsRequest);
  uint64_t v118 = v117;
  LOBYTE(v117) = *(unsigned char *)(v117 + 16);
  uint64_t v120 = v168;
  uint64_t v119 = v169;
  char v121 = *(unsigned char *)(v118 + 40);
  sub_191C2676C(v118, type metadata accessor for MetricsRequest);
  LOBYTE(v215) = v117;
  LOBYTE(v209) = v121;
  sub_191CF41E8();
  uint64_t v124 = (uint64_t)v195;
  if (v195[16])
  {
    double v125 = *(double *)v195;
    if (*((double *)v195 + 1) < v122) {
      double v122 = *((double *)v195 + 1);
    }
    uint64_t v126 = v173;
    uint64_t v127 = (uint64_t)v174;
    if (v122 > *(double *)v195) {
      double v125 = v122;
    }
  }
  else
  {
    double v125 = *(double *)v195;
    uint64_t v126 = v173;
    uint64_t v127 = (uint64_t)v174;
  }
  if (v195[40])
  {
    double v128 = *((double *)v195 + 4);
    uint64_t v129 = (ValueMetadata *)*((void *)v195 + 3);
    if (v128 >= v123) {
      double v128 = v123;
    }
    if (v128 > *((double *)v195 + 3)) {
      uint64_t v129 = *(ValueMetadata **)&v128;
    }
  }
  else
  {
    uint64_t v129 = (ValueMetadata *)*((void *)v195 + 3);
  }
  sub_191C1137C();
  sub_191CF4068();
  if ((v215 & 1) == 0)
  {
    sub_191CF4678();
    uint64_t v130 = (uint64_t)v157;
    sub_191CF4268();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v130, 1, v119) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v120 + 104))(v126, *MEMORY[0x1E4F3C5B8], v119);
      sub_191B01770(v130, qword_1E92E26E8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v120 + 32))(v126, v130, v119);
    }
    if (sub_191CF3E78()) {
      (*(void (**)(char *, void, uint64_t))(v120 + 104))(v158, *MEMORY[0x1E4F3C5B8], v119);
    }
    else {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v158, v126, v119);
    }
    sub_191CF3D38();
    v187(v192, v92, v197);
    sub_191CF41D8();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v119);
  }
  uint64_t v131 = *(void *)(v124 + 48);
  uint64_t v215 = 0;
  uint64_t v216 = 0;
  double v217 = v125;
  uint64_t v218 = (uint64_t)v129;
  uint64_t v219 = v131;
  v220[0] = 0;
  *(void *)v221 = 0;
  *(void *)&v220[4] = 0;
  *(_WORD *)&v221[8] = 256;
  uint64_t v223 = 0;
  uint64_t v222 = 0;
  __int16 v224 = 256;
  char v225 = 1;
  uint64_t v132 = v193[9];
  os_log_t v133 = v200;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  double v209 = *(double *)((char *)&v133->isa + v132);
  *(Class *)((char *)&v133->isa + v132) = (Class)0x8000000000000000;
  double v135 = *(double *)&v172;
  sub_191B4B14C((uint64_t)&v215, v172, isUniquelyReferenced_nonNull_native);
  *(double *)((char *)&v133->isa + v132) = v209;
  swift_bridgeObjectRelease();
  if (qword_1E92E1190 != -1) {
    swift_once();
  }
  uint64_t v136 = sub_191CF3858();
  __swift_project_value_buffer(v136, (uint64_t)qword_1E92F2488);
  sub_191C267CC(v124, v127, type metadata accessor for MetricsRequest);
  uint64_t v137 = sub_191CF3838();
  int v138 = sub_191CF5918();
  if (os_log_type_enabled(v137, (os_log_type_t)v138))
  {
    uint64_t v139 = swift_slowAlloc();
    v191 = (unsigned char *)swift_slowAlloc();
    v214 = v191;
    *(_DWORD *)uint64_t v139 = 134219266;
    double v209 = v135;
    sub_191CF5C08();
    *(_WORD *)(v139 + 12) = 2080;
    unint64_t v140 = 0xE800000000000000;
    uint64_t v141 = 0x6465646E61707865;
    LODWORD(v193) = v138;
    os_log_t v200 = v137;
    switch(v232)
    {
      case 1:
        unint64_t v140 = 0xEE00676E69646165;
        uint64_t v141 = 0x4C746361706D6F63;
        break;
      case 2:
        unint64_t v140 = 0xEF676E696C696172;
        uint64_t v141 = 0x54746361706D6F63;
        break;
      case 3:
        unint64_t v140 = 0xEE006C616D696E69;
        uint64_t v141 = 0x4D746361706D6F63;
        break;
      default:
        break;
    }
    double v209 = COERCE_DOUBLE(sub_191C5C36C(v141, v140, (uint64_t *)&v214));
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    *(_WORD *)(v139 + 22) = 2080;
    uint64_t v144 = *(void *)(v127 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v145 = swift_allocObject();
    *(_OWORD *)(v145 + 16) = xmmword_191CF8410;
    *(void *)(v145 + 56) = MEMORY[0x1E4FBC958];
    *(void *)(v145 + 64) = sub_191B778A4();
    *(void *)(v145 + 32) = v144;
    uint64_t v146 = sub_191CF5348();
    double v209 = COERCE_DOUBLE(sub_191C5C36C(v146, v147, (uint64_t *)&v214));
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    sub_191C2676C(v127, type metadata accessor for MetricsRequest);
    *(_WORD *)(v139 + 32) = 2080;
    uint64_t v148 = sub_191CF5AB8();
    double v209 = COERCE_DOUBLE(sub_191C5C36C(v148, v149, (uint64_t *)&v214));
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    *(_WORD *)(v139 + 42) = 2080;
    double v209 = 0.0;
    unint64_t v210 = 0xE000000000000000;
    sub_191CF5D88();
    double v205 = v209;
    unint64_t v206 = v210;
    sub_191CF53B8();
    double v209 = 0.0;
    unint64_t v210 = 0;
    double v211 = v125;
    v212 = v129;
    type metadata accessor for CGRect(0);
    sub_191CF5F38();
    sub_191CF53B8();
    sub_191CF56C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    double v209 = COERCE_DOUBLE(sub_191C5C36C(*(uint64_t *)&v205, v206, (uint64_t *)&v214));
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    *(_WORD *)(v139 + 52) = 2080;
    uint64_t v232 = v139 + 54;
    uint64_t v150 = (uint64_t)v189;
    swift_beginAccess();
    uint64_t v151 = v192;
    uint64_t v142 = v197;
    v187(v192, v150, v197);
    double v205 = COERCE_DOUBLE(objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init));
    WidgetEnvironment.apply(environmentValues:)();
    uint64_t v143 = v170;
    (*(void (**)(char *, uint64_t))(v170 + 8))(v151, v142);
    double v152 = v205;
    double v205 = -2.31584178e77;
    unint64_t v206 = 0x8000000191D0CE80;
    WidgetEnvironment.Storage.debugDescription.getter();
    sub_191CF53B8();

    swift_bridgeObjectRelease();
    double v205 = COERCE_DOUBLE(sub_191C5C36C(*(uint64_t *)&v205, v206, (uint64_t *)&v214));
    uint64_t v92 = v150;
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    os_log_t v153 = v200;
    _os_log_impl(&dword_191AF4000, v200, (os_log_type_t)v193, "archive index: %ld, tag: %s, cornerRadius: %s, fitting size: %s, metadata metrics: %s, env: %s", (uint8_t *)v139, 0x3Eu);
    uint64_t v154 = v191;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v154, -1, -1);
    MEMORY[0x192FE5F00](v139, -1, -1);

    uint64_t v124 = (uint64_t)v195;
  }
  else
  {
    sub_191C2676C(v127, type metadata accessor for MetricsRequest);

    uint64_t v142 = v197;
    uint64_t v143 = v170;
  }
  sub_191CF4308();
  sub_191B01770(v198, &qword_1E92E1250);
  sub_191C2676C(v124, type metadata accessor for MetricsRequest);
  sub_191C2676C(v194, type metadata accessor for JindoMetricsDefinition);
  v155 = *(void (**)(char *, uint64_t))(v143 + 8);
  v155(v199, v142);
  return ((uint64_t (*)(uint64_t, uint64_t))v155)(v92, v142);
}

CGImageRef sub_191C250F0(CGImage *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v87 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v80 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF43A8();
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v81 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v84 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v89 = (uint64_t)&v76 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_191CF4058();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = 91;
  unint64_t v94 = 0xE100000000000000;
  LODWORD(Width) = CGImageGetIdentifier();
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  size_t Width = CGImageGetWidth(a1);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  size_t Width = CGImageGetHeight(a1);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  unint64_t v20 = v94;
  uint64_t v90 = v93;
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_191CF3858();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB44C888);
  swift_bridgeObjectRetain_n();
  uint64_t v79 = v22;
  uint64_t v23 = sub_191CF3838();
  os_log_type_t v24 = sub_191CF5948();
  BOOL v25 = os_log_type_enabled(v23, v24);
  CGImageRef v88 = a1;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v77 = v17;
    uint64_t v78 = v1;
    uint64_t v27 = v18;
    uint64_t v28 = (uint8_t *)v26;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v93 = v29;
    *(_DWORD *)uint64_t v28 = 136446210;
    swift_bridgeObjectRetain();
    size_t Width = sub_191C5C36C(v90, v20, &v93);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v23, v24, "%{public}s Filtering image", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v29, -1, -1);
    uint64_t v30 = v28;
    uint64_t v18 = v27;
    uint64_t v2 = v78;
    uint64_t v17 = v77;
    MEMORY[0x192FE5F00](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = v92;
  uint64_t v32 = type metadata accessor for JindoViewStates(0);
  uint64_t v33 = v91;
  sub_191B01614(v91 + *(int *)(v32 + 44), (uint64_t)v16, (uint64_t *)&unk_1EB44BBB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    swift_bridgeObjectRelease();
    sub_191B01770((uint64_t)v16, (uint64_t *)&unk_1EB44BBB8);
    sub_191C26718();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = xmmword_191D03A70;
    *(void *)(v34 + 16) = 0;
    *(void *)(v34 + 24) = 0;
    *(unsigned char *)(v34 + 32) = 0;
    swift_willThrow();
    return (CGImageRef)v32;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v31, v16, v17);
  uint64_t v35 = *(char *)(v33 + *(int *)(v32 + 40));
  if (v35 == 4)
  {
    swift_bridgeObjectRelease();
    sub_191C26718();
    swift_allocError();
    *(void *)uint64_t v36 = 0xD000000000000013;
    *(void *)(v36 + 8) = 0x8000000191D10980;
    *(void *)(v36 + 16) = 0;
    *(void *)(v36 + 24) = 0;
    *(unsigned char *)(v36 + 32) = 0;
    swift_willThrow();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v31, v17);
    return (CGImageRef)v32;
  }
  uint64_t v38 = (uint64_t)v81;
  sub_191CF3D88();
  uint64_t v39 = v89;
  ActivityMetricsDefinition.jindoMetrics(for:)(v38, v89);
  uint64_t v40 = v38;
  uint64_t v41 = v39;
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v40, v83);
  uint64_t v42 = v84;
  sub_191B01614(v39, v84, (uint64_t *)&unk_1E92E1BD8);
  uint64_t v43 = type metadata accessor for JindoMetricsDefinition(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43) == 1)
  {
    sub_191B01770(v42, (uint64_t *)&unk_1E92E1BD8);
    uint64_t v44 = v87;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v87, 1, 1, v86);
    swift_bridgeObjectRelease();
    sub_191B01770(v39, (uint64_t *)&unk_1E92E1BD8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v92, v17);
    sub_191B01770(v44, &qword_1E92E1A50);
    return v88;
  }
  uint64_t v45 = v42 + *(int *)(v43 + 4 * qword_191D03F50[v35]);
  uint64_t v46 = v87;
  sub_191C267CC(v45, v87, type metadata accessor for MetricsRequest);
  sub_191C2676C(v42, type metadata accessor for JindoMetricsDefinition);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v86);
  uint64_t v47 = v46;
  uint64_t v48 = v80;
  sub_191C26A78(v47, v80, type metadata accessor for MetricsRequest);
  if (v35) {
    double v49 = 1.5;
  }
  else {
    double v49 = 1.2;
  }
  if (v35) {
    double v50 = 2.0;
  }
  else {
    double v50 = 1.2;
  }
  uint64_t v31 = v92;
  sub_191CF3D68();
  uint64_t v52 = 8;
  if (!*(unsigned char *)(v48 + 16)) {
    uint64_t v52 = 0;
  }
  double v53 = fmax(v49 * (v51 * *(double *)(v48 + v52)), 80.0);
  uint64_t v54 = 24;
  if (*(unsigned char *)(v48 + 40)) {
    uint64_t v54 = 32;
  }
  double v55 = fmax(v50 * (v51 * *(double *)(v48 + v54)), 80.0);
  uint64_t v56 = v88;
  if (v53 <= (double)(uint64_t)CGImageGetWidth(v88) || v55 <= (double)(uint64_t)CGImageGetHeight(v56))
  {
    int64_t v62 = sub_191CBA1E4(v53, v55);
    if (!v62)
    {
      swift_bridgeObjectRetain();
      double v69 = sub_191CF3838();
      os_log_type_t v70 = sub_191CF5938();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        uint64_t v93 = v72;
        *(_DWORD *)uint64_t v71 = 136446722;
        uint64_t v91 = v18;
        swift_bridgeObjectRetain();
        size_t Width = sub_191C5C36C(v90, v20, &v93);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 12) = 2050;
        size_t Width = *(void *)&v53;
        sub_191CF5C08();
        *(_WORD *)(v71 + 22) = 2050;
        size_t Width = *(void *)&v55;
        uint64_t v18 = v91;
        uint64_t v31 = v92;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v69, v70, "%{public}s Max size exceeded: %{public}fx%{public}f; unable to create placeholder image",
          (uint8_t *)v71,
          0x20u);
        swift_arrayDestroy();
        uint64_t v73 = v72;
        uint64_t v56 = v88;
        MEMORY[0x192FE5F00](v73, -1, -1);
        MEMORY[0x192FE5F00](v71, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v32 = CGImageGetWidth(v56);
      double Height = (double)(uint64_t)CGImageGetHeight(v56);
      sub_191C26718();
      swift_allocError();
      *(double *)uint64_t v75 = (double)v32;
      *(double *)(v75 + 8) = Height;
      *(double *)(v75 + 16) = v53;
      *(double *)(v75 + 24) = v55;
      *(unsigned char *)(v75 + 32) = 1;
      swift_willThrow();
      sub_191C2676C(v80, type metadata accessor for MetricsRequest);
      sub_191B01770(v41, (uint64_t *)&unk_1E92E1BD8);
      goto LABEL_10;
    }
    uint64_t v32 = v62;
    swift_bridgeObjectRetain();
    double v63 = sub_191CF3838();
    os_log_type_t v64 = sub_191CF5938();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v78 = v2;
      uint64_t v66 = v65;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v91 = v18;
      uint64_t v68 = v67;
      uint64_t v93 = v67;
      *(_DWORD *)uint64_t v66 = 136446722;
      swift_bridgeObjectRetain();
      size_t Width = sub_191C5C36C(v90, v20, &v93);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2050;
      size_t Width = *(void *)&v53;
      sub_191CF5C08();
      *(_WORD *)(v66 + 22) = 2050;
      size_t Width = *(void *)&v55;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v63, v64, "%{public}s Max size exceeded: %{public}fx%{public}f; using placeholder image",
        (uint8_t *)v66,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v68, -1, -1);
      MEMORY[0x192FE5F00](v66, -1, -1);

      sub_191C2676C(v80, type metadata accessor for MetricsRequest);
      sub_191B01770(v89, (uint64_t *)&unk_1E92E1BD8);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v17);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_191C2676C(v80, type metadata accessor for MetricsRequest);
      sub_191B01770(v41, (uint64_t *)&unk_1E92E1BD8);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v31, v17);
    }
  }
  else
  {
    uint64_t v78 = v2;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_191CF3838();
    os_log_type_t v58 = sub_191CF5948();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v93 = v60;
      *(_DWORD *)uint64_t v59 = 136446210;
      swift_bridgeObjectRetain();
      size_t Width = sub_191C5C36C(v90, v20, &v93);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v57, v58, "%{public}s Image permitted", v59, 0xCu);
      swift_arrayDestroy();
      uint64_t v61 = v60;
      uint64_t v56 = v88;
      MEMORY[0x192FE5F00](v61, -1, -1);
      MEMORY[0x192FE5F00](v59, -1, -1);

      sub_191C2676C(v80, type metadata accessor for MetricsRequest);
      sub_191B01770(v89, (uint64_t *)&unk_1E92E1BD8);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v92, v17);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_191C2676C(v80, type metadata accessor for MetricsRequest);
      sub_191B01770(v89, (uint64_t *)&unk_1E92E1BD8);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v31, v17);
    }
    return v56;
  }
  return (CGImageRef)v32;
}

uint64_t sub_191C25F94()
{
  sub_191C275C4(v0, (uint64_t)&v3);
  if (v4)
  {
    uint64_t v2 = 0;
    sub_191CF5D88();
    sub_191CF53B8();
    type metadata accessor for CGSize(0);
    sub_191CF5F38();
    sub_191CF53B8();
    sub_191CF5F38();
  }
  else
  {
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    uint64_t v2 = 0x69666E6F6373694DLL;
    sub_191CF53B8();
  }
  return v2;
}

uint64_t sub_191C260FC()
{
  sub_191C275C4(v0, (uint64_t)v2);
  return sub_191C25F94();
}

uint64_t sub_191C26134@<X0>(void *a1@<X8>)
{
  return sub_191C22AA0(a1);
}

uint64_t sub_191C2614C(uint64_t a1, uint64_t a2)
{
  return sub_191C23734(a1, a2);
}

CGImageRef sub_191C26164(CGImage *a1)
{
  return sub_191C250F0(a1);
}

double sub_191C2617C@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_191CF4B28();
  v14.origin.double x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMidY(v14);
  sub_191CF4B08();
  v15.origin.double x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMaxX(v15);
  v16.origin.double x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinY(v16);
  sub_191CF4B18();
  v17.origin.double x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMaxX(v17);
  v18.origin.double x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMaxY(v18);
  sub_191CF4B18();
  sub_191CF4AF8();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

uint64_t (*sub_191C262C4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_191CF3928();
  return sub_191C26334;
}

uint64_t sub_191C2633C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C26A24();

  return MEMORY[0x1F40FC6D8](a1, a2, a3, v6);
}

uint64_t sub_191C263A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C26A24();

  return MEMORY[0x1F40FC690](a1, a2, a3, v6);
}

uint64_t sub_191C26404(uint64_t a1)
{
  unint64_t v2 = sub_191C26A24();

  return MEMORY[0x1F40FC6B0](a1, v2);
}

double sub_191C26450@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_191CF4B28();
  v14.origin.double x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMaxX(v14);
  v15.origin.double x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMidY(v15);
  sub_191CF4B08();
  v16.origin.double x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinX(v16);
  v17.origin.double x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMinY(v17);
  sub_191CF4B18();
  v18.origin.double x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMinX(v18);
  v19.origin.double x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMaxY(v19);
  sub_191CF4B18();
  sub_191CF4AF8();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_191C265A4()
{
  return MEMORY[0x1F40FC680]();
}

void sub_191C265BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_191C26604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C269D0();

  return MEMORY[0x1F40FC6D8](a1, a2, a3, v6);
}

uint64_t sub_191C26668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C269D0();

  return MEMORY[0x1F40FC690](a1, a2, a3, v6);
}

uint64_t sub_191C266CC(uint64_t a1)
{
  unint64_t v2 = sub_191C269D0();

  return MEMORY[0x1F40FC6B0](a1, v2);
}

unint64_t sub_191C26718()
{
  unint64_t result = qword_1E92E46B0;
  if (!qword_1E92E46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E46B0);
  }
  return result;
}

uint64_t sub_191C2676C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C267CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_191C26834()
{
  unint64_t result = qword_1E92E1248;
  if (!qword_1E92E1248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1250);
    sub_191C268E0();
    sub_191C227C4(&qword_1E92E17A8, (void (*)(uint64_t))type metadata accessor for CommonActivityArchivingModifiers);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1248);
  }
  return result;
}

unint64_t sub_191C268E0()
{
  unint64_t result = qword_1E92E1228;
  if (!qword_1E92E1228)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1228);
  }
  return result;
}

unint64_t sub_191C26954()
{
  unint64_t result = qword_1E92E1268;
  if (!qword_1E92E1268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1270);
    sub_191C26834();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1268);
  }
  return result;
}

unint64_t sub_191C269D0()
{
  unint64_t result = qword_1E92E1660;
  if (!qword_1E92E1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1660);
  }
  return result;
}

unint64_t sub_191C26A24()
{
  unint64_t result = qword_1E92E15B0[0];
  if (!qword_1E92E15B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E15B0);
  }
  return result;
}

uint64_t sub_191C26A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_191C26AE0()
{
  unint64_t result = qword_1E92E1C68;
  if (!qword_1E92E1C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C68);
  }
  return result;
}

unint64_t sub_191C26B34()
{
  unint64_t result = qword_1E92E0B78;
  if (!qword_1E92E0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0B78);
  }
  return result;
}

uint64_t sub_191C26B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C26BF0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1DD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191C26C6C()
{
  unint64_t result = qword_1E92E1670;
  if (!qword_1E92E1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JindoViewStates.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C26D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoViewStates.Metadata.CodingKeys()
{
  return &type metadata for JindoViewStates.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for LeadingConcentricClip()
{
  return &type metadata for LeadingConcentricClip;
}

ValueMetadata *type metadata accessor for TrailingConcentricClip()
{
  return &type metadata for TrailingConcentricClip;
}

uint64_t sub_191C26DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for JindoViewStates.ArchivingError(uint64_t a1)
{
  return sub_191C26E08(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_191C26E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_191C26DE4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_191C26DE4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_191C26E08(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_191C26E08(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoViewStates.ArchivingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JindoViewStates.ArchivingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191C26FCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_191C26FD4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JindoViewStates.ArchivingError()
{
  return &type metadata for JindoViewStates.ArchivingError;
}

uint64_t sub_191C26FF4()
{
  return sub_191C2709C(&qword_1E92E46B8, &qword_1E92E46C0);
}

unint64_t sub_191C27020()
{
  unint64_t result = qword_1E92E46C8;
  if (!qword_1E92E46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E46C8);
  }
  return result;
}

uint64_t sub_191C27074()
{
  return sub_191C2709C(&qword_1E92E46D0, &qword_1E92E46D8);
}

uint64_t sub_191C2709C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191C270F0()
{
  unint64_t result = qword_1E92E46E0;
  if (!qword_1E92E46E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E46E0);
  }
  return result;
}

unint64_t sub_191C27148()
{
  unint64_t result = qword_1E92E1C78;
  if (!qword_1E92E1C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C78);
  }
  return result;
}

unint64_t sub_191C271A0()
{
  unint64_t result = qword_1E92E1C70;
  if (!qword_1E92E1C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C70);
  }
  return result;
}

unint64_t sub_191C271F8()
{
  unint64_t result = qword_1E92E15A0;
  if (!qword_1E92E15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E15A0);
  }
  return result;
}

unint64_t sub_191C27250()
{
  unint64_t result = qword_1E92E15A8;
  if (!qword_1E92E15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E15A8);
  }
  return result;
}

unint64_t sub_191C272A8()
{
  unint64_t result = qword_1E92E1650;
  if (!qword_1E92E1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1650);
  }
  return result;
}

unint64_t sub_191C27300()
{
  unint64_t result = qword_1E92E1658;
  if (!qword_1E92E1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1658);
  }
  return result;
}

uint64_t sub_191C27354(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000191D109D0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F4379656BLL && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5255746567646977 && a2 == 0xE90000000000004CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_191C2752C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191BB4E38(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191C275C4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void BundleStub.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191CF34D8();
  swift_endAccess();
  uint64_t v10 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(self, sel_bundleWithIdentifier_, v10);

  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = sub_191C121C4();
    unint64_t v15 = v14;

    if (!v15)
    {
      uint64_t v13 = 0x6E776F6E6B6E55;
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xE700000000000000;
    }
    id v16 = objc_msgSend(v12, sel_bundleURL);
    sub_191CF3048();

    uint64_t v17 = sub_191CF3078();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
  }
  else
  {
    uint64_t v13 = 0x6E776F6E6B6E55;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_191CF3078();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
    unint64_t v15 = 0xE700000000000000;
  }
  sub_191CF3078();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  *(void *)&v6[*(int *)(v4 + 20)] = a1;
  sub_191C26B88((uint64_t)v9, (uint64_t)v6);
  CGRect v18 = (uint64_t *)&v6[*(int *)(v4 + 24)];
  *CGRect v18 = v13;
  v18[1] = v15;
  sub_191C27B7C((uint64_t)v6, a2);
}

uint64_t BundleStub.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191BD17C0(v1, a1);
}

uint64_t BundleStub.url.setter(uint64_t a1)
{
  return sub_191C26B88(a1, v1);
}

uint64_t (*BundleStub.url.modify())()
{
  return nullsub_1;
}

id BundleStub.identifier.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for BundleStub() + 20));

  return v1;
}

void BundleStub.identifier.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for BundleStub() + 20);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*BundleStub.identifier.modify())()
{
  return nullsub_1;
}

uint64_t BundleStub.version.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BundleStub() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleStub.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for BundleStub() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BundleStub.version.modify())()
{
  return nullsub_1;
}

uint64_t BundleStub.init(identifier:version:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 1, 1, v10);
  uint64_t v11 = type metadata accessor for BundleStub();
  *(void *)(a5 + *(int *)(v11 + 20)) = a1;
  uint64_t result = sub_191C26B88(a4, a5);
  uint64_t v13 = (void *)(a5 + *(int *)(v11 + 24));
  *uint64_t v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for BundleStub()
{
  uint64_t result = qword_1EB44BB58;
  if (!qword_1EB44BB58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C27B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C27BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1B08);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for BundleStub();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v21 - v15;
  sub_191C27DFC(a1, (uint64_t)v9);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) != 1)
  {
    sub_191C27B7C((uint64_t)v9, (uint64_t)v16);
    uint64_t v19 = (uint64_t)v16;
LABEL_6:
    sub_191C27B7C(v19, a2);
    uint64_t v18 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v18, 1, v10);
  }
  sub_191B01770((uint64_t)v9, (uint64_t *)&unk_1E92E1B08);
  sub_191C28274(a1, (uint64_t)v7);
  if (v17(v7, 1, v10) != 1)
  {
    sub_191C27B7C((uint64_t)v7, (uint64_t)v14);
    uint64_t v19 = (uint64_t)v14;
    goto LABEL_6;
  }
  sub_191B01770((uint64_t)v7, (uint64_t *)&unk_1E92E1B08);
  uint64_t v18 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v18, 1, v10);
}

uint64_t sub_191C27DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for BundleStub();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v38 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v39 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = sub_191CF3078();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v38 - v16;
  sub_191BD17C0(a1, (uint64_t)v10);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  uint64_t v40 = v4;
  if (v18 == 1)
  {
    sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
  id v24 = sub_191C29864((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  if (!v24)
  {
LABEL_4:
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    sub_191CF34D8();
    swift_endAccess();
    id v20 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
    id v21 = sub_191C77E90();
    id v24 = v21;
    if (!v21) {
      goto LABEL_5;
    }
  }
  id v25 = v24;
  id v26 = objc_msgSend(v25, sel_bundleIdentifier);
  if (v26)
  {

    id v27 = *(id *)(a1 + *(int *)(v3 + 20));
    id v28 = v25;
    uint64_t v29 = LSBundleRecord.safeBundleVersion.getter();
    uint64_t v31 = v30;

    id v32 = objc_msgSend(v28, sel_URL);
    uint64_t v33 = (uint64_t)v39;
    sub_191CF3048();

    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v34(v33, 0, 1, v11);
    uint64_t v35 = (uint64_t)v38;
    v34((uint64_t)v38, 1, 1, v11);
    *(void *)(v35 + *(int *)(v3 + 20)) = v27;
    sub_191C26B88(v33, v35);
    uint64_t v36 = (uint64_t *)(v35 + *(int *)(v3 + 24));
    *uint64_t v36 = v29;
    v36[1] = v31;
    uint64_t v23 = v41;
    sub_191C27B7C(v35, v41);

    uint64_t v22 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v23, v22, 1, v3);
  }

LABEL_5:
  uint64_t v22 = 1;
  uint64_t v23 = v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v23, v22, 1, v3);
}

uint64_t sub_191C28274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BundleStub();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_191CF3078();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  sub_191BD17C0(a1, (uint64_t)v13);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  uint64_t v38 = v11;
  if (v18 == 1)
  {
    sub_191B01770((uint64_t)v13, (uint64_t *)&unk_1EB44BBA8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    id v19 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
    uint64_t v20 = a2;
    id v21 = (void *)sub_191CF3038();
    id v22 = objc_msgSend(v19, sel_initWithURL_, v21);

    a2 = v20;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v22) {
      goto LABEL_5;
    }
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  sub_191CF34D8();
  swift_endAccess();
  uint64_t v23 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_bundleWithIdentifier_, v23);

  if (!v22)
  {
    uint64_t v35 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v35, 1, v4);
  }
LABEL_5:
  id v24 = v22;
  id v25 = objc_msgSend(v24, sel_bundleIdentifier);
  if (v25)
  {
    uint64_t v26 = a2;

    uint64_t v27 = sub_191C121C4();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = *(void **)(v39 + *(int *)(v4 + 20));
      uint64_t v39 = v27;
      id v37 = v30;
      id v31 = objc_msgSend(v24, sel_bundleURL);
      uint64_t v32 = (uint64_t)v38;
      sub_191CF3048();

      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v33(v32, 0, 1, v14);
      v33((uint64_t)v7, 1, 1, v14);
      *(void *)&v7[*(int *)(v4 + 20)] = v37;
      sub_191C26B88(v32, (uint64_t)v7);
      uint64_t v34 = &v7[*(int *)(v4 + 24)];
      *(void *)uint64_t v34 = v39;
      *((void *)v34 + 1) = v29;
      a2 = v26;
      sub_191C27B7C((uint64_t)v7, v26);
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
  }
  else
  {
    uint64_t v35 = 1;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v35, 1, v4);
}

uint64_t LSBundleRecord.safeBundleVersion.getter()
{
  id v1 = objc_msgSend(v0, sel_infoDictionary);
  uint64_t v2 = (void *)sub_191CF5318();
  sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  id v3 = objc_msgSend(v1, sel_objectForKey_ofClass_, v2, swift_getObjCClassFromMetadata());

  if (v3)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_191BC2C50((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
  }
  else
  {
    sub_191B01770((uint64_t)v7, (uint64_t *)&unk_1EB44BC90);
  }
  return 0x6E776F6E6B6E55;
}

uint64_t BundleStub.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD17C0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191CF6488();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191CF6488();
    sub_191C2AD2C(&qword_1E92E4520, MEMORY[0x1E4F276F0]);
    sub_191CF5278();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v9 = *(id *)(v1 + *(int *)(type metadata accessor for BundleStub() + 20));
  sub_191CF5B68();

  swift_bridgeObjectRetain();
  sub_191CF5388();
  return swift_bridgeObjectRelease();
}

uint64_t sub_191C28A0C()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6973726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_191C28A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C2ABD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C28A8C(uint64_t a1)
{
  unint64_t v2 = sub_191C29DC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C28AC8(uint64_t a1)
{
  unint64_t v2 = sub_191C29DC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BundleStub.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44A748);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C29DC8();
  sub_191CF6528();
  char v12 = 0;
  sub_191CF3078();
  sub_191C2AD2C(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
  sub_191CF6208();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for BundleStub() + 20));
    v10[15] = 1;
    sub_191CF5A88();
    sub_191C2AD2C(&qword_1EB44A308, MEMORY[0x1E4F58B88]);
    sub_191CF6278();
    v10[14] = 2;
    sub_191CF6218();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BundleStub.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF6468();
  sub_191BD17C0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191CF6488();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191CF6488();
    sub_191C2AD2C(&qword_1E92E4520, MEMORY[0x1E4F276F0]);
    sub_191CF5278();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for BundleStub();
  sub_191CF5B68();
  sub_191CF5388();
  return sub_191CF64C8();
}

void BundleStub.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448ED8);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v23);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF3078();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C29DC8();
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_191B01770((uint64_t)v11, (uint64_t *)&unk_1EB44BBA8);
  }
  else
  {
    uint64_t v13 = v21;
    char v27 = 0;
    sub_191C2AD2C(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    sub_191CF6108();
    sub_191C26B88((uint64_t)v6, (uint64_t)v11);
    sub_191CF5A88();
    char v26 = 1;
    sub_191C2AD2C(&qword_1EB448ED0, MEMORY[0x1E4F58B88]);
    sub_191CF6178();
    uint64_t v14 = v23;
    *(void *)&v11[*(int *)(v23 + 20)] = v24;
    char v25 = 2;
    uint64_t v15 = sub_191CF6118();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v22);
    int v18 = (uint64_t *)&v11[*(int *)(v14 + 24)];
    *int v18 = v15;
    v18[1] = v17;
    sub_191C29E1C((uint64_t)v11, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_191C29E80((uint64_t)v11);
  }
}

void sub_191C29300(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_191C29318(void *a1)
{
  return BundleStub.encode(to:)(a1);
}

uint64_t sub_191C29334()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD17C0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191CF6488();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191CF6488();
    sub_191C2AD2C(&qword_1E92E4520, MEMORY[0x1E4F276F0]);
    sub_191CF5278();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_191CF5B68();
  return sub_191CF5388();
}

uint64_t sub_191C2952C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF3078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF6468();
  sub_191BD17C0(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191CF6488();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191CF6488();
    sub_191C2AD2C(&qword_1E92E4520, MEMORY[0x1E4F276F0]);
    sub_191CF5278();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_191CF5B68();
  sub_191CF5388();
  return sub_191CF64C8();
}

uint64_t LSBundleProxy.safeBundleVersion.getter()
{
  uint64_t v1 = (void *)sub_191CF5318();
  sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  id v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_ofClass_, v1, swift_getObjCClassFromMetadata());

  if (v2)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_191BC2C50((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_191B01770((uint64_t)v6, (uint64_t *)&unk_1EB44BC90);
  }
  return 0x6E776F6E6B6E55;
}

id sub_191C29864(uint64_t a1)
{
  id v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_191CF3038();
  v13[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithURL_error_, v4, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_191CF3078();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_191CF2FE8();

    swift_willThrow();
    uint64_t v11 = sub_191CF3078();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t _s9WidgetKit10BundleStubV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  int v18 = (char *)&v34 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v34 = a1;
  sub_191BD17C0(a1, (uint64_t)&v34 - v19);
  uint64_t v35 = a2;
  sub_191BD17C0(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_191BD17C0((uint64_t)v20, (uint64_t)v11);
  sub_191BD17C0((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_191B01770((uint64_t)v18, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44BBA8);
    if (v22(v21, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v11, (uint64_t *)&unk_1EB44BBA8);
      goto LABEL_8;
    }
LABEL_6:
    sub_191B01770((uint64_t)v11, &qword_1E92E19C0);
    char v23 = 0;
    return v23 & 1;
  }
  sub_191BD17C0((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_191B01770((uint64_t)v18, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44BBA8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  sub_191C2AD2C(&qword_1E92E3618, MEMORY[0x1E4F276F0]);
  char v24 = sub_191CF52F8();
  char v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v7, v4);
  sub_191B01770((uint64_t)v18, (uint64_t *)&unk_1EB44BBA8);
  sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44BBA8);
  v25(v15, v4);
  sub_191B01770((uint64_t)v11, (uint64_t *)&unk_1EB44BBA8);
  if ((v24 & 1) == 0)
  {
LABEL_12:
    char v23 = 0;
    return v23 & 1;
  }
LABEL_8:
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  uint64_t v26 = type metadata accessor for BundleStub();
  uint64_t v28 = v34;
  uint64_t v27 = v35;
  if ((sub_191CF5B58() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v29 = *(int *)(v26 + 24);
  uint64_t v30 = *(void *)(v28 + v29);
  uint64_t v31 = *(void *)(v28 + v29 + 8);
  uint64_t v32 = (void *)(v27 + v29);
  if (v30 == *v32 && v31 == v32[1]) {
    char v23 = 1;
  }
  else {
    char v23 = sub_191CF6348();
  }
  return v23 & 1;
}

unint64_t sub_191C29DC8()
{
  unint64_t result = qword_1EB44A7F8;
  if (!qword_1EB44A7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A7F8);
  }
  return result;
}

uint64_t sub_191C29E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C29E80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191C29EDC()
{
  return sub_191C2AD2C(&qword_1E92E46E8, (void (*)(uint64_t))type metadata accessor for BundleStub);
}

uint64_t *initializeBufferWithCopyOfBuffer for BundleStub(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF3078();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    id v17 = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BundleStub(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  id v15 = v11;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(void **)&a2[v12];
  uint64_t v14 = *(void **)&a1[v12];
  *(void *)&a1[v12] = v13;
  id v15 = v13;

  uint64_t v16 = *(int *)(a3 + 24);
  id v17 = &a1[v16];
  int v18 = &a2[v16];
  *(void *)id v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *assignWithTake for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = *(int *)(a3 + 24);
  id v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)id v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleStub(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C2A790);
}

uint64_t sub_191C2A790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for BundleStub(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C2A868);
}

uint64_t sub_191C2A868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_191C2A928()
{
  sub_191B9DFF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for BundleStub.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C2AA98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleStub.CodingKeys()
{
  return &type metadata for BundleStub.CodingKeys;
}

unint64_t sub_191C2AAD4()
{
  unint64_t result = qword_1E92E46F0;
  if (!qword_1E92E46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E46F0);
  }
  return result;
}

unint64_t sub_191C2AB2C()
{
  unint64_t result = qword_1EB44A808;
  if (!qword_1EB44A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A808);
  }
  return result;
}

unint64_t sub_191C2AB84()
{
  unint64_t result = qword_1EB44A800;
  if (!qword_1EB44A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A800);
  }
  return result;
}

uint64_t sub_191C2ABD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_191C2AD2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C2AD74(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_191C2ADB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5168();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_191CF51C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (objc_msgSend(self, sel_isMainThread))
  {
    uint64_t v12 = sub_191CF5698();
    MEMORY[0x1F4188790](v12);
    *(void *)&v16[-16] = a1;
    *(void *)&v16[-8] = a2;
    return sub_191C2B180((uint64_t)sub_191C2B150, (uint64_t)&v16[-32]);
  }
  else
  {
    sub_191BBE468();
    uint64_t v14 = (void *)sub_191CF5A18();
    aBlock[4] = a1;
    aBlock[5] = a2;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191C2AD74;
    aBlock[3] = &block_descriptor_4;
    id v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_191CF5188();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_191C2B09C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191C2B0F4();
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

unint64_t sub_191C2B09C()
{
  unint64_t result = qword_1EB44C688;
  if (!qword_1EB44C688)
  {
    sub_191CF5168();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44C688);
  }
  return result;
}

unint64_t sub_191C2B0F4()
{
  unint64_t result = qword_1EB44C698;
  if (!qword_1EB44C698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44C690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44C698);
  }
  return result;
}

uint64_t sub_191C2B150()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191C2B180(uint64_t a1, uint64_t a2)
{
  sub_191CF5688();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_191C2B31C();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191C2B30C()
{
  return swift_deallocObject();
}

uint64_t sub_191C2B31C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_191C2B424(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v9 = (void *)sub_191CF5528();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_191C2BA14(a2, (uint64_t)v8);
  uint64_t v10 = sub_191CF31D8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    uint64_t v12 = (void *)sub_191CF3198();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t v13 = (objc_class *)type metadata accessor for WidgetHostContext();
  v17.receiver = v3;
  v17.super_class = v13;
  id v14 = objc_msgSendSuper2(&v17, sel_initWithInputItems_contextUUID_, v9, v12);

  id v15 = v14;
  sub_191C2BA7C(a2);
  if (v15) {

  }
  return v15;
}

id sub_191C2B6E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA60);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = (void *)sub_191CF5528();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_191C2BA14(a3, (uint64_t)v10);
  uint64_t v12 = sub_191CF31D8();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    id v14 = (void *)sub_191CF3198();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  id v15 = (objc_class *)type metadata accessor for WidgetHostContext();
  v19.receiver = v4;
  v19.super_class = v15;
  id v16 = objc_msgSendSuper2(&v19, sel_initWithInputItems_listenerEndpoint_contextUUID_, v11, a2, v14);

  id v17 = v16;
  sub_191C2BA7C(a3);
  if (v17) {

  }
  return v17;
}

id sub_191C2B9BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetHostContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WidgetHostContext()
{
  return self;
}

uint64_t sub_191C2BA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C2BA7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id static WidgetRelevanceFetchResult.defaultImplementationResult.getter()
{
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
  uint64_t v2 = v1;
  *(void *)&v2[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_191C2BF48(MEMORY[0x1E4FBC860]);

  v4.receiver = v2;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, sel_init);
}

id WidgetRelevanceFetchResult.__allocating_init(widgetRelevances:)(unint64_t a1)
{
  int v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  objc_super v4 = v3;
  uint64_t v5 = sub_191C2BF48(a1);
  swift_bridgeObjectRelease();
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

  v7.receiver = v4;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t WidgetRelevanceFetchResult.isDefaultImplementation.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation);
}

uint64_t WidgetRelevanceFetchResult.widgetRelevances.getter()
{
  return swift_bridgeObjectRetain();
}

id WidgetRelevanceFetchResult.init(widgetRelevances:)(unint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  objc_super v4 = v1;
  uint64_t v5 = sub_191C2BF48(a1);
  swift_bridgeObjectRelease();
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

  v7.receiver = v4;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t static WidgetRelevanceFetchResult.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetRelevanceFetchResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_191C2C2AC(a1);

  return v4;
}

id WidgetRelevanceFetchResult.init(coder:)(void *a1)
{
  id v2 = sub_191C2C2AC(a1);

  return v2;
}

Swift::Void __swiftcall WidgetRelevanceFetchResult.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation);
  id v4 = (void *)sub_191CF5318();
  [(objc_class *)with.super.isa encodeBool:v3 forKey:v4];

  sub_191B016E0(0, (unint64_t *)&qword_1EB44ABD0);
  uint64_t v5 = (void *)sub_191CF5528();
  id v6 = (id)sub_191CF5318();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
}

id WidgetRelevanceFetchResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191C2BF48(unint64_t a1)
{
  uint64_t v2 = a1;
  unint64_t v3 = a1 >> 62;
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 101) {
      goto LABEL_3;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    return v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (v19 < 101) {
    goto LABEL_39;
  }
LABEL_3:
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191CF3858();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
  uint64_t v5 = sub_191CF3838();
  os_log_type_t v6 = sub_191CF5928();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v1 = 12;
    objc_super v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)objc_super v7 = 134217984;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v5, v6, "Too many widget relevances. Truncating to %ld.", v7, 0xCu);
    MEMORY[0x192FE5F00](v7, -1, -1);
  }

  if (!v3)
  {
    if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 100) {
      unint64_t v1 = 100;
    }
    else {
      unint64_t v1 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (v2 < 0) {
    uint64_t v8 = v2;
  }
  else {
    uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_191CF6018();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (v10 < 0)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v9 >= 100) {
    uint64_t v11 = 100;
  }
  else {
    uint64_t v11 = v9;
  }
  if (v9 >= 0) {
    unint64_t v1 = v11;
  }
  else {
    unint64_t v1 = 100;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (v8 < (uint64_t)v1) {
    goto LABEL_42;
  }
LABEL_23:
  if ((v2 & 0xC000000000000001) != 0 && v1)
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44ABD0);
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v12 + 1;
      sub_191CF5DD8();
      uint64_t v12 = v13;
    }
    while (v1 != v13);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_191CF6028();
    uint64_t v10 = v14;
    uint64_t v9 = v15;
    unint64_t v1 = v16;
    swift_bridgeObjectRelease_n();
    if (v1) {
      goto LABEL_32;
    }
LABEL_31:
    uint64_t v2 = sub_191AFB730(v8, v10, v9, v1);
    swift_unknownObjectRelease();
    return v2;
  }
  uint64_t v9 = 0;
  uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  unint64_t v1 = (2 * v1) | 1;
  if ((v1 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_32:
  sub_191CF6378();
  swift_unknownObjectRetain_n();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = *(void *)(v17 + 16);
  swift_release();
  if (__OFSUB__(v1 >> 1, v9)) {
    goto LABEL_43;
  }
  if (v18 != (v1 >> 1) - v9)
  {
LABEL_44:
    swift_unknownObjectRelease();
    goto LABEL_31;
  }
  uint64_t v2 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v2;
}

id sub_191C2C2AC(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = v2;
  os_log_type_t v6 = (void *)sub_191CF5318();
  unsigned __int8 v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B040);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_191CF8420;
  *(void *)(v8 + 32) = sub_191B016E0(0, (unint64_t *)&unk_1EB44C720);
  *(void *)(v8 + 40) = sub_191B016E0(0, (unint64_t *)&qword_1EB44ABD0);
  sub_191CF5AD8();
  id result = (id)swift_bridgeObjectRelease();
  if (v15)
  {
    sub_191B4F9C0(&v14, &v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0F80);
    swift_dynamicCast();
    unint64_t v10 = v13;
    v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = v7;
    uint64_t v11 = sub_191C2BF48(v10);
    swift_bridgeObjectRelease();
    *(void *)&v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v11;

    v12.receiver = v5;
    v12.super_class = ObjectType;
    return objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WidgetRelevanceFetchResult()
{
  return self;
}

uint64_t method lookup function for WidgetRelevanceFetchResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetRelevanceFetchResult);
}

uint64_t dispatch thunk of WidgetRelevanceFetchResult.__allocating_init(widgetRelevances:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetRelevanceFetchResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_191C2C4B8()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CA70 = result;
  return result;
}

uint64_t sub_191C2C4E0()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A888);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA58 = v0;
  unk_1EB44CA60 = 0xD000000000000010;
  qword_1EB44CA68 = 0x8000000191D0DC90;
  return result;
}

ValueMetadata *type metadata accessor for RedactionReasonsKey()
{
  return &type metadata for RedactionReasonsKey;
}

uint64_t sub_191C2C568()
{
  if (qword_1EB44A850 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191C2C5C4()
{
  return sub_191CF3C48();
}

uint64_t sub_191C2C5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3C58();
  *a1 = result;
  return result;
}

uint64_t sub_191C2C62C()
{
  if (qword_1EB44A9A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA58;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191C2C6B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 192) = v2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = a2;
  *(void *)(v3 + 200) = type metadata accessor for ControlTemplateButton(0);
  *(void *)(v3 + 208) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  *(void *)(v3 + 216) = swift_task_alloc();
  type metadata accessor for ControlTemplateButton.Option(0);
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  *(void *)(v3 + 240) = swift_task_alloc();
  *(void *)(v3 + 248) = swift_task_alloc();
  uint64_t v4 = sub_191CF4898();
  *(void *)(v3 + 256) = v4;
  *(void *)(v3 + 264) = *(void *)(v4 - 8);
  *(void *)(v3 + 272) = swift_task_alloc();
  *(void *)(v3 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  *(void *)(v3 + 288) = swift_task_alloc();
  *(void *)(v3 + 296) = swift_task_alloc();
  uint64_t v5 = sub_191CF4058();
  *(void *)(v3 + 304) = v5;
  *(void *)(v3 + 312) = *(void *)(v5 - 8);
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  *(void *)(v3 + 336) = swift_task_alloc();
  *(void *)(v3 + 344) = sub_191CF5698();
  *(void *)(v3 + 352) = sub_191CF5688();
  *(unsigned char *)(v3 + 169) = *(unsigned char *)(v2 + 32);
  long long v6 = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v3 + 360) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(v3 + 376) = v6;
  *(_OWORD *)(v3 + 392) = *(_OWORD *)(v2 + 88);
  unsigned __int8 v7 = *(int **)(v2 + 104);
  uint64_t v8 = *(void *)(v2 + 120);
  *(void *)(v3 + 408) = v8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v7 + *v7);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 416) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_191C2C9C0;
  return v11(v3 + 16, v8);
}

uint64_t sub_191C2C9C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0)
  {
    uint64_t v5 = sub_191C2E514;
  }
  else
  {
    *(void *)(v2 + 432) = v3;
    *(void *)(v2 + 440) = v4;
    uint64_t v5 = sub_191C2CB24;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_191C2CB24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 448) = v1;
  *(void *)(v0 + 456) = v2;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v0 + 464) = v3;
  *(void *)(v0 + 472) = v4;
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  *(void *)(v0 + 480) = v5;
  *(void *)(v0 + 488) = v6;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  *(void *)(v0 + 496) = v7;
  *(void *)(v0 + 504) = v8;
  uint64_t v9 = *(void *)(v0 + 80);
  *(void *)(v0 + 512) = v9;
  if (v1 == 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    char v16 = 1;
  }
  else
  {
    swift_retain();
    uint64_t v71 = v2;
    sub_191BB92FC(v2, v3, v4, v5);
    uint64_t v65 = v9;
    sub_191BB92FC(v6, v7, v8, v9);
    _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
    if (v1)
    {
      sub_191CF4DB8();
      unint64_t v19 = v17 | ((unint64_t)v18 << 32);
      unint64_t v22 = v20 | ((unint64_t)v21 << 32);
    }
    else
    {
      unint64_t v19 = 0;
      unint64_t v22 = 0;
    }
    uint64_t v69 = v4;
    uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 312) + 16);
    v72(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 304));
    uint64_t v70 = v3;
    uint64_t v68 = v5;
    uint64_t v55 = v1;
    uint64_t v66 = v7;
    uint64_t v67 = v6;
    if (v1)
    {
      unint64_t v53 = v22;
      unint64_t v54 = v19;
      char v52 = 0;
    }
    else
    {
      sub_191B163D4();
      sub_191CF4068();
      unint64_t v53 = *(void *)(v0 + 160);
      unint64_t v54 = *(void *)(v0 + 152);
      char v52 = *(unsigned char *)(v0 + 168);
    }
    uint64_t v23 = *(void *)(v0 + 336);
    uint64_t v24 = *(void *)(v0 + 320);
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v58 = *(void *)(v0 + 296);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v60 = *(void *)(v0 + 280);
    uint64_t v62 = *(void *)(v0 + 256);
    uint64_t v63 = *(void *)(v0 + 184);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 312) + 8);
    v27(*(void *)(v0 + 328), v25);
    v27(v23, v25);
    *(void *)(v0 + 88) = v71;
    *(void *)(v0 + 96) = v70;
    *(void *)(v0 + 104) = v69;
    *(void *)(v0 + 112) = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD8);
    swift_allocObject();
    sub_191BB92FC(v71, v70, v69, v5);
    sub_191BB92FC(v71, v70, v69, v5);
    sub_191CF4558();
    v72(v24, v63, v25);
    sub_191CF44F8();
    sub_191CF4528();
    swift_release();
    sub_191BB9340(v71, v70, v69, v5);
    sub_191CF4758();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v60, v62);
    uint64_t v29 = sub_191CF47A8();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    int v32 = v31(v58, 1, v29);
    uint64_t v33 = *(void *)(v0 + 296);
    uint64_t v49 = v30;
    os_log_type_t v64 = v28;
    uint64_t v61 = v31;
    if (v32 == 1)
    {
      sub_191B01770(v33, &qword_1E92E2338);
      uint64_t v50 = 0;
      uint64_t v51 = 0;
    }
    else
    {
      uint64_t v34 = (void *)sub_191CF4798();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
      id v35 = objc_msgSend(v34, sel_string);

      uint64_t v50 = sub_191CF5338();
      uint64_t v51 = v36;
    }
    uint64_t v37 = *(void *)(v0 + 320);
    uint64_t v56 = *(void *)(v0 + 304);
    uint64_t v57 = *(void *)(v0 + 288);
    uint64_t v38 = *(void *)(v0 + 272);
    uint64_t v59 = *(void *)(v0 + 256);
    uint64_t v39 = *(void *)(v0 + 184);
    *(void *)(v0 + 120) = v67;
    *(void *)(v0 + 128) = v66;
    *(void *)(v0 + 136) = v8;
    *(void *)(v0 + 144) = v65;
    swift_allocObject();
    sub_191BB92FC(v67, v66, v8, v65);
    sub_191BB92FC(v67, v66, v8, v65);
    sub_191CF4558();
    v72(v37, v39, v56);
    sub_191CF44F8();
    sub_191CF4528();
    swift_release();
    sub_191BB9340(v67, v66, v8, v65);
    sub_191CF4758();
    v64(v38, v59);
    int v40 = v61(v57, 1, v29);
    uint64_t v41 = *(void *)(v0 + 288);
    if (v40 == 1)
    {
      sub_191C2EB50(v55, v71, v70, v69, v68, v67, v66, v8, v65);
      sub_191B01770(v41, &qword_1E92E2338);
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v42 = (void *)sub_191CF4798();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v41, v29);
      id v43 = objc_msgSend(v42, sel_string);

      uint64_t v14 = sub_191CF5338();
      uint64_t v15 = v44;

      sub_191C2EB50(v55, v71, v70, v69, v68, v67, v66, v8, v65);
    }
    unint64_t v12 = v53;
    unint64_t v13 = v54;
    char v16 = v52;
    uint64_t v11 = v50;
    uint64_t v10 = v51;
  }
  *(void *)(v0 + 560) = v15;
  *(void *)(v0 + 552) = v14;
  *(void *)(v0 + 544) = v13;
  *(void *)(v0 + 536) = v12;
  *(void *)(v0 + 528) = v11;
  *(void *)(v0 + 520) = v10;
  uint64_t v45 = *(int **)(v0 + 376);
  *(unsigned char *)(v0 + 170) = v16;
  uint64_t v73 = (int *)((char *)v45 + *v45);
  uint64_t v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 568) = v46;
  void *v46 = v0;
  v46[1] = sub_191C2D168;
  uint64_t v47 = *(void *)(v0 + 408);
  return ((uint64_t (*)(uint64_t, void))v73)(v47, 0);
}

uint64_t sub_191C2D168(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[72] = a1;
  v3[73] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[54];
    uint64_t v5 = v3[55];
    uint64_t v6 = sub_191C2E628;
  }
  else
  {
    uint64_t v4 = v3[54];
    uint64_t v5 = v3[55];
    uint64_t v6 = sub_191C2D294;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191C2D294()
{
  uint64_t v1 = *(int **)(v0 + 392);
  if (v1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_191C2D588;
    uint64_t v3 = *(void *)(v0 + 408);
    uint64_t v4 = 0;
LABEL_3:
    return v10(v3, v4);
  }
  uint64_t v6 = *(void *)(v0 + 584);
  sub_191C2EBE8(*(void *)(v0 + 576), 0, *(void *)(v0 + 184), *(void *)(v0 + 544), *(void *)(v0 + 536), *(unsigned __int8 *)(v0 + 170), *(void *)(v0 + 528), *(uint64_t **)(v0 + 248), *(void *)(v0 + 520), *(void *)(v0 + 552), *(void *)(v0 + 560));
  if (!v6)
  {
    uint64_t v8 = *(int **)(v0 + 376);
    swift_release();
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v8 + *v8);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_191C2D944;
    uint64_t v3 = *(void *)(v0 + 408);
    uint64_t v4 = 1;
    goto LABEL_3;
  }
  sub_191C2EB50(*(void *)(v0 + 448), *(void *)(v0 + 456), *(void *)(v0 + 464), *(void *)(v0 + 472), *(void *)(v0 + 480), *(void *)(v0 + 488), *(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_191C2D588(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 600) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_191C2E75C;
  }
  else
  {
    v4[76] = a1;
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_191C2D6CC;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_191C2D6CC()
{
  uint64_t v1 = *(void *)(v0 + 600);
  sub_191C2EBE8(*(void *)(v0 + 576), *(void *)(v0 + 608), *(void *)(v0 + 184), *(void *)(v0 + 544), *(void *)(v0 + 536), *(unsigned __int8 *)(v0 + 170), *(void *)(v0 + 528), *(uint64_t **)(v0 + 248), *(void *)(v0 + 520), *(void *)(v0 + 552), *(void *)(v0 + 560));
  if (v1)
  {
    sub_191C2EB50(*(void *)(v0 + 448), *(void *)(v0 + 456), *(void *)(v0 + 464), *(void *)(v0 + 472), *(void *)(v0 + 480), *(void *)(v0 + 488), *(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512));
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(int **)(v0 + 376);
    swift_release();
    swift_release();
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_191C2D944;
    uint64_t v6 = *(void *)(v0 + 408);
    return v7(v6, 1);
  }
}

uint64_t sub_191C2D944(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[78] = a1;
  v3[79] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[54];
    uint64_t v5 = v3[55];
    uint64_t v6 = sub_191C2E890;
  }
  else
  {
    uint64_t v4 = v3[54];
    uint64_t v5 = v3[55];
    uint64_t v6 = sub_191C2DA70;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191C2DA70()
{
  void (*v24)(void *__return_ptr, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  void v40[3];
  uint64_t v41;
  uint64_t v42;

  uint64_t v41 = v0;
  uint64_t v1 = *(int **)(v0 + 392);
  if (v1)
  {
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_191C2DF74;
    uint64_t v3 = *(void *)(v0 + 408);
    return v38(v3, 1);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(void *)(v0 + 632);
    sub_191C2EBE8(*(void *)(v0 + 624), 0, *(void *)(v0 + 184), *(void *)(v0 + 544), *(void *)(v0 + 536), *(unsigned __int8 *)(v0 + 170), *(void *)(v0 + 528), *(uint64_t **)(v0 + 240), *(void *)(v0 + 520), *(void *)(v0 + 552), *(void *)(v0 + 560));
    uint64_t v6 = *(void *)(v0 + 504);
    uint64_t v7 = *(void *)(v0 + 512);
    uint64_t v9 = *(void *)(v0 + 488);
    uint64_t v8 = *(void *)(v0 + 496);
    uint64_t v10 = *(void *)(v0 + 480);
    uint64_t v39 = *(void *)(v0 + 472);
    uint64_t v37 = *(void *)(v0 + 464);
    uint64_t v11 = *(void *)(v0 + 448);
    uint64_t v36 = *(void *)(v0 + 456);
    if (v5)
    {
      sub_191C2F3B4(*(void *)(v0 + 248));
      sub_191C2EB50(v11, v36, v37, v39, v10, v9, v8, v6, v7);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v34 = *(void *)(v0 + 504);
      uint64_t v24 = *(void (**)(void *__return_ptr, uint64_t))(v0 + 360);
      uint64_t v28 = *(unsigned char *)(v0 + 169);
      int v32 = *(void *)(v0 + 480);
      uint64_t v13 = *(void *)(v0 + 248);
      uint64_t v29 = v13;
      uint64_t v30 = *(void *)(v0 + 512);
      uint64_t v15 = *(void *)(v0 + 232);
      uint64_t v14 = *(void *)(v0 + 240);
      uint64_t v16 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 216);
      uint64_t v26 = v14;
      uint64_t v33 = *(void *)(v0 + 496);
      uint64_t v31 = *(void *)(v0 + 488);
      unsigned int v18 = *(int **)(v0 + 200);
      uint64_t v17 = *(void *)(v0 + 208);
      uint64_t v27 = *(void *)(v0 + 176);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191C2F410(v13, v15);
      uint64_t v19 = sub_191C2F410(v14, v16);
      v24(v40, v19);
      id v35 = v40[0];
      uint64_t v20 = sub_191CF3078();
      unsigned int v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
      v21(v25, 1, 1, v20);
      uint64_t v22 = v17 + v18[7];
      v21(v22, 1, 1, v20);
      uint64_t v23 = (void *)(v17 + v18[10]);
      *uint64_t v23 = 0;
      v23[1] = 0;
      sub_191B88724(v15, v17, type metadata accessor for ControlTemplateButton.Option);
      sub_191B88724(v16, v17 + v18[5], type metadata accessor for ControlTemplateButton.Option);
      *(void *)(v17 + v18[6]) = v35;
      sub_191B28FA4(v25, v22, (uint64_t *)&unk_1EB44BBA8);
      *(unsigned char *)(v17 + v18[8]) = 0;
      *(unsigned char *)(v17 + v18[9]) = v28;
      swift_bridgeObjectRelease();
      *uint64_t v23 = 0;
      v23[1] = 0;
      *(unsigned char *)(v17 + v18[11]) = 0;
      sub_191B88724(v17, v27, type metadata accessor for ControlTemplateButton);
      sub_191C2EB50(v11, v36, v37, v39, v32, v31, v33, v34, v30);
      sub_191C2F3B4(v26);
      sub_191C2F3B4(v29);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    unint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_191C2DF74(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 648) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_191C2E9F0;
  }
  else
  {
    v4[82] = a1;
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_191C2E0B8;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_191C2E0B8()
{
  void (*v21)(void *__return_ptr, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v36[3];
  uint64_t v37;
  uint64_t v38;

  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 656);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 648);
  sub_191C2EBE8(*(void *)(v0 + 624), v1, *(void *)(v0 + 184), *(void *)(v0 + 544), *(void *)(v0 + 536), *(unsigned __int8 *)(v0 + 170), *(void *)(v0 + 528), *(uint64_t **)(v0 + 240), *(void *)(v0 + 520), *(void *)(v0 + 552), *(void *)(v0 + 560));
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v6 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 496);
  uint64_t v7 = *(void *)(v0 + 480);
  id v35 = *(void *)(v0 + 472);
  uint64_t v34 = *(void *)(v0 + 464);
  uint64_t v33 = *(void *)(v0 + 456);
  int v32 = *(void *)(v0 + 448);
  if (v2)
  {
    sub_191C2F3B4(*(void *)(v0 + 248));
    sub_191C2EB50(v32, v33, v34, v35, v7, v6, v5, v3, v4);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    unsigned int v21 = *(void (**)(void *__return_ptr, uint64_t))(v0 + 360);
    uint64_t v24 = *(unsigned char *)(v0 + 169);
    uint64_t v30 = *(void *)(v0 + 504);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v25 = v9;
    uint64_t v26 = *(void *)(v0 + 512);
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v28 = *(void *)(v0 + 496);
    uint64_t v29 = *(void *)(v0 + 488);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 480);
    uint64_t v14 = *(int **)(v0 + 200);
    uint64_t v23 = *(void *)(v0 + 176);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191C2F410(v9, v11);
    uint64_t v15 = sub_191C2F410(v10, v12);
    v21(v36, v15);
    uint64_t v31 = v36[0];
    uint64_t v16 = sub_191CF3078();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v22, 1, 1, v16);
    uint64_t v18 = v13 + v14[7];
    v17(v18, 1, 1, v16);
    uint64_t v19 = (void *)(v13 + v14[10]);
    *uint64_t v19 = 0;
    v19[1] = 0;
    sub_191B88724(v11, v13, type metadata accessor for ControlTemplateButton.Option);
    sub_191B88724(v12, v13 + v14[5], type metadata accessor for ControlTemplateButton.Option);
    *(void *)(v13 + v14[6]) = v31;
    sub_191B28FA4(v22, v18, (uint64_t *)&unk_1EB44BBA8);
    *(unsigned char *)(v13 + v14[8]) = 0;
    *(unsigned char *)(v13 + v14[9]) = v24;
    swift_bridgeObjectRelease();
    *uint64_t v19 = 0;
    v19[1] = 0;
    *(unsigned char *)(v13 + v14[11]) = 0;
    sub_191B88724(v13, v23, type metadata accessor for ControlTemplateButton);
    sub_191C2EB50(v32, v33, v34, v35, v27, v29, v28, v30, v26);
    sub_191C2F3B4(v10);
    sub_191C2F3B4(v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_191C2E514()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C2E628()
{
  sub_191C2EB50(v0[56], v0[57], v0[58], v0[59], v0[60], v0[61], v0[62], v0[63], v0[64]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191C2E75C()
{
  sub_191C2EB50(v0[56], v0[57], v0[58], v0[59], v0[60], v0[61], v0[62], v0[63], v0[64]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191C2E890()
{
  uint64_t v1 = v0[64];
  uint64_t v12 = v0[63];
  uint64_t v3 = v0[61];
  uint64_t v2 = v0[62];
  uint64_t v5 = v0[59];
  uint64_t v4 = v0[60];
  uint64_t v7 = v0[57];
  uint64_t v6 = v0[58];
  uint64_t v8 = v0[56];
  uint64_t v9 = v0[31];
  swift_release();
  sub_191C2EB50(v8, v7, v6, v5, v4, v3, v2, v12, v1);
  sub_191C2F3B4(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_191C2E9F0()
{
  uint64_t v1 = v0[64];
  uint64_t v12 = v0[63];
  uint64_t v3 = v0[61];
  uint64_t v2 = v0[62];
  uint64_t v5 = v0[59];
  uint64_t v4 = v0[60];
  uint64_t v7 = v0[57];
  uint64_t v6 = v0[58];
  uint64_t v8 = v0[56];
  uint64_t v9 = v0[31];
  swift_release();
  sub_191C2EB50(v8, v7, v6, v5, v4, v3, v2, v12, v1);
  sub_191C2F3B4(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_191C2EB50(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (result != 1)
  {
    swift_release();
    sub_191BB9340(a2, a3, a4, a5);
    return sub_191BB9340(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_191C2EBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v87 = a7;
  int v86 = a6;
  uint64_t v84 = a4;
  uint64_t v85 = a5;
  uint64_t v74 = a3;
  uint64_t v81 = a2;
  uint64_t v83 = a8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v82 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v68 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (uint64_t)&v68 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v73 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v68 - v22;
  uint64_t v24 = sub_191CF4058();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_191CF4898();
  uint64_t v79 = *(void *)(v89 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v89);
  uint64_t v72 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v68 - v30;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v91 = a1;
  uint64_t v92 = KeyPath;
  char v93 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CD0);
  swift_allocObject();
  uint64_t v88 = a1;
  swift_retain_n();
  uint64_t v80 = KeyPath;
  uint64_t v33 = v74;
  swift_retain();
  sub_191CF4558();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v71 = v24;
  uint64_t v70 = v34;
  v34(v27, v33, v24);
  sub_191CF44F8();
  sub_191CF4528();
  swift_release();
  unint64_t v94 = v31;
  sub_191CF4758();
  uint64_t v35 = sub_191CF47A8();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v37 = v69(v23, 1, v35);
  uint64_t v68 = v36;
  if (v37 == 1)
  {
    sub_191B01770((uint64_t)v23, &qword_1E92E2338);
    uint64_t v77 = 0;
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v38 = (void *)sub_191CF4798();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v35);
    id v39 = objc_msgSend(v38, sel_string);

    uint64_t v40 = sub_191CF5338();
    uint64_t v77 = v41;
    uint64_t v78 = v40;
  }
  sub_191CF4878();
  uint64_t v42 = sub_191CF4868();
  uint64_t v43 = *(void *)(v42 - 8);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v17, 1, v42);
  uint64_t v76 = v42;
  if (v44 == 1)
  {
    sub_191B01770((uint64_t)v17, qword_1EB4496F8);
  }
  else
  {
    char v45 = sub_191CF4858();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v42);
    if (v45)
    {
      sub_191CF4878();
      goto LABEL_9;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v90, 1, 1, v42);
LABEL_9:
  uint64_t v46 = v79;
  uint64_t v47 = v81;
  uint64_t v81 = a11;
  uint64_t v79 = a10;
  uint64_t v75 = a9;
  if (v47)
  {
    uint64_t v91 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E20F0);
    swift_allocObject();
    swift_retain_n();
    sub_191CF4558();
    v70(v27, v33, v71);
    sub_191CF44F8();
    uint64_t v48 = v72;
    sub_191CF4528();
    swift_release();
    uint64_t v49 = (uint64_t)v73;
    sub_191CF4758();
    if (v69((char *)v49, 1, v35) != 1)
    {
      uint64_t v51 = (void *)sub_191CF4798();
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v49, v35);
      id v52 = objc_msgSend(v51, sel_string);

      uint64_t v74 = sub_191CF5338();
      uint64_t v50 = v53;

      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v89);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v89);
    swift_release();
    sub_191B01770(v49, &qword_1E92E2338);
  }
  uint64_t v74 = 0;
  uint64_t v50 = 0;
LABEL_14:
  uint64_t v54 = v46;
  uint64_t v55 = v90;
  uint64_t v56 = v82;
  sub_191B98014(v90, v82);
  uint64_t v57 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v58 = v83;
  uint64_t v59 = (uint64_t)v83 + v57[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v59, 1, 1, v76);
  uint64_t v60 = (char *)v58 + v57[7];
  *(void *)uint64_t v60 = 0;
  *((void *)v60 + 1) = 0;
  v60[16] = 1;
  uint64_t v61 = (uint64_t *)((char *)v58 + v57[8]);
  *uint64_t v61 = 0;
  v61[1] = 0;
  uint64_t v62 = (uint64_t *)((char *)v58 + v57[9]);
  *uint64_t v62 = 0;
  v62[1] = 0;
  uint64_t v63 = v77;
  *uint64_t v58 = v78;
  v58[1] = v63;
  v58[2] = v74;
  v58[3] = v50;
  uint64_t v64 = v81;
  swift_bridgeObjectRetain();
  uint64_t v65 = v75;
  swift_bridgeObjectRetain();
  sub_191B28FA4(v56, v59, qword_1EB4496F8);
  uint64_t v66 = v85;
  *(void *)uint64_t v60 = v84;
  *((void *)v60 + 1) = v66;
  v60[16] = v86 & 1;
  swift_bridgeObjectRelease();
  *uint64_t v61 = v87;
  v61[1] = v65;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v62 = v79;
  v62[1] = v64;
  sub_191B01770(v55, qword_1EB4496F8);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v94, v89);
}

uint64_t sub_191C2F3B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191C2F410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for InternalWidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags.Widgets(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C2F5D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.Widgets()
{
  return &type metadata for FeatureFlags.Widgets;
}

unint64_t sub_191C2F614()
{
  unint64_t result = qword_1E92E4718;
  if (!qword_1E92E4718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4718);
  }
  return result;
}

const char *sub_191C2F668(char a1)
{
  unint64_t result = "BackgroundAbsentCheck";
  switch(a1)
  {
    case 1:
      unint64_t result = "AnimatedTransition";
      break;
    case 2:
      unint64_t result = "InteractiveWidgets";
      break;
    case 3:
      unint64_t result = "PrefetchRemoteSnapshots2";
      break;
    case 4:
      unint64_t result = "InteractiveSystemSmall";
      break;
    case 5:
      unint64_t result = "FirstPartyContentMargins";
      break;
    case 6:
      unint64_t result = "InteractiveWatchOS";
      break;
    case 7:
      unint64_t result = "AnimatedTransitionWatchOS";
      break;
    case 8:
      unint64_t result = "RelevanceDuringTimelineReload";
      break;
    case 9:
      unint64_t result = "ContextualWidgets";
      break;
    case 10:
      unint64_t result = "ControlsBuildAndRunHack";
      break;
    case 11:
      unint64_t result = "FFGatedWidgets";
      break;
    case 12:
      unint64_t result = "CorrectDominoContentMargins";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_191C2F7A8()
{
  return "Widgets";
}

const char *sub_191C2F7BC()
{
  return sub_191C2F668(*v0);
}

uint64_t DynamicIslandExpandedRegion._viewRepresentation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v68 = a1;
  swift_getOpaqueTypeMetadata2();
  uint64_t v72 = v4;
  uint64_t v73 = v3;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = swift_getOpaqueTypeConformance2();
  uint64_t v83 = v98;
  uint64_t v6 = swift_getOpaqueTypeMetadata2();
  uint64_t v7 = sub_191CF44E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = (char *)&v64 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1298);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = swift_checkMetadataState();
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v14 = (char *)&v64 - v13;
  uint64_t v82 = swift_checkMetadataState();
  uint64_t v75 = *(void *)(v82 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v82);
  uint64_t v17 = (char *)&v64 - v16;
  uint64_t v78 = *(void *)(v6 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v74 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v77 = (char *)&v64 - v20;
  uint64_t v84 = v7;
  uint64_t v21 = sub_191CF44E8();
  uint64_t v80 = *(void *)(v21 - 8);
  uint64_t v81 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v79 = (char *)&v64 - v22;
  uint64_t v23 = sub_191CF4188();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v30 = (char *)&v64 - v28;
  uint64_t v31 = *v2;
  uint64_t v86 = v27;
  uint64_t v76 = (char *)&v64 - v28;
  uint64_t v70 = v29;
  switch(v31)
  {
    case 1:
      uint64_t v65 = v6;
      uint64_t v66 = v8;
      uint64_t v64 = OpaqueTypeConformance2;
      int v32 = v17;
      uint64_t v33 = (uint64_t)v12;
      uint64_t v34 = (char *)&v64 - v28;
      uint64_t v35 = v29;
      sub_191CF4178();
      goto LABEL_6;
    case 2:
      uint64_t v36 = v29;
      sub_191CF4158();
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v30, v26, v86);
      sub_191CF4BE8();
      uint64_t v37 = v69;
      sub_191CF4BF8();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v37);
      sub_191CF40D8();
      uint64_t v38 = sub_191CF40E8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v12, 0, 1, v38);
      uint64_t v39 = (uint64_t)v74;
      uint64_t v40 = v82;
      uint64_t v41 = v83;
      sub_191CF4C98();
      sub_191B01770((uint64_t)v12, &qword_1E92E1298);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v17, v40);
      OpaqueTypeMetadata2 = v40;
      uint64_t v98 = v41;
      uint64_t v42 = swift_getOpaqueTypeConformance2();
      uint64_t v43 = v77;
      sub_191C6C7AC(v39, v6, v42);
      int v44 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v44(v39, v6);
      sub_191C6C7AC(v43, v6, v42);
      uint64_t v95 = v42;
      uint64_t v96 = v42;
      uint64_t v45 = v84;
      swift_getWitnessTable();
      uint64_t v46 = v79;
      sub_191C6C7E8(v39, v45, v6);
      v44(v39, v6);
      goto LABEL_8;
    case 3:
      uint64_t v47 = v29;
      sub_191CF4148();
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v30, v26, v86);
      sub_191CF4BE8();
      uint64_t v66 = v8;
      uint64_t v48 = v69;
      sub_191CF4BF8();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v48);
      sub_191CF40D8();
      uint64_t v49 = sub_191CF40E8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v12, 0, 1, v49);
      uint64_t v50 = (uint64_t)v74;
      uint64_t v40 = v82;
      uint64_t v41 = v83;
      sub_191CF4C98();
      sub_191B01770((uint64_t)v12, &qword_1E92E1298);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v17, v40);
      OpaqueTypeMetadata2 = v40;
      uint64_t v98 = v41;
      uint64_t v51 = swift_getOpaqueTypeConformance2();
      uint64_t v43 = v77;
      sub_191C6C7AC(v50, v6, v51);
      int v44 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v44(v50, v6);
      sub_191C6C7AC(v43, v6, v51);
      uint64_t v52 = (uint64_t)v67;
      sub_191C6C7E8(v50, v6, v6);
      v44(v50, v6);
      uint64_t v89 = v51;
      uint64_t v90 = v51;
      goto LABEL_7;
    default:
      uint64_t v65 = v6;
      uint64_t v66 = v8;
      uint64_t v64 = OpaqueTypeConformance2;
      int v32 = v17;
      uint64_t v33 = (uint64_t)v12;
      uint64_t v34 = (char *)&v64 - v28;
      uint64_t v35 = v29;
      sub_191CF4168();
LABEL_6:
      uint64_t v53 = v69;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v26, v86);
      sub_191CF4BE8();
      sub_191CF4BF8();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v53);
      sub_191CF40D8();
      uint64_t v54 = sub_191CF40E8();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v33, 0, 1, v54);
      uint64_t v55 = (uint64_t)v74;
      uint64_t v40 = v82;
      uint64_t v41 = v83;
      sub_191CF4C98();
      sub_191B01770(v33, &qword_1E92E1298);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v32, v40);
      OpaqueTypeMetadata2 = v40;
      uint64_t v98 = v41;
      uint64_t v56 = swift_getOpaqueTypeConformance2();
      uint64_t v43 = v77;
      uint64_t v6 = v65;
      sub_191C6C7AC(v55, v65, v56);
      int v44 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v44(v55, v6);
      sub_191C6C7AC(v43, v6, v56);
      uint64_t v52 = (uint64_t)v67;
      sub_191AF6FF8(v55, v6);
      v44(v55, v6);
      uint64_t v87 = v56;
      uint64_t v88 = v56;
LABEL_7:
      uint64_t v57 = v84;
      swift_getWitnessTable();
      uint64_t v46 = v79;
      sub_191AF6FF8(v52, v57);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v52, v57);
LABEL_8:
      uint64_t v58 = v76;
      v44((uint64_t)v43, v6);
      uint64_t v60 = v80;
      uint64_t v59 = v81;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v86);
      OpaqueTypeMetadata2 = v40;
      uint64_t v98 = v41;
      uint64_t v61 = swift_getOpaqueTypeConformance2();
      uint64_t v93 = v61;
      uint64_t v94 = v61;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v92 = v61;
      uint64_t v62 = swift_getWitnessTable();
      sub_191C6C7AC(v46, v59, v62);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v46, v59);
  }
}

void static DynamicIslandExpandedRegionVerticalPlacement.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandExpandedRegionVerticalPlacement.belowIfTooWide.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

BOOL static DynamicIslandExpandedRegionVerticalPlacement.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_191C30508(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void static DynamicIslandExpandedRegionPosition.leading.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandExpandedRegionPosition.trailing.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static DynamicIslandExpandedRegionPosition.center.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static DynamicIslandExpandedRegionPosition.bottom.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t DynamicIslandExpandedRegion.init(_:priority:content:)@<X0>(char *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v7 = *a1;
  uint64_t v8 = a3 + *(int *)(type metadata accessor for DynamicIslandExpandedRegion() + 44);
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 40) = 1;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 56) = 1;
  *(unsigned char *)a3 = v7;
  *(double *)(a3 + 8) = a4;
  return a2();
}

uint64_t type metadata accessor for DynamicIslandExpandedRegion()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DynamicIslandExpandedRegion.contentMargins(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v3, a1);
  uint64_t result = sub_191BDF160((uint64_t)v18, a3);
  uint64_t v8 = a2 + *(int *)(a1 + 44);
  char v9 = *(unsigned char *)(v8 + 8);
  char v10 = v18[8];
  if (v9) {
    uint64_t v11 = v18;
  }
  else {
    uint64_t v11 = (void *)(a2 + *(int *)(a1 + 44));
  }
  *(void *)uint64_t v8 = *v11;
  *(unsigned char *)(v8 + 8) = v9 & v10;
  if (*(unsigned char *)(v8 + 24))
  {
    uint64_t v12 = v19;
    char v13 = v20;
  }
  else
  {
    char v13 = 0;
    uint64_t v12 = *(void *)(v8 + 16);
  }
  *(void *)(v8 + 16) = v12;
  *(unsigned char *)(v8 + 24) = v13;
  if (*(unsigned char *)(v8 + 40))
  {
    uint64_t v14 = v21;
    char v15 = v22;
  }
  else
  {
    char v15 = 0;
    uint64_t v14 = *(void *)(v8 + 32);
  }
  *(void *)(v8 + 32) = v14;
  *(unsigned char *)(v8 + 40) = v15;
  if (*(unsigned char *)(v8 + 56))
  {
    uint64_t v16 = v23;
    char v17 = v24;
  }
  else
  {
    char v17 = 0;
    uint64_t v16 = *(void *)(v8 + 48);
  }
  *(void *)(v8 + 48) = v16;
  *(unsigned char *)(v8 + 56) = v17;
  return result;
}

uint64_t View.dynamicIsland(verticalPlacement:)(_DWORD *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4720);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF4138();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_191CF4118();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_191CF40F8();
    sub_191B01770((uint64_t)v4, &qword_1E92E4720);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
LABEL_6:
  sub_191CF4CB8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionVerticalPlacement()
{
  return &type metadata for DynamicIslandExpandedRegionVerticalPlacement;
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionPosition()
{
  return &type metadata for DynamicIslandExpandedRegionPosition;
}

uint64_t sub_191C30938()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_191C309E8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 57 > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    unint64_t v10 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5;
    unint64_t v11 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(v10, v11);
    uint64_t v12 = (_OWORD *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8);
    char v13 = (long long *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
    long long v15 = v13[1];
    long long v14 = v13[2];
    long long v16 = *v13;
    *(_OWORD *)((char *)v12 + 41) = *(long long *)((char *)v13 + 41);
    v12[1] = v15;
    _OWORD v12[2] = v14;
    *uint64_t v12 = v16;
  }
  return v3;
}

uint64_t sub_191C30B24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unint64_t sub_191C30B64(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (v6 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v8 = (v6 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  unint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (long long *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  long long v13 = v11[1];
  long long v12 = v11[2];
  long long v14 = *v11;
  *(_OWORD *)((char *)v10 + 41) = *(long long *)((char *)v11 + 41);
  v10[1] = v13;
  void v10[2] = v12;
  _OWORD *v10 = v14;
  return a1;
}

unint64_t sub_191C30C24(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (v6 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v8 = (v6 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v10 = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 24);
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(unsigned char *)(v10 + 24) = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 40);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(unsigned char *)(v10 + 40) = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 56);
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  *(unsigned char *)(v10 + 56) = v12;
  return a1;
}

unint64_t sub_191C30D0C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (v6 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v8 = (v6 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (long long *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  long long v13 = v11[1];
  long long v12 = v11[2];
  long long v14 = *v11;
  *(_OWORD *)((char *)v10 + 41) = *(long long *)((char *)v11 + 41);
  v10[1] = v13;
  void v10[2] = v12;
  _OWORD *v10 = v14;
  return a1;
}

unint64_t sub_191C30DCC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = (v6 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v8 = (v6 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 24) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v10 = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 24);
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(unsigned char *)(v10 + 24) = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 40);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(unsigned char *)(v10 + 40) = v12;
  LOBYTE(v12) = *(unsigned char *)(v11 + 56);
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  *(unsigned char *)(v10 + 56) = v12;
  return a1;
}

uint64_t sub_191C30EB4(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFC) {
    unsigned int v7 = 252;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 57;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)(a1 + v8);
        if (!*(unsigned char *)(a1 + v8)) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)(a1 + v8);
        if (*(_WORD *)(a1 + v8)) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191C3102CLL);
      case 4:
        int v13 = *(_DWORD *)(a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFF8) == 0xFFFFFFC8) {
          int v16 = *(unsigned __int8 *)a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 > 0xFC) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6);
  }
  unsigned int v17 = *(unsigned __int8 *)a1;
  if (v17 >= 4) {
    return v17 - 3;
  }
  else {
    return 0;
  }
}

void sub_191C31040(unint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFC) {
    unsigned int v8 = 252;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 57;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          *(unsigned char *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)(a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)(a1 + v10) = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 > 0xFC)
            {
              unint64_t v19 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
              char v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              *(unsigned char *)a1 = a2 + 3;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = (~v8 + a2) >> v11;
  if (v10 < 4) {
    int v17 = v16 + 1;
  }
  else {
    int v17 = 1;
  }
  if (v10 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero((void *)a1, v10);
  if (v10 == 1) {
    *(unsigned char *)a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      *(unsigned char *)(a1 + v10) = v17;
      break;
    case 2:
      *(_WORD *)(a1 + v10) = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x191C31254);
    case 4:
      *(_DWORD *)(a1 + v10) = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_191C3127C()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C313F0()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *_s9WidgetKit35DynamicIslandExpandedRegionPositionV6RegionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C31500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionPosition.Region()
{
  return &type metadata for DynamicIslandExpandedRegionPosition.Region;
}

unint64_t sub_191C3153C()
{
  unint64_t result = qword_1E92E4728;
  if (!qword_1E92E4728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4728);
  }
  return result;
}

uint64_t WidgetContainerShapeModifier.init(cornerRadius:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = KeyPath;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = result;
  *(unsigned char *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = a1;
  *(unsigned char *)(a3 + 40) = a2 & 1;
  return result;
}

uint64_t WidgetContainerShapeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v52 = a2;
  uint64_t v49 = sub_191CF3C78();
  MEMORY[0x1F4188790](v49);
  uint64_t v46 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A0A8);
  uint64_t v48 = *(void *)(v51 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v51);
  uint64_t v45 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)v42 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A070);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A068);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unsigned int v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)v2;
  uint64_t v15 = *(unsigned __int8 *)(v2 + 8);
  unsigned int v16 = *(void **)(v2 + 16);
  char v17 = *(unsigned char *)(v2 + 24);
  uint64_t v18 = *(void *)(v2 + 32);
  int v19 = *(unsigned __int8 *)(v2 + 40);
  sub_191B1BB50(v14, v15);
  sub_191B1BB44(v16, v17);
  sub_191B1BB50(v14, v15);
  sub_191BDDAAC(v14, v15, &v53);
  sub_191BDE088(v14, v15);
  sub_191BDE088(v14, v15);
  sub_191B1BBA0(v16, v17);
  if (v53 == 7)
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A090);
    unint64_t v21 = sub_191C31BA0();
    unint64_t v22 = sub_191C31CB0();
    uint64_t v23 = MEMORY[0x1E4F3ED28];
    sub_191CF4C28();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v20;
    uint64_t v54 = v23;
    unint64_t v55 = v21;
    unint64_t v56 = v22;
    swift_getOpaqueTypeConformance2();
    unint64_t v24 = sub_191C31BFC();
    uint64_t v53 = v20;
    uint64_t v54 = v49;
    unint64_t v55 = v21;
    unint64_t v56 = v24;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v42[1] = v7;
    uint64_t v43 = v9;
    uint64_t v44 = v10;
    uint64_t v26 = v49;
    if (v19)
    {
      sub_191B1BB50(v14, v15);
      sub_191B1BB44(v16, v17);
      sub_191B1BB44(v16, v17);
      id v27 = sub_191BDC0A4(v16, v17);
      sub_191B1BBA0(v16, v17);
      sub_191BDE088(v14, v15);
      sub_191B1BBA0(v16, v17);
      objc_msgSend(v27, sel_cornerRadius);
      uint64_t v18 = v28;
    }
    uint64_t v29 = v26;
    uint64_t v30 = v46;
    uint64_t v31 = &v46[*(int *)(v26 + 20)];
    uint64_t v32 = *MEMORY[0x1E4F3D4A0];
    uint64_t v33 = sub_191CF4368();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
    *uint64_t v30 = v18;
    v30[1] = v18;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A090);
    unint64_t v35 = sub_191C31BA0();
    unint64_t v36 = sub_191C31BFC();
    uint64_t v37 = v45;
    sub_191CF4C28();
    sub_191C31C54((uint64_t)v30);
    uint64_t v39 = v47;
    uint64_t v38 = v48;
    uint64_t v40 = v51;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v37, v51);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v43, v39, v40);
    swift_storeEnumTagMultiPayload();
    unint64_t v41 = sub_191C31CB0();
    uint64_t v53 = v34;
    uint64_t v54 = MEMORY[0x1E4F3ED28];
    unint64_t v55 = v35;
    unint64_t v56 = v41;
    swift_getOpaqueTypeConformance2();
    uint64_t v53 = v34;
    uint64_t v54 = v29;
    unint64_t v55 = v35;
    unint64_t v56 = v36;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
}

unint64_t sub_191C31BA0()
{
  unint64_t result = qword_1EB44A088;
  if (!qword_1EB44A088)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A088);
  }
  return result;
}

unint64_t sub_191C31BFC()
{
  unint64_t result = qword_1EB44B908;
  if (!qword_1EB44B908)
  {
    sub_191CF3C78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B908);
  }
  return result;
}

uint64_t sub_191C31C54(uint64_t a1)
{
  uint64_t v2 = sub_191CF3C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191C31CB0()
{
  unint64_t result = qword_1EB44A0B0;
  if (!qword_1EB44A0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A0B0);
  }
  return result;
}

uint64_t sub_191C31D04()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for WidgetContainerShapeModifier(uint64_t a1)
{
  sub_191BDE088(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  uint64_t v2 = *(void **)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  sub_191B1BBA0(v2, v3);
}

uint64_t initializeWithCopy for WidgetContainerShapeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_191B1BB44(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for WidgetContainerShapeModifier(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  sub_191BDE088(v6, v7);
  uint64_t v8 = *(void **)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_191B1BB44(v8, v9);
  uint64_t v10 = (void *)a1[2];
  char v11 = *((unsigned char *)a1 + 24);
  a1[2] = (uint64_t)v8;
  *((unsigned char *)a1 + 24) = v9;
  sub_191B1BBA0(v10, v11);
  uint64_t v12 = *(void *)(a2 + 32);
  *((unsigned char *)a1 + 40) = *(unsigned char *)(a2 + 40);
  a1[4] = v12;
  return a1;
}

uint64_t *assignWithTake for WidgetContainerShapeModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  sub_191BDE088(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  char v9 = (void *)a1[2];
  char v10 = *((unsigned char *)a1 + 24);
  a1[2] = a2[2];
  *((unsigned char *)a1 + 24) = v8;
  sub_191B1BBA0(v9, v10);
  a1[4] = a2[4];
  *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetContainerShapeModifier()
{
  return &type metadata for WidgetContainerShapeModifier;
}

unint64_t sub_191C31EF0()
{
  unint64_t result = qword_1EB44A078;
  if (!qword_1EB44A078)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A080);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A090);
    sub_191C31BA0();
    sub_191C31CB0();
    swift_getOpaqueTypeConformance2();
    sub_191CF3C78();
    sub_191C31BFC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A078);
  }
  return result;
}

char *sub_191C31FEC(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  char v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    char v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 2) = v9;
    uint64_t v10 = v9;
    char v11 = **(void (***)(char *, char **, uint64_t))(v9 - 8);
    uint64_t v12 = v5;
    v11(a1 + 8, v8, v10);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (uint64_t)a2 + v13;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)((char *)a2 + v13);
    v14[16] = *((unsigned char *)a2 + v13 + 16);
    *(_OWORD *)(v14 + 24) = *(_OWORD *)((char *)a2 + v13 + 24);
    v14[40] = *((unsigned char *)a2 + v13 + 40);
    *((void *)v14 + 6) = *(char **)((char *)a2 + v13 + 48);
    *(_OWORD *)(v14 + 56) = *(_OWORD *)((char *)a2 + v13 + 56);
    *(_OWORD *)(v14 + 72) = *(_OWORD *)((char *)a2 + v13 + 72);
    v14[88] = *((unsigned char *)a2 + v13 + 88);
    *((_OWORD *)v14 + 6) = *(_OWORD *)((char *)a2 + v13 + 96);
    uint64_t v16 = type metadata accessor for MetricsRequest(0);
    uint64_t v17 = *(int *)(v16 + 40);
    uint64_t v18 = &v14[v17];
    int v19 = (const void *)(v15 + v17);
    uint64_t v20 = sub_191CF43F8();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
    if (v59(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    unint64_t v24 = &v14[v23];
    uint64_t v25 = (_OWORD *)(v15 + v23);
    uint64_t v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v27 = *((void *)v26 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v58 = v27;
      *(_OWORD *)unint64_t v24 = *v25;
      uint64_t v29 = v26[5];
      uint64_t v30 = &v24[v29];
      uint64_t v31 = (char *)v25 + v29;
      char v30[16] = v31[16];
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
      v30[40] = v31[40];
      *((void *)v30 + 6) = *((void *)v31 + 6);
      *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
      v30[88] = v31[88];
      *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
      uint64_t v32 = *(int *)(v16 + 40);
      uint64_t v33 = &v30[v32];
      uint64_t v34 = &v31[v32];
      if (v59(&v31[v32], 1, v20))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v33, v34, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v20);
      }
      uint64_t v36 = v26[6];
      uint64_t v37 = &v24[v36];
      uint64_t v38 = (char *)v25 + v36;
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      v37[16] = v38[16];
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      v37[40] = v38[40];
      *((void *)v37 + 6) = *((void *)v38 + 6);
      *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
      *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
      v37[88] = v38[88];
      *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
      uint64_t v39 = *(int *)(v16 + 40);
      uint64_t v40 = &v37[v39];
      unint64_t v41 = &v38[v39];
      if (v59(&v38[v39], 1, v20))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v40, v41, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
      }
      uint64_t v43 = v26[7];
      uint64_t v44 = &v24[v43];
      uint64_t v45 = (char *)v25 + v43;
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      v44[16] = v45[16];
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      v44[40] = v45[40];
      *((void *)v44 + 6) = *((void *)v45 + 6);
      *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
      *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
      v44[88] = v45[88];
      *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
      uint64_t v46 = *(int *)(v16 + 40);
      uint64_t v47 = &v44[v46];
      uint64_t v48 = &v45[v46];
      if (v59(&v45[v46], 1, v20))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v47, v48, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
      }
      uint64_t v50 = v26[8];
      uint64_t v51 = &v24[v50];
      uint64_t v52 = (char *)v25 + v50;
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      v51[16] = v52[16];
      *(_OWORD *)(v51 + 24) = *(_OWORD *)(v52 + 24);
      v51[40] = v52[40];
      *((void *)v51 + 6) = *((void *)v52 + 6);
      *(_OWORD *)(v51 + 56) = *(_OWORD *)(v52 + 56);
      *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
      v51[88] = v52[88];
      *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
      uint64_t v53 = *(int *)(v16 + 40);
      uint64_t v54 = &v51[v53];
      unint64_t v55 = &v52[v53];
      if (v59(&v52[v53], 1, v20))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v54, v55, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v54, 0, 1, v20);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v58 + 56))(v24, 0, 1, v26);
    }
  }
  return a1;
}

uint64_t sub_191C326B8(id *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)(a1 + 1);

  __swift_destroy_boxed_opaque_existential_1(v4);
  char v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = &v5[*(int *)(v6 + 40)];
  uint64_t v8 = sub_191CF43F8();
  uint64_t v19 = *(void *)(v8 - 8);
  long long v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (!v9(v7, 1, v8)) {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v8);
  }
  uint64_t v10 = &v5[*(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20)];
  char v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = *(int *)(v6 + 40);
    uint64_t v14 = &v10[v11[5] + v13];
    if (!v9(v14, 1, v8))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v8);
      uint64_t v13 = *(int *)(v6 + 40);
    }
    uint64_t v15 = &v10[v11[6] + v13];
    if (!v9(v15, 1, v8))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v8);
      uint64_t v13 = *(int *)(v6 + 40);
    }
    uint64_t v16 = &v10[v11[7] + v13];
    if (!v9(v16, 1, v8))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v8);
      uint64_t v13 = *(int *)(v6 + 40);
    }
    uint64_t v17 = &v10[v11[8] + v13];
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)(v17, 1, v8);
    if (!result)
    {
      uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
      return v18(v17, v8);
    }
  }
  return result;
}

uint64_t sub_191C32940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = a2 + 8;
  long long v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v9;
  uint64_t v10 = v9;
  char v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  id v12 = v6;
  v11(v7, v8, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(a2 + v13 + 16);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(a2 + v13 + 24);
  *(unsigned char *)(v14 + 40) = *(unsigned char *)(a2 + v13 + 40);
  *(void *)(v14 + 48) = *(void *)(a2 + v13 + 48);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(a2 + v13 + 56);
  *(_OWORD *)(v14 + 72) = *(_OWORD *)(a2 + v13 + 72);
  *(unsigned char *)(v14 + 88) = *(unsigned char *)(a2 + v13 + 88);
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(a2 + v13 + 96);
  uint64_t v16 = type metadata accessor for MetricsRequest(0);
  uint64_t v17 = *(int *)(v16 + 40);
  uint64_t v18 = (void *)(v14 + v17);
  uint64_t v19 = (const void *)(v15 + v17);
  uint64_t v20 = sub_191CF43F8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  if (v59(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  unint64_t v24 = (_OWORD *)(v14 + v23);
  uint64_t v25 = (_OWORD *)(v15 + v23);
  uint64_t v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v58 = v27;
    _OWORD *v24 = *v25;
    uint64_t v29 = v26[5];
    uint64_t v30 = (char *)v24 + v29;
    uint64_t v31 = (char *)v25 + v29;
    char v30[16] = v31[16];
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    uint64_t v32 = *(int *)(v16 + 40);
    uint64_t v33 = &v30[v32];
    uint64_t v34 = &v31[v32];
    if (v59(&v31[v32], 1, v20))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v33, v34, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v20);
    }
    uint64_t v36 = v26[6];
    uint64_t v37 = (char *)v24 + v36;
    uint64_t v38 = (char *)v25 + v36;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v16 + 40);
    uint64_t v40 = &v37[v39];
    unint64_t v41 = &v38[v39];
    if (v59(&v38[v39], 1, v20))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v40, v41, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
    }
    uint64_t v43 = v26[7];
    uint64_t v44 = (char *)v24 + v43;
    uint64_t v45 = (char *)v25 + v43;
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    uint64_t v46 = *(int *)(v16 + 40);
    uint64_t v47 = &v44[v46];
    uint64_t v48 = &v45[v46];
    if (v59(&v45[v46], 1, v20))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v47, v48, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
    }
    uint64_t v50 = v26[8];
    uint64_t v51 = (char *)v24 + v50;
    uint64_t v52 = (char *)v25 + v50;
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    v51[16] = v52[16];
    *(_OWORD *)(v51 + 24) = *(_OWORD *)(v52 + 24);
    v51[40] = v52[40];
    *((void *)v51 + 6) = *((void *)v52 + 6);
    *(_OWORD *)(v51 + 56) = *(_OWORD *)(v52 + 56);
    *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
    v51[88] = v52[88];
    *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
    uint64_t v53 = *(int *)(v16 + 40);
    uint64_t v54 = &v51[v53];
    unint64_t v55 = &v52[v53];
    if (v59(&v52[v53], 1, v20))
    {
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v54, v55, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v54, 0, 1, v20);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v58 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_191C32FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v135 = a1;
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  long long v12 = *(_OWORD *)(a2 + v9);
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(a2 + v9 + 16);
  *(_OWORD *)uint64_t v10 = v12;
  long long v13 = *(_OWORD *)(a2 + v9 + 24);
  *(unsigned char *)(v10 + 40) = *(unsigned char *)(a2 + v9 + 40);
  *(_OWORD *)(v10 + 24) = v13;
  *(void *)(v10 + 48) = *(void *)(a2 + v9 + 48);
  long long v14 = *(_OWORD *)(a2 + v9 + 56);
  long long v15 = *(_OWORD *)(a2 + v9 + 72);
  *(unsigned char *)(v10 + 88) = *(unsigned char *)(a2 + v9 + 88);
  *(_OWORD *)(v10 + 72) = v15;
  *(_OWORD *)(v10 + 56) = v14;
  *(void *)(v10 + 96) = *(void *)(a2 + v9 + 96);
  *(void *)(v10 + 104) = *(void *)(a2 + v9 + 104);
  uint64_t v136 = type metadata accessor for MetricsRequest(0);
  uint64_t v16 = *(int *)(v136 + 40);
  uint64_t v17 = (void *)(v10 + v16);
  uint64_t v18 = (void *)(v11 + v16);
  uint64_t v19 = sub_191CF43F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  uint64_t v134 = v20;
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v26 = (char *)(v10 + v25);
  uint64_t v27 = (char *)(v11 + v25);
  uint64_t v28 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_191C33C5C((uint64_t)v26);
      goto LABEL_13;
    }
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = *((void *)v27 + 1);
    uint64_t v48 = v28[5];
    uint64_t v49 = &v26[v48];
    uint64_t v50 = &v27[v48];
    long long v51 = *(_OWORD *)v50;
    v49[16] = v50[16];
    *(_OWORD *)uint64_t v49 = v51;
    long long v52 = *(_OWORD *)(v50 + 24);
    v49[40] = v50[40];
    *(_OWORD *)(v49 + 24) = v52;
    *((void *)v49 + 6) = *((void *)v50 + 6);
    long long v53 = *(_OWORD *)(v50 + 56);
    long long v54 = *(_OWORD *)(v50 + 72);
    v49[88] = v50[88];
    *(_OWORD *)(v49 + 72) = v54;
    *(_OWORD *)(v49 + 56) = v53;
    *((void *)v49 + 12) = *((void *)v50 + 12);
    *((void *)v49 + 13) = *((void *)v50 + 13);
    uint64_t v55 = *(int *)(v136 + 40);
    uint64_t v56 = &v49[v55];
    uint64_t v57 = &v50[v55];
    int v58 = v21(&v49[v55], 1, v19);
    int v59 = v21(v57, 1, v19);
    if (v58)
    {
      uint64_t v60 = v134;
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v56, v57, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v56, 0, 1, v19);
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v60 = v134;
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 24))(v56, v57, v19);
LABEL_34:
        uint64_t v96 = v28[6];
        os_log_type_t v97 = &v26[v96];
        uint64_t v98 = &v27[v96];
        long long v99 = *(_OWORD *)v98;
        v97[16] = v98[16];
        *(_OWORD *)os_log_type_t v97 = v99;
        long long v100 = *(_OWORD *)(v98 + 24);
        v97[40] = v98[40];
        *(_OWORD *)(v97 + 24) = v100;
        *((void *)v97 + 6) = *((void *)v98 + 6);
        long long v101 = *(_OWORD *)(v98 + 56);
        long long v102 = *(_OWORD *)(v98 + 72);
        v97[88] = v98[88];
        *(_OWORD *)(v97 + 72) = v102;
        *(_OWORD *)(v97 + 56) = v101;
        *((void *)v97 + 12) = *((void *)v98 + 12);
        *((void *)v97 + 13) = *((void *)v98 + 13);
        uint64_t v103 = *(int *)(v136 + 40);
        double v104 = &v97[v103];
        char v105 = &v98[v103];
        int v106 = v21(&v97[v103], 1, v19);
        int v107 = v21(v105, 1, v19);
        if (v106)
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v104, v105, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v104, 0, 1, v19);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v104, v105, v19);
LABEL_40:
            uint64_t v109 = v28[7];
            uint64_t v110 = &v26[v109];
            uint64_t v111 = &v27[v109];
            long long v112 = *(_OWORD *)v111;
            v110[16] = v111[16];
            *(_OWORD *)uint64_t v110 = v112;
            long long v113 = *(_OWORD *)(v111 + 24);
            unsigned char v110[40] = v111[40];
            *(_OWORD *)(v110 + 24) = v113;
            *((void *)v110 + 6) = *((void *)v111 + 6);
            long long v114 = *(_OWORD *)(v111 + 56);
            long long v115 = *(_OWORD *)(v111 + 72);
            v110[88] = v111[88];
            *(_OWORD *)(v110 + 72) = v115;
            *(_OWORD *)(v110 + 56) = v114;
            *((void *)v110 + 12) = *((void *)v111 + 12);
            *((void *)v110 + 13) = *((void *)v111 + 13);
            uint64_t v116 = *(int *)(v136 + 40);
            uint64_t v117 = &v110[v116];
            uint64_t v118 = &v111[v116];
            int v119 = v21(&v110[v116], 1, v19);
            int v120 = v21(v118, 1, v19);
            if (v119)
            {
              if (!v120)
              {
                (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v117, v118, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v117, 0, 1, v19);
LABEL_46:
                uint64_t v122 = v28[8];
                double v123 = &v26[v122];
                uint64_t v124 = &v27[v122];
                long long v125 = *(_OWORD *)v124;
                v123[16] = v124[16];
                *(_OWORD *)double v123 = v125;
                long long v126 = *(_OWORD *)(v124 + 24);
                v123[40] = v124[40];
                *(_OWORD *)(v123 + 24) = v126;
                *((void *)v123 + 6) = *((void *)v124 + 6);
                long long v127 = *(_OWORD *)(v124 + 56);
                long long v128 = *(_OWORD *)(v124 + 72);
                v123[88] = v124[88];
                *(_OWORD *)(v123 + 72) = v128;
                *(_OWORD *)(v123 + 56) = v127;
                *((void *)v123 + 12) = *((void *)v124 + 12);
                *((void *)v123 + 13) = *((void *)v124 + 13);
                uint64_t v129 = *(int *)(v136 + 40);
                uint64_t v130 = &v123[v129];
                uint64_t v131 = &v124[v129];
                int v132 = v21(&v123[v129], 1, v19);
                int v133 = v21(v131, 1, v19);
                if (v132)
                {
                  if (!v133)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v130, v131, v19);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v130, 0, 1, v19);
                    return v135;
                  }
                }
                else
                {
                  if (!v133)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v134 + 24))(v130, v131, v19);
                    return v135;
                  }
                  (*(void (**)(char *, uint64_t))(v134 + 8))(v130, v19);
                }
                size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80) - 8)
                                + 64);
                uint64_t v46 = v130;
                uint64_t v47 = v131;
                goto LABEL_14;
              }
            }
            else
            {
              if (!v120)
              {
                (*(void (**)(char *, char *, uint64_t))(v60 + 24))(v117, v118, v19);
                goto LABEL_46;
              }
              (*(void (**)(char *, uint64_t))(v60 + 8))(v117, v19);
            }
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v60 + 8))(v104, v19);
        }
        uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v56, v19);
    }
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v56, v57, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_34;
  }
  if (v32)
  {
LABEL_13:
    size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8) - 8) + 64);
    uint64_t v46 = v26;
    uint64_t v47 = v27;
LABEL_14:
    memcpy(v46, v47, v45);
    return v135;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  uint64_t v33 = v28[5];
  uint64_t v34 = &v26[v33];
  uint64_t v35 = &v27[v33];
  long long v36 = *(_OWORD *)v35;
  v34[16] = v35[16];
  *(_OWORD *)uint64_t v34 = v36;
  long long v37 = *(_OWORD *)(v35 + 24);
  v34[40] = v35[40];
  *(_OWORD *)(v34 + 24) = v37;
  *((void *)v34 + 6) = *((void *)v35 + 6);
  long long v38 = *(_OWORD *)(v35 + 56);
  long long v39 = *(_OWORD *)(v35 + 72);
  v34[88] = v35[88];
  *(_OWORD *)(v34 + 72) = v39;
  *(_OWORD *)(v34 + 56) = v38;
  *((void *)v34 + 12) = *((void *)v35 + 12);
  *((void *)v34 + 13) = *((void *)v35 + 13);
  uint64_t v40 = *(int *)(v136 + 40);
  unint64_t v41 = &v34[v40];
  uint64_t v42 = &v35[v40];
  if (v21(&v35[v40], 1, v19))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    uint64_t v44 = v134;
  }
  else
  {
    uint64_t v44 = v134;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v41, v42, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v41, 0, 1, v19);
  }
  uint64_t v61 = v28[6];
  uint64_t v62 = &v26[v61];
  uint64_t v63 = &v27[v61];
  long long v64 = *(_OWORD *)v63;
  v62[16] = v63[16];
  *(_OWORD *)uint64_t v62 = v64;
  long long v65 = *(_OWORD *)(v63 + 24);
  v62[40] = v63[40];
  *(_OWORD *)(v62 + 24) = v65;
  *((void *)v62 + 6) = *((void *)v63 + 6);
  long long v66 = *(_OWORD *)(v63 + 56);
  long long v67 = *(_OWORD *)(v63 + 72);
  v62[88] = v63[88];
  *(_OWORD *)(v62 + 72) = v67;
  *(_OWORD *)(v62 + 56) = v66;
  *((void *)v62 + 12) = *((void *)v63 + 12);
  *((void *)v62 + 13) = *((void *)v63 + 13);
  uint64_t v68 = *(int *)(v136 + 40);
  uint64_t v69 = &v62[v68];
  uint64_t v70 = &v63[v68];
  if (v21(&v63[v68], 1, v19))
  {
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v69, v70, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v69, 0, 1, v19);
  }
  uint64_t v72 = v28[7];
  uint64_t v73 = &v26[v72];
  uint64_t v74 = &v27[v72];
  long long v75 = *(_OWORD *)v74;
  v73[16] = v74[16];
  *(_OWORD *)uint64_t v73 = v75;
  long long v76 = *(_OWORD *)(v74 + 24);
  v73[40] = v74[40];
  *(_OWORD *)(v73 + 24) = v76;
  *((void *)v73 + 6) = *((void *)v74 + 6);
  long long v77 = *(_OWORD *)(v74 + 56);
  long long v78 = *(_OWORD *)(v74 + 72);
  v73[88] = v74[88];
  *(_OWORD *)(v73 + 72) = v78;
  *(_OWORD *)(v73 + 56) = v77;
  *((void *)v73 + 12) = *((void *)v74 + 12);
  *((void *)v73 + 13) = *((void *)v74 + 13);
  uint64_t v79 = *(int *)(v136 + 40);
  uint64_t v80 = &v73[v79];
  uint64_t v81 = &v74[v79];
  if (v21(&v74[v79], 1, v19))
  {
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v80, v81, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v80, 0, 1, v19);
  }
  uint64_t v83 = v28[8];
  uint64_t v84 = &v26[v83];
  uint64_t v85 = &v27[v83];
  long long v86 = *(_OWORD *)v85;
  v84[16] = v85[16];
  *(_OWORD *)uint64_t v84 = v86;
  long long v87 = *(_OWORD *)(v85 + 24);
  v84[40] = v85[40];
  *(_OWORD *)(v84 + 24) = v87;
  *((void *)v84 + 6) = *((void *)v85 + 6);
  long long v88 = *(_OWORD *)(v85 + 56);
  long long v89 = *(_OWORD *)(v85 + 72);
  v84[88] = v85[88];
  *(_OWORD *)(v84 + 72) = v89;
  *(_OWORD *)(v84 + 56) = v88;
  *((void *)v84 + 12) = *((void *)v85 + 12);
  *((void *)v84 + 13) = *((void *)v85 + 13);
  uint64_t v90 = *(int *)(v136 + 40);
  uint64_t v91 = &v84[v90];
  uint64_t v92 = &v85[v90];
  if (v21(&v85[v90], 1, v19))
  {
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v91, v92, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v91, 0, 1, v19);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
  return v135;
}

uint64_t sub_191C33C5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JindoMetricsDefinition(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191C33CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(a2 + v4);
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + v4 + 24);
  *(unsigned char *)(v5 + 40) = *(unsigned char *)(a2 + v4 + 40);
  *(void *)(v5 + 48) = *(void *)(a2 + v4 + 48);
  long long v7 = *(_OWORD *)(a2 + v4 + 56);
  long long v8 = *(_OWORD *)(a2 + v4 + 72);
  *(unsigned char *)(v5 + 88) = *(unsigned char *)(a2 + v4 + 88);
  *(_OWORD *)(v5 + 72) = v8;
  *(_OWORD *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 96) = *(_OWORD *)(a2 + v4 + 96);
  uint64_t v9 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v9 + 40);
  uint64_t v11 = (void *)(v5 + v10);
  long long v12 = (const void *)(v6 + v10);
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v52(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v17 = (_OWORD *)(v5 + v16);
  uint64_t v18 = (_OWORD *)(v6 + v16);
  uint64_t v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v51 = v20;
    *uint64_t v17 = *v18;
    uint64_t v22 = v19[5];
    int v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    v23[16] = v24[16];
    *(_OWORD *)int v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v23[40] = v24[40];
    *((void *)v23 + 6) = *((void *)v24 + 6);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
    v23[88] = v24[88];
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    uint64_t v25 = *(int *)(v9 + 40);
    uint64_t v26 = &v23[v25];
    uint64_t v27 = &v24[v25];
    if (v52(&v24[v25], 1, v13))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = v19[6];
    uint64_t v30 = (char *)v17 + v29;
    int v31 = (char *)v18 + v29;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    char v30[16] = v31[16];
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((void *)v30 + 6) = *((void *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    uint64_t v32 = *(int *)(v9 + 40);
    uint64_t v33 = &v30[v32];
    uint64_t v34 = &v31[v32];
    if (v52(&v31[v32], 1, v13))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v33, 0, 1, v13);
    }
    uint64_t v36 = v19[7];
    long long v37 = (char *)v17 + v36;
    long long v38 = (char *)v18 + v36;
    *(_OWORD *)long long v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((void *)v37 + 6) = *((void *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    uint64_t v39 = *(int *)(v9 + 40);
    uint64_t v40 = &v37[v39];
    unint64_t v41 = &v38[v39];
    if (v52(&v38[v39], 1, v13))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v40, v41, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v40, 0, 1, v13);
    }
    uint64_t v43 = v19[8];
    uint64_t v44 = (char *)v17 + v43;
    size_t v45 = (char *)v18 + v43;
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    uint64_t v46 = *(int *)(v9 + 40);
    uint64_t v47 = &v44[v46];
    uint64_t v48 = &v45[v46];
    if (v52(&v45[v46], 1, v13))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v47, v48, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v47, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v51 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_191C34300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  long long v10 = *(_OWORD *)(a2 + v7 + 56);
  long long v11 = *(_OWORD *)(a2 + v7 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  uint64_t v98 = type metadata accessor for MetricsRequest(0);
  uint64_t v12 = *(int *)(v98 + 40);
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = sub_191CF43F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  long long v99 = (uint64_t (*)(char *, uint64_t, uint64_t))v17;
  int v19 = v17(v14, 1, v15);
  uint64_t v97 = v16;
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v22 = (char *)(v8 + v21);
  int v23 = (char *)(v9 + v21);
  uint64_t v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_191C33C5C((uint64_t)v22);
      goto LABEL_13;
    }
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    uint64_t v40 = v24[5];
    unint64_t v41 = &v22[v40];
    uint64_t v42 = &v23[v40];
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
    v41[16] = v42[16];
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    v41[40] = v42[40];
    *((void *)v41 + 6) = *((void *)v42 + 6);
    *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
    v41[88] = v42[88];
    *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
    uint64_t v43 = *(int *)(v98 + 40);
    uint64_t v44 = &v41[v43];
    size_t v45 = &v42[v43];
    int v46 = v99(&v41[v43], 1, v15);
    int v47 = v99(v45, 1, v15);
    if (v46)
    {
      if (!v47)
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v44, v45, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v44, 0, 1, v15);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v47)
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v44, v45, v15);
LABEL_34:
        uint64_t v71 = v24[6];
        uint64_t v72 = &v22[v71];
        uint64_t v73 = &v23[v71];
        *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
        v72[16] = v73[16];
        *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
        v72[40] = v73[40];
        *((void *)v72 + 6) = *((void *)v73 + 6);
        *(_OWORD *)(v72 + 56) = *(_OWORD *)(v73 + 56);
        *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
        v72[88] = v73[88];
        *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
        uint64_t v74 = *(int *)(v98 + 40);
        long long v75 = &v72[v74];
        long long v76 = &v73[v74];
        int v77 = v99(&v72[v74], 1, v15);
        int v78 = v99(v76, 1, v15);
        if (v77)
        {
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v75, v76, v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v75, 0, 1, v15);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v75, v76, v15);
LABEL_40:
            uint64_t v80 = v24[7];
            uint64_t v81 = &v22[v80];
            uint64_t v82 = &v23[v80];
            *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
            v81[16] = v82[16];
            *(_OWORD *)(v81 + 24) = *(_OWORD *)(v82 + 24);
            v81[40] = v82[40];
            *((void *)v81 + 6) = *((void *)v82 + 6);
            *(_OWORD *)(v81 + 56) = *(_OWORD *)(v82 + 56);
            *(_OWORD *)(v81 + 72) = *(_OWORD *)(v82 + 72);
            v81[88] = v82[88];
            *((_OWORD *)v81 + 6) = *((_OWORD *)v82 + 6);
            uint64_t v83 = *(int *)(v98 + 40);
            uint64_t v84 = &v81[v83];
            uint64_t v85 = &v82[v83];
            int v86 = v99(&v81[v83], 1, v15);
            int v87 = v99(v85, 1, v15);
            if (v86)
            {
              if (!v87)
              {
                (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v84, v85, v15);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v84, 0, 1, v15);
LABEL_46:
                uint64_t v89 = v24[8];
                uint64_t v90 = &v22[v89];
                uint64_t v91 = &v23[v89];
                *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
                v90[16] = v91[16];
                *(_OWORD *)(v90 + 24) = *(_OWORD *)(v91 + 24);
                v90[40] = v91[40];
                *((void *)v90 + 6) = *((void *)v91 + 6);
                *(_OWORD *)(v90 + 56) = *(_OWORD *)(v91 + 56);
                *(_OWORD *)(v90 + 72) = *(_OWORD *)(v91 + 72);
                v90[88] = v91[88];
                *((_OWORD *)v90 + 6) = *((_OWORD *)v91 + 6);
                uint64_t v92 = *(int *)(v98 + 40);
                uint64_t v93 = &v90[v92];
                uint64_t v94 = &v91[v92];
                int v95 = v99(&v90[v92], 1, v15);
                int v96 = v99(v94, 1, v15);
                if (v95)
                {
                  if (!v96)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v93, v94, v15);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v93, 0, 1, v15);
                    return a1;
                  }
                }
                else
                {
                  if (!v96)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v93, v94, v15);
                    return a1;
                  }
                  (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v15);
                }
                size_t v37 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80) - 8)
                                + 64);
                long long v38 = v93;
                uint64_t v39 = v94;
                goto LABEL_14;
              }
            }
            else
            {
              if (!v87)
              {
                (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v84, v85, v15);
                goto LABEL_46;
              }
              (*(void (**)(char *, uint64_t))(v97 + 8))(v84, v15);
            }
            uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v15);
        }
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v44, v15);
    }
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v44, v45, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_34;
  }
  if (v28)
  {
LABEL_13:
    size_t v37 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8) - 8) + 64);
    long long v38 = v22;
    uint64_t v39 = v23;
LABEL_14:
    memcpy(v38, v39, v37);
    return a1;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  uint64_t v29 = v24[5];
  uint64_t v30 = &v22[v29];
  int v31 = &v23[v29];
  char v30[16] = v31[16];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *((void *)v30 + 6) = *((void *)v31 + 6);
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  uint64_t v32 = *(int *)(v98 + 40);
  uint64_t v33 = &v30[v32];
  uint64_t v34 = &v31[v32];
  if (v99(&v31[v32], 1, v15))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v36 = v97;
  }
  else
  {
    uint64_t v36 = v97;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v33, v34, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v33, 0, 1, v15);
  }
  uint64_t v48 = v24[6];
  uint64_t v49 = &v22[v48];
  uint64_t v50 = &v23[v48];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  v49[16] = v50[16];
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 24);
  v49[40] = v50[40];
  *((void *)v49 + 6) = *((void *)v50 + 6);
  *(_OWORD *)(v49 + 56) = *(_OWORD *)(v50 + 56);
  *(_OWORD *)(v49 + 72) = *(_OWORD *)(v50 + 72);
  v49[88] = v50[88];
  *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
  uint64_t v51 = *(int *)(v98 + 40);
  long long v52 = &v49[v51];
  long long v53 = &v50[v51];
  if (v99(&v50[v51], 1, v15))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v52, v53, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v52, 0, 1, v15);
  }
  uint64_t v55 = v24[7];
  uint64_t v56 = &v22[v55];
  uint64_t v57 = &v23[v55];
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  v56[16] = v57[16];
  *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 24);
  v56[40] = v57[40];
  *((void *)v56 + 6) = *((void *)v57 + 6);
  *(_OWORD *)(v56 + 56) = *(_OWORD *)(v57 + 56);
  *(_OWORD *)(v56 + 72) = *(_OWORD *)(v57 + 72);
  v56[88] = v57[88];
  *((_OWORD *)v56 + 6) = *((_OWORD *)v57 + 6);
  uint64_t v58 = *(int *)(v98 + 40);
  int v59 = &v56[v58];
  uint64_t v60 = &v57[v58];
  if (v99(&v57[v58], 1, v15))
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v59, v60, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v59, 0, 1, v15);
  }
  uint64_t v62 = v24[8];
  uint64_t v63 = &v22[v62];
  long long v64 = &v23[v62];
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  unsigned char v63[16] = v64[16];
  *(_OWORD *)(v63 + 24) = *(_OWORD *)(v64 + 24);
  v63[40] = v64[40];
  *((void *)v63 + 6) = *((void *)v64 + 6);
  *(_OWORD *)(v63 + 56) = *(_OWORD *)(v64 + 56);
  *(_OWORD *)(v63 + 72) = *(_OWORD *)(v64 + 72);
  v63[88] = v64[88];
  *((_OWORD *)v63 + 6) = *((_OWORD *)v64 + 6);
  uint64_t v65 = *(int *)(v98 + 40);
  long long v66 = &v63[v65];
  long long v67 = &v64[v65];
  if (v99(&v64[v65], 1, v15))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v66, v67, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v66, 0, 1, v15);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}