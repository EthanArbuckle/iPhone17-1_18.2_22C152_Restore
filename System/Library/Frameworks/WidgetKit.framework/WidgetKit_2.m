uint64_t sub_191C34F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C34F88);
}

uint64_t sub_191C34F88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_191C35038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C3504C);
}

void *sub_191C3504C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for JindoViewCollection()
{
  uint64_t result = qword_1E92E1A58;
  if (!qword_1E92E1A58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C35140()
{
  uint64_t result = type metadata accessor for ActivityMetricsDefinition(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_191C351E8()
{
  unint64_t result = qword_1E92E0B18;
  if (!qword_1E92E0B18)
  {
    type metadata accessor for JindoViewStates(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0B18);
  }
  return result;
}

uint64_t sub_191C35240()
{
  unint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for ContentMarginsContext() + 20));
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    uint64_t v3 = sub_191CF34D8();
    swift_endAccess();
  }
  else
  {
    id v4 = objc_msgSend(self, sel_mainBundle);
    id v2 = objc_msgSend(v4, sel_bundleIdentifier);

    if (!v2) {
      return 7104878;
    }
    uint64_t v3 = sub_191CF5338();
  }

  return v3;
}

uint64_t sub_191C35350()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v38 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (uint64_t)&v36 - v6;
  uint64_t v7 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v40 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v39 = (uint64_t)&v36 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1F4188790](v15);
  v19 = (char *)&v36 - v18;
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_191CF5D88();
  uint64_t v47 = v43;
  unint64_t v48 = v44;
  sub_191CF53B8();
  sub_191C36078(v0, (uint64_t)v19);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v41 = v2;
  v42 = v20;
  if (v20(v19, 1, v2) == 1)
  {
    v21 = (uint64_t *)&unk_1EB44BB00;
    v22 = (uint64_t *)v19;
  }
  else
  {
    sub_191C38728((uint64_t)v19, (uint64_t)v9, type metadata accessor for ViewSource);
    sub_191C386C8((uint64_t)v19, type metadata accessor for WidgetDescriptor);
    sub_191C92FD8((uint64_t)&v43);
    sub_191C386C8((uint64_t)v9, type metadata accessor for ViewSource);
    uint64_t v23 = v45;
    if (v45)
    {
      uint64_t v24 = v46;
      __swift_project_boxed_opaque_existential_1(&v43, v45);
      (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      goto LABEL_7;
    }
    v21 = &qword_1E92E4740;
    v22 = &v43;
  }
  sub_191B01770((uint64_t)v22, v21);
LABEL_7:
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v25 = type metadata accessor for ContentMarginsContext();
  v26 = *(void **)(v0 + *(int *)(v25 + 20));
  if (v26)
  {
    id v27 = objc_msgSend(v26, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    sub_191CF34D8();
    swift_endAccess();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191C36078(v0, (uint64_t)v17);
  if (v42(v17, 1, v41) == 1) {
    sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BB00);
  }
  else {
    sub_191C386C8((uint64_t)v17, type metadata accessor for WidgetDescriptor);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191C93190();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v28 = v39;
  sub_191C36078(v1, v39);
  uint64_t v29 = v41;
  if (v42((char *)v28, 1, v41) == 1)
  {
    sub_191B01770(v28, (uint64_t *)&unk_1EB44BB00);
  }
  else
  {
    uint64_t v30 = v37;
    sub_191C38660(v28, v37, type metadata accessor for WidgetDescriptor);
    sub_191C386C8(v30, type metadata accessor for WidgetDescriptor);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v31 = v40;
  sub_191C36078(v1, v40);
  if (v42((char *)v31, 1, v29) == 1)
  {
    sub_191B01770(v31, (uint64_t *)&unk_1EB44BB00);
  }
  else
  {
    uint64_t v32 = v38;
    sub_191C38660(v31, v38, type metadata accessor for WidgetDescriptor);
    sub_191C386C8(v32, type metadata accessor for WidgetDescriptor);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v33 = objc_msgSend(*(id *)(v1 + *(int *)(v25 + 24)), sel_margins);
  id v34 = objc_msgSend(v33, sel_description);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v47;
}

uint64_t sub_191C35BEC()
{
  uint64_t v0 = sub_191B532D0((uint64_t)&unk_1EE2A4BB0);
  uint64_t result = swift_arrayDestroy();
  qword_1E92E4730 = v0;
  return result;
}

uint64_t sub_191C35C38()
{
  uint64_t v0 = sub_191B532D0((uint64_t)&unk_1EE2A4920);
  uint64_t result = swift_arrayDestroy();
  qword_1E92E4738 = v0;
  return result;
}

uint64_t sub_191C35C84()
{
  uint64_t v0 = sub_191B532D0((uint64_t)&unk_1EE2A4BE0);
  uint64_t result = swift_arrayDestroy();
  qword_1E92F2588 = v0;
  return result;
}

uint64_t type metadata accessor for WidgetContentMarginEvaluator()
{
  return self;
}

BOOL sub_191C35CF4(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v27[-v12 - 8];
  uint64_t v28 = &type metadata for FeatureFlags.Widgets;
  unint64_t v29 = sub_191BDED7C();
  v27[0] = 5;
  char v14 = sub_191CF3438();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if (v14) {
    return 0;
  }
  sub_191C36078(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_191B01770((uint64_t)v6, (uint64_t *)&unk_1EB44BB00);
    return 0;
  }
  sub_191C38660((uint64_t)v6, (uint64_t)v13, type metadata accessor for WidgetDescriptor);
  if (qword_1E92E2C78 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1E92E4738;
  if (a1)
  {
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(a1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    uint64_t v17 = sub_191CF34D8();
    uint64_t v19 = v18;
    swift_endAccess();
LABEL_10:

    goto LABEL_11;
  }
  v20 = self;
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(v20, sel_mainBundle);
  id v16 = objc_msgSend(v21, sel_bundleIdentifier);

  if (v16)
  {
    uint64_t v17 = sub_191CF5338();
    uint64_t v19 = v22;
    goto LABEL_10;
  }
  uint64_t v19 = 0xE300000000000000;
  uint64_t v17 = 7104878;
LABEL_11:
  char v23 = sub_191C547BC(v17, v19, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191C38660((uint64_t)v13, (uint64_t)v11, type metadata accessor for WidgetDescriptor);
  if ((v23 & 1) == 0)
  {
    sub_191C386C8((uint64_t)v11, type metadata accessor for WidgetDescriptor);
    return 0;
  }
  int v24 = v11[*(int *)(v7 + 88)];
  sub_191C386C8((uint64_t)v11, type metadata accessor for WidgetDescriptor);
  return v24 == 2 || (v24 & 1) == 0;
}

uint64_t sub_191C36078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C360E0(uint64_t a1, char a2)
{
  uint64_t v4 = (int *)type metadata accessor for ContentMarginsContext();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v26 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v26 - v11;
  sub_191C38728(a1, (uint64_t)&v26 - v11, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if ((a2 & 1) == 0)
  {
    sub_191C386C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C38728(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    goto LABEL_5;
  }
  char v13 = v12[v4[8]];
  sub_191C38660((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if ((v13 & 1) == 0)
  {
    char v20 = v10[v4[9]];
    sub_191C386C8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C38728(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    if (v20) {
      goto LABEL_10;
    }
LABEL_5:
    if (qword_1E92E2C70 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_1E92E4730;
    uint64_t v15 = *(void **)&v7[v4[5]];
    if (v15)
    {
      swift_bridgeObjectRetain();
      id v16 = objc_msgSend(v15, sel_extensionIdentity);
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
      uint64_t v17 = sub_191CF34D8();
      uint64_t v19 = v18;
      swift_endAccess();
    }
    else
    {
      uint64_t v22 = self;
      swift_bridgeObjectRetain();
      id v23 = objc_msgSend(v22, sel_mainBundle);
      id v16 = objc_msgSend(v23, sel_bundleIdentifier);

      if (!v16)
      {
        uint64_t v19 = 0xE300000000000000;
        uint64_t v17 = 7104878;
        goto LABEL_14;
      }
      uint64_t v17 = sub_191CF5338();
      uint64_t v19 = v24;
    }

LABEL_14:
    char v21 = sub_191C547BC(v17, v19, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_191C386C8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C38728(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
LABEL_10:
  char v21 = 1;
LABEL_15:
  sub_191C386C8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  return v21 & 1;
}

BOOL sub_191C36430(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for ContentMarginsContext();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  os_log_t v58 = (os_log_t)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v59 = (uint64_t)&v54 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v54 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v54 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v54 - v23;
  if (*(unsigned char *)(a1 + v2[8])) {
    return 0;
  }
  sub_191C36078(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_191B01770((uint64_t)v14, (uint64_t *)&unk_1EB44BB00);
    return 0;
  }
  v57 = v19;
  sub_191C38660((uint64_t)v14, (uint64_t)v24, type metadata accessor for WidgetDescriptor);
  if (qword_1E92E2C80 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1E92F2588;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_191C35240();
  int v30 = sub_191C547BC(v28, v29, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191C38728(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  int v56 = v30;
  if ((v30 & 1) == 0)
  {
    sub_191C386C8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    goto LABEL_15;
  }
  char v31 = v11[v2[7]];
  sub_191C386C8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v31)
  {
LABEL_15:
    sub_191C38728(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    uint64_t v34 = v59;
    uint64_t v35 = (uint64_t)v57;
    goto LABEL_16;
  }
  id v32 = objc_msgSend(self, sel_currentDevice);
  id v33 = objc_msgSend(v32, sel_userInterfaceIdiom);

  sub_191C38728(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  uint64_t v34 = v59;
  uint64_t v35 = (uint64_t)v57;
  if (v33 == (id)1)
  {
LABEL_16:
    sub_191C386C8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C38728((uint64_t)v24, (uint64_t)v22, type metadata accessor for WidgetDescriptor);
    goto LABEL_17;
  }
  objc_msgSend(*(id *)&v9[v2[6]], sel_scaleFactor);
  char v36 = BSFloatApproximatelyEqualToFloat();
  sub_191C386C8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C38728((uint64_t)v24, (uint64_t)v22, type metadata accessor for WidgetDescriptor);
  if ((v36 & 1) == 0)
  {
    int v37 = v22[*(int *)(v15 + 88)];
    sub_191C386C8((uint64_t)v22, type metadata accessor for WidgetDescriptor);
    BOOL v25 = v37 == 2 || (v37 & 1) == 0;
    goto LABEL_18;
  }
LABEL_17:
  sub_191C386C8((uint64_t)v22, type metadata accessor for WidgetDescriptor);
  BOOL v25 = 0;
LABEL_18:
  os_log_t v38 = v58;
  if (qword_1E92E2CD8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_191CF3858();
  __swift_project_value_buffer(v39, (uint64_t)qword_1E92F2598);
  sub_191C38728(a1, v34, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C38728(a1, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C38728((uint64_t)v24, v35, type metadata accessor for WidgetDescriptor);
  uint64_t v40 = sub_191CF3838();
  int v41 = sub_191CF5918();
  if (os_log_type_enabled(v40, (os_log_type_t)v41))
  {
    LODWORD(v57) = v41;
    os_log_t v58 = v40;
    uint64_t v42 = v34;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v61 = v55;
    *(_DWORD *)uint64_t v43 = 136316162;
    unint64_t v44 = *(void **)(v42 + v2[5]);
    if (v44)
    {
      id v45 = objc_msgSend(v44, sel_extensionIdentity);
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
      uint64_t v46 = sub_191CF34D8();
      unint64_t v48 = v47;
      swift_endAccess();
    }
    else
    {
      unint64_t v48 = 0xE300000000000000;
      uint64_t v46 = 7104878;
    }
    uint64_t v60 = sub_191C5C36C(v46, v48, &v61);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    sub_191C386C8(v59, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    *(_WORD *)(v43 + 12) = 1024;
    LODWORD(v60) = v25;
    sub_191CF5C08();
    *(_WORD *)(v43 + 18) = 1024;
    LODWORD(v60) = v56 & 1;
    sub_191CF5C08();
    *(_WORD *)(v43 + 24) = 1024;
    uint64_t v49 = (uint64_t)v38;
    int v50 = *((unsigned __int8 *)&v38->isa + v2[7]);
    sub_191C386C8(v49, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    LODWORD(v60) = v50;
    sub_191CF5C08();
    *(_WORD *)(v43 + 30) = 1024;
    int v51 = *(unsigned char *)(v35 + *(int *)(v15 + 88)) & 1;
    sub_191C386C8(v35, type metadata accessor for WidgetDescriptor);
    LODWORD(v60) = v51;
    sub_191CF5C08();
    os_log_t v52 = v58;
    _os_log_impl(&dword_191AF4000, v58, (os_log_type_t)v57, "wants legacy margins for %s: %{BOOL}d - inEligibleBundle: %{BOOL}d, showsWidgetBackground: %{BOOL}d, enableContentMarginsForFirstParty: %{BOOL}d", (uint8_t *)v43, 0x24u);
    uint64_t v53 = v55;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v53, -1, -1);
    MEMORY[0x192FE5F00](v43, -1, -1);

    sub_191C386C8((uint64_t)v24, type metadata accessor for WidgetDescriptor);
  }
  else
  {
    sub_191C386C8(v35, type metadata accessor for WidgetDescriptor);
    sub_191C386C8((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);

    sub_191C386C8(v34, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C386C8((uint64_t)v24, type metadata accessor for WidgetDescriptor);
  }
  return v25;
}

double sub_191C36C80(uint64_t a1, unsigned char *a2, char a3, double a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContentMarginsContext();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v33 - v16;
  char v18 = *(unsigned char *)(a1 + *(int *)(v15 + 32));
  sub_191C38728(a1, (uint64_t)&v33 - v16, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v18)
  {
    sub_191C386C8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    return a4;
  }
  BOOL v19 = sub_191C36430((uint64_t)v17);
  sub_191C386C8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (!v19) {
    return a4;
  }
  *a2 = 1;
  if (*(unsigned char *)(a1 + *(int *)(v11 + 36)) == 1)
  {
    char v20 = sub_191C360E0(a1, 0);
    sub_191C38728(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    if (v20)
    {
      sub_191C386C8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
LABEL_13:
      id v30 = objc_msgSend(*(id *)(a1 + *(int *)(v11 + 24)), sel_margins);
      objc_msgSend(v30, sel_backgroundRemovedContentMargins);
      a4 = v31;

      return a4;
    }
    sub_191C36078((uint64_t)v14, (uint64_t)v10);
    sub_191C386C8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    uint64_t v25 = type metadata accessor for WidgetDescriptor(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v10, 1, v25) == 1)
    {
      sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BB00);
    }
    else
    {
      char v26 = v10[*(int *)(v25 + 88)];
      sub_191C386C8((uint64_t)v10, type metadata accessor for WidgetDescriptor);
      if (v26) {
        goto LABEL_13;
      }
    }
    id v27 = objc_msgSend(*(id *)(a1 + *(int *)(v11 + 24)), sel_margins);
    objc_msgSend(v27, sel_backgroundRemovedContentMargins);
    double v29 = v28;

    return v29 + v29;
  }
  uint64_t v21 = *(void **)(a1 + *(int *)(v11 + 24));
  id v22 = objc_msgSend(v21, sel_margins);
  objc_msgSend(v22, sel_contentMargins);
  a4 = v23;

  if ((a3 & 1) == 0)
  {
    objc_msgSend(v21, sel_scaleFactor);
    return a4 * v24;
  }
  return a4;
}

float64x2_t sub_191C37028(uint64_t a1, float64x2_t *a2)
{
  v75 = a2;
  uint64_t v3 = type metadata accessor for ContentMarginsContext();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v71 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v74 = (uint64_t)&v67 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v67 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v72 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v73 = (uint64_t)&v67 - v17;
  MEMORY[0x1F4188790](v16);
  BOOL v19 = (char *)&v67 - v18;
  char v20 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v70 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  char v26 = (char *)&v67 - v25;
  MEMORY[0x1F4188790](v24);
  double v28 = (char *)&v67 - v27;
  sub_191C36078(a1, (uint64_t)v19);
  double v29 = *(unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  if (v29(v19, 1, v20) == 1)
  {
    sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BB00);
    return *v75;
  }
  sub_191C38660((uint64_t)v19, (uint64_t)v28, type metadata accessor for WidgetDescriptor);
  int v30 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 36));
  sub_191C38728(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  v69 = v28;
  if (v30 != 1)
  {
    sub_191C386C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C38728((uint64_t)v28, (uint64_t)v26, type metadata accessor for WidgetDescriptor);
    goto LABEL_13;
  }
  uint64_t v68 = v3;
  char v31 = v12[*(int *)(v3 + 28)];
  sub_191C386C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C38728((uint64_t)v28, (uint64_t)v26, type metadata accessor for WidgetDescriptor);
  if (v31)
  {
LABEL_13:
    sub_191C386C8((uint64_t)v26, type metadata accessor for WidgetDescriptor);
    goto LABEL_14;
  }
  char v32 = v26[v20[19]];
  sub_191C386C8((uint64_t)v26, type metadata accessor for WidgetDescriptor);
  if ((v32 & 1) == 0)
  {
LABEL_14:
    sub_191C38728(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    goto LABEL_15;
  }
  id v33 = objc_msgSend(self, sel_currentDevice);
  id v34 = objc_msgSend(v33, sel_userInterfaceIdiom);

  sub_191C38728(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v34 == (id)1)
  {
LABEL_15:
    uint64_t v42 = (uint64_t)v10;
    goto LABEL_16;
  }
  uint64_t v35 = v68;
  objc_msgSend(*(id *)&v10[*(int *)(v68 + 24)], sel_scaleFactor);
  char v36 = BSFloatApproximatelyEqualToFloat();
  sub_191C386C8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v36)
  {
LABEL_17:
    sub_191C386C8((uint64_t)v69, type metadata accessor for WidgetDescriptor);
    return *v75;
  }
  if (qword_1E92E2C80 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1E92F2588;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_191C35240();
  char v40 = sub_191C547BC(v38, v39, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v74;
  sub_191C38728(a1, v74, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v40)
  {
    uint64_t v42 = v41;
LABEL_16:
    sub_191C386C8(v42, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    goto LABEL_17;
  }
  uint64_t v44 = v73;
  sub_191C36078(v41, v73);
  sub_191C386C8(v41, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if (v29((char *)v44, 1, v20) == 1)
  {
    sub_191B01770(v44, (uint64_t *)&unk_1EB44BB00);
  }
  else
  {
    char v45 = *(unsigned char *)(v44 + v20[22]);
    sub_191C386C8(v44, type metadata accessor for WidgetDescriptor);
    if (v45) {
      goto LABEL_17;
    }
  }
  uint64_t v46 = v72;
  sub_191C36078(a1, v72);
  if (v29((char *)v46, 1, v20) == 1)
  {
    sub_191B01770(v46, (uint64_t *)&unk_1EB44BB00);
    uint64_t v47 = v71;
    sub_191C38728(a1, v71, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
LABEL_25:
    sub_191C386C8(v47, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    sub_191C386C8((uint64_t)v69, type metadata accessor for WidgetDescriptor);
    int v50 = v75;
LABEL_26:
    __asm { FMOV            V3.2D, #0.5 }
    return vmulq_f64(*v50, _Q3);
  }
  uint64_t v48 = v70;
  sub_191C38660(v46, v70, type metadata accessor for WidgetDescriptor);
  char v49 = *(unsigned char *)(v48 + v20[37]);
  sub_191C386C8(v48, type metadata accessor for WidgetDescriptor);
  uint64_t v47 = v71;
  sub_191C38728(a1, v71, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if ((v49 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v56 = qword_1E92F2588;
  v57 = *(void **)(v47 + *(int *)(v35 + 20));
  if (v57)
  {
    swift_bridgeObjectRetain();
    id v58 = objc_msgSend(v57, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    uint64_t v59 = sub_191CF34D8();
    uint64_t v61 = v60;
    swift_endAccess();
LABEL_31:

    goto LABEL_32;
  }
  v62 = self;
  swift_bridgeObjectRetain();
  id v63 = objc_msgSend(v62, sel_mainBundle);
  id v58 = objc_msgSend(v63, sel_bundleIdentifier);

  if (v58)
  {
    uint64_t v59 = sub_191CF5338();
    uint64_t v61 = v64;
    goto LABEL_31;
  }
  uint64_t v61 = 0xE300000000000000;
  uint64_t v59 = 7104878;
LABEL_32:
  int v50 = v75;
  uint64_t v65 = (uint64_t)v69;
  char v66 = sub_191C547BC(v59, v61, v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191C386C8(v47, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  sub_191C386C8(v65, type metadata accessor for WidgetDescriptor);
  if (v66) {
    goto LABEL_26;
  }
  return *v50;
}

uint64_t sub_191C378A8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v113 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v110 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v108 = (uint64_t)&v108 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v108 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v108 - v15;
  uint64_t v17 = (int *)type metadata accessor for ContentMarginsContext();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v111 = (uint64_t)&v108 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v114 = (uint64_t)&v108 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v109 = (uint64_t)&v108 - v26;
  MEMORY[0x1F4188790](v25);
  double v28 = (char *)&v108 - v27;
  char v29 = sub_191C93190();
  sub_191C38728(a1, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  v115 = a2;
  uint64_t v116 = v4;
  v112 = v20;
  if (v29)
  {
    sub_191C36078((uint64_t)v28, (uint64_t)v16);
    sub_191C386C8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v16, (uint64_t *)&unk_1EB44BB00);
      char v30 = 0;
    }
    else
    {
      char v30 = v16[*(int *)(v4 + 84)];
      sub_191C386C8((uint64_t)v16, type metadata accessor for WidgetDescriptor);
    }
    char v31 = v30 ^ 1;
    uint64_t v33 = v5;
    if (*(unsigned char *)(a1 + v17[7]))
    {
      char v32 = &selRef_contentMargins;
      goto LABEL_11;
    }
  }
  else
  {
    sub_191C386C8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    char v31 = 0;
    if (*(unsigned char *)(a1 + v17[7]))
    {
      char v32 = &selRef_contentMargins;
      uint64_t v33 = v5;
      goto LABEL_11;
    }
    uint64_t v33 = v5;
  }
  char v32 = &selRef_backgroundRemovedContentMargins;
LABEL_11:
  id v34 = objc_msgSend(*(id *)(a1 + v17[6]), sel_margins);
  [v34 *v32];
  double v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;

  uint64_t v41 = v17[5];
  uint64_t v42 = *(void **)(a1 + v41);
  if (v42)
  {
    id v43 = objc_msgSend(v42, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    sub_191CF34D8();
    swift_endAccess();

    char v44 = sub_191CF53E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v44 = 0;
  }
  sub_191C36078(a1, (uint64_t)v14);
  char v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  uint64_t v46 = v116;
  if (v45(v14, 1, v116) == 1)
  {
    uint64_t v47 = (uint64_t)v14;
LABEL_16:
    sub_191B01770(v47, (uint64_t *)&unk_1EB44BB00);
    goto LABEL_20;
  }
  uint64_t v48 = (uint64_t)v14;
  uint64_t v49 = v113;
  sub_191C38660(v48, v113, type metadata accessor for WidgetDescriptor);
  int v50 = *(unsigned __int8 *)(v49 + *(int *)(v46 + 152));
  if (v50 == 2)
  {
    sub_191C386C8(v49, type metadata accessor for WidgetDescriptor);
  }
  else
  {
    uint64_t result = sub_191C386C8(v49, type metadata accessor for WidgetDescriptor);
    if (v50)
    {
      if ((v44 & 1) == 0) {
        goto LABEL_56;
      }
      int v59 = *(unsigned __int8 *)(a1 + v17[8]);
      uint64_t v60 = v109;
      sub_191C38728(a1, v109, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
      if (v59 == 1)
      {
        uint64_t result = sub_191C386C8(v60, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
        uint64_t v61 = v38;
        goto LABEL_52;
      }
      uint64_t v105 = v108;
      sub_191C36078(v60, v108);
      sub_191C386C8(v60, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
      uint64_t v106 = v116;
      if (v45((char *)v105, 1, v116) == 1)
      {
        uint64_t v47 = v105;
        goto LABEL_16;
      }
      char v107 = *(unsigned char *)(v105 + *(int *)(v106 + 88));
      uint64_t result = sub_191C386C8(v105, type metadata accessor for WidgetDescriptor);
      if (v107)
      {
LABEL_56:
        uint64_t v61 = v38;
        goto LABEL_52;
      }
    }
  }
LABEL_20:
  BOOL v52 = sub_191C35CF4(*(void **)(a1 + v41), a1);
  v122[0] = v31 & !v52;
  char v53 = sub_191C360E0(a1, 1);
  uint64_t v54 = v114;
  sub_191C38728(a1, v114, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
  if ((v53 & 1) == 0)
  {
    uint64_t v55 = v54;
    uint64_t v56 = v111;
    sub_191C38660(v55, v111, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    if (v52)
    {
      sub_191C386C8(v56, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    }
    else
    {
      uint64_t v57 = v110;
      sub_191C36078(v56, v110);
      sub_191C386C8(v56, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
      uint64_t v58 = v116;
      if (v45((char *)v57, 1, v116) == 1)
      {
        sub_191B01770(v57, (uint64_t *)&unk_1EB44BB00);
        goto LABEL_30;
      }
      char v62 = *(unsigned char *)(v57 + *(int *)(v58 + 88));
      sub_191C386C8(v57, type metadata accessor for WidgetDescriptor);
      if ((v62 & 1) == 0) {
        goto LABEL_30;
      }
    }
    objc_msgSend(*(id *)(a1 + v17[6]), sel_scaleFactor);
    double v36 = v36 * v64;
    int v63 = 1;
    goto LABEL_32;
  }
  sub_191C386C8(v54, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
LABEL_30:
  int v63 = 0;
LABEL_32:
  v119.f64[0] = sub_191C36C80(a1, v122, v53 & 1, v36);
  v119.f64[1] = v65;
  uint64_t v120 = v66;
  uint64_t v121 = v67;
  *(void *)&double v36 = *(_OWORD *)&sub_191C37028(a1, &v119);
  uint64_t v38 = *(void *)&v68;
  uint64_t v61 = v69;
  uint64_t v40 = v70;
  v119.f64[0] = v36;
  v119.f64[1] = v68;
  uint64_t v120 = v69;
  uint64_t v121 = v70;
  if (qword_1E92E2CC8 != -1) {
    swift_once();
  }
  uint64_t v71 = qword_1E92F2590;
  os_log_type_t v72 = sub_191CF5918();
  if (os_log_type_enabled(v71, v72))
  {
    LODWORD(v116) = v52;
    if (qword_1E92E2CD8 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_191CF3858();
    __swift_project_value_buffer(v73, (uint64_t)qword_1E92F2598);
    uint64_t v74 = (uint64_t)v112;
    sub_191C38728(a1, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    v75 = sub_191CF3838();
    os_log_type_t v76 = sub_191CF5918();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      LODWORD(v114) = v63;
      uint64_t v79 = v78;
      v117[0] = v78;
      *(_DWORD *)v77 = 136315138;
      uint64_t v80 = sub_191C35350();
      uint64_t v118 = sub_191C5C36C(v80, v81, v117);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      sub_191C386C8(v74, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
      _os_log_impl(&dword_191AF4000, v75, v76, "Margins input: %s", v77, 0xCu);
      swift_arrayDestroy();
      uint64_t v82 = v79;
      int v63 = v114;
      MEMORY[0x192FE5F00](v82, -1, -1);
      MEMORY[0x192FE5F00](v77, -1, -1);
    }
    else
    {
      sub_191C386C8(v74, (uint64_t (*)(void))type metadata accessor for ContentMarginsContext);
    }

    v83 = sub_191CF3838();
    os_log_type_t v84 = sub_191CF5918();
    BOOL v85 = os_log_type_enabled(v83, v84);
    char v86 = v116;
    if (v85)
    {
      v87 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v87 = 67109120;
      LODWORD(v117[0]) = v86 & 1;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v83, v84, "needsLegacyBackgroundAndContentMargins: %{BOOL}d", v87, 8u);
      MEMORY[0x192FE5F00](v87, -1, -1);
    }

    v88 = sub_191CF3838();
    os_log_type_t v89 = sub_191CF5918();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v90 = 67109120;
      LODWORD(v117[0]) = v53 & 1;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v88, v89, "exemptFromLegacyScaledContentMargins: %{BOOL}d", v90, 8u);
      MEMORY[0x192FE5F00](v90, -1, -1);
    }

    v91 = sub_191CF3838();
    os_log_type_t v92 = sub_191CF5918();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v93 = 67109120;
      LODWORD(v117[0]) = v63;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v91, v92, "needsLegacyScaledMargins: %{BOOL}d", v93, 8u);
      MEMORY[0x192FE5F00](v93, -1, -1);
    }

    v94 = sub_191CF3838();
    os_log_type_t v95 = sub_191CF5918();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      *(_DWORD *)v96 = 136315138;
      uint64_t v118 = v97;
      *(double *)v117 = v36;
      v117[1] = v38;
      v117[2] = v61;
      v117[3] = v40;
      uint64_t v98 = sub_191CF5368();
      v117[0] = sub_191C5C36C(v98, v99, &v118);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v94, v95, "finalEffectiveMargins: %s", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v97, -1, -1);
      MEMORY[0x192FE5F00](v96, -1, -1);
    }

    int v100 = v122[0];
    v101 = sub_191CF3838();
    os_log_type_t v102 = sub_191CF5918();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v103 = 67109120;
      LODWORD(v117[0]) = v100;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v101, v102, "applyContentMargins: %{BOOL}d", v103, 8u);
      MEMORY[0x192FE5F00](v103, -1, -1);
    }
  }
  uint64_t result = swift_beginAccess();
  char v31 = v122[0];
LABEL_52:
  v104 = v115;
  double *v115 = v36;
  *((void *)v104 + 1) = v38;
  *((void *)v104 + 2) = v61;
  *((void *)v104 + 3) = v40;
  *((unsigned char *)v104 + 32) = v31;
  return result;
}

uint64_t type metadata accessor for ContentMarginsContext()
{
  uint64_t result = qword_1E92E4748;
  if (!qword_1E92E4748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C38660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C386C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C38728(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_191C38790(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for WidgetDescriptor(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      type metadata accessor for ViewSource(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        uint64_t v19 = (void *)a2[5];
        a1[4] = a2[4];
        a1[5] = (uint64_t)v19;
        char v20 = *((unsigned char *)a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v21 = v19;
        if (v20)
        {
          uint64_t v22 = a2[7];
          a1[6] = a2[6];
          a1[7] = v22;
          swift_retain();
        }
        else
        {
          long long v27 = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 9) = v27;
          (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6));
        }
        *((unsigned char *)a1 + 88) = v20;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = sub_191CF33C8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        *(void *)uint64_t v14 = *(void *)v15;
        uint64_t v16 = *((void *)v15 + 3);
        *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
        *((void *)v14 + 3) = v16;
        swift_retain();
        swift_retain();
      }
      else
      {
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = a2[3];
        a1[2] = a2[2];
        a1[3] = v24;
        uint64_t v25 = a2[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25)
        {
          uint64_t v26 = a2[5];
          a1[4] = v25;
          a1[5] = v26;
          swift_retain();
        }
        else
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        }
        uint64_t v28 = a2[7];
        a1[6] = a2[6];
        a1[7] = v28;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = v7[5];
      char v30 = (uint64_t *)((char *)a1 + v29);
      char v31 = (uint64_t *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      *char v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v7[6];
      id v34 = (uint64_t *)((char *)a1 + v33);
      double v35 = (uint64_t *)((char *)a2 + v33);
      uint64_t v57 = v35[1];
      *id v34 = *v35;
      v34[1] = v57;
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      uint64_t v36 = v7[12];
      uint64_t v37 = (uint64_t *)((char *)a1 + v36);
      uint64_t v38 = (uint64_t *)((char *)a2 + v36);
      uint64_t v56 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v56;
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
      *((unsigned char *)a1 + v7[17]) = *((unsigned char *)a2 + v7[17]);
      *(uint64_t *)((char *)a1 + v7[18]) = *(uint64_t *)((char *)a2 + v7[18]);
      *((unsigned char *)a1 + v7[19]) = *((unsigned char *)a2 + v7[19]);
      *((unsigned char *)a1 + v7[20]) = *((unsigned char *)a2 + v7[20]);
      *((unsigned char *)a1 + v7[21]) = *((unsigned char *)a2 + v7[21]);
      *((unsigned char *)a1 + v7[22]) = *((unsigned char *)a2 + v7[22]);
      uint64_t v39 = v7[23];
      uint64_t v40 = (uint64_t *)((char *)a1 + v39);
      uint64_t v41 = (uint64_t *)((char *)a2 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      *((unsigned char *)a1 + v7[24]) = *((unsigned char *)a2 + v7[24]);
      *((unsigned char *)a1 + v7[25]) = *((unsigned char *)a2 + v7[25]);
      *((unsigned char *)a1 + v7[26]) = *((unsigned char *)a2 + v7[26]);
      *((unsigned char *)a1 + v7[27]) = *((unsigned char *)a2 + v7[27]);
      *((unsigned char *)a1 + v7[28]) = *((unsigned char *)a2 + v7[28]);
      *((unsigned char *)a1 + v7[29]) = *((unsigned char *)a2 + v7[29]);
      *((unsigned char *)a1 + v7[30]) = *((unsigned char *)a2 + v7[30]);
      *((unsigned char *)a1 + v7[31]) = *((unsigned char *)a2 + v7[31]);
      *(_OWORD *)((char *)a1 + v7[32]) = *(_OWORD *)((char *)a2 + v7[32]);
      *(uint64_t *)((char *)a1 + v7[33]) = *(uint64_t *)((char *)a2 + v7[33]);
      uint64_t v43 = v7[34];
      char v44 = (uint64_t *)((char *)a1 + v43);
      char v45 = (uint64_t *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *char v44 = *v45;
      v44[1] = v46;
      *(uint64_t *)((char *)a1 + v7[35]) = *(uint64_t *)((char *)a2 + v7[35]);
      *((unsigned char *)a1 + v7[36]) = *((unsigned char *)a2 + v7[36]);
      *((unsigned char *)a1 + v7[37]) = *((unsigned char *)a2 + v7[37]);
      *((unsigned char *)a1 + v7[38]) = *((unsigned char *)a2 + v7[38]);
      uint64_t v47 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(a1, 0, 1, v7);
    }
    uint64_t v48 = a3[5];
    uint64_t v49 = a3[6];
    int v50 = *(void **)((char *)a2 + v48);
    *(uint64_t *)((char *)a1 + v48) = (uint64_t)v50;
    int v51 = *(void **)((char *)a2 + v49);
    *(uint64_t *)((char *)a1 + v49) = (uint64_t)v51;
    uint64_t v52 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v52) = *((unsigned char *)a2 + v52);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    id v53 = v50;
    id v54 = v51;
  }
  return a1;
}

void sub_191C38CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = sub_191CF33C8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 32)) {
          swift_release();
        }
LABEL_9:
        swift_release();
      }
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((*(unsigned char *)(a1 + 88) & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 48);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
LABEL_12:

  uint64_t v7 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *sub_191C38EFC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      uint64_t v17 = (void *)a2[5];
      a1[4] = a2[4];
      a1[5] = v17;
      char v18 = *((unsigned char *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = v17;
      if (v18)
      {
        uint64_t v20 = a2[7];
        a1[6] = a2[6];
        a1[7] = v20;
        swift_retain();
      }
      else
      {
        long long v25 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 9) = v25;
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6));
      }
      *((unsigned char *)a1 + 88) = v18;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_191CF33C8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      *(void *)uint64_t v12 = *(void *)v13;
      uint64_t v14 = *((void *)v13 + 3);
      *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
      *((void *)v12 + 3) = v14;
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      uint64_t v22 = a2[3];
      a1[2] = a2[2];
      a1[3] = v22;
      uint64_t v23 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23)
      {
        uint64_t v24 = a2[5];
        a1[4] = v23;
        a1[5] = v24;
        swift_retain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      uint64_t v26 = a2[7];
      a1[6] = a2[6];
      a1[7] = v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v6[5];
    uint64_t v28 = (void *)((char *)a1 + v27);
    uint64_t v29 = (void *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = v6[6];
    uint64_t v32 = (void *)((char *)a1 + v31);
    uint64_t v33 = (void *)((char *)a2 + v31);
    uint64_t v55 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v55;
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
    uint64_t v34 = v6[12];
    double v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v54 = v36[1];
    *double v35 = *v36;
    v35[1] = v54;
    *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
    *(void *)((char *)a1 + v6[18]) = *(void *)((char *)a2 + v6[18]);
    *((unsigned char *)a1 + v6[19]) = *((unsigned char *)a2 + v6[19]);
    *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
    *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
    *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
    uint64_t v37 = v6[23];
    uint64_t v38 = (void *)((char *)a1 + v37);
    uint64_t v39 = (void *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    *((unsigned char *)a1 + v6[24]) = *((unsigned char *)a2 + v6[24]);
    *((unsigned char *)a1 + v6[25]) = *((unsigned char *)a2 + v6[25]);
    *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
    *((unsigned char *)a1 + v6[27]) = *((unsigned char *)a2 + v6[27]);
    *((unsigned char *)a1 + v6[28]) = *((unsigned char *)a2 + v6[28]);
    *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
    *((unsigned char *)a1 + v6[30]) = *((unsigned char *)a2 + v6[30]);
    *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
    *(_OWORD *)((char *)a1 + v6[32]) = *(_OWORD *)((char *)a2 + v6[32]);
    *(void *)((char *)a1 + v6[33]) = *(void *)((char *)a2 + v6[33]);
    uint64_t v41 = v6[34];
    uint64_t v42 = (void *)((char *)a1 + v41);
    uint64_t v43 = (void *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
    *((unsigned char *)a1 + v6[36]) = *((unsigned char *)a2 + v6[36]);
    *((unsigned char *)a1 + v6[37]) = *((unsigned char *)a2 + v6[37]);
    *((unsigned char *)a1 + v6[38]) = *((unsigned char *)a2 + v6[38]);
    char v45 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(a1, 0, 1, v6);
  }
  uint64_t v46 = a3[5];
  uint64_t v47 = a3[6];
  uint64_t v48 = *(void **)((char *)a2 + v46);
  *(void *)((char *)a1 + v46) = v48;
  uint64_t v49 = *(void **)((char *)a2 + v47);
  *(void *)((char *)a1 + v47) = v49;
  uint64_t v50 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  id v51 = v48;
  id v52 = v49;
  return a1;
}

uint64_t sub_191C39418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      type metadata accessor for ViewSource(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        uint64_t v26 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v26;
        char v27 = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v28 = v26;
        if (v27)
        {
          uint64_t v29 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v29;
          swift_retain();
        }
        else
        {
          uint64_t v32 = *(void *)(a2 + 72);
          *(void *)(a1 + 72) = v32;
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          (**(void (***)(uint64_t, uint64_t))(v32 - 8))(a1 + 48, a2 + 48);
        }
        *(unsigned char *)(a1 + 88) = v27;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = sub_191CF33C8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (void *)(a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        uint64_t v17 = v15[3];
        v14[2] = v15[2];
        v14[3] = v17;
        swift_retain();
        swift_retain();
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v30 = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30)
        {
          uint64_t v31 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = v30;
          *(void *)(a1 + 40) = v31;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        }
        uint64_t v39 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v39;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v6[5];
      uint64_t v41 = (void *)(a1 + v40);
      uint64_t v42 = (void *)(a2 + v40);
      *uint64_t v41 = *v42;
      v41[1] = v42[1];
      uint64_t v43 = v6[6];
      uint64_t v44 = (void *)(a1 + v43);
      char v45 = (void *)(a2 + v43);
      *uint64_t v44 = *v45;
      v44[1] = v45[1];
      *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
      *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
      *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
      *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
      uint64_t v46 = v6[12];
      uint64_t v47 = (void *)(a1 + v46);
      uint64_t v48 = (void *)(a2 + v46);
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
      *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
      *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
      *(unsigned char *)(a1 + v6[19]) = *(unsigned char *)(a2 + v6[19]);
      *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
      *(unsigned char *)(a1 + v6[21]) = *(unsigned char *)(a2 + v6[21]);
      *(unsigned char *)(a1 + v6[22]) = *(unsigned char *)(a2 + v6[22]);
      uint64_t v49 = v6[23];
      uint64_t v50 = (void *)(a1 + v49);
      id v51 = (void *)(a2 + v49);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      *(unsigned char *)(a1 + v6[24]) = *(unsigned char *)(a2 + v6[24]);
      *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(a2 + v6[25]);
      *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(a2 + v6[26]);
      *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(a2 + v6[27]);
      *(unsigned char *)(a1 + v6[28]) = *(unsigned char *)(a2 + v6[28]);
      *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(a2 + v6[29]);
      *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(a2 + v6[30]);
      *(unsigned char *)(a1 + v6[31]) = *(unsigned char *)(a2 + v6[31]);
      *(_OWORD *)(a1 + v6[32]) = *(_OWORD *)(a2 + v6[32]);
      *(void *)(a1 + v6[33]) = *(void *)(a2 + v6[33]);
      uint64_t v52 = v6[34];
      id v53 = (void *)(a1 + v52);
      uint64_t v54 = (void *)(a2 + v52);
      *id v53 = *v54;
      v53[1] = v54[1];
      *(void *)(a1 + v6[35]) = *(void *)(a2 + v6[35]);
      *(unsigned char *)(a1 + v6[36]) = *(unsigned char *)(a2 + v6[36]);
      *(unsigned char *)(a1 + v6[37]) = *(unsigned char *)(a2 + v6[37]);
      *(unsigned char *)(a1 + v6[38]) = *(unsigned char *)(a2 + v6[38]);
      uint64_t v55 = *(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(a1, 0, 1, v6);
      goto LABEL_32;
    }
LABEL_8:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_32;
  }
  if (v10)
  {
    sub_191C386C8(a1, type metadata accessor for WidgetDescriptor);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_191C386C8(a1, type metadata accessor for ViewSource);
    type metadata accessor for ViewSource(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v33 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v33;
      char v34 = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v35 = v33;
      if (v34)
      {
        uint64_t v36 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v36;
        swift_retain();
      }
      else
      {
        uint64_t v56 = *(void *)(a2 + 72);
        *(void *)(a1 + 72) = v56;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v56 - 8))(a1 + 48, a2 + 48);
      }
      *(unsigned char *)(a1 + 88) = v34;
    }
    else if (v19 == 1)
    {
      uint64_t v20 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      uint64_t v24 = v23[1];
      void *v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v23[3];
      v22[2] = v23[2];
      v22[3] = v25;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v37 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v37)
      {
        uint64_t v38 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v37;
        *(void *)(a1 + 40) = v38;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      uint64_t v57 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v58 = v6[5];
  int v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  *int v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v6[6];
  char v62 = (void *)(a1 + v61);
  int v63 = (void *)(a2 + v61);
  void *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  uint64_t v64 = v6[12];
  float64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  *float64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
  *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
  *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[19]) = *(unsigned char *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  *(unsigned char *)(a1 + v6[21]) = *(unsigned char *)(a2 + v6[21]);
  *(unsigned char *)(a1 + v6[22]) = *(unsigned char *)(a2 + v6[22]);
  uint64_t v67 = v6[23];
  float64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  *float64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[24]) = *(unsigned char *)(a2 + v6[24]);
  *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(a2 + v6[25]);
  *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(a2 + v6[26]);
  *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(a2 + v6[27]);
  *(unsigned char *)(a1 + v6[28]) = *(unsigned char *)(a2 + v6[28]);
  *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(a2 + v6[29]);
  *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(a2 + v6[30]);
  *(unsigned char *)(a1 + v6[31]) = *(unsigned char *)(a2 + v6[31]);
  *(_OWORD *)(a1 + v6[32]) = *(_OWORD *)(a2 + v6[32]);
  *(void *)(a1 + v6[33]) = *(void *)(a2 + v6[33]);
  uint64_t v70 = v6[34];
  uint64_t v71 = (void *)(a1 + v70);
  os_log_type_t v72 = (void *)(a2 + v70);
  *uint64_t v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[35]) = *(void *)(a2 + v6[35]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[36]) = *(unsigned char *)(a2 + v6[36]);
  *(unsigned char *)(a1 + v6[37]) = *(unsigned char *)(a2 + v6[37]);
  *(unsigned char *)(a1 + v6[38]) = *(unsigned char *)(a2 + v6[38]);
LABEL_32:
  uint64_t v73 = a3[5];
  uint64_t v74 = *(void **)(a1 + v73);
  v75 = *(void **)(a2 + v73);
  *(void *)(a1 + v73) = v75;
  id v76 = v75;

  uint64_t v77 = a3[6];
  uint64_t v78 = *(void **)(a2 + v77);
  uint64_t v79 = *(void **)(a1 + v77);
  *(void *)(a1 + v77) = v78;
  id v80 = v78;

  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

char *sub_191C39E48(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_191CF33C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
    a1[v6[13]] = a2[v6[13]];
    a1[v6[14]] = a2[v6[14]];
    a1[v6[15]] = a2[v6[15]];
    a1[v6[16]] = a2[v6[16]];
    a1[v6[17]] = a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    a1[v6[19]] = a2[v6[19]];
    a1[v6[20]] = a2[v6[20]];
    a1[v6[21]] = a2[v6[21]];
    a1[v6[22]] = a2[v6[22]];
    *(_OWORD *)&a1[v6[23]] = *(_OWORD *)&a2[v6[23]];
    a1[v6[24]] = a2[v6[24]];
    a1[v6[25]] = a2[v6[25]];
    a1[v6[26]] = a2[v6[26]];
    a1[v6[27]] = a2[v6[27]];
    a1[v6[28]] = a2[v6[28]];
    a1[v6[29]] = a2[v6[29]];
    a1[v6[30]] = a2[v6[30]];
    a1[v6[31]] = a2[v6[31]];
    *(_OWORD *)&a1[v6[32]] = *(_OWORD *)&a2[v6[32]];
    *(void *)&a1[v6[33]] = *(void *)&a2[v6[33]];
    *(_OWORD *)&a1[v6[34]] = *(_OWORD *)&a2[v6[34]];
    *(void *)&a1[v6[35]] = *(void *)&a2[v6[35]];
    a1[v6[36]] = a2[v6[36]];
    a1[v6[37]] = a2[v6[37]];
    a1[v6[38]] = a2[v6[38]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v15 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v16] = a2[v16];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_191C3A1C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for ViewSource(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_191CF33C8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
        long long v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        long long v16 = *((_OWORD *)v15 + 1);
        *(_OWORD *)long long v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v16;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
      *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
      *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
      *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
      *(_OWORD *)&a1[v6[12]] = *(_OWORD *)&a2[v6[12]];
      a1[v6[13]] = a2[v6[13]];
      a1[v6[14]] = a2[v6[14]];
      a1[v6[15]] = a2[v6[15]];
      a1[v6[16]] = a2[v6[16]];
      a1[v6[17]] = a2[v6[17]];
      *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
      a1[v6[19]] = a2[v6[19]];
      a1[v6[20]] = a2[v6[20]];
      a1[v6[21]] = a2[v6[21]];
      a1[v6[22]] = a2[v6[22]];
      *(_OWORD *)&a1[v6[23]] = *(_OWORD *)&a2[v6[23]];
      a1[v6[24]] = a2[v6[24]];
      a1[v6[25]] = a2[v6[25]];
      a1[v6[26]] = a2[v6[26]];
      a1[v6[27]] = a2[v6[27]];
      a1[v6[28]] = a2[v6[28]];
      a1[v6[29]] = a2[v6[29]];
      a1[v6[30]] = a2[v6[30]];
      a1[v6[31]] = a2[v6[31]];
      *(_OWORD *)&a1[v6[32]] = *(_OWORD *)&a2[v6[32]];
      *(void *)&a1[v6[33]] = *(void *)&a2[v6[33]];
      *(_OWORD *)&a1[v6[34]] = *(_OWORD *)&a2[v6[34]];
      *(void *)&a1[v6[35]] = *(void *)&a2[v6[35]];
      a1[v6[36]] = a2[v6[36]];
      a1[v6[37]] = a2[v6[37]];
      a1[v6[38]] = a2[v6[38]];
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_191C386C8((uint64_t)a1, type metadata accessor for WidgetDescriptor);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_191C386C8((uint64_t)a1, type metadata accessor for ViewSource);
    uint64_t v18 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_191CF33C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      long long v23 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v23;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v24 = v6[5];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v6[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
  *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
  uint64_t v34 = v6[12];
  id v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)id v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  a1[v6[13]] = a2[v6[13]];
  a1[v6[14]] = a2[v6[14]];
  a1[v6[15]] = a2[v6[15]];
  a1[v6[16]] = a2[v6[16]];
  a1[v6[17]] = a2[v6[17]];
  *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
  swift_bridgeObjectRelease();
  a1[v6[19]] = a2[v6[19]];
  a1[v6[20]] = a2[v6[20]];
  a1[v6[21]] = a2[v6[21]];
  a1[v6[22]] = a2[v6[22]];
  uint64_t v39 = v6[23];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  a1[v6[24]] = a2[v6[24]];
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  a1[v6[27]] = a2[v6[27]];
  a1[v6[28]] = a2[v6[28]];
  a1[v6[29]] = a2[v6[29]];
  a1[v6[30]] = a2[v6[30]];
  a1[v6[31]] = a2[v6[31]];
  *(_OWORD *)&a1[v6[32]] = *(_OWORD *)&a2[v6[32]];
  *(void *)&a1[v6[33]] = *(void *)&a2[v6[33]];
  uint64_t v44 = v6[34];
  char v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v48 = *(void *)v46;
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)char v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[35]] = *(void *)&a2[v6[35]];
  swift_bridgeObjectRelease();
  a1[v6[36]] = a2[v6[36]];
  a1[v6[37]] = a2[v6[37]];
  a1[v6[38]] = a2[v6[38]];
LABEL_15:
  uint64_t v49 = a3[5];
  uint64_t v50 = *(void **)&a1[v49];
  *(void *)&a1[v49] = *(void *)&a2[v49];

  uint64_t v51 = a3[6];
  uint64_t v52 = *(void **)&a1[v51];
  *(void *)&a1[v51] = *(void *)&a2[v51];

  uint64_t v53 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v53] = a2[v53];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_191C3A87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C3A890);
}

uint64_t sub_191C3A890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191C3A954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C3A968);
}

uint64_t sub_191C3A968(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_191C3AA28()
{
  sub_191C3AAD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_191C3AAD8()
{
  if (!qword_1E92E4758)
  {
    type metadata accessor for WidgetDescriptor(255);
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92E4758);
    }
  }
}

uint64_t View.widgetCurvesContent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_191CF48B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF48A8();
  MEMORY[0x192FE3AA0](v8, a2, v5, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191C3AC2C()
{
  return swift_getWitnessTable();
}

unint64_t sub_191C3AC98()
{
  unint64_t result = qword_1E92E4760;
  if (!qword_1E92E4760)
  {
    sub_191CF48B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4760);
  }
  return result;
}

uint64_t sub_191C3ACF0()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0918);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E08F8);
  sub_191C3B390();
  sub_191C3B2F8();
  sub_191CF44D8();
  return v1;
}

uint64_t _AccessoryWidgetBackground.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = KeyPath;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t _AccessoryWidgetBackground.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

uint64_t _AccessoryWidgetBackground.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  sub_191B1BB50(*(void *)v1, v4);
  sub_191B1BB50(v5, v6);
  sub_191B1BB50(v7, v8);
  sub_191B1BB50(v3, v4);
  sub_191BDD890(v3, v4, &v12);
  sub_191B172D4(v3, v4);
  sub_191B172D4(v3, v4);
  sub_191B172D4(v5, v6);
  sub_191B172D4(v7, v8);
  if (v12 == 2)
  {
    sub_191CF4D78();
  }
  else
  {
    sub_191CF4D98();
    sub_191CF4DA8();
    swift_release();
    sub_191B1BB50(v3, v4);
    sub_191B1BB50(v5, v6);
    sub_191B1BB50(v7, v8);
    sub_191B1BB50(v7, v8);
    sub_191BDD1F0(v7, v8);
    sub_191B172D4(v7, v8);
    sub_191B172D4(v3, v4);
    sub_191B172D4(v5, v6);
    sub_191B172D4(v7, v8);
    sub_191B1BB50(v3, v4);
    sub_191B1BB50(v5, v6);
    sub_191B1BB50(v7, v8);
    sub_191B1BB50(v5, v6);
    sub_191BDD1F0(v5, v6);
    sub_191B172D4(v5, v6);
    sub_191B172D4(v3, v4);
    sub_191B172D4(v5, v6);
    sub_191B172D4(v7, v8);
    sub_191C3ACF0();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E08F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0A20);
  sub_191C3B2F8();
  sub_191C3B354();
  uint64_t result = sub_191CF44D8();
  int v10 = v13 | (v14 << 16);
  char v11 = v15;
  *(void *)a1 = v12;
  *(_WORD *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 10) = BYTE2(v10);
  *(unsigned char *)(a1 + 11) = v11;
  return result;
}

uint64_t sub_191C3B154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_191C3B1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C3B7BC();

  return MEMORY[0x1F40F8CC0](a1, a2, a3, v6);
}

uint64_t sub_191C3B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_191C3B7BC();

  return MEMORY[0x1F40F8CC8](a1, a2, a3, v6);
}

uint64_t sub_191C3B2A8()
{
  return sub_191CF3BF8();
}

unint64_t sub_191C3B2F8()
{
  unint64_t result = qword_1E92E08F0;
  if (!qword_1E92E08F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E08F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E08F0);
  }
  return result;
}

uint64_t sub_191C3B354()
{
  return sub_191C3B734(&qword_1E92E0A18, &qword_1E92E0A20, (void (*)(void))sub_191C3B390, (void (*)(void))sub_191C3B2F8);
}

unint64_t sub_191C3B390()
{
  unint64_t result = qword_1E92E0910;
  if (!qword_1E92E0910)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0918);
    sub_191C3B2F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0910);
  }
  return result;
}

unint64_t sub_191C3B410()
{
  unint64_t result = qword_1EB449340;
  if (!qword_1EB449340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449340);
  }
  return result;
}

unint64_t sub_191C3B468()
{
  unint64_t result = qword_1EB449338;
  if (!qword_1EB449338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449338);
  }
  return result;
}

uint64_t sub_191C3B4C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for _AccessoryWidgetBackground(uint64_t a1)
{
  sub_191B172D4(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_191B172D4(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);

  return sub_191B172D4(v2, v3);
}

uint64_t initializeWithCopy for _AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_191B1BB50(v8, v2);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for _AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  char v9 = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_191B172D4(v10, v11);
  uint64_t v12 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_191B1BB50(v12, v2);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 40) = v2;
  sub_191B172D4(v13, v14);
  return a1;
}

uint64_t assignWithTake for _AccessoryWidgetBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B172D4(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B172D4(v9, v10);
  char v11 = *((unsigned char *)a2 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = v11;
  sub_191B172D4(v12, v13);
  return a1;
}

ValueMetadata *type metadata accessor for _AccessoryWidgetBackground()
{
  return &type metadata for _AccessoryWidgetBackground;
}

uint64_t sub_191C3B6E4()
{
  return sub_191C3B734(&qword_1E92E0A38, &qword_1E92E0768, (void (*)(void))sub_191C3B2F8, (void (*)(void))sub_191C3B354);
}

uint64_t sub_191C3B734(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191C3B7BC()
{
  unint64_t result = qword_1EB449328;
  if (!qword_1EB449328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449328);
  }
  return result;
}

uint64_t MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  swift_storeEnumTagMultiPayload();
  char v15 = (int *)type metadata accessor for MetadataGraphicView();
  long long v16 = (char *)a9 + v15[5];
  uint64_t v17 = sub_191CF4868();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  *((unsigned char *)a9 + v15[6]) = a2;
  char v19 = a3;
  if (a3)
  {
    char v21 = a5;
    char v20 = a8;
    if (!a6)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
      goto LABEL_8;
    }
  }
  else
  {
    char v21 = a5;
    char v20 = a8;
    if (!a6)
    {
      if (!a4)
      {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
        char v23 = 0;
        a4 = 1;
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4768);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
  *(void *)(v22 + 32) = a6;
  uint64_t v29 = v22;
  sub_191CF5558();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
  swift_bridgeObjectRelease();
  a4 = v29;
LABEL_8:
  char v23 = v19 & 1;
LABEL_9:
  uint64_t v24 = (char *)a9 + v15[7];
  *(void *)uint64_t v24 = a4;
  v24[8] = v23;
  *((unsigned char *)a9 + v15[8]) = v21 & 1;
  uint64_t result = sub_191B015B0(a7, (uint64_t)a9 + v15[9], &qword_1E92E1E40);
  *((unsigned char *)a9 + v15[10]) = v20 & 1;
  return result;
}

uint64_t type metadata accessor for MetadataGraphicView()
{
  uint64_t result = qword_1E92E1ED8;
  if (!qword_1E92E1ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MetadataGraphicView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E50);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2780);
  MEMORY[0x1F4188790](v63);
  uint64_t v66 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_191CF3D18();
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v65 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  os_log_type_t v72 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)&v54 - v10;
  uint64_t v11 = sub_191CF4848();
  uint64_t v67 = *(void *)(v11 - 8);
  uint64_t v68 = v11;
  MEMORY[0x1F4188790](v11);
  char v62 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_191CF4868();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v54 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E38);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  char v23 = (uint64_t *)((char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v69 = (uint64_t)&v54 - v24;
  uint64_t v25 = sub_191C3C170();
  if (v25)
  {
    uint64_t v57 = v25;
    uint64_t v71 = v20;
    uint64_t v60 = v3;
    uint64_t v26 = sub_191C3C4D0();
    uint64_t v27 = type metadata accessor for MetadataGraphicView();
    uint64_t v28 = v27;
    int v29 = *(unsigned __int8 *)(v1 + *(int *)(v27 + 40));
    uint64_t v61 = a1;
    uint64_t v56 = v5;
    uint64_t v58 = v26;
    uint64_t v59 = v1;
    if (v29 == 1)
    {
      uint64_t v30 = v1 + *(int *)(v27 + 20);
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v55(v19, v30, v13);
      int v31 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v19, v13);
      int v32 = *MEMORY[0x1E4F3DE58];
      uint64_t v33 = v57;
      if (v31 == *MEMORY[0x1E4F3DE58])
      {
        int v34 = v31;
        (*(void (**)(char *, uint64_t))(v14 + 96))(v19, v13);
        id v35 = v62;
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v62, v19, v68);
        swift_retain();
        uint64_t v36 = sub_191CF47C8();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v68);
      }
      else
      {
        uint64_t v54 = *(void (**)(char *, uint64_t))(v14 + 8);
        swift_retain();
        v54(v19, v13);
        uint64_t v36 = MEMORY[0x1E4FBC860];
        int v34 = v32;
      }
      uint64_t v38 = v55;
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      int v34 = *MEMORY[0x1E4F3DE58];
      uint64_t v33 = v57;
      swift_retain();
      uint64_t v36 = MEMORY[0x1E4FBC860];
    }
    v38(v17, v59 + *(int *)(v28 + 20), v13);
    int v39 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
    uint64_t v40 = v72;
    uint64_t v57 = v36;
    if (v39 == v34)
    {
      (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
      uint64_t v41 = v67;
      uint64_t v42 = v62;
      uint64_t v43 = v17;
      uint64_t v44 = v68;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v62, v43, v68);
      sub_191CF47D8();
      uint64_t v40 = v72;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
    }
    else
    {
      sub_191CF3D08();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    uint64_t v45 = (uint64_t)v56;
    uint64_t v47 = v65;
    uint64_t v46 = v66;
    uint64_t v48 = v63;
    uint64_t v49 = v64;
    uint64_t v50 = v70;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v70, v40, v65);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v46 + *(int *)(v48 + 28), v50, v47);
    *uint64_t v46 = KeyPath;
    sub_191B01614((uint64_t)v46, (uint64_t)v23 + *(int *)(v71 + 36), &qword_1E92E2780);
    uint64_t v52 = v58;
    *char v23 = v33;
    v23[1] = v52;
    v23[2] = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_191B01770((uint64_t)v46, &qword_1E92E2780);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v53 = v69;
    sub_191B015B0((uint64_t)v23, v69, &qword_1E92E1E38);
    sub_191B01614(v53, v45, &qword_1E92E1E38);
    swift_storeEnumTagMultiPayload();
    sub_191C3CB14();
    sub_191CF44D8();
    swift_release();
    return sub_191B01770(v53, &qword_1E92E1E38);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_191C3CB14();
    return sub_191CF44D8();
  }
}

uint64_t sub_191C3C170()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4E88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1BD0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetadataGraphicView();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!WidgetAuxiliaryViewMetadata.Graphic.image(symbolRenderingMode:)(v0 + *(int *)(v10 + 36))) {
    return 0;
  }
  int v13 = *(unsigned __int8 *)(v0 + *(int *)(v9 + 24));
  sub_191C3FFC4(v1, (uint64_t)v12);
  swift_retain();
  if (v13 == 1)
  {
    sub_191C40028((uint64_t)v12);
LABEL_4:
    uint64_t v14 = *MEMORY[0x1E4F3EC20];
    uint64_t v15 = sub_191CF4ED8();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v8, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    goto LABEL_11;
  }
  uint64_t v18 = sub_191C3C4D0();
  if (v18)
  {
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    sub_191C40028((uint64_t)v12);
    if (!v19) {
      goto LABEL_4;
    }
  }
  else
  {
    sub_191C40028((uint64_t)v12);
  }
  uint64_t v20 = sub_191CF4ED8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
LABEL_11:
  uint64_t v17 = sub_191CF4E98();
  swift_release_n();
  sub_191B01770((uint64_t)v8, &qword_1E92E1BD0);
  if (*(unsigned char *)(v1 + *(int *)(v9 + 32)) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EBF8], v2);
    swift_retain();
    uint64_t v21 = sub_191CF4EF8();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v21;
  }
  return v17;
}

uint64_t sub_191C3C4D0()
{
  uint64_t v1 = sub_191CF4868();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF4848();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetadataGraphicView();
  uint64_t v10 = (uint64_t *)(v0 + *(int *)(v9 + 28));
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = 0;
    if (v11 != 1)
    {
      swift_bridgeObjectRetain();
      return v11;
    }
  }
  else
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    if (v10[1])
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v9 + 20), v1);
      if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x1E4F3DE58])
      {
        (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        uint64_t v13 = sub_191CF4818();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if (v13) {
          return v13;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
  }
  return v12;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.symbolEffects.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4848();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v10 = sub_191CF47C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return MEMORY[0x1E4FBC860];
  }
  return v10;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.contentTransition.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4848();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_191CF47D8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_191CF3D08();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

unint64_t sub_191C3CB14()
{
  unint64_t result = qword_1E92E1E30;
  if (!qword_1E92E1E30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E38);
    sub_191C3CBB4();
    sub_191B00398(&qword_1E92E2778, &qword_1E92E2780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E30);
  }
  return result;
}

unint64_t sub_191C3CBB4()
{
  unint64_t result = qword_1E92E1E20;
  if (!qword_1E92E1E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E28);
    sub_191C3CC30();
    sub_191C3CD00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E20);
  }
  return result;
}

unint64_t sub_191C3CC30()
{
  unint64_t result = qword_1E92E1E10;
  if (!qword_1E92E1E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E18);
    sub_191C3CCAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E10);
  }
  return result;
}

unint64_t sub_191C3CCAC()
{
  unint64_t result = qword_1E92E1EE8[0];
  if (!qword_1E92E1EE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E1EE8);
  }
  return result;
}

unint64_t sub_191C3CD00()
{
  unint64_t result = qword_1E92E1EA0;
  if (!qword_1E92E1EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1EA0);
  }
  return result;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.image(symbolRenderingMode:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1BD0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v28 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF4848();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF4E88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_191CF4868();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (id *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v14 + 16))(v16, v2, v13);
  int v17 = (*(uint64_t (**)(id *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(id *, uint64_t))(v14 + 96))(v16, v13);
    (*(void (**)(char *, id *, uint64_t))(v6 + 32))(v8, v16, v5);
    uint64_t v18 = sub_191CF4818();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_191C3D1D0(v29);
    uint64_t v20 = v19;
    if (v18 && v19)
    {
      uint64_t v21 = *MEMORY[0x1E4F3EC20];
      uint64_t v22 = sub_191CF4ED8();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v28, v21, v22);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
      uint64_t v25 = sub_191CF4E98();
      swift_release();
      sub_191B01770(v24, &qword_1E92E1BD0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v25;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else if (v17 == *MEMORY[0x1E4F3DE50])
  {
    (*(void (**)(id *, uint64_t))(v14 + 96))(v16, v13);
    id v26 = *v16;
    sub_191CF4E58();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F3EBF8], v9);
    uint64_t v20 = sub_191CF4EF8();

    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(id *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  return v20;
}

uint64_t sub_191C3D1D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v58 = a1;
  uint64_t v3 = sub_191CF4848();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v61 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v50 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v59 = (uint64_t)&v50 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)&v50 - v10;
  uint64_t v60 = sub_191CF43D8();
  uint64_t v57 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v51 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_191CF3078();
  uint64_t v12 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_191CF4828();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v50 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v50 - v23;
  uint64_t v25 = sub_191CF4808();
  double v26 = *(float *)&v25;
  if ((v25 & 0x100000000) != 0) {
    double v26 = 0.0;
  }
  double v53 = v26;
  sub_191CF4838();
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v24, v15);
  if (v27 == *MEMORY[0x1E4F3DE40])
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v24, v15);
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    uint64_t v28 = v22;
    uint64_t v29 = v52;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v28, v52);
    uint64_t v30 = self;
    int v31 = (void *)sub_191CF3038();
    id v32 = objc_msgSend(v30, sel_wk_uniqueWithURL_, v31);

    sub_191CF47F8();
    uint64_t v33 = sub_191CF4F08();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
LABEL_9:
    uint64_t v36 = (uint64_t)v56;
    uint64_t v35 = v57;
    uint64_t v38 = v54;
    uint64_t v37 = v55;
    goto LABEL_12;
  }
  if (v27 != *MEMORY[0x1E4F3DE48])
  {
    uint64_t v33 = 0;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v24, v15);
  (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
  char v34 = *v19;
  sub_191CF47F8();
  uint64_t v36 = (uint64_t)v56;
  uint64_t v35 = v57;
  uint64_t v38 = v54;
  uint64_t v37 = v55;
  if (v34) {
    uint64_t v39 = sub_191CF4EA8();
  }
  else {
    uint64_t v39 = sub_191CF4E68();
  }
  uint64_t v33 = v39;
LABEL_12:
  uint64_t v40 = v58;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
  uint64_t v41 = v59;
  sub_191B01614(v40, v59, &qword_1E92E1E40);
  uint64_t v42 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v61, v2, v37);
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  uint64_t v44 = v60;
  if (v43(v41, 1, v60) == 1)
  {
    sub_191CF47E8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
    sub_191B01770(v41, &qword_1E92E1E40);
    if (v43(v36, 1, v44) != 1)
    {
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
      goto LABEL_17;
    }
LABEL_16:
    sub_191B01770(v36, &qword_1E92E1E40);
    return v33;
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  v45(v36, v41, v44);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v44);
  if (v43(v36, 1, v44) == 1) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v46 = v51;
  v45((uint64_t)v51, v36, v44);
  if (v33)
  {
    uint64_t v47 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v50, v46, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v47, 0, 1, v44);
    swift_retain();
    uint64_t v48 = sub_191CF4EC8();
    swift_release();
    sub_191B01770(v47, &qword_1E92E1E40);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v44);
    swift_release();
    return v48;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v44);
  }
  return v33;
}

BOOL WidgetAuxiliaryViewMetadata.Graphic.isSystemSymbol.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4828();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4848();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_191CF4838();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    BOOL v14 = (*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x1E4F3DE40];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  return v14;
}

uint64_t sub_191C3DB98@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v62 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E98);
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v53 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2160);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DF8);
  MEMORY[0x1F4188790](v60);
  uint64_t v50 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DE8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E58);
  MEMORY[0x1F4188790](v13);
  uint64_t v58 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E48);
  MEMORY[0x1F4188790](v55);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E68);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E08);
  uint64_t v18 = MEMORY[0x1F4188790](v54);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E88);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v59 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    uint64_t v35 = v63;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    uint64_t v37 = (uint64_t)v53;
    v36(v53, v62, v4);
    v36(v8, v37, v4);
    swift_storeEnumTagMultiPayload();
    sub_191C3FBD0();
    sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
    sub_191CF44D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v37, v4);
  }
  uint64_t v49 = v10;
  uint64_t v51 = v13;
  uint64_t v52 = v24;
  uint64_t v27 = v62;
  uint64_t v26 = v63;
  double v53 = v8;
  uint64_t v28 = a2[2];
  if (v28)
  {
    if (v28 == 2)
    {
      uint64_t v40 = a2[4];
      uint64_t v39 = a2[5];
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v12, v62, v4);
      uint64_t v41 = &v12[*(int *)(v49 + 36)];
      *(void *)uint64_t v41 = v40;
      *((void *)v41 + 1) = v39;
      sub_191B01614((uint64_t)v12, (uint64_t)v16, &qword_1E92E1DE8);
      swift_storeEnumTagMultiPayload();
      sub_191C3FCC8();
      sub_191C3FD8C();
      swift_retain();
      swift_retain();
      uint64_t v42 = (uint64_t)v56;
      sub_191CF44D8();
      sub_191B01614(v42, v58, &qword_1E92E1E68);
      swift_storeEnumTagMultiPayload();
      sub_191C3FC4C();
      sub_191C3FE50();
      uint64_t v32 = (uint64_t)v59;
      sub_191CF44D8();
      sub_191B01770(v42, &qword_1E92E1E68);
      uint64_t v33 = (uint64_t)v12;
      char v34 = &qword_1E92E1DE8;
      goto LABEL_10;
    }
    if (v28 != 1)
    {
      uint64_t v44 = a2[4];
      uint64_t v43 = a2[5];
      uint64_t v45 = a2[6];
      uint64_t v46 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v50, v62, v4);
      uint64_t v47 = (void *)(v46 + *(int *)(v60 + 36));
      *uint64_t v47 = v44;
      v47[1] = v43;
      v47[2] = v45;
      sub_191B01614(v46, v58, &qword_1E92E1DF8);
      swift_storeEnumTagMultiPayload();
      sub_191C3FC4C();
      sub_191C3FE50();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v32 = (uint64_t)v59;
      sub_191CF44D8();
      uint64_t v33 = v46;
      char v34 = &qword_1E92E1DF8;
      goto LABEL_10;
    }
    uint64_t v28 = a2[4];
    swift_retain();
  }
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v20, v27, v4);
  uint64_t v30 = (uint64_t *)&v20[*(int *)(v54 + 36)];
  *uint64_t v30 = KeyPath;
  v30[1] = v28;
  sub_191B015B0((uint64_t)v20, (uint64_t)v22, &qword_1E92E1E08);
  sub_191B01614((uint64_t)v22, (uint64_t)v16, &qword_1E92E1E08);
  swift_storeEnumTagMultiPayload();
  sub_191C3FCC8();
  sub_191C3FD8C();
  uint64_t v31 = (uint64_t)v56;
  sub_191CF44D8();
  sub_191B01614(v31, v58, &qword_1E92E1E68);
  swift_storeEnumTagMultiPayload();
  sub_191C3FC4C();
  sub_191C3FE50();
  uint64_t v32 = (uint64_t)v59;
  sub_191CF44D8();
  sub_191B01770(v31, &qword_1E92E1E68);
  uint64_t v33 = (uint64_t)v22;
  char v34 = &qword_1E92E1E08;
LABEL_10:
  sub_191B01770(v33, v34);
  sub_191B01614(v32, (uint64_t)v53, &qword_1E92E1E88);
  swift_storeEnumTagMultiPayload();
  sub_191C3FBD0();
  sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
  sub_191CF44D8();
  return sub_191B01770(v32, &qword_1E92E1E88);
}

uint64_t sub_191C3E360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C3DB98(a1, *v2, a2);
}

uint64_t sub_191C3E368()
{
  return sub_191CF3E38();
}

uint64_t sub_191C3E38C()
{
  return sub_191CF3E38();
}

uint64_t sub_191C3E3B0(uint64_t a1)
{
  uint64_t v2 = sub_191CF3D18();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_191CF3E48();
}

uint64_t sub_191C3E47C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for MetadataGraphicView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_191CF4868();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (*(void *)v15 == 1)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v14[8] = v15[8];
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v14[8] = v15[8];
      swift_bridgeObjectRetain();
    }
    uint64_t v16 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_191CF43D8();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return a1;
}

uint64_t destroy for MetadataGraphicView(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_191CF4058();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_191CF4868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(a1 + a2[7]) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = sub_191CF43D8();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for MetadataGraphicView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_191CF4058();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (*(void *)v13 == 1)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_191CF43D8();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *assignWithCopy for MetadataGraphicView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_191B01770((uint64_t)a1, (uint64_t *)&unk_1E92E2390);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11);
  if (*(void *)((char *)a1 + v11) == 1)
  {
    if (v14 == 1)
    {
      uint64_t v15 = *(void *)v13;
      v12[8] = v13[8];
      *(void *)uint64_t v12 = v15;
    }
    else
    {
      *(void *)uint64_t v12 = v14;
      v12[8] = v13[8];
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v14 == 1)
    {
      sub_191B01770((uint64_t)a1 + v11, &qword_1E92E4770);
      char v16 = v13[8];
      *(void *)uint64_t v12 = *(void *)v13;
    }
    else
    {
      *(void *)uint64_t v12 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v16 = v13[8];
    }
    v12[8] = v16;
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_191CF43D8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_19;
  }
  if (v24)
  {
LABEL_19:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_20:
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

char *initializeWithTake for MetadataGraphicView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_191CF4868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  char v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_191CF43D8();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *assignWithTake for MetadataGraphicView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_191B01770((uint64_t)a1, (uint64_t *)&unk_1E92E2390);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_191CF4868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (*(void *)&a1[v12] == 1) {
    goto LABEL_8;
  }
  if (*(void *)v14 == 1)
  {
    sub_191B01770((uint64_t)&a1[v12], &qword_1E92E4770);
LABEL_8:
    *(void *)uint64_t v13 = *(void *)v14;
    goto LABEL_10;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  swift_bridgeObjectRelease();
LABEL_10:
  v13[8] = v14[8];
  uint64_t v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  char v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_191CF43D8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_15;
  }
  if (v22)
  {
LABEL_15:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_16:
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C3F358);
}

uint64_t sub_191C3F358(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 2147483645)
  {
    unint64_t v14 = *(void *)(a1 + a3[7]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 - 1) & ~(((int)v14 - 1) >> 31);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataGraphicView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C3F4FC);
}

uint64_t sub_191C3F4FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_191CF4868();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 2147483645)
  {
    *(void *)(a1 + a4[7]) = (a2 + 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1E40);
    char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_191C3F688()
{
  sub_191C3F800(319, (unint64_t *)&qword_1E92E27F8, MEMORY[0x1E4F3D2F8], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F)
  {
    sub_191CF4868();
    if (v1 <= 0x3F)
    {
      sub_191C3F800(319, &qword_1E92E2158, MEMORY[0x1E4F3D678], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_191C3F800(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_191C3F868()
{
  unint64_t result = qword_1E92E1E70;
  if (!qword_1E92E1E70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E78);
    sub_191C3CB14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E70);
  }
  return result;
}

unint64_t destroy for MetadataGraphicView.ColorMode(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9WidgetKit19MetadataGraphicViewV9ColorModeOwCP_0(uint64_t a1, unint64_t *a2)
{
  LODWORD(v3) = -1;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v3 = *a2;
  }
  *(void *)a1 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  if ((int)v3 - 1 < 0) {
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for MetadataGraphicView.ColorMode(unint64_t *a1, unint64_t *a2)
{
  LODWORD(v4) = -1;
  if (*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    unint64_t v5 = *a1;
  }
  int v6 = v5 - 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  int v8 = v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    unint64_t v9 = *a2;
    *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
    *a1 = v9;
    return a1;
  }
  *a1 = v7;
  *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for MetadataGraphicView.ColorMode(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(void *)a1;
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (*a2 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *(void *)a1 = *a2;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  *(void *)a1 = *a2;
LABEL_9:
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataGraphicView.ColorMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetadataGraphicView.ColorMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_191C3FB44(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191C3FB68(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    uint64_t v2 = a2 - 0x7FFFFFFF;
    *(unsigned char *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = a2;
  }
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetadataGraphicView.ColorMode()
{
  return &type metadata for MetadataGraphicView.ColorMode;
}

ValueMetadata *type metadata accessor for MetadataForegroundColorsModifier()
{
  return &type metadata for MetadataForegroundColorsModifier;
}

uint64_t sub_191C3FBB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_191C3FBD0()
{
  unint64_t result = qword_1E92E1E80;
  if (!qword_1E92E1E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E88);
    sub_191C3FC4C();
    sub_191C3FE50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E80);
  }
  return result;
}

unint64_t sub_191C3FC4C()
{
  unint64_t result = qword_1E92E1E60;
  if (!qword_1E92E1E60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E68);
    sub_191C3FCC8();
    sub_191C3FD8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E60);
  }
  return result;
}

unint64_t sub_191C3FCC8()
{
  unint64_t result = qword_1E92E1E00;
  if (!qword_1E92E1E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1E08);
    sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
    sub_191B00398(&qword_1E92E1EC8, &qword_1E92E1ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1E00);
  }
  return result;
}

unint64_t sub_191C3FD8C()
{
  unint64_t result = qword_1E92E1DE0;
  if (!qword_1E92E1DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1DE8);
    sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
    sub_191B00398(&qword_1E92E1EA8, &qword_1E92E1EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DE0);
  }
  return result;
}

unint64_t sub_191C3FE50()
{
  unint64_t result = qword_1E92E1DF0;
  if (!qword_1E92E1DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1DF8);
    sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
    sub_191B00398(&qword_1E92E1EB8, &qword_1E92E1EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DF0);
  }
  return result;
}

uint64_t sub_191C3FF14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3DC8();
  *a1 = result;
  return result;
}

uint64_t sub_191C3FF40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF3DC8();
  *a1 = result;
  return result;
}

uint64_t sub_191C3FF6C()
{
  return sub_191CF3DD8();
}

uint64_t sub_191C3FF98()
{
  return sub_191CF3DD8();
}

uint64_t sub_191C3FFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetadataGraphicView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C40028(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetadataGraphicView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191C40088()
{
  unint64_t result = qword_1E92E2168;
  if (!qword_1E92E2168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E2170);
    sub_191C3FBD0();
    sub_191B00398(&qword_1E92E1E90, &qword_1E92E1E98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2168);
  }
  return result;
}

uint64_t sub_191C40128()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C8E0 = result;
  return result;
}

uint64_t sub_191C40150()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A620);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C8C8 = v0;
  unk_1EB44C8D0 = 0xD000000000000025;
  qword_1EB44C8D8 = 0x8000000191D0DE10;
  return result;
}

uint64_t sub_191C401C8(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44A5B8);
}

uint64_t sub_191C401EC()
{
  if (qword_1EB44A5F0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C8C8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191C4026C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C9B0 = result;
  return result;
}

uint64_t sub_191C40294()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A618);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C998 = v0;
  unk_1EB44C9A0 = 0xD00000000000002BLL;
  qword_1EB44C9A8 = 0x8000000191D0DE40;
  return result;
}

ValueMetadata *type metadata accessor for UserWantsWidgetDataWhenPasscodeLockedKey()
{
  return &type metadata for UserWantsWidgetDataWhenPasscodeLockedKey;
}

ValueMetadata *type metadata accessor for UserWantsLiveActivityDataWhenPasscodeLockedKey()
{
  return &type metadata for UserWantsLiveActivityDataWhenPasscodeLockedKey;
}

uint64_t sub_191C4032C(uint64_t a1, uint64_t a2)
{
  return sub_191BDB918(a1, a2, &qword_1EB44A728);
}

uint64_t sub_191C40350()
{
  if (qword_1EB44A720 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C998;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191C403E0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A68);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v68 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191CF3258();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v64 = (char *)&v63 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v66 = (char *)&v63 - v8;
  uint64_t v9 = sub_191CF31F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v63 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A58);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A50);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  int v22 = (char *)&v63 - v21;
  MEMORY[0x1F4188790](v20);
  int v24 = (char *)&v63 - v23;
  uint64_t v67 = v0;
  sub_191CF3288();
  sub_191CF31E8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  uint64_t v25 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_191C42020((uint64_t)v24, (uint64_t)v15);
  sub_191C42020((uint64_t)v22, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v26((uint64_t)v15, 1, v9) == 1)
  {
    sub_191B01770((uint64_t)v22, &qword_1EB449A50);
    sub_191B01770((uint64_t)v24, &qword_1EB449A50);
    if (v26(v25, 1, v9) == 1)
    {
      sub_191B01770((uint64_t)v15, &qword_1EB449A50);
      return 2;
    }
  }
  else
  {
    sub_191C42020((uint64_t)v15, (uint64_t)v19);
    if (v26(v25, 1, v9) != 1)
    {
      uint64_t v36 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v63, v25, v9);
      sub_191C42088(&qword_1EB449A48, MEMORY[0x1E4F279D8]);
      char v37 = sub_191CF52F8();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
      v38(v36, v9);
      sub_191B01770((uint64_t)v22, &qword_1EB449A50);
      sub_191B01770((uint64_t)v24, &qword_1EB449A50);
      v38(v19, v9);
      sub_191B01770((uint64_t)v15, &qword_1EB449A50);
      if (v37) {
        return 2;
      }
      goto LABEL_7;
    }
    sub_191B01770((uint64_t)v22, &qword_1EB449A50);
    sub_191B01770((uint64_t)v24, &qword_1EB449A50);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  }
  sub_191B01770((uint64_t)v15, &qword_1EB449A58);
LABEL_7:
  uint64_t v28 = (uint64_t)v68;
  sub_191CF3298();
  uint64_t v30 = v69;
  uint64_t v29 = v70;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v28, 1, v70) == 1)
  {
    sub_191B01770(v28, &qword_1EB449A68);
    return 0;
  }
  uint64_t v31 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v66, v28, v29);
  uint64_t v32 = v64;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v64, v31, v29);
  uint64_t v33 = v65;
  sub_191CF3248();
  sub_191C42088(&qword_1EB449A60, MEMORY[0x1E4F27A20]);
  char v34 = sub_191CF52F8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  if (v34) {
    goto LABEL_10;
  }
  sub_191CF3248();
  char v39 = sub_191CF52F8();
  v35(v33, v29);
  if (v39) {
    goto LABEL_14;
  }
  sub_191CF3248();
  char v40 = sub_191CF52F8();
  v35(v33, v29);
  if (v40)
  {
    v35(v32, v29);
    uint64_t v41 = v31;
LABEL_17:
    v35(v41, v29);
    return 1;
  }
  sub_191CF3248();
  char v42 = sub_191CF52F8();
  v35(v33, v29);
  if (v42) {
    goto LABEL_21;
  }
  sub_191CF3248();
  char v43 = sub_191CF52F8();
  v35(v33, v29);
  if (v43) {
    goto LABEL_21;
  }
  sub_191CF3248();
  char v44 = sub_191CF52F8();
  v35(v33, v29);
  if (v44) {
    goto LABEL_21;
  }
  sub_191CF3248();
  char v45 = sub_191CF52F8();
  v35(v33, v29);
  if (v45) {
    goto LABEL_14;
  }
  sub_191CF3248();
  char v46 = sub_191CF52F8();
  v35(v33, v29);
  if (v46 & 1) != 0 || (sub_191CF3248(), char v47 = sub_191CF52F8(), v35(v33, v29), (v47))
  {
LABEL_21:
    v35(v32, v29);
    v35(v31, v29);
    return 3;
  }
  sub_191CF3248();
  char v48 = sub_191CF52F8();
  v35(v33, v29);
  if (v48)
  {
LABEL_10:
    v35(v32, v29);
    v35(v31, v29);
    return 2;
  }
  sub_191CF3248();
  char v49 = sub_191CF52F8();
  v35(v33, v29);
  if (v49)
  {
LABEL_14:
    v35(v32, v29);
    v35(v31, v29);
    return 4;
  }
  sub_191CF3248();
  char v50 = sub_191CF52F8();
  v35(v33, v29);
  if (v50) {
    goto LABEL_10;
  }
  sub_191CF3248();
  char v51 = sub_191CF52F8();
  v35(v33, v29);
  if (v51)
  {
    v35(v32, v29);
    uint64_t v41 = v66;
    goto LABEL_17;
  }
  uint64_t v52 = v65;
  sub_191CF3248();
  char v53 = sub_191CF52F8();
  v35(v52, v29);
  if (v53)
  {
    uint64_t v54 = v70;
    v35(v64, v70);
    v35(v66, v54);
    return 2;
  }
  uint64_t v55 = v65;
  sub_191CF3248();
  uint64_t v56 = v70;
  char v57 = sub_191CF52F8();
  v35(v55, v56);
  if (v57)
  {
    uint64_t v58 = v70;
    v35(v64, v70);
    v35(v66, v58);
    return 3;
  }
  uint64_t v59 = v65;
  sub_191CF3248();
  uint64_t v60 = v64;
  uint64_t v61 = v70;
  char v62 = sub_191CF52F8();
  v35(v59, v61);
  v35(v60, v61);
  v35(v66, v61);
  if (v62) {
    return 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_191C40F54()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x3170756F7267;
      break;
    case 2:
      uint64_t result = 0x3270756F7267;
      break;
    case 3:
      uint64_t result = 0x3370756F7267;
      break;
    case 4:
      uint64_t result = 0x3470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

__CFNotificationCenter *sub_191C40FE8()
{
  type metadata accessor for UnfairLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *uint64_t v2 = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 5;
  uint64_t result = CFNotificationCenterGetLocalCenter();
  if (*MEMORY[0x1E4F1D200])
  {
    uint64_t v4 = result;
    CFNotificationCenterAddObserver(result, 0, (CFNotificationCallback)sub_191C410F0, (CFStringRef)*MEMORY[0x1E4F1D200], 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    uint64_t v5 = CFNotificationCenterGetDarwinNotifyCenter();
    uint64_t v6 = (__CFString *)sub_191CF5318();
    CFNotificationCenterAddObserver(v5, 0, (CFNotificationCallback)sub_191C41108, v6, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    return (__CFNotificationCenter *)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191C410F0()
{
  return sub_191C420D0();
}

uint64_t sub_191C41108()
{
  return sub_191C420D0();
}

__CFNotificationCenter *sub_191C41120()
{
  type metadata accessor for PreferredLanguageObserver();
  swift_allocObject();
  uint64_t result = sub_191C40FE8();
  off_1EB449A98 = result;
  return result;
}

uint64_t sub_191C41160()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PreferredLanguageObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for TextStyleDefinition()
{
  return &type metadata for TextStyleDefinition;
}

unsigned char *storeEnumTagSinglePayload for TextStyleDefinition.LanguageGroup(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C41298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextStyleDefinition.LanguageGroup()
{
  return &type metadata for TextStyleDefinition.LanguageGroup;
}

unint64_t sub_191C412D4()
{
  unint64_t result = qword_1E92E4778[0];
  if (!qword_1E92E4778[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E4778);
  }
  return result;
}

uint64_t sub_191C41328()
{
  if (sub_191C413A0()) {
    goto LABEL_6;
  }
  if (qword_1EB44BAA8 != -1) {
    swift_once();
  }
  if ((dyld_program_sdk_at_least() & 1) == 0) {
LABEL_6:
  }
    uint64_t result = CTFontHasExuberatedLineHeight();
  else {
    uint64_t result = 2;
  }
  byte_1EB44C860 = result;
  return result;
}

id sub_191C413A0()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_standardUserDefaults);
  uint64_t v2 = (void *)sub_191CF5318();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
    sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1EB44BC90);
    id v4 = objc_msgSend(v0, sel_standardUserDefaults);
    uint64_t v5 = (void *)sub_191CF5318();
    id v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1EB44BC90);
    if (qword_1EB44BAA8 != -1) {
      swift_once();
    }
    return (id)(dyld_program_sdk_at_least() ^ 1);
  }
  return v6;
}

uint64_t sub_191C41520(uint64_t a1)
{
  uint64_t v2 = sub_191CF31F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v55 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A58);
  uint64_t v5 = MEMORY[0x1F4188790](v70);
  uint64_t v64 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A50);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v57 = (uint64_t)&v52 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v52 - v22;
  MEMORY[0x1F4188790](v21);
  char v62 = (char *)&v52 - v24;
  uint64_t v61 = sub_191CF32A8();
  MEMORY[0x1F4188790](v61);
  uint64_t v65 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)(a1 + 16);
  if (!v27) {
    return 0;
  }
  uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v69 = (void (**)(char *, void, uint64_t, uint64_t))(v3 + 56);
  char v53 = v12;
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  uint64_t v58 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v59 = v15;
  uint64_t v60 = (void (**)(char *, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  LODWORD(v28) = 0;
  int v29 = 0;
  uint64_t v52 = a1;
  uint64_t v30 = a1 + 40;
  uint64_t v56 = v18;
  uint64_t v63 = v8;
  do
  {
    uint64_t v71 = v27;
    unsigned int v72 = v28;
    swift_bridgeObjectRetain();
    uint64_t v31 = (uint64_t)v63;
    sub_191CF3278();
    unsigned int v73 = sub_191C403E0();
    uint64_t v32 = (uint64_t)v62;
    sub_191CF3288();
    sub_191CF31E8();
    uint64_t v67 = *v69;
    v67(v23, 0, 1, v2);
    uint64_t v33 = v31 + *(int *)(v70 + 48);
    sub_191C42020(v32, v31);
    sub_191C42020((uint64_t)v23, v33);
    char v34 = *v68;
    if ((*v68)(v31, 1, v2) == 1)
    {
      sub_191B01770((uint64_t)v23, &qword_1EB449A50);
      sub_191B01770(v32, &qword_1EB449A50);
      if (v34(v33, 1, v2) == 1)
      {
        sub_191B01770(v31, &qword_1EB449A50);
        int v29 = 1;
        uint64_t v36 = v72;
        unsigned __int8 v35 = v73;
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v37 = v57;
      sub_191C42020(v31, v57);
      if (v34(v33, 1, v2) != 1)
      {
        char v40 = v55;
        (*v54)(v55, v33, v2);
        sub_191C42088(&qword_1EB449A48, MEMORY[0x1E4F279D8]);
        int v38 = sub_191CF52F8();
        int v66 = v29;
        uint64_t v41 = *v58;
        (*v58)(v40, v2);
        sub_191B01770((uint64_t)v23, &qword_1EB449A50);
        sub_191B01770(v32, &qword_1EB449A50);
        v41((char *)v37, v2);
        int v29 = v66;
        uint64_t v31 = (uint64_t)v63;
        char v39 = &qword_1EB449A50;
        goto LABEL_12;
      }
      sub_191B01770((uint64_t)v23, &qword_1EB449A50);
      sub_191B01770(v32, &qword_1EB449A50);
      (*v58)((char *)v37, v2);
    }
    int v38 = 0;
    char v39 = &qword_1EB449A58;
LABEL_12:
    uint64_t v36 = v72;
    unsigned __int8 v35 = v73;
    sub_191B01770(v31, v39);
    v29 |= v38;
LABEL_13:
    if (v36 >= v35)
    {
      (*v60)(v65, v61);
      uint64_t v28 = v36;
      goto LABEL_4;
    }
    int v66 = v29;
    uint64_t v42 = (uint64_t)v56;
    char v43 = v65;
    sub_191CF3288();
    uint64_t v44 = (uint64_t)v59;
    sub_191CF31E8();
    v67((char *)v44, 0, 1, v2);
    uint64_t v45 = v64;
    uint64_t v46 = v64 + *(int *)(v70 + 48);
    sub_191C42020(v42, v64);
    sub_191C42020(v44, v46);
    if (v34(v45, 1, v2) == 1)
    {
      sub_191B01770(v44, &qword_1EB449A50);
      sub_191B01770(v42, &qword_1EB449A50);
      (*v60)(v43, v61);
      unsigned int v47 = v34(v46, 1, v2);
      uint64_t v28 = v73;
      if (v47 != 1) {
        goto LABEL_19;
      }
      sub_191B01770(v64, &qword_1EB449A50);
      int v29 = v66;
LABEL_21:
      if (v29) {
        uint64_t v28 = v72;
      }
      else {
        uint64_t v28 = v28;
      }
      goto LABEL_4;
    }
    uint64_t v48 = (uint64_t)v53;
    sub_191C42020(v64, (uint64_t)v53);
    if (v34(v46, 1, v2) == 1)
    {
      sub_191B01770((uint64_t)v59, &qword_1EB449A50);
      sub_191B01770(v42, &qword_1EB449A50);
      (*v60)(v65, v61);
      (*v58)((char *)v48, v2);
      uint64_t v28 = v73;
LABEL_19:
      sub_191B01770(v64, &qword_1EB449A58);
      int v29 = v66;
      goto LABEL_4;
    }
    char v49 = v55;
    (*v54)(v55, v46, v2);
    sub_191C42088(&qword_1EB449A48, MEMORY[0x1E4F279D8]);
    LODWORD(v67) = sub_191CF52F8();
    char v50 = *v58;
    (*v58)(v49, v2);
    sub_191B01770((uint64_t)v59, &qword_1EB449A50);
    sub_191B01770(v42, &qword_1EB449A50);
    (*v60)(v65, v61);
    v50((char *)v48, v2);
    sub_191B01770(v64, &qword_1EB449A50);
    int v29 = v66;
    uint64_t v28 = v73;
    if (v67) {
      goto LABEL_21;
    }
LABEL_4:
    v30 += 16;
    uint64_t v27 = v71 - 1;
  }
  while (v71 != 1);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_191C41D90()
{
  if (qword_1EB449AA8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB449A98;
  uint64_t v1 = *((void *)off_1EB449A98 + 2);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  uint64_t v3 = v0[24];
  if (v3 == 5)
  {
    uint64_t v4 = sub_191CF3228();
    uint64_t v3 = sub_191C41520(v4);
    swift_bridgeObjectRelease();
    v0[24] = v3;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t sub_191C41E40(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == *MEMORY[0x1E4F3E130]) {
    return 0;
  }
  if (v4 == *MEMORY[0x1E4F3E148]) {
    return 1;
  }
  if (v4 == *MEMORY[0x1E4F3E150]) {
    return 2;
  }
  if (v4 == *MEMORY[0x1E4F3E158]) {
    return 3;
  }
  if (v4 == *MEMORY[0x1E4F3E188]) {
    return 4;
  }
  if (v4 == *MEMORY[0x1E4F3E138]) {
    return 5;
  }
  if (v4 == *MEMORY[0x1E4F3E140]) {
    return 6;
  }
  if (v4 == *MEMORY[0x1E4F3E160]) {
    return 7;
  }
  if (v4 == *MEMORY[0x1E4F3E178]) {
    return 8;
  }
  if (v4 == *MEMORY[0x1E4F3E168]) {
    return 9;
  }
  if (v4 == *MEMORY[0x1E4F3E170]) {
    return 10;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 12;
}

uint64_t sub_191C42020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C42088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C420D0()
{
  if (qword_1EB449AA8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB449A98;
  uint64_t v1 = *((void *)off_1EB449A98 + 2);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v0[24] = 5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  return swift_release();
}

uint64_t sub_191C42168(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191C4217C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *sub_191C42190()
{
  type metadata accessor for WidgetArchiverAssertionTracker();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_191C42A44();
  qword_1E92F24A0 = v0;
  return result;
}

void sub_191C421CC(void *a1)
{
  v34[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a1[3])
  {
    uint64_t v3 = a1[4];
    BOOL v4 = __OFADD__(v3, 1);
    uint64_t v5 = v3 + 1;
    if (!v4)
    {
      a1[4] = v5;
      return;
    }
    __break(1u);
LABEL_15:
    swift_once();
LABEL_6:
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB44C888);
    uint64_t v20 = sub_191CF3838();
    os_log_type_t v21 = sub_191CF5948();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_191AF4000, v20, v21, "Acquired runtime assertion for WidgetArchiver.unarchive", v22, 2u);
      MEMORY[0x192FE5F00](v22, -1, -1);
    }
    else
    {
    }
    return;
  }
  uint64_t v6 = (void *)a1[5];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_191CF9150;
  uint64_t v8 = (void *)a1[6];
  *(void *)(v7 + 32) = v8;
  sub_191CF5558();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F96318]);
  id v10 = v6;
  id v11 = v8;
  uint64_t v12 = (void *)sub_191CF5318();
  sub_191B016E0(0, &qword_1EB447150);
  uint64_t v13 = (void *)sub_191CF5528();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v9, sel_initWithExplanation_target_attributes_, v12, v10, v13);

  v34[0] = 0;
  unsigned int v15 = objc_msgSend(v14, sel_acquireWithError_, v34);
  id v16 = v34[0];
  if (v15)
  {
    uint64_t v17 = (void *)a1[3];
    a1[3] = v14;
    id v1 = v14;
    id v18 = v16;

    a1[4] = 1;
    if (qword_1EB44A290 == -1) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  id v23 = v34[0];
  uint64_t v24 = (void *)sub_191CF2FE8();

  swift_willThrow();
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_191CF3858();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EB44C888);
  id v26 = v24;
  id v27 = v24;
  uint64_t v28 = sub_191CF3838();
  os_log_type_t v29 = sub_191CF5928();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138543362;
    id v32 = v24;
    uint64_t v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v34[0] = v33;
    sub_191CF5C08();
    *uint64_t v31 = v33;

    _os_log_impl(&dword_191AF4000, v28, v29, "Unable to acquire runtime assertion for WidgetArchiver.unarchive - error: %{public}@", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v31, -1, -1);
    MEMORY[0x192FE5F00](v30, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_191C425DC()
{
  uint64_t v1 = sub_191CF5168();
  uint64_t v21 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191CF51C8();
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF51E8();
  uint64_t v18 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  id v14 = *(id *)(v0 + 16);
  sub_191CF51D8();
  MEMORY[0x192FE3F70](v11, 0.1);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  aBlock[4] = sub_191C42A3C;
  uint64_t v24 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_5;
  unsigned int v15 = _Block_copy(aBlock);
  swift_retain();
  sub_191CF5188();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_191BCC7A0((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4760](v13, v6, v3, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  v17(v13, v18);
  return swift_release();
}

void sub_191C4295C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 2)
  {
    *(void *)(a1 + 32) = 0;
    objc_msgSend(*(id *)(a1 + 24), sel_invalidate);
    uint64_t v3 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0;
  }
  else
  {
    *(void *)(a1 + 32) = v2 - 1;
  }
}

uint64_t sub_191C429C8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetArchiverAssertionTracker()
{
  return self;
}

void sub_191C42A3C()
{
  sub_191C4295C(v0);
}

void *sub_191C42A44()
{
  uint64_t v1 = v0;
  v14[0] = sub_191CF5A08();
  uint64_t v2 = *(void *)(v14[0] - 8);
  MEMORY[0x1F4188790](v14[0]);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF59E8();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_191CF51C8();
  MEMORY[0x1F4188790](v6 - 8);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  sub_191CF5198();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_191BCC7A0(&qword_1EB44C5D0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C5C0);
  sub_191B1745C(&qword_1EB44C5C8, &qword_1EB44C5C0);
  sub_191CF5C98();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v14[0]);
  uint64_t v7 = sub_191CF5A38();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v7;
  id v8 = objc_msgSend(self, sel_currentProcess);
  id v9 = objc_msgSend(v8, sel_pid);

  v1[5] = objc_msgSend(self, sel_targetWithPid_, v9);
  uint64_t v10 = (void *)sub_191CF5318();
  id v11 = (void *)sub_191CF5318();
  id v12 = objc_msgSend(self, sel_attributeWithDomain_name_, v10, v11);

  v1[6] = v12;
  return v1;
}

id sub_191C42D7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3E130])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24878];
  }
  else if (v6 == *MEMORY[0x1E4F3E148])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24880];
  }
  else if (v6 == *MEMORY[0x1E4F3E150])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24888];
  }
  else if (v6 == *MEMORY[0x1E4F3E158])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24890];
  }
  else if (v6 == *MEMORY[0x1E4F3E188])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24838];
  }
  else if (v6 == *MEMORY[0x1E4F3E138])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24870];
  }
  else if (v6 == *MEMORY[0x1E4F3E140])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24808];
  }
  else if (v6 == *MEMORY[0x1E4F3E160])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24810];
  }
  else if (v6 == *MEMORY[0x1E4F3E178])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24828];
  }
  else if (v6 == *MEMORY[0x1E4F3E168])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24818];
  }
  else
  {
    if (v6 != *MEMORY[0x1E4F3E170])
    {
      uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v11 = (id)*MEMORY[0x1E4F24808];
      v10(v5, v2);
      return v11;
    }
    uint64_t v7 = (void **)MEMORY[0x1E4F24820];
  }
  id v8 = *v7;

  return v8;
}

id sub_191C4301C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF43A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3D588])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24460];
  }
  else if (v6 == *MEMORY[0x1E4F3D5C0])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24450];
  }
  else if (v6 == *MEMORY[0x1E4F3D5C8])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24448];
  }
  else if (v6 == *MEMORY[0x1E4F3D5B8])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24440];
  }
  else if (v6 == *MEMORY[0x1E4F3D580])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24458];
  }
  else if (v6 == *MEMORY[0x1E4F3D590])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24468];
  }
  else if (v6 == *MEMORY[0x1E4F3D560])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24470];
  }
  else if (v6 == *MEMORY[0x1E4F3D5A0])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24420];
  }
  else if (v6 == *MEMORY[0x1E4F3D598])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24418];
  }
  else if (v6 == *MEMORY[0x1E4F3D5A8])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24428];
  }
  else if (v6 == *MEMORY[0x1E4F3D570])
  {
    uint64_t v7 = (void **)MEMORY[0x1E4F24430];
  }
  else
  {
    if (v6 != *MEMORY[0x1E4F3D578])
    {
      uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v11 = (id)*MEMORY[0x1E4F24440];
      v10(v5, v2);
      return v11;
    }
    uint64_t v7 = (void **)MEMORY[0x1E4F24438];
  }
  id v8 = *v7;

  return v8;
}

id sub_191C432DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF49C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (result == *MEMORY[0x1E4F3E088])
  {
    id result = (id)*MEMORY[0x1E4F24640];
    if (*MEMORY[0x1E4F24640]) {
      goto LABEL_12;
    }
    __break(1u);
  }
  if (result == *MEMORY[0x1E4F3E078])
  {
    id result = (id)*MEMORY[0x1E4F24658];
    if (*MEMORY[0x1E4F24658]) {
      goto LABEL_12;
    }
    __break(1u);
  }
  if (result != *MEMORY[0x1E4F3E090]) {
    goto LABEL_10;
  }
  id result = (id)*MEMORY[0x1E4F24650];
  if (!*MEMORY[0x1E4F24650])
  {
    __break(1u);
LABEL_10:
    if (result == *MEMORY[0x1E4F3E070])
    {
      id result = (id)*MEMORY[0x1E4F24648];
      if (*MEMORY[0x1E4F24648]) {
        goto LABEL_12;
      }
      __break(1u);
    }
    else if (*MEMORY[0x1E4F24640])
    {
      uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v8 = (id)*MEMORY[0x1E4F24640];
      v7(v5, v2);
      return v8;
    }
    __break(1u);
    return result;
  }
LABEL_12:

  return result;
}

double sub_191C434C4()
{
  sub_191CF4A18();
  if (sub_191CF49E8())
  {
    uint64_t v0 = MEMORY[0x1E4F24698];
  }
  else
  {
    sub_191CF4A28();
    if (sub_191CF49E8())
    {
      uint64_t v0 = MEMORY[0x1E4F246A8];
    }
    else
    {
      sub_191CF49F8();
      if (sub_191CF49E8())
      {
        uint64_t v0 = MEMORY[0x1E4F246A0];
      }
      else
      {
        sub_191CF4A68();
        if (sub_191CF49E8())
        {
          uint64_t v0 = MEMORY[0x1E4F246C8];
        }
        else
        {
          sub_191CF4A48();
          if (sub_191CF49E8())
          {
            uint64_t v0 = MEMORY[0x1E4F246B8];
          }
          else
          {
            sub_191CF4A58();
            char v1 = sub_191CF49E8();
            uint64_t v0 = MEMORY[0x1E4F246C0];
            if ((v1 & 1) == 0)
            {
              sub_191CF4A38();
              if (sub_191CF49E8())
              {
                uint64_t v0 = MEMORY[0x1E4F246B0];
              }
              else
              {
                sub_191CF4A08();
                if (sub_191CF49E8())
                {
                  uint64_t v0 = MEMORY[0x1E4F246D0];
                }
                else
                {
                  sub_191CF49D8();
                  if (sub_191CF49E8()) {
                    uint64_t v0 = MEMORY[0x1E4F246E0];
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return *(double *)v0;
}

uint64_t ContentSizeCategory.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF43A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3D588]) {
    return 21336;
  }
  int v8 = v6;
  if (v6 == *MEMORY[0x1E4F3D5C0]) {
    return 83;
  }
  if (v6 == *MEMORY[0x1E4F3D5C8]) {
    return 77;
  }
  if (v6 == *MEMORY[0x1E4F3D5B8]) {
    return 76;
  }
  if (v6 == *MEMORY[0x1E4F3D580]) {
    return 19544;
  }
  uint64_t result = 5003329;
  if (v8 == *MEMORY[0x1E4F3D590]) {
    return 5003352;
  }
  if (v8 == *MEMORY[0x1E4F3D560]) {
    return 1280858200;
  }
  if (v8 == *MEMORY[0x1E4F3D5A0]) {
    return 19777;
  }
  if (v8 == *MEMORY[0x1E4F3D598]) {
    return 19521;
  }
  if (v8 != *MEMORY[0x1E4F3D5A8])
  {
    if (v8 == *MEMORY[0x1E4F3D570])
    {
      return 1280858177;
    }
    else
    {
      if (v8 != *MEMORY[0x1E4F3D578])
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return 76;
      }
      return 0x4C58585841;
    }
  }
  return result;
}

uint64_t sub_191C43880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void, void, void)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v175 = a4;
  v176 = a5;
  uint64_t v183 = a28;
  uint64_t v184 = a29;
  uint64_t v178 = a24;
  uint64_t v179 = a26;
  uint64_t v181 = a23;
  uint64_t v182 = a27;
  uint64_t v177 = a22;
  uint64_t v180 = a21;
  uint64_t v157 = a20;
  uint64_t v156 = a19;
  uint64_t v155 = a18;
  uint64_t v154 = a17;
  v152 = a16;
  uint64_t v151 = a15;
  v147 = a14;
  uint64_t v146 = a13;
  v159 = a12;
  v167 = *(void **)(a25 - 8);
  uint64_t v36 = v167[8];
  uint64_t v160 = a11;
  uint64_t v185 = a10;
  uint64_t v37 = MEMORY[0x1F4188790](a1);
  v158 = (char *)&v143 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  v166 = (char *)&v143 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v165 = (char *)&v143 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v153 = (char *)&v143 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v163 = (char *)&v143 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v145 = (char *)&v143 - v47;
  MEMORY[0x1F4188790](v46);
  v143 = (char *)&v143 - v48;
  uint64_t v49 = sub_191CF3008();
  MEMORY[0x1F4188790](v49 - 8);
  char v50 = *a8;
  *(unsigned char *)(a9 + 192) = 0;
  uint64_t v161 = a1;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  uint64_t v168 = a2;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = a3;
  char v51 = v176;
  *(void *)(a9 + 176) = v175;
  *(void *)(a9 + 184) = v51;
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain_n();
  if (!a7)
  {
    sub_191CF2C78();
    a6 = sub_191CF5358();
    a7 = v52;
  }
  v164 = (void *)a9;
  *(void *)(a9 + 152) = a6;
  *(void *)(a9 + 160) = a7;
  *(unsigned char *)(a9 + 168) = v50;
  uint64_t v53 = v180;
  uint64_t v150 = sub_191CF2C68();
  uint64_t v149 = v54;
  uint64_t v55 = (void *)swift_allocObject();
  v148 = v55;
  uint64_t v56 = v53;
  uint64_t v58 = v177;
  uint64_t v57 = v178;
  v55[2] = v53;
  v55[3] = v58;
  uint64_t v59 = v181;
  v55[4] = v181;
  v55[5] = v57;
  uint64_t v60 = v59;
  uint64_t v61 = v179;
  v55[6] = a25;
  v55[7] = v61;
  uint64_t v62 = v183;
  v55[8] = v182;
  v55[9] = v62;
  uint64_t v63 = v184;
  v55[10] = v184;
  uint64_t v64 = v63;
  uint64_t v65 = v167;
  int v66 = (void (*)(void, void, void))v167[2];
  v169 = v167 + 2;
  v176 = v66;
  uint64_t v67 = v143;
  v66(v143, v185, a25);
  uint64_t v68 = *((unsigned __int8 *)v65 + 80);
  uint64_t v162 = ((v68 + 88) & ~v68) + v36;
  uint64_t v69 = (v68 + 88) & ~v68;
  uint64_t v175 = v69;
  unint64_t v172 = ((v162 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v173 = v68 | 7;
  unint64_t v70 = (v162 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v171 = v70;
  uint64_t v71 = (void *)swift_allocObject();
  v71[2] = v56;
  v71[3] = v58;
  v71[4] = v60;
  v71[5] = v57;
  uint64_t v72 = v179;
  v71[6] = a25;
  v71[7] = v72;
  uint64_t v73 = v182;
  uint64_t v74 = v183;
  v71[8] = v182;
  v71[9] = v74;
  v71[10] = v64;
  v75 = v67;
  id v76 = v71;
  v144 = v71;
  uint64_t v77 = (void (*)(char *, char *, uint64_t))v65[4];
  v174 = v65 + 4;
  v77((char *)v71 + v69, v75, a25);
  uint64_t v78 = (void *)((char *)v76 + v70);
  uint64_t v79 = v147;
  *uint64_t v78 = v146;
  v78[1] = v79;
  id v80 = v145;
  v176(v145, v185, a25);
  unint64_t v81 = (void *)swift_allocObject();
  uint64_t v82 = v180;
  uint64_t v83 = v177;
  uint64_t v84 = v178;
  v81[2] = v180;
  v81[3] = v83;
  v81[4] = v181;
  v81[5] = v84;
  v81[6] = a25;
  v81[7] = v72;
  v81[8] = v73;
  v81[9] = v74;
  BOOL v85 = (char *)v81 + v175;
  v81[10] = v184;
  char v86 = v81;
  v147 = v81;
  v170 = v77;
  v77(v85, v80, a25);
  v87 = (void *)((char *)v86 + v171);
  v88 = v152;
  void *v87 = v151;
  v87[1] = v88;
  v176(v163, v185, a25);
  os_log_type_t v89 = (void *)swift_allocObject();
  uint64_t v90 = v177;
  v89[2] = v82;
  v89[3] = v90;
  uint64_t v91 = v181;
  uint64_t v92 = v182;
  v89[4] = v181;
  v89[5] = v84;
  uint64_t v93 = v179;
  v89[6] = a25;
  v89[7] = v93;
  uint64_t v94 = v183;
  uint64_t v95 = v184;
  v89[8] = v92;
  v89[9] = v94;
  uint64_t v96 = v175;
  uint64_t v97 = (char *)v89 + v175;
  v89[10] = v95;
  uint64_t v98 = v89;
  v152 = v89;
  v77(v97, v163, a25);
  unint64_t v99 = (void *)((char *)v98 + v171);
  uint64_t v100 = v155;
  *unint64_t v99 = v154;
  v99[1] = v100;
  v101 = v153;
  uint64_t v102 = v185;
  v176(v153, v185, a25);
  v103 = (char *)swift_allocObject();
  *((void *)v103 + 2) = v180;
  *((void *)v103 + 3) = v90;
  uint64_t v104 = v178;
  uint64_t v105 = v179;
  *((void *)v103 + 4) = v91;
  *((void *)v103 + 5) = v104;
  *((void *)v103 + 6) = a25;
  *((void *)v103 + 7) = v105;
  uint64_t v106 = v183;
  *((void *)v103 + 8) = v92;
  *((void *)v103 + 9) = v106;
  *((void *)v103 + 10) = v95;
  v170(&v103[v96], v101, a25);
  char v107 = &v103[v171];
  uint64_t v108 = v157;
  *(void *)char v107 = v156;
  *((void *)v107 + 1) = v108;
  uint64_t v109 = v102;
  uint64_t v110 = (void (*)(char *, uint64_t, uint64_t))v176;
  v176(v165, v109, a25);
  uint64_t v111 = (void *)swift_allocObject();
  uint64_t v113 = v180;
  uint64_t v112 = v181;
  uint64_t v114 = v177;
  v111[2] = v180;
  v111[3] = v114;
  uint64_t v115 = v178;
  v111[4] = v112;
  v111[5] = v115;
  v111[6] = a25;
  v111[7] = v105;
  uint64_t v116 = v183;
  v111[8] = v182;
  v111[9] = v116;
  v117 = (char *)v111 + v175;
  v111[10] = v184;
  v170(v117, v165, a25);
  v110(v166, v185, a25);
  uint64_t v118 = (void *)swift_allocObject();
  v118[2] = v113;
  v118[3] = v114;
  uint64_t v119 = v178;
  uint64_t v120 = v179;
  v118[4] = v181;
  v118[5] = v119;
  v118[6] = a25;
  v118[7] = v120;
  v118[8] = v182;
  v118[9] = v116;
  uint64_t v121 = (char *)v118 + v175;
  v118[10] = v184;
  v122 = v170;
  v170(v121, v166, a25);
  v123 = v158;
  v176(v158, v185, a25);
  v124 = (void *)swift_allocObject();
  uint64_t v125 = v177;
  v124[2] = v180;
  v124[3] = v125;
  v124[4] = v181;
  v124[5] = v119;
  v124[6] = a25;
  v124[7] = v120;
  uint64_t v126 = v183;
  v124[8] = v182;
  v124[9] = v126;
  v127 = (char *)v124 + v175;
  v124[10] = v184;
  v122(v127, v123, a25);
  uint64_t v128 = v160;
  v129 = v164;
  v130 = v159;
  void *v164 = v160;
  v129[1] = v130;
  v186[3] = &type metadata for ControlToggleTemplateProvider;
  v186[4] = &off_1EE2A2AF8;
  uint64_t v131 = swift_allocObject();
  v186[0] = v131;
  uint64_t v132 = v161;
  uint64_t v133 = v168;
  *(void *)(v131 + 16) = v161;
  *(void *)(v131 + 24) = v133;
  uint64_t v134 = v149;
  *(void *)(v131 + 32) = v150;
  *(void *)(v131 + 40) = v134;
  *(unsigned char *)(v131 + 48) = 0;
  *(_DWORD *)(v131 + 49) = *(_DWORD *)v188;
  *(_DWORD *)(v131 + 52) = *(_DWORD *)&v188[3];
  v135 = v148;
  *(void *)(v131 + 56) = sub_191C4C00C;
  *(void *)(v131 + 64) = v135;
  v136 = v144;
  *(void *)(v131 + 72) = &unk_1E92E4868;
  *(void *)(v131 + 80) = v136;
  v137 = v147;
  *(void *)(v131 + 88) = &unk_1E92E4878;
  *(void *)(v131 + 96) = v137;
  v138 = v152;
  *(void *)(v131 + 104) = &unk_1E92E4888;
  *(void *)(v131 + 112) = v138;
  *(void *)(v131 + 120) = &unk_1E92E4898;
  *(void *)(v131 + 128) = v103;
  *(void *)(v131 + 136) = &unk_1E92E48A8;
  *(void *)(v131 + 144) = v111;
  *(void *)(v131 + 152) = &unk_1E92E48B8;
  *(void *)(v131 + 160) = v118;
  *(void *)(v131 + 168) = &unk_1E92E48C8;
  *(void *)(v131 + 176) = v124;
  v139 = (void (*)(uint64_t, uint64_t))v167[1];
  id v140 = v130;
  v139(v185, a25);
  char v187 = 0;
  v141 = v164;
  v164[7] = v132;
  v141[8] = v133;
  v141[9] = 0;
  v141[10] = 0;
  v141[11] = v128;
  v141[12] = v140;
  return sub_191BE88E4((uint64_t)v186, (uint64_t)(v141 + 13));
}

uint64_t sub_191C442A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  v143 = a4;
  uint64_t v144 = a5;
  uint64_t v150 = a23;
  uint64_t v151 = a25;
  uint64_t v145 = a20;
  uint64_t v146 = a24;
  uint64_t v148 = a21;
  uint64_t v149 = a19;
  uint64_t v126 = a18;
  uint64_t v125 = a17;
  uint64_t v123 = a16;
  uint64_t v122 = a15;
  uint64_t v121 = a14;
  uint64_t v120 = a13;
  uint64_t v128 = a12;
  id v140 = *(void **)(a22 - 8);
  uint64_t v32 = v140[8];
  uint64_t v129 = a11;
  uint64_t v147 = a10;
  uint64_t v33 = MEMORY[0x1F4188790](a1);
  v127 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  v139 = (char *)&v113 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v124 = (char *)&v113 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v138 = (char *)&v113 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v116 = (char *)&v113 - v41;
  MEMORY[0x1F4188790](v40);
  v137 = (char *)&v113 - v42;
  uint64_t v43 = sub_191CF3008();
  MEMORY[0x1F4188790](v43 - 8);
  char v44 = *a8;
  *(unsigned char *)(a9 + 192) = 0;
  uint64_t v130 = a1;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  uint64_t v141 = a2;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = a3;
  uint64_t v45 = v144;
  *(void *)(a9 + 176) = v143;
  *(void *)(a9 + 184) = v45;
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain_n();
  if (!a7)
  {
    sub_191CF2C78();
    a6 = sub_191CF5358();
    a7 = v46;
  }
  *(void *)(a9 + 152) = a6;
  *(void *)(a9 + 160) = a7;
  *(unsigned char *)(a9 + 168) = v44;
  uint64_t v47 = v149;
  uint64_t v119 = sub_191CF2C68();
  uint64_t v118 = v48;
  uint64_t v49 = (void *)swift_allocObject();
  v117 = v49;
  uint64_t v51 = v145;
  uint64_t v50 = v146;
  v49[2] = v47;
  v49[3] = v51;
  v49[4] = v148;
  v49[5] = a22;
  uint64_t v52 = v151;
  v49[6] = v150;
  v49[7] = v50;
  v49[8] = v52;
  uint64_t v53 = v140;
  v142 = (void (*)(char *, uint64_t, uint64_t))v140[2];
  uint64_t v133 = v140 + 2;
  v142(v137, v147, a22);
  uint64_t v54 = *((unsigned __int8 *)v53 + 80);
  uint64_t v55 = v53;
  uint64_t v136 = ((v54 + 72) & ~v54) + v32;
  uint64_t v56 = (v54 + 72) & ~v54;
  uint64_t v132 = v56;
  uint64_t v144 = v54 | 7;
  unint64_t v57 = (v136 + 7) & 0xFFFFFFFFFFFFFFF8;
  v135 = (void *)(v57 + 16);
  unint64_t v134 = v57;
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = v47;
  v58[3] = v51;
  uint64_t v59 = v148;
  v58[4] = v148;
  v58[5] = a22;
  uint64_t v60 = v150;
  v58[6] = v150;
  v58[7] = v50;
  uint64_t v115 = (void *)a9;
  v58[8] = v52;
  uint64_t v61 = v58;
  uint64_t v114 = v58;
  uint64_t v131 = (void (*)(char *, char *, uint64_t))v55[4];
  v143 = v55 + 4;
  v131((char *)v58 + v56, v137, a22);
  uint64_t v62 = (void *)((char *)v61 + v57);
  uint64_t v63 = v121;
  void *v62 = v120;
  v62[1] = v63;
  uint64_t v64 = v116;
  uint64_t v65 = v147;
  int v66 = v142;
  v142(v116, v147, a22);
  uint64_t v67 = (void *)swift_allocObject();
  v67[2] = v149;
  v67[3] = v51;
  v67[4] = v59;
  v67[5] = a22;
  v67[6] = v60;
  v67[7] = v50;
  uint64_t v68 = v132;
  uint64_t v69 = (char *)v67 + v132;
  v67[8] = v151;
  unint64_t v70 = v67;
  v137 = (char *)v67;
  uint64_t v71 = v64;
  uint64_t v72 = v131;
  v131(v69, v71, a22);
  uint64_t v73 = (void *)((char *)v70 + v134);
  uint64_t v74 = v123;
  *uint64_t v73 = v122;
  v73[1] = v74;
  uint64_t v75 = v65;
  v66(v138, v65, a22);
  id v76 = (void *)swift_allocObject();
  uint64_t v77 = v148;
  uint64_t v78 = v149;
  v76[2] = v149;
  v76[3] = v51;
  v76[4] = v77;
  v76[5] = a22;
  uint64_t v79 = v146;
  v76[6] = v150;
  v76[7] = v79;
  v76[8] = v151;
  id v80 = v76;
  v135 = v76;
  v72((char *)v76 + v68, v138, a22);
  unint64_t v81 = (void *)((char *)v80 + v134);
  uint64_t v82 = v126;
  *unint64_t v81 = v125;
  v81[1] = v82;
  uint64_t v83 = v124;
  uint64_t v84 = v75;
  BOOL v85 = v142;
  v142(v124, v84, a22);
  char v86 = (void *)swift_allocObject();
  v86[2] = v78;
  v86[3] = v51;
  v86[4] = v77;
  v86[5] = a22;
  uint64_t v87 = v151;
  v86[6] = v150;
  v86[7] = v79;
  uint64_t v88 = v132;
  os_log_type_t v89 = (char *)v86 + v132;
  v86[8] = v87;
  uint64_t v90 = v131;
  v131(v89, v83, a22);
  uint64_t v91 = v147;
  v85(v139, v147, a22);
  uint64_t v92 = (char *)swift_allocObject();
  uint64_t v93 = v145;
  *((void *)v92 + 2) = v149;
  *((void *)v92 + 3) = v93;
  *((void *)v92 + 4) = v148;
  *((void *)v92 + 5) = a22;
  uint64_t v94 = v146;
  *((void *)v92 + 6) = v150;
  *((void *)v92 + 7) = v94;
  *((void *)v92 + 8) = v87;
  v90(&v92[v88], v139, a22);
  uint64_t v95 = v127;
  v142(v127, v91, a22);
  uint64_t v96 = (char *)swift_allocObject();
  uint64_t v97 = v145;
  *((void *)v96 + 2) = v149;
  *((void *)v96 + 3) = v97;
  *((void *)v96 + 4) = v148;
  *((void *)v96 + 5) = a22;
  uint64_t v98 = v146;
  *((void *)v96 + 6) = v150;
  *((void *)v96 + 7) = v98;
  *((void *)v96 + 8) = v151;
  v90(&v96[v88], v95, a22);
  uint64_t v99 = v129;
  uint64_t v100 = v115;
  v101 = v128;
  void *v115 = v129;
  v100[1] = v101;
  v152[3] = &type metadata for ControlToggleTemplateProvider;
  v152[4] = &off_1EE2A2AF8;
  uint64_t v102 = swift_allocObject();
  v152[0] = v102;
  uint64_t v103 = v130;
  uint64_t v104 = v141;
  *(void *)(v102 + 16) = v130;
  *(void *)(v102 + 24) = v104;
  uint64_t v105 = v118;
  *(void *)(v102 + 32) = v119;
  *(void *)(v102 + 40) = v105;
  *(unsigned char *)(v102 + 48) = 0;
  uint64_t v106 = v117;
  *(void *)(v102 + 56) = sub_191C4B678;
  *(void *)(v102 + 64) = v106;
  char v107 = v114;
  *(void *)(v102 + 72) = &unk_1E92E4808;
  *(void *)(v102 + 80) = v107;
  *(void *)(v102 + 88) = 0;
  *(void *)(v102 + 96) = 0;
  uint64_t v108 = v137;
  *(void *)(v102 + 104) = &unk_1E92E4818;
  *(void *)(v102 + 112) = v108;
  uint64_t v109 = v135;
  *(void *)(v102 + 120) = &unk_1E92E4828;
  *(void *)(v102 + 128) = v109;
  *(void *)(v102 + 136) = &unk_1E92E4838;
  *(void *)(v102 + 144) = v86;
  *(void *)(v102 + 152) = &unk_1E92E4848;
  *(void *)(v102 + 160) = v92;
  *(void *)(v102 + 168) = &unk_1E92E4858;
  *(void *)(v102 + 176) = v96;
  uint64_t v110 = (void (*)(uint64_t, uint64_t))v140[1];
  id v111 = v101;
  v110(v147, a22);
  char v153 = 0;
  v100[7] = v103;
  v100[8] = v104;
  v100[9] = 0;
  v100[10] = 0;
  v100[11] = v99;
  v100[12] = v111;
  return sub_191BE88E4((uint64_t)v152, (uint64_t)(v100 + 13));
}

uint64_t sub_191C44B48()
{
  return 1;
}

uint64_t sub_191C44B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_191CF56B8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_191CF56A8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_191BAD64C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_191CF5648();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_191C44D00()
{
  return MEMORY[0x1F4188298](sub_191C44D1C, 0, 0);
}

uint64_t sub_191C44D1C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_191C44D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_191C44D58, 0, 0);
}

uint64_t sub_191C44D58()
{
  AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  if (AssociatedTypeWitness == &type metadata for EmptyConfiguration)
  {
    swift_dynamicCast();
    int v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v2 = (uint64_t)AssociatedTypeWitness;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[6] = v3;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *uint64_t v3 = v0;
    v3[1] = sub_191BE48BC;
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    return sub_191BD399C(v5, v6, v2, AssociatedConformanceWitness);
  }
}

uint64_t sub_191C44EA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  swift_getAssociatedConformanceWitness();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191C44FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a6;
  v6[6] = v14;
  v6[3] = a4;
  v6[4] = a5;
  v6[2] = a3;
  v6[7] = swift_task_alloc();
  v6[8] = *(void *)(a5 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[9] = v9;
  v6[10] = sub_191CF5698();
  v6[11] = sub_191CF5688();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v15 + 48) + **(int **)(v15 + 48));
  uint64_t v10 = (void *)swift_task_alloc();
  v6[12] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_191C45184;
  return v12(v9, a1);
}

uint64_t sub_191C45184()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C4CB70;
  }
  else {
    uint64_t v4 = sub_191C4CB8C;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C452E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a7;
  v7[6] = v15;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a3;
  v7[7] = swift_task_alloc();
  v7[8] = *(void *)(a5 - 8);
  uint64_t v10 = swift_task_alloc();
  v7[9] = v10;
  v7[10] = sub_191CF5698();
  v7[11] = sub_191CF5688();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v16 + 48) + **(int **)(v16 + 48));
  id v11 = (void *)swift_task_alloc();
  v7[12] = v11;
  void *v11 = v7;
  v11[1] = sub_191C45184;
  return v13(v10, a1);
}

uint64_t sub_191C454A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = v14;
  *(void *)(v6 + 48) = v15;
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = a6;
  *(void *)(v6 + 16) = a4;
  *(unsigned char *)(v6 + 112) = a2;
  *(void *)(v6 + 56) = swift_task_alloc();
  *(void *)(v6 + 64) = *(void *)(a6 - 8);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = sub_191CF5698();
  *(void *)(v6 + 88) = sub_191CF5688();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v16 + 48) + **(int **)(v16 + 48));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 96) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_191C45668;
  return v12(v9, a1);
}

uint64_t sub_191C45668()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C4CB70;
  }
  else {
    uint64_t v4 = sub_191C4CB90;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C457C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = a7;
  *(unsigned char *)(v7 + 96) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 48) = *(void *)(a7 - 8);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v7 + 56) = v9;
  *(void *)(v7 + 64) = sub_191CF5698();
  *(void *)(v7 + 72) = sub_191CF5688();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v14 + 48) + **(int **)(v14 + 48));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 80) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_191C4595C;
  return v12(v9, a2);
}

uint64_t sub_191C4595C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C4CB6C;
  }
  else {
    uint64_t v4 = sub_191C4CB94;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C45AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a7;
  v7[5] = v15;
  v7[2] = a2;
  v7[3] = a3;
  v7[6] = *(void *)(a3 - 8);
  uint64_t v10 = swift_task_alloc();
  v7[7] = v10;
  v7[8] = sub_191CF5698();
  v7[9] = sub_191CF5688();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 48) + **(int **)(v15 + 48));
  id v11 = (void *)swift_task_alloc();
  v7[10] = v11;
  void *v11 = v7;
  v11[1] = sub_191C45C4C;
  return v13(v10, a1, a7);
}

uint64_t sub_191C45C4C()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191C4CB7C, v4, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2[5] + 24) + **(int **)(v2[5] + 24));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[12] = v5;
    void *v5 = v2;
    v5[1] = sub_191C45E38;
    uint64_t v6 = v2[4];
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[7];
    return v10(v8, v6, v7);
  }
}

uint64_t sub_191C45E38(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v6;
    uint64_t v8 = sub_191C4CB98;
  }
  else
  {
    *(unsigned char *)(v4 + 112) = a1 & 1;
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v9;
    uint64_t v8 = sub_191C4CB88;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_191C45FBC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a8;
  *(void *)(v8 + 40) = v16;
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  *(unsigned char *)(v8 + 96) = a2;
  *(void *)(v8 + 48) = *(void *)(a4 - 8);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v8 + 56) = v11;
  *(void *)(v8 + 64) = sub_191CF5698();
  *(void *)(v8 + 72) = sub_191CF5688();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 + 48) + **(int **)(v16 + 48));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v8 + 80) = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_191C46154;
  return v14(v11, a1, a8);
}

uint64_t sub_191C46154()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C4CB6C;
  }
  else {
    uint64_t v4 = sub_191C4CB74;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C462B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a8;
  v8[6] = v16;
  v8[3] = a3;
  v8[4] = a4;
  _OWORD v8[2] = a1;
  v8[7] = *(void *)(a4 - 8);
  uint64_t v11 = swift_task_alloc();
  v8[8] = v11;
  v8[9] = sub_191CF5698();
  v8[10] = sub_191CF5688();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 + 48) + **(int **)(v16 + 48));
  uint64_t v12 = (void *)swift_task_alloc();
  v8[11] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_191C46448;
  return v14(v11, a2, a8);
}

uint64_t sub_191C46448()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191C4CB80, v4, v3);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[6] + 40)
                                                                     + **(int **)(v2[6] + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[13] = v5;
    void *v5 = v2;
    v5[1] = sub_191C46634;
    uint64_t v6 = v2[8];
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[6];
    uint64_t v9 = v2[2];
    return v11(v9, v6, v7, v8);
  }
}

uint64_t sub_191C46634()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C4CB9C;
  }
  else {
    uint64_t v4 = sub_191C4CB84;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C46790(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BE9394();
  swift_getAssociatedConformanceWitness();
  sub_191CF2D28();
  uint64_t v5 = sub_191C8D2BC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_191C468B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a6;
  v8[6] = v17;
  v8[3] = a4;
  v8[4] = a5;
  _OWORD v8[2] = a3;
  v8[7] = swift_task_alloc();
  v8[8] = *(void *)(a5 - 8);
  uint64_t v12 = swift_task_alloc();
  v8[9] = v12;
  v8[10] = sub_191CF5698();
  v8[11] = sub_191CF5688();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 48) + **(int **)(v18 + 48));
  uint64_t v13 = (void *)swift_task_alloc();
  v8[12] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_191C46A74;
  return v15(v12, a1, a8);
}

uint64_t sub_191C46A74()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C46CAC;
  }
  else {
    uint64_t v4 = sub_191C46BD0;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C46BD0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void (*)(uint64_t))v0[2];
  swift_release();
  v4(v1);
  uint64_t v5 = sub_191CF5038();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_191C46CAC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C46D28(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 48) = v16;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 112) = a2;
  *(void *)(v8 + 56) = swift_task_alloc();
  *(void *)(v8 + 64) = *(void *)(a6 - 8);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v8 + 72) = v11;
  *(void *)(v8 + 80) = sub_191CF5698();
  *(void *)(v8 + 88) = sub_191CF5688();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v17 + 48) + **(int **)(v17 + 48));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v8 + 96) = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_191C46EEC;
  return v14(v11, a1);
}

uint64_t sub_191C46EEC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C46CAC;
  }
  else {
    uint64_t v4 = sub_191C47048;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C47048()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 16);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 112);
  swift_release();
  v4(v5, v1);
  uint64_t v6 = sub_191CF5038();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_191C47134(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = a7;
  *(unsigned char *)(v7 + 96) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 48) = *(void *)(a7 - 8);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v7 + 56) = v9;
  *(void *)(v7 + 64) = sub_191CF5698();
  *(void *)(v7 + 72) = sub_191CF5688();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v14 + 48) + **(int **)(v14 + 48));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 80) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_191C472CC;
  return v12(v9, a2);
}

uint64_t sub_191C472CC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C074DC;
  }
  else {
    uint64_t v4 = sub_191C47428;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C47428()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v5 = *(void *)(v0 + 16);
    (*(void (**)(long long *__return_ptr, void, void))(v0 + 24))(&v16, *(unsigned __int8 *)(v0 + 96), *(void *)(v0 + 56));
    uint64_t v6 = v17;
    uint64_t v7 = v18;
    long long v14 = v16;
    long long v15 = v19;
    long long v13 = v20;
    uint64_t v1 = v21;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    long long v8 = v13;
    *(_OWORD *)uint64_t v5 = v14;
    *(void *)(v5 + 16) = v6;
    *(void *)(v5 + 24) = v7;
  }
  else
  {
    uint64_t v9 = *(_OWORD **)(v0 + 16);
    *uint64_t v9 = 0u;
    v9[1] = 0u;
    long long v15 = 0u;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    long long v8 = 0uLL;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  *(_OWORD *)(v10 + 32) = v15;
  *(_OWORD *)(v10 + 48) = v8;
  *(void *)(v10 + 64) = v1;
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_191C4755C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a6;
  v6[5] = v14;
  v6[2] = a2;
  v6[3] = a3;
  v6[6] = *(void *)(a3 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[7] = v9;
  v6[8] = sub_191CF5698();
  v6[9] = sub_191CF5688();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 48) + **(int **)(v14 + 48));
  uint64_t v10 = (void *)swift_task_alloc();
  v6[10] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_191C476F0;
  return v12(v9, a1, a6);
}

uint64_t sub_191C476F0()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191C47AF8, v4, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2[5] + 24) + **(int **)(v2[5] + 24));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[12] = v5;
    void *v5 = v2;
    v5[1] = sub_191C478DC;
    uint64_t v6 = v2[4];
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[7];
    return v10(v8, v6, v7);
  }
}

uint64_t sub_191C478DC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v6;
    uint64_t v8 = sub_191C47B68;
  }
  else
  {
    *(unsigned char *)(v4 + 112) = a1 & 1;
    uint64_t v5 = sub_191CF5648();
    uint64_t v7 = v9;
    uint64_t v8 = sub_191C47A60;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_191C47A60()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 112);
  return v4(v5);
}

uint64_t sub_191C47AF8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_191C47B68()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_191C47C00(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 32) = a7;
  *(void *)(v7 + 40) = v15;
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  *(unsigned char *)(v7 + 96) = a2;
  *(void *)(v7 + 48) = *(void *)(a4 - 8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v7 + 56) = v10;
  *(void *)(v7 + 64) = sub_191CF5698();
  *(void *)(v7 + 72) = sub_191CF5688();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 48) + **(int **)(v15 + 48));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 80) = v11;
  void *v11 = v7;
  v11[1] = sub_191C47D98;
  return v13(v10, a1, a7);
}

uint64_t sub_191C47D98()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C074DC;
  }
  else {
    uint64_t v4 = sub_191C47EF4;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C47EF4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 96);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v6, v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_191C47FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a7;
  v7[6] = v15;
  v7[3] = a3;
  v7[4] = a4;
  v7[2] = a1;
  v7[7] = *(void *)(a4 - 8);
  uint64_t v10 = swift_task_alloc();
  v7[8] = v10;
  v7[9] = sub_191CF5698();
  v7[10] = sub_191CF5688();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 48) + **(int **)(v15 + 48));
  uint64_t v11 = (void *)swift_task_alloc();
  v7[11] = v11;
  void *v11 = v7;
  v11[1] = sub_191C4815C;
  return v13(v10, a2, a7);
}

uint64_t sub_191C4815C()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_191CF5648();
    return MEMORY[0x1F4188298](sub_191C48538, v4, v3);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[6] + 40)
                                                                     + **(int **)(v2[6] + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    v2[13] = v5;
    void *v5 = v2;
    v5[1] = sub_191C48348;
    uint64_t v6 = v2[8];
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[6];
    uint64_t v9 = v2[2];
    return v11(v9, v6, v7, v8);
  }
}

uint64_t sub_191C48348()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191C485A4;
  }
  else {
    uint64_t v4 = sub_191C484A4;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191C484A4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C48538()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C485A4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t ControlToggle.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v52 = a7;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v55 = a6;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v49 = a8;
  long long v47 = a10;
  long long v48 = a9;
  long long v46 = a11;
  uint64_t v43 = a14;
  uint64_t v44 = a18;
  uint64_t v45 = a12;
  uint64_t v41 = a16;
  uint64_t v42 = a19;
  uint64_t v21 = *(void *)(a17 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ToggleStateProviderBox();
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v36 - v25;
  uint64_t v37 = (uint64_t)&v36 - v25;
  LOBYTE(a5) = *a5;
  swift_getAssociatedConformanceWitness();
  uint64_t v40 = sub_191CF2C68();
  uint64_t v39 = v27;
  v56[0] = (char)a5;
  uint64_t v38 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v55, a17);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v23, a17);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v32 = v41;
  uint64_t v31 = v42;
  uint64_t v33 = sub_191BA8EA4();
  sub_191C43880(v50, v51, a13, v40, v39, v53, v54, v56, v49, v37, v33, v34, v52, (void *)v48, *((uint64_t *)&v48 + 1), (void *)v47, *((uint64_t *)&v47 + 1), v46, *((uint64_t *)&v46 + 1),
    v45,
    a13,
    v29,
    a15,
    v32,
    v24,
    v30,
    v31,
    a20,
    WitnessTable);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v55, a17);
}

uint64_t type metadata accessor for ToggleStateProviderBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ControlToggle.init<A, B, C>(kind:intent:displayName:preferredSize:stateProvider:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v42 = a7;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a6;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v39 = a8;
  long long v37 = a10;
  long long v38 = a9;
  uint64_t v35 = a13;
  uint64_t v36 = a11;
  uint64_t v18 = *(void *)(a15 - 8);
  uint64_t v34 = a17;
  MEMORY[0x1F4188790](a1);
  long long v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ToggleStateProviderBox();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v31 - v22;
  LOBYTE(a5) = *a5;
  swift_getAssociatedConformanceWitness();
  uint64_t v32 = (void *)sub_191CF2C68();
  uint64_t v33 = v24;
  v46[0] = (char)a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v45, a15);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v20, a15);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v34;
  uint64_t v27 = v35;
  uint64_t v28 = sub_191BA9300();
  sub_191C442A8(v40, v41, a12, v32, v33, v43, v44, v46, v39, (uint64_t)v23, v28, v29, v42, v38, *((uint64_t *)&v38 + 1), v37, *((uint64_t *)&v37 + 1), v36, a12,
    v27,
    a14,
    v21,
    a16,
    v26,
    WitnessTable);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v45, a15);
}

uint64_t ControlToggle.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  uint64_t v0 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191CF8410;
  sub_191BE2B98(v2 + v1);
  sub_191B5D22C();
  sub_191CF4418();
  return swift_bridgeObjectRelease();
}

uint64_t ControlToggle.init<A, B, C>(kind:intent:stateProvider:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v36 = a7;
  uint64_t v37 = a6;
  uint64_t v41 = a5;
  uint64_t v42 = a3;
  uint64_t v33 = a4;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v38 = a8;
  uint64_t v15 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for ToggleStateProviderBox();
  MEMORY[0x1F4188790](v30);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v31 = (uint64_t)&v29 - v18;
  swift_getAssociatedConformanceWitness();
  long long v20 = (void *)sub_191CF2C68();
  uint64_t v34 = v21;
  uint64_t v35 = v20;
  uint64_t v32 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v42, a12);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v17, a12);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a9;
  v22[3] = a10;
  v22[4] = a11;
  v22[5] = a12;
  v22[6] = a13;
  v22[7] = a14;
  uint64_t v23 = v33;
  v22[8] = a15;
  v22[9] = v23;
  v22[10] = v41;
  uint64_t v24 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191AF6728(v43);
  swift_retain();
  uint64_t v26 = sub_191BA9300();
  sub_191C442A8(v39, v40, a9, v35, v34, 0, 0, v43, v38, v31, v26, v27, (uint64_t)sub_191C490B0, (uint64_t)v22, v37, v36, 0, 0, a9,
    a10,
    a11,
    v24,
    a13,
    a14,
    WitnessTable);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v42, a12);
}

uint64_t sub_191C48F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - v14;
  v16(1);
  sub_191C6C7AC(v13, a5, a8);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, a5);
  sub_191C6C7AC(v15, a5, a8);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, a5);
}

uint64_t sub_191C49078()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C490B0(uint64_t a1)
{
  return sub_191C48F38(a1, v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t ControlToggle.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v4, a2);
  sub_191B15E0C(v4 + 104, (uint64_t)&v16);
  if (v19 == 1) {
    return sub_191BB2C20((uint64_t)&v16);
  }
  sub_191B004A8(&v16, (uint64_t)v29);
  sub_191AFEE28((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0D78);
  if ((swift_dynamicCast() & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  long long v13 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  uint64_t v10 = v21;
  uint64_t v11 = v22;
  v14[3] = &type metadata for ControlToggleTemplateProvider;
  v14[4] = &off_1EE2A2AF8;
  uint64_t v12 = swift_allocObject();
  v14[0] = v12;
  *(_OWORD *)(v12 + 16) = v13;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v9;
  *(unsigned char *)(v12 + 48) = a1 & 1;
  *(_OWORD *)(v12 + 56) = v19;
  *(_OWORD *)(v12 + 72) = v20;
  *(void *)(v12 + 88) = v10;
  *(void *)(v12 + 96) = v11;
  *(_OWORD *)(v12 + 104) = v23;
  *(_OWORD *)(v12 + 120) = v24;
  *(_OWORD *)(v12 + 136) = v25;
  *(_OWORD *)(v12 + 152) = v26;
  *(_OWORD *)(v12 + 168) = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  char v15 = 0;
  return sub_191BE329C((uint64_t)v14, a3 + 104);
}

uint64_t sub_191C49280()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C49308()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ControlToggle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191C49364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B8B028;
  return v9(a1, a2, a3);
}

uint64_t sub_191C49468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_191C4947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191C4958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ToggleStateProvider.getState(appIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B8B028;
  return v9(a1, a2, a3);
}

uint64_t sub_191C497A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlToggleTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  long long v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
  *(void *)(a1 + 160) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v6;
      *(void *)(a1 + 80) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v6;
      *(void *)(a1 + 80) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlToggleTemplateProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlToggleTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlToggleTemplateProvider()
{
  return &type metadata for ControlToggleTemplateProvider;
}

uint64_t sub_191C49D28(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191C49E84(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191C4A09CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        long long v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_191C4A0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  size_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_191BAD1DC;
  return v8(a1, v5, v4);
}

uint64_t sub_191C4A1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 104) = a5;
  *(void *)(v5 + 16) = a4;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(v5 + 24) = AssociatedConformanceWitness;
  *(void *)(v5 + 32) = *(void *)(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_191CF5BC8();
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 48) = *(void *)(v7 - 8);
  *(void *)(v5 + 56) = swift_task_alloc();
  uint64_t v8 = swift_checkMetadataState();
  *(void *)(v5 + 64) = v8;
  *(void *)(v5 + 72) = *(void *)(v8 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4A3B0, 0, 0);
}

uint64_t sub_191C4A3B0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  char v2 = *(unsigned char *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 24);
  (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 72) + 16))(*(void *)(v0 + 80), *(void *)(v0 + 16), v1);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v3 + 24))((v2 & 1) == 0, v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_191C4A4A8;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 32);
  return MEMORY[0x1F40D3C68](v5, 1, v6, v7);
}

uint64_t sub_191C4A4A8()
{
  char v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_191C4A65C;
  }
  else
  {
    (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
    uint64_t v3 = sub_191C4A5D4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C4A5D4()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191C4A65C()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191C4A6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_191C4CB78;
  return sub_191C4A0C4(a1, a2);
}

uint64_t sub_191C4A788(uint64_t a1, char a2, uint64_t a3)
{
  return sub_191C4B058(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_191C4A794(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_191B0A348;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_191BABCC4, 0, 0);
}

uint64_t sub_191C4A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  v9[1] = sub_191B17A68;
  return MEMORY[0x1F4188298](sub_191C44D58, 0, 0);
}

uint64_t sub_191C4A900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 552) = a3;
  *(void *)(v4 + 544) = a2;
  *(void *)(v4 + 536) = a1;
  long long v5 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v4 + 496) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v4 + 512) = v5;
  *(void *)(v4 + 528) = *(void *)(v3 + 160);
  long long v6 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v4 + 432) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v4 + 448) = v6;
  long long v7 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v4 + 464) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v4 + 480) = v7;
  long long v8 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 368) = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 384) = v8;
  long long v9 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 400) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v4 + 416) = v9;
  sub_191CF5698();
  *(void *)(v4 + 560) = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  *(void *)(v4 + 568) = v11;
  *(void *)(v4 + 576) = v10;
  return MEMORY[0x1F4188298](sub_191C4A9D4, v11, v10);
}

uint64_t sub_191C4A9D4()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(uint64_t **)(v0 + 536);
  long long v3 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 160) = v3;
  uint64_t v4 = *(void *)(v0 + 528);
  long long v5 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 96) = v5;
  long long v6 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 128) = v6;
  long long v7 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 32) = v7;
  long long v8 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 64) = v8;
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = v1;
  long long v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v9;
  long long v10 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v10;
  long long v11 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v11;
  long long v12 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v12;
  long long v13 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v13;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  v2[3] = type metadata accessor for ControlTemplateToggle(0);
  v2[4] = sub_191C4B47C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2);
  sub_191C4B4D4(v0 + 368);
  id v15 = v1;
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v16;
  *long long v16 = v0;
  v16[1] = sub_191C4AB14;
  uint64_t v17 = *(void *)(v0 + 544);
  return sub_191BCE8EC((uint64_t)boxed_opaque_existential_1, v17);
}

uint64_t sub_191C4AB14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 592) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 576);
  uint64_t v4 = *(void *)(v2 + 568);
  if (v0) {
    long long v5 = sub_191C4ACC0;
  }
  else {
    long long v5 = sub_191C4AC50;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191C4AC50()
{
  sub_191C4B59C(v0 + 16);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C4ACC0()
{
  uint64_t v1 = *(void *)(v0 + 536);
  sub_191C4B59C(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191C4AD3C(uint64_t a1)
{
  long long v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 120) + **(int **)(v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_191C4AE10;
  return v6(a1);
}

uint64_t sub_191C4AE10(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7(a1 & 1);
  }
}

uint64_t sub_191C4AF40(uint64_t a1, uint64_t a2)
{
  BOOL v5 = a1 > 0;
  uint64_t v8 = (uint64_t (*)(uint64_t, BOOL))(*(void *)(v2 + 136) + **(int **)(v2 + 136));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *long long v6 = v3;
  v6[1] = sub_191B17A68;
  return v8(a2, v5);
}

uint64_t sub_191C4B024()
{
  return *(void *)(swift_getAssociatedConformanceWitness() + 8);
}

uint64_t sub_191C4B058(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v12 = (char *)&v20 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, AssociatedTypeWitness);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = a3;
  *((void *)v18 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v12, AssociatedTypeWitness);
  v18[v17 + v10] = a2;
  sub_191C44B80((uint64_t)v15, (uint64_t)&unk_1E92E47F0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_191C4B250()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_191C4B334(uint64_t a1)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  char v9 = *(unsigned char *)(v1 + v5 + *(void *)(v4 + 64));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_191B17A68;
  return sub_191C4A1C4(a1, v6, v7, v8, v9);
}

unint64_t sub_191C4B47C()
{
  unint64_t result = qword_1E92E19B0;
  if (!qword_1E92E19B0)
  {
    type metadata accessor for ControlTemplateToggle(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E19B0);
  }
  return result;
}

uint64_t sub_191C4B4D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_191B17508(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191C4B59C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v3 = *(void **)(a1 + 168);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_191C4B668()
{
  return swift_deallocObject();
}

uint64_t sub_191C4B678()
{
  return sub_191C46790(*(void *)(v0 + 16));
}

uint64_t sub_191C4B690(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = (uint64_t)v1 + v8;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(*(void *)(v7 - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_191B8A874;
  return sub_191C468B0(a1, v9, v11, v12, v4, v5, v6, v7);
}

uint64_t objectdestroy_37Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 40) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 40) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 40) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C4B88C(uint64_t a1, char a2)
{
  uint64_t v6 = v2[3];
  uint64_t v16 = v2[2];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = (uint64_t)v2 + v9;
  uint64_t v11 = (void *)((char *)v2 + ((*(void *)(*(void *)(v8 - 8) + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_191B8B028;
  return sub_191C46D28(a1, a2, v10, v12, v13, v16, v6, v7);
}

uint64_t sub_191C4B9F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_191C4BA90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v15 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = (uint64_t *)(v3 + ((*(void *)(*(void *)(v7 - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_191B17A68;
  return sub_191C47134(a1, a2, a3, v9, v11, v12, v15);
}

uint64_t sub_191C4BC00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B8A874;
  return sub_191C4755C(a1, v8, v4, v5, v6, v7);
}

uint64_t sub_191C4BD24(uint64_t a1, char a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = (uint64_t)v2
     + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_191B17A68;
  return sub_191C47C00(a1, a2, v9, v5, v6, v7, v8);
}

uint64_t objectdestroy_49Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 40) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 40) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 40) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_191C4BED4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = (uint64_t)v2
     + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_191B0A348;
  return sub_191C47FC4(a1, a2, v9, v5, v6, v7, v8);
}

uint64_t sub_191C4BFFC()
{
  return swift_deallocObject();
}

uint64_t sub_191C4C00C()
{
  return sub_191C44EA4(*(void *)(v0 + 16));
}

uint64_t sub_191C4C048(uint64_t a1)
{
  uint64_t v14 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v4 = v1[6];
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = (uint64_t)v1 + v5;
  uint64_t v7 = (void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_191B8B028;
  return sub_191C44FC4(a1, v6, v8, v9, v14, v12);
}

uint64_t sub_191C4C1B4(uint64_t a1)
{
  uint64_t v15 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v13 = v1[3];
  uint64_t v5 = v1[6];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (uint64_t)v1 + v6;
  uint64_t v8 = (void *)((char *)v1 + ((*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B8B028;
  return sub_191C452E0(a1, v7, v9, v10, v15, v13, v4);
}

uint64_t objectdestroy_79Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 48) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 48) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 48) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C4C3C0(uint64_t a1, char a2)
{
  uint64_t v14 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 48);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(*(void *)(v6 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_191B8B028;
  return sub_191C454A4(a1, a2, v8, v10, v11, v14);
}

uint64_t sub_191C4C52C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_191C4C5CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v15 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 48);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = v3 + v7;
  uint64_t v9 = (uint64_t *)(v3 + ((*(void *)(*(void *)(v6 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_191B17A68;
  return sub_191C457C4(a1, a2, a3, v8, v10, v11, v15);
}

uint64_t sub_191C4C740(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_191B8B028;
  return sub_191C45AB8(a1, v9, v4, v5, v6, v7, v8);
}

uint64_t sub_191C4C874(uint64_t a1, char a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = (uint64_t)v2
      + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_191B17A68;
  return sub_191C45FBC(a1, a2, v10, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_95Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 48) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 48) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 48) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_191C4CA34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = (uint64_t)v2
      + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  void *v11 = v3;
  v11[1] = sub_191B17A68;
  return sub_191C462B0(a1, a2, v10, v5, v6, v7, v8, v9);
}

double ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v22 = *a5;
  uint64_t v23 = sub_191CF2DB8();
  uint64_t v37 = v24;
  uint64_t v38 = v23;
  char v46 = v22;
  sub_191C4CDFC(a6, a16, a17, a18, v45);
  swift_retain();
  long long v25 = (void *)sub_191CF2C58();
  if (a12) {
    uint64_t v26 = a13;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = type metadata accessor for KeyPathPickerBox();
  unint64_t v28 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE19F0(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v38, v37, a3, a4, &v46, (uint64_t)v47, (uint64_t)v45, 3, v25, a7, a8, a10, a11, a12, v26, (uint64_t)&type metadata for EmptyConfiguration,
    a14,
    a15,
    v27,
    v28,
    a19,
    a20,
    WitnessTable);
  swift_release();
  long long v30 = v55;
  *(_OWORD *)(a9 + 128) = v54;
  *(_OWORD *)(a9 + 144) = v30;
  long long v31 = v57;
  *(_OWORD *)(a9 + 160) = v56;
  *(_OWORD *)(a9 + 176) = v31;
  long long v32 = v51;
  *(_OWORD *)(a9 + 64) = v50;
  *(_OWORD *)(a9 + 80) = v32;
  long long v33 = v53;
  *(_OWORD *)(a9 + 96) = v52;
  *(_OWORD *)(a9 + 112) = v33;
  long long v34 = v47[1];
  *(_OWORD *)a9 = v47[0];
  *(_OWORD *)(a9 + 16) = v34;
  double result = *(double *)&v48;
  long long v36 = v49;
  *(_OWORD *)(a9 + 32) = v48;
  *(_OWORD *)(a9 + 48) = v36;
  *(unsigned char *)(a9 + 192) = 1;
  return result;
}

uint64_t sub_191C4CDFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = (uint64_t *)(v10 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v13 = v12[1];
  uint64_t v14 = (void *)(*MEMORY[0x1E4F18820] + v13);
  uint64_t v15 = v14[1];
  uint64_t v16 = *(void *)(*MEMORY[0x1E4F187B8] + v15 + 8);
  v11[2] = v16;
  uint64_t v23 = *v12;
  uint64_t v24 = v16;
  v11[3] = *v12;
  uint64_t v22 = v14[2];
  v11[4] = v22;
  v11[5] = v15;
  v11[6] = v13;
  v11[7] = a2;
  v11[8] = a3;
  v11[9] = a4;
  uint64_t v21 = v14[5];
  v11[10] = v21;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a1;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v24;
  v19[3] = v23;
  v19[4] = v22;
  v19[5] = v15;
  v19[6] = v13;
  v19[7] = a2;
  v19[8] = a3;
  v19[9] = a4;
  v19[10] = v21;
  *a5 = &unk_1E92E4988;
  a5[1] = v11;
  a5[2] = &unk_1E92E4998;
  a5[3] = v17;
  a5[4] = &unk_1E92E49A8;
  a5[5] = v18;
  a5[6] = &unk_1E92E49B8;
  a5[7] = v19;

  return swift_retain();
}

uint64_t type metadata accessor for KeyPathPickerBox()
{
  return __swift_instantiateGenericMetadata();
}

double ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v26 = *a5;
  uint64_t v27 = sub_191CF2DB8();
  uint64_t v41 = v28;
  uint64_t v42 = v27;
  char v50 = v26;
  sub_191C4CDFC(a6, a19, a20, a21, v49);
  swift_retain();
  uint64_t v29 = (void *)sub_191CF2C58();
  if (a14) {
    uint64_t v30 = a15;
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v31 = type metadata accessor for KeyPathPickerBox();
  unint64_t v32 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE0FB4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v42, v41, a3, a4, &v50, (uint64_t)v51, (uint64_t)v49, 3, v29, a7, a8, a10, a11, a12, a13, a14,
    v30,
    (uint64_t)&type metadata for EmptyConfiguration,
    a16,
    a17,
    a18,
    v31,
    v32,
    a22,
    a23,
    a24,
    WitnessTable);
  swift_release();
  long long v34 = v59;
  *(_OWORD *)(a9 + 128) = v58;
  *(_OWORD *)(a9 + 144) = v34;
  long long v35 = v61;
  *(_OWORD *)(a9 + 160) = v60;
  *(_OWORD *)(a9 + 176) = v35;
  long long v36 = v55;
  *(_OWORD *)(a9 + 64) = v54;
  *(_OWORD *)(a9 + 80) = v36;
  long long v37 = v57;
  *(_OWORD *)(a9 + 96) = v56;
  *(_OWORD *)(a9 + 112) = v37;
  long long v38 = v51[1];
  *(_OWORD *)a9 = v51[0];
  *(_OWORD *)(a9 + 16) = v38;
  double result = *(double *)&v52;
  long long v40 = v53;
  *(_OWORD *)(a9 + 32) = v52;
  *(_OWORD *)(a9 + 48) = v40;
  *(unsigned char *)(a9 + 192) = 1;
  return result;
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  char v20 = *a5;
  uint64_t v21 = sub_191CF2DB8();
  uint64_t v29 = v22;
  uint64_t v30 = v21;
  v39[0] = v20;
  sub_191C4D464(a6, a16, a17, v38);
  swift_retain();
  uint64_t v23 = (void *)sub_191CF2C58();
  if (a12) {
    uint64_t v24 = a13;
  }
  else {
    uint64_t v24 = 0;
  }
  uint64_t v25 = type metadata accessor for KeyPathPickerBox();
  unint64_t v26 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE19F0(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v30, v29, a3, a4, v39, a9, (uint64_t)v38, 3, v23, a7, a8, a10, a11, a12, v24, (uint64_t)&type metadata for EmptyConfiguration,
    a14,
    a15,
    v25,
    v26,
    a18,
    a19,
    WitnessTable);
  return swift_release();
}

uint64_t sub_191C4D464@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = (uint64_t *)(v8 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v11 = v10[1];
  uint64_t v12 = (void *)(*MEMORY[0x1E4F18820] + v11);
  uint64_t v13 = v12[1];
  uint64_t v14 = *(void *)(*MEMORY[0x1E4F187B8] + v13 + 8);
  v9[2] = v14;
  uint64_t v21 = *v10;
  uint64_t v22 = v14;
  v9[3] = *v10;
  uint64_t v20 = v12[2];
  v9[4] = v20;
  v9[5] = v13;
  v9[6] = v11;
  v9[7] = a2;
  v9[8] = a3;
  uint64_t v15 = v12[5];
  v9[9] = v15;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a1;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v22;
  v18[3] = v21;
  v18[4] = v20;
  v18[5] = v13;
  v18[6] = v11;
  v18[7] = a2;
  v18[8] = a3;
  v18[9] = v15;
  *a4 = &unk_1E92E4948;
  a4[1] = v9;
  a4[2] = &unk_1E92E4958;
  a4[3] = v16;
  a4[4] = &unk_1E92E4968;
  a4[5] = v17;
  a4[6] = &unk_1E92E4978;
  a4[7] = v18;

  return swift_retain();
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  char v24 = *a5;
  uint64_t v25 = sub_191CF2DB8();
  uint64_t v33 = v26;
  uint64_t v34 = v25;
  v43[0] = v24;
  sub_191C4D464(a6, a19, a20, v42);
  swift_retain();
  uint64_t v27 = (void *)sub_191CF2C58();
  if (a14) {
    uint64_t v28 = a15;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = type metadata accessor for KeyPathPickerBox();
  unint64_t v30 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE0FB4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v34, v33, a3, a4, v43, a9, (uint64_t)v42, 3, v27, a7, a8, a10, a11, a12, a13, a14,
    v28,
    (uint64_t)&type metadata for EmptyConfiguration,
    a16,
    a17,
    a18,
    v29,
    v30,
    a21,
    a22,
    a23,
    WitnessTable);
  return swift_release();
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v22 = *a5;
  uint64_t v23 = sub_191CF2DB8();
  uint64_t v30 = v24;
  uint64_t v31 = v23;
  v40[0] = v22;
  sub_191C4DA58(a6, a16, a17, a20, v39);
  swift_retain();
  uint64_t v25 = (void *)sub_191CF2C58();
  if (!a12) {
    a13 = 0;
  }
  uint64_t v26 = type metadata accessor for KeyPathPickerBox();
  unint64_t v27 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE19F0(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v31, v30, a3, a4, v40, a9, (uint64_t)v39, 3, v25, a7, a8, a10, a11, a12, a13, (uint64_t)&type metadata for EmptyConfiguration,
    a14,
    a15,
    v26,
    v27,
    a18,
    a19,
    WitnessTable);
  return swift_release();
}

uint64_t sub_191C4DA58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = (uint64_t *)(v10 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v13 = v12[1];
  uint64_t v14 = (void *)(*MEMORY[0x1E4F18820] + v13);
  uint64_t v15 = v14[1];
  uint64_t v16 = *(void *)(*MEMORY[0x1E4F187B8] + v15 + 8);
  v11[2] = v16;
  uint64_t v23 = *v12;
  uint64_t v24 = v16;
  v11[3] = *v12;
  uint64_t v22 = v14[2];
  v11[4] = v22;
  v11[5] = v15;
  v11[6] = v13;
  v11[7] = a2;
  v11[8] = a3;
  uint64_t v21 = v14[5];
  v11[9] = v21;
  v11[10] = a4;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a1;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v24;
  v19[3] = v23;
  v19[4] = v22;
  v19[5] = v15;
  v19[6] = v13;
  v19[7] = a2;
  v19[8] = a3;
  v19[9] = v21;
  v19[10] = a4;
  *a5 = &unk_1E92E4908;
  a5[1] = v11;
  a5[2] = &unk_1E92E4918;
  a5[3] = v17;
  a5[4] = &unk_1E92E4928;
  a5[5] = v18;
  a5[6] = &unk_1E92E4938;
  a5[7] = v19;

  return swift_retain();
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v26 = *a5;
  uint64_t v27 = sub_191CF2DB8();
  uint64_t v34 = v28;
  uint64_t v35 = v27;
  v44[0] = v26;
  sub_191C4DA58(a6, a19, a20, a24, v43);
  swift_retain();
  uint64_t v29 = (void *)sub_191CF2C58();
  if (!a14) {
    a15 = 0;
  }
  uint64_t v30 = type metadata accessor for KeyPathPickerBox();
  unint64_t v31 = sub_191BA8D0C();
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  sub_191BE0FB4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v35, v34, a3, a4, v44, a9, (uint64_t)v43, 3, v29, a7, a8, a10, a11, a12, a13, a14,
    a15,
    (uint64_t)&type metadata for EmptyConfiguration,
    a16,
    a17,
    a18,
    v30,
    v31,
    a21,
    a22,
    a23,
    WitnessTable);
  return swift_release();
}

uint64_t sub_191C4DE5C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_191C4DEA8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_191C4DF2C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_191C4DFBC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_191C4E024(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191C4E06C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_191C4E0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = *(void *)(*(void *)(*(void *)(a6 + 16) + 8) + 16);
  v6[4] = swift_getAssociatedTypeWitness();
  v6[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4E178, 0, 0);
}

uint64_t sub_191C4E178()
{
  sub_191CF5DA8();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = sub_191CF5628();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_191C4E238(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  uint64_t v6 = *a2;
  v5[18] = *a2;
  v5[19] = *(void *)(a5 + 8);
  uint64_t v7 = *(void *)(v6 + *MEMORY[0x1E4FBC5F0]);
  v5[20] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[21] = AssociatedTypeWitness;
  v5[22] = *(void *)(AssociatedTypeWitness - 8);
  v5[23] = swift_task_alloc();
  v5[24] = *(void *)(v7 - 8);
  v5[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4E3A8, 0, 0);
}

uint64_t sub_191C4E3A8()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[14];
  uint64_t v5 = (void *)(*MEMORY[0x1E4F18820] + *(void *)(*MEMORY[0x1E4FBC5F0] + v0[18] + 8));
  uint64_t v6 = *(void *)(*MEMORY[0x1E4F187B8] + v5[1] + 8);
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v3 + 8) + 24);
  v0[8] = v1;
  v0[9] = v6;
  v0[10] = v2;
  v0[11] = v7;
  uint64_t v8 = sub_191CF2DE8();
  v0[26] = v8;
  uint64_t v9 = v5[2];
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  uint64_t v11 = v5[5];
  v0[3] = v8;
  v0[4] = v9;
  v0[5] = v2;
  v0[6] = WitnessTable;
  v0[7] = v11;
  sub_191CF2DF8();
  uint64_t v12 = sub_191CF6538();
  sub_191BB93F0(v4, v12, (uint64_t)(v0 + 12));
  v0[27] = v0[12];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[28] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_191C4E610;
  uint64_t v15 = v0[25];
  uint64_t v16 = v0[21];
  return MEMORY[0x1F40D4460](v15, v16, AssociatedConformanceWitness);
}

uint64_t sub_191C4E610()
{
  uint64_t v2 = (void *)*v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[22] + 8))(v2[23], v2[21]);
    return MEMORY[0x1F4188298](sub_191C4E9D0, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[22] + 8))(v2[23], v2[21]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[30] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C4E7EC;
    uint64_t v5 = v2[27];
    uint64_t v6 = v2[13];
    return MEMORY[0x1F40D3BE0](v6, v5, WitnessTable);
  }
}

uint64_t sub_191C4E7EC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[24] + 8))(v2[25], v2[20]);
  if (v0) {
    uint64_t v3 = sub_191C4EA48;
  }
  else {
    uint64_t v3 = sub_191C4E954;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C4E954()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C4E9D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C4EA48()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C4EAC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC5F0];
  v5[24] = *(void *)(a5 + 8);
  uint64_t v9 = (uint64_t *)(v7 + *v8);
  uint64_t v10 = *v9;
  v5[25] = *v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[26] = AssociatedTypeWitness;
  v5[27] = *(void *)(AssociatedTypeWitness - 8);
  v5[28] = swift_task_alloc();
  v5[29] = *(void *)(v10 - 8);
  v5[30] = swift_task_alloc();
  uint64_t v12 = v9[1];
  v5[31] = v12;
  uint64_t v13 = *(void *)(*MEMORY[0x1E4F187B8] + *(void *)(*MEMORY[0x1E4F18820] + v12 + 8) + 8);
  v5[32] = v13;
  v5[33] = *(void *)(v13 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = *(void *)(*(void *)(*(void *)(a3 + 16) + 8) + 16);
  v5[36] = swift_getAssociatedTypeWitness();
  v5[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4ED18, 0, 0);
}

uint64_t sub_191C4ED18()
{
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v6 + 8) + 24);
  *(void *)(v0 + 64) = v3;
  *(void *)(v0 + 72) = v1;
  *(void *)(v0 + 80) = v4;
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = sub_191CF2DE8();
  *(void *)(v0 + 304) = v8;
  uint64_t v9 = *MEMORY[0x1E4F18820] + v2;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)(v0 + 16) = v3;
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v0 + 24) = v8;
  *(void *)(v0 + 32) = v10;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = WitnessTable;
  *(void *)(v0 + 56) = v12;
  sub_191CF2DF8();
  uint64_t v13 = sub_191CF6538();
  sub_191BB93F0(v5, v13, v0 + 136);
  uint64_t v14 = *(void *)(v0 + 152);
  *(void *)(v0 + 312) = *(void *)(v0 + 136);
  sub_191CF5DA8();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = sub_191CF5628();
  *(void *)(v0 + 128) = v15;
  sub_191CF5618();
  swift_getWitnessTable();
  sub_191CF5768();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 144) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4340);
  if (sub_191CF5888())
  {
    swift_bridgeObjectRelease();
    sub_191CF5DA8();
    sub_191CF5628();
    sub_191CF5638();
    swift_bridgeObjectRelease();
    sub_191CF2BE8();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v17;
    void *v17 = v0;
    v17[1] = sub_191C4F110;
    uint64_t v18 = *(void *)(v0 + 240);
    uint64_t v19 = *(void *)(v0 + 208);
    return MEMORY[0x1F40D4460](v18, v19, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v21 = MEMORY[0x192FE4350](v15, *(void *)(v0 + 256));
    swift_bridgeObjectRelease();
    sub_191BD3DB4();
    swift_allocError();
    *(void *)uint64_t v22 = v20;
    *(void *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_191C4F110()
{
  uint64_t v2 = (void *)*v1;
  v2[41] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[27] + 8))(v2[28], v2[26]);
    return MEMORY[0x1F4188298](sub_191C4F518, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[27] + 8))(v2[28], v2[26]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[42] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C4F2F0;
    uint64_t v5 = v2[39];
    uint64_t v6 = v2[34];
    uint64_t v7 = v2[32];
    return MEMORY[0x1F40D3C00](v6, v5, v7, WitnessTable);
  }
}

uint64_t sub_191C4F2F0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[29] + 8))(v2[30], v2[25]);
  if (v0) {
    uint64_t v3 = sub_191C4F5D0;
  }
  else {
    uint64_t v3 = sub_191C4F458;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C4F458()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C4F518()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C4F5D0()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C4F688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B0A348;
  return sub_191BB95F4(a1, a3, v6, a3, (uint64_t)&off_1EE29F178, v10);
}

uint64_t sub_191C4F760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[4] = AssociatedTypeWitness;
  v6[5] = *(void *)(AssociatedTypeWitness - 8);
  v6[6] = swift_task_alloc();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6[7] = AssociatedConformanceWitness;
  v6[8] = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[9] = v9;
  v6[10] = *(void *)(v9 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4F8EC, 0, 0);
}

uint64_t sub_191C4F8EC()
{
  sub_191CF2BE8();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191C4F99C;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[4];
  return MEMORY[0x1F40D3D50](v2, v4, v3);
}

uint64_t sub_191C4F99C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_191C4FBDC;
  }
  else {
    uint64_t v5 = sub_191C4FB0C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191C4FB0C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_191CF2D78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_191C4FBDC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C4FC4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  uint64_t v5 = *a2;
  v4[17] = *a2;
  v4[18] = *(void *)(a4 + 8);
  uint64_t v6 = *(void *)(v5 + *MEMORY[0x1E4FBC5F0]);
  v4[19] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[20] = AssociatedTypeWitness;
  v4[21] = *(void *)(AssociatedTypeWitness - 8);
  v4[22] = swift_task_alloc();
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C4FDB8, 0, 0);
}

uint64_t sub_191C4FDB8()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = (void *)(*MEMORY[0x1E4F18820] + *(void *)(*MEMORY[0x1E4FBC5F0] + v0[17] + 8));
  uint64_t v6 = *(void *)(*MEMORY[0x1E4F187B8] + v5[1] + 8);
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v4 + 8) + 24);
  v0[8] = v1;
  v0[9] = v6;
  v0[10] = v2;
  v0[11] = v7;
  uint64_t v8 = sub_191CF2DE8();
  v0[25] = v8;
  uint64_t v9 = v5[2];
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  uint64_t v11 = v5[5];
  v0[3] = v8;
  v0[4] = v9;
  v0[5] = v2;
  v0[6] = WitnessTable;
  v0[7] = v11;
  sub_191CF2DF8();
  uint64_t v12 = sub_191CF6538();
  sub_191BB93F0(v3, v12, (uint64_t)(v0 + 12));
  v0[26] = v0[12];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[27] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_191C50020;
  uint64_t v15 = v0[24];
  uint64_t v16 = v0[20];
  return MEMORY[0x1F40D4460](v15, v16, AssociatedConformanceWitness);
}

uint64_t sub_191C50020()
{
  uint64_t v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[20]);
    return MEMORY[0x1F4188298](sub_191C542D4, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[20]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[29] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C501FC;
    uint64_t v5 = v2[26];
    uint64_t v6 = v2[13];
    return MEMORY[0x1F40D3BE0](v6, v5, WitnessTable);
  }
}

uint64_t sub_191C501FC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[23] + 8))(v2[24], v2[19]);
  if (v0) {
    uint64_t v3 = sub_191C542D8;
  }
  else {
    uint64_t v3 = sub_191C542D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C50364(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  uint64_t v5 = *a2;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC5F0];
  v4[23] = *(void *)(a4 + 8);
  uint64_t v7 = (uint64_t *)(v5 + *v6);
  uint64_t v8 = *v7;
  v4[24] = *v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[25] = AssociatedTypeWitness;
  v4[26] = *(void *)(AssociatedTypeWitness - 8);
  v4[27] = swift_task_alloc();
  v4[28] = *(void *)(v8 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v10 = v7[1];
  v4[30] = v10;
  uint64_t v11 = *(void *)(*MEMORY[0x1E4F187B8] + *(void *)(*MEMORY[0x1E4F18820] + v10 + 8) + 8);
  v4[31] = v11;
  v4[32] = *(void *)(v11 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v4[34] = v12;
  v4[35] = *(void *)(v12 - 8);
  v4[36] = swift_task_alloc();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4[37] = AssociatedConformanceWitness;
  v4[38] = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  v4[39] = v14;
  v4[40] = *(void *)(v14 - 8);
  v4[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C50680, 0, 0);
}

uint64_t sub_191C50680()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[20];
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v5 + 8) + 24);
  v0[8] = v3;
  v0[9] = v1;
  v0[10] = v4;
  v0[11] = v7;
  uint64_t v8 = sub_191CF2DE8();
  v0[42] = v8;
  uint64_t v9 = *MEMORY[0x1E4F18820] + v2;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v3;
  uint64_t v12 = *(void *)(v9 + 40);
  v0[3] = v8;
  v0[4] = v10;
  v0[5] = v4;
  v0[6] = WitnessTable;
  v0[7] = v12;
  sub_191CF2DF8();
  uint64_t v13 = sub_191CF6538();
  sub_191BB93F0(v6, v13, (uint64_t)(v0 + 17));
  v0[43] = v0[17];
  sub_191CF2BE8();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[44] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_191C508B8;
  uint64_t v15 = v0[41];
  uint64_t v16 = v0[37];
  uint64_t v17 = v0[34];
  return MEMORY[0x1F40D3D50](v15, v17, v16);
}

uint64_t sub_191C508B8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[35] + 8))(v2[36], v2[34]);
  if (v0) {
    uint64_t v3 = sub_191C51100;
  }
  else {
    uint64_t v3 = sub_191C50A20;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C50A20()
{
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 152);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_191CF2D78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 128) = v5;
  sub_191CF5618();
  swift_getWitnessTable();
  sub_191CF5768();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 144) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4340);
  if (sub_191CF5888())
  {
    sub_191CF5638();
    swift_bridgeObjectRelease();
    sub_191CF2BE8();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_191C50CE4;
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v9 = *(void *)(v0 + 200);
    return MEMORY[0x1F40D4460](v8, v9, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v11 = MEMORY[0x192FE4350](v5, *(void *)(v0 + 248));
    swift_bridgeObjectRelease();
    sub_191BD3DB4();
    swift_allocError();
    *(void *)uint64_t v12 = v10;
    *(void *)(v12 + 8) = v11;
    *(unsigned char *)(v12 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_191C50CE4()
{
  uint64_t v2 = (void *)*v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[26] + 8))(v2[27], v2[25]);
    return MEMORY[0x1F4188298](sub_191C511AC, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[26] + 8))(v2[27], v2[25]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[48] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C50EC4;
    uint64_t v5 = v2[43];
    uint64_t v6 = v2[33];
    uint64_t v7 = v2[31];
    return MEMORY[0x1F40D3C00](v6, v5, v7, WitnessTable);
  }
}

uint64_t sub_191C50EC4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[28] + 8))(v2[29], v2[24]);
  if (v0) {
    uint64_t v3 = sub_191C51278;
  }
  else {
    uint64_t v3 = sub_191C5102C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C5102C()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C51100()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C511AC()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C51278()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C51344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = type metadata accessor for KeyPathPickerBox();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_191B17A68;
  return sub_191BB95F4(a1, a3, v12, a3, (uint64_t)&off_1EE29F178, a8);
}

uint64_t sub_191C5141C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a6;
  v6[4] = v11;
  v6[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[5] = AssociatedTypeWitness;
  v6[6] = *(void *)(AssociatedTypeWitness - 8);
  v6[7] = swift_task_alloc();
  v6[8] = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C515B0, 0, 0);
}

uint64_t sub_191C515B0()
{
  sub_191CF2BE8();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191C51660;
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  return MEMORY[0x1F40D4638](v2, v3, v4);
}

uint64_t sub_191C51660()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_191C518A0;
  }
  else {
    uint64_t v5 = sub_191C517D0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191C517D0()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_191CF2D78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_191C518A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C51910(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  uint64_t v5 = *a2;
  v4[17] = *a2;
  v4[18] = *(void *)(a4 + 8);
  uint64_t v6 = *(void *)(v5 + *MEMORY[0x1E4FBC5F0]);
  v4[19] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[20] = AssociatedTypeWitness;
  v4[21] = *(void *)(AssociatedTypeWitness - 8);
  v4[22] = swift_task_alloc();
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C51A7C, 0, 0);
}

uint64_t sub_191C51A7C()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = (void *)(*MEMORY[0x1E4F18820] + *(void *)(*MEMORY[0x1E4FBC5F0] + v0[17] + 8));
  uint64_t v6 = *(void *)(*MEMORY[0x1E4F187B8] + v5[1] + 8);
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v4 + 8) + 24);
  v0[8] = v1;
  v0[9] = v6;
  v0[10] = v2;
  v0[11] = v7;
  uint64_t v8 = sub_191CF2DE8();
  v0[25] = v8;
  uint64_t v9 = v5[2];
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v1;
  uint64_t v11 = v5[5];
  v0[3] = v8;
  v0[4] = v9;
  v0[5] = v2;
  v0[6] = WitnessTable;
  v0[7] = v11;
  sub_191CF2DF8();
  uint64_t v12 = sub_191CF6538();
  sub_191BB93F0(v3, v12, (uint64_t)(v0 + 12));
  v0[26] = v0[12];
  sub_191CF2BE8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[27] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_191C51CE4;
  uint64_t v15 = v0[24];
  uint64_t v16 = v0[20];
  return MEMORY[0x1F40D4460](v15, v16, AssociatedConformanceWitness);
}

uint64_t sub_191C51CE4()
{
  uint64_t v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[20]);
    return MEMORY[0x1F4188298](sub_191C520A4, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[21] + 8))(v2[22], v2[20]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[29] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C51EC0;
    uint64_t v5 = v2[26];
    uint64_t v6 = v2[13];
    return MEMORY[0x1F40D3BE0](v6, v5, WitnessTable);
  }
}

uint64_t sub_191C51EC0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[23] + 8))(v2[24], v2[19]);
  if (v0) {
    uint64_t v3 = sub_191C5211C;
  }
  else {
    uint64_t v3 = sub_191C52028;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C52028()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C520A4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C5211C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C52194(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC5F0];
  v5[24] = *(void *)(a4 + 8);
  uint64_t v8 = (uint64_t *)(v6 + *v7);
  uint64_t v9 = *v8;
  v5[25] = *v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[26] = AssociatedTypeWitness;
  v5[27] = *(void *)(AssociatedTypeWitness - 8);
  v5[28] = swift_task_alloc();
  v5[29] = *(void *)(v9 - 8);
  v5[30] = swift_task_alloc();
  uint64_t v11 = v8[1];
  v5[31] = v11;
  uint64_t v12 = *(void *)(*MEMORY[0x1E4F187B8] + *(void *)(*MEMORY[0x1E4F18820] + v11 + 8) + 8);
  v5[32] = v12;
  v5[33] = *(void *)(v12 - 8);
  v5[34] = swift_task_alloc();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  v5[35] = v13;
  v5[36] = *(void *)(v13 - 8);
  v5[37] = swift_task_alloc();
  v5[38] = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  v5[39] = v14;
  v5[40] = *(void *)(v14 - 8);
  v5[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C524B0, 0, 0);
}

uint64_t sub_191C524B0()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[20];
  type metadata accessor for KeyPathPickerBox();
  uint64_t v7 = *(void *)(*(void *)(v5 + 8) + 24);
  v0[8] = v3;
  v0[9] = v1;
  v0[10] = v4;
  v0[11] = v7;
  uint64_t v8 = sub_191CF2DE8();
  v0[42] = v8;
  uint64_t v9 = *MEMORY[0x1E4F18820] + v2;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  v0[2] = v3;
  uint64_t v12 = *(void *)(v9 + 40);
  v0[3] = v8;
  v0[4] = v10;
  v0[5] = v4;
  v0[6] = WitnessTable;
  v0[7] = v12;
  sub_191CF2DF8();
  uint64_t v13 = sub_191CF6538();
  sub_191BB93F0(v6, v13, (uint64_t)(v0 + 17));
  v0[43] = v0[17];
  sub_191CF2BE8();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[44] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_191C526EC;
  uint64_t v15 = v0[41];
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[23];
  return MEMORY[0x1F40D4638](v15, v16, v17);
}

uint64_t sub_191C526EC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[36] + 8))(v2[37], v2[35]);
  if (v0) {
    uint64_t v3 = sub_191C52F38;
  }
  else {
    uint64_t v3 = sub_191C52854;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C52854()
{
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 152);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_191CF2D78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 128) = v5;
  sub_191CF5618();
  swift_getWitnessTable();
  sub_191CF5768();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 144) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4340);
  if (sub_191CF5888())
  {
    sub_191CF5638();
    swift_bridgeObjectRelease();
    sub_191CF2BE8();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_191C52B1C;
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 208);
    return MEMORY[0x1F40D4460](v8, v9, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v11 = MEMORY[0x192FE4350](v5, *(void *)(v0 + 256));
    swift_bridgeObjectRelease();
    sub_191BD3DB4();
    swift_allocError();
    *(void *)uint64_t v12 = v10;
    *(void *)(v12 + 8) = v11;
    *(unsigned char *)(v12 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_191C52B1C()
{
  uint64_t v2 = (void *)*v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[27] + 8))(v2[28], v2[26]);
    return MEMORY[0x1F4188298](sub_191C52FE4, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[27] + 8))(v2[28], v2[26]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[48] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v3 = v2;
    v3[1] = sub_191C52CFC;
    uint64_t v5 = v2[43];
    uint64_t v6 = v2[34];
    uint64_t v7 = v2[32];
    return MEMORY[0x1F40D3C00](v6, v5, v7, WitnessTable);
  }
}

uint64_t sub_191C52CFC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[29] + 8))(v2[30], v2[25]);
  if (v0) {
    uint64_t v3 = sub_191C530B0;
  }
  else {
    uint64_t v3 = sub_191C52E64;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191C52E64()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C52F38()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C52FE4()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C530B0()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191C5317C()
{
  uint64_t v4 = (uint64_t (*)(void))(*v0 + *(int *)*v0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191B0A1A0;
  return v4();
}

uint64_t sub_191C53244(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_191B17A68;
  return v6(a1);
}

uint64_t sub_191C5331C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 32) + **(int **)(v2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  void *v5 = v3;
  v5[1] = sub_191B17A68;
  return v7(a2);
}

uint64_t sub_191C533F0()
{
  long long v2 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v2;
  long long v3 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_191C53494;
  return sub_191C5317C();
}

uint64_t sub_191C53494(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_191C53594(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_191C542EC;
  return sub_191C53244(a1);
}

uint64_t sub_191C5364C(uint64_t a1, uint64_t a2)
{
  long long v5 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v5;
  long long v6 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 80) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191C53700;
  return sub_191C5331C((uint64_t)v7, a2);
}

uint64_t sub_191C53700()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191C537F4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t sub_191C53824(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_191C5382C()
{
  return swift_deallocObject();
}

uint64_t sub_191C5383C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_191B8B028;
  return sub_191C5141C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_191C53924()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C5395C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_191B17A68;
  return sub_191C51910(a1, v6, v4, v5);
}

uint64_t sub_191C53A1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191B17A68;
  return sub_191C52194(a1, v6, v4, v5, v7);
}

uint64_t sub_191C53AD8()
{
  return swift_deallocObject();
}

uint64_t sub_191C53AE8(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_191B17A68;
  return sub_191C51344(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_191C53BDC()
{
  return swift_deallocObject();
}

uint64_t sub_191C53BEC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_191B8B028;
  return sub_191C4F760(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_191C53CC0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C53CF8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_191B17A68;
  return sub_191C4FC4C(a1, v6, v4, v5);
}

uint64_t sub_191C53DAC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_191B17A68;
  return sub_191C50364(a1, v6, v4, v5);
}

uint64_t sub_191C53E5C()
{
  return swift_deallocObject();
}

uint64_t sub_191C53E6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_191B17A68;
  return sub_191C51344(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_191C53F58()
{
  return swift_deallocObject();
}

uint64_t sub_191C53F68()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_191B8A874;
  return sub_191C4E0BC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_191C54050(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191B17A68;
  return sub_191C4E238(a1, v6, v4, v5, v7);
}

uint64_t sub_191C54110(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_191B17A68;
  return sub_191C4EAC0(a1, v6, v4, v5, v7);
}

uint64_t sub_191C541CC()
{
  return swift_deallocObject();
}

uint64_t sub_191C541DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_191B0A348;
  return sub_191C4F688(a1, v7, v4);
}

uint64_t sub_191C542F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      unsigned int v5 = *(unsigned __int8 *)(a1 + v3 + 32);
      if (v5 >= 0xD || ((0x13BFu >> v5) & 1) == 0) {
        break;
      }
      uint64_t v6 = qword_191D05010[(char)v5];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_191B406F0(0, v4[2] + 1, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_191B406F0((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      ++v3;
      v4[2] = v8 + 1;
      v4[v8 + 4] = v6;
      if (v1 == v3)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
    }
    uint64_t result = sub_191CF6338();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

unint64_t sub_191C54420(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v9 = MEMORY[0x1F4188790](v29);
  uint64_t v28 = (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v27 = (uint64_t)&v24 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = a3;
  unint64_t v25 = v14;
  uint64_t v15 = a3 + v14;
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v17 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  char v26 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v16)(v8, 1, v29) == 1)
    {
      sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1EB44BB00);
    }
    else
    {
      uint64_t v19 = v17;
      uint64_t v20 = v27;
      sub_191BD9EE8((uint64_t)v8, v27);
      sub_191BD9EE8(v20, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_191B406FC(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v18 = sub_191B406FC(v21 > 1, v22 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v22 + 1;
      uint64_t v17 = v19;
      sub_191BD9EE8(v28, v18 + v25 + v22 * v19);
      a1 = v26;
    }
    v15 += v17;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v18;
}

BOOL sub_191C546CC(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_191CF6468();
  sub_191CF6478();
  uint64_t v4 = sub_191CF64C8();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_191C547BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_191CF6468();
    sub_191CF5388();
    uint64_t v6 = sub_191CF64C8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_191CF6348() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_191CF6348() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_191C548F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v22 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    unint64_t v13 = 0;
    v20[0] = v6;
    v20[1] = a2;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v15 = *(void *)(v6 + 72);
      sub_191BD9630(a1 + v14 + v15 * v13, (uint64_t)v11, type metadata accessor for WidgetDescriptor);
      char v16 = sub_191C59F2C((uint64_t)v11);
      if (v2)
      {
        sub_191C5D528((uint64_t)v11, type metadata accessor for WidgetDescriptor);
        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v16)
      {
        uint64_t v17 = a1;
        sub_191BD9EE8((uint64_t)v11, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_191AFB964(0, *(void *)(v12 + 16) + 1, 1);
        }
        uint64_t v12 = v23;
        unint64_t v19 = *(void *)(v23 + 16);
        unint64_t v18 = *(void *)(v23 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_191AFB964(v18 > 1, v19 + 1, 1);
          uint64_t v12 = v23;
        }
        *(void *)(v12 + 16) = v19 + 1;
        uint64_t result = sub_191BD9EE8(v22, v12 + v14 + v19 * v15);
        a1 = v17;
        uint64_t v6 = v20[0];
      }
      else
      {
        uint64_t result = sub_191C5D528((uint64_t)v11, type metadata accessor for WidgetDescriptor);
      }
      if (v21 == ++v13)
      {
        uint64_t v12 = v23;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

int64_t sub_191C54B54(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191C54B98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191CF4378();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_191C5D800(&qword_1E92E49D0, MEMORY[0x1E4F3D4B8]);
    sub_191CF5788();
    sub_191CF57E8();
    sub_191CF57B8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
    uint64_t v9 = (void (**)(char *, uint64_t))(v5 + 8);
    if (v13)
    {
      sub_191CF57E8();
      uint64_t v10 = *v9;
      (*v9)(v8, v4);
    }
    else
    {
      uint64_t v11 = v12;
      uint64_t v10 = *v9;
      (*v9)(v8, v4);
      uint64_t v15 = v11;
    }
    uint64_t result = sub_191CF5788();
    if (v15 >= v14)
    {
      uint64_t v12 = v14;
      uint64_t v13 = v15;
      sub_191CF5858();
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v2, v4);
    }
  }
  __break(1u);
  return result;
}

void static Widget.main()(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191CF3858();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB44CCE0);
  uint64_t v6 = sub_191CF3838();
  os_log_type_t v7 = sub_191CF5948();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_191AF4000, v6, v7, "main [Widget]", v8, 2u);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }

  type metadata accessor for ResolvedWidgetHost();
  sub_191CF5028();
  uint64_t v9 = sub_191C5D238((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  *(void *)&xmmword_1EB44CC98 = v9;
  *((void *)&xmmword_1EB44CC98 + 1) = &off_1EE29AE38;
  qword_1EB44CCA8 = (uint64_t)&off_1EE29ADF0;
  swift_release();
  uint64_t v10 = sub_191CF3838();
  os_log_type_t v11 = sub_191CF5948();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    long long v17 = xmmword_1EB44CC98;
    uint64_t v18 = qword_1EB44CCA8;
    uint64_t v19 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BD10);
    uint64_t v14 = sub_191CF5BB8();
    *(void *)&long long v17 = sub_191C5C36C(v14, v15, &v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v10, v11, "WidgetHost - %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v13, -1, -1);
    MEMORY[0x192FE5F00](v12, -1, -1);
  }

  sub_191B016E0(0, &qword_1EB44C378);
  id v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_191CF5908();
}

uint64_t static ControlWidget.main()(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4608();
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_191CF3858();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB44CCE0);
  uint64_t v10 = sub_191CF3838();
  os_log_type_t v11 = sub_191CF5948();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_191AF4000, v10, v11, "main [Control]", v12, 2u);
    MEMORY[0x192FE5F00](v12, -1, -1);
  }

  sub_191CF3A58();
  MEMORY[0x192FE3380](v5, a1, a2);
  swift_getWitnessTable();
  type metadata accessor for ResolvedWidgetHost();
  *(void *)&xmmword_1EB44CC98 = sub_191C5D238((uint64_t)v8);
  *((void *)&xmmword_1EB44CC98 + 1) = &off_1EE29AE38;
  qword_1EB44CCA8 = (uint64_t)&off_1EE29ADF0;
  swift_release();
  uint64_t v13 = sub_191CF3838();
  os_log_type_t v14 = sub_191CF5948();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 136315138;
    long long v23 = xmmword_1EB44CC98;
    uint64_t v24 = qword_1EB44CCA8;
    uint64_t v25 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BD10);
    uint64_t v17 = sub_191CF5BB8();
    *(void *)&long long v23 = sub_191C5C36C(v17, v18, &v25);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v13, v14, "WidgetHost - %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v16, -1, -1);
    MEMORY[0x192FE5F00](v15, -1, -1);
  }

  sub_191B016E0(0, &qword_1EB44C378);
  id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_191CF5908();

  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v6);
}

uint64_t sub_191C5548C@<X0>(uint64_t a1@<X8>)
{
  return sub_191C558A4(&qword_1EB449DC8, (void (*)(uint64_t))sub_191C554AC, a1);
}

uint64_t sub_191C554AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v29 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - v8;
  sub_191B5D22C();
  uint64_t result = sub_191CF3958();
  uint64_t v11 = v31;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(void *)(v31 + 16);
  if (v27)
  {
    uint64_t v24 = v4;
    uint64_t v25 = a1;
    unint64_t v13 = 0;
    uint64_t v14 = v27;
    uint64_t v26 = v5;
    while (v13 < *(void *)(v11 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v16 = *(void *)(v5 + 72);
      sub_191BD9630(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_191BD9630((uint64_t)v9, (uint64_t)v3, type metadata accessor for ViewSource);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
          swift_release();
          swift_release();
          uint64_t v18 = sub_191CF33C8();
          (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v3, v18);
        }
        else
        {
          sub_191C5D528((uint64_t)v3, type metadata accessor for ViewSource);
        }
        uint64_t result = sub_191C5D528((uint64_t)v9, type metadata accessor for WidgetDescriptor);
      }
      else
      {
        uint64_t v19 = *((void *)v3 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_191B16F2C(v19);
        swift_release();
        sub_191BD9EE8((uint64_t)v9, v29);
        uint64_t v20 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB964(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v30;
        }
        uint64_t v14 = v27;
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_191AFB964(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v30;
        }
        *(void *)(v20 + 16) = v22 + 1;
        uint64_t result = sub_191BD9EE8(v29, v20 + v15 + v22 * v16);
        uint64_t v5 = v26;
      }
      if (v14 == ++v13)
      {
        uint64_t v12 = v30;
        uint64_t v4 = v24;
        a1 = v25;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 16))
    {
      sub_191BD9630(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, type metadata accessor for WidgetDescriptor);
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v23, 1, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_191C55884@<X0>(uint64_t a1@<X8>)
{
  return sub_191C558A4(&qword_1EB449B28, (void (*)(uint64_t))sub_191C55A74, a1);
}

uint64_t sub_191C558A4@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449DD0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = v3 + *a1;
  swift_beginAccess();
  sub_191B01614(v13, (uint64_t)v12, &qword_1EB449DD0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return sub_191C5D798((uint64_t)v12, a3);
  }
  sub_191B01770((uint64_t)v12, &qword_1EB449DD0);
  a2(v3);
  sub_191B01614(a3, (uint64_t)v10, (uint64_t *)&unk_1EB44BB00);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_191C5D730((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_191C55A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v26 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - v8;
  sub_191B5D22C();
  uint64_t result = sub_191CF3958();
  uint64_t v11 = v30;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(void *)(v30 + 16);
  if (v27)
  {
    uint64_t v24 = v4;
    uint64_t v25 = a1;
    unint64_t v13 = 0;
    while (1)
    {
      if (v13 >= *(void *)(v11 + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v16 = *(void *)(v5 + 72);
      sub_191BD9630(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_191BD9630((uint64_t)v9, (uint64_t)v3, type metadata accessor for ViewSource);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
          swift_release();
          swift_release();
          uint64_t v18 = sub_191CF33C8();
          (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v3, v18);
          sub_191BD9EE8((uint64_t)v9, v26);
          uint64_t v19 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_191AFB964(0, *(void *)(v19 + 16) + 1, 1);
            uint64_t v19 = v29;
          }
          unint64_t v21 = *(void *)(v19 + 16);
          unint64_t v20 = *(void *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_191AFB964(v20 > 1, v21 + 1, 1);
            uint64_t v19 = v29;
          }
          *(void *)(v19 + 16) = v21 + 1;
          uint64_t result = sub_191BD9EE8(v26, v19 + v15 + v21 * v16);
          goto LABEL_5;
        }
        sub_191C5D528((uint64_t)v3, type metadata accessor for ViewSource);
      }
      else
      {
        uint64_t v14 = *((void *)v3 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_191B16F2C(v14);
        swift_release();
      }
      uint64_t result = sub_191C5D528((uint64_t)v9, type metadata accessor for WidgetDescriptor);
LABEL_5:
      if (v27 == ++v13)
      {
        uint64_t v12 = v29;
        uint64_t v4 = v24;
        a1 = v25;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16))
  {
    sub_191BD9630(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, type metadata accessor for WidgetDescriptor);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v22, 1, v4);
  return swift_release();
}

uint64_t sub_191C55E3C@<X0>(uint64_t a1@<X8>)
{
  return sub_191C558A4(&qword_1EB449320, (void (*)(uint64_t))sub_191C55E5C, a1);
}

uint64_t sub_191C55E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v28 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - v9;
  sub_191B5D22C();
  uint64_t result = sub_191CF3958();
  uint64_t v12 = v31;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(v31 + 16);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (v29)
  {
    uint64_t v25 = v5;
    uint64_t v26 = a1;
    unint64_t v14 = 0;
    uint64_t v27 = v2;
    while (1)
    {
      if (v14 >= *(void *)(v12 + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v17 = *(void *)(v6 + 72);
      sub_191BD9630(v12 + v16 + v17 * v14, (uint64_t)v10, type metadata accessor for WidgetDescriptor);
      sub_191BD9630((uint64_t)v10, (uint64_t)v4, type metadata accessor for ViewSource);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          sub_191C5D528((uint64_t)v4, type metadata accessor for ViewSource);
          sub_191BD9EE8((uint64_t)v10, v28);
          uint64_t v20 = v30;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_191AFB964(0, *(void *)(v20 + 16) + 1, 1);
            uint64_t v20 = v30;
          }
          unint64_t v22 = *(void *)(v20 + 16);
          unint64_t v21 = *(void *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            sub_191AFB964(v21 > 1, v22 + 1, 1);
            uint64_t v20 = v30;
          }
          *(void *)(v20 + 16) = v22 + 1;
          uint64_t result = sub_191BD9EE8(v28, v20 + v16 + v22 * v17);
          goto LABEL_5;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        uint64_t v19 = sub_191CF33C8();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v4, v19);
      }
      else
      {
        uint64_t v15 = *((void *)v4 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_191B16F2C(v15);
        swift_release();
      }
      uint64_t result = sub_191C5D528((uint64_t)v10, type metadata accessor for WidgetDescriptor);
LABEL_5:
      if (v29 == ++v14)
      {
        uint64_t v13 = v30;
        uint64_t v5 = v25;
        a1 = v26;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    sub_191BD9630(v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, type metadata accessor for WidgetDescriptor);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v23, 1, v5);
  return swift_release();
}

void sub_191C56228()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v21 - v9;
  id v11 = objc_msgSend(self, sel_mainBundle);
  id v12 = objc_msgSend(v11, sel_bundleIdentifier);

  if (v12)
  {
    uint64_t v13 = sub_191CF5338();
    uint64_t v15 = v14;

    sub_191C5548C((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      swift_bridgeObjectRelease();
      sub_191B01770((uint64_t)v3, (uint64_t *)&unk_1EB44BB00);
    }
    else
    {
      sub_191BD9EE8((uint64_t)v3, (uint64_t)v10);
      uint64_t v17 = *(void **)(v0 + 16);
      unint64_t v16 = *(void *)(v0 + 24);
      sub_191B016E0(0, &qword_1EB449E60);
      sub_191BD9630((uint64_t)v10, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      sub_191B15F88((uint64_t)v17, v16);
      uint64_t v18 = (void *)sub_191C5A35C(v8, v13, v15, v17, v16);
      objc_msgSend(v18, sel_copy);
      sub_191CF5C58();

      swift_unknownObjectRelease();
      sub_191B016E0(0, &qword_1EB44C5B0);
      swift_dynamicCast();
      uint64_t v19 = v21[1];
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_191CF9150;
      *(void *)(v20 + 32) = v19;
      v21[2] = v20;
      sub_191CF5558();
      sub_191C5D528((uint64_t)v10, type metadata accessor for WidgetDescriptor);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_191C5652C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v52 - v6;
  uint64_t v8 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v58 = (uint64_t)&v52 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v52 - v15;
  id v17 = objc_msgSend(self, sel_mainBundle);
  id v18 = objc_msgSend(v17, sel_bundleIdentifier);

  if (!v18) {
    goto LABEL_21;
  }
  uint64_t v56 = sub_191CF5338();
  uint64_t v20 = v19;

  sub_191C56228();
  unint64_t v57 = v21;
  sub_191C55E3C((uint64_t)v7);
  unint64_t v22 = *(unsigned int (**)(void, void, void))(v9 + 48);
  if (v22(v7, 1, v8) == 1)
  {
    sub_191B01770((uint64_t)v7, (uint64_t *)&unk_1EB44BB00);
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v24 = (uint64_t)v7;
    uint64_t v25 = (uint64_t)v16;
    sub_191BD9EE8(v24, (uint64_t)v16);
    long long v55 = v12;
    uint64_t v26 = *(void *)(v1 + 16);
    unint64_t v27 = *(void *)(v1 + 24);
    sub_191B016E0(0, &qword_1EB4498A0);
    long long v54 = v22;
    long long v53 = type metadata accessor for WidgetDescriptor;
    uint64_t v28 = (uint64_t)v16;
    uint64_t v29 = v5;
    uint64_t v30 = v8;
    uint64_t v31 = v20;
    uint64_t v32 = v58;
    sub_191BD9630(v28, v58, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_191B15F88(v26, v27);
    uint64_t v33 = v32;
    uint64_t v20 = v31;
    uint64_t v8 = v30;
    uint64_t v5 = v29;
    unint64_t v34 = v27;
    id v12 = v55;
    uint64_t v35 = (void *)sub_191C5B040(v33, v56, v20, v26, v34);
    objc_msgSend(v35, sel_copy);
    sub_191CF5C58();

    swift_unknownObjectRelease();
    sub_191B016E0(0, &qword_1EB449D18);
    swift_dynamicCast();
    uint64_t v36 = v59;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_191CF9150;
    *(void *)(v37 + 32) = v36;
    unint64_t v22 = v54;
    uint64_t v60 = v37;
    sub_191CF5558();
    unint64_t v23 = v60;
    sub_191C5D528(v25, v53);
  }
  sub_191C55884((uint64_t)v5);
  if (v22(v5, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_191B01770((uint64_t)v5, (uint64_t *)&unk_1EB44BB00);
    unint64_t v38 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_191BD9EE8((uint64_t)v5, (uint64_t)v12);
    uint64_t v39 = *(void *)(v1 + 16);
    unint64_t v40 = *(void *)(v1 + 24);
    sub_191B016E0(0, &qword_1E92E2770);
    uint64_t v41 = v58;
    sub_191BD9630((uint64_t)v12, v58, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_191B15F88(v39, v40);
    uint64_t v42 = (void *)sub_191C5B928(v41, v56, v20, v39, v40);
    objc_msgSend(v42, sel_copy);
    sub_191CF5C58();

    swift_unknownObjectRelease();
    sub_191B016E0(0, &qword_1EB44A4A0);
    swift_dynamicCast();
    uint64_t v43 = v59;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_191CF9150;
    *(void *)(v44 + 32) = v43;
    uint64_t v60 = v44;
    sub_191CF5558();
    unint64_t v38 = v60;
    sub_191C5D528((uint64_t)v12, type metadata accessor for WidgetDescriptor);
  }
  unint64_t v45 = v57;
  if (v57 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v49 == 1) {
      goto LABEL_14;
    }
  }
  else if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    goto LABEL_14;
  }
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v50 == 1) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
  {
LABEL_14:
    Result = (objc_class *)type metadata accessor for DescriptorFetchResult();
    long long v47 = (char *)objc_allocWithZone(Result);
    uint64_t v48 = sub_191BBA5C8(v45);
    swift_bridgeObjectRelease();
    *(void *)&v47[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v48;
    *(void *)&v47[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v38;
    *(void *)&v47[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v23;

    v61.receiver = v47;
    v61.super_class = Result;
    objc_msgSendSuper2(&v61, sel_init);
    return;
  }
LABEL_12:
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v51 == 1) {
      goto LABEL_14;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_191C56B84()
{
  return sub_191C57384((void (*)(uint64_t))sub_191C5548C);
}

uint64_t sub_191C56B9C()
{
  return sub_191C57384((void (*)(uint64_t))sub_191C55884);
}

double sub_191C56BB4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ViewSource(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v25 - v15;
  uint64_t v26 = v2;
  uint64_t v17 = type metadata accessor for ResolvedWidgetHost();
  sub_191C9EF78(a1, v17, (uint64_t)&off_1EE29ADF0, (uint64_t)v16);
  sub_191B01614((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_1EB44BB00);
  uint64_t v18 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v14, 1, v18) == 1)
  {
    sub_191B01770((uint64_t)v16, (uint64_t *)&unk_1EB44BB00);
    unint64_t v16 = v14;
  }
  else
  {
    sub_191BD9630((uint64_t)v14, (uint64_t)v10, type metadata accessor for ViewSource);
    sub_191C5D528((uint64_t)v14, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v10, (uint64_t)v8, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v21 = *((void *)v8 + 4);
      unint64_t v22 = (void (*)(uint64_t))*((void *)v8 + 6);
      sub_191C5D528((uint64_t)v10, type metadata accessor for ViewSource);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v21);
      uint64_t v23 = swift_release();
      v22(v23);
      swift_release();
      sub_191B01770((uint64_t)v16, (uint64_t *)&unk_1EB44BB00);
      return result;
    }
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v20 = sub_191CF33C8();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v8, v20);
    }
    else
    {
      sub_191C5D528((uint64_t)v8, type metadata accessor for ViewSource);
    }
    sub_191C5D528((uint64_t)v10, type metadata accessor for ViewSource);
  }
  sub_191B01770((uint64_t)v16, (uint64_t *)&unk_1EB44BB00);
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_191C56F3C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C55884((uint64_t)v4);
  uint64_t v8 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8))
  {
    sub_191B01770((uint64_t)v4, (uint64_t *)&unk_1EB44BB00);
  }
  else
  {
    sub_191BD9630((uint64_t)v4, (uint64_t)v7, type metadata accessor for ViewSource);
    sub_191B01770((uint64_t)v4, (uint64_t *)&unk_1EB44BB00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48)];
      uint64_t v10 = sub_191CF33C8();
      uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
      long long v12 = *(_OWORD *)v9;
      long long v16 = *((_OWORD *)v9 + 1);
      long long v17 = v12;
      uint64_t result = v11(v7, v10);
      long long v14 = v16;
      *a1 = v17;
      a1[1] = v14;
      return result;
    }
    sub_191C5D528((uint64_t)v7, type metadata accessor for ViewSource);
  }
  sub_191B8A264();
  swift_allocError();
  *uint64_t v15 = 0;
  return swift_willThrow();
}

uint64_t sub_191C57160()
{
  swift_release();
  sub_191B01770(v0 + qword_1EB449DC8, &qword_1EB449DD0);
  sub_191B01770(v0 + qword_1EB449B28, &qword_1EB449DD0);
  return sub_191B01770(v0 + qword_1EB449320, &qword_1EB449DD0);
}

uint64_t sub_191C571C8()
{
  sub_191B1603C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  sub_191B01770(v0 + qword_1EB449DC8, &qword_1EB449DD0);
  sub_191B01770(v0 + qword_1EB449B28, &qword_1EB449DD0);
  sub_191B01770(v0 + qword_1EB449320, &qword_1EB449DD0);
  return v0;
}

uint64_t sub_191C5723C()
{
  sub_191C571C8();

  return swift_deallocClassInstance();
}

void sub_191C57294()
{
}

uint64_t sub_191C572B8()
{
  return sub_191C56B84();
}

void sub_191C572DC()
{
}

double sub_191C57300@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C56BB4(a1, a2);
}

uint64_t sub_191C57324@<X0>(_OWORD *a1@<X8>)
{
  return sub_191C56F3C(a1);
}

uint64_t sub_191C57348()
{
  return sub_191C56B9C();
}

uint64_t sub_191C5736C()
{
  return sub_191C57384((void (*)(uint64_t))sub_191C55E3C);
}

uint64_t sub_191C57384(void (*a1)(uint64_t))
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_191B01770((uint64_t)v4, (uint64_t *)&unk_1EB44BB00);
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_191BD9EE8((uint64_t)v4, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_191CF8410;
    sub_191BD9EE8((uint64_t)v9, v10 + v11);
  }
  return v10;
}

uint64_t sub_191C5751C()
{
  return sub_191C57384((void (*)(uint64_t))sub_191C55E3C);
}

void static WidgetBundle.main()(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191CF3858();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB44CCE0);
  uint64_t v6 = sub_191CF3838();
  os_log_type_t v7 = sub_191CF5948();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_191AF4000, v6, v7, "main [WidgetBundle]", v8, 2u);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }

  type metadata accessor for ResolvedWidgetBundleHost();
  sub_191CF3A28();
  uint64_t v9 = sub_191C5D3B4((uint64_t)v4, a1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  *(void *)&xmmword_1EB44CC98 = v9;
  *((void *)&xmmword_1EB44CC98 + 1) = &off_1EE29AD38;
  qword_1EB44CCA8 = (uint64_t)&off_1EE29ACF0;
  swift_release();
  uint64_t v10 = sub_191CF3838();
  os_log_type_t v11 = sub_191CF5948();
  if (os_log_type_enabled(v10, v11))
  {
    long long v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)long long v12 = 136315138;
    long long v17 = xmmword_1EB44CC98;
    uint64_t v18 = qword_1EB44CCA8;
    uint64_t v19 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BD10);
    uint64_t v14 = sub_191CF5BB8();
    *(void *)&long long v17 = sub_191C5C36C(v14, v15, &v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v10, v11, "WidgetHost - %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v13, -1, -1);
    MEMORY[0x192FE5F00](v12, -1, -1);
  }

  sub_191B016E0(0, &qword_1EB44C378);
  id v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_191CF5908();
}

void sub_191C57880()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_mainBundle);
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = sub_191CF5338();
  uint64_t v6 = v5;

  uint64_t v7 = sub_191C57B24();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v8 = sub_191C5C9C4(v7, v4, v6, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  id v9 = objc_msgSend(v1, sel_mainBundle);
  id v10 = objc_msgSend(v9, sel_bundleIdentifier);

  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = sub_191CF5338();
  uint64_t v13 = v12;

  uint64_t v14 = sub_191C582DC();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_191C5CBFC(v14, v11, v13, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  id v16 = objc_msgSend(v1, sel_mainBundle);
  id v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (v17)
  {
    uint64_t v18 = sub_191CF5338();
    uint64_t v20 = v19;

    uint64_t v21 = sub_191C57F24();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_191C5CE34(v21, v18, v20, v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    Result = (objc_class *)type metadata accessor for DescriptorFetchResult();
    uint64_t v24 = (char *)objc_allocWithZone(Result);
    uint64_t v25 = sub_191BBA5C8(v8);
    swift_bridgeObjectRelease();
    *(void *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v25;
    *(void *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v22;
    *(void *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v15;

    v26.receiver = v24;
    v26.super_class = Result;
    objc_msgSendSuper2(&v26, sel_init);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_191C57B24()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v1 = sub_191C57B84();
    *(void *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191C57B84()
{
  uint64_t v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v0);
  id v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v23 - v8;
  sub_191B5D22C();
  uint64_t result = sub_191CF3C88();
  uint64_t v11 = v29;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(void *)(v29 + 16);
  if (v27)
  {
    unint64_t v12 = 0;
    uint64_t v25 = v4;
    uint64_t v26 = v0;
    uint64_t v24 = v29;
    while (v12 < *(void *)(v11 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = *(void *)(v4 + 72);
      sub_191BD9630(v11 + v13 + v14 * v12, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_191BD9630((uint64_t)v9, (uint64_t)v2, type metadata accessor for ViewSource);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
          swift_release();
          swift_release();
          uint64_t v16 = sub_191CF33C8();
          (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v2, v16);
        }
        else
        {
          sub_191C5D528((uint64_t)v2, type metadata accessor for ViewSource);
        }
        uint64_t result = sub_191C5D528((uint64_t)v9, type metadata accessor for WidgetDescriptor);
      }
      else
      {
        uint64_t v17 = *((void *)v2 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_191B16F2C(v17);
        swift_release();
        sub_191BD9EE8((uint64_t)v9, (uint64_t)v7);
        uint64_t v18 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB964(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = v28;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        unint64_t v19 = *(void *)(v18 + 24);
        uint64_t v11 = v24;
        if (v20 >= v19 >> 1)
        {
          sub_191AFB964(v19 > 1, v20 + 1, 1);
          uint64_t v18 = v28;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t result = sub_191BD9EE8((uint64_t)v7, v18 + v13 + v20 * v14);
        uint64_t v4 = v25;
      }
      if (v27 == ++v12) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC870];
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_191C548F4(v21, (uint64_t)&v29);
    swift_release();
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

uint64_t sub_191C57F24()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v1 = sub_191C57F84();
    *(void *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191C57F84()
{
  uint64_t v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v0);
  id v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v22 = (uint64_t)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v21 - v7;
  sub_191B5D22C();
  uint64_t result = sub_191CF3C88();
  uint64_t v10 = v25;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(v25 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (!v23)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v11;
  }
  unint64_t v12 = 0;
  v21[1] = v0;
  while (v12 < *(void *)(v10 + 16))
  {
    unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v15 = *(void *)(v4 + 72);
    sub_191BD9630(v10 + v14 + v15 * v12, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v8, (uint64_t)v2, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        uint64_t v17 = sub_191CF33C8();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v2, v17);
        sub_191BD9EE8((uint64_t)v8, v22);
        uint64_t v18 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB964(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = v24;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        unint64_t v19 = *(void *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_191AFB964(v19 > 1, v20 + 1, 1);
          uint64_t v18 = v24;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t result = sub_191BD9EE8(v22, v18 + v14 + v20 * v15);
        goto LABEL_5;
      }
      sub_191C5D528((uint64_t)v2, type metadata accessor for ViewSource);
    }
    else
    {
      uint64_t v13 = *((void *)v2 + 4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v13);
      swift_release();
    }
    uint64_t result = sub_191C5D528((uint64_t)v8, type metadata accessor for WidgetDescriptor);
LABEL_5:
    if (v23 == ++v12)
    {
      uint64_t v11 = v24;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191C582DC()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v1 = sub_191C5833C();
    *(void *)(v0 + 56) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191C5833C()
{
  uint64_t v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v0);
  id v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v23 = (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - v7;
  sub_191B5D22C();
  uint64_t result = sub_191CF3C88();
  uint64_t v10 = v26;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(v26 + 16);
  if (!v24)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC870];
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_191C548F4(v20, (uint64_t)&v26);
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  unint64_t v11 = 0;
  uint64_t v22 = v0;
  while (v11 < *(void *)(v10 + 16))
  {
    unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v14 = *(void *)(v4 + 72);
    sub_191BD9630(v10 + v13 + v14 * v11, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v8, (uint64_t)v2, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_191C5D528((uint64_t)v2, type metadata accessor for ViewSource);
        sub_191BD9EE8((uint64_t)v8, v23);
        uint64_t v17 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB964(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v25;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_191AFB964(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v25;
        }
        *(void *)(v17 + 16) = v19 + 1;
        uint64_t result = sub_191BD9EE8(v23, v17 + v13 + v19 * v14);
        goto LABEL_5;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v16 = sub_191CF33C8();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v2, v16);
    }
    else
    {
      uint64_t v12 = *((void *)v2 + 4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v12);
      swift_release();
    }
    uint64_t result = sub_191C5D528((uint64_t)v8, type metadata accessor for WidgetDescriptor);
LABEL_5:
    if (v24 == ++v11) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191C586D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v39 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF3378();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v38 - v11;
  if (qword_1E92E1198 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_191CF3858();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E92F24A8);
  uint64_t v14 = sub_191CF3838();
  os_log_type_t v15 = sub_191CF5918();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = v7;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_191AF4000, v14, v15, "WidgetHost activity search: START", v16, 2u);
    uint64_t v7 = v44;
    MEMORY[0x192FE5F00](v17, -1, -1);
  }

  uint64_t v18 = sub_191C57F24();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  unint64_t v40 = v12;
  v19(v12, a1, v6);
  uint64_t v44 = v6;
  v19(v10, a1, v6);
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20) {
    goto LABEL_11;
  }
  unint64_t v21 = 0;
  uint64_t v22 = v18 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
  uint64_t v23 = *(void *)(v39 + 72);
  while (1)
  {
    sub_191BD9630(v22, (uint64_t)v5, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_191C58B00((uint64_t)v5, (uint64_t)v10, &v41);
    sub_191C5D528((uint64_t)v5, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRelease();
    uint64_t v24 = v41;
    uint64_t result = sub_191C5D588(v41);
    if (v24) {
      break;
    }
    ++v21;
    v22 += v23;
    if (v20 == v21) {
      goto LABEL_11;
    }
  }
  if (v20 == v21)
  {
LABEL_11:
    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v27 = v44;
    v26(v40, v44);
    swift_bridgeObjectRelease();
    v26(v10, v27);
    sub_191B8A264();
    swift_allocError();
    *uint64_t v28 = 0;
    return swift_willThrow();
  }
  if (v21 >= *(void *)(v18 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_191BD9630(v22, (uint64_t)v5, type metadata accessor for WidgetDescriptor);
    uint64_t v29 = (uint64_t)v40;
    double v30 = sub_191C58B00((uint64_t)v5, (uint64_t)v40, &v41);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, double))(v7 + 8);
    uint64_t v32 = v44;
    v31(v29, v44, v30);
    uint64_t result = sub_191C5D528((uint64_t)v5, type metadata accessor for WidgetDescriptor);
    uint64_t v33 = v41;
    if ((void)v41)
    {
      uint64_t v34 = *((void *)&v41 + 1);
      uint64_t v35 = v42;
      uint64_t v36 = v43;
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v10, v32);
      uint64_t v37 = v38;
      *unint64_t v38 = v33;
      v37[1] = v34;
      v37[2] = v35;
      v37[3] = v36;
      return result;
    }
  }
  __break(1u);
  return result;
}

double sub_191C58B00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_191CF3378();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF33C8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v47 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v47 - v19;
  sub_191BD9630(a1, (uint64_t)v10, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v53 = v15;
    long long v55 = a3;
    unint64_t v21 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48)];
    uint64_t v22 = *(void *)v21;
    long long v54 = *(_OWORD *)(v21 + 8);
    uint64_t v23 = *((void *)v21 + 3);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
    sub_191CF3338();
    char v24 = sub_191CF33A8();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
    v25(v18, v11);
    if (v24)
    {
      v25(v20, v11);
      uint64_t v26 = v55;
      *long long v55 = v22;
      double result = *(double *)&v54;
      *(_OWORD *)(v26 + 1) = v54;
      v26[3] = v23;
      return result;
    }
    uint64_t v51 = v23;
    uint64_t v52 = v25;
    if (qword_1E92E1198 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_191CF3858();
    __swift_project_value_buffer(v28, (uint64_t)qword_1E92F24A8);
    uint64_t v29 = v53;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v53, v20, v11);
    double v30 = v56;
    uint64_t v31 = v57;
    uint64_t v32 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, a2, v58);
    uint64_t v33 = sub_191CF3838();
    os_log_type_t v34 = sub_191CF5918();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = v30;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v60 = v50;
      *(_DWORD *)uint64_t v37 = 136446466;
      int v49 = v35;
      os_log_t v48 = v33;
      uint64_t v38 = sub_191CF3398();
      uint64_t v59 = sub_191C5C36C(v38, v39, &v60);
      v47[1] = &v60;
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      unint64_t v40 = v52;
      v52(v29, v11);
      *(_WORD *)(v37 + 12) = 2082;
      sub_191CF3338();
      uint64_t v41 = sub_191CF3398();
      unint64_t v43 = v42;
      v40(v18, v11);
      uint64_t v59 = sub_191C5C36C(v41, v43, &v60);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
      os_log_t v44 = v48;
      _os_log_impl(&dword_191AF4000, v48, (os_log_type_t)v49, "WidgetHost session search: Candidate Failure - (%{public}s) vs. (%{public}s)", (uint8_t *)v37, 0x16u);
      uint64_t v45 = v50;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v45, -1, -1);
      MEMORY[0x192FE5F00](v37, -1, -1);

      swift_release();
      swift_release();
      v40(v20, v11);
    }
    else
    {

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
      char v46 = v52;
      v52(v29, v11);
      v46(v20, v11);
    }
    a3 = v55;
  }
  else
  {
    sub_191C5D528((uint64_t)v10, type metadata accessor for ViewSource);
  }
  double result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_191C5909C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v34 = a2;
  double v30 = a3;
  uint64_t v6 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92E1198 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_191CF3858();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92F24A8);
  uint64_t v11 = sub_191CF3838();
  os_log_type_t v12 = sub_191CF5918();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_191AF4000, v11, v12, "WidgetHost activity context search: START", v13, 2u);
    MEMORY[0x192FE5F00](v13, -1, -1);
  }

  uint64_t v14 = sub_191C57F24();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v17 = *(void *)(v7 + 72);
    uint64_t v29 = v14;
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_191BD9630(v16, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_191C59418((uint64_t)v9, a1, v34, v33);
      if (v4)
      {
        sub_191C5D528((uint64_t)v9, type metadata accessor for WidgetDescriptor);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      uint64_t v4 = 0;
      sub_191C5D528((uint64_t)v9, type metadata accessor for WidgetDescriptor);
      if (*(void *)&v33[0])
      {
        long long v32 = v33[0];
        long long v31 = v33[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_191B419D0(0, v18[2] + 1, 1, v18);
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        long long v22 = v32;
        if (v21 >= v20 >> 1)
        {
          uint64_t v23 = sub_191B419D0((void *)(v20 > 1), v21 + 1, 1, v18);
          long long v22 = v32;
          uint64_t v18 = v23;
        }
        v18[2] = v21 + 1;
        uint64_t v19 = &v18[4 * v21];
        *((_OWORD *)v19 + 2) = v22;
        *((_OWORD *)v19 + 3) = v31;
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease_n();
    if (!v18[2]) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  if (*(void *)(MEMORY[0x1E4FBC860] + 16))
  {
LABEL_16:
    uint64_t v24 = v18[4];
    uint64_t v25 = v18[7];
    long long v32 = *(_OWORD *)(v18 + 5);
    swift_retain();
    swift_retain();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v30;
    *double v30 = v24;
    *(_OWORD *)(v27 + 1) = v32;
    v27[3] = v25;
    return result;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  sub_191B8A264();
  swift_allocError();
  *uint64_t v28 = 0;
  return swift_willThrow();
}

double sub_191C59418@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v7 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF33C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  int v49 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v41 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  sub_191BD9630(a1, (uint64_t)v9, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    os_log_t v48 = a4;
    uint64_t v19 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48)];
    uint64_t v20 = *(void *)v19;
    long long v47 = *(_OWORD *)(v19 + 8);
    uint64_t v21 = *((void *)v19 + 3);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
    uint64_t v46 = a2;
    sub_191CF33B8();
    char v22 = sub_191CF33A8();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
    v23(v16, v10);
    if (v22)
    {
      v23(v18, v10);
      uint64_t v24 = v48;
      *os_log_t v48 = v20;
      double result = *(double *)&v47;
      *(_OWORD *)(v24 + 1) = v47;
      v24[3] = v21;
    }
    else
    {
      uint64_t v45 = v21;
      if (qword_1E92E1198 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_191CF3858();
      __swift_project_value_buffer(v26, (uint64_t)qword_1E92F24A8);
      uint64_t v27 = v49;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v18, v10);
      uint64_t v28 = sub_191CF3838();
      os_log_type_t v29 = sub_191CF5918();
      int v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v31 = swift_slowAlloc();
        os_log_t v43 = v28;
        uint64_t v32 = v31;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v53 = v44;
        *(_DWORD *)uint64_t v32 = 136446466;
        int v42 = v30;
        uint64_t v33 = sub_191CF3398();
        uint64_t v51 = sub_191C5C36C(v33, v34, &v53);
        uint64_t v41 = &v52;
        sub_191CF5C08();
        swift_bridgeObjectRelease();
        v23(v27, v10);
        *(_WORD *)(v32 + 12) = 2082;
        sub_191CF33B8();
        uint64_t v35 = sub_191CF3398();
        unint64_t v37 = v36;
        v23(v16, v10);
        uint64_t v51 = sub_191C5C36C(v35, v37, &v53);
        sub_191CF5C08();
        swift_bridgeObjectRelease();
        os_log_t v38 = v43;
        _os_log_impl(&dword_191AF4000, v43, (os_log_type_t)v42, "WidgetHost session context search: Candidate Failure - (%{public}s) vs. (%{public}s)", (uint8_t *)v32, 0x16u);
        uint64_t v39 = v44;
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v39, -1, -1);
        MEMORY[0x192FE5F00](v32, -1, -1);

        swift_release();
        swift_release();
      }
      else
      {

        swift_release();
        swift_release();
        v23(v27, v10);
      }
      v23(v18, v10);
      unint64_t v40 = v48;
      double result = 0.0;
      *(_OWORD *)os_log_t v48 = 0u;
      *((_OWORD *)v40 + 1) = 0u;
    }
  }
  else
  {
    sub_191C5D528((uint64_t)v9, type metadata accessor for ViewSource);
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_191C598E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ViewSource(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v28[-v8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v28[-v14];
  uint64_t v16 = sub_191C57B24();
  uint64_t v29 = a1;
  unint64_t v17 = sub_191C54420((void (*)(void))sub_191C5D50C, (uint64_t)v28, v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if (v18)
  {
    sub_191BD9630(v17+ ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80)), (uint64_t)v15, type metadata accessor for WidgetDescriptor);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v15, v21, 1, v19);
  swift_bridgeObjectRelease();
  sub_191B01614((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1EB44BB00);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1)
  {
    sub_191B01770((uint64_t)v15, (uint64_t *)&unk_1EB44BB00);
    uint64_t v15 = v13;
  }
  else
  {
    sub_191BD9630((uint64_t)v13, (uint64_t)v9, type metadata accessor for ViewSource);
    sub_191C5D528((uint64_t)v13, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v9, (uint64_t)v7, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v24 = *((void *)v7 + 4);
      uint64_t v25 = (void (*)(uint64_t))*((void *)v7 + 6);
      sub_191C5D528((uint64_t)v9, type metadata accessor for ViewSource);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v24);
      uint64_t v26 = swift_release();
      v25(v26);
      swift_release();
      sub_191B01770((uint64_t)v15, (uint64_t *)&unk_1EB44BB00);
      return result;
    }
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v23 = sub_191CF33C8();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v23 - 8) + 8))(v7, v23);
    }
    else
    {
      sub_191C5D528((uint64_t)v7, type metadata accessor for ViewSource);
    }
    sub_191C5D528((uint64_t)v9, type metadata accessor for ViewSource);
  }
  sub_191B01770((uint64_t)v15, (uint64_t *)&unk_1EB44BB00);
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_191C59CD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C59D18()
{
  sub_191B1603C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_191C59D70()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(self, sel_mainBundle);
  id v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (v3)
  {
    uint64_t v4 = sub_191CF5338();
    uint64_t v6 = v5;

    uint64_t v7 = sub_191C57B24();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_191C5C9C4(v7, v4, v6, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191C59E54()
{
  return sub_191C57B24();
}

void sub_191C59E78()
{
}

double sub_191C59E9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C598E8(a1, a2);
}

uint64_t sub_191C59EC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191C586D0(a1, a2);
}

uint64_t sub_191C59EE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_191C5909C(a1, a2, a3);
}

uint64_t sub_191C59F08()
{
  return sub_191C57F24();
}

uint64_t sub_191C59F2C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD9630(a1, (uint64_t)v5, type metadata accessor for ViewSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v7 = sub_191CF33C8();
      long long v35 = 0u;
      long long v36 = 0u;
      unint64_t v37 = 0;
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      if (!*((void *)&v36 + 1))
      {
        sub_191B01770((uint64_t)&v35, &qword_1E92E4740);
        char v8 = 1;
        return v8 & 1;
      }
    }
    else
    {
      *((void *)&v36 + 1) = &type metadata for ControlViewSource;
      unint64_t v37 = sub_191C5D5CC();
      uint64_t v14 = (_OWORD *)swift_allocObject();
      *(void *)&long long v35 = v14;
      long long v15 = *((_OWORD *)v5 + 3);
      v14[3] = *((_OWORD *)v5 + 2);
      v14[4] = v15;
      void v14[5] = *((_OWORD *)v5 + 4);
      *(_OWORD *)((char *)v14 + 89) = *(_OWORD *)(v5 + 73);
      long long v16 = *((_OWORD *)v5 + 1);
      v14[1] = *(_OWORD *)v5;
      void v14[2] = v16;
    }
  }
  else
  {
    long long v9 = *(_OWORD *)v5;
    long long v32 = *((_OWORD *)v5 + 1);
    long long v33 = v9;
    uint64_t v10 = *((void *)v5 + 4);
    uint64_t v11 = *((void *)v5 + 5);
    *((void *)&v36 + 1) = &type metadata for TimelineViewSource;
    unint64_t v37 = sub_191C5D684();
    uint64_t v12 = swift_allocObject();
    *(void *)&long long v35 = v12;
    long long v13 = v32;
    *(_OWORD *)(v12 + 16) = v33;
    *(_OWORD *)(v12 + 32) = v13;
    *(void *)(v12 + 48) = v10;
    *(void *)(v12 + 56) = v11;
    *(_OWORD *)(v12 + 64) = *((_OWORD *)v5 + 3);
  }
  sub_191B004A8(&v35, (uint64_t)v38);
  uint64_t v17 = v39;
  uint64_t v18 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  char v8 = sub_191B43980((uint64_t *)&v35, v19, v20);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_191CF3858();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB44CCE0);
    sub_191AFEE28((uint64_t)v38, (uint64_t)&v35);
    char v22 = sub_191CF3838();
    os_log_type_t v23 = sub_191CF5948();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(void *)&long long v33 = v1;
      uint64_t v26 = v25;
      uint64_t v41 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      *(void *)&long long v32 = v24 + 4;
      uint64_t v27 = *((void *)&v36 + 1);
      unint64_t v28 = v37;
      __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
      uint64_t v29 = (*(uint64_t (**)(uint64_t, unint64_t))(v28 + 16))(v27, v28);
      uint64_t v34 = sub_191C5C36C(v29, v30, &v41);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
      _os_log_impl(&dword_191AF4000, v22, v23, "Found duplicate widgets of kind %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v26, -1, -1);
      MEMORY[0x192FE5F00](v24, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v8 & 1;
}

uint64_t sub_191C5A338()
{
  return sub_191C582DC();
}

uint64_t sub_191C5A35C(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5)
{
  unint64_t v91 = a5;
  uint64_t v90 = a4;
  uint64_t v6 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t)v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = (int *)v10;
  uint64_t v93 = a1;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_191C542F0(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = 0;
    uint64_t v17 = v14 + 32;
    do
    {
      v17 += 8;
      v16 |= CHSWidgetFamilyMaskFromWidgetFamily();
      --v15;
    }
    while (v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v93;
  sub_191C92FD8((uint64_t)&v98);
  if (v99)
  {
    sub_191B004A8(&v98, (uint64_t)&v100);
    uint64_t v19 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    uint64_t v20 = v102;
    uint64_t v21 = v103;
    __swift_project_boxed_opaque_existential_1(&v100, v102);
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    char v22 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    uint64_t v23 = v102;
    uint64_t v24 = v103;
    __swift_project_boxed_opaque_existential_1(&v100, v102);
    (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    if (v25)
    {
      uint64_t v26 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v27 = v92;
    id v28 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithExtensionBundleIdentifier_containerBundleIdentifier_kind_supportedFamilies_intentType_, v19, 0, v22, v16, v26);

    sub_191AFEE28((uint64_t)&v100, (uint64_t)v97);
    uint64_t v8 = (uint64_t)v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B78);
    char v29 = swift_dynamicCast();
    id v94 = (id)v8;
    if ((v29 & 1) == 0)
    {
      uint64_t v96 = 0;
      memset(v95, 0, sizeof(v95));
      sub_191B01770((uint64_t)v95, &qword_1E92E22C8);
      goto LABEL_36;
    }
    sub_191B004A8(v95, (uint64_t)&v98);
    unint64_t v30 = __swift_project_boxed_opaque_existential_1(&v98, v99);
    uint64_t v31 = (uint64_t (*)(uint64_t))v30[4];
    if (!v31)
    {
LABEL_35:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v98);
LABEL_36:
      uint64_t v56 = *(void **)((char *)v18 + v27[35]);
      if (v56)
      {
        unint64_t v57 = swift_bridgeObjectRetain();
        uint64_t v58 = sub_191C5BFFC(v57);
        swift_bridgeObjectRelease();
        if (!v58)
        {
LABEL_40:
          objc_msgSend((id)v8, sel_setEnablement_, *(void *)((char *)v18 + v27[10]));
          if (*(void *)((char *)v18 + v27[5] + 8))
          {
            swift_bridgeObjectRetain();
            uint64_t v59 = (void *)sub_191CF5318();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v59 = 0;
          }
          objc_msgSend((id)v8, sel_setDisplayName_, v59);

          if (*(void *)((char *)v18 + v27[6] + 8))
          {
            swift_bridgeObjectRetain();
            uint64_t v60 = (void *)sub_191CF5318();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v60 = 0;
          }
          objc_msgSend((id)v8, sel_setWidgetDescription_, v60);

          objc_msgSend((id)v8, sel_setWidgetVisibility_, *(void *)((char *)v18 + v27[11]));
          if (!objc_msgSend((id)v8, sel_widgetVisibility))
          {
            id v61 = objc_msgSend(self, sel_mainBundle);
            id v62 = objc_msgSend(v61, sel_bundlePath);

            sub_191CF5338();
            LOBYTE(v61) = sub_191CF53E8();
            swift_bridgeObjectRelease();
            objc_msgSend((id)v8, sel_setWidgetVisibility_, v61 & 1);
          }
          uint64_t v63 = *(void *)((char *)v18 + v27[9]);
          uint64_t v64 = (int *)(v63 + 64);
          uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
          uint64_t v66 = -1;
          if (v65 < 64) {
            uint64_t v66 = ~(-1 << v65);
          }
          unint64_t v67 = v66 & *(void *)(v63 + 64);
          int64_t v68 = (unint64_t)(v65 + 63) >> 6;
          swift_bridgeObjectRetain();
          uint64_t v69 = 0;
          uint64_t v18 = qword_191D05010;
          if (!v67) {
            goto LABEL_52;
          }
LABEL_51:
          unint64_t v70 = __clz(__rbit64(v67));
          v67 &= v67 - 1;
          for (unint64_t i = v70 | (v69 << 6); ; unint64_t i = __clz(__rbit64(v73)) + (v69 << 6))
          {
            uint64_t v8 = *(unsigned __int8 *)(*(void *)(v63 + 48) + i);
            uint64_t v75 = *(void *)(*(void *)(v63 + 56) + 8 * i);
            BOOL v76 = sub_191C546CC(0, v75);
            if (sub_191C546CC(1u, v75)) {
              uint64_t v12 = v76 | 2;
            }
            else {
              uint64_t v12 = v76;
            }
            if (sub_191C546CC(2u, v75)) {
              v12 |= 4uLL;
            }
            if (sub_191C546CC(3u, v75)) {
              uint64_t v77 = v12 | 8;
            }
            else {
              uint64_t v77 = v12;
            }
            if (v8 >= 0xD || ((0x13BFu >> v8) & 1) == 0) {
              goto LABEL_93;
            }
            uint64_t v78 = qword_191D05010[(char)v8];
            uint64_t v8 = (uint64_t)v94;
            objc_msgSend(v94, sel_setDisfavoredLocations_on_, v77, v78);
            if (v67) {
              goto LABEL_51;
            }
LABEL_52:
            int64_t v72 = v69 + 1;
            if (__OFADD__(v69, 1))
            {
              __break(1u);
              goto LABEL_90;
            }
            if (v72 >= v68) {
              goto LABEL_78;
            }
            unint64_t v73 = *(void *)&v64[2 * v72];
            ++v69;
            if (!v73)
            {
              uint64_t v69 = v72 + 1;
              if (v72 + 1 >= v68) {
                goto LABEL_78;
              }
              unint64_t v73 = *(void *)&v64[2 * v69];
              if (!v73)
              {
                uint64_t v69 = v72 + 2;
                if (v72 + 2 >= v68) {
                  goto LABEL_78;
                }
                unint64_t v73 = *(void *)&v64[2 * v69];
                if (!v73)
                {
                  int64_t v74 = v72 + 3;
                  if (v74 >= v68)
                  {
LABEL_78:
                    swift_release();
                    uint64_t v64 = v92;
                    uint64_t v69 = (uint64_t)v93;
                    if (*(void *)((char *)v93 + v92[12] + 8))
                    {
                      swift_bridgeObjectRetain();
                      uint64_t v79 = (void *)sub_191CF5318();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      uint64_t v79 = 0;
                    }
                    unint64_t v67 = v91;
                    uint64_t v18 = v90;
                    objc_msgSend((id)v8, sel_setEventMachServiceName_, v79);

                    id v80 = (void *)sub_191CF30A8();
                    objc_msgSend((id)v8, sel_setLocaleToken_, v80);

                    unint64_t v81 = (void *)sub_191CF5318();
                    objc_msgSend((id)v8, sel_setSdkVersion_, v81);

                    objc_msgSend((id)v8, sel_setPreferredBackgroundStyle_, *(unsigned __int8 *)(v69 + v64[13]));
                    objc_msgSend((id)v8, sel_setSupportsVibrantContent_, *(unsigned __int8 *)(v69 + v64[14]));
                    if (*(unsigned char *)(v69 + v64[15]) == 1)
                    {
                      if (qword_1EB449B18 != -1) {
                        goto LABEL_91;
                      }
                      goto LABEL_83;
                    }
LABEL_85:
                    objc_msgSend((id)v8, sel_setEnablesMultipleTapTargets_, *(unsigned __int8 *)(v69 + v64[17]));
                    uint64_t v82 = v102;
                    uint64_t v83 = v103;
                    __swift_project_boxed_opaque_existential_1(&v100, v102);
                    (*(void (**)(uint64_t, uint64_t))(v83 + 40))(v82, v83);
                    uint64_t v85 = v84;
                    swift_bridgeObjectRelease();
                    if (v85) {
                      uint64_t v86 = *(unsigned __int8 *)(v69 + v64[20]);
                    }
                    else {
                      uint64_t v86 = 0;
                    }
                    objc_msgSend((id)v8, sel_setPromptsForUserConfiguration_, v86);
                    objc_msgSend((id)v8, sel_setBackgroundRemovable_, *(unsigned __int8 *)(v69 + v64[19]));
                    objc_msgSend((id)v8, sel_setSupportsInteraction_, *(unsigned __int8 *)(v69 + v64[16]));
                    objc_msgSend((id)v8, sel_setHiddenBySensitiveUI_, *(unsigned __int8 *)(v69 + v64[24]));
                    sub_191B1603C((uint64_t)v18, v67);

                    sub_191C5D528(v69, type metadata accessor for WidgetDescriptor);
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
                    return v8;
                  }
                  unint64_t v73 = *(void *)&v64[2 * v74];
                  if (!v73)
                  {
                    while (1)
                    {
                      uint64_t v69 = v74 + 1;
                      if (__OFADD__(v74, 1)) {
                        break;
                      }
                      if (v69 >= v68) {
                        goto LABEL_78;
                      }
                      unint64_t v73 = *(void *)&v64[2 * v69];
                      ++v74;
                      if (v73) {
                        goto LABEL_65;
                      }
                    }
LABEL_90:
                    __break(1u);
LABEL_91:
                    swift_once();
LABEL_83:
                    if (dyld_program_sdk_at_least()) {
                      objc_msgSend((id)v8, sel_setSupportsAccentedContent_, 1);
                    }
                    goto LABEL_85;
                  }
                  uint64_t v69 = v74;
                }
              }
            }
LABEL_65:
            unint64_t v67 = (v73 - 1) & v73;
          }
        }
        sub_191B016E0(0, &qword_1E92E49C0);
        uint64_t v56 = (void *)sub_191CF5528();
        swift_bridgeObjectRelease();
      }
      objc_msgSend((id)v8, sel_setRequiredFeatureFlags_, v56);

      goto LABEL_40;
    }
    uint64_t v12 = v30[5];
    uint64_t v32 = swift_retain();
    uint64_t v33 = v31(v32);
    sub_191B16F2C((uint64_t)v31);
    if (*(void *)(v33 + 16)) {
      id v34 = *(id *)(v33 + 32);
    }
    else {
      id v34 = 0;
    }
    if ((*MEMORY[0x1E4F58BD8] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    int64_t v35 = sub_191C54B54(*MEMORY[0x1E4F58BD8], v33);
    unint64_t v39 = MEMORY[0x1E4FBC860];
    v97[0] = MEMORY[0x1E4FBC860];
    uint64_t v18 = (void *)((v38 >> 1) - v37);
    if (v38 >> 1 == v37)
    {
LABEL_28:
      swift_unknownObjectRelease();
      if (!(v39 >> 62))
      {
        uint64_t v18 = v93;
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_30:
          id v51 = objc_allocWithZone(MEMORY[0x1E4F58CF8]);
          sub_191B016E0(0, &qword_1E92E2288);
          id v52 = v34;
          uint64_t v53 = (void *)sub_191CF5528();
          swift_bridgeObjectRelease();
          id v54 = objc_msgSend(v51, sel_initWithSchemaIntent_recommendations_, v52, v53);

          objc_msgSend((id)v8, sel_setIntentRecommendationsContainer_, v54);
LABEL_34:

          goto LABEL_35;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_191CF6018();
      swift_bridgeObjectRelease();
      uint64_t v18 = v93;
      if (v55) {
        goto LABEL_30;
      }
      goto LABEL_33;
    }
    id v89 = v34;
    if ((uint64_t)(v38 >> 1) > v37)
    {
      uint64_t v40 = v36;
      uint64_t v41 = v37;
      v88[1] = v35;
      swift_unknownObjectRetain();
      uint64_t v42 = v40 + 24 * v41 + 8;
      do
      {
        os_log_t v43 = *(void **)(v42 - 8);
        id v44 = objc_allocWithZone(MEMORY[0x1E4F58D00]);
        id v45 = v43;
        swift_bridgeObjectRetain();
        id v46 = objc_msgSend(v44, sel_initWithIntent_, v45);
        if (v46)
        {
          long long v47 = v46;
          id v48 = objc_allocWithZone(MEMORY[0x1E4F58CF0]);
          swift_bridgeObjectRetain();
          int v49 = (void *)sub_191CF5318();
          swift_bridgeObjectRelease();
          id v50 = objc_msgSend(v48, sel_initWithIntentReference_localizedDescription_, v47, v49);
          swift_bridgeObjectRelease();

          if (v50)
          {
            MEMORY[0x192FE4280]();
            if (*(void *)((v97[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v97[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_191CF5588();
            }
            sub_191CF55D8();
            sub_191CF5558();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v42 += 24;
        uint64_t v18 = (void *)((char *)v18 - 1);
      }
      while (v18);
      swift_unknownObjectRelease();
      unint64_t v39 = v97[0];
      uint64_t v27 = v92;
      uint64_t v8 = (uint64_t)v94;
      id v34 = v89;
      goto LABEL_28;
    }
    __break(1u);
LABEL_93:
    sub_191CF6338();
    __break(1u);
  }
  sub_191B01770((uint64_t)&v98, &qword_1E92E4740);
  sub_191BD9630((uint64_t)v18, v12, type metadata accessor for WidgetDescriptor);
  unint64_t v100 = 0;
  unint64_t v101 = 0xE000000000000000;
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  unint64_t v100 = 0xD00000000000002ALL;
  unint64_t v101 = 0x8000000191D11170;
  sub_191BD9630(v12, v8, type metadata accessor for ViewSource);
  sub_191CF5368();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t sub_191C5B040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v50 = a5;
  uint64_t v49 = a4;
  v48[0] = a3;
  uint64_t v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB449C70);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = type metadata accessor for ViewSource(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (long long *)((char *)v48 - v17);
  sub_191BD9630(a1, (uint64_t)v48 - v17, type metadata accessor for ViewSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v20 = sub_191CF33C8();
      long long v51 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      memset(v55, 0, 25);
      (*(void (**)(long long *, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
    }
    else
    {
      long long v21 = v18[3];
      long long v53 = v18[2];
      long long v54 = v21;
      v55[0] = v18[4];
      *(_OWORD *)((char *)v55 + 9) = *(long long *)((char *)v18 + 73);
      long long v22 = v18[1];
      long long v51 = *v18;
      long long v52 = v22;
    }
  }
  else
  {
    sub_191C5D528((uint64_t)v18, type metadata accessor for ViewSource);
    long long v51 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    memset(v55, 0, 25);
  }
  if (*((void *)&v51 + 1))
  {
    long long v58 = v53;
    long long v59 = v54;
    v60[0] = v55[0];
    *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)((char *)v55 + 9);
    long long v56 = v51;
    long long v57 = v52;
    sub_191CF5A88();
    sub_191CF34C8();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449C68);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
    uint64_t v24 = (void *)sub_191CF5A78();
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)&v57 + 1);
    uint64_t v26 = v58;
    if (*((void *)&v57 + 1))
    {
      swift_bridgeObjectRetain();
      id v28 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v28 = 0;
    }
    unint64_t v29 = v50;
    uint64_t v30 = v49;
    id v31 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v32 = objc_msgSend(v31, sel_initWithExtensionIdentity_kind_controlType_intentType_, v24, v25, v26, v28, v48[0]);

    uint64_t v33 = *(void *)(a1 + v6[10]);
    id v34 = v32;
    objc_msgSend(v34, sel_setEnablement_, v33);
    if (*(void *)(a1 + v6[5] + 8))
    {
      swift_bridgeObjectRetain();
      int64_t v35 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v35 = 0;
    }
    objc_msgSend(v34, sel_setDisplayName_, v35);

    if (*(void *)(a1 + v6[6] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = 0;
    }
    objc_msgSend(v34, sel_setWidgetDescription_, v36);

    if (*(void *)(a1 + v6[12] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = 0;
    }
    objc_msgSend(v34, sel_setEventMachServiceName_, v37);

    unint64_t v38 = (void *)sub_191CF30A8();
    objc_msgSend(v34, sel_setLocaleToken_, v38);

    unint64_t v39 = (void *)sub_191CF5318();
    objc_msgSend(v34, sel_setSdkVersion_, v39);

    objc_msgSend(v34, sel_setHiddenBySensitiveUI_, *(unsigned __int8 *)(a1 + v6[24]));
    objc_msgSend(v34, sel_setActionMetadata_, *((void *)&v58 + 1));
    if (*(unsigned char *)(a1 + v6[28]) == 1)
    {
      char v40 = *(unsigned char *)(a1 + v6[29]) ^ 1;
    }
    else if (*(unsigned char *)(a1 + v6[26]) == 1)
    {
      char v40 = *(unsigned char *)(a1 + v6[27]);
    }
    else
    {
      char v40 = 1;
    }
    objc_msgSend(v34, sel_setHiddenControl_, v40 & 1);
    objc_msgSend(v34, sel_setDisablesControlStateCaching_, *(unsigned __int8 *)(a1 + v6[30]));
    objc_msgSend(v34, sel_setShowsContextualMenu_, *(unsigned __int8 *)(a1 + v6[31]));
    objc_msgSend(v34, sel_setPreferredControlSize_, *(void *)(a1 + v6[33]));
    if (v27) {
      uint64_t v41 = *(unsigned __int8 *)(a1 + v6[20]);
    }
    else {
      uint64_t v41 = 0;
    }
    objc_msgSend(v34, sel_setPromptsForUserConfiguration_, v41);
    objc_msgSend(v34, sel_setSupportsPush_, *(void *)(a1 + v6[32]) != 0);
    uint64_t v42 = *(void **)(a1 + v6[35]);
    if (v42)
    {
      unint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v44 = sub_191C5BFFC(v43);
      swift_bridgeObjectRelease();
      if (!v44)
      {
LABEL_31:
        id v45 = objc_msgSend(self, sel_mainBundle);
        id v46 = objc_msgSend(v45, sel_bundlePath);

        sub_191CF5338();
        LOBYTE(v45) = sub_191CF53E8();
        swift_bridgeObjectRelease();
        objc_msgSend(v34, sel_setVisibility_, v45 & 1);

        sub_191B1603C(v30, v29);
        sub_191B15E68((uint64_t)&v56);
        sub_191C5D528(a1, type metadata accessor for WidgetDescriptor);
        return (uint64_t)v34;
      }
      sub_191B016E0(0, &qword_1E92E49C0);
      uint64_t v42 = (void *)sub_191CF5528();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v34, sel_setRequiredFeatureFlags_, v42);

    goto LABEL_31;
  }
  sub_191B01770((uint64_t)&v51, &qword_1E92E49C8);
  sub_191BD9630(a1, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
  *(void *)&long long v56 = 0;
  *((void *)&v56 + 1) = 0xE000000000000000;
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  *(void *)&long long v56 = 0xD00000000000002BLL;
  *((void *)&v56 + 1) = 0x8000000191D111F0;
  sub_191BD9630((uint64_t)v8, (uint64_t)v16, type metadata accessor for ViewSource);
  sub_191CF5368();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t sub_191C5B928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v42 = a4;
  unint64_t v43 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB449C70);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E23C8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191CF33C8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v44 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BD9630(a1, (uint64_t)v12, type metadata accessor for ViewSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
      sub_191C5D528((uint64_t)v12, type metadata accessor for ViewSource);
    }
  }
  else
  {
    sub_191C5D528((uint64_t)v12, type metadata accessor for ViewSource);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_191B01770((uint64_t)v15, qword_1E92E23C8);
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v44, v15, v16);
    sub_191C5D800(&qword_1E92E2290, MEMORY[0x1E4F17CC8]);
    uint64_t v20 = (void *)sub_191CF6098();
    uint64_t v21 = sub_191CF30C8();
    unint64_t v23 = v22;

    sub_191CF5A88();
    sub_191CF34C8();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449C68);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    uint64_t v25 = (void *)sub_191CF5A78();
    id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    unint64_t v41 = v23;
    uint64_t v27 = (void *)sub_191CF30A8();
    id v28 = objc_msgSend(v26, sel_initWithExtensionIdentity_activityAttributesType_, v25, v27);

    unint64_t v29 = (int *)type metadata accessor for WidgetDescriptor(0);
    if (*(void *)(a1 + v29[5] + 8))
    {
      id v30 = v28;
      swift_bridgeObjectRetain();
      id v31 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v32 = v28;
      id v31 = 0;
    }
    objc_msgSend(v28, sel_setDisplayName_, v31);

    if (*(void *)(a1 + v29[6] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
    }
    objc_msgSend(v28, sel_setWidgetDescription_, v33);

    uint64_t v34 = v21;
    if (*(void *)(a1 + v29[12] + 8))
    {
      swift_bridgeObjectRetain();
      int64_t v35 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v35 = 0;
    }
    objc_msgSend(v28, sel_setEventMachServiceName_, v35);

    uint64_t v36 = v42;
    unint64_t v37 = v43;
    unint64_t v38 = (void *)sub_191CF30A8();
    objc_msgSend(v28, sel_setLocaleToken_, v38);

    unint64_t v39 = (void *)sub_191CF5318();
    objc_msgSend(v28, sel_setSdkVersion_, v39);

    objc_msgSend(v28, sel_setPreferredBackgroundStyle_, *(unsigned __int8 *)(a1 + v29[13]));
    objc_msgSend(v28, sel_setSupportsVibrantContent_, *(unsigned __int8 *)(a1 + v29[14]));
    sub_191B1603C(v34, v41);

    sub_191B1603C(v36, v37);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v44, v16);
    sub_191C5D528(a1, type metadata accessor for WidgetDescriptor);
    return (uint64_t)v28;
  }
  return result;
}

uint64_t sub_191C5BFFC(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  sub_191CF5EB8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x192FE4B60](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass()) {
          goto LABEL_14;
        }
        sub_191CF5E88();
        sub_191CF5EC8();
        sub_191CF5ED8();
        sub_191CF5E98();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        swift_unknownObjectRetain();
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_14:
          swift_unknownObjectRelease();
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        sub_191CF5E88();
        sub_191CF5EC8();
        sub_191CF5ED8();
        sub_191CF5E98();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    sub_191CF6018();
    swift_bridgeObjectRelease();
    sub_191CF5EB8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_191C5C1E8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_191AFB9DC(0, v2, 0);
  uint64_t result = v8;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    unint64_t v5 = *(void *)(v8 + 16);
    do
    {
      uint64_t v6 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 24);
      if (v5 >= v7 >> 1)
      {
        sub_191AFB9DC(v7 > 1, v5 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v5 + 1;
      *(void *)(result + 8 * v5 + 32) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t type metadata accessor for ResolvedWidgetHost()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191C5C2CC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191C5C2F4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_191C5C36C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_191CF5C08();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_191C5C36C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_191C5C440(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_191B4F964((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_191B4F964((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_191C5C440(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_191CF5C18();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_191C5C5FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_191CF5E78();
  if (!v8)
  {
    sub_191CF5FB8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_191CF6078();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_191C5C5FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_191C5C694(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_191C5C874(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_191C5C874(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_191C5C694(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_191C5C80C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_191CF5D98();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_191CF5FB8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_191CF53D8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_191CF6078();
    __break(1u);
LABEL_14:
    uint64_t result = sub_191CF5FB8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_191C5C80C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C708);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_191C5C874(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C708);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191C5C9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v13)
  {
    v21[0] = v4;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_191CF5EB8();
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = sub_191B016E0(0, &qword_1EB449E60);
    uint64_t v17 = *(void *)(a4 + 16);
    unint64_t v18 = *(void *)(a4 + 24);
    unint64_t v23 = (void *)v17;
    uint64_t v24 = v16;
    uint64_t v22 = *(void *)(v10 + 72);
    v21[1] = MEMORY[0x1E4FBC840] + 8;
    do
    {
      sub_191BD9630(v15, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      uint64_t v19 = v23;
      sub_191B15F88((uint64_t)v23, v18);
      uint64_t v20 = (void *)sub_191C5A35C(v12, a2, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_191CF5C58();

      swift_unknownObjectRelease();
      sub_191B016E0(0, &qword_1EB44C5B0);
      swift_dynamicCast();
      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
      v15 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_191C5CBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v13)
  {
    v21[0] = v4;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_191CF5EB8();
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = sub_191B016E0(0, &qword_1EB4498A0);
    uint64_t v17 = *(void *)(a4 + 16);
    unint64_t v18 = *(void *)(a4 + 24);
    uint64_t v23 = v17;
    uint64_t v24 = v16;
    uint64_t v22 = *(void *)(v10 + 72);
    v21[1] = MEMORY[0x1E4FBC840] + 8;
    do
    {
      sub_191BD9630(v15, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      uint64_t v19 = v23;
      sub_191B15F88(v23, v18);
      uint64_t v20 = (void *)sub_191C5B040((uint64_t)v12, a2, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_191CF5C58();

      swift_unknownObjectRelease();
      sub_191B016E0(0, &qword_1EB449D18);
      swift_dynamicCast();
      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
      v15 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_191C5CE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v13)
  {
    v21[0] = v4;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_191CF5EB8();
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = sub_191B016E0(0, &qword_1E92E2770);
    uint64_t v17 = *(void *)(a4 + 16);
    unint64_t v18 = *(void *)(a4 + 24);
    uint64_t v23 = v17;
    uint64_t v24 = v16;
    uint64_t v22 = *(void *)(v10 + 72);
    v21[1] = MEMORY[0x1E4FBC840] + 8;
    do
    {
      sub_191BD9630(v15, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      uint64_t v19 = v23;
      sub_191B15F88(v23, v18);
      uint64_t v20 = (void *)sub_191C5B928((uint64_t)v12, a2, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_191CF5C58();

      swift_unknownObjectRelease();
      sub_191B016E0(0, &qword_1EB44A4A0);
      swift_dynamicCast();
      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
      v15 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_191C5D06C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v2 + 96);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  int64_t v7 = (char *)&v12 - v6;
  int64_t v8 = &v2[qword_1EB449DC8];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v2[qword_1EB449B28], 1, 1, v9);
  v10(&v2[qword_1EB449320], 1, 1, v9);
  sub_191CF3978();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain();
  *((void *)v2 + 4) = sub_191CF3968();
  swift_release();
  return sub_191C9ECF0();
}

uint64_t sub_191C5D238(uint64_t a1)
{
  return sub_191C5D06C(a1);
}

uint64_t type metadata accessor for ResolvedWidgetBundleHost()
{
  return self;
}

uint64_t sub_191C5D2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  int64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF3CA8();
  v2[6] = 0;
  v2[7] = 0;
  v2[5] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  swift_retain();
  v2[4] = sub_191CF3C98();
  swift_release();
  return sub_191C9ECF0();
}

uint64_t sub_191C5D3B4(uint64_t a1, uint64_t a2)
{
  return sub_191C5D2A0(a1, a2);
}

void sub_191C5D40C()
{
  sub_191C5D4B0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_191C5D4B0()
{
  if (!qword_1EB449DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB44BB00);
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB449DB8);
    }
  }
}

uint64_t sub_191C5D50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C9F624(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_191C5D528(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C5D588(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_191C5D5CC()
{
  unint64_t result = qword_1E92E2478;
  if (!qword_1E92E2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2478);
  }
  return result;
}

uint64_t sub_191C5D620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(v0 + 104)) {
    swift_release();
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }

  return swift_deallocObject();
}

unint64_t sub_191C5D684()
{
  unint64_t result = qword_1EB44ABA8;
  if (!qword_1EB44ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ABA8);
  }
  return result;
}

uint64_t sub_191C5D6D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C5D730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C5D798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C5D800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GaugeTintVibrancyModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for GaugeTintVibrancyModifier(uint64_t a1)
{
  return sub_191B172D4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for GaugeTintVibrancyModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_191B1BB50(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_191B172D4(v5, v6);
  return a1;
}

uint64_t assignWithTake for GaugeTintVibrancyModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_191B172D4(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for GaugeTintVibrancyModifier()
{
  return &type metadata for GaugeTintVibrancyModifier;
}

uint64_t sub_191C5D944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C5D960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A4D8);
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A4B8);
  MEMORY[0x1F4188790](v27);
  int64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF4D68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A4E0);
  uint64_t v24 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)v2;
  char v16 = *(unsigned char *)(v2 + 8);
  sub_191B1BB50(v15, v16);
  sub_191BDD890(v15, v16, &v29);
  sub_191B172D4(v15, v16);
  if (v29 == 2)
  {
    sub_191CF4D98();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F3EB10], v8);
    sub_191CF4DF8();
    unint64_t v17 = sub_191C5DD58();
    sub_191CF4C68();
    swift_release();
    swift_release();
    uint64_t v18 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v7, v14, v12);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v3;
    unint64_t v30 = v17;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v14, v12);
  }
  else
  {
    uint64_t v20 = v25;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v21(v5, v26, v3);
    v21(v7, (uint64_t)v5, v3);
    swift_storeEnumTagMultiPayload();
    unint64_t v22 = sub_191C5DD58();
    uint64_t v29 = v3;
    unint64_t v30 = v22;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  }
}

unint64_t sub_191C5DD58()
{
  unint64_t result = qword_1EB44A4D0;
  if (!qword_1EB44A4D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A4D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A4D0);
  }
  return result;
}

unint64_t sub_191C5DDB8()
{
  unint64_t result = qword_1EB44A4C0;
  if (!qword_1EB44A4C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A4C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A4D8);
    sub_191C5DD58();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A4C0);
  }
  return result;
}

uint64_t ControlTemplateType.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ControlTemplateToggle(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, a1, a2);
  if (swift_dynamicCast())
  {
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_191C5FDB0((uint64_t)v14, a3, type metadata accessor for ControlTemplateToggle);
LABEL_7:
    type metadata accessor for ControlTemplateType();
    swift_storeEnumTagMultiPayload();
    return v18(v17, a2);
  }
  if (swift_dynamicCast())
  {
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_191C5FDB0((uint64_t)v10, a3, type metadata accessor for ControlTemplateButton);
    goto LABEL_7;
  }
  uint64_t v19 = (uint64_t)v22;
  if (swift_dynamicCast())
  {
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_191C5FDB0(v19, a3, type metadata accessor for ControlTemplatePicker);
    goto LABEL_7;
  }
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ControlTemplateType()
{
  uint64_t result = qword_1EB44B228;
  if (!qword_1EB44B228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ControlTemplateType.anyTemplate.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      a1[3] = type metadata accessor for ControlTemplateButton(0);
      uint64_t v8 = sub_191C5FE18((unint64_t *)&qword_1E92E27E0, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
      uint64_t v9 = type metadata accessor for ControlTemplateButton;
    }
    else
    {
      a1[3] = type metadata accessor for ControlTemplatePicker(0);
      uint64_t v8 = sub_191C5FE18(&qword_1E92E4350, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
      uint64_t v9 = type metadata accessor for ControlTemplatePicker;
    }
  }
  else
  {
    a1[3] = type metadata accessor for ControlTemplateToggle(0);
    uint64_t v8 = sub_191C5FE18((unint64_t *)&qword_1E92E19B0, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
    uint64_t v9 = type metadata accessor for ControlTemplateToggle;
  }
  uint64_t v10 = v9;
  a1[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_191C5FDB0((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v10);
}

uint64_t ControlTemplateType.asPlaceholderTemplate()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_191C5FDB0((uint64_t)v15, (uint64_t)v12, type metadata accessor for ControlTemplateButton);
      a1[3] = v10;
      a1[4] = sub_191C5FE18((unint64_t *)&qword_1E92E27E0, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      ControlTemplateButton.asPlaceholder()((uint64_t)boxed_opaque_existential_1);
      uint64_t v18 = type metadata accessor for ControlTemplateButton;
      uint64_t v19 = (uint64_t)v12;
    }
    else
    {
      sub_191C5FDB0((uint64_t)v15, (uint64_t)v6, type metadata accessor for ControlTemplatePicker);
      a1[3] = v4;
      a1[4] = sub_191C5FE18(&qword_1E92E4350, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
      uint64_t v21 = __swift_allocate_boxed_opaque_existential_1(a1);
      ControlTemplatePicker.asPlaceholder()(v21);
      uint64_t v18 = type metadata accessor for ControlTemplatePicker;
      uint64_t v19 = (uint64_t)v6;
    }
  }
  else
  {
    sub_191C5FDB0((uint64_t)v15, (uint64_t)v9, type metadata accessor for ControlTemplateToggle);
    a1[3] = v7;
    a1[4] = sub_191C5FE18((unint64_t *)&qword_1E92E19B0, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
    uint64_t v20 = __swift_allocate_boxed_opaque_existential_1(a1);
    ControlTemplateToggle.asPlaceholder()(v20);
    uint64_t v18 = type metadata accessor for ControlTemplateToggle;
    uint64_t v19 = (uint64_t)v9;
  }
  return sub_191C60720(v19, v18);
}

uint64_t ControlTemplateType.button.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_191C5FDB0((uint64_t)v6, a1, type metadata accessor for ControlTemplateButton);
    uint64_t v7 = type metadata accessor for ControlTemplateButton(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_191C60720((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
    uint64_t v9 = type metadata accessor for ControlTemplateButton(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t ControlTemplateType.toggle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_191C60720((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
    uint64_t v7 = type metadata accessor for ControlTemplateToggle(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    sub_191C5FDB0((uint64_t)v6, a1, type metadata accessor for ControlTemplateToggle);
    uint64_t v9 = type metadata accessor for ControlTemplateToggle(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
}

uint64_t ControlTemplateType.picker.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_191C5FDB0((uint64_t)v6, a1, type metadata accessor for ControlTemplatePicker);
    uint64_t v7 = type metadata accessor for ControlTemplatePicker(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_191C60720((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
    uint64_t v9 = type metadata accessor for ControlTemplatePicker(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_191C5EB60(uint64_t a1)
{
  unint64_t v2 = sub_191C5F4D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C5EB9C(uint64_t a1)
{
  unint64_t v2 = sub_191C5F4D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C5EBD8()
{
  return *(void *)&aToggle_0[8 * *v0];
}

uint64_t sub_191C5EBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C64568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C5EC18(uint64_t a1)
{
  unint64_t v2 = sub_191C5F428();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C5EC54(uint64_t a1)
{
  unint64_t v2 = sub_191C5F428();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C5EC90(uint64_t a1)
{
  unint64_t v2 = sub_191C5F47C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C5ECCC(uint64_t a1)
{
  unint64_t v2 = sub_191C5F47C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C5ED08(uint64_t a1)
{
  unint64_t v2 = sub_191C5F524();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C5ED44(uint64_t a1)
{
  unint64_t v2 = sub_191C5F524();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplateType.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24C0);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v38 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1F4188790](v36);
  unint64_t v37 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24B8);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v31);
  id v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24C8);
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24B0);
  uint64_t v42 = *(void *)(v17 - 8);
  uint64_t v43 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C5F428();
  sub_191CF6528();
  sub_191C606B8(v41, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = v32;
      sub_191C5FDB0((uint64_t)v16, (uint64_t)v32, type metadata accessor for ControlTemplateButton);
      char v45 = 1;
      sub_191C5F4D0();
      uint64_t v21 = v33;
      uint64_t v22 = v43;
      sub_191CF61D8();
      sub_191C5FE18(&qword_1E92E27C8, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
      uint64_t v23 = v35;
      sub_191CF6278();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v23);
      uint64_t v24 = type metadata accessor for ControlTemplateButton;
    }
    else
    {
      uint64_t v13 = v37;
      sub_191C5FDB0((uint64_t)v16, (uint64_t)v37, type metadata accessor for ControlTemplatePicker);
      char v46 = 2;
      sub_191C5F47C();
      uint64_t v26 = v38;
      uint64_t v22 = v43;
      sub_191CF61D8();
      sub_191C5FE18(&qword_1E92E35D0, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
      uint64_t v27 = v40;
      sub_191CF6278();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
      uint64_t v24 = type metadata accessor for ControlTemplatePicker;
    }
  }
  else
  {
    sub_191C5FDB0((uint64_t)v16, (uint64_t)v13, type metadata accessor for ControlTemplateToggle);
    char v44 = 0;
    sub_191C5F524();
    uint64_t v22 = v43;
    sub_191CF61D8();
    sub_191C5FE18(&qword_1E92E19A0, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
    uint64_t v25 = v30;
    sub_191CF6278();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v25);
    uint64_t v24 = type metadata accessor for ControlTemplateToggle;
  }
  sub_191C60720((uint64_t)v13, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v22);
}

unint64_t sub_191C5F428()
{
  unint64_t result = qword_1E92E2B18;
  if (!qword_1E92E2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B18);
  }
  return result;
}

unint64_t sub_191C5F47C()
{
  unint64_t result = qword_1E92E49D8;
  if (!qword_1E92E49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E49D8);
  }
  return result;
}

unint64_t sub_191C5F4D0()
{
  unint64_t result = qword_1E92E2790;
  if (!qword_1E92E2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2790);
  }
  return result;
}

unint64_t sub_191C5F524()
{
  unint64_t result = qword_1E92E1F88;
  if (!qword_1E92E1F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1F88);
  }
  return result;
}

uint64_t ControlTemplateType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2220);
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v64 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2218);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v63 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2228);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v54 = v8;
  MEMORY[0x1F4188790](v7);
  id v61 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2210);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ControlTemplateType();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v49 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_191C5F428();
  uint64_t v25 = v66;
  sub_191CF6508();
  if (v25) {
    goto LABEL_9;
  }
  unint64_t v50 = v18;
  long long v51 = v15;
  uint64_t v66 = v21;
  uint64_t v26 = v61;
  uint64_t v27 = v62;
  uint64_t v28 = v63;
  uint64_t v29 = v64;
  long long v52 = v23;
  uint64_t v30 = sub_191CF61A8();
  uint64_t v31 = v30;
  uint64_t v32 = v27;
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v38 = sub_191CF5E38();
    swift_allocError();
    uint64_t v39 = v11;
    uint64_t v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    *uint64_t v41 = v12;
    sub_191CF60D8();
    sub_191CF5E18();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v27);
LABEL_9:
    uint64_t v36 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  if (*(unsigned char *)(v30 + 32))
  {
    if (*(unsigned char *)(v30 + 32) == 1)
    {
      char v68 = 1;
      sub_191C5F4D0();
      uint64_t v33 = v28;
      sub_191CF60C8();
      uint64_t v66 = (char *)v12;
      type metadata accessor for ControlTemplateButton(0);
      sub_191C5FE18(&qword_1E92E27D8, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
      uint64_t v34 = (uint64_t)v50;
      uint64_t v35 = v56;
      sub_191CF6178();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v32);
      uint64_t v36 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v34;
    }
    else
    {
      char v69 = 2;
      sub_191C5F47C();
      sub_191CF60C8();
      uint64_t v66 = (char *)v31;
      type metadata accessor for ControlTemplatePicker(0);
      sub_191C5FE18(&qword_1E92E35C8, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
      uint64_t v45 = (uint64_t)v51;
      uint64_t v46 = v55;
      sub_191CF6178();
      uint64_t v47 = v60;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v45;
      uint64_t v36 = (uint64_t)v65;
    }
  }
  else
  {
    char v67 = 0;
    sub_191C5F524();
    sub_191CF60C8();
    type metadata accessor for ControlTemplateToggle(0);
    sub_191C5FE18(&qword_1E92E2128, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
    uint64_t v42 = v53;
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v27);
    uint64_t v36 = (uint64_t)v65;
    uint64_t v43 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v43;
  }
  uint64_t v48 = (uint64_t)v52;
  sub_191C5FDB0(v37, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  sub_191C5FDB0(v48, v59, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_191C5FDB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C5FE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C5FE60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateType.init(from:)(a1, a2);
}

uint64_t sub_191C5FE78(void *a1)
{
  return ControlTemplateType.encode(to:)(a1);
}

uint64_t ControlTemplateType.action(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ControlTemplateToggle.Option(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v3, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_191C5FDB0((uint64_t)v17, (uint64_t)v14, type metadata accessor for ControlTemplateToggle);
    if (a1 == 1) {
      uint64_t v23 = *(int *)(v12 + 24);
    }
    else {
      uint64_t v23 = *(int *)(v12 + 28);
    }
    sub_191C606B8((uint64_t)&v14[v23], (uint64_t)v11, type metadata accessor for ControlTemplateToggle.Option);
    sub_191C60720((uint64_t)v14, type metadata accessor for ControlTemplateToggle);
    uint64_t v19 = (void *)*((void *)v11 + 2);
    id v25 = v19;
    uint64_t v21 = type metadata accessor for ControlTemplateToggle.Option;
    uint64_t v22 = (uint64_t)v11;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_191C5FDB0((uint64_t)v17, (uint64_t)v8, type metadata accessor for ControlTemplateButton);
    uint64_t v19 = *(void **)&v8[*(int *)(v6 + 24)];
    id v20 = v19;
    uint64_t v21 = type metadata accessor for ControlTemplateButton;
    uint64_t v22 = (uint64_t)v8;
LABEL_9:
    uint64_t result = sub_191C60720(v22, v21);
    goto LABEL_10;
  }
  uint64_t result = sub_191C60720((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  uint64_t v19 = 0;
LABEL_10:
  *a2 = v19;
  return result;
}

uint64_t ControlTemplateType.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_191CF4868();
  uint64_t v39 = *(void (***)(char *, uint64_t))(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v42, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_191C5FDB0((uint64_t)v21, (uint64_t)v18, type metadata accessor for ControlTemplateToggle);
    ControlTemplateToggle.validateIcon(_:)(v40, v41);
    return sub_191C60720((uint64_t)v18, type metadata accessor for ControlTemplateToggle);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_191C5FDB0((uint64_t)v21, (uint64_t)v15, type metadata accessor for ControlTemplateButton);
    ControlTemplateButton.validateIcon(_:)(v40, v41);
    return sub_191C60720((uint64_t)v15, type metadata accessor for ControlTemplateButton);
  }
  sub_191C5FDB0((uint64_t)v21, (uint64_t)v12, type metadata accessor for ControlTemplatePicker);
  uint64_t v24 = *(void *)v12;
  uint64_t v25 = *(void *)(*(void *)v12 + 16);
  if (!v25) {
    return sub_191C60720((uint64_t)v12, type metadata accessor for ControlTemplatePicker);
  }
  v33[1] = *(void *)v12;
  uint64_t v34 = v12;
  uint64_t v42 = v2;
  uint64_t v26 = (uint64_t)&v9[*(int *)(v38 + 20)];
  uint64_t v27 = v24 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v28 = *(void *)(v7 + 72);
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 6);
  uint64_t v38 = (uint64_t)(v39 + 4);
  ++v39;
  swift_bridgeObjectRetain();
  uint64_t v30 = v35;
  uint64_t v31 = v36;
  uint64_t v37 = v29;
  while (1)
  {
    sub_191C606B8(v27, (uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
    sub_191B98014(v26, (uint64_t)v5);
    sub_191C60720((uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
    if ((*v29)(v5, 1, v31) != 1) {
      break;
    }
    sub_191C60780((uint64_t)v5);
LABEL_8:
    v27 += v28;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = v34;
      return sub_191C60720((uint64_t)v12, type metadata accessor for ControlTemplatePicker);
    }
  }
  (*(void (**)(char *, char *, uint64_t))v38)(v30, v5, v31);
  uint64_t v32 = v42;
  v40(v30);
  uint64_t v42 = v32;
  if (!v32)
  {
    (*v39)(v30, v31);
    uint64_t v29 = v37;
    goto LABEL_8;
  }
  (*v39)(v30, v31);
  swift_bridgeObjectRelease();
  return sub_191C60720((uint64_t)v34, type metadata accessor for ControlTemplatePicker);
}

uint64_t sub_191C606B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C60720(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191C60780(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ControlTemplateType.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C606B8(v1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_191C5FDB0((uint64_t)v13, (uint64_t)v7, type metadata accessor for ControlTemplateButton);
      uint64_t v15 = ControlTemplateButton.debugDescription.getter();
      uint64_t v16 = type metadata accessor for ControlTemplateButton;
      uint64_t v17 = (uint64_t)v7;
    }
    else
    {
      sub_191C5FDB0((uint64_t)v13, (uint64_t)v4, type metadata accessor for ControlTemplatePicker);
      uint64_t v15 = ControlTemplatePicker.debugDescription.getter();
      uint64_t v16 = type metadata accessor for ControlTemplatePicker;
      uint64_t v17 = (uint64_t)v4;
    }
  }
  else
  {
    sub_191C5FDB0((uint64_t)v13, (uint64_t)v10, type metadata accessor for ControlTemplateToggle);
    uint64_t v15 = ControlTemplateToggle.debugDescription.getter();
    uint64_t v16 = type metadata accessor for ControlTemplateToggle;
    uint64_t v17 = (uint64_t)v10;
  }
  sub_191C60720(v17, v16);
  return v15;
}

uint64_t dispatch thunk of ControlTemplate.associatedURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ControlTemplate.privacySensitive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ControlTemplate.disabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlTemplate.validateIcon(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ControlTemplate.asPlaceholder()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlTemplate.rasterizedImagesAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

void *initializeBufferWithCopyOfBuffer for ControlTemplateType(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      a1[4] = a2[4];
      uint64_t v19 = (int *)type metadata accessor for ControlTemplatePicker(0);
      uint64_t v20 = v19[7];
      id v140 = (char *)a2 + v20;
      __dsta = (char *)a1 + v20;
      uint64_t v21 = sub_191CF3078();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23(v140, 1, v21))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(__dsta, v140, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dsta, v140, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dsta, 0, 1, v21);
      }
      *((unsigned char *)a1 + v19[8]) = *((unsigned char *)a2 + v19[8]);
      *((unsigned char *)a1 + v19[9]) = *((unsigned char *)a2 + v19[9]);
      *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
      uint64_t v58 = v19[11];
      uint64_t v59 = (void *)((char *)a1 + v58);
      uint64_t v60 = (void *)((char *)a2 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      *((unsigned char *)a1 + v19[12]) = *((unsigned char *)a2 + v19[12]);
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      uint64_t v9 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
      uint64_t v10 = v9[6];
      __dst = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = sub_191CF4868();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v138 = v14;
      uint64_t v132 = v13;
      uint64_t v136 = v12;
      if (v14(v11, 1, v12))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      uint64_t v39 = v9[7];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
      uint64_t v42 = v9[8];
      uint64_t v43 = (void *)((char *)a1 + v42);
      char v44 = (void *)((char *)a2 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      uint64_t v46 = v9[9];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = (void *)((char *)a2 + v46);
      uint64_t v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      __dstc = (int *)type metadata accessor for ControlTemplateButton(0);
      uint64_t v50 = __dstc[5];
      long long v51 = (void *)((char *)a1 + v50);
      long long v52 = (char *)a2 + v50;
      uint64_t v53 = *(void *)((char *)a2 + v50 + 8);
      *long long v51 = *(void *)((char *)a2 + v50);
      v51[1] = v53;
      uint64_t v54 = *(void *)((char *)a2 + v50 + 24);
      _OWORD v51[2] = *(void *)((char *)a2 + v50 + 16);
      v51[3] = v54;
      uint64_t v55 = v9[6];
      v135 = (char *)v51 + v55;
      uint64_t v56 = &v52[v55];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v138(v56, 1, v136))
      {
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v135, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v135, v56, v136);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v135, 0, 1, v136);
      }
      uint64_t v62 = v9[7];
      uint64_t v63 = (char *)v51 + v62;
      uint64_t v64 = &v52[v62];
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      v63[16] = v64[16];
      uint64_t v65 = v9[8];
      uint64_t v66 = (void *)((char *)v51 + v65);
      char v67 = &v52[v65];
      uint64_t v68 = *((void *)v67 + 1);
      *uint64_t v66 = *(void *)v67;
      v66[1] = v68;
      uint64_t v69 = v9[9];
      unint64_t v70 = (void *)((char *)v51 + v69);
      uint64_t v71 = &v52[v69];
      uint64_t v72 = *((void *)v71 + 1);
      *unint64_t v70 = *(void *)v71;
      v70[1] = v72;
      uint64_t v73 = __dstc[6];
      int64_t v74 = *(void **)((char *)a2 + v73);
      *(void *)((char *)a1 + v73) = v74;
      uint64_t v75 = __dstc[7];
      uint64_t v141 = (char *)a1 + v75;
      BOOL v76 = (char *)a2 + v75;
      uint64_t v77 = sub_191CF3078();
      uint64_t v78 = *(void *)(v77 - 8);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v80 = v74;
      if (v79(v76, 1, v77))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v141, v76, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v141, v76, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v141, 0, 1, v77);
      }
      *((unsigned char *)a1 + __dstc[8]) = *((unsigned char *)a2 + __dstc[8]);
      *((unsigned char *)a1 + __dstc[9]) = *((unsigned char *)a2 + __dstc[9]);
      uint64_t v82 = __dstc[10];
      uint64_t v83 = (void *)((char *)a1 + v82);
      uint64_t v84 = (void *)((char *)a2 + v82);
      uint64_t v85 = v84[1];
      void *v83 = *v84;
      v83[1] = v85;
      *((unsigned char *)a1 + __dstc[11]) = *((unsigned char *)a2 + __dstc[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      uint64_t v26 = a2[3];
      a1[2] = a2[2];
      a1[3] = v26;
      __dstb = (int *)type metadata accessor for ControlTemplateToggle(0);
      uint64_t v27 = __dstb[6];
      uint64_t v28 = (void *)((char *)a1 + v27);
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = *(void *)((char *)a2 + v27 + 8);
      *uint64_t v28 = *(void *)((char *)a2 + v27);
      v28[1] = v30;
      uint64_t v31 = *(void **)((char *)a2 + v27 + 16);
      v28[2] = v31;
      uint64_t v32 = type metadata accessor for ControlTemplateToggle.Option(0);
      uint64_t v33 = *(int *)(v32 + 24);
      uint64_t v131 = (char *)v28 + v33;
      uint64_t v133 = (int *)v32;
      unint64_t v134 = &v29[v33];
      uint64_t v34 = sub_191CF4868();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v37 = v31;
      v139 = v36;
      uint64_t v130 = v35;
      uint64_t v137 = v34;
      if (v36(v134, 1, v34))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v131, v134, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v131, v134, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v131, 0, 1, v34);
      }
      uint64_t v86 = v133[7];
      uint64_t v87 = (char *)v28 + v86;
      uint64_t v88 = &v29[v86];
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      v87[16] = v88[16];
      uint64_t v89 = v133[8];
      uint64_t v90 = (void *)((char *)v28 + v89);
      unint64_t v91 = &v29[v89];
      uint64_t v92 = *((void *)v91 + 1);
      void *v90 = *(void *)v91;
      v90[1] = v92;
      uint64_t v93 = v133[9];
      id v94 = (void *)((char *)v28 + v93);
      uint64_t v95 = &v29[v93];
      uint64_t v96 = *((void *)v95 + 1);
      void *v94 = *(void *)v95;
      v94[1] = v96;
      uint64_t v97 = __dstb[7];
      long long v98 = (void *)((char *)a1 + v97);
      uint64_t v99 = (char *)a2 + v97;
      uint64_t v100 = *(void *)((char *)a2 + v97 + 8);
      *long long v98 = *(void *)((char *)a2 + v97);
      v98[1] = v100;
      unint64_t v101 = *(void **)((char *)a2 + v97 + 16);
      v98[2] = v101;
      uint64_t v102 = v133[6];
      uint64_t v103 = (char *)v98 + v102;
      uint64_t v104 = &v99[v102];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v105 = v101;
      if (v139(v104, 1, v137))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v103, v104, v137);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v103, 0, 1, v137);
      }
      uint64_t v107 = v133[7];
      uint64_t v108 = (char *)v98 + v107;
      uint64_t v109 = &v99[v107];
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      v108[16] = v109[16];
      uint64_t v110 = v133[8];
      id v111 = (void *)((char *)v98 + v110);
      uint64_t v112 = &v99[v110];
      uint64_t v113 = *((void *)v112 + 1);
      *id v111 = *(void *)v112;
      v111[1] = v113;
      uint64_t v114 = v133[9];
      uint64_t v115 = (void *)((char *)v98 + v114);
      uint64_t v116 = &v99[v114];
      uint64_t v117 = *((void *)v116 + 1);
      void *v115 = *(void *)v116;
      v115[1] = v117;
      uint64_t v118 = __dstb[8];
      uint64_t v119 = (char *)a1 + v118;
      uint64_t v120 = (char *)a2 + v118;
      uint64_t v121 = sub_191CF3078();
      uint64_t v122 = *(void *)(v121 - 8);
      uint64_t v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v123(v120, 1, v121))
      {
        uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
      }
      *((unsigned char *)a1 + __dstb[9]) = *((unsigned char *)a2 + __dstb[9]);
      *((unsigned char *)a1 + __dstb[10]) = *((unsigned char *)a2 + __dstb[10]);
      uint64_t v125 = __dstb[11];
      uint64_t v126 = (void *)((char *)a1 + v125);
      v127 = (void *)((char *)a2 + v125);
      uint64_t v128 = v127[1];
      *uint64_t v126 = *v127;
      v126[1] = v128;
      *((unsigned char *)a1 + __dstb[12]) = *((unsigned char *)a2 + __dstb[12]);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ControlTemplateType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(int *)(type metadata accessor for ControlTemplatePicker(0) + 28);
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for ControlTemplateButton.Option(0);
      uint64_t v17 = a1 + *(int *)(v16 + 24);
      uint64_t v18 = sub_191CF4868();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      if (!v20(v17, 1, v18)) {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = (int *)type metadata accessor for ControlTemplateButton(0);
      uint64_t v22 = a1 + v21[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v22 + *(int *)(v16 + 24);
      if (!v20(v23, 1, v18)) {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v24 = a1 + v21[7];
      uint64_t v25 = sub_191CF3078();
      uint64_t v26 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
      goto LABEL_19;
    }
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = (int *)type metadata accessor for ControlTemplateToggle(0);
    uint64_t v4 = a1 + v3[6];
    swift_bridgeObjectRelease();

    uint64_t v5 = type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_191CF4868();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = a1 + v3[7];
    swift_bridgeObjectRelease();

    uint64_t v11 = v10 + *(int *)(v5 + 24);
    if (!v9(v11, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v3[8];
  }
  uint64_t v13 = a1 + v12;
  uint64_t v14 = sub_191CF3078();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
LABEL_19:

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplateType(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    uint64_t v15 = a2[3];
    a1[2] = a2[2];
    a1[3] = v15;
    a1[4] = a2[4];
    uint64_t v16 = (int *)type metadata accessor for ControlTemplatePicker(0);
    uint64_t v17 = v16[7];
    v138 = (char *)a2 + v17;
    __dsta = (char *)a1 + v17;
    uint64_t v18 = sub_191CF3078();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v138, 1, v18))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(__dsta, v138, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dsta, v138, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dsta, 0, 1, v18);
    }
    *((unsigned char *)a1 + v16[8]) = *((unsigned char *)a2 + v16[8]);
    *((unsigned char *)a1 + v16[9]) = *((unsigned char *)a2 + v16[9]);
    *((unsigned char *)a1 + v16[10]) = *((unsigned char *)a2 + v16[10]);
    uint64_t v55 = v16[11];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v16 + 12;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
    uint64_t v8 = v7[6];
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_191CF4868();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v136 = v12;
    uint64_t v130 = v11;
    uint64_t v134 = v10;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v36 = v7[7];
    id v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    *(_OWORD *)id v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    uint64_t v39 = v7[8];
    uint64_t v40 = (void *)((char *)a1 + v39);
    uint64_t v41 = (void *)((char *)a2 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = v7[9];
    char v44 = (void *)((char *)a1 + v43);
    uint64_t v45 = (void *)((char *)a2 + v43);
    uint64_t v46 = v45[1];
    *char v44 = *v45;
    v44[1] = v46;
    __dstc = (int *)type metadata accessor for ControlTemplateButton(0);
    uint64_t v47 = __dstc[5];
    uint64_t v48 = (void *)((char *)a1 + v47);
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = *(void *)((char *)a2 + v47 + 8);
    *uint64_t v48 = *(void *)((char *)a2 + v47);
    v48[1] = v50;
    uint64_t v51 = *(void *)((char *)a2 + v47 + 24);
    void v48[2] = *(void *)((char *)a2 + v47 + 16);
    v48[3] = v51;
    uint64_t v52 = v7[6];
    uint64_t v133 = (char *)v48 + v52;
    uint64_t v53 = &v49[v52];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v136(v53, 1, v134))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(v133, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v133, v53, v134);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v133, 0, 1, v134);
    }
    uint64_t v60 = v7[7];
    uint64_t v61 = (char *)v48 + v60;
    uint64_t v62 = &v49[v60];
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    v61[16] = v62[16];
    uint64_t v63 = v7[8];
    uint64_t v64 = (void *)((char *)v48 + v63);
    uint64_t v65 = &v49[v63];
    uint64_t v66 = *((void *)v65 + 1);
    *uint64_t v64 = *(void *)v65;
    v64[1] = v66;
    uint64_t v67 = v7[9];
    uint64_t v68 = (void *)((char *)v48 + v67);
    uint64_t v69 = &v49[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *uint64_t v68 = *(void *)v69;
    v68[1] = v70;
    uint64_t v71 = __dstc[6];
    uint64_t v72 = *(void **)((char *)a2 + v71);
    *(void *)((char *)a1 + v71) = v72;
    uint64_t v73 = __dstc[7];
    v139 = (char *)a1 + v73;
    int64_t v74 = (char *)a2 + v73;
    uint64_t v75 = sub_191CF3078();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v78 = v72;
    if (v77(v74, 1, v75))
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v139, v74, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v139, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v139, 0, 1, v75);
    }
    *((unsigned char *)a1 + __dstc[8]) = *((unsigned char *)a2 + __dstc[8]);
    *((unsigned char *)a1 + __dstc[9]) = *((unsigned char *)a2 + __dstc[9]);
    uint64_t v80 = __dstc[10];
    uint64_t v81 = (void *)((char *)a1 + v80);
    uint64_t v82 = (void *)((char *)a2 + v80);
    uint64_t v83 = v82[1];
    *uint64_t v81 = *v82;
    v81[1] = v83;
    uint64_t v59 = __dstc + 11;
  }
  else
  {
    uint64_t v22 = a2[1];
    *a1 = *a2;
    a1[1] = v22;
    uint64_t v23 = a2[3];
    a1[2] = a2[2];
    a1[3] = v23;
    __dstb = (int *)type metadata accessor for ControlTemplateToggle(0);
    uint64_t v24 = __dstb[6];
    uint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)((char *)a2 + v24 + 8);
    *uint64_t v25 = *(void *)((char *)a2 + v24);
    v25[1] = v27;
    uint64_t v28 = *(void **)((char *)a2 + v24 + 16);
    v25[2] = v28;
    uint64_t v29 = type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v129 = (char *)v25 + v30;
    uint64_t v131 = (int *)v29;
    uint64_t v132 = &v26[v30];
    uint64_t v31 = sub_191CF4868();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = v28;
    uint64_t v137 = v33;
    uint64_t v128 = v32;
    uint64_t v135 = v31;
    if (v33(v132, 1, v31))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(v129, v132, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v129, v132, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v129, 0, 1, v31);
    }
    uint64_t v84 = v131[7];
    uint64_t v85 = (char *)v25 + v84;
    uint64_t v86 = &v26[v84];
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    v85[16] = v86[16];
    uint64_t v87 = v131[8];
    uint64_t v88 = (void *)((char *)v25 + v87);
    uint64_t v89 = &v26[v87];
    uint64_t v90 = *((void *)v89 + 1);
    void *v88 = *(void *)v89;
    v88[1] = v90;
    uint64_t v91 = v131[9];
    uint64_t v92 = (void *)((char *)v25 + v91);
    uint64_t v93 = &v26[v91];
    uint64_t v94 = *((void *)v93 + 1);
    *uint64_t v92 = *(void *)v93;
    v92[1] = v94;
    uint64_t v95 = __dstb[7];
    uint64_t v96 = (void *)((char *)a1 + v95);
    uint64_t v97 = (char *)a2 + v95;
    uint64_t v98 = *(void *)((char *)a2 + v95 + 8);
    void *v96 = *(void *)((char *)a2 + v95);
    v96[1] = v98;
    uint64_t v99 = *(void **)((char *)a2 + v95 + 16);
    v96[2] = v99;
    uint64_t v100 = v131[6];
    unint64_t v101 = (char *)v96 + v100;
    uint64_t v102 = &v97[v100];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v103 = v99;
    if (v137(v102, 1, v135))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v101, v102, v135);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v101, 0, 1, v135);
    }
    uint64_t v105 = v131[7];
    uint64_t v106 = (char *)v96 + v105;
    uint64_t v107 = &v97[v105];
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    v106[16] = v107[16];
    uint64_t v108 = v131[8];
    uint64_t v109 = (void *)((char *)v96 + v108);
    uint64_t v110 = &v97[v108];
    uint64_t v111 = *((void *)v110 + 1);
    *uint64_t v109 = *(void *)v110;
    v109[1] = v111;
    uint64_t v112 = v131[9];
    uint64_t v113 = (void *)((char *)v96 + v112);
    uint64_t v114 = &v97[v112];
    uint64_t v115 = *((void *)v114 + 1);
    *uint64_t v113 = *(void *)v114;
    v113[1] = v115;
    uint64_t v116 = __dstb[8];
    uint64_t v117 = (char *)a1 + v116;
    uint64_t v118 = (char *)a2 + v116;
    uint64_t v119 = sub_191CF3078();
    uint64_t v120 = *(void *)(v119 - 8);
    uint64_t v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v121(v118, 1, v119))
    {
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
    }
    *((unsigned char *)a1 + __dstb[9]) = *((unsigned char *)a2 + __dstb[9]);
    *((unsigned char *)a1 + __dstb[10]) = *((unsigned char *)a2 + __dstb[10]);
    uint64_t v123 = __dstb[11];
    uint64_t v124 = (void *)((char *)a1 + v123);
    uint64_t v125 = (void *)((char *)a2 + v123);
    uint64_t v126 = v125[1];
    void *v124 = *v125;
    v124[1] = v126;
    uint64_t v59 = __dstb + 12;
  }
  *((unsigned char *)a1 + *v59) = *((unsigned char *)a2 + *v59);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ControlTemplateType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_191C60720((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v12 = (int *)type metadata accessor for ControlTemplatePicker(0);
      uint64_t v13 = v12[7];
      uint64_t v119 = (char *)a2 + v13;
      __dsta = (char *)a1 + v13;
      uint64_t v14 = sub_191CF3078();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v119, 1, v14))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(__dsta, v119, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dsta, v119, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dsta, 0, 1, v14);
      }
      *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
      *((unsigned char *)a1 + v12[9]) = *((unsigned char *)a2 + v12[9]);
      *((unsigned char *)a1 + v12[10]) = *((unsigned char *)a2 + v12[10]);
      uint64_t v46 = v12[11];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = (void *)((char *)a2 + v46);
      *uint64_t v47 = *v48;
      v47[1] = v48[1];
      uint64_t v49 = v12 + 12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v5 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
      uint64_t v6 = v5[6];
      __dst = (char *)a1 + v6;
      uint64_t v7 = (char *)a2 + v6;
      uint64_t v8 = sub_191CF4868();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v117 = v10;
      uint64_t v114 = v9;
      uint64_t v115 = v8;
      if (v10(v7, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(__dst, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
      }
      uint64_t v29 = v5[7];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      long long v32 = *(_OWORD *)v31;
      v30[16] = v31[16];
      *(_OWORD *)uint64_t v30 = v32;
      uint64_t v33 = v5[8];
      id v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      *id v34 = *v35;
      v34[1] = v35[1];
      uint64_t v36 = v5[9];
      id v37 = (void *)((char *)a1 + v36);
      uint64_t v38 = (void *)((char *)a2 + v36);
      *id v37 = *v38;
      v37[1] = v38[1];
      uint64_t v39 = type metadata accessor for ControlTemplateButton(0);
      uint64_t v40 = *(int *)(v39 + 20);
      uint64_t v41 = (void *)((char *)a1 + v40);
      uint64_t v42 = (char *)a2 + v40;
      *uint64_t v41 = *(void *)((char *)a2 + v40);
      v41[1] = *(void *)((char *)a2 + v40 + 8);
      v41[2] = *(void *)((char *)a2 + v40 + 16);
      v41[3] = *(void *)((char *)a2 + v40 + 24);
      uint64_t v43 = v5[6];
      uint64_t v121 = (char *)v41 + v43;
      __dstc = (int *)v39;
      char v44 = &v42[v43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v117(v44, 1, v115))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v121, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v121, v44, v115);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v121, 0, 1, v115);
      }
      uint64_t v69 = v5[7];
      uint64_t v70 = (char *)v41 + v69;
      uint64_t v71 = &v42[v69];
      long long v72 = *(_OWORD *)v71;
      v70[16] = v71[16];
      *(_OWORD *)uint64_t v70 = v72;
      uint64_t v73 = v5[8];
      int64_t v74 = (void *)((char *)v41 + v73);
      uint64_t v75 = &v42[v73];
      *int64_t v74 = *(void *)v75;
      v74[1] = *((void *)v75 + 1);
      uint64_t v76 = v5[9];
      uint64_t v77 = (void *)((char *)v41 + v76);
      id v78 = &v42[v76];
      void *v77 = *(void *)v78;
      v77[1] = *((void *)v78 + 1);
      uint64_t v79 = __dstc[6];
      uint64_t v80 = *(void **)((char *)a2 + v79);
      *(void *)((char *)a1 + v79) = v80;
      uint64_t v81 = __dstc[7];
      uint64_t v122 = (char *)a1 + v81;
      uint64_t v82 = (char *)a2 + v81;
      uint64_t v83 = sub_191CF3078();
      uint64_t v84 = *(void *)(v83 - 8);
      uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v86 = v80;
      if (v85(v82, 1, v83))
      {
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v122, v82, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v122, v82, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v122, 0, 1, v83);
      }
      *((unsigned char *)a1 + __dstc[8]) = *((unsigned char *)a2 + __dstc[8]);
      *((unsigned char *)a1 + __dstc[9]) = *((unsigned char *)a2 + __dstc[9]);
      uint64_t v105 = __dstc[10];
      uint64_t v106 = (void *)((char *)a1 + v105);
      uint64_t v107 = (void *)((char *)a2 + v105);
      *uint64_t v106 = *v107;
      v106[1] = v107[1];
      uint64_t v49 = __dstc + 11;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      __dstb = (int *)type metadata accessor for ControlTemplateToggle(0);
      uint64_t v18 = __dstb[6];
      uint64_t v19 = (void *)((char *)a1 + v18);
      uint64_t v20 = (char *)a2 + v18;
      void *v19 = *(void *)((char *)a2 + v18);
      v19[1] = *(void *)((char *)a2 + v18 + 8);
      uint64_t v21 = *(void **)((char *)a2 + v18 + 16);
      v19[2] = v21;
      uint64_t v22 = type metadata accessor for ControlTemplateToggle.Option(0);
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v118 = (int *)v22;
      uint64_t v120 = (char *)v19 + v23;
      uint64_t v113 = &v20[v23];
      uint64_t v24 = sub_191CF4868();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v27 = v21;
      uint64_t v116 = v26;
      uint64_t v112 = v25;
      if (v26(v113, 1, v24))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v120, v113, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v120, v113, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v120, 0, 1, v24);
      }
      uint64_t v50 = v118[7];
      uint64_t v51 = (char *)v19 + v50;
      uint64_t v52 = &v20[v50];
      long long v53 = *(_OWORD *)v52;
      v51[16] = v52[16];
      *(_OWORD *)uint64_t v51 = v53;
      uint64_t v54 = v118[8];
      uint64_t v55 = (void *)((char *)v19 + v54);
      uint64_t v56 = &v20[v54];
      *uint64_t v55 = *(void *)v56;
      v55[1] = *((void *)v56 + 1);
      uint64_t v57 = v118[9];
      uint64_t v58 = (void *)((char *)v19 + v57);
      uint64_t v59 = &v20[v57];
      *uint64_t v58 = *(void *)v59;
      v58[1] = *((void *)v59 + 1);
      uint64_t v60 = __dstb[7];
      uint64_t v61 = (void *)((char *)a1 + v60);
      uint64_t v62 = (char *)a2 + v60;
      *uint64_t v61 = *(void *)((char *)a2 + v60);
      v61[1] = *(void *)((char *)a2 + v60 + 8);
      uint64_t v63 = *(void **)((char *)a2 + v60 + 16);
      v61[2] = v63;
      uint64_t v64 = v118[6];
      uint64_t v65 = (char *)v61 + v64;
      uint64_t v66 = &v62[v64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v67 = v63;
      if (v116(v66, 1, v24))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v65, v66, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v65, 0, 1, v24);
      }
      uint64_t v88 = v118[7];
      uint64_t v89 = (char *)v61 + v88;
      uint64_t v90 = &v62[v88];
      long long v91 = *(_OWORD *)v90;
      v89[16] = v90[16];
      *(_OWORD *)uint64_t v89 = v91;
      uint64_t v92 = v118[8];
      uint64_t v93 = (void *)((char *)v61 + v92);
      uint64_t v94 = &v62[v92];
      void *v93 = *(void *)v94;
      v93[1] = *((void *)v94 + 1);
      uint64_t v95 = v118[9];
      uint64_t v96 = (void *)((char *)v61 + v95);
      uint64_t v97 = &v62[v95];
      void *v96 = *(void *)v97;
      v96[1] = *((void *)v97 + 1);
      uint64_t v98 = __dstb[8];
      uint64_t v99 = (char *)a1 + v98;
      uint64_t v100 = (char *)a2 + v98;
      uint64_t v101 = sub_191CF3078();
      uint64_t v102 = *(void *)(v101 - 8);
      id v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v103(v100, 1, v101))
      {
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v99, v100, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
      }
      *((unsigned char *)a1 + __dstb[9]) = *((unsigned char *)a2 + __dstb[9]);
      *((unsigned char *)a1 + __dstb[10]) = *((unsigned char *)a2 + __dstb[10]);
      uint64_t v108 = __dstb[11];
      uint64_t v109 = (void *)((char *)a1 + v108);
      uint64_t v110 = (void *)((char *)a2 + v108);
      *uint64_t v109 = *v110;
      v109[1] = v110[1];
      uint64_t v49 = __dstb + 12;
    }
    *((unsigned char *)a1 + *v49) = *((unsigned char *)a2 + *v49);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ControlTemplateType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    uint64_t v13 = (int *)type metadata accessor for ControlTemplatePicker(0);
    uint64_t v14 = v13[7];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = sub_191CF3078();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    *(unsigned char *)(a1 + v13[8]) = *(unsigned char *)(a2 + v13[8]);
    goto LABEL_26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    uint64_t v77 = (int *)type metadata accessor for ControlTemplateToggle(0);
    uint64_t v21 = v77[6];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(a2 + v21);
    *(void *)(v22 + 16) = *(void *)(a2 + v21 + 16);
    uint64_t v24 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v25 = v24[6];
    __dsta = (void *)(v22 + v25);
    uint64_t v26 = (const void *)(v23 + v25);
    uint64_t v27 = sub_191CF4868();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dsta, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(__dsta, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 1, v27);
    }
    long long v53 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v29;
    uint64_t v54 = v24[7];
    uint64_t v55 = v22 + v54;
    uint64_t v56 = v23 + v54;
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *(unsigned char *)(v55 + 16) = *(unsigned char *)(v56 + 16);
    *(_OWORD *)(v22 + v24[8]) = *(_OWORD *)(v23 + v24[8]);
    *(_OWORD *)(v22 + v24[9]) = *(_OWORD *)(v23 + v24[9]);
    uint64_t v57 = v77[7];
    uint64_t v58 = a1 + v57;
    uint64_t v59 = a2 + v57;
    *(_OWORD *)uint64_t v58 = *(_OWORD *)(a2 + v57);
    *(void *)(v58 + 16) = *(void *)(a2 + v57 + 16);
    uint64_t v60 = v24[6];
    uint64_t v61 = (void *)(v58 + v60);
    uint64_t v62 = (const void *)(v59 + v60);
    if (v53(v59 + v60, 1, v27))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v61, v62, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v61, 0, 1, v27);
    }
    uint64_t v13 = v77;
    uint64_t v64 = v24[7];
    uint64_t v65 = v58 + v64;
    uint64_t v66 = v59 + v64;
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
    *(unsigned char *)(v65 + 16) = *(unsigned char *)(v66 + 16);
    *(_OWORD *)(v58 + v24[8]) = *(_OWORD *)(v59 + v24[8]);
    *(_OWORD *)(v58 + v24[9]) = *(_OWORD *)(v59 + v24[9]);
    uint64_t v67 = v77[8];
    uint64_t v68 = (void *)(a1 + v67);
    uint64_t v69 = (const void *)(a2 + v67);
    uint64_t v70 = sub_191CF3078();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v71 + 32))(v68, v69, v70);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
LABEL_26:
    *(unsigned char *)(a1 + v13[9]) = *(unsigned char *)(a2 + v13[9]);
    *(unsigned char *)(a1 + v13[10]) = *(unsigned char *)(a2 + v13[10]);
    *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
    uint64_t v52 = v13 + 12;
    goto LABEL_27;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  uint64_t v6 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  __dst = (void (**)(void *, const void *, uint64_t))v11;
  if (v76(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v31 = v6[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
  *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
  id v34 = (int *)type metadata accessor for ControlTemplateButton(0);
  uint64_t v35 = v34[5];
  uint64_t v36 = (_OWORD *)(a1 + v35);
  uint64_t v37 = a2 + v35;
  long long v38 = *(_OWORD *)(a2 + v35 + 16);
  *uint64_t v36 = *(_OWORD *)(a2 + v35);
  v36[1] = v38;
  uint64_t v39 = v6[6];
  uint64_t v40 = (char *)v36 + v39;
  uint64_t v41 = (const void *)(v37 + v39);
  if (v76((const void *)(v37 + v39), 1, v10))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    __dst[4](v40, v41, v10);
    ((void (*)(char *, void, uint64_t, uint64_t))__dst[7])(v40, 0, 1, v10);
  }
  uint64_t v43 = v6[7];
  char v44 = (char *)v36 + v43;
  uint64_t v45 = v37 + v43;
  *(_OWORD *)char v44 = *(_OWORD *)v45;
  v44[16] = *(unsigned char *)(v45 + 16);
  *(_OWORD *)((char *)v36 + v6[8]) = *(_OWORD *)(v37 + v6[8]);
  *(_OWORD *)((char *)v36 + v6[9]) = *(_OWORD *)(v37 + v6[9]);
  *(void *)(a1 + v34[6]) = *(void *)(a2 + v34[6]);
  uint64_t v46 = v34[7];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (const void *)(a2 + v46);
  uint64_t v49 = sub_191CF3078();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  *(unsigned char *)(a1 + v34[8]) = *(unsigned char *)(a2 + v34[8]);
  *(unsigned char *)(a1 + v34[9]) = *(unsigned char *)(a2 + v34[9]);
  *(_OWORD *)(a1 + v34[10]) = *(_OWORD *)(a2 + v34[10]);
  uint64_t v52 = v34 + 11;
LABEL_27:
  *(unsigned char *)(a1 + *v52) = *(unsigned char *)(a2 + *v52);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ControlTemplateType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_191C60720(a1, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      uint64_t v13 = (int *)type metadata accessor for ControlTemplatePicker(0);
      uint64_t v14 = v13[7];
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = sub_191CF3078();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(unsigned char *)(a1 + v13[8]) = *(unsigned char *)(a2 + v13[8]);
      *(unsigned char *)(a1 + v13[9]) = *(unsigned char *)(a2 + v13[9]);
      *(unsigned char *)(a1 + v13[10]) = *(unsigned char *)(a2 + v13[10]);
      *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
      uint64_t v43 = v13 + 12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      uint64_t v6 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_191CF4868();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      uint64_t v73 = v11;
      if (v75(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v31 = v6[7];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
      *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
      *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
      id v34 = (int *)type metadata accessor for ControlTemplateButton(0);
      uint64_t v35 = v34[5];
      uint64_t v36 = (_OWORD *)(a1 + v35);
      uint64_t v37 = a2 + v35;
      long long v38 = *(_OWORD *)(a2 + v35 + 16);
      *uint64_t v36 = *(_OWORD *)(a2 + v35);
      v36[1] = v38;
      uint64_t v39 = v6[6];
      uint64_t v40 = (char *)v36 + v39;
      uint64_t v41 = (const void *)(v37 + v39);
      if (v75((const void *)(v37 + v39), 1, v10))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v73 + 32))(v40, v41, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v40, 0, 1, v10);
      }
      uint64_t v54 = v6[7];
      uint64_t v55 = (char *)v36 + v54;
      uint64_t v56 = v37 + v54;
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      v55[16] = *(unsigned char *)(v56 + 16);
      *(_OWORD *)((char *)v36 + v6[8]) = *(_OWORD *)(v37 + v6[8]);
      *(_OWORD *)((char *)v36 + v6[9]) = *(_OWORD *)(v37 + v6[9]);
      *(void *)(a1 + v34[6]) = *(void *)(a2 + v34[6]);
      uint64_t v57 = v34[7];
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (const void *)(a2 + v57);
      uint64_t v60 = sub_191CF3078();
      uint64_t v61 = *(void *)(v60 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v61 + 32))(v58, v59, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      *(unsigned char *)(a1 + v34[8]) = *(unsigned char *)(a2 + v34[8]);
      *(unsigned char *)(a1 + v34[9]) = *(unsigned char *)(a2 + v34[9]);
      *(_OWORD *)(a1 + v34[10]) = *(_OWORD *)(a2 + v34[10]);
      uint64_t v43 = v34 + 11;
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      uint64_t v76 = (int *)type metadata accessor for ControlTemplateToggle(0);
      uint64_t v21 = v76[6];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      *(_OWORD *)uint64_t v22 = *(_OWORD *)(a2 + v21);
      *(void *)(v22 + 16) = *(void *)(a2 + v21 + 16);
      uint64_t v24 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
      uint64_t v25 = v24[6];
      uint64_t v26 = (void *)(v22 + v25);
      uint64_t v27 = (const void *)(v23 + v25);
      uint64_t v28 = sub_191CF4868();
      uint64_t v29 = *(void *)(v28 - 8);
      int64_t v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
      if (v74(v27, 1, v28))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      uint64_t v44 = v24[7];
      uint64_t v45 = v22 + v44;
      uint64_t v46 = v23 + v44;
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
      *(_OWORD *)(v22 + v24[8]) = *(_OWORD *)(v23 + v24[8]);
      *(_OWORD *)(v22 + v24[9]) = *(_OWORD *)(v23 + v24[9]);
      uint64_t v47 = v76[7];
      uint64_t v48 = a1 + v47;
      uint64_t v49 = a2 + v47;
      *(_OWORD *)uint64_t v48 = *(_OWORD *)(a2 + v47);
      *(void *)(v48 + 16) = *(void *)(a2 + v47 + 16);
      uint64_t v50 = v24[6];
      uint64_t v51 = (void *)(v48 + v50);
      uint64_t v52 = (const void *)(v49 + v50);
      if (v74((const void *)(v49 + v50), 1, v28))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v51, v52, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v51, 0, 1, v28);
      }
      uint64_t v63 = v24[7];
      uint64_t v64 = v48 + v63;
      uint64_t v65 = v49 + v63;
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
      *(_OWORD *)(v48 + v24[8]) = *(_OWORD *)(v49 + v24[8]);
      *(_OWORD *)(v48 + v24[9]) = *(_OWORD *)(v49 + v24[9]);
      uint64_t v66 = v76[8];
      uint64_t v67 = (void *)(a1 + v66);
      uint64_t v68 = (const void *)(a2 + v66);
      uint64_t v69 = sub_191CF3078();
      uint64_t v70 = *(void *)(v69 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      *(unsigned char *)(a1 + v76[9]) = *(unsigned char *)(a2 + v76[9]);
      *(unsigned char *)(a1 + v76[10]) = *(unsigned char *)(a2 + v76[10]);
      *(_OWORD *)(a1 + v76[11]) = *(_OWORD *)(a2 + v76[11]);
      uint64_t v43 = v76 + 12;
    }
    *(unsigned char *)(a1 + *v43) = *(unsigned char *)(a2 + *v43);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_191C63E4C()
{
  uint64_t result = type metadata accessor for ControlTemplateToggle(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ControlTemplateButton(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ControlTemplatePicker(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ControlTemplateType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C64018);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateType.CodingKeys()
{
  return &type metadata for ControlTemplateType.CodingKeys;
}

ValueMetadata *type metadata accessor for ControlTemplateType.ToggleCodingKeys()
{
  return &type metadata for ControlTemplateType.ToggleCodingKeys;
}

ValueMetadata *type metadata accessor for ControlTemplateType.ButtonCodingKeys()
{
  return &type metadata for ControlTemplateType.ButtonCodingKeys;
}

unsigned char *_s9WidgetKit19ControlTemplateTypeO16ToggleCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C64110);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateType.PickerCodingKeys()
{
  return &type metadata for ControlTemplateType.PickerCodingKeys;
}

unint64_t sub_191C6414C()
{
  unint64_t result = qword_1E92E49E0;
  if (!qword_1E92E49E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E49E0);
  }
  return result;
}

unint64_t sub_191C641A4()
{
  unint64_t result = qword_1E92E49E8;
  if (!qword_1E92E49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E49E8);
  }
  return result;
}

unint64_t sub_191C641FC()
{
  unint64_t result = qword_1E92E49F0;
  if (!qword_1E92E49F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E49F0);
  }
  return result;
}

unint64_t sub_191C64254()
{
  unint64_t result = qword_1E92E49F8;
  if (!qword_1E92E49F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E49F8);
  }
  return result;
}

unint64_t sub_191C642AC()
{
  unint64_t result = qword_1E92E2B58;
  if (!qword_1E92E2B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B58);
  }
  return result;
}

unint64_t sub_191C64304()
{
  unint64_t result = qword_1E92E2B50;
  if (!qword_1E92E2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B50);
  }
  return result;
}

unint64_t sub_191C6435C()
{
  unint64_t result = qword_1E92E2B38;
  if (!qword_1E92E2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B38);
  }
  return result;
}

unint64_t sub_191C643B4()
{
  unint64_t result = qword_1E92E2B30;
  if (!qword_1E92E2B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B30);
  }
  return result;
}

unint64_t sub_191C6440C()
{
  unint64_t result = qword_1E92E2B48;
  if (!qword_1E92E2B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B48);
  }
  return result;
}

unint64_t sub_191C64464()
{
  unint64_t result = qword_1E92E2B40;
  if (!qword_1E92E2B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B40);
  }
  return result;
}

unint64_t sub_191C644BC()
{
  unint64_t result = qword_1E92E2B28;
  if (!qword_1E92E2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B28);
  }
  return result;
}

unint64_t sub_191C64514()
{
  unint64_t result = qword_1E92E2B20;
  if (!qword_1E92E2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B20);
  }
  return result;
}

uint64_t sub_191C64568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C67676F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F74747562 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72656B636970 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t CHSWidgetFamily.init(_:)(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0) {
    return qword_191D059A0[(char)v1];
  }
  uint64_t result = sub_191CF6338();
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  unsigned int v1 = *a1;
  uint64_t result = 1;
  switch(v1)
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 3;
      break;
    case 3:
      uint64_t result = 4;
      break;
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C64E1CLL);
    case 5:
      uint64_t result = 10;
      break;
    case 6:
      uint64_t result = 11;
      break;
    case 7:
      uint64_t result = 12;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t InternalWidgetFamily.init(_:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = result - 1;
  if (unint64_t)(result - 1) < 0xE && ((0x2E3Fu >> v2))
  {
    *a2 = byte_191D0591E[v2];
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_191CF3858();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB44CCE0);
    unsigned int v4 = sub_191CF3838();
    os_log_type_t v5 = sub_191CF5928();
    if (os_log_type_enabled(v4, v5))
    {
      char v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v6 = 134217984;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v4, v5, "Unrecognized family: %ld", v6, 0xCu);
      MEMORY[0x192FE5F00](v6, -1, -1);
    }

    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t CHSWidgetFamily.stableIntegerRepresentation.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD) {
    return 0;
  }
  else {
    return qword_191D05930[a1 - 1];
  }
}

WidgetKit::InternalWidgetFamily __swiftcall InternalWidgetFamily.init(_:)(WidgetKit::InternalWidgetFamily result)
{
  char v2 = *(unsigned char *)result;
  switch(*(unsigned char *)result)
  {
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C648F8);
    case 5:
      char v2 = 7;
      break;
    case 6:
      char v2 = 8;
      break;
    case 7:
      char v2 = 9;
      break;
    default:
      break;
  }
  *unsigned int v1 = v2;
  return result;
}

uint64_t WidgetFamily.isAccessory.getter()
{
  switch(*v0)
  {
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C64998);
    default:
      return CHSWidgetFamilyIsAccessory();
  }
}

uint64_t CHSWidgetFamilyMask.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CHSWidgetFamilyMask(0);
  sub_191CF5498();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t InternalWidgetFamily.chsWidgetFamily.getter()
{
  unsigned int v1 = *v0;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0) {
    return qword_191D059A0[(char)v1];
  }
  uint64_t result = sub_191CF6338();
  __break(1u);
  return result;
}

unint64_t WidgetFamily.debugDescription.getter()
{
  unint64_t result = 0x6D536D6574737973;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x654D6D6574737973;
      break;
    case 2:
      unint64_t result = 0x614C6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C64BE4);
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x726F737365636361;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t WidgetFamily.description.getter()
{
  unint64_t result = 0x6D536D6574737973;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x654D6D6574737973;
      break;
    case 2:
      unint64_t result = 0x614C6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C64D30);
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x726F737365636361;
      break;
    default:
      return result;
  }
  return result;
}

WidgetKit::WidgetFamily_optional __swiftcall WidgetFamily.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x706050803020100uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 8) {
    LOBYTE(v2) = 8;
  }
  *unsigned int v1 = v2;
  return (WidgetKit::WidgetFamily_optional)rawValue;
}

WidgetKit::WidgetFamily_optional sub_191C64D7C(Swift::Int *a1)
{
  return WidgetFamily.init(rawValue:)(*a1);
}

unint64_t InternalWidgetFamily.debugDescription.getter()
{
  unint64_t result = 0x316C6F72746E6F63;
  switch(*v0)
  {
    case 0:
      unint64_t result = 0x6D536D6574737973;
      break;
    case 1:
      unint64_t result = 0x654D6D6574737973;
      break;
    case 2:
      unint64_t result = 0x614C6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6772614C7377656ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0x726F737365636361;
      break;
    case 0xC:
      return result;
    default:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C64FC4);
  }
  return result;
}

unint64_t InternalWidgetFamily.description.getter()
{
  unint64_t result = 0x316C6F72746E6F63;
  switch(*v0)
  {
    case 0:
      unint64_t result = 0x6D536D6574737973;
      break;
    case 1:
      unint64_t result = 0x654D6D6574737973;
      break;
    case 2:
      unint64_t result = 0x614C6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6772614C7377656ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0x726F737365636361;
      break;
    case 0xC:
      return result;
    default:
      sub_191CF6338();
      __break(1u);
      JUMPOUT(0x191C65180);
  }
  return result;
}

WidgetKit::InternalWidgetFamily_optional __swiftcall InternalWidgetFamily.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue > 0xC) {
    *unsigned int v1 = 13;
  }
  else {
    *unsigned int v1 = byte_191D05A08[rawValue];
  }
  return (WidgetKit::InternalWidgetFamily_optional)rawValue;
}

uint64_t InternalWidgetFamily.rawValue.getter()
{
  return *v0;
}

WidgetKit::InternalWidgetFamily_optional sub_191C651E4(Swift::Int *a1)
{
  return InternalWidgetFamily.init(rawValue:)(*a1);
}

unint64_t CHSWidgetFamily.stableStringRepresentation.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x316C6F72746E6F63;
  switch(v1)
  {
    case 0:
      unint64_t result = 0x6D536D6574737973;
      break;
    case 1:
      unint64_t result = 0x654D6D6574737973;
      break;
    case 2:
      unint64_t result = 0x614C6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6772614C7377656ELL;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0x726F737365636361;
      break;
    case 13:
      return result;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

BOOL static WidgetFamily.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t sub_191C653A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = CHSWidgetFamilyMaskFromWidgetFamily();
  *a2 = result | v3;
  return result;
}

uint64_t CHSWidgetFamilyMask.family(_:)(unint64_t a1, __int16 a2)
{
  uint64_t v3 = CHSWidgetFamilyMask.internalFamilies()(a2);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*((void *)v3 + 2) <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unsigned int v4 = v3[a1 + 32];
  swift_bridgeObjectRelease();
  if (v4 < 0xD && ((0x13BFu >> v4) & 1) != 0) {
    return qword_191D05A18[(char)v4];
  }
LABEL_8:
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

char *CHSWidgetFamilyMask.internalFamilies()(__int16 a1)
{
  if ((a1 & 0x4000) == 0)
  {
    unint64_t v2 = (char *)MEMORY[0x1E4FBC860];
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  unint64_t v2 = sub_191B40ACC(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 12;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v6 = *((void *)v2 + 2);
    unint64_t v5 = *((void *)v2 + 3);
    if (v6 >= v5 >> 1) {
      unint64_t v2 = sub_191B40ACC((char *)(v5 > 1), v6 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v6 + 1;
    v2[v6 + 32] = 0;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v8 = *((void *)v2 + 2);
    unint64_t v7 = *((void *)v2 + 3);
    if (v8 >= v7 >> 1) {
      unint64_t v2 = sub_191B40ACC((char *)(v7 > 1), v8 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v8 + 1;
    v2[v8 + 32] = 1;
    if ((a1 & 8) == 0)
    {
LABEL_14:
      if ((a1 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
  }
  else if ((a1 & 8) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v10 = *((void *)v2 + 2);
  unint64_t v9 = *((void *)v2 + 3);
  if (v10 >= v9 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v9 > 1), v10 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v10 + 1;
  v2[v10 + 32] = 2;
  if ((a1 & 0x20) == 0)
  {
LABEL_15:
    if ((a1 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_31:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v12 = *((void *)v2 + 2);
  unint64_t v11 = *((void *)v2 + 3);
  if (v12 >= v11 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v11 > 1), v12 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v12 + 1;
  v2[v12 + 32] = 4;
  if ((a1 & 0x10) == 0)
  {
LABEL_16:
    if ((a1 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v14 = *((void *)v2 + 2);
  unint64_t v13 = *((void *)v2 + 3);
  if (v14 >= v13 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v13 > 1), v14 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v14 + 1;
  v2[v14 + 32] = 3;
  if ((a1 & 0x40) == 0)
  {
LABEL_17:
    if ((a1 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v16 = *((void *)v2 + 2);
  unint64_t v15 = *((void *)v2 + 3);
  if (v16 >= v15 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v15 > 1), v16 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v16 + 1;
  v2[v16 + 32] = 5;
  if ((a1 & 0x400) == 0)
  {
LABEL_18:
    if ((a1 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v18 = *((void *)v2 + 2);
  unint64_t v17 = *((void *)v2 + 3);
  if (v18 >= v17 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v17 > 1), v18 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v18 + 1;
  v2[v18 + 32] = 7;
  if ((a1 & 0x800) == 0)
  {
LABEL_19:
    if ((a1 & 0x1000) == 0) {
      return v2;
    }
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v20 = *((void *)v2 + 2);
  unint64_t v19 = *((void *)v2 + 3);
  if (v20 >= v19 >> 1) {
    unint64_t v2 = sub_191B40ACC((char *)(v19 > 1), v20 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v20 + 1;
  v2[v20 + 32] = 8;
  if ((a1 & 0x1000) != 0)
  {
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B40ACC(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v22 = *((void *)v2 + 2);
    unint64_t v21 = *((void *)v2 + 3);
    if (v22 >= v21 >> 1) {
      unint64_t v2 = sub_191B40ACC((char *)(v21 > 1), v22 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v22 + 1;
    v2[v22 + 32] = 9;
  }
  return v2;
}

void *CHSWidgetFamilyMask.widgetFamilies.getter(__int16 a1)
{
  if ((a1 & 2) == 0)
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
    if ((a1 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  unint64_t v2 = sub_191B406F0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  v2[v4 + 4] = 1;
  if ((a1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
    }
    unint64_t v6 = v2[2];
    unint64_t v5 = v2[3];
    if (v6 >= v5 >> 1) {
      unint64_t v2 = sub_191B406F0((void *)(v5 > 1), v6 + 1, 1, v2);
    }
    v2[2] = v6 + 1;
    v2[v6 + 4] = 2;
  }
LABEL_12:
  if ((a1 & 8) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
    }
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      unint64_t v2 = sub_191B406F0((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    v2[v8 + 4] = 3;
    if ((a1 & 0x2000) == 0)
    {
LABEL_14:
      if ((a1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((a1 & 0x2000) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
  }
  unint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  if (v10 >= v9 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v9 > 1), v10 + 1, 1, v2);
  }
  v2[2] = v10 + 1;
  v2[v10 + 4] = 13;
  if ((a1 & 0x10) == 0)
  {
LABEL_15:
    if ((a1 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_30:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
  }
  unint64_t v12 = v2[2];
  unint64_t v11 = v2[3];
  if (v12 >= v11 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v11 > 1), v12 + 1, 1, v2);
  }
  v2[2] = v12 + 1;
  v2[v12 + 4] = 4;
  if ((a1 & 0x40) == 0)
  {
LABEL_16:
    if ((a1 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_35:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
  }
  unint64_t v14 = v2[2];
  unint64_t v13 = v2[3];
  if (v14 >= v13 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v13 > 1), v14 + 1, 1, v2);
  }
  v2[2] = v14 + 1;
  v2[v14 + 4] = 6;
  if ((a1 & 0x400) == 0)
  {
LABEL_17:
    if ((a1 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_40:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  v2[v16 + 4] = 10;
  if ((a1 & 0x800) == 0)
  {
LABEL_18:
    if ((a1 & 0x1000) == 0) {
      return v2;
    }
    goto LABEL_50;
  }
LABEL_45:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
  }
  unint64_t v18 = v2[2];
  unint64_t v17 = v2[3];
  if (v18 >= v17 >> 1) {
    unint64_t v2 = sub_191B406F0((void *)(v17 > 1), v18 + 1, 1, v2);
  }
  v2[2] = v18 + 1;
  v2[v18 + 4] = 11;
  if ((a1 & 0x1000) != 0)
  {
LABEL_50:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_191B406F0(0, v2[2] + 1, 1, v2);
    }
    unint64_t v20 = v2[2];
    unint64_t v19 = v2[3];
    if (v20 >= v19 >> 1) {
      unint64_t v2 = sub_191B406F0((void *)(v19 > 1), v20 + 1, 1, v2);
    }
    v2[2] = v20 + 1;
    v2[v20 + 4] = 12;
  }
  return v2;
}

uint64_t sub_191C65D80(uint64_t a1)
{
  return sub_191C65E34(a1, &qword_1E92E2C98, (uint64_t)&off_1E92E4A08, byte_1E92E4A00);
}

void *static WidgetFamily.anyPlatformFamily.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_191C65EB0(&qword_1E92E2C90, byte_1E92E4A00, a1);
}

void sub_191C65DD0()
{
  off_1E92E4A08 = &unk_1EE2A4DB0;
}

uint64_t static WidgetFamily.somePlatformFamilies.getter()
{
  return sub_191C660E0(&qword_1E92E2C98);
}

uint64_t sub_191C65E08(uint64_t a1)
{
  return sub_191C65E34(a1, qword_1E92E2CA8, (uint64_t)&qword_1E92E4A18, byte_1E92E4A10);
}

uint64_t sub_191C65E34(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if (*a2 != -1) {
    uint64_t result = swift_once();
  }
  if (*(void *)(*(void *)a3 + 16)) {
    *a4 = *(unsigned char *)(*(void *)a3 + 32);
  }
  else {
    __break(1u);
  }
  return result;
}

void *static InternalWidgetFamily.anyPlatformFamily.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_191C65EB0(&qword_1E92E2CA0, byte_1E92E4A10, a1);
}

void *sub_191C65EB0@<X0>(void *result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X8>)
{
  if (*result != -1) {
    uint64_t result = (void *)swift_once();
  }
  *a3 = *a2;
  return result;
}

uint64_t sub_191C65EF4()
{
  uint64_t result = sub_191C65F14();
  qword_1E92E4A18 = result;
  return result;
}

uint64_t sub_191C65F14()
{
  if (qword_1E92E2C98 != -1) {
    swift_once();
  }
  uint64_t v0 = (char *)off_1E92E4A08;
  int64_t v1 = *((void *)off_1E92E4A08 + 2);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_191AFBAD0(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v2 = v9;
    do
    {
      unint64_t v4 = &v0[v3++];
      char v5 = v4[32];
      switch(v5)
      {
        case 4:
          sub_191CF6338();
          __break(1u);
          JUMPOUT(0x191C6609CLL);
        case 5:
          char v5 = 7;
          break;
        case 6:
          char v5 = 8;
          break;
        case 7:
          char v5 = 9;
          break;
        default:
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_191AFBAD0(0, *(void *)(v9 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_191AFBAD0(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(unsigned char *)(v9 + v7 + 32) = v5;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t static InternalWidgetFamily.somePlatformFamilies.getter()
{
  return sub_191C660E0(qword_1E92E2CA8);
}

uint64_t sub_191C660E0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_191C6612C(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_191C6613C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_191C66178(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void *sub_191C66188(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_191CF6078();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_191C6622C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_191C66260()
{
  unint64_t result = qword_1E92E1000;
  if (!qword_1E92E1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1000);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetFamily(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C66384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetFamily()
{
  return &type metadata for WidgetFamily;
}

unsigned char *storeEnumTagSinglePayload for InternalWidgetFamily(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C66488);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalWidgetFamily()
{
  return &type metadata for InternalWidgetFamily;
}

uint64_t EnvironmentValues._widgetMetrics.getter()
{
  sub_191B0171C();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._widgetMetrics.setter()
{
  return sub_191CF4078();
}

id sub_191C66540()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58E80]), sel_initWithSize_cornerRadius_, 0.0, 0.0, 0.0);
  qword_1EB44CC08 = (uint64_t)result;
  return result;
}

id sub_191C66580@<X0>(void *a1@<X8>)
{
  if (qword_1EB44BAE0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB44CC08;
  *a1 = qword_1EB44CC08;

  return v2;
}

uint64_t sub_191C665EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_191C67924(&qword_1E92E0A58, (unint64_t *)&qword_1EB44C010);

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t sub_191C6667C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CC28 = result;
  return result;
}

uint64_t sub_191C666A4()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BEA8);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CC10 = v0;
  strcpy(algn_1EB44CC18, "widgetMetrics");
  HIWORD(qword_1EB44CC20) = -4864;
  return result;
}

uint64_t sub_191C66724()
{
  if (qword_1EB44BCC8 != -1) {
    swift_once();
  }

  return swift_retain();
}

id sub_191C66780@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

id sub_191C667B0@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_191C67968(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_191C667E4()
{
  if (qword_1EB44BCC0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CC10;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

void (*EnvironmentValues._widgetMetrics.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_191B0171C();
  sub_191CF4068();
  return sub_191C668C4;
}

void sub_191C668C4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)(a1 + 8) = *(void *)a1;
  if (a2)
  {
    id v4 = v2;
    sub_191CF4078();
    uint64_t v5 = *(void **)a1;
  }
  else
  {
    sub_191CF4078();
  }
}

unint64_t sub_191C669A8(char a1)
{
  unint64_t result = 1702521203;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x615272656E726F63;
      break;
    case 2:
      unint64_t result = 0x636146656C616373;
      break;
    case 3:
      unint64_t result = 0x6C797453746E6F66;
      break;
    case 4:
      unint64_t result = 0x6165724165666173;
      break;
    case 5:
      unint64_t result = 0x6E4974756F79616CLL;
      break;
    case 6:
      unint64_t result = 0x4D746E65746E6F63;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191C66AEC()
{
  return sub_191C669A8(*v0);
}

uint64_t sub_191C66AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C67DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C66B1C(uint64_t a1)
{
  unint64_t v2 = sub_191C67B70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C66B58(uint64_t a1)
{
  unint64_t v2 = sub_191C67B70();

  return MEMORY[0x1F41862B0](a1, v2);
}

id sub_191C66B94(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C050);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C67B70();
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for CHSWidgetMetricsCodable();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v76) = 8;
    if (sub_191CF61B8())
    {
      char v78 = 8;
      sub_191B71714();
      sub_191CF6178();
      uint64_t v73 = v1;
      uint64_t v9 = *(void *)&v76;
      double v10 = v77;
      sub_191CF3578();
      unint64_t v11 = (void *)sub_191B016E0(0, (unint64_t *)&qword_1EB44C010);
      unint64_t v12 = (void *)sub_191CF3558();
      uint64_t v42 = v12;
      id v66 = v11;
      double v71 = v10;
      uint64_t v72 = v9;
      objc_msgSend(v12, sel_size);
      double v44 = v43;
      double v46 = v45;
      objc_msgSend(v42, sel_cornerRadius);
      double v48 = v47;
      objc_msgSend(v42, sel_scaleFactor);
      double v50 = v49;
      id v70 = objc_msgSend(v42, sel_fontStyle);
      id v67 = objc_msgSend(v42, sel_margins);
      id v68 = objc_msgSend(v42, sel_dynamicTextSupport);
      id v69 = objc_msgSend(v42, sel_widgetGroupMargins);
      id v51 = objc_msgSend(v42, sel_nestedContentMetrics);
      if (v51)
      {
        uint64_t v52 = v51;
        uint64_t v65 = sub_191B016E0(0, &qword_1E92E3080);
        uint64_t v64 = sub_191C67924((unint64_t *)&qword_1E92E4A20, &qword_1E92E3080);
        sub_191CF5248();

        uint64_t v53 = (void *)sub_191CF5238();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = 0;
      }
      id v66 = v53;
      uint64_t v54 = (objc_class *)type metadata accessor for CHSWidgetMetricsCodable();
      v74.receiver = v73;
      v74.super_class = v54;
      uint64_t v55 = v69;
      uint64_t v56 = v67;
      id v3 = objc_msgSendSuper2(&v74, sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v70, v67, v68, v69, v53, v44, v46, v48, v50);

      sub_191B1603C(v72, *(unint64_t *)&v71);
    }
    else
    {
      type metadata accessor for CGSize(0);
      char v78 = 0;
      sub_191C6784C(qword_1EB44B530, 255, type metadata accessor for CGSize);
      sub_191CF6178();
      double v13 = v76;
      double v14 = v77;
      char v78 = 1;
      sub_191B8BABC();
      sub_191CF6178();
      double v15 = v76;
      char v78 = 2;
      sub_191CF6178();
      double v16 = v76;
      LOBYTE(v76) = 3;
      uint64_t v73 = (void *)sub_191CF6158();
      type metadata accessor for CGRect(0);
      char v78 = 4;
      sub_191C6784C((unint64_t *)&unk_1EB44AD00, 255, type metadata accessor for CGRect);
      sub_191CF6178();
      CHSEdgeInsetsFromRect();
      uint64_t v18 = v17;
      double v20 = v19;
      unint64_t v22 = v21;
      uint64_t v24 = v23;
      char v78 = 5;
      sub_191CF6178();
      id v69 = v24;
      id v70 = v22;
      double v71 = v20;
      uint64_t v72 = v18;
      CHSEdgeInsetsFromRect();
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      char v78 = 6;
      sub_191CF6178();
      uint64_t v65 = v32;
      id v66 = v30;
      id v67 = v28;
      id v68 = v26;
      CHSEdgeInsetsFromRect();
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      uint64_t v40 = v39;
      LOBYTE(v76) = 7;
      uint64_t v57 = sub_191CF6168();
      uint64_t v64 = *MEMORY[0x1E4F58BC0];
      long long v63 = *(_OWORD *)(MEMORY[0x1E4F58BC0] + 8);
      uint64_t v62 = *(void *)(MEMORY[0x1E4F58BC0] + 24);
      id v58 = objc_allocWithZone(MEMORY[0x1E4F58E78]);
      id v59 = objc_msgSend(v58, sel_initWithSafeAreaInsets_layoutInsets_contentMargins_backgroundRemovedContentMargins_, *(double *)&v72, v71, *(double *)&v70, *(double *)&v69, *(double *)&v68, *(double *)&v67, *(double *)&v66, *(double *)&v65, v34, v36, v38, v40, v64, v63, v62);
      uint64_t v60 = (objc_class *)type metadata accessor for CHSWidgetMetricsCodable();
      v75.receiver = v3;
      v75.super_class = v60;
      id v3 = objc_msgSendSuper2(&v75, sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v73, v59, v57, 0, 0, v13, v14, v15, v16);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_191C67384(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BAB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C67B70();
  sub_191CF6528();
  sub_191CF3578();
  uint64_t v7 = sub_191CF3568();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v10 = v7;
  unint64_t v11 = v8;
  uint64_t v13 = v7;
  unint64_t v14 = v8;
  v12[15] = 8;
  sub_191B718A4();
  sub_191CF6278();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_191B1603C(v10, v11);
}

id sub_191C676AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSWidgetMetricsCodable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CHSWidgetMetricsCodable()
{
  return self;
}

ValueMetadata *type metadata accessor for WidgetMetricsKey()
{
  return &type metadata for WidgetMetricsKey;
}

uint64_t sub_191C67714(uint64_t a1, uint64_t a2)
{
  return sub_191C6784C(&qword_1EB44BFC0, a2, (void (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable);
}

id sub_191C6775C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for CHSWidgetMetricsCodable());
  id result = sub_191C66B94(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191C677B0(void *a1)
{
  return sub_191C67384(a1);
}

BOOL sub_191C677D4(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

uint64_t sub_191C67804(uint64_t a1, uint64_t a2)
{
  return sub_191C6784C(&qword_1EB44BFB0, a2, (void (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable);
}

uint64_t sub_191C6784C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C67894(uint64_t a1, uint64_t a2)
{
  return sub_191C6784C(&qword_1EB44BFB8, a2, (void (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable);
}

uint64_t sub_191C678DC(uint64_t a1, uint64_t a2)
{
  return sub_191C6784C(&qword_1EB44BFA8, a2, (void (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable);
}

uint64_t sub_191C67924(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191B016E0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_191C67968(void *a1)
{
  objc_msgSend(a1, sel_size);
  double v3 = v2;
  double v5 = v4;
  objc_msgSend(a1, sel_cornerRadius);
  double v7 = v6;
  objc_msgSend(a1, sel_scaleFactor);
  double v9 = v8;
  id v10 = objc_msgSend(a1, sel_fontStyle);
  id v11 = objc_msgSend(a1, sel_margins);
  id v12 = objc_msgSend(a1, sel_dynamicTextSupport);
  id v13 = objc_msgSend(a1, sel_widgetGroupMargins);
  id v14 = objc_msgSend(a1, sel_nestedContentMetrics);
  if (v14)
  {
    sub_191B016E0(0, &qword_1E92E3080);
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C010);
    sub_191C67924((unint64_t *)&qword_1E92E4A20, &qword_1E92E3080);
    sub_191CF5248();

    id v14 = (id)sub_191CF5238();
    swift_bridgeObjectRelease();
  }
  id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CHSWidgetMetricsCodable()), sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v10, v11, v12, v13, v14, v3, v5, v7, v9);

  return v15;
}

unint64_t sub_191C67B70()
{
  unint64_t result = qword_1EB44BF90;
  if (!qword_1EB44BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CHSWidgetMetricsCodable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C67C90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CHSWidgetMetricsCodable.CodingKeys()
{
  return &type metadata for CHSWidgetMetricsCodable.CodingKeys;
}

unint64_t sub_191C67CCC()
{
  unint64_t result = qword_1E92E4A28;
  if (!qword_1E92E4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A28);
  }
  return result;
}

unint64_t sub_191C67D24()
{
  unint64_t result = qword_1EB44BFA0;
  if (!qword_1EB44BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BFA0);
  }
  return result;
}

unint64_t sub_191C67D7C()
{
  unint64_t result = qword_1EB44BF98;
  if (!qword_1EB44BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BF98);
  }
  return result;
}

uint64_t sub_191C67DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636146656C616373 && a2 == 0xEB00000000726F74 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C797453746E6F66 && a2 == 0xE900000000000065 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E4974756F79616CLL && a2 == 0xEC00000073746573 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000191D11560 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000191D11580)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t View.hideViewOnSnapshot()(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v6 = 0;
  MEMORY[0x192FE3AA0](&KeyPath, a1, &type metadata for HideViewOnSnapshotModifier, a2);
  return swift_release();
}

uint64_t HideViewOnSnapshotModifier.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t HideViewOnSnapshotModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4A30);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v2;
  char v10 = *(unsigned char *)(v2 + 8);
  sub_191B1BB50(v9, v10);
  char v11 = sub_191BDD1F0(v9, v10);
  sub_191B172D4(v9, v10);
  if (v11) {
    double v12 = 0.0;
  }
  else {
    double v12 = 1.0;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4A38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v8, a1, v13);
  *(double *)&v8[*(int *)(v6 + 44)] = v12;
  return sub_191C686AC((uint64_t)v8, a2);
}

uint64_t sub_191C683F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_191C68988();

  return MEMORY[0x1F40FA660](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191C6846C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_191C68988();

  return MEMORY[0x1F40FA668](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_191C684E8()
{
  return sub_191CF46C8();
}

uint64_t sub_191C68544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4A30);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v2;
  char v10 = *(unsigned char *)(v2 + 8);
  sub_191B1BB50(v9, v10);
  char v11 = sub_191BDD1F0(v9, v10);
  sub_191B172D4(v9, v10);
  if (v11) {
    double v12 = 0.0;
  }
  else {
    double v12 = 1.0;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4A38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v8, a1, v13);
  *(double *)&v8[*(int *)(v6 + 44)] = v12;
  return sub_191C686AC((uint64_t)v8, a2);
}

uint64_t sub_191C6866C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_191C686AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C68714()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_191C68734()
{
  unint64_t result = qword_1E92E10F0[0];
  if (!qword_1E92E10F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E10F0);
  }
  return result;
}

unint64_t sub_191C6878C()
{
  unint64_t result = qword_1E92E1968;
  if (!qword_1E92E1968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1968);
  }
  return result;
}

unint64_t sub_191C687E4()
{
  unint64_t result = qword_1E92E1960;
  if (!qword_1E92E1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1960);
  }
  return result;
}

ValueMetadata *type metadata accessor for HideViewOnSnapshotModifier()
{
  return &type metadata for HideViewOnSnapshotModifier;
}

unint64_t sub_191C6884C()
{
  unint64_t result = qword_1E92E4A40;
  if (!qword_1E92E4A40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4A30);
    sub_191C688C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A40);
  }
  return result;
}

unint64_t sub_191C688C8()
{
  unint64_t result = qword_1E92E4A48;
  if (!qword_1E92E4A48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A48);
  }
  return result;
}

uint64_t sub_191C68924()
{
  return swift_getWitnessTable();
}

unint64_t sub_191C68988()
{
  unint64_t result = qword_1E92E1958;
  if (!qword_1E92E1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1958);
  }
  return result;
}

uint64_t sub_191C689DC()
{
  uint64_t v0 = sub_191CF5398();
  uint64_t result = MEMORY[0x192FE4160](3081666804, 0xA400000000000000, v0);
  qword_1E92E0F20 = result;
  unk_1E92E0F28 = v2;
  return result;
}

uint64_t static ControlRedactions.title.getter()
{
  return sub_191C68CA4(&qword_1E92E0F38, &qword_1E92E0F20);
}

uint64_t static ControlRedactions.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_191C68D3C(a1, a2, &qword_1E92E0F38, &qword_1E92E0F20, qword_1E92E0F28);
}

uint64_t (*static ControlRedactions.title.modify())()
{
  if (qword_1E92E0F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_191C68B04()
{
  uint64_t v0 = sub_191CF5398();
  uint64_t result = MEMORY[0x192FE4160](3081666804, 0xA400000000000000, v0);
  qword_1E92E0F40 = result;
  *(void *)algn_1E92E0F48 = v2;
  return result;
}

uint64_t static ControlRedactions.subtitle.getter()
{
  return sub_191C68CA4(&qword_1E92E0F50, &qword_1E92E0F40);
}

uint64_t static ControlRedactions.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return sub_191C68D3C(a1, a2, &qword_1E92E0F50, &qword_1E92E0F40, algn_1E92E0F48);
}

uint64_t (*static ControlRedactions.subtitle.modify())()
{
  if (qword_1E92E0F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_191C68C2C()
{
  uint64_t v0 = sub_191CF5398();
  uint64_t result = MEMORY[0x192FE4160](3081666804, 0xA400000000000000, v0);
  qword_1E92E4A50 = result;
  qword_1E92E4A58 = v2;
  return result;
}

uint64_t static ControlRedactions.value.getter()
{
  return sub_191C68CA4(&qword_1E92E2CB8, &qword_1E92E4A50);
}

uint64_t sub_191C68CA4(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static ControlRedactions.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_191C68D3C(a1, a2, &qword_1E92E2CB8, &qword_1E92E4A50, &qword_1E92E4A58);
}

uint64_t sub_191C68D3C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (*a3 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a4 = a1;
  *a5 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ControlRedactions.value.modify())()
{
  if (qword_1E92E2CB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for ControlRedactions()
{
  return &type metadata for ControlRedactions;
}

uint64_t WidgetConfiguration._containerBackgroundRemovable(_:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = a1;
  sub_191CDB0C8((uint64_t)sub_191C68EFC, v2);

  return swift_release();
}

uint64_t sub_191C68EEC()
{
  return swift_deallocObject();
}

uint64_t sub_191C68EFC(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 76)) = v3;
  return result;
}

uint64_t sub_191C68F30()
{
  uint64_t v0 = sub_191CF48D8();
  __swift_allocate_value_buffer(v0, qword_1EB449D20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449D20);
  return sub_191CF48C8();
}

uint64_t static ContainerBackgroundPlacement.widget.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB449D00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF48D8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB449D20);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_191C69030(uint64_t a1)
{
  unint64_t v2 = sub_191C1C790();

  return MEMORY[0x1F40F9710](a1, v2);
}

uint64_t static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.getter()
{
  return byte_1E92E4A60;
}

uint64_t static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E4A60 = a1;
  return result;
}

uint64_t (*static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_191C69150@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E92E4A60;
  return result;
}

uint64_t _s7SwiftUI17EnvironmentValuesV9WidgetKitE06_showsE10BackgroundSbvs_0()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.showsWidgetBackground.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BA09FC();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C69254;
}

uint64_t (*EnvironmentValues._showsWidgetBackground.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BA09FC();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C69254;
}

uint64_t sub_191C692CC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

uint64_t _s7SwiftUI17EnvironmentValuesV9WidgetKitE06_showsE10BackgroundSbvg_0()
{
  sub_191BA09FC();
  sub_191CF4068();
  return v1;
}

uint64_t View.widgetBackgroundStyle<A>(_:)()
{
  if (qword_1EB449D00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF48D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449D20);
  return sub_191CF4C88();
}

{
  uint64_t v0;

  if (qword_1EB449D00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF48D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449D20);
  return sub_191CF4C88();
}

uint64_t View.widgetBackground<A>(content:)()
{
  if (qword_1EB449D00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF48D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449D20);
  sub_191CF5088();
  return sub_191CF4C78();
}

uint64_t View.widgetBackground<A>(isRemovable:content:)()
{
  if (qword_1EB449D00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF48D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB449D20);
  sub_191CF5088();
  return sub_191CF4C78();
}

uint64_t sub_191C69660@<X0>(unsigned char *a1@<X8>)
{
  sub_191BA09FC();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191C696B0()
{
  return sub_191CF4078();
}

ValueMetadata *type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey()
{
  return &type metadata for EnvironmentValues.ShowsWidgetBackgroundKey;
}

uint64_t sub_191C69714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C69770()
{
  return get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm();
}

uint64_t sub_191C69784()
{
  return get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm();
}

uint64_t get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C697E0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *_s18WidgetSpecifiedKeyVMa()
{
  return &_s18WidgetSpecifiedKeyVN;
}

ValueMetadata *_s9WidgetKeyVMa()
{
  return &_s9WidgetKeyVN;
}

uint64_t destroy for WidgetBackgroundModifier(uint64_t a1)
{
  sub_191B1BBA0(*(id *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);

  return sub_191B172E0(v2, v3, v4);
}

uint64_t initializeWithCopy for WidgetBackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_191BD7EB4(v6, v7, v2);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetBackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_191BD7EB4(v8, v9, v2);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v2;
  sub_191B172E0(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for WidgetBackgroundModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  char v8 = *((unsigned char *)a2 + 32);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(unsigned char *)(a1 + 32) = v8;
  sub_191B172E0(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetBackgroundModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetBackgroundModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundModifier()
{
  return &type metadata for WidgetBackgroundModifier;
}

unint64_t sub_191C69A7C()
{
  unint64_t result = qword_1EB449E58;
  if (!qword_1EB449E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449E58);
  }
  return result;
}

uint64_t sub_191C69AD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C69AEC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v1 - 8);
  unsigned int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v4 = *(void *)(v19 - 8);
  uint64_t result = MEMORY[0x1F4188790](v19);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((void)xmmword_1EB44CC98)
  {
    char v8 = *(unsigned char *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 24);
    char v11 = *(unsigned char *)(v0 + 8);
    char v12 = *(void **)v0;
    uint64_t v17 = *(void *)xmmword_1EB44CC98;
    uint64_t v18 = qword_1EB44CCA8;
    uint64_t v20 = xmmword_1EB44CC98;
    swift_retain();
    sub_191B1BB44(v12, v11);
    sub_191BD7EB4(v10, v9, v8);
    sub_191B1BB44(v12, v11);
    uint64_t v13 = (void *)sub_191BDCFD0(v12, v11);
    sub_191B1BBA0(v12, v11);
    sub_191B1BBA0(v12, v11);
    sub_191B172E0(v10, v9, v8);
    (*(void (**)(void *, uint64_t))(*(void *)(v18 + 8) + 8))(v13, v17);
    swift_release();

    uint64_t v14 = v19;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v19) == 1)
    {
      sub_191B01770((uint64_t)v3, (uint64_t *)&unk_1EB44BB00);
      char v15 = 0;
    }
    else
    {
      sub_191BD9EE8((uint64_t)v3, (uint64_t)v7);
      char v16 = v7[*(int *)(v14 + 76)];
      sub_191B5D280((uint64_t)v7);
      char v15 = v16 ^ 1;
    }
    return v15 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191C69D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449E88);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449F78);
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v1[1];
  long long v24 = *v1;
  long long v25 = v8;
  char v26 = *((unsigned char *)v1 + 32);
  sub_191CF5088();
  sub_191C21CB8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v4, 0.0, 1, INFINITY, 0);
  uint64_t v9 = swift_allocObject();
  long long v10 = v25;
  *(_OWORD *)(v9 + 16) = v24;
  *(_OWORD *)(v9 + 32) = v10;
  *(unsigned char *)(v9 + 48) = v26;
  sub_191C6A3E8((uint64_t)&v24, (void (*)(void, void))sub_191B1BB44, (void (*)(uint64_t, uint64_t, uint64_t))sub_191BD7EB4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449EC0);
  unint64_t v12 = sub_191C6A228();
  unint64_t v13 = sub_191C6A300();
  sub_191CF4CC8();
  swift_release();
  sub_191B01770((uint64_t)v4, &qword_1EB449E88);
  uint64_t v19 = v2;
  uint64_t v20 = &_s9WidgetKeyVN;
  uint64_t v21 = v11;
  unint64_t v22 = v12;
  unint64_t v23 = v13;
  swift_getOpaqueTypeConformance2();
  sub_191C69A7C();
  uint64_t v14 = v17;
  sub_191CF4CE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_191C6A010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  char v15 = *(unsigned char *)(a2 + 32);
  sub_191C6A3E8(a2, (void (*)(void, void))sub_191B1BB44, (void (*)(uint64_t, uint64_t, uint64_t))sub_191BD7EB4);
  if (sub_191C69AEC())
  {
    sub_191C6A3E8(a2, (void (*)(void, void))sub_191B1BBA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_191B172E0);
    if (!a1)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t result = 0;
      goto LABEL_7;
    }
LABEL_6:
    swift_retain();
    uint64_t v8 = sub_191CF3BB8();
    uint64_t result = sub_191CF4948();
    uint64_t v7 = a1;
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  char v12 = *(unsigned char *)(a2 + 32);
  sub_191C6A3E8(a2, (void (*)(void, void))sub_191B1BB44, (void (*)(uint64_t, uint64_t, uint64_t))sub_191BD7EB4);
  sub_191BD7EB4(v10, v11, v12);
  sub_191BDCA28(v10, v11, v12, (uint64_t)v14);
  sub_191B172E0(v10, v11, v12);
  sub_191C6A3E8(a2, (void (*)(void, void))sub_191B1BBA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_191B172E0);
  unint64_t v13 = *((void *)&v14[0] + 1) - 1;
  sub_191C6A3E8(a2, (void (*)(void, void))sub_191B1BBA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_191B172E0);
  uint64_t result = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  if (v13 >= 2 && a1) {
    goto LABEL_6;
  }
LABEL_7:
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = result;
  return result;
}

uint64_t sub_191C6A1D8()
{
  sub_191B1BBA0(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  sub_191B172E0(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_191C6A220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C6A010(a1, v2 + 16, a2);
}

unint64_t sub_191C6A228()
{
  unint64_t result = qword_1EB449E80;
  if (!qword_1EB449E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E88);
    sub_191C6A2A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449E80);
  }
  return result;
}

unint64_t sub_191C6A2A4()
{
  unint64_t result = qword_1EB449F20;
  if (!qword_1EB449F20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449F20);
  }
  return result;
}

unint64_t sub_191C6A300()
{
  unint64_t result = qword_1EB449EC8;
  if (!qword_1EB449EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449EC0);
    sub_191C6A374();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449EC8);
  }
  return result;
}

unint64_t sub_191C6A374()
{
  unint64_t result = qword_1EB449EB0;
  if (!qword_1EB449EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449EB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449EB0);
  }
  return result;
}

uint64_t sub_191C6A3E8(uint64_t a1, void (*a2)(void, void), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 32);
  a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  a3(v5, v6, v7);
  return a1;
}

uint64_t sub_191C6A450()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C6A530(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_191C6A55C()
{
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF3858();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB44C888);
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_191AF4000, v1, v2, "Registering custom view decoders...", v3, 2u);
    MEMORY[0x192FE5F00](v3, -1, -1);
  }

  type metadata accessor for WidgetURLModifier(0);
  sub_191C6C5C4(&qword_1EB44AC30, (void (*)(uint64_t))type metadata accessor for WidgetURLModifier);
  sub_191CF46D8();
  type metadata accessor for _ClockHandRotationEffect(0);
  sub_191C6C5C4(&qword_1EB448A70, (void (*)(uint64_t))type metadata accessor for _ClockHandRotationEffect);
  sub_191CF46D8();
  sub_191C68988();
  sub_191CF46D8();
  sub_191C3B7BC();
  sub_191CF3C08();
  sub_191C0E158();
  return sub_191CF46D8();
}

uint64_t static WidgetArchiver.registerArchivableViewDecoders.getter()
{
  if (qword_1E92E1998 != -1) {
    return swift_once();
  }
  return result;
}

char *static WidgetArchiver.unarchive(from:)(char *a1)
{
  uint64_t v3 = sub_191CF44B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = off_1EB448D78;
  uint64_t v8 = qword_1EB448D90;
  long long v11 = *(_OWORD *)&qword_1EB448D80;
  swift_retain();
  swift_retain();
  uint64_t v9 = a1;
  sub_191CF4448();
  if (!v1)
  {
    unint64_t v13 = v7;
    long long v14 = v11;
    uint64_t v15 = v8;
    unsigned __int8 v12 = 3;
    a1 = sub_191C6B84C((uint64_t)v6, &v12, (uint64_t *)&v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_release();
  swift_release();
  return a1;
}

char *static WidgetArchiver.unarchive(from:validationOptions:)(void *a1, char *a2)
{
  uint64_t v5 = sub_191CF44B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)a2;
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v9;
  id v10 = a1;
  sub_191CF4448();
  if (!v2)
  {
    v15[0] = v13;
    v15[1] = v12;
    unsigned __int8 v14 = 3;
    a2 = sub_191C6B84C((uint64_t)v8, &v14, (uint64_t *)v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return a2;
}

char *static WidgetArchiver.unarchive(from:)(uint64_t a1, char *a2)
{
  uint64_t v5 = sub_191CF44B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  long long v9 = off_1EB448D78;
  uint64_t v10 = qword_1EB448D90;
  long long v12 = *(_OWORD *)&qword_1EB448D80;
  swift_retain();
  swift_retain();
  sub_191B15F88(a1, (unint64_t)a2);
  sub_191CF4498();
  if (!v2)
  {
    long long v13 = v9;
    long long v14 = v12;
    uint64_t v15 = v10;
    unsigned __int8 v16 = 3;
    a2 = sub_191C6B84C((uint64_t)v8, &v16, (uint64_t *)&v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_release();
  swift_release();
  return a2;
}

char *static WidgetArchiver.unarchive(from:validationOptions:)(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v7 = sub_191CF44B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *(_OWORD *)a3;
  long long v13 = *((_OWORD *)a3 + 1);
  long long v14 = v11;
  sub_191B15F88(a1, a2);
  sub_191CF4498();
  if (!v3)
  {
    v15[0] = v14;
    v15[1] = v13;
    unsigned __int8 v16 = 3;
    a3 = sub_191C6B84C((uint64_t)v10, &v16, (uint64_t *)v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return a3;
}

uint64_t static WidgetArchiver.unarchive(from:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v7 = off_1EB448D78;
  long long v8 = *(_OWORD *)&qword_1EB448D80;
  uint64_t v9 = qword_1EB448D90;
  uint64_t v2 = qword_1E92E10E8;
  swift_retain();
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1E92F24A0;
  v6[3] = type metadata accessor for WidgetArchiverAssertionTracker();
  v6[4] = &off_1EE29C588;
  v6[0] = v3;
  swift_retain();
  uint64_t v4 = sub_191C6BE10(a1, (long long *)&v7, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  swift_release();
  swift_release();
  return v4;
}

uint64_t static WidgetArchiver.unarchive(from:validationOptions:)(uint64_t a1, long long *a2)
{
  long long v3 = a2[1];
  v8[0] = *a2;
  v8[1] = v3;
  if (qword_1E92E10E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E92F24A0;
  v7[3] = type metadata accessor for WidgetArchiverAssertionTracker();
  v7[4] = &off_1EE29C588;
  v7[0] = v4;
  swift_retain();
  uint64_t v5 = sub_191C6BE10(a1, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v5;
}

unint64_t WidgetArchiver.ValidationError.errorDescription.getter()
{
  uint64_t v1 = *v0;
  if (*v0 < 0)
  {
    id v4 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v8 = 0xD00000000000001ELL;
    swift_getErrorValue();
    uint64_t v3 = v7;
  }
  else
  {
    id v2 = (id)v1;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v8 = 0xD00000000000001BLL;
    swift_getErrorValue();
    uint64_t v3 = v6;
  }
  sub_191C80710(v3);
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191C6C130(v1);
  return v8;
}

uint64_t WidgetArchiver.ValidationOptions.init(isSystemVersionSupported:isBundleSupported:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_191C6B058()
{
  return 0;
}

uint64_t static WidgetArchiver.ValidationOptions.none.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191C6B3B8(&off_1EC244C98, qword_1EC244CB0, &unk_1EC244CA0, a1);
}

uint64_t static WidgetArchiver.ValidationOptions.none.setter(_OWORD *a1)
{
  return sub_191C6B444(a1, &off_1EC244C98, (uint64_t)&unk_1EC244CA0, (uint64_t)qword_1EC244CB0, &off_1EC244CA8);
}

uint64_t (*static WidgetArchiver.ValidationOptions.none.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_191C6B0E8()
{
  if (dyld_program_sdk_at_least()) {
    return 0;
  }
  sub_191C6C66C();
  uint64_t result = swift_allocError();
  *uint64_t v1 = 0xD00000000000001FLL;
  v1[1] = 0x8000000191D116A0;
  return result;
}

uint64_t sub_191C6B160(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1B08);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BundleStub();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C27BE0(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_191C6C60C((uint64_t)v4);
    sub_191C6C66C();
    uint64_t v9 = swift_allocError();
    *uint64_t v10 = 0xD00000000000001DLL;
    v10[1] = 0x8000000191D11630;
  }
  else
  {
    sub_191C6C6C0((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleStub);
    uint64_t v11 = *(int *)(v5 + 24);
    uint64_t v12 = *(void *)&v8[v11];
    uint64_t v13 = *(void *)&v8[v11 + 8];
    long long v14 = (void *)(a1 + v11);
    BOOL v15 = v12 == *v14 && v13 == v14[1];
    if (v15 || (sub_191CF6348() & 1) != 0)
    {
      sub_191C6C728((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleStub);
      return 0;
    }
    else
    {
      sub_191C6C66C();
      uint64_t v9 = swift_allocError();
      *unsigned __int8 v16 = 0xD000000000000046;
      v16[1] = 0x8000000191D11650;
      sub_191C6C728((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BundleStub);
    }
  }
  return v9;
}

uint64_t static WidgetArchiver.ValidationOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191C6B3B8(&off_1EB448D78, &qword_1EB448D90, &qword_1EB448D80, a1);
}

uint64_t sub_191C6B3B8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *a2;
  *(void *)a4 = *a1;
  *(_OWORD *)(a4 + 8) = *a3;
  *(void *)(a4 + 24) = v8;
  swift_retain();
  return swift_retain();
}

uint64_t static WidgetArchiver.ValidationOptions.default.setter(_OWORD *a1)
{
  return sub_191C6B444(a1, &off_1EB448D78, (uint64_t)&qword_1EB448D80, (uint64_t)&qword_1EB448D90, &unk_1EB448D88);
}

uint64_t sub_191C6B444(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  swift_beginAccess();
  long long v8 = a1[1];
  *a2 = *a1;
  *a5 = v8;
  swift_release();
  return swift_release();
}

uint64_t (*static WidgetArchiver.ValidationOptions.default.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191C6B518()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB447158);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191CF5F68();
  __swift_allocate_value_buffer(v3, qword_1EB44C758);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB44C758);
  v7[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447148);
  sub_191CF5368();
  sub_191CF5F58();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_191C6B65C(uint64_t *a1, uint64_t (**a2)())
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *a2 = sub_191C6C404;
  a2[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t WidgetArchiver.ValidationOptions.isSystemVersionSupported.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t WidgetArchiver.ValidationOptions.isSystemVersionSupported.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetArchiver.ValidationOptions.isSystemVersionSupported.modify())()
{
  return nullsub_1;
}

uint64_t sub_191C6B754(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 16) = sub_191C6C404;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t WidgetArchiver.ValidationOptions.isBundleSupported.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t WidgetArchiver.ValidationOptions.isBundleSupported.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*WidgetArchiver.ValidationOptions.isBundleSupported.modify())()
{
  return nullsub_1;
}

char *sub_191C6B84C(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WidgetArchivableMetadata(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v41 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (uint64_t)&v38 - v11;
  uint64_t v12 = sub_191CF5F68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  BOOL v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v39 = *a2;
  uint64_t v16 = *a3;
  long long v42 = *(_OWORD *)(a3 + 1);
  uint64_t v17 = a3[3];
  uint64_t v38 = a1;
  uint64_t v18 = sub_191CF4458();
  double v44 = (char *)v19;
  if (v19 >> 60 == 15)
  {
    uint64_t v20 = sub_191CF5E38();
    swift_allocError();
    unint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    uint64_t *v22 = v8;
    sub_191CF5E18();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA80], v20);
    swift_willThrow();
  }
  else
  {
    uint64_t v23 = v18;
    sub_191CF2F88();
    swift_allocObject();
    sub_191CF2F78();
    if (qword_1EB4471A0 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB44C758);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v24, v12);
    v46[3] = &type metadata for WidgetArchiver.ValidationOptions;
    uint64_t v25 = swift_allocObject();
    v46[0] = v25;
    *(void *)(v25 + 16) = v16;
    *(_OWORD *)(v25 + 24) = v42;
    *(void *)(v25 + 40) = v17;
    swift_retain();
    swift_retain();
    char v26 = (void (*)(char *, void))sub_191CF2F68();
    sub_191B2E204((uint64_t)v46, (uint64_t)v15);
    v26(v45, 0);
    sub_191C6C5C4(&qword_1EB447218, (void (*)(uint64_t))type metadata accessor for WidgetArchivableMetadata);
    uint64_t v27 = v47;
    uint64_t v28 = v43;
    BOOL v15 = v44;
    sub_191CF2F58();
    if (v28)
    {
      swift_release();
      sub_191B170C8(v23, (unint64_t)v15);
    }
    else
    {
      sub_191C6C4F8(v27, v41);
      uint64_t v29 = sub_191CF44B8();
      uint64_t v43 = v23;
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)(v29 - 8);
      uint64_t v32 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v40, v38, v29);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v33(v32, 0, 1, v30);
      type metadata accessor for _TimelineArchivedViewCollection();
      BOOL v15 = (char *)swift_allocObject();
      v15[16] = 0;
      swift_beginAccess();
      v15[17] = byte_1EB44B790;
      uint64_t v34 = &v15[OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange];
      uint64_t v35 = sub_191CF2EA8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
      uint64_t v36 = (uint64_t)&v15[OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates];
      v33((uint64_t)&v15[OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates], 1, 1, v30);
      sub_191C6C6C0(v41, (uint64_t)&v15[OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata], type metadata accessor for WidgetArchivableMetadata);
      swift_beginAccess();
      sub_191C6C55C(v32, v36);
      swift_endAccess();
      swift_beginAccess();
      v15[17] = v39;
      swift_release();
      sub_191B170C8(v43, (unint64_t)v44);
      sub_191C6C728(v47, type metadata accessor for WidgetArchivableMetadata);
    }
  }
  return v15;
}

uint64_t sub_191C6BE10(uint64_t a1, long long *a2, void *a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF44B8();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *a2;
  long long v24 = a2[1];
  long long v25 = v12;
  uint64_t v13 = a3[3];
  uint64_t v23 = a3;
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(a3, v13);
  uint64_t v15 = *v14;
  uint64_t v16 = *(void **)(*v14 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_191C6C478;
  *(void *)(v17 + 24) = v15;
  uint64_t v32 = sub_191C6C490;
  uint64_t v33 = v17;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v31 = sub_191C6A530;
  *((void *)&v31 + 1) = &block_descriptor_6;
  uint64_t v18 = _Block_copy(&aBlock);
  unint64_t v19 = v16;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
    uint64_t v21 = v29;
    sub_191CF4438();
    if (!v21)
    {
      long long aBlock = v25;
      long long v31 = v24;
      unsigned __int8 v34 = 3;
      uint64_t v5 = (uint64_t)sub_191C6B84C((uint64_t)v11, &v34, (uint64_t *)&aBlock);
      __swift_project_boxed_opaque_existential_1(v23, v23[3]);
      sub_191C425DC();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    }
    return v5;
  }
  return result;
}

void sub_191C6C130(uint64_t a1)
{
}

uint64_t sub_191C6C13C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_191C6C440;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;

  return swift_retain();
}

uint64_t sub_191C6C1AC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_191C6C440;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;

  return swift_retain();
}

uint64_t *_s15ValidationErrorOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_191C6C250(*a2);
  *a1 = v3;
  return a1;
}

id sub_191C6C250(uint64_t a1)
{
  return (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void _s15ValidationErrorOwxx(uint64_t *a1)
{
}

uint64_t *_s15ValidationErrorOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_191C6C250(*a2);
  uint64_t v4 = *a1;
  *a1 = v3;
  sub_191C6C130(v4);
  return a1;
}

uint64_t *_s15ValidationErrorOwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;
  sub_191C6C130(v3);
  return a1;
}

uint64_t _s15ValidationErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s15ValidationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_191C6C37C(void *a1)
{
  return *a1 >> 63;
}

void *sub_191C6C388(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_191C6C398(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ValidationError()
{
  return &type metadata for WidgetArchiver.ValidationError;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ValidationOptions()
{
  return &type metadata for WidgetArchiver.ValidationOptions;
}

uint64_t sub_191C6C3CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C6C404()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_191C6C440@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

void sub_191C6C478()
{
  sub_191C421CC(v0);
}

uint64_t sub_191C6C480()
{
  return swift_deallocObject();
}

uint64_t sub_191C6C490()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191C6C4B8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C6C4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetArchivableMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C6C55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C6C5C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C6C60C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1B08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191C6C66C()
{
  unint64_t result = qword_1E92E4A68;
  if (!qword_1E92E4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A68);
  }
  return result;
}

uint64_t sub_191C6C6C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191C6C728(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *_s11SimpleErrorOMa()
{
  return &_s11SimpleErrorON;
}

uint64_t sub_191C6C7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_191C6C7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_191CF44C8();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_191CF44D8();
}

uint64_t EnvironmentValues.widgetRenderingMode.getter()
{
  sub_191AF6A58();

  return sub_191CF4068();
}

uint64_t EnvironmentValues.widgetRenderingMode.setter()
{
  return sub_191CF4078();
}

unint64_t WidgetRenderingMode.init(_:)@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = 0x10200u >> (8 * result);
  if (result >= 3) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

BOOL static WidgetRenderingMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static WidgetRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

WidgetKit::WidgetRenderingMode __swiftcall WidgetRenderingMode.init(mode:)(WidgetKit::WidgetRenderingMode mode)
{
  *uint64_t v1 = *(unsigned char *)mode.mode;
  return mode;
}

void static WidgetRenderingMode.fullColor.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetRenderingMode.vibrant.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

WidgetKit::WidgetRenderingMode::Mode_optional __swiftcall WidgetRenderingMode.Mode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::WidgetRenderingMode::Mode_optional)rawValue;
}

uint64_t WidgetRenderingMode.Mode.rawValue.getter()
{
  return *v0;
}

WidgetKit::WidgetRenderingMode::Mode_optional sub_191C6C9EC(Swift::Int *a1)
{
  return WidgetRenderingMode.Mode.init(rawValue:)(*a1);
}

uint64_t sub_191C6C9F4()
{
  return sub_191CF5508();
}

uint64_t sub_191C6CA54()
{
  return sub_191CF54E8();
}

void WidgetRenderingMode.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *WidgetRenderingMode.mode.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*WidgetRenderingMode.mode.modify())()
{
  return nullsub_1;
}

uint64_t WidgetRenderingMode.description.getter()
{
  uint64_t v1 = 0x6465746E65636361;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E6172626976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F6C6F436C6C7566;
  }
}

uint64_t sub_191C6CB3C()
{
  return 1701080941;
}

uint64_t sub_191C6CB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191C6CBD4(uint64_t a1)
{
  unint64_t v2 = sub_191C6CE3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C6CC10(uint64_t a1)
{
  unint64_t v2 = sub_191C6CE3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C6CC4C()
{
  uint64_t v1 = 0x6465746E65636361;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E6172626976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F6C6F436C6C7566;
  }
}

void *static WidgetRenderingMode.allCases.getter()
{
  return &unk_1EE29B998;
}

void sub_191C6CCB8(void *a1@<X8>)
{
  *a1 = &unk_1EE29BA40;
}

uint64_t WidgetRenderingMode.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t WidgetRenderingMode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A480);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C6CE3C();
  sub_191CF6528();
  char v10 = v7;
  sub_191C6CE90();
  sub_191CF6278();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_191C6CE3C()
{
  unint64_t result = qword_1EB44A678;
  if (!qword_1EB44A678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A678);
  }
  return result;
}

unint64_t sub_191C6CE90()
{
  unint64_t result = qword_1EB44A468;
  if (!qword_1EB44A468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A468);
  }
  return result;
}

uint64_t WidgetRenderingMode.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t WidgetRenderingMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A738);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C6CE3C();
  sub_191CF6508();
  if (!v2)
  {
    sub_191C6D0C4();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191C6D094@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return WidgetRenderingMode.init(from:)(a1, a2);
}

uint64_t sub_191C6D0AC(void *a1)
{
  return WidgetRenderingMode.encode(to:)(a1);
}

unint64_t sub_191C6D0C4()
{
  unint64_t result = qword_1EB44A670;
  if (!qword_1EB44A670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A670);
  }
  return result;
}

uint64_t sub_191C6D118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191C6D2DC();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.widgetRenderingMode.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_191AF6A58();
  sub_191CF4068();
  return sub_191C6D1E8;
}

uint64_t sub_191C6D1E8(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

unint64_t sub_191C6D224()
{
  unint64_t result = qword_1E92E4A70;
  if (!qword_1E92E4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A70);
  }
  return result;
}

unint64_t sub_191C6D27C()
{
  unint64_t result = qword_1E92E4A78;
  if (!qword_1E92E4A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A78);
  }
  return result;
}

unint64_t sub_191C6D2DC()
{
  unint64_t result = qword_1E92E1940;
  if (!qword_1E92E1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1940);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderingMode.Mode()
{
  return &type metadata for WidgetRenderingMode.Mode;
}

uint64_t sub_191C6D370()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for WidgetRenderingMode.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C6D4B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderingMode.CodingKeys()
{
  return &type metadata for WidgetRenderingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetRenderingModeEnvironmentKey()
{
  return &type metadata for WidgetRenderingModeEnvironmentKey;
}

unint64_t sub_191C6D504()
{
  unint64_t result = qword_1E92E4A88;
  if (!qword_1E92E4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A88);
  }
  return result;
}

unint64_t sub_191C6D55C()
{
  unint64_t result = qword_1EB44A688;
  if (!qword_1EB44A688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A688);
  }
  return result;
}

unint64_t sub_191C6D5B4()
{
  unint64_t result = qword_1EB44A680;
  if (!qword_1EB44A680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A680);
  }
  return result;
}

unint64_t sub_191C6D608()
{
  unint64_t result = qword_1EB44A668;
  if (!qword_1EB44A668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A668);
  }
  return result;
}

uint64_t sub_191C6D65C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CA30 = result;
  return result;
}

uint64_t sub_191C6D684()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A878);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA18 = v0;
  strcpy(byte_1EB44CA20, "displayScale");
  BYTE5(qword_1EB44CA28) = 0;
  HIWORD(qword_1EB44CA28) = -5120;
  return result;
}

ValueMetadata *type metadata accessor for DisplayScaleKey()
{
  return &type metadata for DisplayScaleKey;
}

unint64_t sub_191C6D714()
{
  unint64_t result = qword_1EB44B4C0;
  if (!qword_1EB44B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4C0);
  }
  return result;
}

uint64_t sub_191C6D770()
{
  if (qword_1EB44A958 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191C6D7CC()
{
  if (qword_1EB44A950 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA18;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191C6D854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_191C6D868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_191C6D87C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_191C6D890(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_191C6D8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = a3;
  v7[1] = sub_191B0A348;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_191C6D98C, 0, 0);
}

uint64_t IntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_191C6D98C, 0, 0);
}

uint64_t sub_191C6D98C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_191AFAE08(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191C6DA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t IntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  unint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
  uint64_t v6 = (void *)swift_task_alloc();
  v3[6] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_191C6DBC8;
  return v8(v3 + 2, a2, a3);
}

uint64_t sub_191C6DBC8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_191C6DCC4, 0, 0);
}

uint64_t sub_191C6DCC4()
{
  uint64_t v5 = v0;
  uint64_t v1 = (void *)v0[3];
  uint64_t v4 = v0[2];
  swift_getAssociatedTypeWitness();
  sub_191AFB160(&v4, v1);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t _s9WidgetKit22IntentTimelineProviderPAAE15recommendationsSayAA0C14RecommendationVy0C0QzGGyF_0()
{
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF3858();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB44CCE0);
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_191AF4000, v1, v2, "DEFAULT IMPL FOR RECOMMENDATIONS!!!", v3, 2u);
    MEMORY[0x192FE5F00](v3, -1, -1);
  }

  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentRecommendation();

  return sub_191CF55A8();
}

uint64_t dispatch thunk of IntentTimelineProvider.recommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IntentTimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of IntentTimelineProvider.getSnapshot(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of IntentTimelineProvider.getTimeline(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of IntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of IntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

void sub_191C6E0D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 >> 60 == 15)
  {
    unint64_t v8 = 0;
    if (a4)
    {
LABEL_3:
      uint64_t v9 = sub_191CF2FD8();
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v8 = (void *)sub_191CF30A8();
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a5 + 16))(a5, a1, v8);
}

void sub_191C6E180(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_191CF2FD8();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_191C6E1E4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = sub_191B1CABC(a1);
      if (v6)
      {
        uint64_t v4 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  uint64_t v3 = sub_191CF5F98();
  swift_release();
  if (!v3) {
    return 0;
  }
  type metadata accessor for WidgetEnvironment.AnyKey();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

void *sub_191C6E2C0(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_191B1DD30((uint64_t)a1);
      if (v7)
      {
        unint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_191CF5F98();

  if (!v4) {
    return 0;
  }
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C010);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

void sub_191C6E398(uint64_t a1, void *a2)
{
}

void sub_191C6E3A0(uint64_t a1, void *a2)
{
}

double WidgetExtensionSessionOperation.defaultTimeout.getter()
{
  uint64_t v1 = *(void *)v0;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      double result = fmax((double)v1 + 10.0, 20.0);
      break;
    case 2:
      double result = (double)v1 * 30.0;
      break;
    case 3:
      double result = (double)v1 * 10.0;
      break;
    case 4:
      double result = dbl_191D06970[v1];
      break;
    default:
      double result = fmax((double)v1 + 5.0, 10.0);
      break;
  }
  return result;
}

BOOL static ExtensionSessionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExtensionSessionType.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t ExtensionSessionType.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ExtensionSessionOptions.requiresUserInteractivePriority.getter()
{
  return *v0;
}

uint64_t ExtensionSessionOptions.suspensionObserver.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B01614(v1 + 8, a1, &qword_1E92E0698);
}

void ExtensionSessionOptions.sessionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t ExtensionSessionOptions.shouldTakeExtensionAssertion.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ExtensionSessionOptions.environmentVariables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a3;
  *(unsigned char *)a6 = a1;
  uint64_t result = sub_191B015B0(a2, a6 + 8, &qword_1E92E0698);
  *(unsigned char *)(a6 + 48) = v9;
  *(unsigned char *)(a6 + 49) = a4;
  *(void *)(a6 + 56) = a5;
  return result;
}

unint64_t WidgetExtensionSessionOperation.description.getter()
{
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_9;
    case 2:
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0x6C656D6954746567;
      goto LABEL_5;
    case 3:
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0x7669746341746567;
      goto LABEL_5;
    case 4:
      unint64_t result = 0x7263736544746567;
      switch(*(void *)v0)
      {
        case 1:
          unint64_t result = 0xD000000000000011;
          break;
        case 2:
          unint64_t result = 0x72746E6F43746567;
          break;
        case 3:
          unint64_t result = 0x72746E6F43746573;
          break;
        case 4:
          unint64_t result = 0x546C6F72746E6F63;
          break;
        case 5:
          unint64_t result = 0x6563616C50746567;
          break;
        case 6:
          unint64_t result = 0xD000000000000016;
          break;
        case 7:
          unint64_t result = 0xD000000000000012;
          break;
        case 8:
          unint64_t result = 0x6C656D6954746567;
          break;
        case 9:
          unint64_t result = 0xD000000000000020;
          break;
        case 0xALL:
          unint64_t result = 0x68737550646E6573;
          break;
        case 0xBLL:
          unint64_t result = 0x754D656C646E6168;
          break;
        case 0xCLL:
          unint64_t result = 0xD000000000000013;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000014;
LABEL_5:
      unint64_t v3 = v1;
LABEL_9:
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      return v3;
  }
}

double sub_191C6E8FC(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  switch(*(unsigned char *)(a1 + 8))
  {
    case 1:
      double result = fmax((double)v1 + 10.0, 20.0);
      break;
    case 2:
      double result = (double)v1 * 30.0;
      break;
    case 3:
      double result = (double)v1 * 10.0;
      break;
    case 4:
      double result = dbl_191D06970[v1];
      break;
    default:
      double result = fmax((double)v1 + 5.0, 10.0);
      break;
  }
  return result;
}

double (*DefaultWatchdogTimeoutProvider.getter())(uint64_t a1)
{
  return sub_191C6E8FC;
}

uint64_t sub_191C6E9C0()
{
  uint64_t v0 = sub_191CF5A08();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191CF59E8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_191CF51C8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  sub_191CF5188();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_191C7EED0(&qword_1EB44C5D0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C5C0);
  sub_191B00398(&qword_1EB44C5C8, &qword_1EB44C5C0);
  sub_191CF5C98();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_191CF5A38();
  qword_1E92E0690 = result;
  return result;
}

id sub_191C6EC24()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25860]), sel_init);
  qword_1E92E0AD0 = (uint64_t)result;
  return result;
}

id sub_191C6EC58()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25860]), sel_init);
  qword_1E92E0AC8 = (uint64_t)result;
  return result;
}

uint64_t sub_191C6EC8C()
{
  uint64_t v0 = type metadata accessor for _DefaultExtensionIdentityProvider();
  uint64_t result = swift_allocObject();
  qword_1E92E07A8 = v0;
  unk_1E92E07B0 = &off_1EE2A33A0;
  qword_1E92E0790 = result;
  return result;
}

uint64_t static WidgetExtensionSessionFactory.extensionIdentityProvider.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_191AFEE28((uint64_t)&qword_1E92E0790, a1);
}

uint64_t static WidgetExtensionSessionFactory.extensionIdentityProvider.setter(uint64_t *a1)
{
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1E92E0790, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t (*static WidgetExtensionSessionFactory.extensionIdentityProvider.modify())()
{
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_191B01614(a5, (uint64_t)v14, &qword_1E92E0698);
  unint64_t v9 = sub_191B2D604(MEMORY[0x1E4FBC860]);
  v13[0] = a2;
  v14[20] = 256;
  unint64_t v15 = v9;
  _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(a1, v13, a3, a4);
  uint64_t v11 = v10;
  sub_191C7B668((uint64_t)v13);
  return v11;
}

uint64_t static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  sub_191B01614(a5, (uint64_t)v16, &qword_1E92E0698);
  unint64_t v11 = sub_191B2D604(MEMORY[0x1E4FBC860]);
  v15[0] = a2;
  v16[40] = 0;
  v16[41] = a6;
  unint64_t v17 = v11;
  _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(a1, v15, a3, a4);
  uint64_t v13 = v12;
  sub_191C7B668((uint64_t)v15);
  return v13;
}

uint64_t static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:completion:)(uint64_t a1, char a2, uint64_t a3, objc_class *a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  sub_191B01614(a5, (uint64_t)v16, &qword_1E92E0698);
  unint64_t v13 = sub_191B2D604(MEMORY[0x1E4FBC860]);
  v15[0] = a2;
  v16[20] = 256;
  unint64_t v17 = v13;
  static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(a1, v15, a3, a4, a6, a7);
  return sub_191C7B668((uint64_t)v15);
}

uint64_t static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)(uint64_t a1, char a2, uint64_t a3, objc_class *a4, uint64_t a5, char a6, void (*a7)(void), uint64_t a8)
{
  sub_191B01614(a5, (uint64_t)v18, &qword_1E92E0698);
  unint64_t v15 = sub_191B2D604(MEMORY[0x1E4FBC860]);
  v17[0] = a2;
  v18[40] = 0;
  v18[41] = a6;
  unint64_t v19 = v15;
  static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(a1, v17, a3, a4, a7, a8);
  return sub_191C7B668((uint64_t)v17);
}

void static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(uint64_t a1, char *a2, uint64_t a3, objc_class *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v120 = a2;
  uint64_t v116 = sub_191CF3618();
  uint64_t v109 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v110 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF3678();
  uint64_t v114 = *(void *)(v12 - 8);
  uint64_t v115 = v12;
  unint64_t v13 = *(NSObject **)(v114 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v105 = (char *)&v95 - (((unint64_t)&v13[1].isa + 7) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v113 = (char *)&v95 - v15;
  uint64_t v117 = sub_191CF31D8();
  uint64_t v112 = *(void *)(v117 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v117);
  uint64_t v107 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v119 = (char *)&v95 - v18;
  uint64_t v19 = sub_191CF3858();
  uint64_t v118 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v111 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v95 - v22;
  uint64_t v121 = a5;
  if (a3)
  {
    long long v24 = swift_allocObject();
    v24[2].isa = (Class)a3;
    v24[3].isa = a4;
    long long v25 = sub_191C7B8FC;
  }
  else
  {
    long long v25 = sub_191C7017C;
    long long v24 = 0;
  }
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = v24;
  sub_191B01614(a1, (uint64_t)&v122, (uint64_t *)&unk_1EB44BC90);
  if (!*((void *)&v123 + 1))
  {
    sub_191B17508(a3);
    sub_191B01770((uint64_t)&v122, (uint64_t *)&unk_1EB44BC90);
    goto LABEL_13;
  }
  sub_191B17508(a3);
  sub_191B016E0(0, &qword_1E92E06F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_191B01614(a1, (uint64_t)&v122, (uint64_t *)&unk_1EB44BC90);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BC90);
    uint64_t v49 = sub_191CF5368();
    unint64_t v51 = v50;
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F2410);
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_191CF3838();
    os_log_type_t v53 = sub_191CF5948();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(void *)&long long v122 = v55;
      *(_DWORD *)uint64_t v54 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_191C5C36C(v49, v51, (uint64_t *)&v122);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v52, v53, "Unable to create new WidgetExtensionSession: extension was not an NSExtension - %{public}s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v55, -1, -1);
      MEMORY[0x192FE5F00](v54, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v121(0);
    goto LABEL_19;
  }
  uint64_t v104 = v26;
  uint64_t v27 = v126;
  id v28 = [v126 identifier];
  if (!v28)
  {
    __break(1u);
LABEL_33:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v29 = v28;
  uint64_t v30 = sub_191CF5338();
  uint64_t v32 = v31;

  int v33 = *v120;
  unsigned __int8 v34 = (void *)swift_allocObject();
  id v34[2] = v27;
  v34[3] = 0x402E000000000000;
  v34[4] = v121;
  v34[5] = a6;
  type metadata accessor for WidgetExtensionSessionWatchdog();
  swift_allocObject();
  uint64_t v35 = v27;
  swift_retain();
  uint64_t v101 = sub_191BBDA0C(v30, v32, v33, (uint64_t)sub_191C7B710, (uint64_t)v34, 15.0);
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  unint64_t v36 = v19;
  uint64_t v37 = __swift_project_value_buffer(v19, (uint64_t)qword_1E92F2410);
  uint64_t v38 = v118;
  int v39 = *(void (**)(void))(v118 + 16);
  uint64_t v99 = v37;
  id v100 = (id)(v118 + 16);
  uint64_t v98 = v39;
  v39(v23);
  long long v24 = v35;
  uint64_t v27 = sub_191CF3838();
  os_log_type_t v40 = sub_191CF5948();
  BOOL v41 = os_log_type_enabled(v27, v40);
  uint64_t v103 = a6;
  if (!v41)
  {

    uint64_t v27 = *(NSObject **)(v38 + 8);
    ((void (*)(char *, unint64_t))v27)(v23, v36);
LABEL_21:
    unsigned __int8 v56 = v120[48];
    uint64_t v97 = v27;
    if (v56)
    {
      unint64_t v102 = 0x8000000191D117B0;
      unint64_t v96 = 0xD000000000000012;
      if (qword_1E92E0AE0 != -1) {
        swift_once();
      }
      uint64_t v57 = &qword_1E92E0AD0;
    }
    else
    {
      if (qword_1E92E0788 != -1) {
        swift_once();
      }
      unint64_t v96 = 0;
      unint64_t v102 = 0;
      uint64_t v57 = &qword_1E92E0AC8;
    }
    id v58 = (id)*v57;
    sub_191CF31C8();
    id v59 = [v24 identifier];
    if (v59)
    {
      uint64_t v60 = v59;
      sub_191CF5338();

      id v61 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
      id v62 = sub_191C77E90();
      id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25858]), sel_initWithApplicationExtensionRecord_, v62);

      uint64_t v64 = (char *)v63;
      uint64_t v65 = v113;
      uint64_t v111 = v64;
      sub_191CF3688();
      uint64_t v66 = swift_allocBox();
      uint64_t v68 = v67;
      id v69 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
      id v70 = v105;
      v69(v105, v65, v115);
      sub_191CF35A8();
      id v71 = v58;
      sub_191CF35D8();
      id v72 = [v24 preferredLanguages];
      uint64_t v95 = v24;
      uint64_t v118 = v66;
      id v100 = v71;
      if (v72)
      {
        uint64_t v73 = v72;
        sub_191CF5538();
      }
      sub_191CF35E8();
      sub_191CF35F8();
      objc_super v74 = v120;
      swift_bridgeObjectRetain();
      sub_191CF3608();
      uint64_t v75 = v115;
      v69(v70, v113, v115);
      uint64_t v76 = v114;
      unint64_t v77 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
      uint64_t v78 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v78 + v77, v70, v75);
      sub_191CF35C8();
      uint64_t v79 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v110, v68, v116);
      sub_191C7B730(v74, (uint64_t)&v122);
      uint64_t v80 = v112;
      uint64_t v81 = v107;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v107, v119, v117);
      unint64_t v82 = (*(unsigned __int8 *)(v80 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
      uint64_t v83 = swift_allocObject();
      uint64_t v84 = v95;
      uint64_t v85 = v101;
      *(void *)(v83 + 16) = v95;
      *(void *)(v83 + 24) = v85;
      uint64_t v86 = v103;
      *(void *)(v83 + 32) = v121;
      *(void *)(v83 + 40) = v86;
      uint64_t v87 = v118;
      *(void *)(v83 + 48) = v108;
      *(void *)(v83 + 56) = v87;
      long long v88 = v123;
      *(_OWORD *)(v83 + 64) = v122;
      *(_OWORD *)(v83 + 80) = v88;
      long long v89 = v125;
      *(_OWORD *)(v83 + 96) = v124;
      *(_OWORD *)(v83 + 112) = v89;
      uint64_t v90 = v104;
      *(void *)(v83 + 128) = sub_191C6C404;
      *(void *)(v83 + 136) = v90;
      long long v91 = v81;
      uint64_t v92 = v117;
      (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v83 + v82, v91, v117);
      uint64_t v93 = v84;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v94 = v110;
      sub_191CF3648();

      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v79 + 8))(v94, v116);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v119, v92);
LABEL_19:
      swift_release();
      return;
    }
    goto LABEL_33;
  }
  uint64_t v97 = v13;
  unint64_t v102 = v36;
  long long v42 = (uint8_t *)swift_slowAlloc();
  uint64_t v43 = swift_slowAlloc();
  *(void *)&long long v122 = v43;
  *(_DWORD *)long long v42 = 136446210;
  id v44 = [v24 identifier];
  if (v44)
  {
    double v45 = v44;
    uint64_t v46 = sub_191CF5338();
    unint64_t v48 = v47;

    uint64_t v126 = sub_191C5C36C(v46, v48, (uint64_t *)&v122);
    sub_191CF5C08();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v27, v40, "[%{public}s] Creating session...", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v43, -1, -1);
    MEMORY[0x192FE5F00](v42, -1, -1);

    uint64_t v27 = *(NSObject **)(v118 + 8);
    ((void (*)(char *, unint64_t))v27)(v23, v102);
    goto LABEL_21;
  }
LABEL_34:

  __break(1u);
  __break(1u);
}

void sub_191C7017C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_191C6E8FC(a1);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v4 & 1;
}

void sub_191C701AC(void *a1, void (*a2)(void), uint64_t a3, double a4)
{
  uint64_t v8 = sub_191CF3858();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92F2410);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a1;
  uint64_t v14 = sub_191CF3838();
  int v15 = sub_191CF5928();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    int v24 = v15;
    uint64_t v25 = a3;
    uint64_t v26 = a2;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    *(_DWORD *)uint64_t v16 = 136446466;
    id v17 = objc_msgSend(v13, sel_identifier);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_191CF5338();
      unint64_t v21 = v20;

      uint64_t v27 = sub_191C5C36C(v19, v21, &v28);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      uint64_t v27 = *(void *)&a4;
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v14, (os_log_type_t)v24, "[%{public}s] Unable to create new WidgetExtensionSession because begin request watchdogged after %fs", (uint8_t *)v16, 0x16u);
      uint64_t v22 = v23;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v22, -1, -1);
      MEMORY[0x192FE5F00](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v26(0);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a2(0);
  }
}

void sub_191C7049C(uint64_t a1, char *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void *a7, char *a8, uint64_t a9, char *a10, uint64_t a11)
{
  uint64_t v86 = a8;
  uint64_t v87 = a2;
  long long v88 = a7;
  uint64_t v93 = a3;
  uint64_t v94 = a5;
  long long v91 = a4;
  uint64_t v84 = sub_191CF3678();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  unint64_t v82 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_191CF3618();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191CF31D8();
  uint64_t v85 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_191CF3658();
  uint64_t v18 = *(void (***)(char *, void **, uint64_t))(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v78 - v22;
  uint64_t v92 = (char *)sub_191CF3858();
  uint64_t v90 = *((void *)v92 - 1);
  MEMORY[0x1F4188790](v92);
  long long v89 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E07E8);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (void **)((char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191B01614(a1, (uint64_t)v27, qword_1E92E07E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = *v27;
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v29 = (uint64_t)v92;
    uint64_t v30 = __swift_project_value_buffer((uint64_t)v92, (uint64_t)qword_1E92F2410);
    uint64_t v31 = v89;
    uint64_t v32 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v30, v29);
    int v33 = v87;
    id v34 = v28;
    uint64_t v35 = v33;
    id v36 = v34;
    uint64_t v37 = sub_191CF3838();
    os_log_type_t v38 = sub_191CF5948();
    if (!os_log_type_enabled(v37, v38))
    {

      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v29);
      goto LABEL_13;
    }
    uint64_t v39 = swift_slowAlloc();
    long long v88 = (void *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v97[0] = v40;
    *(_DWORD *)uint64_t v39 = 136446466;
    id v41 = objc_msgSend(v35, sel_identifier);
    if (v41)
    {
      long long v42 = v41;
      uint64_t v43 = sub_191CF5338();
      unint64_t v45 = v44;

      v96[0] = (id)sub_191C5C36C(v43, v45, v97);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2112;
      v96[0] = v36;
      id v46 = v36;
      sub_191CF5C08();
      unint64_t v47 = v88;
      void *v88 = v36;

      _os_log_impl(&dword_191AF4000, v37, v38, "[%{public}s] Failed to launch extension with error: %@.", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v47, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v40, -1, -1);
      MEMORY[0x192FE5F00](v39, -1, -1);

      (*(void (**)(char *, char *))(v90 + 8))(v89, v92);
LABEL_13:
      uint64_t v65 = v93;
      uint64_t v64 = v94;
      uint64_t v66 = v91;
      swift_retain();
      sub_191BBE068(v65, v66, v64);

      swift_release();
      return;
    }

    __break(1u);
  }
  else
  {
    v18[4](v23, v27, v17);
    long long v89 = (char *)v18;
    uint64_t v90 = v17;
    unint64_t v48 = v18[2];
    uint64_t v87 = v23;
    v48(v21, (void **)v23, v17);
    sub_191C7B730(v86, (uint64_t)v97);
    uint64_t v49 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v16, a11, v14);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v50 = v93;
    uint64_t v51 = (uint64_t)v16;
    if (sub_191BBDFD4())
    {
      uint64_t v52 = v50;
      uint64_t v86 = a10;
      long long v91 = (void (*)(void))v21;
      if (qword_1E92E0710 != -1) {
        swift_once();
      }
      __swift_project_value_buffer((uint64_t)v92, (uint64_t)qword_1E92F2410);
      swift_retain();
      os_log_type_t v53 = sub_191CF3838();
      os_log_type_t v54 = sub_191CF5948();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        uint64_t v92 = v16;
        uint64_t v57 = v56;
        v96[0] = (id)v56;
        *(_DWORD *)uint64_t v55 = 136446210;
        uint64_t v84 = (uint64_t)(v55 + 4);
        uint64_t v58 = v14;
        uint64_t v59 = v49;
        uint64_t v60 = *(void *)(v52 + 16);
        unint64_t v61 = *(void *)(v52 + 24);
        swift_bridgeObjectRetain();
        uint64_t v62 = v60;
        uint64_t v14 = v58;
        uint64_t v95 = sub_191C5C36C(v62, v61, (uint64_t *)v96);
        sub_191CF5C08();
        swift_release();
        uint64_t v49 = v59;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_191AF4000, v53, v54, "[%{public}s] Original request finally completed, but it had already watchdogged. Skipping session creation.", v55, 0xCu);
        swift_arrayDestroy();
        uint64_t v63 = v57;
        uint64_t v51 = (uint64_t)v92;
        MEMORY[0x192FE5F00](v63, -1, -1);
        MEMORY[0x192FE5F00](v55, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();

        swift_release();
      }
      uint64_t v75 = v89;
      uint64_t v74 = v90;
      unint64_t v21 = (char *)v91;
      uint64_t v76 = v87;
    }
    else
    {
      uint64_t v92 = v16;
      uint64_t v93 = a9;
      uint64_t v67 = swift_projectBox();
      swift_beginAccess();
      uint64_t v68 = v14;
      uint64_t v69 = v80;
      id v70 = v79;
      uint64_t v71 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v67, v81);
      uint64_t v72 = (uint64_t)v82;
      sub_191CF35B8();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      uint64_t v14 = v68;
      uint64_t v51 = (uint64_t)v92;
      uint64_t v73 = sub_191C79E0C(v72, (uint64_t)v21, v97, v93, (uint64_t)a10, (uint64_t)v92);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v72, v84);
      v91(v73);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v75 = v89;
      uint64_t v74 = v90;
      uint64_t v76 = v87;
    }
    unint64_t v77 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
    v77(v76, v74);
    swift_release();
    v77(v21, v74);
    sub_191C7B668((uint64_t)v97);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v14);
  }
}

void sub_191C70E80(uint64_t a1, const char *a2)
{
  uint64_t v4 = sub_191CF3678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191CF3858();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E92F2410);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = sub_191CF3838();
  os_log_type_t v10 = sub_191CF5948();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = a2;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v14 = sub_191CF3668();
    uint64_t v18 = sub_191C5C36C(v14, v15, &v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_191AF4000, v9, v10, v17, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v13, -1, -1);
    MEMORY[0x192FE5F00](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t WidgetExtensionSessionFactory.deinit()
{
  return v0;
}

uint64_t WidgetExtensionSessionFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_191C710F0()
{
  type metadata accessor for _RunningBoardInterface();
  uint64_t result = swift_allocObject();
  qword_1E92F2450 = result;
  return result;
}

uint64_t sub_191C7111C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier);
  if (*(void *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier + 8))
  {
    uint64_t v6 = *v5;
  }
  else
  {
    uint64_t v7 = v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
    sub_191CF3668();
    sub_191CF34C8();
    uint64_t v6 = static WidgetExtensionSession.makeLoggingIdentifier(sessionIdentifier:extensionBundleIdentifier:deviceIdentifier:)(v7, (uint64_t)v4, 0, 0);
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t *v5 = v6;
    v5[1] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_191C712A8()
{
  uint64_t v1 = v0;
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3858();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  uint64_t v3 = sub_191CF3838();
  os_log_type_t v4 = sub_191CF5948();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v18 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_191C7111C();
    sub_191C5C36C(v7, v8, &v18);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v3, v4, "%{public}s Session deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v6, -1, -1);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  os_log_type_t v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  uint64_t v11 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionIdentity;
  uint64_t v12 = sub_191CF3678();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionProcess;
  uint64_t v14 = sub_191CF3658();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
  uint64_t v16 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_rbsInterface);
  sub_191B01770(v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, &qword_1E92E0698);
  swift_unknownObjectRelease();

  return v1;
}

uint64_t sub_191C715E8()
{
  sub_191C712A8();

  return swift_deallocClassInstance();
}

uint64_t sub_191C71640(unint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_191CF5EB8();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = a3;
    uint64_t v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x192FE4B60](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      ++v9;
      objc_msgSend(v10, sel_copyAsCHSAvocadoDescriptor, v12);

      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
    }
    while (v6 != v9);
    a3 = v12;
    uint64_t v7 = v13;
  }
  a3(v7, a2);

  return swift_bridgeObjectRelease();
}

void sub_191C71838(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  void v14[5] = a3;
  v14[6] = a6;
  v14[7] = a7;
  v18[4] = sub_191C7FA28;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_191C7201C;
  v18[3] = &block_descriptor_377;
  uint64_t v15 = _Block_copy(v18);
  id v16 = a4;
  id v17 = a5;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getCurrentDescriptorsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_191C71954(unint64_t a1, void *a2, void *a3, void (*a4)(uint64_t (*)(), void *, void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = a2;
  id v13 = a3;
  uint64_t v14 = sub_191C795D0(a1, (uint64_t)v12, (uint64_t)v13, (uint64_t)&v17, (void (*)(uint64_t, uint64_t))sub_191C71A44);

  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a6;
  v15[3] = a7;
  v15[4] = v14;
  swift_retain();
  a4(sub_191C7FAC0, v15, 0);
  return swift_release();
}

uint64_t sub_191C71A44(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v3, sel_mutableCopy);
  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1EB449E60);
  swift_dynamicCast();
  uint64_t v9 = *(void **)&v43[0];
  objc_msgSend(*(id *)&v43[0], sel_setExtensionIdentity_, a1);
  uint64_t v10 = a1 + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449C68);
  id v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v10, 1, v11))
  {
    swift_endAccess();
LABEL_4:
    int v17 = 0;
    char v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_5;
  }
  uint64_t v13 = sub_191CF34D8();
  uint64_t v15 = v14;
  swift_endAccess();
  sub_191B016E0(0, &qword_1E92E0BE8);
  id v16 = sub_191C77818(v13, v15, 1);
  if (!v16) {
    goto LABEL_4;
  }
  id v42 = v16;
  unsigned int v36 = objc_msgSend(v16, sel_developerType);
  if (v36 != 1)
  {
    int v17 = v36;
    char v18 = 1;
    uint64_t v19 = v42;
    goto LABEL_5;
  }
  id v37 = objc_msgSend(a2, sel_infoDictionary);
  id v41 = v37;
  os_log_type_t v38 = (void *)sub_191CF5318();
  sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  id v39 = objc_msgSend(v37, sel_objectForKey_ofClass_, v38, swift_getObjCClassFromMetadata());

  if (v39)
  {
    sub_191CF5C58();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v43, 0, 32);
  }
  sub_191B015B0((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_1EB44BC90);
  if (v45)
  {
    if (swift_dynamicCast()) {
      goto LABEL_31;
    }
  }
  else
  {
    sub_191B01770((uint64_t)v44, (uint64_t *)&unk_1EB44BC90);
  }
  swift_beginAccess();
  if (!v12(v10, 1, v11))
  {
    sub_191CF34D8();
    swift_endAccess();
LABEL_31:
    uint64_t v40 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_endAccess();
  uint64_t v40 = 0;
LABEL_32:
  uint64_t v19 = v42;
  objc_msgSend(v9, sel_setNativeContainerBundleIdentifier_, v40);

  int v17 = 1;
  char v18 = 1;
LABEL_5:
  unsigned int v20 = objc_msgSend(v9, sel_enablesMultipleTapTargets);
  if (v17 == 1) {
    char v21 = v18;
  }
  else {
    char v21 = 0;
  }
  if ((v21 & 1) == 0 && v20) {
    objc_msgSend(v9, sel_setEnablesMultipleTapTargets_, 0);
  }
  id v22 = objc_msgSend(v3, sel_widgetVisibility);
  id v23 = objc_msgSend(a2, sel_URL);
  sub_191CF3048();

  uint64_t v24 = sub_191CF3078();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 0, 1, v24);
  uint64_t v25 = sub_191C7934C((uint64_t)v22, (uint64_t)v8);
  sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1EB44BBA8);
  objc_msgSend(v9, sel_setWidgetVisibility_, v25);
  id v26 = objc_msgSend(v9, sel_sdkVersion);
  uint64_t v27 = sub_191CF5338();
  uint64_t v29 = v28;

  if (v27 == sub_191CF5338() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v31 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0) {
      goto LABEL_17;
    }
  }
  id v32 = objc_msgSend(a2, sel_SDKVersion);
  if (v32)
  {
    int v33 = v32;
    objc_msgSend(v9, sel_setSdkVersion_, v32);
  }
LABEL_17:
  objc_msgSend(v9, sel_copy);
  sub_191CF5C58();

  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1EB44C5B0);
  swift_dynamicCast();
  uint64_t v34 = *(void *)&v43[0];

  return v34;
}

uint64_t sub_191C7201C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_191B016E0(0, &qword_1EB44C5B0);
  uint64_t v2 = sub_191CF5538();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_191C720B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_191B016E0(0, a4);
  uint64_t v6 = (void *)sub_191CF5528();
  if (a2) {
    uint64_t v7 = sub_191CF2FD8();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v6);
}

void sub_191C72158(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  void v14[5] = a3;
  v14[6] = a6;
  v14[7] = a7;
  v18[4] = sub_191C7F8D4;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_191C724C0;
  v18[3] = &block_descriptor_359;
  uint64_t v15 = _Block_copy(v18);
  id v16 = a4;
  id v17 = a5;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getAllCurrentDescriptorsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_191C72274(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t (*)(), void *, void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9 = a2;
  id v10 = a3;
  unint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = sub_191C795D0(v11, (uint64_t)v9, (uint64_t)v10, (uint64_t)v33, (void (*)(uint64_t, uint64_t))sub_191C71A44);
  swift_bridgeObjectRelease();

  id v13 = v9;
  id v14 = v10;
  unint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_191C795D0(v15, (uint64_t)v13, (uint64_t)v14, (uint64_t)v32, (void (*)(uint64_t, uint64_t))sub_191C77AD4);
  swift_bridgeObjectRelease();

  id v17 = v13;
  id v18 = v14;
  unint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_191C795D0(v19, (uint64_t)v17, (uint64_t)v18, (uint64_t)v31, (void (*)(uint64_t, uint64_t))sub_191C77900);
  swift_bridgeObjectRelease();

  char v21 = (objc_class *)type metadata accessor for DescriptorFetchResult();
  id v22 = (char *)objc_allocWithZone(v21);
  uint64_t v23 = sub_191BBA5C8(v12);
  swift_bridgeObjectRelease();
  *(void *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v23;
  *(void *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v20;
  *(void *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v16;

  v30.receiver = v22;
  v30.super_class = v21;
  id v24 = objc_msgSendSuper2(&v30, sel_init);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a6;
  v25[3] = a7;
  v25[4] = v24;
  swift_retain();
  id v26 = v24;
  a4(sub_191C7F930, v25, 0);

  return swift_release();
}

void sub_191C724C0(uint64_t a1, void *a2)
{
}

uint64_t sub_191C724E0(int a1, int a2, void *aBlock, void (*a4)(uint64_t, void *))
{
  uint64_t v5 = _Block_copy(aBlock);
  _Block_copy(v5);
  uint64_t v6 = swift_retain();
  a4(v6, v5);
  _Block_release(v5);
  _Block_release(v5);

  return swift_release();
}

void sub_191C72774(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for PlaceholderRequest();
  unint64_t v11 = (void *)sub_191CF5528();
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_191C7F804;
  void v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_191C72898;
  v14[3] = &block_descriptor_337;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getPlaceholdersWithRequests_completion_, v11, v13);
  _Block_release(v13);
}

void sub_191C72898(uint64_t a1, void *a2)
{
}

void sub_191C728CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = (void *)sub_191CF5318();
  id v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a6;
  v13[5] = a7;
  v15[4] = sub_191C7F700;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_191C2AD74;
  v15[3] = &block_descriptor_318;
  id v14 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleURLSessionEventsFor_completion_, v12, v14);
  _Block_release(v14);
}

uint64_t sub_191C729E4(void (*a1)(uint64_t (*)(), uint64_t, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  swift_retain();
  a1(sub_191C7F70C, v7, 0);

  return swift_release();
}

uint64_t sub_191C72BDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v14 = (void *)sub_191CF5318();
  if (a6)
  {
    swift_unknownObjectRetain();
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (!v15) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a7;
  v16[5] = a8;
  v19[4] = sub_191C7F67C;
  v19[5] = v16;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_191C72898;
  v19[3] = &block_descriptor_299;
  id v17 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_attachPreviewAgentWithFrameworkPath_endpoint_handler_, v14, v15, v17);
  _Block_release(v17);

  return swift_unknownObjectRelease();
}

void sub_191C72D48(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_191C72F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_191CF2FD8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_191C730F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  id v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a5;
  v17[5] = a6;
  v19[4] = a8;
  v19[5] = v17;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_191C72898;
  v19[3] = a9;
  id v18 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a10, a4, v18);
  _Block_release(v18);
}

void sub_191C73348(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for ControlTemplateRequest();
  unint64_t v11 = (void *)sub_191CF5528();
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_191C7F420;
  void v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_191C6E3A0;
  v14[3] = &block_descriptor_243;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getControlTemplatesWithRequests_completion_, v11, v13);
  _Block_release(v13);
}

void sub_191C73498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for TimelineRequest();
  id v13 = (void *)sub_191CF5528();
  id v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a2;
  v14[3] = a3;
  v14[4] = a6;
  void v14[5] = a7;
  v16[4] = sub_191C7F3A4;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_191C72898;
  v16[3] = &block_descriptor_224;
  uint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getTimelinesWithRequests_isPreview_completion_, v13, a5 & 1, v15);
  _Block_release(v15);
}

void sub_191C73670(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = (objc_class *)type metadata accessor for TimelineRequest();
  id v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = a4;
  aBlock[0] = a5;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  char v21 = v17;
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = aBlock[0];
  *(void *)&v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v20;
  v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = 2;
  id v22 = v20;

  v31.receiver = v21;
  v31.super_class = v16;
  id v23 = objc_msgSendSuper2(&v31, sel_init);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_191CF9150;
  *(void *)(v24 + 32) = v23;
  sub_191CF5558();
  id v25 = v23;
  id v26 = (void *)sub_191CF5528();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a2;
  v27[3] = a3;
  v27[4] = a8;
  v27[5] = a9;
  aBlock[4] = sub_191C7F2FC;
  void aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C72898;
  aBlock[3] = &block_descriptor_205;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getTimelinesWithRequests_isPreview_completion_, v26, a7 & 1, v28);
  _Block_release(v28);
}

void sub_191C73A38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_191C7F1C0;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_191C73C14;
  uint64_t v12[3] = &block_descriptor_186;
  unint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getAppIntentsXPCListenerEndpointWithCompletion_, v11);
  _Block_release(v11);
}

uint64_t sub_191C73B38(void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t (*)(), void *, void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a7;
  v15[3] = a8;
  v15[4] = a1;
  v15[5] = a2;
  void v15[6] = a3;
  v15[7] = a4;
  id v16 = a1;
  swift_retain();
  sub_191B169E8(a2, a3);
  id v17 = a4;
  a5(sub_191C7F22C, v15, 0);

  return swift_release();
}

uint64_t sub_191C73C14(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(void *, void *, unint64_t, void *))(a1 + 32);
  if (a3)
  {
    swift_retain();
    id v8 = a2;
    id v9 = v5;
    uint64_t v5 = (void *)sub_191CF30C8();
    unint64_t v11 = v10;
  }
  else
  {
    swift_retain();
    id v12 = a2;
    unint64_t v11 = 0xF000000000000000;
  }
  id v13 = a4;
  v7(a2, v5, v11, a4);

  sub_191B170C8((uint64_t)v5, v11);

  return swift_release();
}

void sub_191C73E10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for ActivityWidgetRequest(0);
  unint64_t v11 = (void *)sub_191CF5528();
  id v12 = (void *)swift_allocObject();
  v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_191C7F120;
  void v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_191C72898;
  v14[3] = &block_descriptor_168;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getActivitiesWithRequests_completion_, v11, v13);
  _Block_release(v13);
}

uint64_t sub_191C73F34(void *a1, void (*a2)(uint64_t, void *, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = (void *)swift_allocObject();
  v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a1;
  id v13 = a1;
  swift_retain();
  a2(a7, v12, 0);

  return swift_release();
}

uint64_t sub_191C74000(uint64_t a1, int a2, int a3, void *aBlock, void (*a5)(void), void (*a6)(uint64_t, uint64_t, void *))
{
  id v9 = _Block_copy(aBlock);
  a5(0);
  uint64_t v10 = sub_191CF5538();
  _Block_copy(v9);
  swift_retain();
  a6(v10, a1, v9);
  _Block_release(v9);
  _Block_release(v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_191C740B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_allocObject();
  v12[2] = a2;
  uint64_t v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_191C7F090;
  void v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_191C6E3A0;
  v14[3] = &block_descriptor_149_0;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getWidgetRelevancesWithRequest_completion_, a4, v13);
  _Block_release(v13);
}

uint64_t sub_191C741BC(void *a1, void (*a2)(uint64_t, void *, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = (void *)swift_allocObject();
  v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a1;
  swift_retain();
  id v13 = a1;
  a2(a7, v12, 0);

  return swift_release();
}

id sub_191C743B0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_191C744B8(v0, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  id result = (id)swift_release();
  if (v7[0] == 1)
  {
    id v4 = *(void **)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection);
    id v5 = objc_msgSend(v4, sel_remoteObjectProxy);
    sub_191CF5C58();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E06F0);
    if (swift_dynamicCast())
    {
      objc_msgSend(v6, sel_invalidate);
      swift_unknownObjectRelease();
    }
    return objc_msgSend(v4, sel_invalidate);
  }
  return result;
}

void sub_191C744B8(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated))
  {
    char v5 = 0;
  }
  else
  {
    sub_191B01614(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, (uint64_t)&v35, &qword_1E92E0698);
    uint64_t v41 = v2;
    if (v36)
    {
      sub_191B004A8(&v35, (uint64_t)v38);
      id v7 = sub_191C7701C(0xD000000000000017, 0x8000000191D11B00);
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = v39;
        uint64_t v10 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        uint64_t v36 = sub_191B016E0(0, &qword_1E92E06A0);
        id v37 = &protocol witness table for RBSAssertion;
        *(void *)&long long v35 = v8;
        id v11 = v8;
        uint64_t v12 = sub_191CF3668();
        (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v35, v12, v13, v9, v10);
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    }
    else
    {
      sub_191B01770((uint64_t)&v35, &qword_1E92E0698);
    }
    unint64_t v14 = 0x1E92E0000uLL;
    if (*(void *)(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion))
    {
      swift_unknownObjectRetain();
      self;
      uint64_t v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        id v16 = (void *)v15;
        uint64_t v34 = v4;
        if (qword_1E92E0710 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_191CF3858();
        __swift_project_value_buffer(v17, (uint64_t)qword_1E92F2410);
        swift_retain_n();
        id v18 = sub_191CF3838();
        os_log_type_t v19 = sub_191CF5948();
        if (os_log_type_enabled(v18, v19))
        {
          int v33 = a2;
          id v20 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = swift_slowAlloc();
          v38[0] = v21;
          *(_DWORD *)id v20 = 136446210;
          uint64_t v22 = sub_191C7111C();
          *(void *)&long long v35 = sub_191C5C36C(v22, v23, v38);
          sub_191CF5C08();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_191AF4000, v18, v19, "%{public}s WidgetExtensionRun invalidated", v20, 0xCu);
          swift_arrayDestroy();
          uint64_t v24 = v21;
          unint64_t v14 = 0x1E92E0000;
          MEMORY[0x192FE5F00](v24, -1, -1);
          id v25 = v20;
          a2 = v33;
          MEMORY[0x192FE5F00](v25, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v4 = v34;
        objc_msgSend(v16, sel_invalidate);
      }
      swift_unknownObjectRelease();
    }
    if (*(void *)(v14 + 1808) != -1) {
      swift_once();
    }
    uint64_t v26 = sub_191CF3858();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E92F2410);
    swift_retain_n();
    uint64_t v27 = sub_191CF3838();
    os_log_type_t v28 = sub_191CF5948();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v38[0] = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      uint64_t v31 = sub_191C7111C();
      *(void *)&long long v35 = sub_191C5C36C(v31, v32, v38);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v27, v28, "%{public}s Session invalidated", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v30, -1, -1);
      MEMORY[0x192FE5F00](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    char v5 = 1;
    *(unsigned char *)(a1 + v4) = 1;
  }
  *a2 = v5;
}

uint64_t sub_191C74ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = *(void **)(v3 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  id v8 = (void *)swift_allocObject();
  long long v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  aBlock[4] = sub_191C7EFFC;
  void aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C6E398;
  aBlock[3] = &block_descriptor_134;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_191CF5C58();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E06F0);
  swift_dynamicCast();
  return v12;
}

uint64_t sub_191C74C2C(void *a1, uint64_t a2, void (*a3)(void *))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(result + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
    id v8 = *(os_unfair_lock_s **)(v7 + 16);
    swift_retain();
    os_unfair_lock_lock(v8);
    char v9 = *(unsigned char *)(v6 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
    swift_release();
    if ((v9 & 1) == 0)
    {
      if (qword_1E92E0710 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_191CF3858();
      __swift_project_value_buffer(v10, (uint64_t)qword_1E92F2410);
      swift_retain();
      id v11 = a1;
      swift_retain();
      id v12 = a1;
      uint64_t v13 = sub_191CF3838();
      os_log_type_t v14 = sub_191CF5948();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        id v16 = (void *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v22 = v20;
        *(_DWORD *)uint64_t v15 = 136446466;
        uint64_t v17 = sub_191C7111C();
        sub_191C5C36C(v17, v18, &v22);
        sub_191CF5C08();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2114;
        id v19 = a1;
        uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_191CF5C08();
        *id v16 = v21;

        _os_log_impl(&dword_191AF4000, v13, v14, "%{public}s Unexpected error on session: %{public}@", (uint8_t *)v15, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v16, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v20, -1, -1);
        MEMORY[0x192FE5F00](v15, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      sub_191C743B0();
      a3(a1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_191C74F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0680);
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)a1;
  char v12 = *(unsigned char *)(a1 + 8);
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_191CF3858();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  os_log_type_t v14 = sub_191CF3838();
  os_log_type_t v15 = sub_191CF5948();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v40 = a2;
    uint64_t v18 = v17;
    v48[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v41 = a3;
    uint64_t v19 = sub_191C7111C();
    uint64_t v50 = sub_191C5C36C(v19, v20, v48);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v50 = v46;
    char v51 = v12;
    unint64_t v21 = WidgetExtensionSessionOperation.description.getter();
    uint64_t v50 = sub_191C5C36C(v21, v22, v48);
    a3 = v41;
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    uint64_t v23 = v18;
    a2 = v40;
    MEMORY[0x192FE5F00](v23, -1, -1);
    MEMORY[0x192FE5F00](v16, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v46;
  *(void *)(v25 + 16) = v6;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v12;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = a2;
  *(void *)(v25 + 56) = a3;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_191C7C15C;
  *(void *)(v27 + 24) = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E06C8);
  sub_191B00398(&qword_1E92E06C0, &qword_1E92E06C8);
  sub_191CF38C8();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = v24;
  *(void *)(v30 + 32) = v26;
  LOBYTE(v29) = v12;
  *(unsigned char *)(v30 + 40) = v12;
  uint64_t v31 = v43;
  *(void *)(v30 + 48) = v42;
  *(void *)(v30 + 56) = v31;
  *(void *)(v30 + 64) = v28;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v6;
  *(void *)(v32 + 24) = v26;
  *(unsigned char *)(v32 + 32) = v29;
  sub_191B00398(&qword_1E92E0678, &qword_1E92E0680);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v33 = v45;
  uint64_t v34 = sub_191CF3918();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(void *)(v28 + 16) = v34;
  swift_release();
  uint64_t v35 = *(void *)(v6 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  uint64_t v36 = *(os_unfair_lock_s **)(v35 + 16);
  swift_retain();
  os_unfair_lock_lock(v36);
  uint64_t v37 = *(void *)(v28 + 16);
  if (v37)
  {
    swift_beginAccess();
    swift_retain_n();
    sub_191B43C7C(&v49, v37);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v33);
  swift_release();
  return swift_release();
}

uint64_t sub_191C754C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v76 = a8;
  unint64_t v77 = a7;
  uint64_t v72 = a6;
  uint64_t v78 = a4;
  uint64_t v79 = a1;
  uint64_t v71 = sub_191CF3178();
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v71);
  uint64_t v68 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v69 = (char *)&v67 - v13;
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_191CF3858();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  os_log_type_t v15 = sub_191CF3838();
  os_log_type_t v16 = sub_191CF5948();
  BOOL v17 = os_log_type_enabled(v15, v16);
  int v73 = a5;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v86[0] = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v20 = sub_191C7111C();
    uint64_t aBlock = sub_191C5C36C(v20, v21, v86);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t aBlock = v78;
    LOBYTE(v81) = a5;
    unint64_t v22 = WidgetExtensionSessionOperation.description.getter();
    uint64_t aBlock = sub_191C5C36C(v22, v23, v86);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v19, -1, -1);
    MEMORY[0x192FE5F00](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v79;
  *(void *)(v24 + 24) = a2;
  uint64_t v75 = a2;
  swift_retain();
  uint64_t v74 = sub_191C74ABC((uint64_t)sub_191C7EF60, v24);
  uint64_t v25 = swift_release();
  unint64_t v26 = MEMORY[0x192FE22F0](v25);
  LODWORD(v24) = v26;
  unsigned int v28 = v27;
  unsigned int v30 = v29;
  unsigned int v32 = v31;
  unint64_t v33 = HIDWORD(v26);
  unint64_t v34 = HIDWORD(v27);
  unint64_t v35 = HIDWORD(v29);
  unint64_t v36 = HIDWORD(v31);
  id v37 = objc_allocWithZone(MEMORY[0x1E4F4F6A8]);
  uint64_t aBlock = __PAIR64__(v33, v24);
  unint64_t v81 = __PAIR64__(v34, v28);
  unint64_t v82 = (void (*)(uint64_t, void *))__PAIR64__(v35, v30);
  uint64_t v83 = (void *)__PAIR64__(v36, v32);
  id v38 = objc_msgSend(v37, sel_initWithAuditToken_, &aBlock);
  objc_msgSend(v38, sel_pid);

  if (BSPIDIsBeingDebugged())
  {
    swift_retain_n();
    uint64_t v39 = sub_191CF3838();
    os_log_type_t v40 = sub_191CF5948();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v86[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446466;
      uint64_t v43 = sub_191C7111C();
      uint64_t aBlock = sub_191C5C36C(v43, v44, v86);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      uint64_t aBlock = v78;
      LOBYTE(v81) = v73;
      unint64_t v45 = WidgetExtensionSessionOperation.description.getter();
      uint64_t aBlock = sub_191C5C36C(v45, v46, v86);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v42, -1, -1);
      MEMORY[0x192FE5F00](v41, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v49 = v75;
  }
  else
  {
    unint64_t v47 = *(void (**)(uint64_t *))(a3
                                           + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutProvider);
    uint64_t aBlock = v78;
    char v48 = v73;
    LOBYTE(v81) = v73;
    v47(&aBlock);
    uint64_t v49 = v75;
    if ((v50 & 1) == 0)
    {
      char v51 = (id *)(v72 + 16);
      uint64_t aBlock = 0;
      unint64_t v81 = 0xE000000000000000;
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0x5B6E6F6973736553;
      unint64_t v81 = 0xE800000000000000;
      sub_191CF31D8();
      sub_191C7EED0(&qword_1E92E0670, MEMORY[0x1E4F27990]);
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      id v52 = objc_allocWithZone(MEMORY[0x1E4F4F860]);
      os_log_type_t v53 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      id v54 = objc_msgSend(v52, sel_initWithIdentifier_, v53);

      swift_beginAccess();
      id v55 = *v51;
      *char v51 = v54;

      swift_beginAccess();
      if (*v51)
      {
        id v56 = *v51;
        uint64_t v57 = v68;
        sub_191CF3168();
        uint64_t v58 = v69;
        sub_191CF3128();
        uint64_t v59 = *(void (**)(char *, uint64_t))(v70 + 8);
        uint64_t v60 = v71;
        v59(v57, v71);
        unint64_t v61 = (void *)sub_191CF3138();
        v59(v58, v60);
        uint64_t v62 = *(void *)(a3 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutQueue);
        uint64_t v63 = swift_allocObject();
        uint64_t v64 = v78;
        *(void *)(v63 + 16) = a3;
        *(void *)(v63 + 24) = v64;
        *(unsigned char *)(v63 + 32) = v48;
        *(void *)(v63 + 40) = v79;
        *(void *)(v63 + 48) = v49;
        uint64_t v84 = sub_191C7EFD4;
        uint64_t v85 = v63;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        unint64_t v81 = 1107296256;
        unint64_t v82 = sub_191C724C0;
        uint64_t v83 = &block_descriptor_127;
        uint64_t v65 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v56, sel_scheduleForDate_leewayInterval_queue_handler_, v61, v62, v65, 1.0);
        _Block_release(v65);
      }
    }
  }
  v77(v74, v79, v49);
  return swift_unknownObjectRelease();
}

id sub_191C75CEC(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(id, void, uint64_t))
{
  uint64_t v41 = MEMORY[0x192FE22F0]();
  unint64_t v42 = v6;
  int v43 = v7;
  int v44 = v8;
  int v45 = v9;
  int v46 = v10;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6A8]), sel_initWithAuditToken_, &v41);
  objc_msgSend(v11, sel_pid);

  if (BSPIDIsBeingDebugged())
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_191CF3858();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E92F2410);
    swift_retain_n();
    uint64_t v13 = sub_191CF3838();
    os_log_type_t v14 = sub_191CF5948();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v39 = v16;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v17 = sub_191C7111C();
      uint64_t v41 = sub_191C5C36C(v17, v18, &v39);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v41 = a3;
      LOBYTE(v42) = a4;
      unint64_t v19 = WidgetExtensionSessionOperation.description.getter();
      uint64_t v41 = sub_191C5C36C(v19, v20, &v39);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v16, -1, -1);
      MEMORY[0x192FE5F00](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_191CF3858();
    __swift_project_value_buffer(v21, (uint64_t)qword_1E92F2410);
    swift_retain_n();
    unint64_t v22 = sub_191CF3838();
    os_log_type_t v23 = sub_191CF5948();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v39 = v25;
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v26 = sub_191C7111C();
      uint64_t v41 = sub_191C5C36C(v26, v27, &v39);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      uint64_t v41 = a3;
      LOBYTE(v42) = a4;
      unint64_t v28 = WidgetExtensionSessionOperation.description.getter();
      uint64_t v41 = sub_191C5C36C(v28, v29, &v39);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v25, -1, -1);
      MEMORY[0x192FE5F00](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    uint64_t v41 = 0xD000000000000020;
    unint64_t v42 = 0x8000000191D11AD0;
    uint64_t v39 = a3;
    char v40 = a4;
    WidgetExtensionSessionOperation.description.getter();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t v30 = v41;
    uint64_t v31 = v42;
    uint64_t v32 = sub_191CF5338();
    id v34 = sub_191BDA6B4(v32, v33, 1001, 0, v30, v31);
    a5(v34, 0, 1);
  }
  return objc_msgSend(a1, sel_invalidate);
}

void sub_191C761EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_191C76258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E06C8);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_191CF38B8();
  *a3 = result;
  return result;
}

uint64_t sub_191C762E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1, uint64_t a2, char a3), uint64_t))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  a3(sub_191C7EF20, v6);

  return swift_release();
}

uint64_t sub_191C7637C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  os_log_type_t v14 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  uint64_t v17 = (id *)(a3 + 16);
  swift_beginAccess();
  if (*v17) {
    objc_msgSend(*v17, sel_cancel);
  }
  swift_beginAccess();
  if (*v17) {
    objc_msgSend(*v17, sel_invalidate);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E06A8);
  if (v14)
  {
    id v50 = v14;
    id v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    if (!swift_dynamicCast())
    {
      uint64_t result = sub_191CF6338();
      __break(1u);
      return result;
    }
    uint64_t v47 = a4;
    char v48 = a5;
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F2410);
    swift_retain_n();
    id v20 = v53;
    uint64_t v21 = sub_191CF3838();
    os_log_type_t v22 = sub_191CF5948();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v46 = a7;
      uint64_t v23 = swift_slowAlloc();
      int v44 = (void *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v49 = v45;
      *(_DWORD *)uint64_t v23 = 136446722;
      uint64_t v24 = sub_191C7111C();
      uint64_t v51 = sub_191C5C36C(v24, v25, &v49);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v51 = v47;
      char v52 = a5;
      unint64_t v26 = WidgetExtensionSessionOperation.description.getter();
      uint64_t v51 = sub_191C5C36C(v26, v27, &v49);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2112;
      uint64_t v51 = (uint64_t)v20;
      id v28 = v20;
      sub_191CF5C08();
      *int v44 = v20;

      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v44, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v45, -1, -1);
      uint64_t v29 = v23;
      a7 = v46;
      MEMORY[0x192FE5F00](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v30 = objc_msgSend(v20, sel_domain, v44);
    uint64_t v31 = sub_191CF5338();
    uint64_t v33 = v32;

    if (v31 == sub_191CF5338() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v35 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_19;
      }
    }
    if (objc_msgSend(v20, sel_code) == (id)1001)
    {
      uint64_t v51 = v47;
      char v52 = v48;
      unint64_t v36 = WidgetExtensionSessionOperation.description.getter();
      unint64_t v38 = v37;
      uint64_t v39 = a6;
      id v40 = v20;
      swift_retain();
      sub_191C7DFF4(v36, v38, v16, v39, a7, v40);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_20:

      goto LABEL_21;
    }
LABEL_19:
    id v41 = v20;
    a6((uint64_t)v20);
    goto LABEL_20;
  }
LABEL_21:
  uint64_t v42 = *(void *)(v16 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  int v43 = *(os_unfair_lock_s **)(v42 + 16);
  swift_retain();
  os_unfair_lock_lock(v43);
  swift_beginAccess();
  if (*(void *)(a8 + 16))
  {
    swift_retain();
    sub_191CF3888();
    swift_beginAccess();
    sub_191C78318();
    swift_endAccess();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  *(void *)(a8 + 16) = 0;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_191C76938(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_191C76968(uint64_t (**a1)(void))
{
  uint64_t v1 = *a1;
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191CF3858();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  uint64_t v3 = sub_191CF3838();
  os_log_type_t v4 = sub_191CF5948();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v14 = v1;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v7 = sub_191C7111C();
    sub_191C5C36C(v7, v8, &v15);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    unint64_t v9 = WidgetExtensionSessionOperation.description.getter();
    sub_191C5C36C(v9, v10, &v15);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v6, -1, -1);
    uint64_t v11 = v5;
    uint64_t v1 = v14;
    MEMORY[0x192FE5F00](v11, -1, -1);
  }
  else
  {

    uint64_t v12 = swift_release_n();
  }
  return v1(v12);
}

uint64_t sub_191C76B7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191CF3858();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  uint64_t v5 = sub_191CF3838();
  os_log_type_t v6 = sub_191CF5928();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136446722;
    uint64_t v9 = sub_191C7111C();
    sub_191C5C36C(v9, v10, &v13);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1026;
    sub_191CF5C08();
    *(_WORD *)(v7 + 18) = 2050;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v5, v6, "%{public}s Extension process termination watchdogged pid (%{public}d) after %{public}fs", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v8, -1, -1);
    MEMORY[0x192FE5F00](v7, -1, -1);
  }
  else
  {

    uint64_t v11 = swift_release_n();
  }
  return a3(v11);
}

void sub_191C76D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_191CF3858();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  uint64_t v8 = sub_191CF3838();
  os_log_type_t v9 = sub_191CF5948();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v14 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_191C7111C();
    sub_191C5C36C(v12, v13, &v14);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1026;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v8, v9, "%{public}s Extension process terminated pid (%{public}d)", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v11, -1, -1);
    MEMORY[0x192FE5F00](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_191BBDDE0(a6);
}

void sub_191C76F98(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

id sub_191C7701C(uint64_t a1, unint64_t a2)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  id v63 = (id)MEMORY[0x192FE22F0]();
  int v64 = v2;
  int v65 = v3;
  int v66 = v4;
  int v67 = v5;
  int v68 = v6;
  int v69 = v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4F6A8]), sel_initWithAuditToken_, &v63);
  int v9 = objc_msgSend(v8, sel_pid);

  if (v9 < 1) {
    return 0;
  }
  unint64_t v10 = MEMORY[0x192FE22F0]();
  unsigned int v11 = v10;
  int v13 = v12;
  int v15 = v14;
  int v17 = v16;
  unint64_t v18 = HIDWORD(v10);
  unint64_t v19 = HIDWORD(v12);
  unint64_t v20 = HIDWORD(v14);
  unint64_t v21 = HIDWORD(v16);
  id v22 = objc_allocWithZone(MEMORY[0x1E4F4F6A8]);
  id v63 = (id)__PAIR64__(v18, v11);
  int v64 = v13;
  int v65 = v19;
  int v66 = v15;
  int v67 = v20;
  int v68 = v17;
  int v69 = v21;
  id v23 = objc_msgSend(v22, sel_initWithAuditToken_, &v63);
  id v24 = objc_msgSend(v23, sel_pid);

  id v25 = objc_msgSend(self, sel_targetWithPid_, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v26 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  unint64_t v27 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_attributeWithDomain_name_, v26, v27);

  sub_191C7111C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_191CF9150;
  *(void *)(v29 + 32) = v28;
  id v63 = (id)v29;
  sub_191CF5558();
  id v30 = objc_allocWithZone(MEMORY[0x1E4F96318]);
  id v31 = v25;
  id v59 = v28;
  uint64_t v32 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  sub_191B016E0(0, &qword_1EB447150);
  uint64_t v33 = (void *)sub_191CF5528();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v30, sel_initWithExplanation_target_attributes_, v32, v31, v33);

  id v63 = 0;
  if (!objc_msgSend(v34, sel_acquireWithError_, &v63))
  {
    id v43 = v63;
    int v44 = (void *)sub_191CF2FE8();

    swift_willThrow();
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_191CF3858();
    __swift_project_value_buffer(v45, (uint64_t)qword_1E92F2410);
    swift_bridgeObjectRetain();
    swift_retain();
    id v46 = v44;
    swift_bridgeObjectRetain();
    swift_retain();
    id v47 = v44;
    char v48 = sub_191CF3838();
    os_log_type_t v49 = sub_191CF5928();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      id v55 = (void *)swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      id v63 = v57;
      *(_DWORD *)uint64_t v50 = 136446722;
      uint64_t v51 = sub_191C7111C();
      sub_191C5C36C(v51, v52, (uint64_t *)&v63);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a1, a2, (uint64_t *)&v63);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 22) = 2114;
      id v53 = v44;
      uint64_t v62 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      *id v55 = v62;

      _os_log_impl(&dword_191AF4000, v48, v49, "%{public}s unable to acquire %{public}s error: %{public}@", (uint8_t *)v50, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v55, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v57, -1, -1);
      MEMORY[0x192FE5F00](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    return 0;
  }
  uint64_t v58 = v31;
  uint64_t v35 = qword_1E92E0710;
  id v36 = v63;
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_191CF3858();
  __swift_project_value_buffer(v37, (uint64_t)qword_1E92F2410);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v38 = sub_191CF3838();
  os_log_type_t v39 = sub_191CF5948();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    id v56 = (void *)swift_slowAlloc();
    id v63 = v56;
    *(_DWORD *)uint64_t v40 = 136446466;
    uint64_t v41 = sub_191C7111C();
    sub_191C5C36C(v41, v42, (uint64_t *)&v63);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_191C5C36C(a1, a2, (uint64_t *)&v63);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v38, v39, "%{public}s acquired %{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v56, -1, -1);
    MEMORY[0x192FE5F00](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  return v34;
}

id sub_191C77808()
{
  return objc_msgSend(*v0, sel_invalidate);
}

id sub_191C77818(uint64_t a1, uint64_t a2, char a3)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  int v4 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_191CF2FE8();

    swift_willThrow();
  }
  return v5;
}

id sub_191C77900(uint64_t a1, void *a2)
{
  int v3 = v2;
  objc_msgSend(v3, sel_mutableCopy);
  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1E92E2770);
  swift_dynamicCast();
  objc_msgSend(v16, sel_setExtensionIdentity_, a1);
  id v6 = objc_msgSend(v16, sel_sdkVersion);
  uint64_t v7 = sub_191CF5338();
  uint64_t v9 = v8;

  if (v7 == sub_191CF5338() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_10;
    }
  }
  id v13 = objc_msgSend(a2, sel_SDKVersion);
  if (v13)
  {
    unint64_t v14 = v13;
    objc_msgSend(v16, sel_setSdkVersion_, v13);
  }
LABEL_10:
  objc_msgSend(v16, sel_copy);
  sub_191CF5C58();

  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1EB44A4A0);
  swift_dynamicCast();
  return v16;
}

id sub_191C77AD4(uint64_t a1, void *a2)
{
  objc_msgSend(v2, sel_mutableCopy);
  sub_191CF5C58();
  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1EB4498A0);
  swift_dynamicCast();
  id v5 = v20[0];
  objc_msgSend(v20[0], sel_setExtensionIdentity_, a1);
  uint64_t v6 = a1 + *MEMORY[0x1E4F58B78];
  swift_beginAccess();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449C68);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v9 = sub_191CF34D8();
    uint64_t v11 = v10;
    swift_endAccess();
    sub_191B016E0(0, &qword_1E92E0BE8);
    id v12 = sub_191C77818(v9, v11, 1);
    id v13 = v12;
    if (!v12 || objc_msgSend(v12, sel_developerType) != 1) {
      goto LABEL_4;
    }
    id v16 = objc_msgSend(a2, sel_infoDictionary);
    int v17 = (void *)sub_191CF5318();
    sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
    id v18 = objc_msgSend(v16, sel_objectForKey_ofClass_, v17, swift_getObjCClassFromMetadata());

    if (v18)
    {
      sub_191CF5C58();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)unint64_t v20 = 0u;
      long long v21 = 0u;
    }
    sub_191B015B0((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_1EB44BC90);
    if (v23)
    {
      if (swift_dynamicCast()) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_191B01770((uint64_t)v22, (uint64_t *)&unk_1EB44BC90);
    }
    swift_beginAccess();
    if (v8(v6, 1, v7))
    {
      swift_endAccess();
      unint64_t v19 = 0;
LABEL_19:
      objc_msgSend(v5, sel_setNativeContainerBundleIdentifier_, v19);

      goto LABEL_5;
    }
    sub_191CF34D8();
    swift_endAccess();
LABEL_18:
    unint64_t v19 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_endAccess();
  id v13 = 0;
LABEL_4:
  objc_msgSend(v20[0], sel_setHiddenControl_, 0);
LABEL_5:
  objc_msgSend(v5, sel_copy);
  sub_191CF5C58();

  swift_unknownObjectRelease();
  sub_191B016E0(0, &qword_1EB449D18);
  swift_dynamicCast();
  id v14 = v20[0];

  return v14;
}

id sub_191C77E90()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_191CF2FE8();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_191C77F5C(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_191C77F94@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_191C77FC4()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_191CF5D08();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_191C78538();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_191CF6468();
  swift_bridgeObjectRetain();
  sub_191CF5B68();
  uint64_t v4 = sub_191CF64C8();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_12;
  }
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  swift_retain();
  char v7 = sub_191CF5B58();
  swift_release();
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_12;
      }
      swift_retain();
      char v9 = sub_191CF5B58();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v0;
  uint64_t v13 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_191B462C0();
    uint64_t v11 = v13;
  }
  uint64_t v3 = *(void *)(*(void *)(v11 + 48) + 8 * v6);
  sub_191C788E8(v6);
  *uint64_t v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_191C781CC()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  swift_bridgeObjectRetain();
  sub_191CF50D8();
  uint64_t v2 = sub_191CF64C8();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((sub_191CF50C8() & 1) == 0)
  {
    uint64_t v5 = ~v3;
    do
    {
      unint64_t v4 = (v4 + 1) & v5;
      if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_9;
      }
    }
    while ((sub_191CF50C8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v0;
  uint64_t v10 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_191B46480();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 48) + 8 * v4);
  sub_191C78AA8(v4);
  *uint64_t v0 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_191C78318()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_191CF5D08();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_191C78704();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_191CF3898();
  sub_191C7EED0(&qword_1E92E06B0, MEMORY[0x1E4F1AB18]);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_191CF5268();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = ~v5;
  sub_191C7EED0(&qword_1E92E06B8, MEMORY[0x1E4F1AB18]);
  while ((sub_191CF52F8() & 1) == 0)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v0;
  uint64_t v11 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_191B46618();
    uint64_t v10 = v11;
  }
  uint64_t v3 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_191C78C54(v6);
  *uint64_t v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_191C78538()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_191CF5CD8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_191B44188(v3, v2);
  uint64_t v13 = v4;
  sub_191CF6468();
  swift_retain();
  sub_191CF5B68();
  uint64_t v5 = sub_191CF64C8();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
    swift_retain();
    char v8 = sub_191CF5B58();
    swift_release();
    if (v8)
    {
LABEL_6:
      swift_release();
      uint64_t v11 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_191C788E8(v7);
      if (sub_191CF5B58())
      {
        *uint64_t v1 = v13;
        return v11;
      }
      __break(1u);
    }
    else
    {
      uint64_t v9 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        swift_retain();
        char v10 = sub_191CF5B58();
        swift_release();
        if (v10) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_191C78704()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_191CF5CD8();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_191B44390(v2, v1);
  uint64_t v10 = v3;
  sub_191CF3898();
  sub_191C7EED0(&qword_1E92E06B0, MEMORY[0x1E4F1AB18]);
  swift_retain();
  uint64_t v4 = sub_191CF5268();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_191C7EED0(&qword_1E92E06B8, MEMORY[0x1E4F1AB18]);
    while ((sub_191CF52F8() & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & v7;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_191C78C54(v6);
    if (sub_191CF52F8())
    {
      *uint64_t v0 = v10;
      return v8;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_191C788E8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_191CF5CA8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_191CF6468();
        swift_retain();
        sub_191CF5B68();
        uint64_t v10 = sub_191CF64C8();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          id v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_191C78AA8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_191CF5CA8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_191CF6468();
        sub_191CF50D8();
        unint64_t v10 = sub_191CF64C8() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v2);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_191C78C54(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_191CF5CA8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      sub_191CF3898();
      sub_191C7EED0(&qword_1E92E06B0, MEMORY[0x1E4F1AB18]);
      do
      {
        uint64_t v10 = sub_191CF5268() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (void *)(v13 + 8 * v2);
            BOOL v15 = (void *)(v13 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
            {
              *uint64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_191C78E44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  v52[3] = type metadata accessor for _RunningBoardInterface();
  v52[4] = &off_1EE2A1798;
  v52[0] = a8;
  uint64_t v18 = (void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock;
  type metadata accessor for UnfairLock();
  uint64_t v20 = swift_allocObject();
  long long v21 = (_DWORD *)swift_slowAlloc();
  *(void *)(a11 + v19) = v20;
  *(void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_subscriptions) = MEMORY[0x1E4FBC870];
  _DWORD *v21 = 0;
  *(void *)(v20 + 16) = v21;
  *(void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion) = 0;
  *(unsigned char *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated) = 0;
  uint64_t v22 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionIdentity;
  uint64_t v23 = sub_191CF3678();
  uint64_t v45 = *(void *)(v23 - 8);
  uint64_t v46 = v23;
  uint64_t v48 = a1;
  (*(void (**)(uint64_t, uint64_t))(v45 + 16))(v22, a1);
  uint64_t v24 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionProcess;
  uint64_t v25 = sub_191CF3658();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v50 = a2;
  uint64_t v44 = v25;
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v24, a2);
  uint64_t v27 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
  uint64_t v28 = sub_191CF31D8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v49 = a3;
  uint64_t v43 = v28;
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v27, a3);
  *(void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection) = a4;
  *(void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutQueue) = a5;
  id v30 = (void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutProvider);
  *id v30 = a6;
  v30[1] = a7;
  sub_191AFEE28((uint64_t)v52, a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_rbsInterface);
  sub_191B01614(a9, a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, &qword_1E92E0698);
  *(unsigned char *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_shouldTakeExtensionAssertion) = a10;
  id v31 = a4;
  id v32 = a5;
  swift_retain();
  if (a10)
  {
    id v33 = sub_191C7701C(0xD000000000000012, 0x8000000191D11BF0);
    if (v33)
    {
      *(void *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion) = v33;
      swift_unknownObjectRelease();
    }
  }
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_191CF3858();
  __swift_project_value_buffer(v34, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  uint64_t v35 = sub_191CF3838();
  os_log_type_t v36 = sub_191CF5948();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    unint64_t v42 = v32;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v51 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v39 = sub_191C7111C();
    sub_191C5C36C(v39, v40, &v51);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v35, v36, "%{public}s Session initialized", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v38, -1, -1);
    MEMORY[0x192FE5F00](v37, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  swift_release();
  sub_191B01770(a9, &qword_1E92E0698);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v49, v43);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v50, v44);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v46);
  return a11;
}

uint64_t sub_191C7934C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF3078();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v19 - v12;
  sub_191B01614(a2, (uint64_t)v6, (uint64_t *)&unk_1EB44BBA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_191B01770((uint64_t)v6, (uint64_t *)&unk_1EB44BBA8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (a1)
    {
      uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
      v14(v11, v7);
      v14(v13, v7);
      return a1;
    }
    uint64_t v20 = sub_191CF3058();
    uint64_t v21 = v15;
    strcpy((char *)v19, "AppleInternal");
    v19[7] = -4864;
    sub_191B64828();
    char v16 = sub_191CF5C28();
    swift_bridgeObjectRelease();
    BOOL v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v11, v7);
    v17(v13, v7);
    if ((v16 & 1) == 0) {
      return a1;
    }
  }
  return 1;
}

uint64_t sub_191C795D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v8) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_191CF5EB8();
    if (v8 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v10 = 0;
    while (v8 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x192FE4B60](v10, a1);
      }
      else {
        id v11 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      a5(a2, a3);

      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
      if (v8 == v10) {
        return v14;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191C7972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    uint64_t v16 = a1;
    do
    {
      char v10 = *(unsigned char *)(a1 + v9 + 32);
      uint64_t v20 = &type metadata for InternalWidgetFamily;
      v19[0] = v10;
      uint64_t v11 = v8(v19);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v12 = v11;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v13 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AC20);
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(unsigned char *)(v14 + 24) = v10;
        *(void *)(v14 + 32) = a2;
        *(void *)(v13 + 16) = v14;
        *(void *)(v13 + 24) = v12;
        swift_retain();
        uint64_t v15 = swift_retain();
        MEMORY[0x192FE4280](v15);
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        a1 = v16;
      }
      ++v9;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_191C798E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_191CF6018())
  {
    unint64_t v7 = v5 & 0xC000000000000001;
    uint64_t v24 = *(uint64_t (**)(void *))(**(void **)(a2 + 16) + 128);
    uint64_t v8 = 4;
    unint64_t v21 = v5;
    while (1)
    {
      id v9 = v7 ? (id)MEMORY[0x192FE4B60](v8 - 4, v5) : *(id *)(v5 + 8 * v8);
      char v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      v25[3] = sub_191B016E0(0, (unint64_t *)&qword_1EB44C010);
      v25[0] = v10;
      id v12 = v10;
      uint64_t v13 = v24(v25);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v14 = v13;
        unint64_t v15 = v7;
        uint64_t v16 = v6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v17 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AC28);
        uint64_t v18 = (void *)swift_allocObject();
        v18[2] = a3;
        v18[3] = v12;
        v18[4] = a2;
        *(void *)(v17 + 16) = v18;
        *(void *)(v17 + 24) = v14;
        swift_retain();
        uint64_t v19 = swift_retain();
        MEMORY[0x192FE4280](v19);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v6 = v16;
        unint64_t v7 = v15;
        unint64_t v5 = v21;
      }
      ++v8;
      if (v11 == v6)
      {
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_191C79B24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB449C70);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  id v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v24 - v10;
  sub_191CF34D8();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
  id v13 = sub_191C77E90();
  unint64_t v15 = v13;
  if (!v13) {
    return 0;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449C68);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  v24[1] = v17 + 56;
  uint64_t v25 = v18;
  v18(v11, 1, 1, v16);
  id v19 = objc_msgSend(v15, sel_containingBundleRecord);
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_bundleIdentifier);

    if (v21)
    {
      sub_191CF5338();
      v24[0] = v22;

      sub_191CF34C8();
      sub_191B01770((uint64_t)v11, qword_1EB449C70);
      v25(v9, 0, 1, v16);
      sub_191B015B0((uint64_t)v9, (uint64_t)v11, qword_1EB449C70);
    }
  }
  sub_191CF5A88();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_191B01614((uint64_t)v11, (uint64_t)v9, qword_1EB449C70);
  uint64_t v14 = sub_191CF5A78();

  sub_191B01770((uint64_t)v11, qword_1EB449C70);
  return v14;
}

uint64_t sub_191C79E0C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v82 = a6;
  uint64_t v84 = a5;
  uint64_t v83 = a4;
  long long v88 = a3;
  uint64_t v90 = a1;
  uint64_t v7 = sub_191CF3658();
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v89 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_191CF31D8();
  uint64_t v85 = *(void *)(v80 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v80);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v68 - v12;
  uint64_t v14 = sub_191CF3678();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v68 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v68 - v21;
  uint64_t v81 = a2;
  uint64_t v23 = (void *)sub_191CF3638();
  uint64_t v71 = v20;
  uint64_t v72 = v13;
  id v75 = objc_msgSend((id)type metadata accessor for _WidgetExtensionBaseContext(), sel__extensionAuxiliaryVendorProtocol);
  objc_msgSend(v23, sel_setRemoteObjectInterface_);
  objc_msgSend(v23, sel_resume);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v22, v90, v14);
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  unint64_t v77 = v23;
  uint64_t v78 = (char *)(v26 + v16);
  uint64_t v74 = v25 | 7;
  uint64_t v27 = swift_allocObject();
  uint64_t v73 = v15;
  uint64_t v79 = v11;
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v28(v27 + v26, v22, v14);
  unint64_t v96 = sub_191C7B724;
  uint64_t v97 = v27;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v93 = 1107296256;
  uint64_t v94 = sub_191C2AD74;
  uint64_t v95 = &block_descriptor_400;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v23, sel_setInterruptionHandler_, v29);
  _Block_release(v29);
  uint64_t v30 = v90;
  uint64_t v76 = v15 + 16;
  v24(v22, v90, v14);
  id v31 = v24;
  uint64_t v32 = swift_allocObject();
  uint64_t v78 = v22;
  v28(v32 + v26, v22, v14);
  unint64_t v96 = sub_191C7FBE8;
  uint64_t v97 = v32;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v93 = 1107296256;
  uint64_t v94 = sub_191C2AD74;
  uint64_t v95 = &block_descriptor_406;
  id v33 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v77, sel_setInvalidationHandler_, v33);
  _Block_release(v33);
  uint64_t v34 = v87;
  uint64_t v35 = v88;
  uint64_t v36 = v30;
  uint64_t v37 = v82;
  uint64_t v38 = v81;
  uint64_t v39 = v85;
  uint64_t v40 = v86;
  uint64_t v41 = v80;
  if (*v88 == 1)
  {
    if (qword_1E92E0710 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_191CF3858();
    __swift_project_value_buffer(v42, (uint64_t)qword_1E92F2410);
    uint64_t v43 = v71;
    uint64_t v74 = (uint64_t)v31;
    v31(v71, v90, v14);
    uint64_t v44 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v72, v37, v41);
    uint64_t v45 = sub_191CF3838();
    os_log_type_t v46 = sub_191CF5948();
    int v70 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t aBlock = v69;
      *(_DWORD *)uint64_t v47 = 136446466;
      os_log_t v68 = v45;
      uint64_t v48 = sub_191CF3668();
      v91[0] = sub_191C5C36C(v48, v49, &aBlock);
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v14);
      *(_WORD *)(v47 + 12) = 2082;
      sub_191C7EED0(&qword_1E92E0670, MEMORY[0x1E4F27990]);
      uint64_t v50 = sub_191CF62C8();
      v91[0] = sub_191C5C36C(v50, v51, &aBlock);
      uint64_t v34 = v87;
      uint64_t v39 = v85;
      sub_191CF5C08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v41);
      uint64_t v45 = v68;
      _os_log_impl(&dword_191AF4000, v68, (os_log_type_t)v70, "[%{public}s-%{public}s] Created a new WidgetExtensionSession at user interactive priority.", (uint8_t *)v47, 0x16u);
      uint64_t v52 = v69;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v52, -1, -1);
      uint64_t v53 = v47;
      uint64_t v40 = v86;
      MEMORY[0x192FE5F00](v53, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v14);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v41);
    }

    id v31 = (void (*)(char *, uint64_t, uint64_t))v74;
    uint64_t v35 = v88;
    uint64_t v36 = v90;
  }
  v31(v78, v36, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v89, v38, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v79, v37, v41);
  if (qword_1E92E0728 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_1E92E0738;
  id v55 = (id)qword_1E92E0690;
  uint64_t v56 = v84;
  swift_retain();
  if (v54 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_1E92F2450;
  sub_191B01614((uint64_t)(v35 + 8), (uint64_t)&aBlock, &qword_1E92E0698);
  char v58 = v35[49];
  uint64_t v59 = type metadata accessor for _RunningBoardInterface();
  v91[3] = v59;
  v91[4] = &off_1EE2A1798;
  v91[0] = v57;
  type metadata accessor for _WidgetExtensionSession();
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v59);
  MEMORY[0x1F4188790](v61);
  id v63 = (uint64_t *)((char *)&v68 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v64 + 16))(v63);
  uint64_t v65 = *v63;
  swift_retain_n();
  uint64_t v66 = sub_191C78E44((uint64_t)v78, v89, (uint64_t)v79, v77, v55, v83, v56, v65, (uint64_t)&aBlock, v58, v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);

  swift_release();
  return v66;
}

void _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(uint64_t a1, unsigned char *a2, uint64_t a3, void *a4)
{
  uint64_t v72 = a2;
  uint64_t v7 = (void *)sub_191CF3858();
  uint64_t v71 = *(v7 - 1);
  MEMORY[0x1F4188790](v7);
  int v70 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF3658();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v66 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF3618();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = sub_191CF3678();
  uint64_t v69 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v69 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = sub_191CF31D8();
  uint64_t v67 = *(void *)(v23 - 8);
  uint64_t v68 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v73 = (uint64_t)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    uint64_t v25 = (double (*)(uint64_t))a3;
  }
  else {
    uint64_t v25 = sub_191C6E8FC;
  }
  uint64_t v61 = v25;
  if (a3) {
    uint64_t v26 = (uint64_t)a4;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v74 = v26;
  sub_191B01614(a1, (uint64_t)v76, (uint64_t *)&unk_1EB44BC90);
  if (v76[3])
  {
    sub_191B17508(a3);
    sub_191B016E0(0, &qword_1E92E06F8);
    if (swift_dynamicCast())
    {
      uint64_t v27 = (void *)v75;
      if (v72[48])
      {
        unint64_t v56 = 0xD000000000000012;
        unint64_t v58 = 0x8000000191D117B0;
        if (qword_1E92E0AE0 != -1) {
          swift_once();
        }
        uint64_t v28 = &qword_1E92E0AD0;
      }
      else
      {
        if (qword_1E92E0788 != -1) {
          swift_once();
        }
        unint64_t v56 = 0;
        unint64_t v58 = 0;
        uint64_t v28 = &qword_1E92E0AC8;
      }
      id v59 = (id)*v28;
      sub_191CF31C8();
      id v60 = v27;
      id v37 = objc_msgSend(v27, sel_identifier);
      if (v37)
      {
        uint64_t v38 = v37;
        sub_191CF5338();

        id v39 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
        id v40 = sub_191C77E90();
        uint64_t v57 = v7;
        id v41 = objc_allocWithZone(MEMORY[0x1E4F25858]);
        id v55 = v40;
        id v54 = objc_msgSend(v41, sel_initWithApplicationExtensionRecord_, v40);
        sub_191CF3688();
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
        v53(v20, v22, v17);
        sub_191CF35A8();
        id v52 = v59;
        sub_191CF35D8();
        id v42 = objc_msgSend(v60, sel_preferredLanguages);
        if (v42)
        {
          uint64_t v43 = v42;
          sub_191CF5538();
        }
        sub_191CF35E8();
        sub_191CF35F8();
        swift_bridgeObjectRetain();
        sub_191CF3608();
        v53(v20, v22, v17);
        uint64_t v44 = v69;
        unint64_t v45 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        uint64_t v46 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v46 + v45, v20, v17);
        sub_191CF35C8();
        uint64_t v48 = v64;
        uint64_t v47 = v65;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v14, v16, v65);
        uint64_t v49 = (uint64_t)v66;
        sub_191CF3628();
        sub_191CF35B8();
        uint64_t v50 = v73;
        sub_191C79E0C((uint64_t)v20, v49, v72, (uint64_t)v61, v74, v73);
        swift_release();

        unint64_t v51 = *(void (**)(char *, uint64_t))(v69 + 8);
        v51(v20, v17);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v66, v63);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v47);
        v51(v22, v17);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v50, v68);
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        __break(1u);

        __break(1u);
      }
      return;
    }
    uint64_t v29 = (uint64_t)v7;
  }
  else
  {
    uint64_t v29 = (uint64_t)v7;
    sub_191B17508(a3);
    sub_191B01770((uint64_t)v76, (uint64_t *)&unk_1EB44BC90);
  }
  sub_191B01614(a1, (uint64_t)v76, (uint64_t *)&unk_1EB44BC90);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BC90);
  uint64_t v30 = sub_191CF5368();
  unint64_t v32 = v31;
  if (qword_1E92E0710 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v29, (uint64_t)qword_1E92F2410);
  swift_bridgeObjectRetain();
  id v33 = sub_191CF3838();
  os_log_type_t v34 = sub_191CF5948();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v76[0] = v36;
    *(_DWORD *)uint64_t v35 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_191C5C36C(v30, v32, v76);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v33, v34, "Unable to create new WidgetExtensionSession: extension was not an NSExtension - %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v36, -1, -1);
    MEMORY[0x192FE5F00](v35, -1, -1);
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t sub_191C7B668(uint64_t a1)
{
  return a1;
}

uint64_t sub_191C7B698()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7B6D0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_191C7B710()
{
  sub_191C701AC(*(void **)(v0 + 16), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(double *)(v0 + 24));
}

void sub_191C7B724()
{
}

uint64_t sub_191C7B730(char *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191C7B768()
{
  uint64_t v1 = sub_191CF31D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 96)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  }
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 144) & ~v3), v1);

  return swift_deallocObject();
}

void sub_191C7B874(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_191CF31D8() - 8);
  sub_191C7049C(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), (char *)(v1 + 64), *(void *)(v1 + 128), *(char **)(v1 + 136), v1 + ((*(unsigned __int8 *)(v3 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_191C7B8FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

unint64_t sub_191C7B938()
{
  unint64_t result = qword_1E92E4AC0;
  if (!qword_1E92E4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4AC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExtensionSessionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C7BA58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionSessionType()
{
  return &type metadata for ExtensionSessionType;
}

uint64_t destroy for ExtensionSessionOptions(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtensionSessionOptions(uint64_t a1, char *a2)
{
  char v5 = *a2;
  unsigned int v4 = a2 + 8;
  *(unsigned char *)a1 = v5;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = *((void *)a2 + 4);
  if (v7)
  {
    uint64_t v8 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    long long v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(void *)(v6 + 32) = *((void *)v4 + 4);
  }
  *(unsigned char *)(a1 + 48) = a2[48];
  *(unsigned char *)(a1 + 49) = a2[49];
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExtensionSessionOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  char v5 = (long long *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *v5;
    long long v8 = v5[1];
    *(void *)(v4 + 32) = *((void *)v5 + 4);
    *(_OWORD *)uint64_t v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExtensionSessionOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtensionSessionOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtensionSessionOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtensionSessionOptions()
{
  return &type metadata for ExtensionSessionOptions;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionSessionOperation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionSessionOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191C7BE04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_191C7BE1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionSessionOperation()
{
  return &type metadata for WidgetExtensionSessionOperation;
}

uint64_t dispatch thunk of ExtensionIdentityProvider.extensionIdentityForExtensionBundleIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for _DefaultExtensionIdentityProvider()
{
  return self;
}

uint64_t type metadata accessor for WidgetExtensionSessionFactory()
{
  return self;
}

uint64_t method lookup function for WidgetExtensionSessionFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetExtensionSessionFactory);
}

uint64_t sub_191C7BEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_191C7BECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for _RunningBoardInterface()
{
  return self;
}

uint64_t sub_191C7BF18()
{
  return type metadata accessor for _WidgetExtensionSession();
}

uint64_t type metadata accessor for _WidgetExtensionSession()
{
  uint64_t result = qword_1E92E06E0;
  if (!qword_1E92E06E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C7BF6C()
{
  uint64_t result = sub_191CF3678();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF3658();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_191CF31D8();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_191C7C0DC()
{
  return swift_deallocObject();
}

uint64_t sub_191C7C114()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7C15C(uint64_t a1, uint64_t a2)
{
  return sub_191C754C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_191C7C170@<X0>(uint64_t *a1@<X8>)
{
  return sub_191C76258(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_191C7C178()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7C1B0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_191C7C1E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7C238(void **a1)
{
  return sub_191C7637C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_191C7C250()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7C288(uint64_t (**a1)(void))
{
  return sub_191C76968(a1);
}

void sub_191C7C294(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  swift_retain();
  sub_191CF3668();
  sub_191CF34C8();
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_191AFEE28((uint64_t)&qword_1E92E0790, (uint64_t)&v28);
  uint64_t v10 = v30;
  uint64_t v11 = v31;
  __swift_project_boxed_opaque_existential_1(&v28, v30);
  uint64_t v12 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 8))(v8, v10, v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  if (v12)
  {
    swift_beginAccess();
    sub_191CF34D8();
    swift_endAccess();
    id v13 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
    id v14 = sub_191C77E90();
    uint64_t v19 = v14;
    if (v14)
    {
      uint64_t v28 = 0;
      char v29 = 4;
      uint64_t v20 = (void *)swift_allocObject();
      id v20[2] = v12;
      v20[3] = v19;
      v20[4] = sub_191C7FB28;
      v20[5] = v9;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_191C7FB28;
      *(void *)(v21 + 24) = v9;
      swift_retain_n();
      id v22 = v12;
      id v23 = v19;
      sub_191C74F1C((uint64_t)&v28, (uint64_t)sub_191C7FC98, (uint64_t)v20, (uint64_t)sub_191C7FC94, v21);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
      uint64_t v24 = sub_191CF5338();
      id v26 = sub_191BDA6B4(v24, v25, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
      swift_willThrow();

      id v15 = v26;
      sub_191C71640(MEMORY[0x1E4FBC860], (uint64_t)v26, a2);

      swift_release();
    }
  }
  else
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v16 = sub_191CF5338();
    id v18 = sub_191BDA6B4(v16, v17, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
    sub_191C71640(MEMORY[0x1E4FBC860], (uint64_t)v18, a2);
    swift_release();
  }
}

void sub_191C7C6B8(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  _Block_copy(a2);
  sub_191CF3668();
  sub_191CF34C8();
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_191AFEE28((uint64_t)&qword_1E92E0790, (uint64_t)&v30);
  uint64_t v8 = v32;
  uint64_t v9 = v33;
  __swift_project_boxed_opaque_existential_1(&v30, v32);
  uint64_t v10 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 8))(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  if (v10)
  {
    swift_beginAccess();
    sub_191CF34D8();
    swift_endAccess();
    id v11 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
    id v12 = sub_191C77E90();
    uint64_t v21 = v12;
    if (v12)
    {
      uint64_t v30 = 0;
      char v31 = 4;
      id v22 = (void *)swift_allocObject();
      v22[2] = v10;
      v22[3] = v21;
      v22[4] = sub_191C7F964;
      v22[5] = v7;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_191C7F964;
      *(void *)(v23 + 24) = v7;
      swift_retain_n();
      id v24 = v10;
      id v25 = v21;
      sub_191C74F1C((uint64_t)&v30, (uint64_t)sub_191C7F994, (uint64_t)v22, (uint64_t)sub_191C7F9A0, v23);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
      uint64_t v26 = sub_191CF5338();
      id v28 = sub_191BDA6B4(v26, v27, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
      swift_willThrow();

      id v13 = v28;
      sub_191B016E0(0, &qword_1EB44C5B0);
      id v14 = (void *)sub_191CF5528();
      id v15 = (void *)sub_191CF2FD8();
      ((void (**)(void, void *, void *))a2)[2](a2, v14, v15);

      swift_release();
    }
  }
  else
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v16 = sub_191CF5338();
    id v18 = sub_191BDA6B4(v16, v17, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
    sub_191B016E0(0, &qword_1EB44C5B0);
    uint64_t v19 = (void *)sub_191CF5528();
    uint64_t v20 = (void *)sub_191CF2FD8();
    ((void (**)(void, void *, void *))a2)[2](a2, v19, v20);
    swift_release();
  }
}

void sub_191C7CB58(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  _Block_copy(a2);
  sub_191CF3668();
  sub_191CF34C8();
  if (qword_1E92E07C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_191AFEE28((uint64_t)&qword_1E92E0790, (uint64_t)&v28);
  uint64_t v8 = v30;
  uint64_t v9 = v31;
  __swift_project_boxed_opaque_existential_1(&v28, v30);
  uint64_t v10 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 8))(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  if (v10)
  {
    swift_beginAccess();
    sub_191CF34D8();
    swift_endAccess();
    id v11 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
    id v12 = sub_191C77E90();
    uint64_t v19 = v12;
    if (v12)
    {
      uint64_t v28 = 1;
      char v29 = 4;
      uint64_t v20 = (void *)swift_allocObject();
      id v20[2] = v10;
      v20[3] = v19;
      v20[4] = sub_191C7F8A4;
      v20[5] = v7;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_191C7F8A4;
      *(void *)(v21 + 24) = v7;
      swift_retain_n();
      id v22 = v10;
      id v23 = v19;
      sub_191C74F1C((uint64_t)&v28, (uint64_t)sub_191C7F8C4, (uint64_t)v20, (uint64_t)sub_191C7FC90, v21);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
      uint64_t v24 = sub_191CF5338();
      id v26 = sub_191BDA6B4(v24, v25, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
      swift_willThrow();

      id v13 = v26;
      id v14 = (void *)sub_191CF2FD8();
      ((void (**)(void, void, void *))a2)[2](a2, 0, v14);

      swift_release();
    }
  }
  else
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v15 = sub_191CF5338();
    id v17 = sub_191BDA6B4(v15, v16, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
    id v18 = (void *)sub_191CF2FD8();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v18);
    swift_release();
  }
}

uint64_t sub_191C7CF98(unint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_191CF6018();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v6)
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
      uint64_t v12 = v7;
      char v13 = 1;
      uint64_t v8 = (void *)swift_allocObject();
      long long v8[2] = a1;
      v8[3] = sub_191B179FC;
      v8[4] = v5;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_191B179FC;
      *(void *)(v9 + 24) = v5;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_191C74F1C((uint64_t)&v12, (uint64_t)sub_191C7F798, (uint64_t)v8, (uint64_t)sub_191C7FC8C, v9);
      swift_release();
      swift_release();
      goto LABEL_8;
    }
  }
  a3[2](a3, 0);
LABEL_8:

  return swift_release();
}

void sub_191C7D150(uint64_t a1, void *a2, uint64_t a3, void *aBlock)
{
  unint64_t v100 = MEMORY[0x1E4FBC860];
  uint64_t v84 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  _Block_copy(aBlock);
  int64_t v85 = (unint64_t)(v7 + 63) >> 6;
  id v88 = a2;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v87)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      uint64_t v12 = (v9 - 1) & v9;
      unint64_t v13 = v11 | (i << 6);
    }
    else
    {
      if (__OFADD__(i++, 1)) {
        goto LABEL_45;
      }
      if (i >= v85)
      {
LABEL_43:
        swift_release();
        unint64_t v80 = v100;
        _Block_copy(aBlock);
        sub_191C7CF98(v80, a3, (void (**)(void, void))aBlock);
        _Block_release(aBlock);
        swift_bridgeObjectRelease();

        _Block_release(aBlock);
        return;
      }
      unint64_t v15 = *(void *)(v84 + 8 * i);
      if (!v15)
      {
        int64_t v16 = i + 1;
        if (i + 1 >= v85) {
          goto LABEL_43;
        }
        unint64_t v15 = *(void *)(v84 + 8 * v16);
        if (v15) {
          goto LABEL_14;
        }
        int64_t v16 = i + 2;
        if (i + 2 >= v85) {
          goto LABEL_43;
        }
        unint64_t v15 = *(void *)(v84 + 8 * v16);
        if (v15)
        {
LABEL_14:
          int64_t i = v16;
        }
        else
        {
          int64_t v78 = i + 3;
          if (i + 3 >= v85) {
            goto LABEL_43;
          }
          unint64_t v15 = *(void *)(v84 + 8 * v78);
          i += 3;
          if (!v15)
          {
            while (1)
            {
              int64_t i = v78 + 1;
              if (__OFADD__(v78, 1)) {
                break;
              }
              if (i >= v85) {
                goto LABEL_43;
              }
              unint64_t v15 = *(void *)(v84 + 8 * i);
              ++v78;
              if (v15) {
                goto LABEL_15;
              }
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
        }
      }
LABEL_15:
      uint64_t v12 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (i << 6);
    }
    int64_t v87 = i;
    uint64_t v17 = 8 * v13;
    id v18 = *(void **)(*(void *)(a1 + 48) + v17);
    unint64_t v19 = *(void *)(*(void *)(a1 + 56) + v17);
    if (v19 >> 62) {
      break;
    }
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v21 = v18;
    swift_bridgeObjectRetain();
    unint64_t v86 = v12;
    if (v20) {
      goto LABEL_18;
    }
LABEL_4:

    swift_bridgeObjectRelease();
    unint64_t v9 = v86;
  }
  id v79 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_191CF6018();
  unint64_t v86 = v12;
  if (!v20) {
    goto LABEL_4;
  }
LABEL_18:
  if (v20 < 1)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v22 = 0;
  unint64_t v89 = v19 & 0xC000000000000001;
  uint64_t v90 = v20;
  id v91 = v18;
  unint64_t v92 = v19;
  while (1)
  {
    if (v89) {
      id v23 = (id)MEMORY[0x192FE4B60](v22, v19);
    }
    else {
      id v23 = *(id *)(v19 + 8 * v22 + 32);
    }
    uint64_t v24 = v23;
    id v93 = v23;
    id KeyPath = (id)swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191CF9150;
    id v26 = v88;
    *(void *)(inited + 32) = objc_msgSend(v24, sel_metrics);
    unint64_t v97 = inited;
    sub_191CF5558();
    unint64_t v27 = v97;
    if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
    {
      uint64_t v28 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
      char v29 = (char *)objc_allocWithZone(v28);
      uint64_t v30 = (unint64_t *)&v29[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      uint64_t v31 = (char *)v26;
      uint64_t v32 = v29;
      *uint64_t v30 = sub_191B2D144(MEMORY[0x1E4FBC860]);
      uint64_t v33 = (unint64_t *)&v31[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      swift_beginAccess();
      unint64_t v34 = *v33;
      swift_beginAccess();
      *uint64_t v30 = v34;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      v99.receiver = v32;
      v99.super_class = v28;
      id v26 = objc_msgSendSuper2(&v99, sel_init);
    }
    if (qword_1EB44BCB8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v35 = off_1EB44BD58;
    uint64_t v36 = swift_retain();
    uint64_t v37 = sub_191C6E1E4(v36, (uint64_t)v35);
    swift_endAccess();
    uint64_t v38 = swift_release();
    if (!v37) {
      break;
    }
    uint64_t v39 = (*(uint64_t (**)(uint64_t))(**(void **)(v37 + 16) + 80))(v38);
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    swift_retain();
    swift_retain();
    unint64_t v44 = sub_191C798E0(v27, v37, (uint64_t)KeyPath);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_191B38914(v44, v39, v41, v43);
    swift_release();
    swift_release();
    uint64_t v45 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C658);
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = xmmword_191CF8410;
    InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v93, sel_family), (unsigned char *)(v46 + 32));
    if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
    {
      uint64_t v47 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
      uint64_t v48 = (char *)objc_allocWithZone(v47);
      uint64_t v49 = (unint64_t *)&v48[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      uint64_t v50 = (char *)v26;
      unint64_t v51 = v48;
      *uint64_t v49 = sub_191B2D144(MEMORY[0x1E4FBC860]);
      id v52 = (unint64_t *)&v50[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      swift_beginAccess();
      unint64_t v53 = *v52;
      swift_beginAccess();
      *uint64_t v49 = v53;
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      v95.receiver = v51;
      v95.super_class = v47;
      id v26 = objc_msgSendSuper2(&v95, sel_init);
    }
    swift_beginAccess();
    id v54 = off_1EB44BD58;
    uint64_t v55 = swift_retain();
    uint64_t v56 = sub_191C6E1E4(v55, (uint64_t)v54);
    swift_endAccess();
    uint64_t v57 = swift_release();
    if (!v56)
    {
      unint64_t v97 = 0;
      unint64_t v98 = 0xE000000000000000;
      sub_191CF5D88();
      sub_191CF53B8();
      uint64_t v96 = v45;
      uint64_t v81 = &qword_1E92E2E80;
      goto LABEL_49;
    }
    uint64_t v58 = (*(uint64_t (**)(uint64_t))(**(void **)(v56 + 16) + 80))(v57);
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    swift_retain();
    swift_retain();
    unint64_t v63 = sub_191C7972C(v46, v56, v45);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_191B38914(v63, v58, v60, v62);
    swift_release();
    swift_release();
    id v18 = v91;
    id v64 = objc_msgSend(v91, sel_extensionIdentity);
    id v65 = objc_msgSend(v91, sel_kind);
    uint64_t v66 = sub_191CF5338();
    uint64_t v68 = v67;

    id v69 = v26;
    id v70 = objc_msgSend(v93, sel_fileHandle);
    uint64_t v71 = (objc_class *)type metadata accessor for PlaceholderRequest();
    uint64_t v72 = (char *)objc_allocWithZone(v71);
    *(void *)&v72[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = v64;
    uint64_t v73 = (uint64_t *)&v72[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
    *uint64_t v73 = v66;
    v73[1] = v68;
    unint64_t v97 = (unint64_t)v69;
    uint64_t v74 = v72;
    id v75 = v64;
    WidgetEnvironment.filterForExtensions()();
    *(void *)&v74[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v97;
    *(void *)&v74[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = v70;
    v74[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = 2;
    id v76 = v70;

    v94.receiver = v74;
    v94.super_class = v71;
    id v77 = objc_msgSendSuper2(&v94, sel_init);

    id KeyPath = v77;
    MEMORY[0x192FE4280]();
    if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_191CF5588();
    }
    ++v22;
    sub_191CF55D8();
    sub_191CF5558();

    unint64_t v19 = v92;
    if (v90 == v22) {
      goto LABEL_4;
    }
  }
LABEL_47:
  unint64_t v97 = 0;
  unint64_t v98 = 0xE000000000000000;
  sub_191CF5D88();
  sub_191CF53B8();
  uint64_t v96 = (uint64_t)KeyPath;
  uint64_t v81 = (uint64_t *)&unk_1E92E2F08;
LABEL_49:
  __swift_instantiateConcreteTypeFromMangledName(v81);
  sub_191CF5F38();
  _Block_release(aBlock);
  _Block_release(aBlock);
  sub_191CF5FC8();
  __break(1u);
}

uint64_t sub_191C7DABC(unint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_191CF6018();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v6)
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
      uint64_t v12 = v7;
      char v13 = 0;
      uint64_t v8 = (void *)swift_allocObject();
      long long v8[2] = a1;
      v8[3] = sub_191B179FC;
      v8[4] = v5;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_191B179FC;
      *(void *)(v9 + 24) = v5;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_191C74F1C((uint64_t)&v12, (uint64_t)sub_191C7F3FC, (uint64_t)v8, (uint64_t)sub_191C7FC8C, v9);
      swift_release();
      swift_release();
      goto LABEL_8;
    }
  }
  a3[2](a3, 0);
LABEL_8:

  return swift_release();
}

uint64_t sub_191C7DC70(unint64_t a1, char a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  if (a1 >> 62)
  {
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_191CF6018();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a4);
    if (v8)
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
      uint64_t v14 = v9;
      char v15 = 2;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = a1;
      *(unsigned char *)(v10 + 24) = a2 & 1;
      *(void *)(v10 + 32) = sub_191B179FC;
      *(void *)(v10 + 40) = v7;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_191B179FC;
      *(void *)(v11 + 24) = v7;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_191C74F1C((uint64_t)&v14, (uint64_t)sub_191C7F37C, v10, (uint64_t)sub_191C7FC8C, v11);
      swift_release();
      swift_release();
      goto LABEL_8;
    }
  }
  a4[2](a4, 0);
LABEL_8:

  return swift_release();
}

uint64_t sub_191C7DE3C(unint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_191CF6018();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v6)
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
      uint64_t v12 = v7;
      char v13 = 3;
      uint64_t v8 = (void *)swift_allocObject();
      long long v8[2] = a1;
      v8[3] = sub_191B179FC;
      v8[4] = v5;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_191B179FC;
      *(void *)(v9 + 24) = v5;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_191C74F1C((uint64_t)&v12, (uint64_t)sub_191C7F0FC, (uint64_t)v8, (uint64_t)sub_191C7FC8C, v9);
      swift_release();
      swift_release();
      goto LABEL_8;
    }
  }
  a3[2](a3, 0);
LABEL_8:

  return swift_release();
}

void sub_191C7DFF4(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void *a6)
{
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = (void *)swift_allocObject();
  objc_super v94 = a4;
  v12[2] = a4;
  uint64_t v12[3] = a5;
  objc_super v99 = v12;
  v12[4] = a6;
  uint64_t v13 = qword_1E92E0710;
  uint64_t v97 = a5;
  swift_retain_n();
  id v98 = a6;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_191CF3858();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E92F2410);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  char v15 = sub_191CF3838();
  os_log_type_t v16 = sub_191CF5948();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    id aBlock = v18;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v19 = sub_191C7111C();
    sub_191C5C36C(v19, v20, (uint64_t *)&aBlock);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_191C5C36C(a1, a2, (uint64_t *)&aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v18, -1, -1);
    MEMORY[0x192FE5F00](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v21 = sub_191CF3838();
  os_log_type_t v22 = sub_191CF5928();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    id aBlock = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v25 = sub_191C7111C();
    sub_191C5C36C(v25, v26, (uint64_t *)&aBlock);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_191C5C36C(a1, a2, (uint64_t *)&aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v24, -1, -1);
    MEMORY[0x192FE5F00](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_191C743B0();
  id v27 = objc_allocWithZone(MEMORY[0x1E4F96488]);
  uint64_t v28 = (void *)sub_191CF5318();
  id v29 = objc_msgSend(v27, sel_initWithExplanation_, v28);

  objc_msgSend(v29, sel_setReportType_, 0);
  objc_msgSend(v29, sel_setExceptionDomain_, 20);
  objc_msgSend(v29, sel_setExceptionCode_, 1001);
  unint64_t v30 = MEMORY[0x192FE22F0](objc_msgSend(v29, sel_setMaximumTerminationResistance_, 40));
  LODWORD(v27) = v30;
  LODWORD(v28) = v31;
  unsigned int v33 = v32;
  unsigned int v35 = v34;
  unint64_t v36 = HIDWORD(v30);
  unint64_t v37 = HIDWORD(v31);
  unint64_t v38 = HIDWORD(v32);
  unint64_t v39 = HIDWORD(v34);
  id v40 = objc_allocWithZone(MEMORY[0x1E4F4F6A8]);
  id aBlock = (id)__PAIR64__(v36, v27);
  unint64_t v105 = __PAIR64__(v37, v28);
  uint64_t v106 = (void (*)(uint64_t, void *, void *))__PAIR64__(v38, v33);
  uint64_t v107 = (void *)__PAIR64__(v39, v35);
  id v41 = objc_msgSend(v40, sel_initWithAuditToken_, &aBlock);
  id v42 = objc_msgSend(v41, sel_pid);
  int v100 = (int)v42;

  id v96 = objc_msgSend(self, sel_targetWithPid_, v42);
  id v43 = objc_msgSend(self, sel_predicateMatchingTarget_, v96);
  objc_super v95 = v29;
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96490]), sel_initWithPredicate_context_, v43, v29);
  swift_retain_n();
  uint64_t v45 = sub_191CF3838();
  os_log_type_t v46 = sub_191CF5948();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = (void *)swift_slowAlloc();
    id aBlock = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v49 = sub_191C7111C();
    sub_191C5C36C(v49, v50, (uint64_t *)&aBlock);
    sub_191CF5C08();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 1026;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v45, v46, "%{public}s Extension process termination requested (%{public}d)", (uint8_t *)v47, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v48, -1, -1);
    MEMORY[0x192FE5F00](v47, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  unint64_t v51 = self;
  id aBlock = 0;
  id v52 = v43;
  id v53 = objc_msgSend(v51, sel_handleForPredicate_error_, v52, &aBlock);
  if (!v53)
  {
    id v67 = aBlock;
    uint64_t v68 = (void *)sub_191CF2FE8();

    swift_willThrow();
    swift_retain();
    id v69 = v68;
    swift_retain();
    id v70 = v68;
    uint64_t v71 = sub_191CF3838();
    os_log_type_t v72 = sub_191CF5928();
    if (os_log_type_enabled(v71, v72))
    {
      id v93 = v52;
      uint64_t v73 = swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      uint64_t v74 = (void *)swift_slowAlloc();
      id aBlock = v74;
      *(_DWORD *)uint64_t v73 = 136446722;
      uint64_t v75 = sub_191C7111C();
      sub_191C5C36C(v75, v76, (uint64_t *)&aBlock);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 1026;
      sub_191CF5C08();
      *(_WORD *)(v73 + 18) = 2114;
      id v77 = v68;
      uint64_t v102 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      void *v101 = v102;

      _os_log_impl(&dword_191AF4000, v71, v72, "%{public}s Termination failed for pid %{public}d, making RBS handle, with error: %{public}@", (uint8_t *)v73, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v101, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v74, -1, -1);
      uint64_t v78 = v73;
      id v52 = v93;
      MEMORY[0x192FE5F00](v78, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    uint64_t v66 = v98;
    v94((uint64_t)v98);

    swift_release();
    goto LABEL_23;
  }
  id v54 = v53;
  id v55 = aBlock;

  id v56 = v54;
  uint64_t v57 = sub_191C7111C();
  uint64_t v59 = v58;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = a3;
  *(_DWORD *)(v60 + 24) = v100;
  unint64_t v92 = v52;
  *(void *)(v60 + 32) = 0x4014000000000000;
  *(void *)(v60 + 40) = sub_191BCC0EC;
  *(void *)(v60 + 48) = v99;
  type metadata accessor for CompletionOrWatchdogWrapper();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v61 = sub_191BBDA0C(v57, v59, 1, (uint64_t)sub_191C7EE60, v60, 5.0);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = a3;
  *(_DWORD *)(v62 + 24) = v100;
  unint64_t v63 = v44;
  *(void *)(v62 + 32) = v61;
  *(void *)(v62 + 40) = sub_191BCC0EC;
  *(void *)(v62 + 48) = v99;
  uint64_t v108 = sub_191C7EEBC;
  uint64_t v109 = v62;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  unint64_t v105 = 1107296256;
  uint64_t v106 = sub_191C76F98;
  uint64_t v107 = &block_descriptor_7;
  id v64 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v56, sel_monitorForDeath_, v64);
  _Block_release(v64);

  id aBlock = 0;
  if ((objc_msgSend(v44, sel_execute_, &aBlock) & 1) == 0)
  {
    id v79 = aBlock;
    unint64_t v80 = (void *)sub_191CF2FE8();

    swift_willThrow();
    swift_retain();
    id v81 = v80;
    swift_retain();
    id v82 = v80;
    uint64_t v83 = sub_191CF3838();
    os_log_type_t v84 = sub_191CF5928();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc();
      uint64_t v90 = (void *)swift_slowAlloc();
      id v91 = (void *)swift_slowAlloc();
      id aBlock = v91;
      *(_DWORD *)uint64_t v85 = 136446722;
      uint64_t v86 = sub_191C7111C();
      sub_191C5C36C(v86, v87, (uint64_t *)&aBlock);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 12) = 1026;
      sub_191CF5C08();
      *(_WORD *)(v85 + 18) = 2114;
      id v88 = v80;
      uint64_t v103 = _swift_stdlib_bridgeErrorToNSError();
      sub_191CF5C08();
      void *v90 = v103;

      _os_log_impl(&dword_191AF4000, v83, v84, "%{public}s Termination failed for pid %{public}d, with error: %{public}@", (uint8_t *)v85, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v90, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v91, -1, -1);
      MEMORY[0x192FE5F00](v85, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    swift_retain();
    uint64_t v66 = v98;
    id v89 = v98;
    sub_191BBE268(v61, v94, v97, (uint64_t)v89);

    swift_release();
    swift_release();
    swift_release();
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  id v65 = aBlock;
  sub_191CF3598();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v66 = v98;
LABEL_24:
}

uint64_t sub_191C7EE60()
{
  return sub_191C76B7C(*(void *)(v0 + 16), *(unsigned int *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_191C7EE74()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_191C7EEBC(uint64_t a1, uint64_t a2)
{
  sub_191C76D94(a1, a2, *(void *)(v2 + 16), *(unsigned int *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void))(v2 + 40));
}

uint64_t sub_191C7EED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C7EF18(uint64_t a1, uint64_t a2)
{
  return sub_191C762E8(a1, a2, *(void (**)(uint64_t (*)(uint64_t, uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_191C7EF20(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_191C7EF60(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 16))(a1, 0, 1);
}

uint64_t objectdestroy_108Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_191C7EFD4(void *a1)
{
  return sub_191C75CEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(id, void, uint64_t))(v1 + 40));
}

uint64_t sub_191C7EFE4()
{
  return objectdestroy_130Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7EFFC(void *a1)
{
  return sub_191C74C2C(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_191C7F008()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_191C7F044(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C740B4(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_191C7F050()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191C7F078()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F090(void *a1)
{
  return sub_191C741BC(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A76B8, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F0CC()
{
  return objectdestroy_151Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_191C7F0E4()
{
  return objectdestroy_130Tm(MEMORY[0x1E4FBC898]);
}

void sub_191C7F0FC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C73E10(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_191C7F108()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F120(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7780, (uint64_t)sub_191BCC094);
}

void sub_191C7F160(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_191C6E0D8(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_191C7F168(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C73A38(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_191C7F170(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, unint64_t, uint64_t))(v1 + 16))(0, 0, 0xF000000000000000, a1);
}

uint64_t sub_191C7F1A8()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F1C0(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  return sub_191C73B38(a1, a2, a3, a4, *(void (**)(uint64_t (*)(), void *, void))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_191C7F1CC()
{
  swift_release();

  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    sub_191B1603C(*(void *)(v0 + 40), v1);
  }

  return swift_deallocObject();
}

uint64_t sub_191C7F22C()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_191C7F260()
{
  swift_release();

  return swift_deallocObject();
}

void sub_191C7F2B0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C73670(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(unsigned char *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

uint64_t sub_191C7F2E4()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F2FC(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7910, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F33C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_191C7F37C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C73498(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_191C7F38C()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F3A4(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A79D8, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F3E4()
{
  return objectdestroy_130Tm(MEMORY[0x1E4FBC898]);
}

void sub_191C7F3FC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C73348(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_191C7F408()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F420(void *a1)
{
  return sub_191C741BC(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7AA0, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F45C()
{
  return objectdestroy_151Tm(MEMORY[0x1E4FBC8B8]);
}

void sub_191C7F478(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C730F8(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1EE2A7B40, (uint64_t)sub_191C7F4E8, (uint64_t)&block_descriptor_262, (SEL *)&selRef_setControlState_completion_);
}

uint64_t sub_191C7F4D0()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F4E8(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7B68, (uint64_t)sub_191BCC094);
}

void sub_191C7F52C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C730F8(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1EE2A7C08, (uint64_t)sub_191C7F59C, (uint64_t)&block_descriptor_281, (SEL *)&selRef_pushTokensDidChange_completion_);
}

uint64_t sub_191C7F584()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F59C(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7C30, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F5DC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7F624(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_191C72BDC(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_191C7F634(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_191C7F664()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F67C(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7CF8, (uint64_t)sub_191C7F6BC);
}

uint64_t sub_191C7F6BC()
{
  return sub_191C7FAC8();
}

uint64_t sub_191C7F6C4()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC898]);
}

void sub_191C7F6DC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C728CC(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_191C7F6E8()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_191C7F700()
{
  return sub_191C729E4(*(void (**)(uint64_t (*)(), uint64_t, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_191C7F70C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_191C7F738()
{
  return objectdestroy_130Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_130Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

void sub_191C7F798(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C72774(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_191C7F7A4()
{
  return objectdestroy_145Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_145Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7F804(void *a1)
{
  return sub_191C73F34(a1, *(void (**)(uint64_t, void *, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1EE2A7E88, (uint64_t)sub_191BCC094);
}

uint64_t sub_191C7F844(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191B016E0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191C7F8A4(uint64_t a1, uint64_t a2)
{
  sub_191C72F38(a1, a2, *(void *)(v2 + 16));
}

void sub_191C7F8C4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C72158(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_191C7F8D4(uint64_t a1)
{
  return sub_191C7FA40(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_191C72274);
}

uint64_t objectdestroy_105Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7F930()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), 0);
}

void sub_191C7F964(uint64_t a1, uint64_t a2)
{
  sub_191C720B8(a1, a2, *(void *)(v2 + 16), &qword_1EB44C5B0);
}

void sub_191C7F994(void *a1, uint64_t a2, uint64_t a3)
{
  sub_191C71838(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_191C7F9A0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(MEMORY[0x1E4FBC860], a1);
}

uint64_t objectdestroy_355Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C7FA28(uint64_t a1)
{
  return sub_191C7FA40(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_191C71954);
}

uint64_t sub_191C7FA40(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_191C7FA58()
{
  return objectdestroy_151Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_151Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_191C7FAC0()
{
  return sub_191C7FAC8();
}

uint64_t sub_191C7FAC8()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), 0);
}

void sub_191C7FAFC(uint64_t a1, uint64_t a2)
{
  sub_191C720B8(a1, a2, *(void *)(v2 + 16), (unint64_t *)&unk_1EB44B1F8);
}

uint64_t sub_191C7FB28(unint64_t a1, uint64_t a2)
{
  return sub_191C71640(a1, a2, *(void (**)(void, void))(v2 + 16));
}

uint64_t objectdestroy_349Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_191C7FB80(const char *a1)
{
  uint64_t v3 = *(void *)(sub_191CF3678() - 8);
  sub_191C70E80(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

void sub_191C7FBE8()
{
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v1 = sub_191CF3678();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_191C7FDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v47 = a2;
  uint64_t v46 = sub_191CF3C78();
  MEMORY[0x1F4188790](v46);
  uint64_t v4 = (double *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AD0);
  MEMORY[0x1F4188790](v40);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AD8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AE0);
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v45);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v41 = (char *)&v39 - v13;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AE8);
  MEMORY[0x1F4188790](v44);
  char v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AF0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v20 = (char *)&v39 - v19;
  double v21 = *(double *)(v2 + 24);
  if (v21 == 1.0)
  {
    os_log_type_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v22((char *)&v39 - v19, v43, v16);
    v22(v15, (uint64_t)v20, v16);
    swift_storeEnumTagMultiPayload();
    sub_191C805D8();
    unint64_t v23 = sub_191C804E0();
    unint64_t v24 = sub_191C31BFC();
    *(void *)&long long v52 = v7;
    *((void *)&v52 + 1) = v46;
    *(void *)&long long v53 = v23;
    *((void *)&v53 + 1) = v24;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  else
  {
    double v26 = *(double *)(v2 + 16);
    sub_191CF5088();
    sub_191CF3A38();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, v43, v16);
    id v27 = &v6[*(int *)(v40 + 36)];
    long long v28 = v53;
    *(_OWORD *)id v27 = v52;
    *((_OWORD *)v27 + 1) = v28;
    *((_OWORD *)v27 + 2) = v54;
    sub_191C80478((uint64_t)v6, (uint64_t)v9);
    *(double *)&v9[*(int *)(v7 + 36)] = v21;
    sub_191B01770((uint64_t)v6, &qword_1E92E4AD0);
    double v29 = v21 * v26;
    uint64_t v30 = v46;
    unint64_t v31 = (char *)v4 + *(int *)(v46 + 20);
    uint64_t v32 = *MEMORY[0x1E4F3D4A0];
    uint64_t v33 = sub_191CF4368();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
    *uint64_t v4 = v29;
    v4[1] = v29;
    unint64_t v34 = sub_191C804E0();
    unint64_t v35 = sub_191C31BFC();
    sub_191CF4C28();
    sub_191C31C54((uint64_t)v4);
    sub_191B01770((uint64_t)v9, &qword_1E92E4AD8);
    unint64_t v37 = v41;
    uint64_t v36 = v42;
    uint64_t v38 = v45;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v12, v45);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v37, v38);
    swift_storeEnumTagMultiPayload();
    sub_191C805D8();
    uint64_t v48 = v7;
    uint64_t v49 = v30;
    unint64_t v50 = v34;
    unint64_t v51 = v35;
    swift_getOpaqueTypeConformance2();
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  }
}

uint64_t View.applyScalingModifier(metrics:displayScale:)(_OWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  long long v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  double v7 = a4;
  return MEMORY[0x192FE3AA0](v6, a2, &type metadata for ActivityScalingModifier, a3);
}

uint64_t sub_191C80394()
{
  return swift_getWitnessTable();
}

unint64_t sub_191C803F8()
{
  unint64_t result = qword_1E92E4AC8;
  if (!qword_1E92E4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4AC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityScalingModifier()
{
  return &type metadata for ActivityScalingModifier;
}

uint64_t sub_191C8045C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C80478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_191C804E0()
{
  unint64_t result = qword_1E92E4AF8;
  if (!qword_1E92E4AF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4AD8);
    sub_191C8055C();
    sub_191B1C444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4AF8);
  }
  return result;
}

unint64_t sub_191C8055C()
{
  unint64_t result = qword_1E92E4B00;
  if (!qword_1E92E4B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4AD0);
    sub_191C805D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4B00);
  }
  return result;
}

unint64_t sub_191C805D8()
{
  unint64_t result = qword_1E92E4B08;
  if (!qword_1E92E4B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4B08);
  }
  return result;
}

unint64_t sub_191C80638()
{
  unint64_t result = qword_1E92E4B10;
  if (!qword_1E92E4B10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4B18);
    sub_191C805D8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4AD8);
    sub_191CF3C78();
    sub_191C804E0();
    sub_191C31BFC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4B10);
  }
  return result;
}

uint64_t sub_191C80710(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_191CF6308();
  if (v6)
  {
    double v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    double v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_191CF2FD8();

  id v10 = objc_msgSend(v9, sel_debugDescription);
  uint64_t v11 = sub_191CF5338();

  return v11;
}

uint64_t sub_191C80890()
{
  sub_191C80BF0();
  uint64_t result = sub_191CF5B98();
  qword_1EB44C840 = result;
  return result;
}

uint64_t sub_191C808F8()
{
  sub_191C80BF0();
  uint64_t result = sub_191CF5B98();
  qword_1EB44CBF8 = result;
  return result;
}

uint64_t sub_191C8095C()
{
  sub_191C80BF0();
  uint64_t result = sub_191CF5B98();
  qword_1EB44CBF0 = result;
  return result;
}

uint64_t sub_191C809BC()
{
  sub_191C80BF0();
  uint64_t result = sub_191CF5B98();
  qword_1E92F2590 = result;
  return result;
}

uint64_t sub_191C80A28(uint64_t a1)
{
  return sub_191C80AAC(a1, qword_1EB44C888, &qword_1EB44B948, (id *)&qword_1EB44CBF8);
}

uint64_t sub_191C80A54(uint64_t a1)
{
  return sub_191C80AAC(a1, qword_1EB44C848, qword_1EB44A050, (id *)&qword_1EB44C840);
}

uint64_t sub_191C80A80(uint64_t a1)
{
  return sub_191C80AAC(a1, qword_1E92F2410, &qword_1EB44B6D0, (id *)&qword_1EB44CBF0);
}

uint64_t sub_191C80AAC(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_191CF3858();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_191CF3868();
}

uint64_t sub_191C80B38(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F2470);
}

uint64_t sub_191C80B5C(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1EB44CCE0);
}

uint64_t sub_191C80B78(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F2598);
}

uint64_t sub_191C80BA4(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F2488);
}

uint64_t sub_191C80BD0(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F24A8);
}

unint64_t sub_191C80BF0()
{
  unint64_t result = qword_1EB44BA80;
  if (!qword_1EB44BA80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44BA80);
  }
  return result;
}

uint64_t sub_191C80C30(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F2508);
}

uint64_t sub_191C80C50(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1E92F25B0);
}

uint64_t sub_191C80C74(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1EB44CB58);
}

uint64_t sub_191C80C9C(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1EB44C7B0);
}

uint64_t sub_191C80CBC(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1EB44C7E8);
}

uint64_t sub_191C80CDC(uint64_t a1)
{
  return sub_191C80CFC(a1, qword_1EB44CB78);
}

uint64_t sub_191C80CFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_191CF3858();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_191CF3848();
}

void sub_191C80D78(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)sub_191CF2FD8();
  if (a2)
  {
    id v5 = v4;
    swift_bridgeObjectRetain_n();
    id v27 = v5;
    uint64_t v6 = sub_191CF3838();
    os_log_type_t v7 = sub_191CF5928();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v28 = v9;
      *(_DWORD *)uint64_t v8 = 136446978;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a1, a2, &v28);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2082;
      id v10 = objc_msgSend(v27, sel_domain);
      uint64_t v11 = sub_191CF5338();
      unint64_t v13 = v12;

      sub_191C5C36C(v11, v13, &v28);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      objc_msgSend(v27, sel_code);

      sub_191CF5C08();
      *(_WORD *)(v8 + 32) = 2082;
      id v14 = objc_msgSend(v27, sel_debugDescription);
      uint64_t v15 = sub_191CF5338();
      unint64_t v17 = v16;

      sub_191C5C36C(v15, v17, &v28);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v6, v7, "%{public}s: %{public}s (%ld) %{public}s", (uint8_t *)v8, 0x2Au);
LABEL_6:
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v9, -1, -1);
      MEMORY[0x192FE5F00](v8, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v27 = v4;
    uint64_t v6 = sub_191CF3838();
    os_log_type_t v18 = sub_191CF5928();
    if (os_log_type_enabled(v6, v18))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v28 = v9;
      *(_DWORD *)uint64_t v8 = 136446722;
      id v19 = objc_msgSend(v27, sel_domain);
      uint64_t v20 = sub_191CF5338();
      unint64_t v22 = v21;

      sub_191C5C36C(v20, v22, &v28);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      objc_msgSend(v27, sel_code);

      sub_191CF5C08();
      *(_WORD *)(v8 + 22) = 2082;
      id v23 = objc_msgSend(v27, sel_debugDescription);
      uint64_t v24 = sub_191CF5338();
      unint64_t v26 = v25;

      sub_191C5C36C(v24, v26, &v28);
      sub_191CF5C08();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v6, v18, "%{public}s (%ld) %{public}s", (uint8_t *)v8, 0x20u);
      goto LABEL_6;
    }
  }
}

uint64_t EnvironmentValues._widgetInvertsAccentFilterStyle.getter()
{
  sub_191BDE030();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._widgetInvertsAccentFilterStyle.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues._widgetInvertsAccentFilterStyle.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191BDE030();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C81374;
}

uint64_t sub_191C81374(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s33WidgetInvertsAccentFilterStyleKeyVMa()
{
  return &_s33WidgetInvertsAccentFilterStyleKeyVN;
}

uint64_t sub_191C813C4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4B20);
    uint64_t v2 = sub_191CF6068();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v6) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v6) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v6) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v6) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v27 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
LABEL_28:
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v13);
    swift_bridgeObjectRetain();
    uint64_t result = sub_191CF5B48();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v7 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v21) & ~*(void *)(v7 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v7 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v10 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = 8 * v10;
    *(void *)(*(void *)(v2 + 48) + v11) = v19;
    *(void *)(*(void *)(v2 + 56) + v11) = v18;
    ++*(void *)(v2 + 16);
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v6)
  {
LABEL_37:
    swift_release();
    sub_191B004C0();
    return v2;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v6) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_191C8169C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4B30);
    uint64_t v2 = sub_191CF6068();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_191B4F964(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_191B4F9C0(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_191B4F9C0(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_191B4F9C0(v36, v37);
    sub_191B4F9C0(v37, &v33);
    uint64_t result = sub_191CF5D18();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_191B4F9C0(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_191B004C0();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void static WidgetPreviewAgent.attachPreviewAgent(extensionIdentifier:frameworkPath:environmentVariables:pidCallback:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, void (*a8)(long long *), uint64_t a9)
{
  v88[1] = a7;
  id v89 = a6;
  uint64_t v95 = a5;
  uint64_t v91 = a4;
  uint64_t v90 = a3;
  uint64_t v96 = a9;
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  uint64_t v93 = sub_191CF51E8();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v93);
  unint64_t v14 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int64_t v16 = (char *)v88 - v15;
  uint64_t v17 = sub_191CF5338();
  uint64_t v19 = v18;
  if (qword_1E92E0718 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1E92E0688;
  *(void *)&v102[24] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
  *(void *)uint64_t v102 = v20;
  sub_191B4F9C0(v102, &aBlock);
  swift_bridgeObjectRetain();
  uint64_t v21 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v107 = v21;
  sub_191B4AFF8(&aBlock, v17, v19, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_191CF5338();
  uint64_t v26 = v25;
  *(void *)&v102[24] = MEMORY[0x1E4FBB1A0];
  *(void *)uint64_t v102 = a1;
  *(void *)&v102[8] = a2;
  sub_191B4F9C0(v102, &aBlock);
  swift_bridgeObjectRetain();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v107 = v23;
  sub_191B4AFF8(&aBlock, v24, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = self;
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_191C8169C(v29);
  swift_bridgeObjectRelease();
  long long v30 = (void *)sub_191CF5238();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v102 = 0;
  id v31 = objc_msgSend(v28, sel_extensionsWithMatchingAttributes_error_, v30, v102);

  uint64_t v32 = *(void **)v102;
  if (v31)
  {
    objc_super v94 = a8;
    uint64_t v33 = sub_191CF5538();
    id v34 = v32;

    uint64_t v35 = *(void *)(v33 + 16);
    if (v35)
    {
      uint64_t v36 = v33 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_191B4F964(v36, (uint64_t)&aBlock);
        sub_191B4F964((uint64_t)&aBlock, (uint64_t)v106);
        sub_191B016E0(0, &qword_1E92E06F8);
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
        v36 += 32;
        if (!--v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      uint64_t v40 = v97;
      swift_bridgeObjectRelease();

      sub_191B4F9C0(&aBlock, v102);
    }
    else
    {
LABEL_9:
      memset(v102, 0, 32);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)&v102[24])
    {
      sub_191B4F9C0(v102, &v107);
      sub_191B4F964((uint64_t)&v107, (uint64_t)v102);
      uint64_t v41 = sub_191B016E0(0, &qword_1E92E06F8);
      swift_dynamicCast();
      uint64_t v42 = (void *)aBlock;
      uint64_t v103 = 0;
      memset(&v102[8], 0, 32);
      v102[0] = 1;
      __int16 v104 = 0;
      uint64_t v105 = v95;
      *((void *)&v99 + 1) = v41;
      swift_bridgeObjectRetain();
      id v43 = v42;
      _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0((uint64_t)&aBlock, v102, 0, 0);
      uint64_t v45 = v44;
      sub_191B88CAC((uint64_t)&aBlock);
      if (v45)
      {
        unsigned __int8 v46 = objc_msgSend(v45, sel_respondsToSelector_, sel_pid);
        if (v46) {
          uint64_t v47 = objc_msgSend(v45, sel_pid);
        }
        else {
          uint64_t v47 = 0;
        }
        LOBYTE(aBlock) = (v46 & 1) == 0;
        v89(v47 | ((unint64_t)aBlock << 32));
        uint64_t v62 = dispatch_group_create();
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = 0u;
        *(_OWORD *)(v63 + 32) = 0u;
        *(unsigned char *)(v63 + 48) = 1;
        dispatch_group_enter(v62);
        id v64 = (void *)sub_191CF5318();
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = v63;
        *(void *)(v65 + 24) = v62;
        int v100 = sub_191C82AD0;
        uint64_t v101 = v65;
        *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v99 = sub_191C829DC;
        *((void *)&v99 + 1) = &block_descriptor_8;
        uint64_t v66 = _Block_copy(&aBlock);
        swift_retain();
        id v67 = v62;
        swift_release();
        objc_msgSend(v45, sel_attachPreviewAgentWithFrameworkPath_endpoint_handler_, v64, 0, v66);
        uint64_t v68 = v66;
        id v69 = v67;
        _Block_release(v68);

        sub_191CF51D8();
        MEMORY[0x192FE3F70](v14, 10.0);
        id v70 = *(void (**)(char *, uint64_t))(v92 + 8);
        uint64_t v71 = v14;
        uint64_t v72 = v93;
        v70(v71, v93);
        sub_191CF59C8();
        v70(v16, v72);
        if (sub_191CF5158())
        {
          sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
          uint64_t v73 = sub_191CF5338();
          id v75 = sub_191BDA6B4(v73, v74, 1051, 0, 0xD000000000000015, 0x8000000191D0F9D0);
          if (qword_1EB44C750 != -1) {
            swift_once();
          }
          uint64_t v76 = sub_191CF3858();
          uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB44CCE0);
          id v78 = v75;
          sub_191C80D74(0, 0, v77, v78);

          long long aBlock = (unint64_t)v78;
          long long v99 = 0uLL;
          LOBYTE(v100) = 1;
          id v79 = v78;
          v94(&aBlock);

          swift_release();
        }
        else
        {
          swift_beginAccess();
          if (*(unsigned char *)(v63 + 48))
          {
            sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
            uint64_t v80 = sub_191CF5338();
            id v82 = sub_191BDA6B4(v80, v81, 1050, 0, 0xD000000000000014, 0x8000000191D0F9F0);
            if (qword_1EB44C750 != -1) {
              swift_once();
            }
            uint64_t v83 = sub_191CF3858();
            uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)qword_1EB44CCE0);
            id v85 = v82;
            sub_191C80D74(0, 0, v84, v85);

            long long aBlock = (unint64_t)v85;
            long long v99 = 0uLL;
            LOBYTE(v100) = 1;
            id v86 = v85;
            v94(&aBlock);
            swift_release();
          }
          else
          {
            long long v87 = *(_OWORD *)(v63 + 32);
            long long aBlock = *(_OWORD *)(v63 + 16);
            long long v99 = v87;
            LOBYTE(v100) = 0;
            v94(&aBlock);
            swift_release();
          }
        }
        objc_msgSend(v45, sel_invalidate);

        swift_unknownObjectRelease();
      }
      else
      {
        sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
        uint64_t v55 = sub_191CF5338();
        id v57 = sub_191BDA6B4(v55, v56, 1050, 0, 0xD000000000000014, 0x8000000191D0F9F0);
        if (qword_1EB44C750 != -1) {
          swift_once();
        }
        uint64_t v58 = sub_191CF3858();
        uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB44CCE0);
        id v60 = v57;
        sub_191C80D74(0, 0, v59, v60);

        long long aBlock = (unint64_t)v60;
        long long v99 = 0uLL;
        LOBYTE(v100) = 1;
        id v61 = v60;
        v94(&aBlock);
      }
      sub_191C7B668((uint64_t)v102);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    }
    else
    {
      sub_191B88CAC((uint64_t)v102);
      sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
      uint64_t v48 = sub_191CF5338();
      id v50 = sub_191BDA6B4(v48, v49, 1300, 0, 0xD000000000000011, 0x8000000191D0F8D0);
      if (qword_1EB44C750 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_191CF3858();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB44CCE0);
      id v53 = v50;
      sub_191C80D74(0, 0, v52, v53);

      *(_OWORD *)uint64_t v102 = (unint64_t)v53;
      *(void *)&v102[16] = 0;
      *(void *)&v102[24] = 0;
      v102[32] = 1;
      id v54 = v53;
      v94((long long *)v102);
    }
  }
  else
  {
    id v37 = *(id *)v102;
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)sub_191CF2FE8();

    swift_willThrow();
    *(_OWORD *)uint64_t v102 = (unint64_t)v38;
    *(void *)&v102[16] = 0;
    *(void *)&v102[24] = 0;
    v102[32] = 1;
    id v39 = v38;
    a8((long long *)v102);
  }
}

void sub_191C82634(void *a1, void *a2, uint64_t a3, NSObject *a4)
{
  if (!a1)
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB44CCE0);
    id v20 = a2;
    id v21 = a2;
    unint64_t v11 = sub_191CF3838();
    os_log_type_t v22 = sub_191CF5928();
    if (!os_log_type_enabled(v11, v22))
    {

LABEL_16:
      goto LABEL_17;
    }
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(void *)&long long v28 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    if (a2)
    {
      swift_getErrorValue();
      unint64_t v25 = sub_191C80710(v31);
      unint64_t v27 = v26;
    }
    else
    {
      unint64_t v27 = 0x8000000191D11CF0;
      unint64_t v25 = 0xD000000000000011;
    }
    uint64_t v32 = sub_191C5C36C(v25, v27, (uint64_t *)&v28);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191AF4000, v11, v22, "Preview Agent failed to attach to extension: %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v24, -1, -1);
    uint64_t v17 = v23;
LABEL_15:
    MEMORY[0x192FE5F00](v17, -1, -1);
    goto LABEL_16;
  }
  objc_msgSend(a1, sel_realToken);
  uint64_t v7 = v29;
  uint64_t v8 = v30;
  swift_beginAccess();
  *(_OWORD *)(a3 + 16) = v28;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 40) = v8;
  *(unsigned char *)(a3 + 48) = 0;
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_191CF3858();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB44CCE0);
  id v10 = a1;
  unint64_t v11 = sub_191CF3838();
  os_log_type_t v12 = sub_191CF5918();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v32 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4B28);
    uint64_t v15 = sub_191CF5BB8();
    sub_191C5C36C(v15, v16, &v32);
    sub_191CF5C08();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v11, v12, "Preview Agent attached to extension: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v14, -1, -1);
    uint64_t v17 = v13;
    goto LABEL_15;
  }

LABEL_17:
  dispatch_group_leave(a4);
}

void sub_191C829DC(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t WidgetPreviewAgent.deinit()
{
  return v0;
}

uint64_t WidgetPreviewAgent.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_191C82A80()
{
  return swift_deallocObject();
}

uint64_t sub_191C82A90()
{
  swift_release();

  return swift_deallocObject();
}

void sub_191C82AD0(void *a1, void *a2)
{
  sub_191C82634(a1, a2, *(void *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t type metadata accessor for WidgetPreviewAgent()
{
  return self;
}

uint64_t method lookup function for WidgetPreviewAgent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetPreviewAgent);
}

uint64_t static DataProtectionLevel.systemDefault.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1EB44B790;
  return result;
}

uint64_t static DataProtectionLevel.systemDefault.setter(char *a1)
{
  char v1 = *a1;
  uint64_t result = swift_beginAccess();
  byte_1EB44B790 = v1;
  return result;
}

uint64_t (*static DataProtectionLevel.systemDefault.modify())()
{
  return j__swift_endAccess;
}

WidgetKit::DataProtectionLevel_optional __swiftcall DataProtectionLevel.init(_:)(NSFileProtectionType a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_191CF5338();
  uint64_t v6 = v5;
  if (v4 == sub_191CF5338() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v9 = sub_191CF6348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_15:

    char v21 = 0;
    goto LABEL_16;
  }
  uint64_t v10 = sub_191CF5338();
  uint64_t v12 = v11;
  if (v10 == sub_191CF5338() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v15 = sub_191CF6348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_18:

    char v21 = 1;
    goto LABEL_16;
  }
  uint64_t v16 = sub_191CF5338();
  uint64_t v18 = v17;
  if (v16 == sub_191CF5338() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:

    char v21 = 2;
    goto LABEL_16;
  }
  char v22 = sub_191CF6348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_20;
  }
  uint64_t v23 = sub_191CF5338();
  uint64_t v25 = v24;
  if (v23 == sub_191CF5338() && v25 == v26)
  {
    unint64_t v27 = a1;

    result.value = swift_bridgeObjectRelease_n();
    char v21 = 3;
  }
  else
  {
    char v28 = sub_191CF6348();
    uint64_t v29 = a1;

    swift_bridgeObjectRelease();
    result.value = swift_bridgeObjectRelease();
    if (v28) {
      char v21 = 3;
    }
    else {
      char v21 = 4;
    }
  }
LABEL_16:
  *uint64_t v3 = v21;
  return result;
}

unint64_t DataProtectionLevel.init(_:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 4;
  if (result < 4) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

Swift::Bool __swiftcall DataProtectionLevel.canShowContent(for:)(WidgetKit::DataProtectionLevel a1)
{
  return -25 * (unint64_t)*v1 + 100 >= -25 * (unint64_t)*(unsigned __int8 *)a1 + 100;
}

BOOL static DataProtectionLevel.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 < -25 * (unint64_t)*a2 + 100;
}

uint64_t DataProtectionLevel.rawValue.getter()
{
  return -25 * *v0 + 100;
}

id DataProtectionLevel.fileProtectionType.getter()
{
  return **((id **)&unk_1E57393F0 + *v0);
}

unint64_t DataProtectionLevel.description.getter()
{
  return ((unint64_t)*v0 << 40) + 0x417373616C43;
}

WidgetKit::DataProtectionLevel_optional __swiftcall DataProtectionLevel.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 74)
  {
    if (rawValue == 75)
    {
      *char v1 = 1;
      return (WidgetKit::DataProtectionLevel_optional)rawValue;
    }
    if (rawValue == 100)
    {
      *char v1 = 0;
      return (WidgetKit::DataProtectionLevel_optional)rawValue;
    }
LABEL_8:
    *char v1 = 4;
    return (WidgetKit::DataProtectionLevel_optional)rawValue;
  }
  if (rawValue == 25)
  {
    *char v1 = 3;
    return (WidgetKit::DataProtectionLevel_optional)rawValue;
  }
  if (rawValue != 50) {
    goto LABEL_8;
  }
  *char v1 = 2;
  return (WidgetKit::DataProtectionLevel_optional)rawValue;
}

void *static DataProtectionLevel.allCases.getter()
{
  return &unk_1EE29FFE8;
}

uint64_t sub_191C82F60()
{
  return sub_191CF64C8();
}

uint64_t sub_191C82FB0()
{
  return sub_191CF6478();
}

uint64_t sub_191C82FE8()
{
  return sub_191CF64C8();
}

WidgetKit::DataProtectionLevel_optional sub_191C83034(Swift::Int *a1)
{
  return DataProtectionLevel.init(rawValue:)(*a1);
}

void sub_191C8303C(void *a1@<X8>)
{
  *a1 = -25 * *v1 + 100;
}

void sub_191C83054(void *a1@<X8>)
{
  *a1 = &unk_1EE2A00A0;
}

uint64_t sub_191C83064()
{
  return sub_191CF5508();
}

uint64_t sub_191C830C4()
{
  return sub_191CF54E8();
}

BOOL sub_191C83114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 < -25 * (unint64_t)*a2 + 100;
}

BOOL sub_191C8313C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a2 + 100 >= -25 * (unint64_t)*a1 + 100;
}

BOOL sub_191C83164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 >= -25 * (unint64_t)*a2 + 100;
}

BOOL sub_191C8318C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a2 + 100 < -25 * (unint64_t)*a1 + 100;
}

unint64_t sub_191C831B4()
{
  return ((unint64_t)*v0 << 40) + 0x417373616C43;
}

unint64_t sub_191C831D4()
{
  unint64_t result = qword_1EB448DA8;
  if (!qword_1EB448DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB448DA8);
  }
  return result;
}

unint64_t sub_191C8322C()
{
  unint64_t result = qword_1E92E4B38;
  if (!qword_1E92E4B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4B38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DataProtectionLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C83354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataProtectionLevel()
{
  return &type metadata for DataProtectionLevel;
}

unint64_t sub_191C8338C()
{
  unint64_t result = qword_1E92E07D0;
  if (!qword_1E92E07D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E07D0);
  }
  return result;
}

uint64_t Cartesian2ProductCollection<>.init(_:environment:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a3);
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v16[*(int *)(v13 + 28)], v11, v8);
  *(void *)uint64_t v16 = v20;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v21 = sub_191AFE1D0((uint64_t)v16);
  sub_191C87520((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, a3);
  uint64_t v27 = v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4B48);
  sub_191C8757C();
  return Cartesian2ProductCollection.init(_:_:)((uint64_t)v19, (uint64_t)&v27, a3, v22, v25);
}

uint64_t Cartesian2ProductCollection.count.getter()
{
  uint64_t v0 = sub_191CF57A8();
  uint64_t v1 = sub_191CF57A8();
  uint64_t result = v0 * v1;
  if ((unsigned __int128)(v0 * (__int128)v1) >> 64 != (v0 * v1) >> 63) {
    __break(1u);
  }
  return result;
}

uint64_t Cartesian2ProductCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v16 - v13;
  sub_191C840F8((uint64_t)&v16 - v13, (uint64_t)v10, a3, a4);
  sub_191C84318(a1, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t Cartesian2ProductCollection.startIndex.getter()
{
  return 0;
}

uint64_t sub_191C83874@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v37 = a4;
  uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 32);
  uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
  uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 16);
  uint64_t v34 = *(uint64_t *)((char *)a2 + a3 - 8);
  uint64_t v35 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = v6;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = TupleTypeMetadata2 - 8;
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void *)(v33 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v22 = (char *)&v32 - v21;
  uint64_t v23 = *a2;
  uint64_t v38 = v5;
  uint64_t v39 = v9;
  uint64_t v40 = v35;
  uint64_t v41 = v34;
  uint64_t v24 = type metadata accessor for Cartesian2ProductCollection();
  Cartesian2ProductCollection.subscript.getter((uint64_t)v22, (uint64_t)v18, v23, v24);
  uint64_t v25 = &v14[*(int *)(v11 + 56)];
  uint64_t v26 = *(void (**)(void))(v20 + 32);
  ((void (*)(char *, char *, uint64_t))v26)(v14, v22, v19);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  char v28 = v18;
  uint64_t v29 = v33;
  v27(v25, v28, v33);
  uint64_t v30 = v37 + *(int *)(v11 + 56);
  v26();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v30, v25, v29);
}

uint64_t sub_191C83B04(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t *)((char *)a3 + a4 - 32);
  uint64_t v6 = *(uint64_t *)((char *)a3 + a4 - 24);
  uint64_t v8 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v28 = *(uint64_t *)((char *)a3 + a4 - 16);
  uint64_t v29 = a2;
  uint64_t v26 = v6;
  uint64_t v27 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = TupleTypeMetadata2 - 8;
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = *a3;
  uint64_t v16 = *(int *)(v12 + 56);
  uint64_t v17 = &v14[v16];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, a1, AssociatedTypeWitness);
  uint64_t v20 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v17, v18, v10);
  v30[0] = v7;
  v30[1] = v26;
  v30[2] = v28;
  v30[3] = v27;
  uint64_t v21 = type metadata accessor for Cartesian2ProductCollection();
  uint64_t v22 = Cartesian2ProductCollection.subscript.modify(v30, v15, v21);
  uint64_t v24 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 40))(v23, v14, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 40))(v24 + *(int *)(v12 + 56), v17, v10);
  return ((uint64_t (*)(void *, void))v22)(v30, 0);
}

void (*Cartesian2ProductCollection.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v5 = malloc(0x78uLL);
  uint64_t v6 = *(void *)(a3 - 8);
  *a1 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v5[4] = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[5] = AssociatedTypeWitness;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  v5[6] = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[7] = TupleTypeMetadata2;
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  v5[8] = v12;
  size_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = malloc(v13);
  v5[9] = v14;
  uint64_t v15 = malloc(v13);
  v5[10] = v15;
  uint64_t v16 = (uint64_t)v15 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v22 = v16;
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, v24, a3);
  sub_191C840F8((uint64_t)v15, v16, a2, a3);
  (*(void (**)(void *, uint64_t))(v7 + 8))(v8, a3);
  uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
  *((_DWORD *)v5 + 28) = v17;
  uint64_t v18 = (uint64_t)v14 + v17;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  v5[11] = v19;
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v14, v15, AssociatedTypeWitness);
  uint64_t v20 = *(void *)(v10 - 8);
  v5[12] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v22, v10);
  v5[13] = Cartesian2ProductCollection.subscript.modify(v5, (uint64_t)v14, v18, a3);
  return sub_191C84008;
}

void sub_191C84008(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void *)(*a1 + 96);
  int v3 = *(void **)(*a1 + 80);
  uint64_t v4 = *(void *)(*a1 + 88);
  uint64_t v6 = *(void *)(*a1 + 64);
  uint64_t v5 = *(char **)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 48);
  uint64_t v7 = *(void *)(*a1 + 56);
  uint64_t v9 = *(void *)(*a1 + 40);
  uint64_t v11 = *(void **)(*a1 + 32);
  uint64_t v10 = &v5[*(int *)(*a1 + 112)];
  (*(void (**)(void, void))(*a1 + 104))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v5, v9);
  free(v3);
  free(v5);
  free(v11);

  free(v1);
}

uint64_t sub_191C840F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v21 = a3;
  uint64_t v20 = sub_191CF57A8();
  sub_191AFEDD4();
  sub_191CF5C48();
  uint64_t v14 = v22;
  uint64_t v13 = v23;
  sub_191C8624C();
  sub_191C862AC(v18, v19, (uint64_t)v12, (uint64_t)v8, v13, v14, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_191C84318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void (*)(unsigned char *, void))sub_191CF5868();
  uint64_t v6 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v6, AssociatedTypeWitness);
  v4(v13, 0);
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))sub_191CF5868();
  uint64_t v10 = v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, v10, v11);
  return v8(v13, 0);
}

void (*Cartesian2ProductCollection.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0xB0uLL);
  *a1 = v7;
  *uint64_t v7 = a4;
  v7[1] = v4;
  void v7[2] = swift_getAssociatedTypeWitness();
  v7[3] = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[4] = TupleTypeMetadata2;
  uint64_t v8 = *(void *)(TupleTypeMetadata2 - 8);
  void v7[5] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v7[6] = malloc(v9);
  uint64_t v34 = malloc(v9);
  v7[7] = v34;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[8] = AssociatedTypeWitness;
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v7[9] = v11;
  uint64_t v12 = v11;
  uint64_t v33 = (char *)malloc(*(void *)(v11 + 64));
  v7[10] = v33;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  v7[11] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  v7[12] = v14;
  size_t v16 = *(void *)(v14 + 64);
  v7[13] = malloc(v16);
  uint64_t v32 = malloc(v16);
  v7[14] = v32;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  v7[15] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v7[16] = v18;
  size_t v19 = *(void *)(v18 + 64);
  uint64_t v31 = (char *)malloc(v19);
  v7[17] = v31;
  uint64_t v20 = (char *)malloc(v19);
  v7[18] = v20;
  uint64_t v21 = (char *)malloc(v19);
  v7[19] = v21;
  uint64_t v22 = &v21[*(int *)(v17 + 48)];
  uint64_t v23 = *(void (**)(void))(v15 + 16);
  v23();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v22, a3, v37);
  uint64_t v25 = *(int *)(v17 + 48);
  *((_DWORD *)v7 + 40) = v25;
  uint64_t v26 = &v20[v25];
  ((void (*)(char *, char *, uint64_t))v23)(v20, v21, v13);
  v24(v26, (uint64_t)v22, v37);
  uint64_t v27 = *(int *)(v17 + 48);
  *((_DWORD *)v7 + 41) = v27;
  uint64_t v28 = &v31[v27];
  v23();
  v24(v28, (uint64_t)v22, v37);
  ((void (*)(void *, char *, uint64_t))v23)(v32, v20, v13);
  v24(v33, (uint64_t)v28, v37);
  uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
  *((_DWORD *)v7 + 42) = v29;
  sub_191C84318((uint64_t)v34, (uint64_t)v34 + v29);
  return sub_191C848CC;
}

void sub_191C848CC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 164);
  uint64_t v4 = *(int *)(*(void *)a1 + 168);
  uint64_t v5 = *(int *)(*(void *)a1 + 160);
  uint64_t v35 = *(void **)(*(void *)a1 + 152);
  uint64_t v6 = *(char **)(*(void *)a1 + 136);
  uint64_t v37 = *(char **)(*(void *)a1 + 144);
  uint64_t v7 = *(void *)(*(void *)a1 + 128);
  uint64_t v29 = *(void *)(*(void *)a1 + 120);
  uint64_t v36 = *(void **)(*(void *)a1 + 112);
  uint64_t v8 = *(void *)(*(void *)a1 + 96);
  uint64_t v30 = *(void *)(*(void *)a1 + 104);
  uint64_t v31 = *(void *)(*(void *)a1 + 88);
  uint64_t v9 = *(void *)(*(void *)a1 + 72);
  uint64_t v34 = *(void **)(*(void *)a1 + 80);
  uint64_t v10 = *(void *)(*(void *)a1 + 56);
  uint64_t v11 = v2[8];
  uint64_t v32 = (void *)v2[7];
  uint64_t v33 = (char *)v2[6];
  if (a2)
  {
    uint64_t v23 = v2[5];
    uint64_t v12 = v2[3];
    uint64_t v22 = v2[4];
    uint64_t v21 = (void *)*v2;
    uint64_t v13 = v10 + v4;
    uint64_t v24 = &v6[v3];
    uint64_t v25 = &v37[v5];
    uint64_t v27 = v6;
    uint64_t v14 = &v33[*(int *)(v22 + 48)];
    (*(void (**)(char *, uint64_t))(*(void *)(v2[2] - 8) + 16))(v33, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v13, v12);
    uint64_t v15 = (void *)v30;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 32))(v30, v36, v31);
    uint64_t v16 = (uint64_t)v14;
    uint64_t v6 = v27;
    sub_191C87A58((uint64_t)v33, v16, v30, (uint64_t)v34, v21);
    uint64_t v17 = *(void (**)(void *, uint64_t))(v9 + 8);
    v17(v34, v11);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v18(v30, v31);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v35, v29);
    (*(void (**)(void *, uint64_t))(v23 + 8))(v32, v22);
    v17(v24, v11);
    v18((uint64_t)v27, v31);
    v17(v25, v11);
    v18((uint64_t)v37, v31);
  }
  else
  {
    uint64_t v26 = &v6[v3];
    uint64_t v28 = &v37[v5];
    sub_191C87A58(v10, v10 + v4, (uint64_t)v36, (uint64_t)v34, (void *)*v2);
    size_t v19 = *(void (**)(void *, uint64_t))(v9 + 8);
    v19(v34, v11);
    uint64_t v20 = *(void (**)(void *, uint64_t))(v8 + 8);
    v20(v36, v31);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v35, v29);
    v19(v26, v11);
    v20(v6, v31);
    v19(v28, v11);
    v20(v37, v31);
    uint64_t v15 = (void *)v30;
  }
  free(v35);
  free(v37);
  free(v6);
  free(v36);
  free(v15);
  free(v34);
  free(v32);
  free(v33);

  free(v2);
}

uint64_t Cartesian2ProductCollection.subscript.setter(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v70 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v75 = (char *)&v62 - v5;
  id v78 = (void *)a4;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v84 = (uint64_t)&v62 - v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v76 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v83 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v80 = (char *)&v62 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  long long v87 = (char *)&v62 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getTupleTypeMetadata2();
  uint64_t v74 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v69 = (uint64_t)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v62 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = *(int *)(v26 + 48);
  uint64_t v29 = v26;
  uint64_t v77 = v26;
  uint64_t v30 = (char *)&v62 + v28 - v27;
  uint64_t v31 = *(void *)(v18 - 8);
  uint64_t v65 = v31;
  uint64_t v32 = *(void (**)(void))(v31 + 32);
  uint64_t v33 = (char *)&v62 - v27;
  uint64_t v71 = (char *)&v62 - v27;
  uint64_t v64 = v18;
  v32();
  uint64_t v34 = *(void *)(v19 - 8);
  uint64_t v70 = v34;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v63 = v19;
  v35(v30, v72, v19);
  uint64_t v36 = *(int *)(v29 + 48);
  uint64_t v66 = v25;
  uint64_t v37 = &v25[v36];
  uint64_t v72 = &v25[v36];
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v25, v33, v18);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v30, v19);
  uint64_t v38 = TupleTypeMetadata2;
  uint64_t v39 = (uint64_t)&v17[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v68 = v17;
  sub_191C840F8((uint64_t)v17, v39, v73, (uint64_t)v78);
  uint64_t v40 = (uint64_t)&v15[*(int *)(v38 + 48)];
  uint64_t v41 = *(void (**)(void))(v85 + 16);
  id v67 = v15;
  ((void (*)(char *, char *, uint64_t))v41)(v15, v17, v81);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
  uint64_t v73 = v40;
  uint64_t v43 = AssociatedTypeWitness;
  v42(v40, v39, AssociatedTypeWitness);
  uint64_t v44 = &v87[*(int *)(v38 + 48)];
  v41();
  v42((uint64_t)v44, v40, v43);
  uint64_t v45 = v80;
  uint64_t v62 = &v80[*(int *)(v38 + 48)];
  unsigned __int8 v46 = v62;
  uint64_t v47 = v81;
  ((void (*)(char *, char *, uint64_t))v41)(v80, v87, v81);
  uint64_t v48 = v46;
  uint64_t v49 = AssociatedTypeWitness;
  v42((uint64_t)v48, (uint64_t)v44, AssociatedTypeWitness);
  id v50 = &v83[*(int *)(v38 + 48)];
  v41();
  v42((uint64_t)v50, (uint64_t)v44, v49);
  ((void (*)(uint64_t, char *, uint64_t))v41)(v84, v45, v47);
  uint64_t v51 = (uint64_t)v75;
  v42((uint64_t)v75, (uint64_t)v50, v49);
  uint64_t v52 = v78;
  uint64_t v53 = v69;
  uint64_t v54 = v69 + *(int *)(v77 + 48);
  sub_191C84318(v69, v54);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 40))(v53, v66, v64);
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 40))(v54, v72, v63);
  uint64_t v55 = v54;
  uint64_t v56 = v84;
  sub_191C87A58(v53, v55, v84, v51, v52);
  id v57 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  v57(v51, v49);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
  v58(v56, v47);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v60 = TupleTypeMetadata2;
  v59(v87, TupleTypeMetadata2);
  v57((uint64_t)v50, v49);
  v58((uint64_t)v83, v47);
  v57((uint64_t)v62, v49);
  v58((uint64_t)v80, v47);
  v59(v68, v60);
  v57(v73, v49);
  v58((uint64_t)v67, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v71, v77);
}

uint64_t Cartesian2ProductCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v42 = a2;
  uint64_t v39 = a4;
  uint64_t v41 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = a5;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v43 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v33 = (char *)&v33 + *(int *)(v15 + 48) - v16;
  uint64_t v18 = v33;
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = *(void (**)(void))(v37 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v20)((char *)&v33 - v16, a3, v19);
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v22(v18, v39, v8);
  uint64_t v35 = TupleTypeMetadata2;
  uint64_t v36 = v14;
  uint64_t v39 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v23 = v39;
  uint64_t v24 = v14;
  uint64_t v25 = v34;
  ((void (*)(char *, char *, uint64_t))v20)(v24, v17, v34);
  uint64_t v26 = v23;
  uint64_t v27 = v33;
  v22(v26, v33, v8);
  uint64_t v28 = &v43[*(int *)(TupleTypeMetadata2 + 48)];
  v20();
  v22(v28, v27, v8);
  uint64_t v29 = v36;
  sub_191C84318(v41, v42);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v35);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v21 + 8);
  v30(v28, v8);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v37 + 8);
  v31(v43, v25);
  v30(v39, v8);
  return ((uint64_t (*)(char *, uint64_t))v31)(v29, v25);
}

uint64_t Cartesian2ProductCollection.subscript.setter(uint64_t a1, char *a2, char *a3, char *a4, void *a5)
{
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  id v67 = a2;
  uint64_t v78 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v72 = (char *)&v62 - v7;
  uint64_t v73 = a5;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)&v62 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v74 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v84 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  long long v87 = (char *)&v62 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v86 = (char *)&v62 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v81 = (char *)&v62 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v85 = swift_getTupleTypeMetadata2();
  uint64_t v71 = *(void *)(v85 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v85);
  uint64_t v65 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v76 = (char *)&v62 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v63 = (char *)&v62 + *(int *)(v28 + 48) - v29;
  uint64_t v30 = v63;
  id v82 = (char *)&v62 - v29;
  uint64_t v79 = *(void *)(v22 - 8);
  uint64_t v80 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))((char *)&v62 - v29, v78, v22);
  uint64_t v31 = *(void *)(v23 - 8);
  uint64_t v77 = v23;
  uint64_t v78 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v67, v23);
  uint64_t v32 = TupleTypeMetadata2;
  uint64_t v75 = TupleTypeMetadata2;
  uint64_t v33 = &v21[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v64 = v9;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v66 = v21;
  v34(v21, v68, v8);
  uint64_t v35 = v83;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v33, v69, AssociatedTypeWitness);
  uint64_t v36 = &v81[*(int *)(v32 + 48)];
  uint64_t v37 = *(void (**)(void))(v9 + 16);
  uint64_t v38 = v21;
  uint64_t v39 = v8;
  ((void (*)(char *, char *, uint64_t))v37)(v81, v38, v8);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v41 = v36;
  uint64_t v69 = v36;
  uint64_t v42 = v36;
  uint64_t v43 = AssociatedTypeWitness;
  v40(v42, v33, AssociatedTypeWitness);
  id v67 = &v76[*(int *)(v85 + 48)];
  uint64_t v44 = v67;
  (*(void (**)(void))(v79 + 16))();
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v44, v63, v77);
  uint64_t v45 = v75;
  unsigned __int8 v46 = &v86[*(int *)(v75 + 48)];
  v37();
  v40(v46, v41, v43);
  uint64_t v68 = &v87[*(int *)(v45 + 48)];
  uint64_t v47 = v68;
  v37();
  v40(v47, v46, v43);
  uint64_t v48 = &v84[*(int *)(v45 + 48)];
  v37();
  uint64_t v62 = v43;
  v40(v48, v46, v43);
  uint64_t v49 = (uint64_t)v70;
  ((void (*)(char *, char *, uint64_t))v37)(v70, v87, v39);
  uint64_t v50 = (uint64_t)v72;
  v40(v72, v48, v43);
  uint64_t v51 = v65;
  uint64_t v52 = v65 + *(int *)(v85 + 48);
  uint64_t v53 = v73;
  sub_191C84318(v65, v52);
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 40))(v51, v76, v80);
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 40))(v52, v67, v77);
  uint64_t v54 = v52;
  uint64_t v55 = v49;
  sub_191C87A58(v51, v54, v49, v50, v53);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  uint64_t v57 = v62;
  v56(v50, v62);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v58(v55, v39);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v60 = v75;
  v59(v86, v75);
  v56((uint64_t)v48, v57);
  v58((uint64_t)v84, v39);
  v56((uint64_t)v68, v57);
  v58((uint64_t)v87, v39);
  v59(v66, v60);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v82, v85);
  v56((uint64_t)v69, v57);
  return ((uint64_t (*)(char *, uint64_t))v58)(v81, v39);
}

Swift::Int __swiftcall Cartesian2ProductCollection.index(_:offsetBy:)(Swift::Int _, Swift::tuple_Int_Int offsetBy)
{
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  Swift::Int v30 = _;
  uint64_t v29 = sub_191CF57A8();
  sub_191AFEDD4();
  sub_191CF5C48();
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  sub_191C8624C();
  sub_191C862AC((uint64_t)v16, (uint64_t)v10, (uint64_t)v14, (uint64_t)v8, v17, v18, (uint64_t)v3);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v28 + 8);
  v28 += 8;
  v19(v8, AssociatedTypeWitness);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v14;
  uint64_t v22 = v27;
  v20(v21, v27);
  Swift::Int v23 = sub_191C8649C(v16, (uint64_t)v10, v3);
  v19(v10, AssociatedTypeWitness);
  v20(v16, v22);
  return v23;
}

uint64_t sub_191C8624C()
{
  return sub_191CF5788();
}

uint64_t sub_191C862AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a2;
  uint64_t v21 = a6;
  uint64_t v18 = a1;
  uint64_t v19 = a5;
  uint64_t v15 = a3;
  uint64_t v16 = *(void *)(*(void *)(a7 + 32) + 8);
  uint64_t v17 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v14 - v11, v15, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(&v12[*(int *)(TupleTypeMetadata2 + 48)], v17, v8);
  sub_191CF57C8();
  sub_191CF57C8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, TupleTypeMetadata2);
}

uint64_t sub_191C8649C(char *a1, uint64_t a2, void *a3)
{
  uint64_t v46 = a2;
  uint64_t v44 = a1;
  uint64_t v4 = *(void *)(a3[5] + 8);
  uint64_t v47 = a3[3];
  uint64_t v48 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v34 - v6;
  uint64_t v50 = a3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v8 = v41;
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = AssociatedTypeWitness;
  uint64_t v36 = (uint64_t)&v34 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v45 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = *(int *)(v14 + 48);
  uint64_t v42 = v14;
  uint64_t v18 = (char *)&v34 + v17 - v15;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v37 = v18;
  uint64_t v38 = v19;
  uint64_t v39 = v7;
  uint64_t v40 = (char *)&v34 - v15;
  v19((char *)&v34 - v15, v44, v7);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v20(v18, v46, AssociatedTypeWitness);
  uint64_t v21 = (uint64_t)v43;
  uint64_t v22 = v50;
  sub_191C8624C();
  uint64_t v23 = (uint64_t)&v13[*(int *)(TupleTypeMetadata2 + 48)];
  v38(v13, v16, v7);
  uint64_t v24 = v35;
  v20((char *)v23, (uint64_t)v37, v35);
  uint64_t v25 = v36;
  uint64_t v46 = sub_191C86924(v36, v21, (uint64_t)v13, v23, v22);
  uint64_t v44 = v26;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v28 = v24;
  v27(v21, v24);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  uint64_t v30 = v39;
  v29(v25, v39);
  v27(v23, v28);
  v29((uint64_t)v13, v30);
  uint64_t v31 = sub_191CF57A8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v40, v42);
  uint64_t v33 = v46 * v31;
  if ((unsigned __int128)(v46 * (__int128)v31) >> 64 != (v46 * v31) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t result = (uint64_t)&v44[v33];
  if (__OFADD__(v33, v44)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t Cartesian2ProductCollection.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for Cartesian2ProductCollection();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t sub_191C86924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v24 = a3;
  uint64_t v22 = a2;
  uint64_t v28 = *(void *)(a5[4] + 8);
  uint64_t v29 = a4;
  uint64_t v26 = a5[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = a5;
  uint64_t v27 = *(void *)(a5[5] + 8);
  uint64_t v25 = a5[3];
  uint64_t v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v21 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  v15((char *)&v20 - v13, a1, AssociatedTypeWitness);
  uint64_t v20 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v16 = *(void (**)(char *))(*(void *)(v8 - 8) + 16);
  v16(v20);
  v15(v12, v24, AssociatedTypeWitness);
  ((void (*)(char *, uint64_t, uint64_t))v16)(&v12[*(int *)(TupleTypeMetadata2 + 48)], v29, v8);
  uint64_t v17 = sub_191CF57D8();
  sub_191CF57D8();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v21 + 8);
  v18(v12, TupleTypeMetadata2);
  v18(v14, TupleTypeMetadata2);
  return v17;
}

uint64_t sub_191C86BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842B8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_191C86BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842C8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_191C86BBC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B0](a1, a2, WitnessTable, v5);
}

void *sub_191C86C2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_191C87338(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

uint64_t sub_191C86C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_191C86CC8()
{
  swift_getWitnessTable();

  return sub_191CF5728();
}

uint64_t sub_191C86D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_191C86DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Cartesian2ProductCollection.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_191C86DE8(uint64_t **a1, uint64_t *a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  void v6[5] = v10;
  uint64_t v11 = (char *)malloc(*(void *)(v10 + 64));
  v6[6] = (uint64_t)v11;
  uint64_t v12 = sub_191C8701C(v6, *a2, a3);
  uint64_t v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v8);
  return sub_191C86FA4;
}

void sub_191C86FA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_191C8701C(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  Cartesian2ProductCollection.subscript.getter((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_191C87158;
}

void sub_191C87158(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_191C871A8()
{
  swift_getWitnessTable();

  return sub_191CF5768();
}

void sub_191C8721C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_191C8722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191C875D8(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_191C8726C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191C875D8(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_191C872B0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842A8](a1, a2, WitnessTable, v5);
}

void *sub_191C87320(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_191C87338(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

void *sub_191C87338(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x1E4FBB590]);
  *a1 = v9;
  return result;
}

uint64_t sub_191C873B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v3, a1);
  swift_getWitnessTable();
  uint64_t result = sub_191CF5F48();
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_191C8743C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_191C87490(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_191C87848();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_191C87520(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191C8757C()
{
  unint64_t result = qword_1E92E4B50;
  if (!qword_1E92E4B50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4B50);
  }
  return result;
}

uint64_t sub_191C875D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_191CF52B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_191C8784C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_191CF5898();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_191CF52B8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_191CF52B8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_191C87A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v37 = a4;
  uint64_t v32 = a5[4];
  uint64_t v33 = a3;
  uint64_t v30 = a5[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = a5;
  uint64_t v36 = a5[5];
  uint64_t v35 = a5[3];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = v14;
  uint64_t v18 = (char *)&v25 + *(int *)(v14 + 48) - v15;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v28 = v14;
  uint64_t v29 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)&v25 - v15, a1, AssociatedTypeWitness);
  uint64_t v20 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v18, a2, v9);
  uint64_t v21 = &v13[*(int *)(v17 + 48)];
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v27(v13, v16, AssociatedTypeWitness);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v26(v21, v18, v9);
  sub_191CF5878();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v9);
  uint64_t v22 = v28;
  uint64_t v23 = &v13[*(int *)(v28 + 48)];
  v27(v13, v16, AssociatedTypeWitness);
  v26(v23, v18, v9);
  sub_191CF5878();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, AssociatedTypeWitness);
}

uint64_t type metadata accessor for Cartesian2ProductCollection()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191C87DA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87DBC()
{
  return sub_191C87F58();
}

unint64_t sub_191C87DD4()
{
  unint64_t result = qword_1E92E4B58[0];
  if (!qword_1E92E4B58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E4B58);
  }
  return result;
}

uint64_t sub_191C87E28()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87E8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87EA8()
{
  return sub_191C87F58();
}

uint64_t sub_191C87EC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87F24()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87F40()
{
  return sub_191C87F58();
}

uint64_t sub_191C87F58()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87FA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87FC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C87FE4()
{
  return 32;
}

__n128 sub_191C87FF0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_191C87FFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191C880CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_191C88228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_191C882CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_191C88374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_191C8841C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_191C884C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_191C8856C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_191C88764(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x191C88A30);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

double sub_191C88A68()
{
  double result = 14.5;
  xmmword_1E92E0870 = xmmword_191D06F30;
  qword_1E92E0880 = 0x402D000000000000;
  unk_1E92E0888 = 0;
  byte_1E92E0890 = 1;
  qword_1E92E0898 = 0x402A000000000000;
  qword_1E92E08A0 = 0;
  byte_1E92E08A8 = 1;
  qword_1E92E08B0 = 0x402D000000000000;
  unk_1E92E08B8 = 0;
  byte_1E92E08C0 = 1;
  qword_1E92E08C8 = 0x402A000000000000;
  qword_1E92E08D0 = 0;
  byte_1E92E08D8 = 1;
  return result;
}

uint64_t type metadata accessor for DefaultActivityFontDefinition()
{
  return self;
}

unint64_t sub_191C88AD0()
{
  if (qword_1E92E1420 != -1) {
    swift_once();
  }
  if (!dyld_program_sdk_at_least()) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8410;
  unint64_t v1 = (void *)*MEMORY[0x1E4F24530];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB808];
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = 7;
  id v2 = v1;
  return sub_191B2D3B8(inited);
}

uint64_t sub_191C88B94(unsigned __int8 a1)
{
  if (qword_1E92E1420 != -1) {
    swift_once();
  }
  if (!dyld_program_sdk_at_least()) {
    return 0;
  }
  if (qword_1E92E08E0 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_1E92E0870 + 1);
  uint64_t v3 = qword_1E92E0880;
  uint64_t v4 = qword_1E92E08B0;
  uint64_t v8 = xmmword_1E92E0870;
  uint64_t v9 = qword_1E92E08C8;
  uint64_t v10 = qword_1E92E0898;
  if (qword_1EB44A060 != -1) {
    swift_once();
  }
  int v5 = byte_1EB44C860;
  unsigned __int8 v6 = sub_191C41D90();
  if (v5 == 2)
  {
    if (v6 >= 3u)
    {
      uint64_t v3 = v4;
      switch(a1)
      {
        case 5u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
          uint64_t v3 = v9;
          break;
        default:
          return v3;
      }
    }
    else
    {
      switch(a1)
      {
        case 5u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
          uint64_t v3 = v10;
          break;
        default:
          return v3;
      }
    }
  }
  else if (a1 - 7 < 4 || a1 == 5)
  {
    return v2;
  }
  else
  {
    return v8;
  }
  return v3;
}

uint64_t sub_191C88DF8()
{
  if (qword_1E92E1420 != -1) {
    swift_once();
  }
  if (!dyld_program_sdk_at_least()) {
    return 0;
  }
  sub_191CF4A48();
  return v0;
}

uint64_t type metadata accessor for CompactJindoActivityFontDefinition()
{
  return self;
}

uint64_t type metadata accessor for ExpandedJindoActivityFontDefinition()
{
  return self;
}

uint64_t sub_191C88EB8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191C88F4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8 + ((v7 + v8 + ((v7 + v8) & ~v8)) & ~v8)) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    BOOL v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    unint64_t v16 = ((unint64_t)a2 + v10) & v9;
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)v16, v5);
    unint64_t v17 = (v10 + v16) & v9;
    v15((uint64_t *)((v10 + (((unint64_t)v4 + v10) & v9)) & v9), (uint64_t *)v17, v5);
    v15((uint64_t *)((v10 + ((v10 + (((unint64_t)v4 + v10) & v9)) & v9)) & v9), (uint64_t *)((v10 + v17) & v9), v5);
  }
  return v4;
}

uint64_t sub_191C890B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + v5;
  uint64_t v7 = (v6 + a1) & ~v5;
  v10(v7, v3);
  uint64_t v8 = (v6 + v7) & ~v5;
  v10(v8, v3);

  return ((uint64_t (*)(uint64_t, uint64_t))v10)((v6 + v8) & ~v5, v3);
}

uint64_t sub_191C8919C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  uint64_t v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_191C89288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  uint64_t v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_191C89374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  uint64_t v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_191C89460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  uint64_t v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_191C8954C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v9 = ((v6 + v8 + ((v6 + v8 + ((v6 + v8) & ~v8)) & ~v8)) & ~v8) + v6;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v12 = ((v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_19;
  }
LABEL_11:
  int v13 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v13 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v9 | v13) + 1;
}

void sub_191C896C8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((*(void *)(v6 + 64) + v8 + ((*(void *)(v6 + 64) + v8 + ((*(void *)(v6 + 64) + v8) & ~v8)) & ~v8)) & ~v8)
     + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191C89900);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = *(void (**)(void))(v6 + 56);
        v17();
      }
      return;
  }
}

uint64_t _s14IndexedStorageVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EnvironmentValues.showsWidgetLabel.getter()
{
  sub_191B4F4CC();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues.showsWidgetLabel.setter()
{
  return sub_191CF4078();
}

uint64_t View.widgetLabel<A>(label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_191CF4928();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (char *)&v12 - v9;
  sub_191CF4918();
  MEMORY[0x192FE3AA0](v10, a3, v7, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t View.widgetLabel(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v7[2] = a1;
  v7[3] = a2;
  char v8 = a3;
  uint64_t v9 = a4;
  return View.widgetLabel<A>(label:)((uint64_t)sub_191C89BDC, (uint64_t)v7, a5, MEMORY[0x1E4F3E2F8], a6);
}

uint64_t sub_191C89B44@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_191CF4B78();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_191C89BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_191C89B44(a1);
}

uint64_t View.widgetLabel<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  void v6[5] = a5;
  v6[6] = a1;
  return View.widgetLabel<A>(label:)((uint64_t)sub_191C89D28, (uint64_t)v6, a2, MEMORY[0x1E4F3E2F8], a4);
}

uint64_t sub_191C89C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_191CF4B88();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_191C89D28@<X0>(uint64_t a1@<X8>)
{
  return sub_191C89C50(*(void *)(v1 + 48), a1);
}

uint64_t (*EnvironmentValues.showsWidgetLabel.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F4CC();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191C89DAC;
}

uint64_t sub_191C89DAC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

uint64_t sub_191C89DEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_191C89E80()
{
  return swift_getWitnessTable();
}

unint64_t sub_191C89EF0()
{
  unint64_t result = qword_1E92E0FC0;
  if (!qword_1E92E0FC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92E0FC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0FC0);
  }
  return result;
}

uint64_t sub_191C89F4C()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for ShowsWidgetLabelEnvironmentKey()
{
  return &type metadata for ShowsWidgetLabelEnvironmentKey;
}

uint64_t _s9WidgetKit26StaticControlConfigurationV4bodyQrvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191BB2F6C(v1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  sub_191C92C0C((uint64_t)v5, a1);
  uint64_t v6 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + v6) = &unk_1EE2A2210;
  return result;
}

void *StaticControlConfiguration.init(kind:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_191B547F8();
  uint64_t v16 = v15;
  uint64_t result = (void *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a3;
  result[5] = a4;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = 0;
  *(void *)(a7 + 32) = v14;
  *(void *)(a7 + 40) = v16;
  *(void *)(a7 + 48) = &unk_1E92E4C68;
  *(void *)(a7 + 56) = result;
  *(unsigned char *)(a7 + 88) = 1;
  return result;
}

uint64_t sub_191C8A148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[12] = a1;
  v7[17] = swift_task_alloc();
  sub_191CF5698();
  v7[18] = sub_191CF5688();
  uint64_t v9 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191C8A20C, v9, v8);
}

uint64_t sub_191C8A20C()
{
  uint64_t v1 = *(void (**)(void))(v0 + 104);
  swift_release();
  sub_191CF4708();
  v1();
  sub_191CF46F8();
  sub_191B54CBC();
  sub_191CF46E8();
  if (*(void *)(v0 + 80))
  {
    uint64_t v2 = *(void *)(v0 + 96);
    long long v3 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v3;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    sub_191B004A8((long long *)(v0 + 16), v2);
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    sub_191B54DCC(v0 + 56);
    return sub_191CF5FC8();
  }
}

uint64_t sub_191C8A384()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C8A3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v10 = v3[5];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_191B17A68;
  return sub_191C8A148(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t StaticControlConfiguration.init<A>(kind:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15 = sub_191B547F8();
  uint64_t v23 = v16;
  uint64_t v24 = v15;
  uint64_t v17 = *(void *)(a7 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (*(void *)(v17 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = a6;
  *((void *)v20 + 3) = a7;
  *((void *)v20 + 4) = a8;
  *((void *)v20 + 5) = a10;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v20[v18], a3, a7);
  unint64_t v22 = &v20[v19];
  *(void *)unint64_t v22 = a4;
  *((void *)v22 + 1) = a5;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = 0;
  *(void *)(a9 + 32) = v24;
  *(void *)(a9 + 40) = v23;
  *(void *)(a9 + 48) = &unk_1E92E4C78;
  *(void *)(a9 + 56) = v20;
  *(unsigned char *)(a9 + 88) = 1;
  return result;
}

uint64_t sub_191C8A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a8;
  v8[19] = v17;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a1;
  v8[13] = a3;
  v8[20] = swift_task_alloc();
  uint64_t v10 = *(void *)(a8 - 8);
  v8[21] = v10;
  v8[22] = v10;
  v8[23] = swift_task_alloc();
  uint64_t v11 = _s9WidgetKit14ValueGeneratorVMa_0();
  v8[24] = v11;
  v8[25] = *(void *)(v11 - 8);
  v8[26] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[27] = AssociatedTypeWitness;
  v8[28] = *(void *)(AssociatedTypeWitness - 8);
  v8[29] = swift_task_alloc();
  sub_191CF5698();
  v8[30] = sub_191CF5688();
  uint64_t v14 = sub_191CF5648();
  v8[31] = v14;
  v8[32] = v13;
  return MEMORY[0x1F4188298](sub_191C8A7E8, v14, v13);
}

uint64_t sub_191C8A7E8()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v0[22] + 16))(v2, v0[14], v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[33] = v5;
  void *v5 = v0;
  v5[1] = sub_191C8A8F8;
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[13];
  return sub_191C8B0CC(v6, v8, v7);
}

uint64_t sub_191C8A8F8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 208);
  uint64_t v4 = *(void *)(*v1 + 200);
  uint64_t v5 = *(void *)(*v1 + 192);
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 256);
  uint64_t v7 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v8 = sub_191C8AC58;
  }
  else {
    uint64_t v8 = sub_191C8AA90;
  }
  return MEMORY[0x1F4188298](v8, v7, v6);
}

uint64_t sub_191C8AA90()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 120);
  swift_release();
  sub_191CF4708();
  v2(v1);
  sub_191CF46F8();
  sub_191B54CBC();
  sub_191CF46E8();
  if (*(void *)(v0 + 80))
  {
    uint64_t v4 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 96);
    long long v7 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v7;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    sub_191B004A8((long long *)(v0 + 16), v6);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    sub_191B54DCC(v0 + 56);
    return sub_191CF5FC8();
  }
}

uint64_t sub_191C8AC58()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191C8ACF0()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C8AD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = v3 + v9;
  uint64_t v11 = (uint64_t *)(v3 + ((*(void *)(*(void *)(v8 - 8) + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v14;
  *uint64_t v14 = v4;
  v14[1] = sub_191B17A68;
  return sub_191C8A5E8(a1, a2, a3, v10, v12, v13, v7, v8);
}

uint64_t sub_191C8AEE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ControlValueProvider.previewValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlValueProvider.currentValue()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B0A348;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for StaticControlConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_191C8B05C()
{
  unint64_t result = qword_1EB449160;
  if (!qword_1EB449160)
  {
    type metadata accessor for ControlDescriptorConfiguration();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449160);
  }
  return result;
}

uint64_t _s9WidgetKit14ValueGeneratorVMa_0()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191C8B0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = *(void *)(a3 + 24);
  v4[6] = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[7] = AssociatedTypeWitness;
  v4[8] = *(void *)(AssociatedTypeWitness - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191C8B1B0, 0, 0);
}

uint64_t sub_191C8B1B0()
{
  uint64_t v1 = v0[3];
  if (v1 == 1)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_191CF3858();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E92F2508);
    uint64_t v12 = sub_191CF3838();
    os_log_type_t v13 = sub_191CF5948();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_191AF4000, v12, v13, "Fetching preview value", v14, 2u);
      MEMORY[0x192FE5F00](v14, -1, -1);
    }
    uint64_t v16 = v0[5];
    uint64_t v15 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  else if (v1)
  {
    return sub_191CF5FC8();
  }
  else
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_191CF3858();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2508);
    uint64_t v3 = sub_191CF3838();
    os_log_type_t v4 = sub_191CF5948();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_191AF4000, v3, v4, "Fetching current value", v5, 2u);
      MEMORY[0x192FE5F00](v5, -1, -1);
    }
    uint64_t v19 = v0[5];

    unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 24) + **(int **)(v19 + 24));
    uint64_t v6 = (void *)swift_task_alloc();
    v0[10] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_191C8B4FC;
    uint64_t v7 = v0[9];
    uint64_t v9 = v0[5];
    uint64_t v8 = v0[6];
    return v18(v7, v8, v9);
  }
}

uint64_t sub_191C8B4FC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191C8B690;
  }
  else {
    uint64_t v2 = sub_191C8B610;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191C8B610()
{
  (*(void (**)(void, void, void))(v0[8] + 32))(v0[2], v0[9], v0[7]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_191C8B690()
{
  uint64_t v1 = *(void **)(v0 + 88);
  sub_191BB2F2C();
  uint64_t v2 = sub_191CF5338();
  uint64_t v4 = v3;
  id v5 = v1;
  sub_191BDA6B4(v2, v4, 1106, v1, 0xD00000000000002ALL, 0x8000000191D0EDF0);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_191C8B774(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_191C8B8D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x191C8BAE8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

void static ControlAction.legacyAction.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ControlAction.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  size_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B016E0(0, (unint64_t *)&qword_1E92E2348);
  BOOL v9 = (void *)sub_191C8D2BC();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58D00]), sel_initWithIntent_, v9);

  if (v10)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
    *a3 = v10;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
    unint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000025;
    unint64_t v13 = 0x8000000191D11E10;
    swift_getDynamicType();
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

WidgetKit::ActionAuthenticationPolicy_optional __swiftcall ActionAuthenticationPolicy.init(rawValue:)(Swift::Int32 rawValue)
{
  if (rawValue >= 3) {
    char v2 = 3;
  }
  else {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::ActionAuthenticationPolicy_optional)rawValue;
}

uint64_t ActionAuthenticationPolicy.rawValue.getter()
{
  return *v0;
}

uint64_t sub_191C8BD24()
{
  return sub_191CF64C8();
}

uint64_t sub_191C8BD6C()
{
  return sub_191CF6498();
}

uint64_t sub_191C8BD98()
{
  return sub_191CF64C8();
}

WidgetKit::ActionAuthenticationPolicy_optional sub_191C8BDDC(Swift::Int32 *a1)
{
  return ActionAuthenticationPolicy.init(rawValue:)(*a1);
}

void sub_191C8BDE4(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void ControlAction.Storage.hash(into:)()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    sub_191CF6478();
    id v2 = v1;
    sub_191CF5B68();
  }
  else
  {
    sub_191CF6478();
  }
}

uint64_t ControlAction.Storage.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  sub_191CF6478();
  if (v1)
  {
    id v2 = v1;
    sub_191CF5B68();
  }
  return sub_191CF64C8();
}

uint64_t sub_191C8BEEC()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  sub_191CF6478();
  if (v1)
  {
    id v2 = v1;
    sub_191CF5B68();
  }
  return sub_191CF64C8();
}

void sub_191C8BF58()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    sub_191CF6478();
    id v2 = v1;
    sub_191CF5B68();
  }
  else
  {
    sub_191CF6478();
  }
}

uint64_t sub_191C8BFE8()
{
  uint64_t v1 = *v0;
  sub_191CF6468();
  sub_191CF6478();
  if (v1)
  {
    id v2 = v1;
    sub_191CF5B68();
  }
  return sub_191CF64C8();
}

id ControlAction.storage.getter@<X0>(void **a1@<X8>)
{
  id v2 = *v1;
  *a1 = *v1;
  return v2;
}

void ControlAction.storage.setter(void **a1)
{
  id v2 = *a1;

  *uint64_t v1 = v2;
}

uint64_t (*ControlAction.storage.modify())()
{
  return nullsub_1;
}

void static ControlAction.legacyAction<A>(_:)(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ControlAction.init(intentReference:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ControlAction.init<A, B>(_:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v25 - v17;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v26((char *)&v25 - v17, a1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a3);
  sub_191CF2D48();
  sub_191B016E0(0, (unint64_t *)&qword_1E92E2348);
  uint64_t v20 = (void *)sub_191C8D2BC();
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58D00]), sel_initWithIntent_, v20);

  if (v21)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, a3);
    unint64_t v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(a1, a4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v18, a4);
    *uint64_t v28 = v21;
  }
  else
  {
    unint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    unint64_t v29 = 0xD000000000000025;
    unint64_t v30 = 0x8000000191D11E10;
    uint64_t v24 = v27;
    v26(v27, (uint64_t)v18, a4);
    swift_getDynamicType();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, a4);
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

void ControlAction.authenticationPolicy.getter(char *a1@<X8>)
{
  if (*v1)
  {
    id v3 = *v1;
    id v4 = objc_msgSend(v3, sel_intent);
    self;
    unsigned int v5 = (void *)swift_dynamicCastObjCClass();

    if (!v5) {
  }
    }
  else
  {
    id v3 = 0;
    unsigned int v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_linkAction);

  if (!v6) {
    goto LABEL_11;
  }
  id v7 = objc_msgSend(v6, sel_authenticationPolicyAllowingImplicit_, 0);
  if (!v7)
  {

LABEL_11:
    char v10 = 0;
    goto LABEL_12;
  }
  size_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_integerValue);

  if (v9) {
    char v10 = 2;
  }
  else {
    char v10 = 1;
  }
LABEL_12:
  *a1 = v10;
}

id ControlAction.lnAction.getter()
{
  if (*v0)
  {
    id v1 = *v0;
    id v2 = objc_msgSend(v1, sel_intent);
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();

    if (!v3) {
  }
    }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v3, sel_linkAction);

  return v4;
}

void LNAction.authenticationPolicy.getter(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_authenticationPolicyAllowingImplicit_, 0);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_integerValue);

    if (v5) {
      char v6 = 2;
    }
    else {
      char v6 = 1;
    }
  }
  else
  {
    char v6 = 0;
  }
  *a1 = v6;
}

void *ControlAction.inIntent.getter()
{
  uint64_t result = *v0;
  if (*v0)
  {
    id v2 = objc_msgSend(result, sel_intent);
    self;
    uint64_t result = (void *)swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void ControlAction.hash(into:)()
{
  id v1 = *v0;
  if (*v0)
  {
    sub_191CF6478();
    id v2 = v1;
    sub_191CF5B68();
  }
  else
  {
    sub_191CF6478();
  }
}

uint64_t ControlAction.hashValue.getter()
{
  id v1 = *v0;
  sub_191CF6468();
  sub_191CF6478();
  if (v1)
  {
    id v2 = v1;
    sub_191CF5B68();
  }
  return sub_191CF64C8();
}

uint64_t ControlAction.debugDescription.getter()
{
  if (!*v0) {
    return 0xD00000000000001ALL;
  }
  id v1 = *v0;
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v1, sel_description);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();

  return 0x2E6C6F72746E6F43;
}

uint64_t sub_191C8C86C(char *a1, char *a2)
{
  return sub_191CD6700(*a1, *a2);
}

uint64_t sub_191C8C878()
{
  return sub_191CF64C8();
}

uint64_t sub_191C8C8F8()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C8C964()
{
  return sub_191CF64C8();
}

uint64_t sub_191C8C9E0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_191C8CA40(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656761726F7473;
  if (*v1) {
    uint64_t v2 = 0x746E65746E69;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_191C8CA7C()
{
  if (*v0) {
    return 0x746E65746E69;
  }
  else {
    return 0x656761726F7473;
  }
}

uint64_t sub_191C8CAB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_191C8CB18(uint64_t a1)
{
  unint64_t v2 = sub_191C8D5E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8CB54(uint64_t a1)
{
  unint64_t v2 = sub_191C8D5E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlAction.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2208);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C8D5E8();
  sub_191CF6508();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v14[0]) = 0;
  uint64_t v9 = sub_191CF6158();
  if (v9 == 1)
  {
    char v15 = 1;
    sub_191B71714();
    sub_191CF6178();
    uint64_t v10 = v14[0];
    unint64_t v11 = v14[1];
    sub_191B016E0(0, &qword_1E92E27E8);
    uint64_t v12 = sub_191CF5978();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_191B1603C(v10, v11);
LABEL_6:
    *a2 = v12;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if (!v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

void ControlAction.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E24A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C8D5E8();
  sub_191CF6528();
  if (v8)
  {
    LOBYTE(v13[0]) = 0;
    id v9 = v8;
    sub_191CF6258();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

      return;
    }
    sub_191B016E0(0, &qword_1E92E27E8);
    uint64_t v10 = sub_191CF5968();
    unint64_t v12 = v11;
    v13[0] = v10;
    v13[1] = v11;
    char v14 = 1;
    sub_191B718A4();
    sub_191CF6278();

    sub_191B1603C(v10, v12);
  }
  else
  {
    LOBYTE(v13[0]) = 0;
    sub_191CF6258();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191C8D01C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ControlAction.init(from:)(a1, a2);
}

void sub_191C8D034(void *a1)
{
}

void sub_191C8D04C()
{
  error[3] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  SecTaskRef v0 = SecTaskCreateFromSelf(0);
  if (v0)
  {
    id v1 = v0;
    error[0] = 0;
    uint64_t v2 = (__CFString *)sub_191CF5318();
    CFTypeRef v3 = SecTaskCopyValueForEntitlement(v1, v2, error);

    if (v3)
    {

      swift_dynamicCast();
    }
    else
    {
      CFErrorRef v4 = error[0];
      if (error[0])
      {
        type metadata accessor for CFError(0);
        sub_191C8DB84();
        swift_allocError();
        CFErrorRef *v5 = v4;
        swift_willThrow();
      }
    }
  }
}

BOOL _s9WidgetKit13ControlActionV7StorageO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  CFTypeRef v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
      id v4 = v3;
      id v5 = v2;
      char v6 = sub_191CF5B58();

      return v6 & 1;
    }
    return 0;
  }
  return !v3;
}

uint64_t _s9WidgetKit13ControlActionV2eeoiySbAC_ACtFZ_0(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  CFTypeRef v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
      id v4 = v2;
      id v5 = v3;
      id v6 = v4;
      id v7 = v5;
      char v8 = sub_191CF5B58();

      if (v8) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_191C8D2BC()
{
  sub_191CF2D18();
  sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
  if (swift_dynamicCast()
    && (sub_191CF2C98(), sub_191B016E0(0, &qword_1E92E2350), swift_dynamicCast()))
  {
    sub_191C8D04C();
    if (v0)
    {
LABEL_6:
      id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v4 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(v3, sel_initWithAppBundleIdentifier_linkAction_linkActionMetadata_, v4, v7, v7);

      return (uint64_t)v5;
    }
    id v1 = objc_msgSend(self, sel_mainBundle);
    id v2 = objc_msgSend(v1, sel_bundleIdentifier);

    if (v2)
    {
      sub_191CF5338();

      goto LABEL_6;
    }
  }
  else
  {
    sub_191CF5D88();
    swift_bridgeObjectRelease();
    sub_191CF6568();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
  }
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

unint64_t sub_191C8D5E8()
{
  unint64_t result = qword_1E92E2B00;
  if (!qword_1E92E2B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B00);
  }
  return result;
}

unint64_t sub_191C8D640()
{
  unint64_t result = qword_1E92E4D10;
  if (!qword_1E92E4D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D10);
  }
  return result;
}

unint64_t sub_191C8D698()
{
  unint64_t result = qword_1E92E4D18;
  if (!qword_1E92E4D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D18);
  }
  return result;
}

unint64_t sub_191C8D6F0()
{
  unint64_t result = qword_1E92E4D20;
  if (!qword_1E92E4D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionAuthenticationPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C8D810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionAuthenticationPolicy()
{
  return &type metadata for ActionAuthenticationPolicy;
}

void **assignWithCopy for ControlAction(void **a1, void **a2)
{
  int v3 = *a1;
  unsigned int v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for ControlAction(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ControlAction()
{
  return &type metadata for ControlAction;
}

void **initializeBufferWithCopyOfBuffer for ControlAction.Storage(void **a1, void **a2)
{
  int v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for ControlAction.Storage(id *a1)
{
}

void **assignWithCopy for ControlAction.Storage(void **a1, void **a2)
{
  int v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for ControlAction.Storage(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ControlAction.Storage()
{
  return &type metadata for ControlAction.Storage;
}

unsigned char *storeEnumTagSinglePayload for ControlAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C8DA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlAction.CodingKeys()
{
  return &type metadata for ControlAction.CodingKeys;
}

unint64_t sub_191C8DA80()
{
  unint64_t result = qword_1E92E4D28;
  if (!qword_1E92E4D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D28);
  }
  return result;
}

unint64_t sub_191C8DAD8()
{
  unint64_t result = qword_1E92E2B10;
  if (!qword_1E92E2B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B10);
  }
  return result;
}

unint64_t sub_191C8DB30()
{
  unint64_t result = qword_1E92E2B08;
  if (!qword_1E92E2B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B08);
  }
  return result;
}

unint64_t sub_191C8DB84()
{
  unint64_t result = qword_1E92E4D30;
  if (!qword_1E92E4D30)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D30);
  }
  return result;
}

uint64_t sub_191C8DBE4()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CAD0 = result;
  return result;
}

uint64_t sub_191C8DC0C()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A8A0);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CAB8 = v0;
  unk_1EB44CAC0 = 0xD000000000000013;
  qword_1EB44CAC8 = 0x8000000191D11F40;
  return result;
}

ValueMetadata *type metadata accessor for ContentSizeCategoryKey()
{
  return &type metadata for ContentSizeCategoryKey;
}

unint64_t sub_191C8DC98()
{
  unint64_t result = qword_1EB44AA08;
  if (!qword_1EB44AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA08);
  }
  return result;
}

unint64_t sub_191C8DCF0()
{
  unint64_t result = qword_1EB44AA20;
  if (!qword_1EB44AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA20);
  }
  return result;
}

unint64_t sub_191C8DD48()
{
  unint64_t result = qword_1EB44AA00;
  if (!qword_1EB44AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA00);
  }
  return result;
}

unint64_t sub_191C8DD9C(char a1)
{
  unint64_t result = 0x616D536172747865;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C616D73;
      break;
    case 2:
      unint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      unint64_t result = 0x656772616CLL;
      break;
    case 4:
      unint64_t result = 0x72614C6172747865;
      break;
    case 5:
      unint64_t result = 0x7478456172747865;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191C8DF2C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_191C8DD9C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_191C8DD9C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191C8DFB8()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191C8DD9C(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191C8E01C()
{
  sub_191C8DD9C(*v0);
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C8E070()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191C8DD9C(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191C8E0D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191C8EC7C();
  *a1 = result;
  return result;
}

unint64_t sub_191C8E100@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191C8DD9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_191C8E12C()
{
  return sub_191CF54F8();
}

uint64_t sub_191C8E18C()
{
  return sub_191CF54D8();
}

uint64_t sub_191C8E1DC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_191C8DD9C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_191C8DD9C(v2) && v5 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191C8E268(char *a1, char *a2)
{
  char v2 = *a1;
  unint64_t v3 = sub_191C8DD9C(*a2);
  uint64_t v5 = v4;
  if (v3 == sub_191C8DD9C(v2) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v8 ^ 1;
  }
  return v9 & 1;
}

uint64_t sub_191C8E304(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_191C8DD9C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_191C8DD9C(v2) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v8 ^ 1;
  }
  return v9 & 1;
}

uint64_t sub_191C8E39C(char *a1, char *a2)
{
  char v2 = *a1;
  unint64_t v3 = sub_191C8DD9C(*a2);
  uint64_t v5 = v4;
  if (v3 == sub_191C8DD9C(v2) && v5 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191C8E42C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D5C0];
      break;
    case 2:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D5C8];
      break;
    case 3:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D5B8];
      break;
    case 4:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D580];
      break;
    case 5:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D590];
      break;
    case 6:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D560];
      break;
    case 7:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D5A0];
      break;
    case 8:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D598];
      break;
    case 9:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D5A8];
      break;
    case 10:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D570];
      break;
    case 11:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D578];
      break;
    default:
      unint64_t v3 = (unsigned int *)MEMORY[0x1E4F3D588];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_191CF43A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t sub_191C8E57C()
{
  if (qword_1EB44AA28 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191C8E5D8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C8E42C(*a1, a2);
}

uint64_t sub_191C8E5F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_191C8E74C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191C8E620()
{
  if (qword_1EB44A840 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CAB8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191C8E6A4()
{
  unint64_t result = qword_1EB44AA10;
  if (!qword_1EB44AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA10);
  }
  return result;
}

unint64_t sub_191C8E6F8()
{
  unint64_t result = qword_1EB44AA18;
  if (!qword_1EB44AA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA18);
  }
  return result;
}

uint64_t sub_191C8E74C(uint64_t a1)
{
  uint64_t v2 = sub_191CF43A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E4F3D588]) {
    return 0;
  }
  if (v7 == *MEMORY[0x1E4F3D5C0]) {
    return 1;
  }
  if (v7 == *MEMORY[0x1E4F3D5C8]) {
    return 2;
  }
  if (v7 == *MEMORY[0x1E4F3D5B8]) {
    return 3;
  }
  if (v7 == *MEMORY[0x1E4F3D580]) {
    return 4;
  }
  if (v7 == *MEMORY[0x1E4F3D590]) {
    return 5;
  }
  if (v7 == *MEMORY[0x1E4F3D560]) {
    return 6;
  }
  if (v7 == *MEMORY[0x1E4F3D5A0]) {
    return 7;
  }
  if (v7 == *MEMORY[0x1E4F3D598]) {
    return 8;
  }
  if (v7 == *MEMORY[0x1E4F3D5A8]) {
    return 9;
  }
  if (v7 == *MEMORY[0x1E4F3D570]) {
    return 10;
  }
  if (v7 == *MEMORY[0x1E4F3D578]) {
    return 11;
  }
  v15[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  uint64_t v10 = sub_191CF5E58();
  swift_allocError();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08);
  sub_191B4F964((uint64_t)v15, v12);
  v14[0] = sub_191CF5DC8();
  v14[1] = v13;
  sub_191CF53B8();
  v15[5] = 66;
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x1E4FBBAA0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t getEnumTagSinglePayload for ContentSizeCategoryKey.CodableContentSizeCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentSizeCategoryKey.CodableContentSizeCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C8EC44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSizeCategoryKey.CodableContentSizeCategory()
{
  return &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory;
}

uint64_t sub_191C8EC7C()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

void static ControlSize._1x1.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

BOOL static ControlSize.Storage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ControlSize.Storage.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t sub_191C8ED10()
{
  return *(void *)&a1x1_0[8 * *v0];
}

uint64_t sub_191C8ED28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191C909D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191C8ED50(uint64_t a1)
{
  unint64_t v2 = sub_191C8F3E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8ED8C(uint64_t a1)
{
  unint64_t v2 = sub_191C8F3E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C8EDC8(uint64_t a1)
{
  unint64_t v2 = sub_191C8F538();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8EE04(uint64_t a1)
{
  unint64_t v2 = sub_191C8F538();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C8EE40(uint64_t a1)
{
  unint64_t v2 = sub_191C8F4E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8EE7C(uint64_t a1)
{
  unint64_t v2 = sub_191C8F4E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C8EEB8(uint64_t a1)
{
  unint64_t v2 = sub_191C8F490();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8EEF4(uint64_t a1)
{
  unint64_t v2 = sub_191C8F490();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191C8EF30(uint64_t a1)
{
  unint64_t v2 = sub_191C8F43C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8EF6C(uint64_t a1)
{
  unint64_t v2 = sub_191C8F43C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlSize.Storage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D38);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D40);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D48);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D50);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D58);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C8F3E8();
  sub_191CF6528();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_191C8F4E4();
      uint64_t v17 = v23;
      sub_191CF61D8();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_191C8F490();
      uint64_t v17 = v26;
      sub_191CF61D8();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_191C8F43C();
      uint64_t v17 = v29;
      sub_191CF61D8();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_191C8F538();
      sub_191CF61D8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_191C8F3E8()
{
  unint64_t result = qword_1E92E4D60;
  if (!qword_1E92E4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D60);
  }
  return result;
}

unint64_t sub_191C8F43C()
{
  unint64_t result = qword_1E92E4D68;
  if (!qword_1E92E4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D68);
  }
  return result;
}

unint64_t sub_191C8F490()
{
  unint64_t result = qword_1E92E4D70;
  if (!qword_1E92E4D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D70);
  }
  return result;
}

unint64_t sub_191C8F4E4()
{
  unint64_t result = qword_1E92E4D78;
  if (!qword_1E92E4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D78);
  }
  return result;
}

unint64_t sub_191C8F538()
{
  unint64_t result = qword_1E92E4D80;
  if (!qword_1E92E4D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4D80);
  }
  return result;
}

uint64_t ControlSize.Storage.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ControlSize.Storage.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D88);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D90);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4D98);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4DA0);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4DA8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_191C8F3E8();
  uint64_t v19 = v52;
  sub_191CF6508();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_191CF61A8();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_191CF5E38();
    swift_allocError();
    unint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    *unint64_t v29 = &type metadata for ControlSize.Storage;
    sub_191CF60D8();
    sub_191CF5E18();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_191C8F4E4();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_191CF60C8();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_191C8F490();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_191CF60C8();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_191C8F43C();
      uint64_t v37 = v52;
      sub_191CF60C8();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_191C8F538();
      uint64_t v26 = v52;
      sub_191CF60C8();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_191C8FC08@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ControlSize.Storage.init(from:)(a1, a2);
}

uint64_t sub_191C8FC20(void *a1)
{
  return ControlSize.Storage.encode(to:)(a1);
}

void ControlSize.storage.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void static ControlSize._1x2.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static ControlSize._2x1.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static ControlSize._2x2.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

BOOL static ControlSize.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ControlSize.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t sub_191C8FCA8(uint64_t a1)
{
  unint64_t v2 = sub_191C8FE68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191C8FCE4(uint64_t a1)
{
  unint64_t v2 = sub_191C8FE68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlSize.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4DB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C8FE68();
  sub_191CF6528();
  char v10 = v7;
  sub_191C8FEBC();
  sub_191CF6278();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_191C8FE68()
{
  unint64_t result = qword_1E92E4DB8;
  if (!qword_1E92E4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DB8);
  }
  return result;
}

unint64_t sub_191C8FEBC()
{
  unint64_t result = qword_1E92E4DC0;
  if (!qword_1E92E4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DC0);
  }
  return result;
}

uint64_t ControlSize.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ControlSize.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4DC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191C8FE68();
  sub_191CF6508();
  if (!v2)
  {
    sub_191C900F0();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191C900C0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ControlSize.init(from:)(a1, a2);
}

uint64_t sub_191C900D8(void *a1)
{
  return ControlSize.encode(to:)(a1);
}

unint64_t sub_191C900F0()
{
  unint64_t result = qword_1E92E4DD0;
  if (!qword_1E92E4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DD0);
  }
  return result;
}

uint64_t ControlSize.debugDescription.getter()
{
  strcpy((char *)v1, "ControlSize.");
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t sub_191C901B4()
{
  unint64_t result = qword_1E92E4DD8;
  if (!qword_1E92E4DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DD8);
  }
  return result;
}

unint64_t sub_191C9020C()
{
  unint64_t result = qword_1E92E4DE0;
  if (!qword_1E92E4DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DE0);
  }
  return result;
}

uint64_t sub_191C90260()
{
  strcpy((char *)v1, "ControlSize.");
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return v1[0];
}

ValueMetadata *type metadata accessor for ControlSize()
{
  return &type metadata for ControlSize;
}

ValueMetadata *type metadata accessor for ControlSize.Storage()
{
  return &type metadata for ControlSize.Storage;
}

unsigned char *storeEnumTagSinglePayload for ControlSize.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C9038CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSize.CodingKeys()
{
  return &type metadata for ControlSize.CodingKeys;
}

unsigned char *_s9WidgetKit11ControlSizeV7StorageOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C90490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlSize.Storage.CodingKeys()
{
  return &type metadata for ControlSize.Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._1x1CodingKeys()
{
  return &type metadata for ControlSize.Storage._1x1CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._1x2CodingKeys()
{
  return &type metadata for ControlSize.Storage._1x2CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._2x1CodingKeys()
{
  return &type metadata for ControlSize.Storage._2x1CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._2x2CodingKeys()
{
  return &type metadata for ControlSize.Storage._2x2CodingKeys;
}

unint64_t sub_191C9050C()
{
  unint64_t result = qword_1E92E4DE8;
  if (!qword_1E92E4DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DE8);
  }
  return result;
}

unint64_t sub_191C90564()
{
  unint64_t result = qword_1E92E4DF0;
  if (!qword_1E92E4DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DF0);
  }
  return result;
}

unint64_t sub_191C905BC()
{
  unint64_t result = qword_1E92E4DF8;
  if (!qword_1E92E4DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4DF8);
  }
  return result;
}

unint64_t sub_191C90614()
{
  unint64_t result = qword_1E92E4E00;
  if (!qword_1E92E4E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E00);
  }
  return result;
}

unint64_t sub_191C9066C()
{
  unint64_t result = qword_1E92E4E08;
  if (!qword_1E92E4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E08);
  }
  return result;
}

unint64_t sub_191C906C4()
{
  unint64_t result = qword_1E92E4E10;
  if (!qword_1E92E4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E10);
  }
  return result;
}

unint64_t sub_191C9071C()
{
  unint64_t result = qword_1E92E4E18;
  if (!qword_1E92E4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E18);
  }
  return result;
}

unint64_t sub_191C90774()
{
  unint64_t result = qword_1E92E4E20;
  if (!qword_1E92E4E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E20);
  }
  return result;
}

unint64_t sub_191C907CC()
{
  unint64_t result = qword_1E92E4E28;
  if (!qword_1E92E4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E28);
  }
  return result;
}

unint64_t sub_191C90824()
{
  unint64_t result = qword_1E92E4E30;
  if (!qword_1E92E4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E30);
  }
  return result;
}

unint64_t sub_191C9087C()
{
  unint64_t result = qword_1E92E4E38;
  if (!qword_1E92E4E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E38);
  }
  return result;
}

unint64_t sub_191C908D4()
{
  unint64_t result = qword_1E92E4E40;
  if (!qword_1E92E4E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E40);
  }
  return result;
}

unint64_t sub_191C9092C()
{
  unint64_t result = qword_1E92E4E48;
  if (!qword_1E92E4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E48);
  }
  return result;
}

unint64_t sub_191C90984()
{
  unint64_t result = qword_1E92E4E50;
  if (!qword_1E92E4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E50);
  }
  return result;
}

uint64_t sub_191C909D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 829960543 && a2 == 0xE400000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 846737759 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 829960799 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 846738015 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_191C90B48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_191C90B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_191C90B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_191C90B84(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_191C90B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_191C90BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_191C90BC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191C90BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191C90BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for WidgetDescriptorKey()
{
  return &type metadata for WidgetDescriptorKey;
}

uint64_t sub_191C90C0C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = (void *)a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v16;
      char v17 = *((unsigned char *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v16;
      if (v17)
      {
        uint64_t v19 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v19;
        swift_retain();
      }
      else
      {
        long long v24 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v24;
        (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(unsigned char *)(a1 + 88) = v17;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = (uint64_t)a2 + v9;
      *(void *)uint64_t v10 = *(void *)v11;
      uint64_t v12 = *(void *)(v11 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
      *(void *)(v10 + 24) = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v20 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v20;
      uint64_t v21 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v21;
      uint64_t v22 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22)
      {
        uint64_t v23 = a2[5];
        *(void *)(a1 + 32) = v22;
        *(void *)(a1 + 40) = v23;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      uint64_t v25 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[5];
    uint64_t v27 = a3[6];
    uint64_t v28 = (void *)(a1 + v26);
    unint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)(a1 + v27);
    char v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[8];
    *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)(a1 + v34) = *(uint64_t *)((char *)a2 + v34);
    uint64_t v35 = a3[10];
    *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(void *)(a1 + v35) = *(uint64_t *)((char *)a2 + v35);
    uint64_t v36 = a3[12];
    *(void *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[14];
    *(unsigned char *)(a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *(unsigned char *)(a1 + v40) = *((unsigned char *)a2 + v40);
    uint64_t v41 = a3[16];
    *(unsigned char *)(a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *(unsigned char *)(a1 + v41) = *((unsigned char *)a2 + v41);
    uint64_t v42 = a3[18];
    *(unsigned char *)(a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *(void *)(a1 + v42) = *(uint64_t *)((char *)a2 + v42);
    uint64_t v43 = a3[20];
    *(unsigned char *)(a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    *(unsigned char *)(a1 + v43) = *((unsigned char *)a2 + v43);
    uint64_t v44 = a3[22];
    *(unsigned char *)(a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
    *(unsigned char *)(a1 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v45 = a3[23];
    uint64_t v46 = a3[24];
    uint64_t v47 = (void *)(a1 + v45);
    uint64_t v48 = (uint64_t *)((char *)a2 + v45);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    *(unsigned char *)(a1 + v46) = *((unsigned char *)a2 + v46);
    uint64_t v50 = a3[26];
    *(unsigned char *)(a1 + a3[25]) = *((unsigned char *)a2 + a3[25]);
    *(unsigned char *)(a1 + v50) = *((unsigned char *)a2 + v50);
    uint64_t v51 = a3[28];
    *(unsigned char *)(a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    *(unsigned char *)(a1 + v51) = *((unsigned char *)a2 + v51);
    uint64_t v52 = a3[30];
    *(unsigned char *)(a1 + a3[29]) = *((unsigned char *)a2 + a3[29]);
    *(unsigned char *)(a1 + v52) = *((unsigned char *)a2 + v52);
    uint64_t v53 = a3[32];
    *(unsigned char *)(a1 + a3[31]) = *((unsigned char *)a2 + a3[31]);
    *(_OWORD *)(a1 + v53) = *(_OWORD *)((char *)a2 + v53);
    uint64_t v54 = a3[34];
    *(void *)(a1 + a3[33]) = *(uint64_t *)((char *)a2 + a3[33]);
    char v55 = (void *)(a1 + v54);
    char v56 = (uint64_t *)((char *)a2 + v54);
    uint64_t v57 = v56[1];
    *char v55 = *v56;
    v55[1] = v57;
    uint64_t v58 = a3[36];
    *(void *)(a1 + a3[35]) = *(uint64_t *)((char *)a2 + a3[35]);
    *(unsigned char *)(a1 + v58) = *((unsigned char *)a2 + v58);
    uint64_t v59 = a3[38];
    *(unsigned char *)(a1 + a3[37]) = *((unsigned char *)a2 + a3[37]);
    *(unsigned char *)(a1 + v59) = *((unsigned char *)a2 + v59);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for ViewSource(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44C438);
}

uint64_t sub_191C91044(uint64_t a1)
{
  type metadata accessor for ViewSource(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v3 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32)) {
      swift_release();
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 88))
  {
LABEL_8:
    swift_release();
    goto LABEL_10;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C911E8(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for ViewSource(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v12;
    uint64_t v13 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v13;
    uint64_t v14 = *(void **)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v14;
    char v15 = *(unsigned char *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v14;
    if (v15)
    {
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      swift_retain();
    }
    else
    {
      long long v22 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v22;
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 48, a2 + 48);
    }
    *(unsigned char *)(a1 + 88) = v15;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_191CF33C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    uint64_t v11 = *(void *)(v10 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    *(void *)(v9 + 24) = v11;
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v18;
    uint64_t v19 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v19;
    uint64_t v20 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v20;
      *(void *)(a1 + 40) = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    uint64_t v23 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[5];
  uint64_t v25 = a3[6];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  unint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *unint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v34 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  uint64_t v40 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);
  uint64_t v41 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[23];
  uint64_t v44 = a3[24];
  uint64_t v45 = (void *)(a1 + v43);
  uint64_t v46 = (void *)(a2 + v43);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v48 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v49 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + v49) = *(unsigned char *)(a2 + v49);
  uint64_t v50 = a3[30];
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v51 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(_OWORD *)(a1 + v51) = *(_OWORD *)(a2 + v51);
  uint64_t v52 = a3[34];
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[36];
  *(void *)(a1 + a3[35]) = *(void *)(a2 + a3[35]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[38];
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191C915B0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_191BD9698(a1, type metadata accessor for ViewSource);
    type metadata accessor for ViewSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v13 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v13;
      char v14 = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = v13;
      if (v14)
      {
        uint64_t v16 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v16;
        swift_retain();
      }
      else
      {
        uint64_t v19 = *(void *)(a2 + 72);
        *(void *)(a1 + 72) = v19;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 48, a2 + 48);
      }
      *(unsigned char *)(a1 + 88) = v14;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v9 = (void *)(a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      uint64_t v12 = v10[3];
      id v9[2] = v10[2];
      v9[3] = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17)
      {
        uint64_t v18 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v17;
        *(void *)(a1 + 40) = v18;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      uint64_t v20 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[5];
  long long v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[6];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  unint64_t v29 = (void *)(a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  uint64_t v30 = a3[23];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(_OWORD *)(a1 + a3[32]) = *(_OWORD *)(a2 + a3[32]);
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  uint64_t v33 = a3[34];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[35]) = *(void *)(a2 + a3[35]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  *(unsigned char *)(a1 + a3[38]) = *(unsigned char *)(a2 + a3[38]);
  return a1;
}

char *sub_191C91A64(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ViewSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_191CF33C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  uint64_t v13 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  uint64_t v16 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[22];
  a1[a3[21]] = a2[a3[21]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[24];
  *(_OWORD *)&a1[a3[23]] = *(_OWORD *)&a2[a3[23]];
  a1[v21] = a2[v21];
  uint64_t v22 = a3[26];
  a1[a3[25]] = a2[a3[25]];
  a1[v22] = a2[v22];
  uint64_t v23 = a3[28];
  a1[a3[27]] = a2[a3[27]];
  a1[v23] = a2[v23];
  uint64_t v24 = a3[30];
  a1[a3[29]] = a2[a3[29]];
  a1[v24] = a2[v24];
  uint64_t v25 = a3[32];
  a1[a3[31]] = a2[a3[31]];
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  uint64_t v26 = a3[34];
  *(void *)&a1[a3[33]] = *(void *)&a2[a3[33]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  uint64_t v27 = a3[36];
  *(void *)&a1[a3[35]] = *(void *)&a2[a3[35]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[38];
  a1[a3[37]] = a2[a3[37]];
  a1[v28] = a2[v28];
  return a1;
}

char *sub_191C91C9C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_191BD9698((uint64_t)a1, type metadata accessor for ViewSource);
    uint64_t v6 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF33C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[22];
  a1[a3[21]] = a2[a3[21]];
  a1[v32] = a2[v32];
  uint64_t v33 = a3[23];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v38] = a2[v38];
  uint64_t v39 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v39] = a2[v39];
  uint64_t v40 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v40] = a2[v40];
  uint64_t v41 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v41] = a2[v41];
  uint64_t v42 = a3[33];
  *(_OWORD *)&a1[a3[32]] = *(_OWORD *)&a2[a3[32]];
  *(void *)&a1[v42] = *(void *)&a2[v42];
  uint64_t v43 = a3[34];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v47 = *(void *)v45;
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = v47;
  *((void *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[35]] = *(void *)&a2[a3[35]];
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v48] = a2[v48];
  a1[a3[38]] = a2[a3[38]];
  return a1;
}

uint64_t sub_191C91F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C91F98);
}

uint64_t sub_191C91F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ViewSource(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191C92058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C9206C);
}

uint64_t sub_191C9206C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ViewSource(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WidgetDescriptor(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44C428);
}

uint64_t sub_191C92148()
{
  uint64_t result = type metadata accessor for ViewSource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191C92260(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v14;
      uint64_t v15 = (void *)a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v15;
      char v16 = *((unsigned char *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v17 = v15;
      if (v16)
      {
        uint64_t v18 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v18;
        swift_retain();
      }
      else
      {
        long long v23 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v23;
        (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(unsigned char *)(a1 + 88) = v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t)a2 + v8;
      *(void *)uint64_t v9 = *(void *)v10;
      uint64_t v11 = *(void *)(v10 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
      *(void *)(v9 + 24) = v11;
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v19 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v20;
      uint64_t v21 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21)
      {
        uint64_t v22 = a2[5];
        *(void *)(a1 + 32) = v21;
        *(void *)(a1 + 40) = v22;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      uint64_t v24 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_191C92484(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result == 1)
    {
      uint64_t v3 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
    }
    else
    {
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 32)) {
        swift_release();
      }
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(a1 + 88))
  {
LABEL_8:
    return swift_release();
  }

  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t sub_191C9259C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    uint64_t v11 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v11;
    uint64_t v12 = *(void **)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v12;
    char v13 = *(unsigned char *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v12;
    if (v13)
    {
      uint64_t v15 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v15;
      swift_retain();
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 48, a2 + 48);
    }
    *(unsigned char *)(a1 + 88) = v13;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_191CF33C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    *(void *)uint64_t v7 = *(void *)v8;
    uint64_t v9 = *(void *)(v8 + 24);
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(void *)(v7 + 24) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    uint64_t v17 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v17;
    uint64_t v18 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18)
    {
      uint64_t v19 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    uint64_t v21 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_191C92770(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_191BD9698(a1, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v11 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v11;
      char v12 = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v11;
      if (v12)
      {
        uint64_t v14 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v14;
        swift_retain();
      }
      else
      {
        uint64_t v17 = *(void *)(a2 + 72);
        *(void *)(a1 + 72) = v17;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 48, a2 + 48);
      }
      *(unsigned char *)(a1 + 88) = v12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      uint64_t v9 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v9;
      uint64_t v10 = v8[3];
      void v7[2] = v8[2];
      v7[3] = v10;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        uint64_t v16 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v15;
        *(void *)(a1 + 40) = v16;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      uint64_t v18 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_191C92988(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_191CF33C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    long long v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_191C92A60(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191BD9698((uint64_t)a1, type metadata accessor for ViewSource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_191CF33C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      long long v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_191C92B5C()
{
  uint64_t v3 = "@";
  uint64_t result = sub_191CF33C8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    unsigned int v4 = &v2;
    uint64_t v5 = &unk_191D07F08;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_191C92C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = (void *)(a2 + v4[5]);
  void *v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(a2 + v4[6]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = v4[7];
  if (qword_1EB44C478 != -1) {
    swift_once();
  }
  *(void *)(a2 + v7) = qword_1EB44C410;
  *(void *)(a2 + v4[8]) = &unk_1EE29B118;
  uint64_t v8 = v4[9];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + v8) = sub_191B52E60(MEMORY[0x1E4FBC860]);
  *(void *)(a2 + v4[10]) = 0;
  *(void *)(a2 + v4[11]) = 0;
  long long v10 = (void *)(a2 + v4[12]);
  *long long v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(a2 + v4[13]) = 0;
  *(unsigned char *)(a2 + v4[14]) = 0;
  *(unsigned char *)(a2 + v4[15]) = 0;
  *(unsigned char *)(a2 + v4[16]) = 1;
  *(unsigned char *)(a2 + v4[17]) = 0;
  *(void *)(a2 + v4[18]) = v9;
  *(unsigned char *)(a2 + v4[20]) = 0;
  *(unsigned char *)(a2 + v4[22]) = 2;
  uint64_t v11 = (uint64_t *)(a2 + v4[23]);
  swift_bridgeObjectRetain();
  uint64_t *v11 = sub_191C93DAC();
  v11[1] = v12;
  *(unsigned char *)(a2 + v4[24]) = 0;
  *(unsigned char *)(a2 + v4[25]) = 0;
  *(unsigned char *)(a2 + v4[26]) = 0;
  *(unsigned char *)(a2 + v4[27]) = 0;
  *(unsigned char *)(a2 + v4[28]) = 0;
  *(unsigned char *)(a2 + v4[29]) = 0;
  *(unsigned char *)(a2 + v4[30]) = 0;
  *(unsigned char *)(a2 + v4[31]) = 0;
  id v13 = (void *)(a2 + v4[32]);
  *id v13 = 0;
  v13[1] = 0;
  *(void *)(a2 + v4[33]) = 0;
  uint64_t v14 = (void *)(a2 + v4[34]);
  *uint64_t v14 = 0;
  v14[1] = 0;
  *(void *)(a2 + v4[35]) = 0;
  *(unsigned char *)(a2 + v4[36]) = 2;
  *(unsigned char *)(a2 + v4[37]) = 2;
  *(unsigned char *)(a2 + v4[38]) = 2;
  sub_191C93670(a1, a2);
  if (qword_1EB44BAA8 != -1) {
    swift_once();
  }
  *(unsigned char *)(a2 + v4[19]) = dyld_program_sdk_at_least();
  char v15 = dyld_program_sdk_at_least();
  uint64_t result = sub_191BD9698(a1, type metadata accessor for ViewSource);
  *(unsigned char *)(a2 + v4[21]) = v15 ^ 1;
  return result;
}

uint64_t sub_191C92E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v27 = a5;
  uint64_t v28 = a7;
  uint64_t v17 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a4;
  sub_191BB2F6C(a1, (uint64_t)v19);
  swift_storeEnumTagMultiPayload();
  sub_191C92C0C((uint64_t)v19, a9);
  uint64_t v21 = (int *)type metadata accessor for WidgetDescriptor(0);
  uint64_t v22 = v21[7];
  swift_bridgeObjectRelease();
  *(void *)(a9 + v22) = &unk_1EE29B078;
  *(void *)(a9 + v21[33]) = v20;
  long long v23 = (void *)(a9 + v21[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *long long v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (void *)(a9 + v21[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v24 = v27;
  v24[1] = a6;
  uint64_t v25 = (void *)(a9 + v21[34]);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v25 = v28;
  v25[1] = a8;
  *(unsigned char *)(a9 + v21[30]) = a10;
  *(unsigned char *)(a9 + v21[25]) = a10;
  return result;
}

__n128 sub_191C92FD8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C93670(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v8 = sub_191CF33C8();
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    }
    else
    {
      *(void *)(a1 + 24) = &type metadata for ControlViewSource;
      *(void *)(a1 + 32) = sub_191C5D5CC();
      char v15 = (_OWORD *)swift_allocObject();
      *(void *)a1 = v15;
      long long v16 = *((_OWORD *)v6 + 3);
      v15[3] = *((_OWORD *)v6 + 2);
      v15[4] = v16;
      v15[5] = *((_OWORD *)v6 + 4);
      *(_OWORD *)((char *)v15 + 89) = *(_OWORD *)(v6 + 73);
      __n128 result = *(__n128 *)v6;
      long long v17 = *((_OWORD *)v6 + 1);
      v15[1] = *(_OWORD *)v6;
      _OWORD v15[2] = v17;
    }
  }
  else
  {
    __n128 v10 = *(__n128 *)v6;
    long long v18 = *((_OWORD *)v6 + 1);
    __n128 v19 = v10;
    uint64_t v11 = *((void *)v6 + 4);
    uint64_t v12 = *((void *)v6 + 5);
    *(void *)(a1 + 24) = &type metadata for TimelineViewSource;
    *(void *)(a1 + 32) = sub_191C5D684();
    uint64_t v13 = swift_allocObject();
    *(void *)a1 = v13;
    long long v14 = v18;
    *(__n128 *)(v13 + 16) = v19;
    *(_OWORD *)(v13 + 32) = v14;
    *(void *)(v13 + 48) = v11;
    *(void *)(v13 + 56) = v12;
    __n128 result = *((__n128 *)v6 + 3);
    *(__n128 *)(v13 + 64) = result;
  }
  return result;
}

uint64_t sub_191C93190()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191C36078(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_191B01770((uint64_t)v4, (uint64_t *)&unk_1EB44BB00);
    if (qword_1EB44BAA8 != -1) {
      swift_once();
    }
    return dyld_program_sdk_at_least();
  }
  else
  {
    sub_191BD9EE8((uint64_t)v4, (uint64_t)v8);
    int v10 = v8[*(int *)(v5 + 144)];
    if (v10 == 2)
    {
      if (qword_1EB44BAA8 != -1) {
        swift_once();
      }
      uint64_t v9 = dyld_program_sdk_at_least();
    }
    else
    {
      uint64_t v9 = v10 & 1;
    }
    sub_191BD9698((uint64_t)v8, type metadata accessor for WidgetDescriptor);
  }
  return v9;
}

uint64_t sub_191C93394(uint64_t *a1, uint64_t *a2)
{
  return sub_191C93CF0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_191C933B4()
{
  uint64_t v0 = sub_191CF3478();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v12[-1] - v5;
  sub_191CF3518();
  sub_191CF3508();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_191CF34F8();
  if (qword_1EB44C420 != -1) {
    swift_once();
  }
  if (dyld_program_sdk_at_least())
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E4F58880], v0);
    char v7 = sub_191CF3468();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if (v7) {
      uint64_t v8 = &unk_1EE29B0F0;
    }
    else {
      uint64_t v8 = &unk_1EE29B0A0;
    }
  }
  else
  {
    uint64_t v8 = &unk_1EE29B0C8;
  }
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_bridgeObjectRetain();
  v9(v6, v0);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  qword_1EB44C410 = (uint64_t)v8;
  return result;
}

void sub_191C935AC()
{
  qword_1E92F2500 = MEMORY[0x1E4FBC860];
}

uint64_t sub_191C935C0@<X0>(void *a1@<X8>)
{
  if (qword_1E92E22C0 != -1) {
    swift_once();
  }
  *a1 = qword_1E92F2500;

  return swift_bridgeObjectRetain();
}

uint64_t sub_191C9362C(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  return sub_191BCCE38(v3);
}

uint64_t sub_191C93670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191C936D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(v0 + 104)) {
    swift_release();
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }

  return swift_deallocObject();
}

uint64_t sub_191C93738()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191C93790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF33C8();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v48 - v7;
  uint64_t v9 = type metadata accessor for ViewSource(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (_OWORD *)((char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  char v15 = (void *)((char *)v48 - v14);
  MEMORY[0x1F4188790](v13);
  long long v17 = (char *)v48 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E58);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_191C93670(a1, (uint64_t)v21);
  sub_191C93670(a2, v22);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_191C93670((uint64_t)v21, (uint64_t)v15);
    uint64_t v29 = *v15;
    uint64_t v30 = v15[1];
    uint64_t v32 = v15[2];
    uint64_t v31 = v15[3];
    uint64_t v33 = v15[4];
    if (swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v33);
      swift_release();
      goto LABEL_11;
    }
    uint64_t v50 = v33;
    uint64_t v38 = *(void *)v22;
    uint64_t v39 = *(void *)(v22 + 8);
    uint64_t v40 = *(void *)(v22 + 16);
    uint64_t v41 = *(void *)(v22 + 24);
    uint64_t v49 = *(char **)(v22 + 32);
    v48[1] = *(void *)(v22 + 40);
    BOOL v42 = v29 == v38 && v30 == v39;
    if (v42 || (v43 = v40, v44 = sub_191CF6348(), uint64_t v40 = v43, (v44 & 1) != 0))
    {
      if (v31)
      {
        if (v41)
        {
          if (v32 != v40 || v31 != v41)
          {
            char v27 = sub_191CF6348();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_27:
            uint64_t v46 = v50;
            sub_191B16F2C((uint64_t)v49);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_191B16F2C(v46);
            swift_release();
            goto LABEL_28;
          }
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v27 = 1;
          goto LABEL_27;
        }
      }
      else if (!v41)
      {
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v27 = 0;
    goto LABEL_27;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_191C93670((uint64_t)v21, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
    swift_release();
    swift_release();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      swift_release();
      uint64_t v24 = v50;
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      v25(v8, v17, v4);
      uint64_t v26 = (uint64_t)v49;
      v25(v49, (char *)v22, v4);
      char v27 = sub_191CF33A8();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v28(v26, v4);
      v28((uint64_t)v8, v4);
LABEL_28:
      sub_191BD9698((uint64_t)v21, type metadata accessor for ViewSource);
      return v27 & 1;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v4);
  }
  else
  {
    sub_191C93670((uint64_t)v21, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v34 = v12[3];
      v53[2] = v12[2];
      v53[3] = v34;
      v54[0] = v12[4];
      *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v12 + 73);
      long long v35 = v12[1];
      v53[0] = *v12;
      v53[1] = v35;
      long long v36 = *(_OWORD *)(v22 + 48);
      _OWORD v51[2] = *(_OWORD *)(v22 + 32);
      v51[3] = v36;
      v52[0] = *(_OWORD *)(v22 + 64);
      *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)(v22 + 73);
      long long v37 = *(_OWORD *)(v22 + 16);
      v51[0] = *(_OWORD *)v22;
      v51[1] = v37;
      char v27 = sub_191C1034C(v53, v51);
      sub_191B15E68((uint64_t)v51);
      sub_191B15E68((uint64_t)v53);
      goto LABEL_28;
    }
    sub_191B15E68((uint64_t)v12);
  }
LABEL_11:
  sub_191B01770((uint64_t)v21, &qword_1E92E4E58);
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_191C93CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (v12 = sub_191CF6348(), uint64_t result = 0, (v12 & 1) != 0))
  {
    uint64_t result = (a4 | a8) == 0;
    if (a4 && a8)
    {
      if (a3 == a7 && a4 == a8)
      {
        return 1;
      }
      else
      {
        return sub_191CF6348();
      }
    }
  }
  return result;
}

uint64_t sub_191C93DAC()
{
  int program_sdk_version = dyld_get_program_sdk_version();
  uint64_t v2 = sub_191CF62C8();
  sub_191CF53B8();
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t result = v2;
  if (program_sdk_version)
  {
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLSessionEventConfiguration()
{
  return &type metadata for WidgetURLSessionEventConfiguration;
}

uint64_t destroy for TimelineViewSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for TimelineViewSource(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_retain();
  return a1;
}

void *assignWithCopy for TimelineViewSource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      uint64_t v6 = a2[5];
      a1[4] = v4;
      a1[5] = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[5];
  a1[4] = v4;
  a1[5] = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TimelineViewSource()
{
  return &type metadata for TimelineViewSource;
}

unint64_t sub_191C9413C(uint64_t a1)
{
  unint64_t result = sub_191C94164();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_191C94164()
{
  unint64_t result = qword_1EB44AB30;
  if (!qword_1EB44AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AB30);
  }
  return result;
}

uint64_t sub_191C941B8()
{
  uint64_t v0 = sub_191CF43A8();
  __swift_allocate_value_buffer(v0, qword_1E92F25C8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92F25C8);
  uint64_t v2 = *MEMORY[0x1E4F3D5B8];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

double sub_191C94240()
{
  return 16.0;
}

uint64_t sub_191C94248(void *a1, uint64_t a2, char a3)
{
  return sub_191C98DF4(a1, a2, a3 & 1);
}

unint64_t sub_191C94250()
{
  return sub_191B2D3B8(MEMORY[0x1E4FBC860]);
}

uint64_t sub_191C9425C(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, double a6)
{
  uint64_t v50 = a5;
  int v48 = a4;
  uint64_t v49 = a3;
  uint64_t v51 = sub_191CF3C18();
  uint64_t v9 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v47 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191CF49C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B038);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v21(a1, 1, v14) == 1)
  {
    if (a2)
    {
      id v22 = a2;
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4F3E090], v14);
      id v22 = sub_191C432DC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
LABEL_7:
    uint64_t v23 = v52;
    uint64_t v24 = (*(uint64_t (**)(id, uint64_t, void))(v52 + 120))(v22, v49, v48 & 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_191D08030;
    uint64_t v26 = (void *)*MEMORY[0x1E4F245F0];
    *(void *)(inited + 32) = *MEMORY[0x1E4F245F0];
    uint64_t v27 = MEMORY[0x1E4FBC958];
    *(double *)(inited + 40) = a6;
    uint64_t v28 = (void *)*MEMORY[0x1E4F24620];
    *(void *)(inited + 64) = v27;
    *(void *)(inited + 72) = v28;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B7B8);
    *(void *)(inited + 80) = v24;
    uint64_t v30 = (void *)*MEMORY[0x1E4F24530];
    *(void *)(inited + 104) = v29;
    *(void *)(inited + 112) = v30;
    *(void *)(inited + 144) = MEMORY[0x1E4FBB808];
    *(void *)(inited + 120) = 7;
    id v31 = v26;
    id v32 = v28;
    id v33 = v30;
    unint64_t v34 = sub_191B2D3B8(inited);
    sub_191B01614(v50, (uint64_t)v13, &qword_1EB44A280);
    uint64_t v35 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v51) == 1)
    {
      uint64_t v36 = sub_191B01770((uint64_t)v13, &qword_1EB44A280);
LABEL_15:
      uint64_t v43 = (*(uint64_t (**)(uint64_t))(v23 + 128))(v36);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v55 = v34;
      sub_191C98810(v43, (uint64_t)sub_191C987C0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v55);
      swift_bridgeObjectRelease();
      type metadata accessor for CFString(0);
      sub_191C99A90((unint64_t *)&qword_1EB44B920);
      uint64_t v45 = sub_191CF5238();

      swift_bridgeObjectRelease();
      return v45;
    }
    long long v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v13, v35);
    int v38 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v37, v35);
    if (v38 != *MEMORY[0x1E4F3CD08])
    {
      if (v38 == *MEMORY[0x1E4F3CD00])
      {
        uint64_t v39 = 1;
LABEL_14:
        (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v35);
        uint64_t v40 = (void *)*MEMORY[0x1E4F24590];
        uint64_t v56 = MEMORY[0x1E4FBB550];
        *(void *)&long long v55 = v39;
        sub_191B4F9C0(&v55, v54);
        id v41 = v40;
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v53 = v34;
        sub_191B4B2C0(v54, v41, v42);
        unint64_t v34 = v53;

        uint64_t v36 = swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v37, v35);
    }
    uint64_t v39 = 0;
    goto LABEL_14;
  }
  sub_191B01614(a1, (uint64_t)v20, &qword_1EB44B038);
  if (v21((uint64_t)v20, 1, v14) != 1)
  {
    id v22 = sub_191C432DC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    goto LABEL_7;
  }
  __break(1u);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_191C94854(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int v30 = a4;
  uint64_t v29 = a3;
  uint64_t v32 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF4AE8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191CF43F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a5;
  sub_191CF4AC8();
  double v20 = (*(double (**)(uint64_t, char *))(v6 + 88))(a1, v19);
  uint64_t v21 = v16;
  uint64_t v22 = v29;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  if (v30) {
    uint64_t v22 = (*(double (**)(char *))(v6 + 104))(v15);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_191CF4AB8();
  uint64_t v23 = (void *)sub_191C9425C(v32, 0, v22, 0, (uint64_t)v11, v20);
  sub_191B01770((uint64_t)v11, &qword_1EB44A280);
  id v24 = sub_191C42D7C();
  if (qword_1E92E2CF8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_191CF43A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1E92F25C8);
  id v26 = sub_191C4301C();
  uint64_t v27 = CTFontDescriptorCreateWithTextStyleAndAttributes();

  return v27;
}

uint64_t sub_191C94B5C(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  int v25 = a4;
  id v26 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B038);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_191CF4AC8();
  double v17 = (*(double (**)(uint64_t, unsigned char *))(v4 + 96))(a1, v16);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  if (v25) {
    a3 = (*(double (**)(uint64_t))(v4 + 112))(a1);
  }
  uint64_t v18 = sub_191CF49C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_191CF4AB8();
  uint64_t v19 = (void *)sub_191C9425C((uint64_t)v12, v26, a3, 0, (uint64_t)v9, v17);
  sub_191B01770((uint64_t)v9, &qword_1EB44A280);
  sub_191B01770((uint64_t)v12, &qword_1EB44B038);
  if (qword_1E92E2CF8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_191CF43A8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E92F25C8);
  id v21 = sub_191C4301C();
  uint64_t v22 = CTFontDescriptorCreateWithTextStyleAndAttributes();

  return v22;
}

uint64_t type metadata accessor for DefaultClockComplicationFontDefinition()
{
  return self;
}

uint64_t sub_191C94E5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_191C94854(a1, a2, a3, a4 & 1, a5);
}

uint64_t sub_191C94E64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_191C94854(a1, a2, a3, a4 & 1, a5);

  return sub_191CF49A8();
}

uint64_t sub_191C94EA0(uint64_t a1, uint64_t a2, char a3, double a4)
{
  int v7 = a3 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4AB8();
  uint64_t v11 = (void *)sub_191C9425C(a1, 0, a2, v7, (uint64_t)v10, a4);
  sub_191B01770((uint64_t)v10, &qword_1EB44A280);
  uint64_t v12 = CTFontDescriptorCreateWithAttributesAndOptions();

  return v12;
}

uint64_t sub_191C94F98(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  return sub_191C94B5C(a1, a2, a3, a4 & 1);
}

uint64_t sub_191C94FA0(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  sub_191C94B5C(a1, a2, a3, a4 & 1);

  return sub_191CF49A8();
}

double sub_191C94FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF4AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  double v13 = 15.0;
  if (v12 != *MEMORY[0x1E4F3E130]
    && v12 != *MEMORY[0x1E4F3E148]
    && v12 != *MEMORY[0x1E4F3E150]
    && v12 != *MEMORY[0x1E4F3E158])
  {
    double v13 = 10.0;
    BOOL v17 = v12 == *MEMORY[0x1E4F3E188] || v12 == *MEMORY[0x1E4F3E138];
    BOOL v18 = v17 || v12 == *MEMORY[0x1E4F3E140];
    if (!v18 && v12 != *MEMORY[0x1E4F3E160])
    {
      double v13 = 8.5;
      BOOL v20 = v12 == *MEMORY[0x1E4F3E178] || v12 == *MEMORY[0x1E4F3E168];
      if (!v20 && v12 != *MEMORY[0x1E4F3E170])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        double v13 = 10.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23.n128_u64[0] = 1.0;
  if (v22 != *MEMORY[0x1E4F3D6B8])
  {
    v23.n128_u64[0] = 0x3FF199999999999ALL;
    if (v22 != *MEMORY[0x1E4F3D6D0])
    {
      if (v22 == *MEMORY[0x1E4F3D6C0])
      {
        v23.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v22 == *MEMORY[0x1E4F3D6D8] || v22 == *MEMORY[0x1E4F3D6E8])
      {
        v23.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v22 != *MEMORY[0x1E4F3D6C8])
      {
        if (v22 == *MEMORY[0x1E4F3D6E0])
        {
          v23.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
          v23.n128_u64[0] = 1.0;
        }
      }
    }
  }
  return v13 * v23.n128_f64[0];
}

double sub_191C95358(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  char v7 = sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E4F3D6B8])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E4F3D6D0])
    {
      if (v8 == *MEMORY[0x1E4F3D6C0])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E4F3D6D8] || v8 == *MEMORY[0x1E4F3D6E8])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E4F3D6C8])
      {
        if (v8 == *MEMORY[0x1E4F3D6E0])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  double v11 = 10.0;
  if (v7) {
    double v11 = 7.0;
  }
  return v11 * v9.n128_f64[0];
}

double sub_191C95588(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0B8], MEMORY[0x1E4F3E0C0], MEMORY[0x1E4F3E0C8]);
}

uint64_t sub_191C955C8(uint64_t a1)
{
  return sub_191C95BF4(a1, MEMORY[0x1E4F3E0C0], MEMORY[0x1E4F3E0B8]);
}

uint64_t type metadata accessor for CornerClockComplicationFontDefinition()
{
  return self;
}

double sub_191C95618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF4AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  double v13 = 9.0;
  if (v12 != *MEMORY[0x1E4F3E130]
    && v12 != *MEMORY[0x1E4F3E148]
    && v12 != *MEMORY[0x1E4F3E150]
    && v12 != *MEMORY[0x1E4F3E158])
  {
    double v13 = 7.0;
    BOOL v17 = v12 == *MEMORY[0x1E4F3E188] || v12 == *MEMORY[0x1E4F3E138];
    BOOL v18 = v17 || v12 == *MEMORY[0x1E4F3E140];
    if (!v18 && v12 != *MEMORY[0x1E4F3E160])
    {
      double v13 = 6.0;
      BOOL v20 = v12 == *MEMORY[0x1E4F3E178] || v12 == *MEMORY[0x1E4F3E168];
      if (!v20 && v12 != *MEMORY[0x1E4F3E170])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        double v13 = 7.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23.n128_u64[0] = 1.0;
  if (v22 != *MEMORY[0x1E4F3D6B8])
  {
    v23.n128_u64[0] = 0x3FF199999999999ALL;
    if (v22 != *MEMORY[0x1E4F3D6D0])
    {
      if (v22 == *MEMORY[0x1E4F3D6C0])
      {
        v23.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v22 == *MEMORY[0x1E4F3D6D8] || v22 == *MEMORY[0x1E4F3D6E8])
      {
        v23.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v22 != *MEMORY[0x1E4F3D6C8])
      {
        if (v22 == *MEMORY[0x1E4F3D6E0])
        {
          v23.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
          v23.n128_u64[0] = 1.0;
        }
      }
    }
  }
  return v13 * v23.n128_f64[0];
}

double sub_191C95984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  char v7 = sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E4F3D6B8])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E4F3D6D0])
    {
      if (v8 == *MEMORY[0x1E4F3D6C0])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E4F3D6D8] || v8 == *MEMORY[0x1E4F3D6E8])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E4F3D6C8])
      {
        if (v8 == *MEMORY[0x1E4F3D6E0])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  double v11 = 7.0;
  if (v7) {
    double v11 = 5.0;
  }
  return v11 * v9.n128_f64[0];
}

double sub_191C95BB4(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0B8], MEMORY[0x1E4F3E0B8], MEMORY[0x1E4F3E0C8]);
}

uint64_t sub_191C95BF4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  if (sub_191CF3528())
  {
    uint64_t v3 = a2;
  }
  else
  {
    uint64_t v3 = a3;
  }
  return v3();
}

uint64_t type metadata accessor for CornerSmallClockComplicationFontDefinition()
{
  return self;
}

double sub_191C95CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF4AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E4F3E130]
    || v12 == *MEMORY[0x1E4F3E148]
    || v12 == *MEMORY[0x1E4F3E150]
    || v12 == *MEMORY[0x1E4F3E158])
  {
    double v16 = 19.5;
  }
  else
  {
    double v16 = 12.0;
    if (v12 != *MEMORY[0x1E4F3E188]
      && v12 != *MEMORY[0x1E4F3E138]
      && v12 != *MEMORY[0x1E4F3E140]
      && v12 != *MEMORY[0x1E4F3E160])
    {
      double v16 = 10.5;
      BOOL v20 = v12 == *MEMORY[0x1E4F3E178] || v12 == *MEMORY[0x1E4F3E168];
      if (!v20 && v12 != *MEMORY[0x1E4F3E170])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        double v16 = 12.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23.n128_u64[0] = 1.0;
  if (v22 != *MEMORY[0x1E4F3D6B8])
  {
    v23.n128_u64[0] = 0x3FF199999999999ALL;
    if (v22 != *MEMORY[0x1E4F3D6D0])
    {
      if (v22 == *MEMORY[0x1E4F3D6C0])
      {
        v23.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v22 == *MEMORY[0x1E4F3D6D8] || v22 == *MEMORY[0x1E4F3D6E8])
      {
        v23.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v22 != *MEMORY[0x1E4F3D6C8])
      {
        if (v22 == *MEMORY[0x1E4F3D6E0])
        {
          v23.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
          v23.n128_u64[0] = 1.0;
        }
      }
    }
  }
  return v16 * v23.n128_f64[0];
}

double sub_191C9605C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  char v7 = sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E4F3D6B8])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E4F3D6D0])
    {
      if (v8 == *MEMORY[0x1E4F3D6C0])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E4F3D6D8] || v8 == *MEMORY[0x1E4F3D6E8])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E4F3D6C8])
      {
        if (v8 == *MEMORY[0x1E4F3D6E0])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  double v11 = 12.0;
  if (v7) {
    double v11 = 7.5;
  }
  return v11 * v9.n128_f64[0];
}

uint64_t type metadata accessor for CircularClockComplicationFontDefinition()
{
  return self;
}

double sub_191C962B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  char v7 = sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E4F3D6B8])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E4F3D6D0])
    {
      if (v8 == *MEMORY[0x1E4F3D6C0])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E4F3D6D8] || v8 == *MEMORY[0x1E4F3D6E8])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E4F3D6C8])
      {
        if (v8 == *MEMORY[0x1E4F3D6E0])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  double v11 = 16.0;
  if (v7) {
    double v11 = 11.5;
  }
  return v11 * v9.n128_f64[0];
}

double sub_191C964E4(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3E130]
    || v6 == *MEMORY[0x1E4F3E148]
    || v6 == *MEMORY[0x1E4F3E150]
    || v6 == *MEMORY[0x1E4F3E158])
  {
    goto LABEL_18;
  }
  if (v6 == *MEMORY[0x1E4F3E188])
  {
    sub_191CF4A68();
    return v10;
  }
  if (v6 == *MEMORY[0x1E4F3E138] || v6 == *MEMORY[0x1E4F3E140])
  {
LABEL_18:
    sub_191CF4A58();
    return v10;
  }
  if (v6 != *MEMORY[0x1E4F3E160])
  {
    BOOL v14 = v6 == *MEMORY[0x1E4F3E178] || v6 == *MEMORY[0x1E4F3E168];
    if (!v14 && v6 != *MEMORY[0x1E4F3E170])
    {
      sub_191CF4A58();
      double v12 = v16;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v12;
    }
  }
  sub_191CF4A48();
  return v10;
}

uint64_t type metadata accessor for RectangularClockComplicationFontDefinition()
{
  return self;
}

uint64_t sub_191C966F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v41 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v44 = (char *)&v41 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  BOOL v14 = (char *)&v41 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v41 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = sub_191CF4AE8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  __n128 v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v41 = a1;
  v24(v23, a1, v20);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v25 == *MEMORY[0x1E4F3E130] || v25 == *MEMORY[0x1E4F3E148])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v19, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v19, v4);
    BOOL v28 = result == *MEMORY[0x1E4F3D6A8] || result == *MEMORY[0x1E4F3D6B0];
    if (!v28
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v19, v4, 41.5);
    }
  }
  else if (v25 == *MEMORY[0x1E4F3E150] || v25 == *MEMORY[0x1E4F3E158])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v17, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v17, v4);
    BOOL v30 = result == *MEMORY[0x1E4F3D6A8] || result == *MEMORY[0x1E4F3D6B0];
    if (!v30
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v17, v4, 26.0);
    }
  }
  else if (v25 == *MEMORY[0x1E4F3E188] || v25 == *MEMORY[0x1E4F3E140])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v14, v4);
    if (result != *MEMORY[0x1E4F3D6A8]
      && result != *MEMORY[0x1E4F3D6B0]
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v14, v4, 17.0);
    }
  }
  else if (v25 == *MEMORY[0x1E4F3E160])
  {
    uint64_t v32 = v5;
    id v33 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    unint64_t v34 = v44;
    v33(v44, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v4);
    if (result != *MEMORY[0x1E4F3D6A8]
      && result != *MEMORY[0x1E4F3D6B0]
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v32 + 8))(v34, v4, 14.0);
    }
  }
  else if (v25 == *MEMORY[0x1E4F3E168])
  {
    uint64_t v35 = v5;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    long long v37 = v43;
    v36(v43, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v37, v4);
    if (result != *MEMORY[0x1E4F3D6A8]
      && result != *MEMORY[0x1E4F3D6B0]
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v35 + 8))(v37, v4, 10.5);
    }
  }
  else if (v25 == *MEMORY[0x1E4F3E170])
  {
    uint64_t v38 = v5;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v40 = v42;
    v39(v42, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v40, v4);
    if (result != *MEMORY[0x1E4F3D6A8]
      && result != *MEMORY[0x1E4F3D6B0]
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v38 + 8))(v40, v4, 15.0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    sub_191C997FC(a2);
    return sub_191C990A0(v41, a2);
  }
  return result;
}

double sub_191C970FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = sub_191C997FC(a2);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  char v8 = sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v10.n128_u64[0] = 1.0;
  if (v9 != *MEMORY[0x1E4F3D6B8])
  {
    v10.n128_u64[0] = 0x3FF199999999999ALL;
    if (v9 != *MEMORY[0x1E4F3D6D0])
    {
      if (v9 == *MEMORY[0x1E4F3D6C0])
      {
        v10.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v9 == *MEMORY[0x1E4F3D6D8] || v9 == *MEMORY[0x1E4F3D6E8])
      {
        v10.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v9 != *MEMORY[0x1E4F3D6C8])
      {
        if (v9 == *MEMORY[0x1E4F3D6E0])
        {
          v10.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v10);
          v10.n128_u64[0] = 1.0;
        }
      }
    }
  }
  double v12 = 16.0;
  if (v8) {
    double v12 = 11.5;
  }
  return v7 * (v12 * v10.n128_f64[0]);
}

double sub_191C97344(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x1E4F3E130])
  {
    if (v6 == *MEMORY[0x1E4F3E148] || v6 == *MEMORY[0x1E4F3E150] || v6 == *MEMORY[0x1E4F3E158]) {
      goto LABEL_13;
    }
    if (v6 == *MEMORY[0x1E4F3E188])
    {
      sub_191CF4A68();
      return v7;
    }
    if (v6 == *MEMORY[0x1E4F3E138])
    {
LABEL_13:
      sub_191CF4A58();
      return v7;
    }
    if (v6 != *MEMORY[0x1E4F3E140]
      && v6 != *MEMORY[0x1E4F3E160]
      && v6 != *MEMORY[0x1E4F3E178]
      && v6 != *MEMORY[0x1E4F3E168]
      && v6 != *MEMORY[0x1E4F3E170])
    {
      sub_191CF4A58();
      double v10 = v16;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v10;
    }
  }
  sub_191CF4A48();
  return v7;
}

uint64_t sub_191C97530(void *a1, uint64_t a2, char a3)
{
  uint64_t result = sub_191C98DF4(a1, a2, a3 & 1);
  uint64_t v15 = result;
  uint64_t v4 = (void *)*MEMORY[0x1E4F24660];
  if (*MEMORY[0x1E4F24660])
  {
    uint64_t v5 = (void *)*MEMORY[0x1E4F24630];
    if (*MEMORY[0x1E4F24630])
    {
      uint64_t v6 = result;
      type metadata accessor for CFString(0);
      uint64_t v14 = v7;
      *(void *)&long long v13 = v5;
      sub_191B4F9C0(&v13, v12);
      id v8 = v4;
      id v9 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_191B4B2C0(v12, v8, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {
      id v11 = v4;
      sub_191C9859C((uint64_t)v11, &v13);

      sub_191B01770((uint64_t)&v13, (uint64_t *)&unk_1EB44BC90);
      return v15;
    }
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for RectangularHomeScreenComplicationFontDefinition()
{
  return self;
}

double sub_191C97640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF4AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 != *MEMORY[0x1E4F3E130]
    && v12 != *MEMORY[0x1E4F3E148]
    && v12 != *MEMORY[0x1E4F3E150]
    && v12 != *MEMORY[0x1E4F3E158]
    && v12 != *MEMORY[0x1E4F3E188]
    && v12 != *MEMORY[0x1E4F3E138]
    && v12 != *MEMORY[0x1E4F3E140]
    && v12 != *MEMORY[0x1E4F3E160]
    && v12 != *MEMORY[0x1E4F3E178]
    && v12 != *MEMORY[0x1E4F3E168]
    && v12 != *MEMORY[0x1E4F3E170])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  double result = 8.5;
  if (v23 != *MEMORY[0x1E4F3D6B8])
  {
    if (v23 == *MEMORY[0x1E4F3D6D0])
    {
      return 9.35;
    }
    else if (v23 == *MEMORY[0x1E4F3D6C0])
    {
      return 9.01;
    }
    else
    {
      double result = 10.115;
      if (v23 != *MEMORY[0x1E4F3D6D8] && v23 != *MEMORY[0x1E4F3D6E8])
      {
        double result = 9.35;
        if (v23 != *MEMORY[0x1E4F3D6C8])
        {
          if (v23 == *MEMORY[0x1E4F3D6E0])
          {
            return 10.285;
          }
          else
          {
            (*(void (**)(char *, uint64_t, double, double))(v5 + 8))(v7, v4, 9.35, 9.35);
            return 8.5;
          }
        }
      }
    }
  }
  return result;
}

double sub_191C97994(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191CF43F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  sub_191CF3528();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v8.n128_u64[0] = 8.5;
  if (v7 != *MEMORY[0x1E4F3D6B8])
  {
    v8.n128_u64[0] = 0x4022B33333333334;
    if (v7 != *MEMORY[0x1E4F3D6D0])
    {
      if (v7 == *MEMORY[0x1E4F3D6C0])
      {
        v8.n128_u64[0] = 0x4022051EB851EB85;
      }
      else if (v7 == *MEMORY[0x1E4F3D6D8] || v7 == *MEMORY[0x1E4F3D6E8])
      {
        v8.n128_u64[0] = 0x40243AE147AE147BLL;
      }
      else if (v7 != *MEMORY[0x1E4F3D6C8])
      {
        if (v7 == *MEMORY[0x1E4F3D6E0])
        {
          v8.n128_u64[0] = 0x402491EB851EB852;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v8);
          v8.n128_u64[0] = 8.5;
        }
      }
    }
  }
  return v8.n128_f64[0];
}

double sub_191C97BAC(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v31 = *MEMORY[0x1E4F3E130];
  int v30 = *MEMORY[0x1E4F3E148];
  int v29 = *MEMORY[0x1E4F3E150];
  int v28 = *MEMORY[0x1E4F3E158];
  int v27 = *MEMORY[0x1E4F3E188];
  int v7 = *MEMORY[0x1E4F3E138];
  int v8 = *MEMORY[0x1E4F3E140];
  int v9 = *MEMORY[0x1E4F3E160];
  int v10 = *MEMORY[0x1E4F3E178];
  int v11 = *MEMORY[0x1E4F3E168];
  int v12 = *MEMORY[0x1E4F3E170];
  sub_191CF4A68();
  double v14 = v13;
  if (v6 != v31
    && v6 != v30
    && v6 != v29
    && v6 != v28
    && v6 != v27
    && v6 != v7
    && v6 != v8
    && v6 != v9
    && v6 != v10
    && v6 != v11
    && v6 != v12)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

uint64_t sub_191C97DB4()
{
  type metadata accessor for CFString(0);
  sub_191C99A90((unint64_t *)&unk_1EB44B910);
  sub_191CF3528();

  return sub_191CF4A68();
}

uint64_t type metadata accessor for InlineClockComplicationFontDefinition()
{
  return self;
}

double sub_191C97E60(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0C0], MEMORY[0x1E4F3E0B0], MEMORY[0x1E4F3E0B8]);
}

uint64_t sub_191C97EA0(uint64_t a1)
{
  return sub_191C95BF4(a1, MEMORY[0x1E4F3E0B0], MEMORY[0x1E4F3E0C0]);
}

uint64_t type metadata accessor for CornerLightClockComplicationFontDefinition()
{
  return self;
}

double sub_191C97EF0(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0C0], MEMORY[0x1E4F3E0C0], MEMORY[0x1E4F3E0B8]);
}

uint64_t type metadata accessor for CornerSmallLightClockComplicationFontDefinition()
{
  return self;
}

double sub_191C97F54(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0C8], MEMORY[0x1E4F3E0B8], MEMORY[0x1E4F3E0A8]);
}

uint64_t sub_191C97F94(uint64_t a1)
{
  return sub_191C95BF4(a1, MEMORY[0x1E4F3E0B8], MEMORY[0x1E4F3E0C8]);
}

uint64_t type metadata accessor for CornerSemiboldClockComplicationFontDefinition()
{
  return self;
}

double sub_191C97FE4(uint64_t a1)
{
  return sub_191C98048(a1, MEMORY[0x1E4F3E0C8], MEMORY[0x1E4F3E0C8], MEMORY[0x1E4F3E0A8]);
}

uint64_t type metadata accessor for CornerSmallSemiboldClockComplicationFontDefinition()
{
  return self;
}

double sub_191C98048(uint64_t a1, double (*a2)(void), void (*a3)(void), void (*a4)(void))
{
  uint64_t v8 = sub_191CF4AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E4F3E130]
    || v12 == *MEMORY[0x1E4F3E148]
    || v12 == *MEMORY[0x1E4F3E150]
    || v12 == *MEMORY[0x1E4F3E158])
  {
    a3();
    return v16;
  }
  int v17 = v12;
  if (v12 == *MEMORY[0x1E4F3E188])
  {
    a4();
    return v16;
  }
  if (v12 == *MEMORY[0x1E4F3E138] || v12 == *MEMORY[0x1E4F3E140] || v12 == *MEMORY[0x1E4F3E160]) {
    return a2();
  }
  int v22 = *MEMORY[0x1E4F3E178];
  int v23 = *MEMORY[0x1E4F3E168];
  int v24 = *MEMORY[0x1E4F3E170];
  double v20 = a2();
  if (v17 != v22 && v17 != v23 && v17 != v24) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v20;
}

uint64_t type metadata accessor for CircularSemiboldClockComplicationFontDefinition()
{
  return self;
}

double sub_191C98284(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4F3E130]
    || v6 == *MEMORY[0x1E4F3E148]
    || v6 == *MEMORY[0x1E4F3E150]
    || v6 == *MEMORY[0x1E4F3E158])
  {
    goto LABEL_17;
  }
  int v10 = v6;
  if (v6 == *MEMORY[0x1E4F3E188])
  {
LABEL_19:
    sub_191CF49F8();
    return v12;
  }
  if (v6 == *MEMORY[0x1E4F3E138] || v6 == *MEMORY[0x1E4F3E140])
  {
LABEL_17:
    sub_191CF4A68();
    return v12;
  }
  if (v6 == *MEMORY[0x1E4F3E160]) {
    goto LABEL_19;
  }
  int v15 = *MEMORY[0x1E4F3E178];
  int v16 = *MEMORY[0x1E4F3E168];
  int v17 = *MEMORY[0x1E4F3E170];
  sub_191CF4A68();
  double v13 = v18;
  if (v10 != v15 && v10 != v16 && v10 != v17) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t type metadata accessor for RectangularSemiboldClockComplicationFontDefinition()
{
  return self;
}

uint64_t sub_191C984A0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_191C98F30(a2, a3 & 1);
}

uint64_t type metadata accessor for CornerMonoClockComplicationFontDefinition()
{
  return self;
}

uint64_t type metadata accessor for CornerSmallMonoClockComplicationFontDefinition()
{
  return self;
}

unint64_t sub_191C984F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8410;
  uint64_t v1 = (void *)*MEMORY[0x1E4F24550];
  *(void *)(inited + 32) = *MEMORY[0x1E4F24550];
  *(void *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
  *(void *)(inited + 40) = &unk_1EE2A3540;
  id v2 = v1;
  return sub_191B2D3B8(inited);
}

uint64_t type metadata accessor for CircularMonoClockComplicationFontDefinition()
{
  return self;
}

double sub_191C9859C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_191B1D9F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_191B4C590();
      uint64_t v9 = v11;
    }

    sub_191B4F9C0((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_191B4A804(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_191C98694@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_191B1DB7C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_191B4D240();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_191CF5F68();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_191B4F9C0((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_191B4AA2C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

id sub_191C987C0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  sub_191B4F964((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;

  return v4;
}

uint64_t sub_191C98810(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_191C98B3C((uint64_t)&v44);
  double v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_191B4F9C0(v45, v43);
  uint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_191B1D9F0((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_191B4C590();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    int v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_191B4F9C0(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_191C98B3C((uint64_t)&v44);
    for (int64_t i = v44; v44; int64_t i = v44)
    {
      sub_191B4F9C0(v45, v43);
      int v29 = *(void **)a5;
      unint64_t v31 = sub_191B1D9F0((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_191B48910(v34, 1);
        unint64_t v36 = sub_191B1D9F0((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_191B4F964((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);

        int v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        sub_191B4F9C0(v42, v28);
      }
      else
      {
        uint64_t v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_191B4F9C0(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        _OWORD v38[2] = v40;
      }
      sub_191C98B3C((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_191B004C0();
    return swift_release();
  }
  sub_191B48910(v18, a4 & 1);
  unint64_t v20 = sub_191B1D9F0((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_191B4F964((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);

    int v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_191B4F9C0(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CFString(0);
  uint64_t result = sub_191CF63D8();
  __break(1u);
  return result;
}

uint64_t sub_191C98B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    sub_191B4F964(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(void *)&v24[0] = v11;
    id v12 = v11;
    goto LABEL_23;
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v13 << 6);
      int64_t v7 = v13;
      goto LABEL_3;
    }
    int64_t v16 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        int64_t v13 = v16;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        unint64_t v15 = *(void *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          int64_t v13 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v16 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          unint64_t v15 = *(void *)(v4 + 8 * v16);
          if (v15) {
            goto LABEL_10;
          }
          int64_t v13 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            unint64_t v15 = *(void *)(v4 + 8 * v13);
            if (v15) {
              goto LABEL_7;
            }
            int64_t v7 = v14 - 1;
            int64_t v17 = v5 + 6;
            while (v14 != v17)
            {
              unint64_t v15 = *(void *)(v4 + 8 * v17++);
              if (v15)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  void v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v18 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_191C99AD4((uint64_t)v24, (uint64_t)v22);
  if (*(void *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    uint64_t v21 = v23;
    v18(v20);
    return sub_191B01770((uint64_t)v20, &qword_1E92E4E68);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_191C98D14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_191B1E938(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_191B4BFF0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_191B4A604(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_191C98DF4(void *a1, uint64_t a2, char a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_191CF8420;
  unint64_t v6 = (void *)*MEMORY[0x1E4F24610];
  *(void *)(result + 64) = MEMORY[0x1E4FBB550];
  *(void *)(result + 32) = v6;
  *(void *)(result + 40) = 0x8000;
  char v7 = (void *)*MEMORY[0x1E4F24660];
  if (*MEMORY[0x1E4F24660])
  {
    uint64_t v8 = result;
    *(void *)(result + 72) = v7;
    type metadata accessor for CFString(0);
    *(void *)(v8 + 104) = v9;
    *(void *)(v8 + 80) = a1;
    id v10 = v6;
    id v11 = a1;
    id v12 = v7;
    unint64_t v13 = sub_191B2D3B8(v8);
    if ((a3 & 1) == 0)
    {
      double v14 = sub_191C434C4();
      unint64_t v15 = (void *)*MEMORY[0x1E4F246D8];
      uint64_t v20 = MEMORY[0x1E4FBC958];
      v19[0] = v14;
      sub_191B4F9C0(v19, v18);
      id v16 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_191B4B2C0(v18, v16, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191C98F30(uint64_t a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_191D08030;
  uint64_t v4 = (void *)*MEMORY[0x1E4F24610];
  *(void *)(result + 64) = MEMORY[0x1E4FBB550];
  *(void *)(result + 32) = v4;
  *(void *)(result + 40) = 0x8000;
  int64_t v5 = (void *)*MEMORY[0x1E4F24660];
  if (!*MEMORY[0x1E4F24660])
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v6 = (void *)result;
  *(void *)(result + 72) = v5;
  char v7 = (void *)*MEMORY[0x1E4F24628];
  if (!*MEMORY[0x1E4F24628])
  {
LABEL_7:
    __break(1u);
    return result;
  }
  type metadata accessor for CFString(0);
  v6[10] = v7;
  uint64_t v8 = (void *)*MEMORY[0x1E4F246D8];
  uint64_t v9 = (uint64_t *)MEMORY[0x1E4F246C8];
  v6[13] = v10;
  v6[14] = v8;
  uint64_t v11 = *v9;
  uint64_t v12 = MEMORY[0x1E4FBC958];
  v6[18] = MEMORY[0x1E4FBC958];
  v6[15] = v11;
  id v13 = v4;
  id v14 = v8;
  id v15 = v7;
  id v16 = v5;
  unint64_t v17 = sub_191B2D3B8((uint64_t)v6);
  if ((a2 & 1) == 0)
  {
    uint64_t v22 = v12;
    *(void *)&long long v21 = sub_191C434C4();
    sub_191B4F9C0(&v21, v20);
    id v18 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_191B4B2C0(v20, v18, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_191C990A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  int v29 = (char *)&v28 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v28 - v12;
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_191CF4AE8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == *MEMORY[0x1E4F3E130])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, a2, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v15, v4);
    BOOL v22 = result == *MEMORY[0x1E4F3D6A8] || result == *MEMORY[0x1E4F3D6B0];
    if (!v22
      && result != *MEMORY[0x1E4F3D6B8]
      && result != *MEMORY[0x1E4F3D6D0]
      && result != *MEMORY[0x1E4F3D6C0]
      && result != *MEMORY[0x1E4F3D6D8]
      && result != *MEMORY[0x1E4F3D6E8]
      && result != *MEMORY[0x1E4F3D6C8]
      && result != *MEMORY[0x1E4F3D6E0])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v15, v4, 26.0);
    }
    return result;
  }
  if (v20 != *MEMORY[0x1E4F3E148] && v20 != *MEMORY[0x1E4F3E150] && v20 != *MEMORY[0x1E4F3E158])
  {
    BOOL v25 = v20 == *MEMORY[0x1E4F3E188] || v20 == *MEMORY[0x1E4F3E138];
    if (!v25 && v20 != *MEMORY[0x1E4F3E140])
    {
      if (v20 == *MEMORY[0x1E4F3E160])
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v13, a2, v4);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v13, v4);
        if (result != *MEMORY[0x1E4F3D6A8]
          && result != *MEMORY[0x1E4F3D6B0]
          && result != *MEMORY[0x1E4F3D6B8]
          && result != *MEMORY[0x1E4F3D6D0]
          && result != *MEMORY[0x1E4F3D6C0]
          && result != *MEMORY[0x1E4F3D6D8]
          && result != *MEMORY[0x1E4F3D6E8]
          && result != *MEMORY[0x1E4F3D6C8]
          && result != *MEMORY[0x1E4F3D6E0])
        {
          return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v13, v4, 15.5);
        }
        return result;
      }
      if (v20 != *MEMORY[0x1E4F3E178])
      {
        if (v20 == *MEMORY[0x1E4F3E168])
        {
          uint64_t v27 = v29;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v29, a2, v4);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v27, v4);
          if (result != *MEMORY[0x1E4F3D6A8]
            && result != *MEMORY[0x1E4F3D6B0]
            && result != *MEMORY[0x1E4F3D6B8]
            && result != *MEMORY[0x1E4F3D6D0]
            && result != *MEMORY[0x1E4F3D6C0]
            && result != *MEMORY[0x1E4F3D6D8]
            && result != *MEMORY[0x1E4F3D6E8]
            && result != *MEMORY[0x1E4F3D6C8]
            && result != *MEMORY[0x1E4F3D6E0])
          {
            return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v27, v4, 10.0);
          }
          return result;
        }
        if (v20 != *MEMORY[0x1E4F3E170]) {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (result != *MEMORY[0x1E4F3D6B8]
    && result != *MEMORY[0x1E4F3D6D0]
    && result != *MEMORY[0x1E4F3D6C0]
    && result != *MEMORY[0x1E4F3D6D8]
    && result != *MEMORY[0x1E4F3D6E8]
    && result != *MEMORY[0x1E4F3D6C8]
    && result != *MEMORY[0x1E4F3D6E0])
  {
    return (*(uint64_t (**)(char *, uint64_t, double, double))(v5 + 8))(v8, v4, 1.1, 1.1);
  }
  return result;
}

double sub_191C997FC(uint64_t a1)
{
  uint64_t v2 = sub_191CF4AE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF43F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  double v11 = 0.0;
  if (v10 != *MEMORY[0x1E4F3D6A8] && v10 != *MEMORY[0x1E4F3D6B0])
  {
    double v11 = 16.0;
    if (v10 != *MEMORY[0x1E4F3D6B8])
    {
      if (v10 == *MEMORY[0x1E4F3D6D0])
      {
LABEL_15:
        double v11 = 17.0;
        goto LABEL_16;
      }
      if (v10 != *MEMORY[0x1E4F3D6C0])
      {
        if (v10 == *MEMORY[0x1E4F3D6D8] || v10 == *MEMORY[0x1E4F3D6E8]) {
          goto LABEL_15;
        }
        if (v10 != *MEMORY[0x1E4F3D6C8])
        {
          if (v10 != *MEMORY[0x1E4F3D6E0]) {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          }
          goto LABEL_15;
        }
      }
    }
  }
LABEL_16:
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3E140], v2);
  sub_191C990A0((uint64_t)v5, a1);
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11 / v15;
}

uint64_t sub_191C99A90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191C99AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivityPreviewContext.subscript.getter@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v54)(void **__return_ptr, char *, uint64_t, void (**)(uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (**v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (**v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  void v100[3];
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void (**v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  char *v110;
  char *v111;
  long long v112;
  uint64_t v113;
  int *v114;
  void (**v115)(uint64_t, uint64_t);
  uint64_t v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  long long v142;
  uint64_t v143;

  uint64_t v137 = a3;
  v138 = a4;
  v139 = a5;
  uint64_t v7 = type metadata accessor for ActivityPreviewContextKey();
  MEMORY[0x1F4188790](v7);
  long long v125 = (char *)v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v132);
  uint64_t v131 = (uint64_t)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E23C8);
  MEMORY[0x1F4188790](v10 - 8);
  long long v122 = (char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v124 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v126 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v133 = (uint64_t)v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  long long v123 = (uint64_t)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v100 - v16;
  uint64_t v18 = sub_191CF33C8();
  v127 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = *(void (***)(uint64_t, uint64_t))(a2 + 24);
  uint64_t v134 = a2;
  uint64_t v23 = type metadata accessor for ActivityViewContext();
  uint64_t v135 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  BOOL v25 = (char *)v100 - v24;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  unint64_t v31 = (char *)v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v29);
  if ((int *)v7 != a1) {
    return sub_191CF41A8();
  }
  uint64_t v117 = v33;
  uint64_t v115 = v22;
  uint64_t v110 = v17;
  uint64_t v129 = v37;
  uint64_t v118 = v25;
  uint64_t v128 = v35;
  uint64_t v130 = result;
  uint64_t v111 = v20;
  uint64_t v119 = v23;
  uint64_t v109 = v18;
  uint64_t v120 = v21;
  uint64_t v38 = v136;
  uint64_t v114 = a1;
  uint64_t v39 = (void *)xmmword_1EB44CC98;
  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    return result;
  }
  uint64_t v116 = qword_1EB44CCA8;
  uint64_t v113 = v36;
  *(void *)&uint64_t v112 = *(void *)(v36 + 16);
  uint64_t v40 = (char *)v100 - v34;
  uint64_t v41 = v120;
  ((void (*)(char *, uint64_t, uint64_t))v112)((char *)v100 - v34, v136, v120);
  uint64_t v42 = v134;
  uint64_t v43 = v38 + *(int *)(v134 + 36);
  uint64_t v44 = v129;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16);
  uint64_t v46 = v130;
  v45(v129, v43, v130);
  uint64_t v47 = *(int *)(v42 + 40);
  uint64_t v48 = v41;
  LODWORD(v41) = *(unsigned __int8 *)(v136 + v47);
  uint64_t v121 = v40;
  ((void (*)(char *, char *, uint64_t))v112)(v31, v40, v48);
  uint64_t v49 = (uint64_t)v117;
  v45((uint64_t)v117, v44, v46);
  uint64_t v50 = v118;
  uint64_t v51 = v49;
  uint64_t v52 = v115;
  sub_191B9B458(0xD000000000000016, 0x8000000191D0EC70, (uint64_t)v31, v51, v41, v48, v118);
  uint64_t v53 = *v39;
  id v140 = v39;
  uint64_t v54 = *(void (**)(void **__return_ptr, char *, uint64_t, void (**)(uint64_t, uint64_t), uint64_t, uint64_t))(v116 + 56);
  uint64_t v117 = v39;
  long long v55 = v116;
  swift_retain();
  v54(&v141, v50, v48, v52, v53, v55);
  uint64_t v108 = v41;
  uint64_t v56 = v141;
  uint64_t v112 = v142;
  uint64_t v57 = v143;
  sub_191CF2E58();
  swift_allocObject();
  uint64_t v58 = sub_191CF2E48();
  uint64_t v105 = sub_191CF2E38();
  uint64_t v106 = v59;
  uint64_t v103 = v56;
  long long v107 = v57;
  swift_getAssociatedConformanceWitness();
  uint64_t v60 = sub_191CF2E38();
  id v61 = v58;
  uint64_t v101 = v62;
  uint64_t v102 = v60;
  uint64_t v141 = v117;
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(v116 + 64))(v53);
  sub_191CF33B8();
  uint64_t v64 = *(void *)(v63 + 16);
  v100[2] = v61;
  if (!v64)
  {
    uint64_t v80 = 1;
    uint64_t v81 = v125;
    id v82 = v134;
    uint64_t v69 = v135;
    uint64_t v68 = v109;
LABEL_23:
    uint64_t v83 = v127;
    uint64_t v84 = v124;
    uint64_t v85 = v126;
    goto LABEL_26;
  }
  uint64_t v65 = v63 + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
  uint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56);
  __int16 v104 = (void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32);
  id v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  uint64_t v115 = (void (**)(uint64_t, uint64_t))(v127 + 8);
  uint64_t v116 = *(void *)(v126 + 72);
  v100[1] = v63;
  swift_bridgeObjectRetain();
  uint64_t v68 = v109;
  uint64_t v69 = v135;
  uint64_t v70 = (uint64_t)v122;
  uint64_t v71 = v133;
  while (1)
  {
    sub_191BD9630(v65, v71, type metadata accessor for WidgetDescriptor);
    uint64_t v73 = v131;
    sub_191BD9630(v71, v131, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        (*v104)(v70, v73, v68);
        (*v66)(v70, 0, 1, v68);
      }
      else
      {
        (*v66)(v70, 1, 1, v68);
        sub_191BD9698(v73, type metadata accessor for ViewSource);
      }
    }
    else
    {
      sub_191BD9698(v73, type metadata accessor for ViewSource);
      (*v66)(v70, 1, 1, v68);
    }
    if ((*v67)(v70, 1, v68) == 1)
    {
      sub_191B01770(v70, qword_1E92E23C8);
      sub_191CF3388();
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    uint64_t v75 = sub_191CF3388();
    uint64_t v77 = v76;
    (*v115)(v70, v68);
    uint64_t v78 = sub_191CF3388();
    if (!v77)
    {
      uint64_t v69 = v135;
      goto LABEL_20;
    }
    if (v75 == v78 && v77 == v79)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v69 = v135;
      goto LABEL_25;
    }
    uint64_t v72 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = v135;
    if (v72) {
      break;
    }
LABEL_7:
    uint64_t v71 = v133;
    sub_191BD9698(v133, type metadata accessor for WidgetDescriptor);
    v65 += v116;
    if (!--v64)
    {
      swift_bridgeObjectRelease();
      uint64_t v80 = 1;
      uint64_t v81 = v125;
      id v82 = v134;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  sub_191BD9EE8(v133, (uint64_t)v110);
  uint64_t v80 = 0;
  uint64_t v81 = v125;
  uint64_t v85 = v126;
  id v82 = v134;
  uint64_t v83 = v127;
  uint64_t v84 = v124;
LABEL_26:
  uint64_t v86 = v114;
  long long v87 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v110, v80, 1, v84);
  swift_bridgeObjectRelease();
  id v88 = v87;
  id v89 = v123;
  sub_191B01614(v88, v123, (uint64_t *)&unk_1EB44BB00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v89, 1, v84) == 1)
  {
    sub_191B01770(v89, (uint64_t *)&unk_1EB44BB00);
    uint64_t v90 = &unk_1EE2A0FF0;
  }
  else
  {
    uint64_t v90 = *(void **)(v89 + *(int *)(v84 + 32));
    swift_bridgeObjectRetain();
    sub_191BD9698(v89, type metadata accessor for WidgetDescriptor);
  }
  uint64_t v91 = v103;
  uint64_t v92 = v136;
  swift_release();
  swift_release();
  sub_191B01770((uint64_t)v110, (uint64_t *)&unk_1EB44BB00);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v118, v119);
  (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v129, v130);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v121, v120);
  uint64_t v93 = v111;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(&v81[v86[5]], v111, v68);
  objc_super v94 = *(unsigned char *)(v92 + *(int *)(v82 + 44));
  *(void *)uint64_t v81 = v91;
  *(_OWORD *)(v81 + 8) = v112;
  *((void *)v81 + 3) = v107;
  uint64_t v95 = v86[7];
  uint64_t v96 = (uint64_t *)&v81[v86[6]];
  void *v96 = v105;
  v96[1] = v106;
  uint64_t v97 = (uint64_t *)&v81[v95];
  id v98 = v101;
  *uint64_t v97 = v102;
  v97[1] = v98;
  long long v99 = v86[9];
  v81[v86[8]] = v108;
  v81[v99] = v94;
  *(void *)&v81[v86[10]] = v90;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v93, v68);
  swift_getAssociatedTypeWitness();
  return swift_dynamicCast();
}

uint64_t type metadata accessor for ActivityPreviewContextKey()
{
  uint64_t result = qword_1E92E4F20;
  if (!qword_1E92E4F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191C9A9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = (int *)type metadata accessor for ActivityPreviewContext();
  uint64_t v11 = a6 + v10[9];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v11, a2, AssociatedTypeWitness);
  *(unsigned char *)(a6 + v10[10]) = a3;
  *(unsigned char *)(a6 + v10[11]) = v9;
  return result;
}

uint64_t sub_191C9AAEC@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return ActivityPreviewContext.subscript.getter(a1, a4, a2, a3, a5);
}

uint64_t ActivityPreviewContentCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t ActivityPreviewContentCategory.rawValue.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_191C9AB74()
{
  return sub_191CF64C8();
}

uint64_t sub_191C9ABCC()
{
  return sub_191CF5388();
}

uint64_t sub_191C9ABE8()
{
  return sub_191CF64C8();
}

uint64_t sub_191C9AC3C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_191C9AC90(void *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x8000000191D0CDF0;
}

uint64_t sub_191C9ACB0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  __swift_allocate_value_buffer(v0, qword_1E92E4E70);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E4E70);
  uint64_t v2 = type metadata accessor for ActivityPreviewContextKey();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t static ActivityPreviewContextKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2D00 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E4E70);
  swift_beginAccess();
  return sub_191B01614(v3, a1, &qword_1E92E4E88);
}

uint64_t static ActivityPreviewContextKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1E92E2D00 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E4E70);
  swift_beginAccess();
  sub_191C9AE98(a1, v3);
  swift_endAccess();
  return sub_191B01770(a1, &qword_1E92E4E88);
}

uint64_t sub_191C9AE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ActivityPreviewContextKey.defaultValue.modify())()
{
  if (qword_1E92E2D00 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92E4E70);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ActivityPreviewContextKey.viewSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 24) = v2;
  swift_retain();

  return swift_retain();
}

uint64_t ActivityPreviewContextKey.attributesType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 20);
  uint64_t v4 = sub_191CF33C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ActivityPreviewContextKey.attributesData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 24);
  uint64_t v2 = *(void *)v1;
  sub_191B15F88(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t ActivityPreviewContextKey.contentStatePayload.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 28);
  uint64_t v2 = *(void *)v1;
  sub_191B15F88(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t ActivityPreviewContextKey.isStale.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 32));
}

uint64_t ActivityPreviewContextKey.viewKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ActivityPreviewContextKey();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

unint64_t ActivityPreviewContextKey.contentCategory.getter()
{
  return 0xD000000000000021;
}

uint64_t ActivityPreviewContextKey.previewContentCategory.getter()
{
  return MEMORY[0x1F40E0670](0xD000000000000025, 0x8000000191D0FC70);
}

uint64_t ActivityPreviewContextKey.supportedFamilies.getter()
{
  type metadata accessor for ActivityPreviewContextKey();

  return swift_bridgeObjectRetain();
}

uint64_t sub_191C9B1AC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2D00 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4E88);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E4E70);
  swift_beginAccess();
  return sub_191B01614(v3, a1, &qword_1E92E4E88);
}

BOOL static ActivityPreviewViewKind.DynamicIslandPreviewViewState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityPreviewViewKind.DynamicIslandPreviewViewState.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t ActivityPreviewViewKind.DynamicIslandPreviewViewState.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ActivityAttributes.previewContext(_:isStale:viewKind:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a1;
  int v23 = a2;
  uint64_t v24 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ActivityPreviewContext();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v19 - v16;
  LOBYTE(a3) = *a3;
  uint64_t v26 = sub_191CF4D88();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v22, AssociatedTypeWitness);
  char v25 = (char)a3;
  sub_191C9A9EC((uint64_t)v13, (uint64_t)v10, v23, &v25, a4, (uint64_t)v17);
  swift_getWitnessTable();
  sub_191CF4C18();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_release();
}

uint64_t type metadata accessor for ActivityPreviewContext()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_191C9B58C()
{
  unint64_t result = qword_1E92E4E90;
  if (!qword_1E92E4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4E90);
  }
  return result;
}

unint64_t sub_191C9B5E4()
{
  unint64_t result = qword_1E92E4E98[0];
  if (!qword_1E92E4E98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E4E98);
  }
  return result;
}

uint64_t sub_191C9B638()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_191C9B73C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64);
  unint64_t v14 = v13 + v12 + 2;
  uint64_t v15 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    uint64_t v22 = (unsigned char *)((((unint64_t)a1 + v11) & v20) + v13);
    unsigned char *v22 = *(unsigned char *)(v21 + v13);
    v22[1] = *(unsigned char *)(v21 + v13 + 1);
  }
  return a1;
}

uint64_t sub_191C9B8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_191C9B9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 48);
  unint64_t v14 = (unsigned char *)(v13 + v11);
  uint64_t v15 = (unsigned char *)(v13 + v12);
  *unint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_191C9BAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = (unsigned char *)(v13 + v11);
  uint64_t v15 = (unsigned char *)(v13 + v12);
  *unint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_191C9BBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 32);
  unint64_t v14 = (unsigned char *)(v13 + v11);
  uint64_t v15 = (unsigned char *)(v13 + v12);
  *unint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_191C9BC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 24);
  unint64_t v14 = (unsigned char *)(v13 + v11);
  uint64_t v15 = (unsigned char *)(v13 + v12);
  *unint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_191C9BD94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v11 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = v11;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v6 + 64) + v12;
  if (a2 > v14)
  {
    uint64_t v16 = v13 + (v15 & ~v12) + 2;
    char v17 = 8 * v16;
    if (v16 > 3) {
      goto LABEL_10;
    }
    unsigned int v19 = ((a2 - v14 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v19 >= 2)
    {
LABEL_10:
      int v18 = *((unsigned __int8 *)a1 + v16);
      if (!*((unsigned char *)a1 + v16)) {
        goto LABEL_27;
      }
LABEL_17:
      int v20 = (v18 - 1) << v17;
      if (v16 > 3) {
        int v20 = 0;
      }
      if (v16)
      {
        if (v16 <= 3) {
          int v21 = v16;
        }
        else {
          int v21 = 4;
        }
        switch(v21)
        {
          case 2:
            int v22 = *a1;
            break;
          case 3:
            int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v22 = *(_DWORD *)a1;
            break;
          default:
            int v22 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v22 = 0;
      }
      int v28 = v14 + (v22 | v20);
      return (v28 + 1);
    }
  }
LABEL_27:
  if (v7 == v14)
  {
    int v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    return v23(a1, v7, v5);
  }
  unint64_t v25 = ((unint64_t)a1 + v15) & ~v12;
  if (v10 != v14)
  {
    unsigned int v27 = *(unsigned __int8 *)(v25 + v13);
    if (v27 < 2) {
      return 0;
    }
    int v28 = (v27 + 2147483646) & 0x7FFFFFFF;
    return (v28 + 1);
  }
  uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);

  return v26(v25);
}

void sub_191C9C058(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 64);
  if (v13 <= 0xFE) {
    unsigned int v17 = 254;
  }
  else {
    unsigned int v17 = v13;
  }
  uint64_t v18 = v14 + v15;
  size_t v19 = v16 + ((v14 + v15) & ~v15) + 2;
  if (a3 <= v17)
  {
    int v20 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v17 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v24))
    {
      int v20 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v20 = 2;
    }
    else
    {
      int v20 = v24 > 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  if (v17 < a2)
  {
    unsigned int v21 = ~v17 + a2;
    if (v19 < 4)
    {
      int v22 = (v21 >> (8 * v19)) + 1;
      if (v19)
      {
        int v25 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
      int v22 = 1;
    }
    switch(v20)
    {
      case 1:
        a1[v19] = v22;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v22;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v19] = v22;
        return;
      default:
        return;
    }
  }
  uint64_t v23 = ~v15;
  switch(v20)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x191C9C394);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v9 == v17)
        {
          uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
          v26(a1, a2, v9, v7);
        }
        else
        {
          unint64_t v27 = (unint64_t)&a1[v18] & v23;
          if (v12 == v17)
          {
            int v28 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
            v28(v27, a2);
          }
          else
          {
            *(unsigned char *)(v27 + v16) = a2 + 1;
          }
        }
      }
      return;
  }
}

unsigned char *storeEnumTagSinglePayload for ActivityPreviewContentCategory(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191C9C458);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewContentCategory()
{
  return &type metadata for ActivityPreviewContentCategory;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityPreviewContextKey(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)a1 = v5;
    uint64_t v8 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_191CF33C8();
    unsigned int v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    sub_191B15F88(*v16, v18);
    *uint64_t v15 = v17;
    v15[1] = v18;
    uint64_t v19 = a3[7];
    int v20 = (uint64_t *)(a1 + v19);
    unsigned int v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    sub_191B15F88(*v21, v23);
    uint64_t *v20 = v22;
    v20[1] = v23;
    uint64_t v24 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(unsigned char *)(a1 + v24) = *((unsigned char *)a2 + v24);
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityPreviewContextKey(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_191CF33C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_191B1603C(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8));
  sub_191B1603C(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityPreviewContextKey(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_191CF33C8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  unsigned int v13 = (uint64_t *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  sub_191B15F88(*v14, v16);
  *unsigned int v13 = v15;
  v13[1] = v16;
  uint64_t v17 = a3[7];
  unint64_t v18 = (uint64_t *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  unint64_t v21 = v19[1];
  sub_191B15F88(*v19, v21);
  *unint64_t v18 = v20;
  v18[1] = v21;
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActivityPreviewContextKey(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF33C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  unsigned int v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  sub_191B15F88(*v14, v16);
  uint64_t v17 = *v13;
  unint64_t v18 = v13[1];
  *unsigned int v13 = v15;
  v13[1] = v16;
  sub_191B1603C(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  unint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  sub_191B15F88(*v21, v23);
  uint64_t v24 = *v20;
  unint64_t v25 = v20[1];
  uint64_t *v20 = v22;
  v20[1] = v23;
  sub_191B1603C(v24, v25);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ActivityPreviewContextKey(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF33C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *assignWithTake for ActivityPreviewContextKey(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF33C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)((char *)a1 + v10);
  unint64_t v12 = *(void *)((char *)a1 + v10 + 8);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  sub_191B1603C(v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void *)((char *)a1 + v13);
  unint64_t v15 = *(void *)((char *)a1 + v13 + 8);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  sub_191B1603C(v14, v15);
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewContextKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C9CB00);
}

uint64_t sub_191C9CB00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_191CF33C8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewContextKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C9CBC4);
}

void *sub_191C9CBC4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_191CF33C8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_191C9CC6C()
{
  uint64_t result = sub_191CF33C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewViewKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191C9CDDCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ActivityPreviewViewKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x191C9CEC4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_191C9CEEC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_191C9CF00(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewViewKind()
{
  return &type metadata for ActivityPreviewViewKind;
}

unsigned char *storeEnumTagSinglePayload for ActivityPreviewViewKind.DynamicIslandPreviewViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C9CFECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewViewKind.DynamicIslandPreviewViewState()
{
  return &type metadata for ActivityPreviewViewKind.DynamicIslandPreviewViewState;
}

unint64_t sub_191C9D028()
{
  unint64_t result = qword_1E92E4F30;
  if (!qword_1E92E4F30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E4F38);
    sub_191C9D0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4F30);
  }
  return result;
}

unint64_t sub_191C9D0A4()
{
  unint64_t result = qword_1E92E4F40;
  if (!qword_1E92E4F40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92E4F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4F40);
  }
  return result;
}

uint64_t sub_191C9D100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_191B0A348;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191C9D210(char a1, uint64_t a2, uint64_t a3)
{
  char v4 = a1;
  return MEMORY[0x192FE3AA0](&v4, a2, &type metadata for ExtractionViewModifier, a3);
}

double sub_191C9D244@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4538();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  sub_191CF4548();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_191CF44F8();
  sub_191CF4528();
  sub_191B550F0();
  sub_191CF4508();
  v21[0] = v21[1];
  uint64_t v16 = v22;
  uint64_t v17 = v23;
  LOBYTE(a2) = sub_191CF4518();
  swift_release();
  uint64_t v18 = type metadata accessor for ExtractedControlValueMetadata(0);
  uint64_t v19 = a4 + *(int *)(v18 + 20);
  double result = *(double *)v21;
  *(_OWORD *)uint64_t v19 = v21[0];
  *(void *)(v19 + 16) = v16;
  *(void *)(v19 + 24) = v17;
  *(unsigned char *)(a4 + *(int *)(v18 + 24)) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for ExtractedControlValueMetadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E20E0);
}

uint64_t sub_191C9D468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF4538();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  sub_191CF4548();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_191CF44F8();
  sub_191CF4528();
  LOBYTE(a2) = sub_191CF4518();
  swift_release();
  uint64_t result = type metadata accessor for ExtractedControlMetadata(0);
  *(unsigned char *)(a4 + *(int *)(result + 20)) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for ExtractedControlMetadata(uint64_t a1)
{
  return sub_191B4ED44(a1, qword_1E92E4F58);
}

void *sub_191C9D64C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF4898();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191C9D73C(uint64_t a1)
{
  uint64_t v2 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C9D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v10[3];
  id v9[2] = v10[2];
  v9[3] = v12;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191C9D85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v8[2] = *(void *)(v9 + 16);
  v8[3] = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191C9D92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_191C9D9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  long long v8[2] = *(void *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_191C9DA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C9DA7C);
}

uint64_t sub_191C9DA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_191C9DB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C9DB60);
}

uint64_t sub_191C9DB60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF4898();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_191C9DC20()
{
  uint64_t result = sub_191CF4898();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExtractionViewModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191C9DD8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractionViewModifier()
{
  return &type metadata for ExtractionViewModifier;
}

void *sub_191C9DDC4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF4898();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_191C9DE90(uint64_t a1)
{
  uint64_t v2 = sub_191CF4898();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_191C9DEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_191C9DF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_191C9DFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_191C9E068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_191C9E0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191C9E0F8);
}

uint64_t sub_191C9E0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF4898();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_191C9E1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191C9E1DC);
}

uint64_t sub_191C9E1DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF4898();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_191C9E298()
{
  uint64_t result = sub_191CF4898();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_191C9E32C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C9E348@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v25 = a2;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  uint64_t v22 = sub_191CF5128();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  int v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF5148();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF3D18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F98);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF5138();
  sub_191CF5118();
  sub_191C9E678();
  sub_191CF3CC8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2780);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v18 + *(int *)(v19 + 28), v13, v10);
  *uint64_t v18 = KeyPath;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1FA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v23, v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_191C9E6D8();
  sub_191CF4C48();
  return sub_191C9E79C((uint64_t)v16);
}

uint64_t sub_191C9E670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191C9E348(a1, *v2, a2);
}

unint64_t sub_191C9E678()
{
  unint64_t result = qword_1E92E1FB0[0];
  if (!qword_1E92E1FB0[0])
  {
    sub_191CF5148();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E1FB0);
  }
  return result;
}

unint64_t sub_191C9E6D8()
{
  unint64_t result = qword_1E92E1F90;
  if (!qword_1E92E1F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1F98);
    sub_191B00398(&qword_1E92E1FA0, &qword_1E92E1FA8);
    sub_191B00398(&qword_1E92E2778, &qword_1E92E2780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1F90);
  }
  return result;
}

uint64_t sub_191C9E79C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191C9E7FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191C9E858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_191C9E86C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_191C9E880(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_191C9E894(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_191C9E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_191C9E8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_191C9E8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_191C9E90C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_191C9E920(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191C9E934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191C9E948@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v31 = a4;
  uint64_t v34 = a3;
  uint64_t v32 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v7 = (long long *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = a1;
  id v15 = objc_msgSend(a1, sel_kind);
  uint64_t v16 = sub_191CF5338();
  uint64_t v18 = v17;

  sub_191C9F0B0(v16, v18, a2, v34, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v19 = (uint64_t *)&unk_1EB44BB00;
    uint64_t v20 = v10;
  }
  else
  {
    sub_191BD9EE8((uint64_t)v10, (uint64_t)v14);
    sub_191BD9630((uint64_t)v14, (uint64_t)v7, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        uint64_t v22 = sub_191CF33C8();
        long long v35 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        memset(v39, 0, 25);
        (*(void (**)(long long *, uint64_t))(*(void *)(v22 - 8) + 8))(v7, v22);
      }
      else
      {
        long long v23 = v7[3];
        long long v37 = v7[2];
        long long v38 = v23;
        v39[0] = v7[4];
        *(_OWORD *)((char *)v39 + 9) = *(long long *)((char *)v7 + 73);
        long long v24 = v7[1];
        long long v35 = *v7;
        long long v36 = v24;
      }
    }
    else
    {
      sub_191BD9698((uint64_t)v7, type metadata accessor for ViewSource);
      long long v35 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      long long v38 = 0u;
      memset(v39, 0, 25);
    }
    uint64_t result = sub_191BD9698((uint64_t)v14, type metadata accessor for WidgetDescriptor);
    if (*((void *)&v35 + 1))
    {
      long long v26 = v38;
      unint64_t v27 = v31;
      v31[2] = v37;
      v27[3] = v26;
      v27[4] = v39[0];
      *(_OWORD *)((char *)v27 + 73) = *(_OWORD *)((char *)v39 + 9);
      long long v28 = v36;
      *unint64_t v27 = v35;
      v27[1] = v28;
      return result;
    }
    uint64_t v19 = (uint64_t *)&unk_1E92E49C8;
    uint64_t v20 = (char *)&v35;
  }
  sub_191B01770((uint64_t)v20, v19);
  id v29 = objc_msgSend(v33, sel_kind);
  sub_191CF5338();

  sub_191C9FD48();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_191C9ECF0()
{
  uint64_t v1 = v0;
  double v19[3] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9B8]), sel_init);
  v19[0] = v2;

  id v18 = v19[0];
  id v3 = v19[0];

  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191CF3858();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
  int v5 = sub_191CF3838();
  os_log_type_t v6 = sub_191CF5948();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_beginAccess();
    id v9 = objc_msgSend(v18, sel_base64EncodedStringWithOptions_, 0);
    uint64_t v10 = sub_191CF5338();
    unint64_t v12 = v11;

    sub_191C5C36C(v10, v12, (uint64_t *)v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v5, v6, "Locale token: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v8, -1, -1);
    MEMORY[0x192FE5F00](v7, -1, -1);
  }

  swift_beginAccess();
  id v13 = v18;
  uint64_t v14 = sub_191CF30C8();
  uint64_t v16 = v15;

  *(void *)(v1 + 16) = v14;
  *(void *)(v1 + 24) = v16;

  return v1;
}

uint64_t sub_191C9EF78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  id v7 = a1;
  unint64_t v8 = sub_191C9FAB0(v6, a1);
  swift_bridgeObjectRelease();

  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (v9)
  {
    sub_191BD9630(v8+ ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80)), a4, type metadata accessor for WidgetDescriptor);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a4, v12, 1, v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_191C9F0A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191C9EF78(a1, a2, (uint64_t)&off_1EE29ADF0, a3);
}

uint64_t sub_191C9F0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v50 = a1;
  uint64_t v8 = type metadata accessor for ViewSource(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)v44 - v12;
  uint64_t v47 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v14 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v41 = 1;
    uint64_t v42 = v47;
    goto LABEL_24;
  }
  uint64_t v45 = v14;
  uint64_t v46 = a5;
  uint64_t v19 = v17 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v20 = *(void *)(v14 + 72);
  v44[1] = v17;
  swift_bridgeObjectRetain();
  unint64_t v21 = qword_1EB4498A8;
  uint64_t v48 = v8;
  while (1)
  {
    sub_191BD9630(v19, (uint64_t)v16, type metadata accessor for WidgetDescriptor);
    sub_191BD9630((uint64_t)v16, (uint64_t)v13, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(v21);
        swift_release();
        swift_release();
        uint64_t v23 = sub_191CF33C8();
        long long v53 = 0u;
        long long v54 = 0u;
        unint64_t v55 = 0;
        (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v13, v23);
        if (!*((void *)&v54 + 1))
        {
          sub_191B01770((uint64_t)&v53, &qword_1E92E4740);
          goto LABEL_5;
        }
      }
      else
      {
        *((void *)&v54 + 1) = &type metadata for ControlViewSource;
        unint64_t v55 = sub_191C5D5CC();
        id v29 = (_OWORD *)swift_allocObject();
        *(void *)&long long v53 = v29;
        long long v30 = *((_OWORD *)v13 + 3);
        v29[3] = *((_OWORD *)v13 + 2);
        v29[4] = v30;
        v29[5] = *((_OWORD *)v13 + 4);
        *(_OWORD *)((char *)v29 + 89) = *(_OWORD *)(v13 + 73);
        long long v31 = *((_OWORD *)v13 + 1);
        v29[1] = *(_OWORD *)v13;
        v29[2] = v31;
      }
    }
    else
    {
      long long v24 = *(_OWORD *)v13;
      long long v51 = *((_OWORD *)v13 + 1);
      long long v52 = v24;
      uint64_t v25 = *((void *)v13 + 4);
      uint64_t v26 = *((void *)v13 + 5);
      *((void *)&v54 + 1) = &type metadata for TimelineViewSource;
      unint64_t v55 = sub_191C5D684();
      uint64_t v27 = swift_allocObject();
      *(void *)&long long v53 = v27;
      long long v28 = v51;
      *(_OWORD *)(v27 + 16) = v52;
      *(_OWORD *)(v27 + 32) = v28;
      *(void *)(v27 + 48) = v25;
      *(void *)(v27 + 56) = v26;
      *(_OWORD *)(v27 + 64) = *((_OWORD *)v13 + 3);
    }
    sub_191B004A8(&v53, (uint64_t)v56);
    sub_191BD9630((uint64_t)v16, (uint64_t)v11, type metadata accessor for ViewSource);
    int v32 = swift_getEnumCaseMultiPayload();
    if (!v32)
    {
      sub_191BD9698((uint64_t)v11, type metadata accessor for ViewSource);
LABEL_4:
      sub_191AFEE28((uint64_t)v56, (uint64_t)&v53);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
      goto LABEL_5;
    }
    if (v32 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(v21);
      swift_release();
      swift_release();
      uint64_t v33 = sub_191CF33C8();
      (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v11, v33);
      goto LABEL_4;
    }
    uint64_t v34 = v20;
    long long v35 = v21;
    sub_191BD9698((uint64_t)v11, type metadata accessor for ViewSource);
    sub_191AFEE28((uint64_t)v56, (uint64_t)&v53);
    uint64_t v37 = *((void *)&v54 + 1);
    unint64_t v36 = v55;
    __swift_project_boxed_opaque_existential_1(&v53, *((uint64_t *)&v54 + 1));
    uint64_t v38 = (*(uint64_t (**)(uint64_t, unint64_t))(v36 + 16))(v37, v36);
    if (v38 == v50 && v39 == v49) {
      break;
    }
    char v40 = sub_191CF6348();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    unint64_t v21 = v35;
    uint64_t v20 = v34;
    if (v40) {
      goto LABEL_22;
    }
LABEL_5:
    sub_191BD9698((uint64_t)v16, type metadata accessor for WidgetDescriptor);
    v19 += v20;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = 1;
      a5 = v46;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
LABEL_22:
  swift_bridgeObjectRelease();
  a5 = v46;
  sub_191BD9EE8((uint64_t)v16, v46);
  uint64_t v41 = 0;
LABEL_23:
  uint64_t v42 = v47;
  uint64_t v14 = v45;
LABEL_24:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v41, 1, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_191C9F618@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191C9EF78(a1, a2, (uint64_t)&off_1EE29ACF0, a3);
}

uint64_t sub_191C9F624@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (void *)((char *)v37 - v9);
  if (!a2) {
    goto LABEL_29;
  }
  sub_191BD9630(a1, (uint64_t)v37 - v9, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_191BD9698((uint64_t)v10, type metadata accessor for ViewSource);
LABEL_29:
    uint64_t v35 = type metadata accessor for WidgetDescriptor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = v10[4];
  uint64_t v14 = v10[5];
  uint64_t v44 = v10[3];
  uint64_t v45 = v13;
  uint64_t v46 = v10[7];
  id v43 = a2;
  id v15 = objc_msgSend(v43, sel_kind);
  uint64_t v16 = sub_191CF5338();
  uint64_t v18 = v17;

  if (v12 == v16 && v11 == v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_191B16F2C(v45);

LABEL_28:
      swift_release();
      goto LABEL_29;
    }
  }
  uint64_t v41 = v11;
  uint64_t v40 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v21 = *(int *)(v40 + 28);
  uint64_t v42 = a1;
  uint64_t v22 = *(void *)(a1 + v21);
  int64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (v23)
  {
    v37[1] = v14;
    uint64_t v38 = a3;
    uint64_t v39 = v3;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_191AFBAF8(0, v23, 0);
    uint64_t v25 = 0;
    uint64_t v24 = v48;
    while (1)
    {
      unsigned int v26 = *(unsigned __int8 *)(v22 + v25 + 32);
      if (v26 >= 0xD || ((0x13BFu >> v26) & 1) == 0) {
        goto LABEL_31;
      }
      char v27 = byte_191D08918[(char)v26];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_191AFBAF8(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v48;
      }
      unint64_t v30 = *(void *)(v24 + 16);
      unint64_t v29 = *(void *)(v24 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_191AFBAF8(v29 > 1, v30 + 1, 1);
        uint64_t v24 = v48;
      }
      ++v25;
      *(void *)(v24 + 16) = v30 + 1;
      *(unsigned char *)(v24 + v30 + 32) = v27;
      if (v23 == v25)
      {
        swift_bridgeObjectRelease();
        a3 = v38;
        break;
      }
    }
  }
  id v31 = v43;
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v43, sel_family), &v47);
  if (v47 >= 0xDu || ((0x13BFu >> v47) & 1) == 0)
  {
LABEL_31:
    uint64_t result = sub_191CF6338();
    __break(1u);
    return result;
  }
  uint64_t v32 = *(void *)(v24 + 16);
  uint64_t v33 = v42;
  if (!v32)
  {
LABEL_27:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_191B16F2C(v45);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v34 = 0;
  while (qword_191D088B0[(char)v47] != *(unsigned __int8 *)(v24 + v34 + 32))
  {
    if (v32 == ++v34) {
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_191B16F2C(v45);
  swift_bridgeObjectRelease();
  swift_release();
  sub_191BD9630(v33, a3, type metadata accessor for WidgetDescriptor);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a3, 0, 1, v40);
}

uint64_t sub_191C9FA54()
{
  sub_191B1603C(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetHost()
{
  return self;
}

unint64_t sub_191C9FAB0(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (uint64_t)v22 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22[1] = a1;
  unint64_t v23 = v13;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v10 + 72);
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a2;
  do
  {
    sub_191C9F624(v14, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v16)(v7, 1, v27) == 1)
    {
      sub_191B01770((uint64_t)v7, (uint64_t *)&unk_1EB44BB00);
    }
    else
    {
      uint64_t v18 = v25;
      sub_191BD9EE8((uint64_t)v7, v25);
      sub_191BD9EE8(v18, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_191B406FC(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_191B406FC(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_191BD9EE8(v26, v17 + v23 + v20 * v15);
      a2 = v24;
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

id sub_191C9FD48()
{
  sub_191BB2F2C();
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v0 = sub_191CF5338();
  return sub_191BDA6B4(v0, v1, 1100, 0, 0xD00000000000002BLL, 0x8000000191D12430);
}

uint64_t sub_191C9FDFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(v0 + 104)) {
    swift_release();
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }

  return swift_deallocObject();
}

uint64_t sub_191C9FE60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t ControlPushInfo.token.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_191B15F88(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

ValueMetadata *type metadata accessor for ControlPushInfo()
{
  return &type metadata for ControlPushInfo;
}

id TimelineRequest.__allocating_init(widget:environment:fileHandle:archiveVersion:)(void *a1, uint64_t *a2, void *a3, char *a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_191CA1500(a1, a2, a3, a4);

  return v10;
}

id TimelineRequest.widget.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
}

id TimelineRequest.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  *a1 = v2;
  return v2;
}

id TimelineRequest.fileHandle.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
}

void TimelineRequest.archiveVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
}

uint64_t sub_191C9FFB8(unsigned __int8 *a1, char *a2)
{
  return sub_191CD6408(*a1, *a2);
}

uint64_t sub_191C9FFC4()
{
  return sub_191CF64C8();
}

uint64_t sub_191CA00B4()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CA018C()
{
  return sub_191CF64C8();
}

uint64_t sub_191CA0278@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CA15B0();
  *a1 = result;
  return result;
}

void sub_191CA02A8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746567646977;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000746E65;
      uint64_t v3 = 0x6D6E6F7269766E65;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x646E6148656C6966;
      *(void *)(a1 + 8) = 0xEA0000000000656CLL;
      break;
    case 3:
      strcpy((char *)a1, "archiveVersion");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_191CA0358()
{
  uint64_t result = 0x746567646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 2:
      uint64_t result = 0x646E6148656C6966;
      break;
    case 3:
      uint64_t result = 0x5665766968637261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191CA03FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CA15B0();
  *a1 = result;
  return result;
}

uint64_t sub_191CA0424(uint64_t a1)
{
  unint64_t v2 = sub_191CA1E68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CA0460(uint64_t a1)
{
  unint64_t v2 = sub_191CA1E68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191CA049C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0F98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CA2430();
  sub_191CF6528();
  char v10 = v7;
  sub_191BF2A9C();
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_191CA05E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449A00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CA2430();
  sub_191CF6508();
  if (!v2)
  {
    sub_191BF69B4();
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191CA074C()
{
  return 0x5665766968637261;
}

uint64_t sub_191CA0770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191CA082C(uint64_t a1)
{
  unint64_t v2 = sub_191CA2430();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CA0868(uint64_t a1)
{
  unint64_t v2 = sub_191CA2430();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191CA08A4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_191CA05E4(a1, a2);
}

uint64_t sub_191CA08BC(void *a1)
{
  return sub_191CA049C(a1);
}

id TimelineRequest.init(widget:environment:fileHandle:archiveVersion:)(void *a1, uint64_t *a2, void *a3, char *a4)
{
  id v6 = sub_191CA1500(a1, a2, a3, a4);

  return v6;
}

void *TimelineRequest.__allocating_init(from:)(void *a1)
{
  return sub_191CA15FC(a1);
}

uint64_t sub_191CA092C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E4F90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CA1E68();
  sub_191CF6528();
  id v33 = *(id *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  char v32 = 1;
  sub_191B717BC();
  sub_191CF6278();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v10 = self;
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  id v33 = 0;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v33);
  id v13 = v33;
  if (v12)
  {
    id v31 = (void *)sub_191CF30C8();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v16 = v13;
    unint64_t v17 = (void *)sub_191CF2FE8();

    swift_willThrow();
    id v31 = 0;
    unint64_t v15 = 0xF000000000000000;
  }
  uint64_t v28 = v3;
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  id v33 = 0;
  id v19 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v18, 1, &v33);
  id v20 = v33;
  if (v19)
  {
    unint64_t v29 = (void *)sub_191CF30C8();
    unint64_t v30 = v21;
  }
  else
  {
    uint64_t v22 = v20;
    unint64_t v23 = (void *)sub_191CF2FE8();

    swift_willThrow();
    unint64_t v29 = 0;
    unint64_t v30 = 0xF000000000000000;
  }
  id v33 = v31;
  unint64_t v34 = v15;
  char v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3ED0);
  sub_191BBC418();
  sub_191CF6278();
  unint64_t v27 = v15;
  uint64_t v25 = (uint64_t)v29;
  unint64_t v24 = v30;
  id v33 = v29;
  unint64_t v34 = v30;
  char v32 = 2;
  sub_191CF6278();
  LOBYTE(v33) = *(unsigned char *)(v28 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
  char v32 = 3;
  sub_191BF2A9C();
  sub_191CF6208();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_191B170C8(v25, v24);
  return sub_191B170C8((uint64_t)v31, v27);
}

id TimelineRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TimelineRequest.init(coder:)(a1);
}

id TimelineRequest.init(coder:)(void *a1)
{
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
  id v3 = v1;
  uint64_t v4 = (void *)sub_191CF5AC8();
  type metadata accessor for WidgetEnvironment.Storage();
  uint64_t v5 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, &qword_1EB44C380);
  uint64_t v6 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, &qword_1EB44C680);
  uint64_t v7 = sub_191CF5AC8();
  if (!v7)
  {

LABEL_4:
    goto LABEL_5;
  }
  uint64_t v8 = (void *)v7;
  uint64_t v9 = sub_191CF30C8();
  unint64_t v11 = v10;

  sub_191CF2F88();
  swift_allocObject();
  sub_191CF2F78();
  sub_191CA1EBC();
  sub_191CF2F58();
  if (!v4)
  {
    swift_release();

    sub_191B1603C(v9, v11);
    goto LABEL_5;
  }
  if (!v5)
  {
    swift_release();

    sub_191B1603C(v9, v11);
    goto LABEL_4;
  }
  if (v6)
  {
    char v23 = (char)v25;
    id v14 = v4;
    id v15 = v5;
    id v16 = v6;

    unint64_t v17 = (objc_class *)type metadata accessor for TimelineRequest();
    uint64_t v18 = (char *)objc_allocWithZone(v17);
    *(void *)&v18[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = v14;
    id v25 = v15;
    id v22 = v14;
    id v19 = v15;
    id v20 = v18;
    WidgetEnvironment.filterForExtensions()();
    *(void *)&v20[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v25;
    *(void *)&v20[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v16;
    v20[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = v23;
    id v21 = v16;

    v24.receiver = v20;
    v24.super_class = v17;
    id v12 = objc_msgSendSuper2(&v24, sel_init);
    swift_release();

    sub_191B1603C(v9, v11);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return v12;
  }
  swift_release();

  sub_191B1603C(v9, v11);
LABEL_5:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_191CA1128(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  uint64_t v5 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  id v6 = *(id *)(v2 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  uint64_t v7 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  uint64_t v9 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  sub_191CF2FC8();
  swift_allocObject();
  sub_191CF2FB8();
  sub_191CF2F98();
  sub_191CA1F34();
  uint64_t v10 = sub_191CF2FA8();
  unint64_t v12 = v11;
  id v13 = (void *)sub_191CF30A8();
  id v14 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  sub_191B1603C(v10, v12);
  return swift_release();
}

id TimelineRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void TimelineRequest.init()()
{
}

id TimelineRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_191CA14B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_191CA15FC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191CA14DC(void *a1)
{
  return sub_191CA092C(a1);
}

id sub_191CA1500(void *a1, uint64_t *a2, void *a3, char *a4)
{
  uint64_t v7 = *a2;
  char v8 = *a4;
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = a1;
  uint64_t v14 = v7;
  uint64_t v9 = v4;
  id v10 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v9[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v14;
  *(void *)&v9[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = a3;
  v9[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = v8;
  id v11 = a3;

  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for TimelineRequest();
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_191CA15B0()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void *sub_191CA15FC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E4FC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v72 = a1;
  char v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v9 = sub_191CA1E68();
  sub_191CF6508();
  if (!v1)
  {
    uint64_t v10 = v4;
    char v77 = 1;
    sub_191B715A4();
    id v11 = v6;
    sub_191CF6178();
    id v71 = v74;
    char v77 = 3;
    sub_191BF69B4();
    sub_191CF6108();
    int v12 = v74;
    char v77 = 0;
    sub_191B71714();
    sub_191CF6178();
    LODWORD(v66) = v12;
    uint64_t v69 = v11;
    uint64_t v70 = v3;
    uint64_t v15 = (uint64_t)v74;
    unint64_t v14 = v75;
    id v16 = (void *)sub_191B016E0(0, &qword_1EB449A20);
    uint64_t v17 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
    uint64_t v67 = v15;
    unint64_t v68 = v14;
    uint64_t v18 = v17;
    id v19 = (void *)sub_191CF59A8();
    id v65 = v16;
    if (v19)
    {
      char v77 = 2;
      id v26 = v19;
      unint64_t v27 = v69;
      sub_191CF6178();
      uint64_t v38 = (uint64_t)v74;
      unint64_t v37 = v75;
      uint64_t v39 = sub_191B016E0(0, &qword_1EB44C380);
      uint64_t v63 = v38;
      unint64_t v64 = v37;
      uint64_t v40 = sub_191CF59A8();
      uint64_t v46 = (void *)v40;
      if (v40)
      {
        unsigned __int8 v47 = (objc_class *)type metadata accessor for TimelineRequest();
        uint64_t v48 = (char *)objc_allocWithZone(v47);
        id v49 = v71;
        id v50 = v48;
        *(void *)&v48[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = v26;
        uint64_t v74 = v49;
        id v51 = v26;
        id v52 = v46;
        id v53 = v49;
        long long v54 = v50;
        WidgetEnvironment.filterForExtensions()();
        *(void *)&v54[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v74;
        *(void *)&v54[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v52;
        v54[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = (_BYTE)v66;
        id v55 = v52;

        v73.receiver = v54;
        v73.super_class = v47;
        char v8 = objc_msgSendSuper2(&v73, sel_init);

        sub_191B1603C(v63, v64);
        sub_191B1603C(v67, v68);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v69, v70);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
        return v8;
      }
      id v65 = v26;

      uint64_t v56 = sub_191CF5E38();
      uint64_t v57 = (char *)swift_allocError();
      uint64_t v59 = v58;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *uint64_t v59 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = xmmword_191CF8410;
      *(void *)(v60 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(void *)(v60 + 64) = v9;
      *(unsigned char *)(v60 + 32) = 2;
      sub_191CF5E18();
      id v61 = *(void (**)(uint64_t *))(*(void *)(v56 - 8) + 104);
      unsigned int v76 = *MEMORY[0x1E4FBBA80];
      v61(v59);
      uint64_t v66 = v57;
      swift_willThrow();
      uint64_t v41 = sub_191CF5E38();
      swift_allocError();
      char v8 = v42;
      v62[1] = (char *)v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00) + 48);
      *char v8 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_191CF8410;
      *(void *)(v43 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(void *)(v43 + 64) = v9;
      *(unsigned char *)(v43 + 32) = 2;
      id v44 = v66;
      uint64_t v45 = v66;
      sub_191CF5E18();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v8, v76, v41);
      swift_willThrow();
      sub_191B1603C(v63, v64);
      sub_191B1603C(v67, v68);

      objc_super v24 = *(void (**)(char *, uint64_t))(v10 + 8);
      id v25 = v27;
    }
    else
    {
      uint64_t v28 = v18;
      uint64_t v29 = sub_191CF5E38();
      unint64_t v30 = (void *)swift_allocError();
      char v32 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *char v32 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_191CF8410;
      *(void *)(v33 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(void *)(v33 + 64) = v9;
      *(unsigned char *)(v33 + 32) = 0;
      sub_191CF5E18();
      unint64_t v34 = *(void (**)(uint64_t *))(*(void *)(v29 - 8) + 104);
      uint64_t v35 = v28;
      uint64_t v36 = *MEMORY[0x1E4FBBA80];
      v34(v32);
      swift_willThrow();
      uint64_t v20 = sub_191CF5E38();
      swift_allocError();
      char v8 = v21;
      uint64_t v66 = (char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00) + 48);
      *char v8 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
      *(void *)(v22 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(void *)(v22 + 64) = v9;
      *(unsigned char *)(v22 + 32) = 0;
      id v23 = v30;
      sub_191CF5E18();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v8, v36, v20);
      swift_willThrow();
      sub_191B1603C(v67, v68);

      objc_super v24 = *(void (**)(char *, uint64_t))(v10 + 8);
      id v25 = v69;
    }
    v24(v25, v70);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  return v8;
}

unint64_t sub_191CA1E68()
{
  unint64_t result = qword_1E92E4F98;
  if (!qword_1E92E4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4F98);
  }
  return result;
}

unint64_t sub_191CA1EBC()
{
  unint64_t result = qword_1EB4499D0;
  if (!qword_1EB4499D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4499D0);
  }
  return result;
}

uint64_t type metadata accessor for TimelineRequest()
{
  return self;
}

unint64_t sub_191CA1F34()
{
  unint64_t result = qword_1E92E0F18;
  if (!qword_1E92E0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0F18);
  }
  return result;
}

uint64_t method lookup function for TimelineRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimelineRequest);
}

uint64_t dispatch thunk of static TimelineRequest.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(widget:environment:fileHandle:archiveVersion:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TimelineRequest.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of TimelineRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t getEnumTagSinglePayload for TimelineRequest.CodingProxy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  if (*a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 3;
  if (*a1 < 2u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimelineRequest.CodingProxy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CA21ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingProxy()
{
  return &type metadata for TimelineRequest.CodingProxy;
}

unsigned char *storeEnumTagSinglePayload for TimelineRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CA22F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingKeys()
{
  return &type metadata for TimelineRequest.CodingKeys;
}

unint64_t sub_191CA232C()
{
  unint64_t result = qword_1E92E4FA8;
  if (!qword_1E92E4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4FA8);
  }
  return result;
}

unint64_t sub_191CA2384()
{
  unint64_t result = qword_1E92E4FB0;
  if (!qword_1E92E4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4FB0);
  }
  return result;
}

unint64_t sub_191CA23DC()
{
  unint64_t result = qword_1E92E4FB8;
  if (!qword_1E92E4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4FB8);
  }
  return result;
}

unint64_t sub_191CA2430()
{
  unint64_t result = qword_1EB449AC8;
  if (!qword_1EB449AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449AC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TimelineRequest.CodingProxy.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191CA2520);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingProxy.CodingKeys()
{
  return &type metadata for TimelineRequest.CodingProxy.CodingKeys;
}

unint64_t sub_191CA255C()
{
  unint64_t result = qword_1E92E4FD0;
  if (!qword_1E92E4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4FD0);
  }
  return result;
}

unint64_t sub_191CA25B4()
{
  unint64_t result = qword_1EB449AE8;
  if (!qword_1EB449AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449AE8);
  }
  return result;
}

unint64_t sub_191CA260C()
{
  unint64_t result = qword_1EB449AD0[0];
  if (!qword_1EB449AD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB449AD0);
  }
  return result;
}

uint64_t sub_191CA2660(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x647261646E617473;
  }
  else {
    uint64_t v3 = 0x6573616572636E69;
  }
  if (a2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000064;
  }
  if (a1) {
    uint64_t v5 = 0x647261646E617473;
  }
  else {
    uint64_t v5 = 0x6573616572636E69;
  }
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA271C(char a1, char a2)
{
  LOBYTE(v2) = a1;
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1684828002;
    }
    else {
      uint64_t v3 = 1701736302;
    }
    unint64_t v4 = 0xE400000000000000;
    int v2 = v2;
    if ((_BYTE)v2)
    {
LABEL_6:
      if (v2 == 1) {
        uint64_t v5 = 1684828002;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v3 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x72616C75676572;
    int v2 = v2;
    if ((_BYTE)v2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v3 != 0x72616C75676572)
  {
LABEL_15:
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
    return v7 & 1;
  }
LABEL_13:
  if (v4 != v6) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
  char v7 = 1;
  return v7 & 1;
}

uint64_t sub_191CA2828(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x5079616C70736964;
  }
  else {
    uint64_t v3 = 1111970419;
  }
  if (a2) {
    unint64_t v4 = 0xE900000000000033;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a1) {
    uint64_t v5 = 0x5079616C70736964;
  }
  else {
    uint64_t v5 = 1111970419;
  }
  if (a1) {
    unint64_t v6 = 0xE900000000000033;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA28DC(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 1802658148;
  }
  else {
    uint64_t v3 = 0x746867696CLL;
  }
  if (a2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a1) {
    uint64_t v5 = 1802658148;
  }
  else {
    uint64_t v5 = 0x746867696CLL;
  }
  if (a1) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA2988(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1802658148;
  }
  else {
    uint64_t v3 = 0x746867696CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1802658148;
  }
  else {
    uint64_t v5 = 0x746867696CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA2A30(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x5079616C70736964;
  }
  else {
    uint64_t v3 = 1111970419;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000033;
  }
  if (a2) {
    uint64_t v5 = 0x5079616C70736964;
  }
  else {
    uint64_t v5 = 1111970419;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000033;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA2AE0(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1684828002;
    }
    else {
      uint64_t v2 = 1701736302;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1684828002;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x72616C75676572;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
    return v7 & 1;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
  char v7 = 1;
  return v7 & 1;
}

uint64_t sub_191CA2BE8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x647261646E617473;
  }
  else {
    uint64_t v3 = 0x6573616572636E69;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x647261646E617473;
  }
  else {
    uint64_t v5 = 0x6573616572636E69;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_191CF6348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191CA2CA0(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 1802658148;
  }
  else {
    uint64_t v3 = 0x746867696CLL;
  }
  if (a2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a1) {
    uint64_t v5 = 1802658148;
  }
  else {
    uint64_t v5 = 0x746867696CLL;
  }
  if (a1) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CA2D40(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x5079616C70736964;
  }
  else {
    uint64_t v3 = 1111970419;
  }
  if (a2) {
    unint64_t v4 = 0xE900000000000033;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a1) {
    uint64_t v5 = 0x5079616C70736964;
  }
  else {
    uint64_t v5 = 1111970419;
  }
  if (a1) {
    unint64_t v6 = 0xE900000000000033;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CA2DE8(char a1, char a2)
{
  LOBYTE(v2) = a1;
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1684828002;
    }
    else {
      uint64_t v3 = 1701736302;
    }
    unint64_t v4 = 0xE400000000000000;
    int v2 = v2;
    if ((_BYTE)v2)
    {
LABEL_6:
      if (v2 == 1) {
        uint64_t v5 = 1684828002;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v3 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x72616C75676572;
    int v2 = v2;
    if ((_BYTE)v2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v3 != 0x72616C75676572)
  {
LABEL_15:
    char v7 = sub_191CF6348();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v6) {
    goto LABEL_15;
  }
  char v7 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CA2EE8(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x647261646E617473;
  }
  else {
    uint64_t v3 = 0x6573616572636E69;
  }
  if (a2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000064;
  }
  if (a1) {
    uint64_t v5 = 0x647261646E617473;
  }
  else {
    uint64_t v5 = 0x6573616572636E69;
  }
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CA2F98()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C9F8 = result;
  return result;
}

uint64_t sub_191CA2FC0()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A868);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C9E0 = v0;
  *(void *)algn_1EB44C9E8 = 0x686353726F6C6F63;
  qword_1EB44C9F0 = 0xEB00000000656D65;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeKey()
{
  return &type metadata for ColorSchemeKey;
}

unint64_t sub_191CA3050()
{
  unint64_t result = qword_1EB44A900;
  if (!qword_1EB44A900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A900);
  }
  return result;
}

unint64_t sub_191CA30A8()
{
  unint64_t result = qword_1EB44A918;
  if (!qword_1EB44A918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A918);
  }
  return result;
}

unint64_t sub_191CA3100()
{
  unint64_t result = qword_1EB44A8F8;
  if (!qword_1EB44A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A8F8);
  }
  return result;
}

uint64_t sub_191CA3154(char *a1, char *a2)
{
  return sub_191CD6664(*a1, *a2);
}

uint64_t sub_191CA3160()
{
  return sub_191CF64C8();
}

uint64_t sub_191CA31D8()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CA323C()
{
  return sub_191CF64C8();
}

uint64_t sub_191CA32B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_191CA3310(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1802658148;
  if (!*v1) {
    uint64_t v2 = 0x746867696CLL;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_191CA3344()
{
  return sub_191CF54F8();
}

uint64_t sub_191CA33A4()
{
  return sub_191CF54D8();
}

uint64_t sub_191CA33F4(char *a1, char *a2)
{
  return sub_191CA3610(*a1, *a2);
}

uint64_t sub_191CA3400(char *a1, char *a2)
{
  return sub_191CA28DC(*a1, *a2);
}

uint64_t sub_191CA340C(char *a1, char *a2)
{
  return sub_191CA2988(*a1, *a2);
}

uint64_t sub_191CA3418(char *a1, char *a2)
{
  return sub_191CA2CA0(*a1, *a2);
}

uint64_t sub_191CA3424()
{
  if (qword_1EB44A858 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191CA3480@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = sub_191CF3998();
  uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3C5B8];
  if (!v3) {
    uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3C5C0];
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_191CA3508@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_191CA3700(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_191CA3538()
{
  if (qword_1EB44A8F0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C9E0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191CA35BC()
{
  unint64_t result = qword_1EB44A908;
  if (!qword_1EB44A908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A908);
  }
  return result;
}

uint64_t sub_191CA3610(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1802658148;
  }
  else {
    uint64_t v3 = 0x746867696CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1802658148;
  }
  else {
    uint64_t v5 = 0x746867696CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_191CA36AC()
{
  unint64_t result = qword_1EB44A910;
  if (!qword_1EB44A910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A910);
  }
  return result;
}

uint64_t sub_191CA3700(uint64_t a1)
{
  uint64_t v2 = sub_191CF3998();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E4F3C5C0] || v7 == *MEMORY[0x1E4F3C5B8]) {
    return v7 != *MEMORY[0x1E4F3C5C0];
  }
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  uint64_t v10 = sub_191CF5E58();
  swift_allocError();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08);
  sub_191B4F964((uint64_t)v16, v12);
  v15[0] = sub_191CF5DC8();
  v15[1] = v13;
  sub_191CF53B8();
  v16[5] = 36;
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x1E4FBBAA0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unsigned char *storeEnumTagSinglePayload for ColorSchemeKey.CodableColorScheme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CA3A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeKey.CodableColorScheme()
{
  return &type metadata for ColorSchemeKey.CodableColorScheme;
}

uint64_t sub_191CA3A80()
{
  type metadata accessor for ControlCenterClient();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_191CA6424();
  qword_1E92F25E0 = v0;
  return result;
}

uint64_t sub_191CA3ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_191CF5168();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF51C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + 16);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_191CA6C5C;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_40;
  unint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_191CF5188();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_191CA6C78((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_191CA3D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_191CA57F4();
  if (result)
  {
    uint64_t v5 = (void *)result;
    if (a3) {
      uint64_t v6 = (void *)sub_191CF5318();
    }
    else {
      uint64_t v6 = 0;
    }
    objc_msgSend(v5, sel_reloadAllControlsForBundleIdentifier_, v6);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_191CA3E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191CF5168();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF51C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 16);
  unint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_191CA6C6C;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_46;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_191CF5188();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_191CA6C78((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_191CA40CC()
{
  uint64_t result = sub_191CA57F4();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = (void *)sub_191CF5318();
    objc_msgSend(v1, sel_reloadControlsOfKind_, v2);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_191CA4154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5168();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF51C8();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v17[1] = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_191CA6868;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_21;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_191CF5188();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_191CA6C78((unint64_t *)&qword_1EB44C688, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_191CA44CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = sub_191CA57F4();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
    unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    aBlock[4] = sub_191CA6964;
    void aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191CA5748;
    aBlock[3] = &block_descriptor_27;
    uint64_t v10 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_currentConfigurations_, v10);
    _Block_release(v10);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v12 = sub_191CF5338();
    sub_191BDA6B4(v12, v13, 1102, 0, 0xD000000000000014, 0x8000000191D0F910);
    return sub_191CF5658();
  }
}

void sub_191CA46EC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
LABEL_3:
      id v23 = a3;
      id v14 = a3;
      sub_191CF5658();
      return;
    }
  }
  else
  {
    uint64_t v22 = v9;
    sub_191CF2F88();
    swift_allocObject();
    sub_191B15F88(a1, a2);
    sub_191CF2F78();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5050);
    sub_191CA69F0();
    sub_191CF2F58();
    swift_release();
    uint64_t v15 = v23;
    if (v23)
    {
      uint64_t v16 = sub_191CF56B8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
      uint64_t v17 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v19 = (char *)swift_allocObject();
      *((void *)v19 + 2) = 0;
      *((void *)v19 + 3) = 0;
      *((void *)v19 + 4) = v15;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v19[v18], (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      id v20 = v15;
      sub_191BC2CF8((uint64_t)v13, (uint64_t)&unk_1E92E5070, (uint64_t)v19);
      sub_191B170C8(a1, a2);
      swift_release();

      return;
    }
    sub_191B170C8(a1, a2);
    if (a3) {
      goto LABEL_3;
    }
  }
  id v23 = (void *)MEMORY[0x1E4FBC860];
  sub_191CF5668();
}

uint64_t sub_191CA49E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 256) = a4;
  *(void *)(v5 + 264) = a5;
  return MEMORY[0x1F4188298](sub_191CA4A08, 0, 0);
}

uint64_t sub_191CA4A08()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 256) + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  *(void *)(v0 + 272) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_191CF6018();
    uint64_t v2 = v3;
    *(void *)(v0 + 280) = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_32:
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_33:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
    sub_191CF5668();
    uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
    return v43();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  *(void *)(v0 + 280) = v2;
  if (!v2) {
    goto LABEL_32;
  }
LABEL_3:
  *(void *)(v0 + 288) = *(void *)(*(void *)(v0 + 256)
                                    + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
  if (v2 < 1)
  {
    __break(1u);
    return MEMORY[0x1F40D3A38](v3, v4);
  }
  uint64_t v5 = 0;
  uint64_t v45 = v0 + 16;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    *(void *)(v0 + 296) = v5;
    *(void *)(v0 + 304) = v6;
    uint64_t v7 = *(void *)(v0 + 272);
    id v8 = (v7 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FE4B60]() : *(id *)(v7 + 8 * v5 + 32);
    uint64_t v9 = v8;
    *(void *)(v0 + 312) = v8;
    if (*(void *)(*(void *)(v0 + 288) + 16))
    {
      id v10 = v8;
      unint64_t v11 = sub_191B1CBA4((uint64_t)v10);
      if (v12)
      {
        uint64_t v13 = (uint64_t *)(*(void *)(*(void *)(v0 + 288) + 56) + 16 * v11);
        uint64_t v14 = *v13;
        unint64_t v15 = v13[1];
        sub_191B15F88(*v13, v15);
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0xF000000000000000;
      }
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v15 = 0xF000000000000000;
    }
    *(void *)(v0 + 320) = v14;
    *(void *)(v0 + 328) = v15;
    id v16 = v9;
    sub_191B169E8(v14, v15);
    *(void *)(v0 + 48) = v16;
    id v17 = v16;
    id v18 = objc_msgSend(v17, sel_kind);
    uint64_t v19 = sub_191CF5338();
    uint64_t v21 = v20;

    *(void *)(v0 + 16) = v19;
    *(void *)(v0 + 24) = v21;
    *(void *)(v0 + 32) = v14;
    *(void *)(v0 + 40) = v15;
    id v22 = objc_msgSend(v17, sel_intentReference);
    if (v22)
    {
      id v23 = v22;
      id v24 = objc_msgSend(v22, sel_intent);
      *(void *)(v0 + 336) = v24;

      if (v24) {
        break;
      }
    }
LABEL_18:

    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_191B15FE0(v45, v0 + 96);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *(void **)(v0 + 304);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v6 = sub_191B40C10(0, v6[2] + 1, 1, *(void **)(v0 + 304));
    }
    unint64_t v28 = v6[2];
    unint64_t v27 = v6[3];
    if (v28 >= v27 >> 1) {
      uint64_t v6 = sub_191B40C10((void *)(v27 > 1), v28 + 1, 1, v6);
    }
    uint64_t v29 = *(void *)(v0 + 320);
    unint64_t v30 = *(void *)(v0 + 328);
    id v31 = *(void **)(v0 + 312);
    uint64_t v32 = *(void *)(v0 + 280);
    uint64_t v33 = *(void *)(v0 + 296) + 1;
    _OWORD v6[2] = v28 + 1;
    unint64_t v34 = &v6[10 * v28];
    id v34[2] = *(_OWORD *)(v0 + 96);
    long long v35 = *(_OWORD *)(v0 + 112);
    long long v36 = *(_OWORD *)(v0 + 128);
    long long v37 = *(_OWORD *)(v0 + 160);
    v34[5] = *(_OWORD *)(v0 + 144);
    v34[6] = v37;
    v34[3] = v35;
    v34[4] = v36;

    sub_191B170C8(v29, v30);
    sub_191B16094(v45);
    if (v33 == v32) {
      goto LABEL_33;
    }
    uint64_t v5 = *(void *)(v0 + 296) + 1;
  }
  self;
  id v25 = (void *)swift_dynamicCastObjCClass();
  if (!v25)
  {

    goto LABEL_18;
  }
  id v38 = objc_msgSend(v25, sel_linkAction);
  if (v38)
  {
    id v39 = v38;
    *(void *)(v0 + 240) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
    *(void *)(v0 + 216) = v39;
    uint64_t v40 = v0 + 216;
    uint64_t v41 = v0 + 176;
  }
  else
  {
    uint64_t v40 = v0 + 216;
    uint64_t v41 = v0 + 176;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
  }
  uint64_t v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_191CA4E58;
  uint64_t v3 = v41;
  uint64_t v4 = v40;
  return MEMORY[0x1F40D3A38](v3, v4);
}

uint64_t sub_191CA4E58()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_191CA5354;
  }
  else
  {
    sub_191B88CAC(v2 + 216);
    uint64_t v3 = sub_191CA4F78;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191CA4F78()
{
  uint64_t v42 = v0 + 16;
  unint64_t v1 = *(void **)(v0 + 336);

  sub_191B015B0(v0 + 176, v0 + 56, &qword_1E92E0FF8);
  while (1)
  {
    sub_191B15FE0(v42, v0 + 96);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = *(void **)(v0 + 304);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v3 = sub_191B40C10(0, v3[2] + 1, 1, *(void **)(v0 + 304));
    }
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_191B40C10((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    uint64_t v7 = *(void *)(v0 + 320);
    unint64_t v6 = *(void *)(v0 + 328);
    id v8 = *(void **)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 296) + 1;
    v3[2] = v5 + 1;
    unint64_t v11 = &v3[10 * v5];
    v11[2] = *(_OWORD *)(v0 + 96);
    long long v12 = *(_OWORD *)(v0 + 112);
    long long v13 = *(_OWORD *)(v0 + 128);
    long long v14 = *(_OWORD *)(v0 + 160);
    v11[5] = *(_OWORD *)(v0 + 144);
    v11[6] = v14;
    v11[3] = v12;
    v11[4] = v13;

    sub_191B170C8(v7, v6);
    sub_191B16094(v42);
    if (v10 == v9) {
      break;
    }
    uint64_t v15 = *(void *)(v0 + 296) + 1;
    *(void *)(v0 + 296) = v15;
    *(void *)(v0 + 304) = v3;
    uint64_t v16 = *(void *)(v0 + 272);
    if ((v16 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x192FE4B60]();
    }
    else {
      id v17 = *(id *)(v16 + 8 * v15 + 32);
    }
    id v18 = v17;
    *(void *)(v0 + 312) = v17;
    if (*(void *)(*(void *)(v0 + 288) + 16))
    {
      id v19 = v17;
      unint64_t v20 = sub_191B1CBA4((uint64_t)v19);
      if (v21)
      {
        id v22 = (uint64_t *)(*(void *)(*(void *)(v0 + 288) + 56) + 16 * v20);
        uint64_t v23 = *v22;
        unint64_t v24 = v22[1];
        sub_191B15F88(*v22, v24);
      }
      else
      {
        uint64_t v23 = 0;
        unint64_t v24 = 0xF000000000000000;
      }
    }
    else
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0xF000000000000000;
    }
    *(void *)(v0 + 320) = v23;
    *(void *)(v0 + 328) = v24;
    id v25 = v18;
    sub_191B169E8(v23, v24);
    *(void *)(v0 + 48) = v25;
    id v26 = v25;
    id v27 = objc_msgSend(v26, sel_kind);
    uint64_t v28 = sub_191CF5338();
    uint64_t v30 = v29;

    *(void *)(v0 + 16) = v28;
    *(void *)(v0 + 24) = v30;
    *(void *)(v0 + 32) = v23;
    *(void *)(v0 + 40) = v24;
    id v31 = objc_msgSend(v26, sel_intentReference);
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, sel_intent);
      *(void *)(v0 + 336) = v33;

      if (v33)
      {
        self;
        unint64_t v34 = (void *)swift_dynamicCastObjCClass();
        if (v34)
        {
          id v37 = objc_msgSend(v34, sel_linkAction);
          if (v37)
          {
            id v38 = v37;
            *(void *)(v0 + 240) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
            *(void *)(v0 + 216) = v38;
            uint64_t v39 = v0 + 216;
            uint64_t v40 = v0 + 176;
          }
          else
          {
            uint64_t v39 = v0 + 216;
            uint64_t v40 = v0 + 176;
            *(_OWORD *)(v0 + 216) = 0u;
            *(_OWORD *)(v0 + 232) = 0u;
          }
          uint64_t v41 = (void *)swift_task_alloc();
          *(void *)(v0 + 344) = v41;
          *uint64_t v41 = v0;
          v41[1] = sub_191CA4E58;
          return MEMORY[0x1F40D3A38](v40, v39);
        }
      }
    }

    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 248) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  sub_191CF5668();
  long long v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_191CA5354()
{
  unint64_t v1 = *(void **)(v0 + 336);

  sub_191B88CAC(v0 + 216);
  *(_OWORD *)(v0 + 176) = 0u;
  uint64_t v41 = v0 + 16;
  *(_OWORD *)(v0 + 192) = 0u;
  *(void *)(v0 + 208) = 0;
  sub_191B015B0(v0 + 176, v0 + 56, &qword_1E92E0FF8);
  while (1)
  {
    sub_191B15FE0(v41, v0 + 96);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = *(void **)(v0 + 304);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v3 = sub_191B40C10(0, v3[2] + 1, 1, *(void **)(v0 + 304));
    }
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_191B40C10((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    uint64_t v7 = *(void *)(v0 + 320);
    unint64_t v6 = *(void *)(v0 + 328);
    id v8 = *(void **)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 296) + 1;
    v3[2] = v5 + 1;
    unint64_t v11 = &v3[10 * v5];
    v11[2] = *(_OWORD *)(v0 + 96);
    long long v12 = *(_OWORD *)(v0 + 112);
    long long v13 = *(_OWORD *)(v0 + 128);
    long long v14 = *(_OWORD *)(v0 + 160);
    v11[5] = *(_OWORD *)(v0 + 144);
    v11[6] = v14;
    v11[3] = v12;
    v11[4] = v13;

    sub_191B170C8(v7, v6);
    sub_191B16094(v41);
    if (v10 == v9) {
      break;
    }
    uint64_t v15 = *(void *)(v0 + 296) + 1;
    *(void *)(v0 + 296) = v15;
    *(void *)(v0 + 304) = v3;
    uint64_t v16 = *(void *)(v0 + 272);
    if ((v16 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x192FE4B60]();
    }
    else {
      id v17 = *(id *)(v16 + 8 * v15 + 32);
    }
    id v18 = v17;
    *(void *)(v0 + 312) = v17;
    if (*(void *)(*(void *)(v0 + 288) + 16))
    {
      id v19 = v17;
      unint64_t v20 = sub_191B1CBA4((uint64_t)v19);
      if (v21)
      {
        id v22 = (uint64_t *)(*(void *)(*(void *)(v0 + 288) + 56) + 16 * v20);
        uint64_t v23 = *v22;
        unint64_t v24 = v22[1];
        sub_191B15F88(*v22, v24);
      }
      else
      {
        uint64_t v23 = 0;
        unint64_t v24 = 0xF000000000000000;
      }
    }
    else
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0xF000000000000000;
    }
    *(void *)(v0 + 320) = v23;
    *(void *)(v0 + 328) = v24;
    id v25 = v18;
    sub_191B169E8(v23, v24);
    *(void *)(v0 + 48) = v25;
    id v26 = v25;
    id v27 = objc_msgSend(v26, sel_kind);
    uint64_t v28 = sub_191CF5338();
    uint64_t v30 = v29;

    *(void *)(v0 + 16) = v28;
    *(void *)(v0 + 24) = v30;
    *(void *)(v0 + 32) = v23;
    *(void *)(v0 + 40) = v24;
    id v31 = objc_msgSend(v26, sel_intentReference);
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, sel_intent);
      *(void *)(v0 + 336) = v33;

      if (v33)
      {
        self;
        unint64_t v34 = (void *)swift_dynamicCastObjCClass();
        if (v34)
        {
          id v37 = objc_msgSend(v34, sel_linkAction);
          if (v37)
          {
            id v38 = v37;
            *(void *)(v0 + 240) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
            *(void *)(v0 + 216) = v38;
            uint64_t v39 = v0 + 216;
          }
          else
          {
            uint64_t v39 = v0 + 216;
            *(_OWORD *)(v0 + 216) = 0u;
            *(_OWORD *)(v0 + 232) = 0u;
          }
          uint64_t v40 = (void *)swift_task_alloc();
          *(void *)(v0 + 344) = v40;
          *uint64_t v40 = v0;
          v40[1] = sub_191CA4E58;
          return MEMORY[0x1F40D3A38](v0 + 176, v39);
        }
      }
    }

    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 248) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  sub_191CF5668();
  long long v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_191CA5748(uint64_t a1, void *a2, void *a3)
{
  unint64_t v4 = a2;
  unint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    unint64_t v4 = (void *)sub_191CF30C8();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_191B170C8((uint64_t)v4, v8);

  return swift_release();
}

uint64_t sub_191CA57F4()
{
  BSDispatchQueueAssert();
  sub_191CA5A44();
  unint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = v1;
    if ([v2 remoteTarget])
    {
      sub_191CF5C58();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_191B015B0((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_1EB44BC90);
    if (v14)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5040);
      if (swift_dynamicCast())
      {

        return v11;
      }
    }
    else
    {
      sub_191B88CAC((uint64_t)v13);
    }
    if (qword_1E92E2CE8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_191CF3858();
    __swift_project_value_buffer(v7, (uint64_t)qword_1E92F25B0);
    unint64_t v8 = sub_191CF3838();
    os_log_type_t v9 = sub_191CF5938();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_191AF4000, v8, v9, "Failed to cast connection to server interface protocol", v10, 2u);
      MEMORY[0x192FE5F00](v10, -1, -1);
    }
  }
  else
  {
    if (qword_1E92E2CE8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_191CF3858();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E92F25B0);
    uint64_t v2 = sub_191CF3838();
    os_log_type_t v4 = sub_191CF5938();
    if (os_log_type_enabled(v2, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      _os_log_impl(&dword_191AF4000, v2, v4, "Failed to establish a connection", v5, 2u);
      MEMORY[0x192FE5F00](v5, -1, -1);
    }
  }

  return 0;
}

void sub_191CA5A44()
{
  BSDispatchQueueAssert();
  sub_191CA5BA0();
  unint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = v1;
    if (objc_msgSend(v2, sel_remoteTarget))
    {
      sub_191CF5C58();

      swift_unknownObjectRelease();
      sub_191B88CAC((uint64_t)v7);
    }
    else
    {
      memset(v7, 0, sizeof(v7));
      sub_191B88CAC((uint64_t)v7);
      if (qword_1E92E2CE8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_191CF3858();
      __swift_project_value_buffer(v3, (uint64_t)qword_1E92F25B0);
      os_log_type_t v4 = sub_191CF3838();
      os_log_type_t v5 = sub_191CF5948();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl(&dword_191AF4000, v4, v5, "Activating client connection.", v6, 2u);
        MEMORY[0x192FE5F00](v6, -1, -1);
      }

      objc_msgSend(v2, sel_activate);
    }
  }
}

void sub_191CA5BA0()
{
  BSDispatchQueueAssert();
  if (*(void *)(v0 + 24)) {
    return;
  }
  unint64_t v1 = (void *)sub_191CF5318();
  id v2 = (void *)sub_191CF5318();
  long long v12 = objc_msgSend(self, sel_endpointForMachName_service_instance_, v1, v2, 0);

  if (!v12) {
    goto LABEL_7;
  }
  id v3 = objc_msgSend(self, sel_connectionWithEndpoint_, v12);
  if (v3)
  {
    os_log_type_t v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v5 = v3;

    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_191CA6780;
    *(void *)(v6 + 24) = v0;
    aBlock[4] = (uint64_t)sub_191B6B62C;
    void aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_191CA636C;
    aBlock[3] = (uint64_t)&block_descriptor_9;
    uint64_t v7 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_configureConnection_, v7);

    _Block_release(v7);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v5 & 1) == 0) {
      return;
    }
    __break(1u);
LABEL_7:
    if (qword_1E92E2CE8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_191CF3858();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E92F25B0);
    long long v12 = sub_191CF3838();
    os_log_type_t v9 = sub_191CF5938();
    if (os_log_type_enabled(v12, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      aBlock[0] = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      void aBlock[6] = sub_191C5C36C(0xD00000000000001ELL, 0x8000000191D0F300, aBlock);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v12, v9, "Unable to get endpoint for mach-service: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v11, -1, -1);
      MEMORY[0x192FE5F00](v10, -1, -1);

      return;
    }
  }
}

void sub_191CA5F10(void *a1, uint64_t a2)
{
  os_log_type_t v4 = (void *)sub_191CF5318();
  id v5 = objc_msgSend(self, sel_interfaceWithIdentifier_, v4);

  if (qword_1E92E2C48 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1E92E3F40;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_protocolForProtocol_, v6);
  objc_msgSend(v5, sel_setClient_, v8);

  if (qword_1E92E2C50 != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(v7, sel_protocolForProtocol_, qword_1E92E3F48);
  objc_msgSend(v5, sel_setServer_, v9);

  if (qword_1E92E2C58 != -1) {
    swift_once();
  }
  objc_msgSend(a1, sel_setServiceQuality_, qword_1E92E3F50);
  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  id v17 = sub_191CA6258;
  uint64_t v18 = 0;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_191BF6E30;
  uint64_t v16 = &block_descriptor_9;
  uint64_t v10 = _Block_copy(&v13);
  objc_msgSend(a1, sel_setActivationHandler_, v10);
  _Block_release(v10);
  id v17 = sub_191CA6264;
  uint64_t v18 = 0;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_191BF6E30;
  uint64_t v16 = &block_descriptor_12;
  uint64_t v11 = _Block_copy(&v13);
  objc_msgSend(a1, sel_setInterruptionHandler_, v11);
  _Block_release(v11);
  id v17 = sub_191CA6270;
  uint64_t v18 = 0;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_191BF6E30;
  uint64_t v16 = &block_descriptor_15;
  long long v12 = _Block_copy(&v13);
  objc_msgSend(a1, sel_setInvalidationHandler_, v12);
  _Block_release(v12);
}

void sub_191CA6258(uint64_t a1)
{
}

void sub_191CA6264(uint64_t a1)
{
}

void sub_191CA6270(uint64_t a1)
{
}

void sub_191CA627C(uint64_t a1, const char *a2)
{
  if (qword_1E92E2CE8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191CF3858();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92F25B0);
  oslog = sub_191CF3838();
  os_log_type_t v4 = sub_191CF5948();
  if (os_log_type_enabled(oslog, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_191AF4000, oslog, v4, a2, v5, 2u);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
}

uint64_t sub_191CA636C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t sub_191CA63C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ControlCenterClient()
{
  return self;
}

uint64_t sub_191CA6424()
{
  v7[0] = sub_191CF5A08();
  uint64_t v1 = *(void *)(v7[0] - 8);
  MEMORY[0x1F4188790](v7[0]);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191CF59E8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_191CF51C8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  sub_191CF5198();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_191CA6C78(&qword_1EB44C5D0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C5C0);
  sub_191B1745C(&qword_1EB44C5C8, &qword_1EB44C5C0);
  sub_191CF5C98();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x1E4FBCC68], v7[0]);
  *(void *)(v0 + 16) = sub_191CF5A38();
  *(void *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_191CA6678()
{
  *(void *)(v1 + 24) = *v0;
  return MEMORY[0x1F4188298](sub_191CA669C, 0, 0);
}

uint64_t sub_191CA669C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3AE0);
  *uint64_t v1 = v0;
  v1[1] = sub_191B91854;
  uint64_t v3 = *(void *)(v0 + 24);
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000017, 0x8000000191D0EB00, sub_191B91C2C, v3, v2);
}

void sub_191CA6780(void *a1)
{
  sub_191CA5F10(a1, v1);
}

uint64_t sub_191CA6788()
{
  return swift_deallocObject();
}

uint64_t sub_191CA6798()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191CA6868()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_191CA44CC(v2, v3);
}

uint64_t sub_191CA68D0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_191CA6964(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_191CA46EC(a1, a2, a3, v8);
}

unint64_t sub_191CA69F0()
{
  unint64_t result = qword_1E92E5058;
  if (!qword_1E92E5058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5050);
    sub_191CA6C78(&qword_1E92E5060, (void (*)(uint64_t))type metadata accessor for ControlsConfigurationXPCContainer);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5058);
  }
  return result;
}

uint64_t sub_191CA6A94()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191CA6B6C()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5048) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_191B0A348;
  v5[32] = v3;
  v5[33] = v4;
  return MEMORY[0x1F4188298](sub_191CA4A08, 0, 0);
}

uint64_t sub_191CA6C5C()
{
  return sub_191CA3D78(v0[2], v0[3], v0[4]);
}

uint64_t sub_191CA6C6C()
{
  return sub_191CA40CC();
}

uint64_t sub_191CA6C78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_191CA6CE4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 16) & 1;
  char v3 = *(unsigned char *)(a1 + 17) & 1;
  char v4 = *(unsigned char *)(a1 + 40) & 1;
  char v5 = *(unsigned char *)(a1 + 41) & 1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = v2;
  *(unsigned char *)(a2 + 17) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(unsigned char *)(a2 + 40) = v4;
  *(unsigned char *)(a2 + 41) = v5;
  long long v6 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 64) = v6;
  __n128 result = *(__n128 *)(a1 + 80);
  *(__n128 *)(a2 + 80) = result;
  return result;
}

uint64_t sub_191CA6D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[29] = a3;
  v4[30] = v3;
  v4[27] = a1;
  v4[28] = a2;
  v4[31] = type metadata accessor for ControlTemplateToggle(0);
  v4[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  v4[33] = swift_task_alloc();
  type metadata accessor for ControlTemplateToggle.Option(0);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  v4[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = type metadata accessor for ExtractedControlMetadata(0);
  v4[42] = swift_task_alloc();
  uint64_t v6 = *(void *)(a3 + 16);
  v4[43] = v6;
  v4[44] = *(void *)(v6 - 8);
  v4[45] = swift_task_alloc();
  uint64_t v7 = sub_191CF3BA8();
  v4[46] = v7;
  v4[47] = *(void *)(v7 - 8);
  v4[48] = swift_task_alloc();
  sub_191CF5698();
  v4[49] = sub_191CF5688();
  uint64_t v9 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191CA6FF0, v9, v8);
}

uint64_t sub_191CA6FF0()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v75 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v69 = *(void *)(v0 + 224);
  uint64_t v71 = *(void *)(v0 + 336);
  swift_release();
  uint64_t v8 = *(void (**)(void))(v6 + 64);
  long long v9 = *(_OWORD *)(v6 + 25);
  long long v10 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)v6;
  *(_OWORD *)(v0 + 128) = v10;
  *(_OWORD *)(v0 + 137) = v9;
  LODWORD(v6) = *(unsigned __int8 *)(v0 + 128);
  uint64_t v77 = swift_allocObject();
  *(unsigned char *)(v77 + 16) = 0;
  objc_super v73 = (char *)(v77 + 16);
  v8();
  uint64_t v11 = *(void *)(v7 + 32);
  int v74 = v6;
  sub_191C9D210(v6, v4, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_getWitnessTable();
  unint64_t v12 = sub_191B97220();
  uint64_t v62 = v11;
  *(void *)(v0 + 200) = v11;
  *(void *)(v0 + 208) = v12;
  swift_getWitnessTable();
  sub_191C9D468(v1, v69, v3, v71);
  if (*(unsigned char *)(v71 + *(int *)(v75 + 20)) == 1) {
    *objc_super v73 = 1;
  }
  uint64_t v13 = *(void *)(v0 + 320);
  uint64_t v68 = (*(uint64_t (**)(void))(v0 + 112))(*(void *)(v0 + 224));
  uint64_t v66 = v14;
  unsigned __int8 v16 = v15 & 1;
  sub_191CF4758();
  uint64_t v17 = sub_191CF47A8();
  uint64_t v18 = *(void *)(v17 - 8);
  id v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v13, 1, v17);
  uint64_t v21 = *(void *)(v0 + 320);
  if (v20 == 1)
  {
    sub_191B01770(*(void *)(v0 + 320), &qword_1E92E2338);
    uint64_t v70 = 0;
    uint64_t v72 = 0;
  }
  else
  {
    id v22 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
    id v23 = objc_msgSend(v22, sel_string);

    uint64_t v24 = sub_191CF5338();
    uint64_t v70 = v25;
    uint64_t v72 = v24;
  }
  uint64_t v26 = *(void *)(v0 + 312);
  sub_191CF4768();
  int v27 = v19(v26, 1, v17);
  uint64_t v28 = *(void *)(v0 + 312);
  if (v27 == 1)
  {
    sub_191B01770(*(void *)(v0 + 312), &qword_1E92E2338);
    uint64_t v64 = 0;
    uint64_t v65 = 0;
  }
  else
  {
    uint64_t v29 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v17);
    id v30 = objc_msgSend(v29, sel_string);

    uint64_t v31 = sub_191CF5338();
    uint64_t v64 = v32;
    uint64_t v65 = v31;
  }
  id v33 = *(char **)(v0 + 344);
  uint64_t v35 = *(void *)(v0 + 296);
  uint64_t v34 = *(void *)(v0 + 304);
  uint64_t v37 = *(void *)(v0 + 232);
  uint64_t v36 = *(void *)(v0 + 240);
  uint64_t v60 = *(void *)(v0 + 288);
  uint64_t v38 = *(void *)(v0 + 224);
  sub_191CF4878();
  uint64_t v39 = *(void *)(v37 + 24);
  uint64_t v40 = *(void *)(v37 + 40);
  char v76 = 1;
  sub_191CA76E4(1, v36, v74, v38, v34, v77, v68, v66, v35, v16, v33, v39, v62, v40);
  sub_191CA76E4(0, v36, v74, v38, v34, v77, v68, v66, v60, v16, v33, v39, v62, v40);
  if ((v74 & 1) == 0)
  {
    swift_beginAccess();
    char v76 = *v73;
  }
  uint64_t v67 = *(void *)(v0 + 384);
  uint64_t v61 = *(void *)(v0 + 376);
  uint64_t v63 = *(void *)(v0 + 368);
  uint64_t v59 = *(void *)(v0 + 336);
  uint64_t v57 = *(void *)(v0 + 296);
  uint64_t v58 = *(void *)(v0 + 304);
  uint64_t v41 = *(void *)(v0 + 288);
  uint64_t v52 = *(void *)(v0 + 280);
  uint64_t v42 = *(void *)(v0 + 264);
  uint64_t v43 = *(void *)(v0 + 272);
  uint64_t v45 = *(int **)(v0 + 248);
  id v44 = *(uint64_t **)(v0 + 256);
  uint64_t v55 = v41;
  uint64_t v56 = *(void *)(v0 + 216);
  sub_191CA8234(v57, v52);
  sub_191CA8234(v41, v43);
  uint64_t v46 = sub_191CF3078();
  unsigned __int8 v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
  v47(v42, 1, 1, v46);
  char v54 = *(unsigned char *)(v0 + 129);
  sub_191B015B0(v0 + 136, v0 + 184, &qword_1EB44B528);
  char v53 = *(unsigned char *)(v0 + 152);
  uint64_t v48 = (uint64_t)v44 + v45[8];
  v47(v48, 1, 1, v46);
  id v49 = (uint64_t *)((char *)v44 + v45[11]);
  *id v49 = 0;
  v49[1] = 0;
  *id v44 = v72;
  v44[1] = v70;
  void v44[2] = v65;
  v44[3] = v64;
  sub_191CA8298(v52, (uint64_t)v44 + v45[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_191CA8298(v43, (uint64_t)v44 + v45[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_191B97F08(v0 + 184);
  sub_191B28FA4(v42, v48, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v44 + v45[9]) = v76;
  *((unsigned char *)v44 + v45[10]) = v54;
  sub_191B28FA4(v0 + 184, (uint64_t)v49, &qword_1EB44B528);
  *((unsigned char *)v44 + v45[12]) = v53;
  sub_191CA8298((uint64_t)v44, v56, type metadata accessor for ControlTemplateToggle);
  sub_191CA8320(v55, type metadata accessor for ControlTemplateToggle.Option);
  sub_191CA8320(v57, type metadata accessor for ControlTemplateToggle.Option);
  sub_191B01770(v58, qword_1EB4496F8);
  sub_191CA8320(v59, type metadata accessor for ExtractedControlMetadata);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v67, v63);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_191CA76D4()
{
  return swift_deallocObject();
}

uint64_t sub_191CA76E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void (*v103)(void *__return_ptr, void);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void v116[3];
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;

  uint64_t v110 = a8;
  uint64_t v109 = a7;
  uint64_t v89 = a6;
  uint64_t v92 = a5;
  uint64_t v112 = a4;
  LODWORD(v100) = a3;
  uint64_t v111 = a9;
  uint64_t v106 = a13;
  uint64_t v98 = a14;
  __int16 v104 = a11;
  long long v107 = type metadata accessor for ControlTemplateToggle.Option(0);
  MEMORY[0x1F4188790](v107);
  uint64_t v108 = (uint64_t *)((char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v96 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  objc_super v94 = (char *)&v88 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v93 = (char *)&v88 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v101 = (uint64_t)&v88 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v91 = (char *)&v88 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v114 = (uint64_t)&v88 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2338);
  MEMORY[0x1F4188790](v29 - 8);
  long long v99 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for ExtractedControlValueMetadata(0);
  uint64_t v31 = MEMORY[0x1F4188790](v113);
  uint64_t v115 = (uint64_t)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v88 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB449E28);
  uint64_t v36 = sub_191CF3BA8();
  uint64_t v97 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v88 - v37;
  uint64_t v39 = sub_191CF3BA8();
  uint64_t v105 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v88 - v40;
  int v90 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v42 = *(void (**)(uint64_t))(a2 + 48);
  uint64_t v103 = *(void (**)(void *__return_ptr, void))(a2 + 80);
  uint64_t v102 = *(void *)(a2 + 88);
  int v95 = a1;
  v42(a1);
  swift_getKeyPath();
  LOBYTE(v117) = 1;
  uint64_t v43 = v98;
  sub_191CF4BC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, a12);
  unint64_t v44 = sub_191B971C4();
  uint64_t v121 = v43;
  long long v122 = v44;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C9D210(v100, v36, WitnessTable);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v36);
  uint64_t v117 = v104;
  uint64_t v118 = a12;
  uint64_t v119 = v106;
  uint64_t v120 = v43;
  type metadata accessor for ControlWidgetToggleParser();
  swift_getWitnessTable();
  unint64_t v46 = sub_191B97220();
  v116[1] = WitnessTable;
  v116[2] = v46;
  uint64_t v47 = v115;
  uint64_t v48 = (uint64_t)v99;
  swift_getWitnessTable();
  __int16 v104 = v41;
  uint64_t v106 = v39;
  sub_191C9D244((uint64_t)v41, v112, v39, v47);
  sub_191CF4758();
  uint64_t v49 = sub_191CF47A8();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49) == 1)
  {
    sub_191B01770(v48, &qword_1E92E2338);
    uint64_t v100 = 0;
    long long v99 = 0;
  }
  else
  {
    id v51 = (void *)sub_191CF4798();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    id v52 = objc_msgSend(v51, sel_string);

    uint64_t v100 = sub_191CF5338();
    long long v99 = v53;
  }
  uint64_t v55 = v113;
  uint64_t v54 = v114;
  uint64_t v56 = (uint64_t)v94;
  uint64_t v57 = (uint64_t)v93;
  uint64_t v58 = v92;
  uint64_t v59 = (uint64_t)v91;
  sub_191CF4878();
  uint64_t v60 = v101;
  sub_191B98014(v58, v101);
  uint64_t v61 = sub_191CF4868();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1, v61);
  uint64_t v112 = v61;
  if (v64 == 1)
  {
    sub_191B015B0(v60, v54, qword_1EB4496F8);
    sub_191B01770(v59, qword_1EB4496F8);
  }
  else
  {
    sub_191B01770(v60, qword_1EB4496F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v54, v59, v61);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
  }
  char v65 = v90;
  uint64_t v66 = v55;
  if (*(unsigned char *)(v115 + *(int *)(v55 + 24)) == 1)
  {
    uint64_t v67 = (unsigned char *)(v89 + 16);
    swift_beginAccess();
    *uint64_t v67 = 1;
    uint64_t v66 = v113;
  }
  sub_191B98014(v54, v57);
  LODWORD(v113) = a10;
  if (v65)
  {
    sub_191B01770(v57, qword_1EB4496F8);
    v103(v116, v95 & 1);
    uint64_t v71 = v116[0];
  }
  else
  {
    sub_191B98014(v57, v56);
    uint64_t v68 = v112;
    int v69 = v63(v56, 1, v112);
    char v70 = v95;
    if (v69 == 1)
    {
      sub_191B01770(v57, qword_1EB4496F8);
      sub_191B01770(v56, qword_1EB4496F8);
      v103(v116, v70 & 1);
      uint64_t v71 = v116[0];
LABEL_15:
      uint64_t v102 = v71;
      int v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
      uint64_t v73 = v96;
      uint64_t v75 = v112;
      v74(v96, 1, 1, v112);
      goto LABEL_16;
    }
    char v72 = sub_191CF4858();
    sub_191B01770(v57, qword_1EB4496F8);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v68);
    v103(v116, v70 & 1);
    uint64_t v71 = v116[0];
    if ((v72 & 1) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v102 = v71;
  uint64_t v73 = v96;
  sub_191B98014(v54, v96);
  int v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  uint64_t v75 = v112;
LABEL_16:
  uint64_t v76 = v115 + *(int *)(v66 + 20);
  uint64_t v77 = *(void *)(v76 + 8);
  uint64_t v103 = *(void (**)(void *__return_ptr, void))v76;
  uint64_t v78 = *(void *)(v76 + 24);
  uint64_t v112 = *(void *)(v76 + 16);
  uint64_t v79 = (int *)v107;
  uint64_t v80 = v108;
  uint64_t v81 = (uint64_t)v108 + *(int *)(v107 + 24);
  v74(v81, 1, 1, v75);
  id v82 = (char *)v80 + v79[7];
  *(void *)id v82 = 0;
  *((void *)v82 + 1) = 0;
  v82[16] = 1;
  uint64_t v83 = (uint64_t *)((char *)v80 + v79[8]);
  void *v83 = 0;
  v83[1] = 0;
  uint64_t v84 = (uint64_t *)((char *)v80 + v79[9]);
  *uint64_t v84 = 0;
  v84[1] = 0;
  uint64_t v85 = v99;
  *uint64_t v80 = v100;
  v80[1] = (uint64_t)v85;
  v80[2] = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191B28FA4(v73, v81, qword_1EB4496F8);
  uint64_t v86 = v110;
  *(void *)id v82 = v109;
  *((void *)v82 + 1) = v86;
  v82[16] = v113 & 1;
  swift_bridgeObjectRelease();
  void *v83 = v103;
  v83[1] = v77;
  swift_bridgeObjectRelease();
  *uint64_t v84 = v112;
  v84[1] = v78;
  sub_191CA8298((uint64_t)v80, v111, type metadata accessor for ControlTemplateToggle.Option);
  sub_191B01770(v114, qword_1EB4496F8);
  sub_191CA8320(v115, type metadata accessor for ExtractedControlValueMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v104, v106);
}

uint64_t sub_191CA8234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191CA8298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ControlWidgetToggleParser()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CA8320(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191CA8380()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_191CA83D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191CA847C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191CA854C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t sub_191CA85E4(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191CA862C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_191CA8688@<X0>(uint64_t a1@<X8>)
{
  char v2 = *v1;
  uint64_t v3 = *((void *)v1 + 1);
  uint64_t v4 = *((void *)v1 + 6);
  *(void *)a1 = sub_191B8ADCC;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 41) = v2;
  *(void *)(a1 + 48) = v3;
  long long v5 = *((_OWORD *)v1 + 2);
  *(_OWORD *)(a1 + 56) = *((_OWORD *)v1 + 1);
  *(_OWORD *)(a1 + 72) = v5;
  *(void *)(a1 + 88) = v4;
  swift_retain();
  swift_retain();

  return swift_retain();
}

__n128 sub_191CA871C@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v9 = *(unsigned char *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 17);
  char v11 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(unsigned char *)(a9 + 16) = v9 & 1;
  *(unsigned char *)(a9 + 17) = v10 & 1;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a9 + 24) = result;
  *(unsigned char *)(a9 + 40) = v11 & 1;
  *(unsigned char *)(a9 + 41) = a2;
  *(void *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a7;
  *(void *)(a9 + 88) = a8;
  return result;
}

uint64_t ControlWidgetToggle.body.getter@<X0>(uint64_t a1@<X0>, long long *a2@<X8>)
{
  char v5 = *v2;
  uint64_t v6 = *((void *)v2 + 1);
  uint64_t v7 = *((void *)v2 + 6);
  *(void *)&v42[7] = 0;
  *(void *)&v42[3] = 0;
  char v43 = 0;
  long long v14 = *((_OWORD *)v2 + 1);
  swift_retain();
  long long v13 = *((_OWORD *)v2 + 2);
  swift_retain();
  swift_retain();
  *(void *)&long long v34 = sub_191B8ADCC;
  *((void *)&v34 + 1) = 0;
  __int16 v35 = 0;
  *(_OWORD *)uint64_t v36 = *(unint64_t *)v42;
  *(void *)&v36[15] = 0;
  char v37 = v5;
  long long v39 = v14;
  long long v40 = v13;
  uint64_t v38 = v6;
  uint64_t v41 = v7;
  long long v8 = *(_OWORD *)(a1 + 40);
  long long v25 = *(_OWORD *)(a1 + 16);
  long long v26 = v8;
  uint64_t v9 = type metadata accessor for ControlWidgetToggleTemplateProvider();
  swift_getWitnessTable();
  sub_191BE0F44((uint64_t)&v34, v9, (uint64_t)&v25);
  long long v15 = v25;
  __int16 v16 = v26;
  uint64_t v17 = *((void *)&v26 + 1);
  uint64_t v18 = v27;
  char v19 = v28;
  char v20 = v29;
  uint64_t v21 = v30;
  long long v22 = v31;
  long long v23 = v32;
  uint64_t v24 = v33;
  uint64_t v10 = type metadata accessor for TemplateDescriptorPreference();
  swift_getWitnessTable();
  char v11 = *(void (**)(long long *, long long *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(&v34, &v15, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v25 = v34;
  LOWORD(v26) = v35;
  *((void *)&v26 + 1) = *(void *)&v36[6];
  uint64_t v27 = *(void *)&v36[14];
  char v28 = v36[22];
  char v29 = v37;
  long long v31 = v39;
  long long v32 = v40;
  uint64_t v30 = v38;
  uint64_t v33 = v41;
  v11(a2, &v25, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ControlWidgetToggleTemplateProvider()
{
  return swift_getGenericMetadata();
}

uint64_t static ControlWidgetToggle._controlType.getter()
{
  return type metadata accessor for ControlWidgetToggle();
}

uint64_t type metadata accessor for ControlWidgetToggle()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CA8A70()
{
  return static ControlWidgetToggle._controlType.getter();
}

uint64_t ControlWidgetToggle.init<>(isOn:action:label:valueLabel:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, long long a11, uint64_t a12)
{
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  *(void *)(v19 + 32) = a10;
  *(_OWORD *)(v19 + 40) = a11;
  *(void *)(v19 + 56) = a12;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a2, a10);
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a5;
  *(void *)(a9 + 16) = a6;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = sub_191CA8CB0;
  *(void *)(a9 + 48) = v19;
  return result;
}

uint64_t sub_191CA8BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, void *a3@<X8>)
{
  char v4 = a1;
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  char v11 = v4;
  return ControlAction.init<A, B>(_:value:)((uint64_t)v7, (uint64_t)&v11, MEMORY[0x1E4FBB390], a2, a3);
}

uint64_t sub_191CA8CB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191CA8BC0(a1, *(void *)(v2 + 32), a2);
}

uint64_t ControlWidgetToggle.init<>(isOn:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v23 = a8;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  int v24 = a1;
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](a1);
  __int16 v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v16);
  unint64_t v17 = sub_191CA8EA4();
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a5;
  *((void *)v19 + 3) = &type metadata for ControlWidgetToggleDefaultLabel;
  *((void *)v19 + 4) = a6;
  *((void *)v19 + 5) = a7;
  uint64_t v20 = v23;
  *((void *)v19 + 6) = v17;
  *((void *)v19 + 7) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v16, a6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a2, a6);
  *(unsigned char *)a9 = v24;
  *(void *)(a9 + 8) = sub_191CA8E9C;
  *(void *)(a9 + 16) = 0;
  uint64_t v22 = v26;
  *(void *)(a9 + 24) = v25;
  *(void *)(a9 + 32) = v22;
  *(void *)(a9 + 40) = sub_191CA8CB0;
  *(void *)(a9 + 48) = v19;
  return result;
}

uint64_t sub_191CA8E9C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_191CA8EA4()
{
  unint64_t result = qword_1E92E5100[0];
  if (!qword_1E92E5100[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E5100);
  }
  return result;
}

double ControlWidgetToggleDefaultLabel.body.getter@<D0>(uint64_t a1@<X8>)
{
  if (*v1 == 1)
  {
    if (qword_1E92E2D10 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_1E92F25E8;
    uint64_t v4 = unk_1E92F25F0;
    char v5 = byte_1E92F25F8;
  }
  else
  {
    if (qword_1E92E2D18 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_1E92F2608;
    uint64_t v4 = unk_1E92F2610;
    char v5 = byte_1E92F2618;
  }
  sub_191BB4E38(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_191CF44D8();
  double result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_191CA9018()
{
  sub_191CF4358();
  type metadata accessor for WidgetKitSentinelClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t result = sub_191CF4B78();
  qword_1E92F25E8 = result;
  unk_1E92F25F0 = v3;
  byte_1E92F25F8 = v4 & 1;
  qword_1E92F2600 = v5;
  return result;
}

id static NSBundle.widgetKit.getter()
{
  type metadata accessor for WidgetKitSentinelClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);

  return v1;
}

uint64_t sub_191CA9164()
{
  sub_191CF4358();
  type metadata accessor for WidgetKitSentinelClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t result = sub_191CF4B78();
  qword_1E92F2608 = result;
  unk_1E92F2610 = v3;
  byte_1E92F2618 = v4 & 1;
  qword_1E92F2620 = v5;
  return result;
}

uint64_t type metadata accessor for WidgetKitSentinelClass()
{
  return self;
}

id sub_191CA92B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ControlWidgetToggle<>.init<>(_:isOn:action:valueLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  uint64_t v31 = a6;
  int v35 = a5;
  uint64_t v34 = a10;
  uint64_t v18 = *(void *)(a11 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v32 = a12;
  uint64_t v33 = a13;
  MEMORY[0x1F4188790](a1);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, a11);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(unsigned char *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  int v24 = (char *)swift_allocObject();
  uint64_t v25 = v34;
  *((void *)v24 + 2) = MEMORY[0x1E4F3E2F8];
  *((void *)v24 + 3) = v25;
  uint64_t v26 = MEMORY[0x1E4F3E2E8];
  *((void *)v24 + 4) = a11;
  *((void *)v24 + 5) = v26;
  uint64_t v27 = v33;
  *((void *)v24 + 6) = v32;
  *((void *)v24 + 7) = v27;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v24[v23], v20, a11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v31, a11);
  *(unsigned char *)a9 = v35;
  uint64_t v29 = v37;
  *(void *)(a9 + 8) = v36;
  *(void *)(a9 + 16) = v29;
  *(void *)(a9 + 24) = sub_191C89BDC;
  *(void *)(a9 + 32) = v22;
  *(void *)(a9 + 40) = sub_191CA8CB0;
  *(void *)(a9 + 48) = v24;
  return result;
}

uint64_t sub_191CA94D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t ControlWidgetToggle<>.init<A>(_:isOn:action:valueLabel:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v40 = a6;
  uint64_t v41 = a1;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v42 = a3;
  int v43 = a2;
  uint64_t v39 = a12;
  uint64_t v16 = *(void *)(a8 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v37 = a11;
  uint64_t v46 = a10;
  uint64_t v18 = MEMORY[0x1F4188790](a1);
  uint64_t v19 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v18);
  uint64_t v38 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v21 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, a8);
  unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int v24 = (char *)swift_allocObject();
  uint64_t v25 = v40;
  *((void *)v24 + 2) = v40;
  *((void *)v24 + 3) = a7;
  uint64_t v26 = a8;
  uint64_t v36 = a8;
  uint64_t v27 = v46;
  *((void *)v24 + 4) = a8;
  *((void *)v24 + 5) = v27;
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  *((void *)v24 + 6) = v37;
  *((void *)v24 + 7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v24[v23], v19, v26);
  unint64_t v30 = (*(unsigned __int8 *)(v21 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = MEMORY[0x1E4F3E2F8];
  *((void *)v31 + 3) = v25;
  uint64_t v32 = MEMORY[0x1E4F3E2E8];
  *((void *)v31 + 4) = a7;
  *((void *)v31 + 5) = v32;
  *((void *)v31 + 6) = v46;
  *((void *)v31 + 7) = v28;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v31[v30], v38, a7);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v42, a7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v41, v36);
  *(unsigned char *)a9 = v43;
  uint64_t v34 = v45;
  *(void *)(a9 + 8) = v44;
  *(void *)(a9 + 16) = v34;
  *(void *)(a9 + 24) = sub_191CA98C0;
  *(void *)(a9 + 32) = v24;
  *(void *)(a9 + 40) = sub_191CA8CB0;
  *(void *)(a9 + 48) = v31;
  return result;
}

uint64_t sub_191CA97E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_191CF4B88();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_191CA98C0@<X0>(uint64_t a1@<X8>)
{
  return sub_191CA97E0(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80)), a1);
}

uint64_t sub_191CA9908()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CA9954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CA9970()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_191CA99B4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191CA9A20(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191CA9AA0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_191CA9B00(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191CA9B48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ControlWidgetToggleDefaultLabel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CA9C60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlWidgetToggleDefaultLabel()
{
  return &type metadata for ControlWidgetToggleDefaultLabel;
}

uint64_t sub_191CA9C98()
{
  return swift_getWitnessTable();
}

unint64_t sub_191CA9D24()
{
  unint64_t result = qword_1E92E5188;
  if (!qword_1E92E5188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1E92E5190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5188);
  }
  return result;
}

uint64_t sub_191CA9D90()
{
  return sub_191BE854C(*(uint64_t (**)(uint64_t))(v1 + 8), v1, *(unsigned char *)(v0 + 41) & 1);
}

uint64_t sub_191CA9DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  sub_191CF5698();
  v4[22] = sub_191CF5688();
  uint64_t v6 = sub_191CF5648();
  v4[23] = v6;
  v4[24] = v5;
  return MEMORY[0x1F4188298](sub_191CA9E6C, v6, v5);
}

uint64_t sub_191CA9E6C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  sub_191CA6CE4(v2, (uint64_t)(v0 + 2));
  sub_191CAA56C(v2);
  char v7 = (void *)swift_task_alloc();
  v0[25] = v7;
  v0[14] = v3;
  v0[15] = v4;
  v0[16] = v5;
  v0[17] = v6;
  uint64_t v8 = type metadata accessor for ControlWidgetToggleParser();
  *char v7 = v0;
  v7[1] = sub_191CA9F60;
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[19];
  return sub_191CA6D38(v9, v10, v8);
}

uint64_t sub_191CA9F60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_191CAA0E0;
  }
  else
  {
    sub_191CAA5D8(v2 + 16);
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_191CAA07C;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_191CAA07C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191CAA0E0()
{
  sub_191CAA5D8(v0 + 16);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191CAA150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 17);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  swift_retain();

  return swift_bridgeObjectRetain();
}

__n128 sub_191CAA1AC(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 25);
  *(__n128 *)(v1 + 25) = result;
  return result;
}

uint64_t sub_191CAA1EC()
{
  long long v2 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v2;
  long long v3 = v0[5];
  *(_OWORD *)(v1 + 80) = v0[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v5;
  void *v5 = v1;
  v5[1] = sub_191CAA2A0;
  uint64_t v6 = *(unsigned char *)(v1 + 57) & 1;
  return sub_191CAA2A0(v6);
}

uint64_t sub_191CAA2A0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_191CAA3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v8 = v3[3];
  *(_OWORD *)(v4 + 48) = v3[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = v3[5];
  *(_OWORD *)(v4 + 80) = v3[4];
  *(_OWORD *)(v4 + 96) = v9;
  long long v10 = v3[1];
  *(_OWORD *)(v4 + 16) = *v3;
  *(_OWORD *)(v4 + 32) = v10;
  char v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 112) = v11;
  void *v11 = v4;
  v11[1] = sub_191CAA478;
  return sub_191CA9DD0(a1, a2, a3);
}

uint64_t sub_191CAA478()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191CAA56C(uint64_t a1)
{
  return a1;
}

uint64_t sub_191CAA5D8(uint64_t a1)
{
  return a1;
}

uint64_t IntentRecommendation.init<A>(intent:description:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = a1;
  uint64_t v10 = sub_191CF4B88();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v15 = sub_191BDB080();
  uint64_t v17 = v16;
  sub_191B5D42C(v10, v12, v14);

  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v20, a3);
  *a4 = v9;
  a4[1] = v15;
  a4[2] = v17;
  return result;
}

uint64_t IntentConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v20 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v6);
  uint64_t v21 = (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v2[2];
  long long v9 = *v2;
  long long v27 = v2[1];
  long long v28 = v8;
  long long v26 = v9;
  long long v10 = v27;
  long long v11 = v8;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(v12 + 32) = *(void *)(a1 + 32);
  long long v13 = v2[1];
  *(_OWORD *)(v12 + 40) = *v2;
  *(_OWORD *)(v12 + 56) = v13;
  *(_OWORD *)(v12 + 72) = v2[2];
  long long v14 = v26;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v14;
  *(_OWORD *)uint64_t v5 = v10;
  *((_OWORD *)v5 + 1) = v11;
  *((void *)v5 + 4) = sub_191CAAC38;
  *((void *)v5 + 5) = v12;
  *((void *)v5 + 6) = sub_191CAAC80;
  *((void *)v5 + 7) = v15;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_191B5D1E0((uint64_t)&v26);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v16 = v21;
  sub_191C92C0C((uint64_t)v5, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  unint64_t v17 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_191CF8410;
  sub_191B643F0(v16, v18 + v17, type metadata accessor for WidgetDescriptor);
  uint64_t v25 = v18;
  sub_191B5D22C();
  sub_191CF4418();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_191B5D280(v16);
}

uint64_t sub_191CAAA94@<X0>(void (*a1)(void *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  a1(v8);
  long long v7 = v9;
  uint64_t v3 = v9;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v8, v9);
  *(_OWORD *)(a2 + 24) = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v4, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t IntentRecommendation.init(intent:description:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  id v9 = a1;
  uint64_t v10 = sub_191BDB080();
  uint64_t v12 = v11;
  sub_191B5D42C(a2, a3, a4 & 1);

  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v9;
  a5[1] = v10;
  a5[2] = v12;
  return result;
}

uint64_t sub_191CAABF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191CAAC38()
{
  return sub_191B5D028((void (**)(void *__return_ptr))(v0 + 40));
}

uint64_t sub_191CAAC48()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CAAC80@<X0>(uint64_t a1@<X8>)
{
  return sub_191CAAA94(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t IntentRecommendation.init(intent:description:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  uint64_t v4 = sub_191CF4B78();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_191BDB080();
  uint64_t v11 = v10;

  sub_191B5D42C(v4, v6, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v9;
  a2[2] = v11;
  return result;
}

uint64_t IntentConfiguration.init<A>(kind:intent:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t (**a7)@<X0>(char **a1@<X8>)@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = sub_191B984B8(a5, a1);
  long long v13 = v12;
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  uint64_t v18 = *(void *)(a8 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v20 = (*(void *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a5;
  *((void *)v21 + 3) = a6;
  *((void *)v21 + 4) = a8;
  *((void *)v21 + 5) = a9;
  *((void *)v21 + 6) = a10;
  *((void *)v21 + 7) = v24;
  *((void *)v21 + 8) = v13;
  *((void *)v21 + 9) = v15;
  *((void *)v21 + 10) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v21[v19], a2, a8);
  uint64_t v22 = &v21[v20];
  *(void *)uint64_t v22 = a3;
  *((void *)v22 + 1) = a4;
  *a7 = sub_191CAB154;
  a7[1] = (uint64_t (*)@<X0>(char **@<X8>))v21;
  a7[2] = (uint64_t (*)@<X0>(char **@<X8>))v24;
  a7[3] = v13;
  a7[4] = v15;
  a7[5] = v17;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_191CAAEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char **a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v16 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a10;
  uint64_t v28 = v19;
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  uint64_t v22 = type metadata accessor for IntentTimelineEntryProvider();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, a10);
  uint64_t v23 = sub_191B5E734(a1, a2, v25, a4, (uint64_t)v18, v26, a7);
  a8[3] = (char *)v22;
  a8[4] = (char *)swift_getWitnessTable();
  a8[5] = (char *)&off_1EE2A2490;
  *a8 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_191CAB068()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CAB154@<X0>(char **a1@<X8>)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  unint64_t v3 = (uint64_t *)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_191CAAEF8(v1[7], v1[8], v1[9], v1[10], (uint64_t)v1 + v2, *v3, v3[1], a1, v1[3], v1[4]);
}

uint64_t sub_191CAB1F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for IntentConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191CAB258(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191CAB270(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *sub_191CAB2AC(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191CAB2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191CAB350(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for IntentRecommendation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191CAB3B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_191CAB45C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 80);
  v10[7] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
  v10[2] = v3;
  v10[3] = *(void *)(v1 + 88);
  v10[4] = v2;
  v10[5] = *(void *)(v1 + 104);
  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentRecommendation();
  uint64_t v4 = sub_191CF5618();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449550);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_191B55D64((void (*)(char *, char *))sub_191CB0220, (uint64_t)v10, v4, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_191CAB5E8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_191B64828();
  id v4 = v3;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  uint64_t v6 = sub_191CF4B88();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_191BDB080();
  uint64_t v13 = v12;
  sub_191B5D42C(v6, v8, v10);
  swift_bridgeObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v11;
  a2[2] = v13;
  return result;
}

uint64_t sub_191CAB6E8(void *a1, uint64_t a2)
{
  id v33 = a1;
  id v4 = *(void **)v2;
  uint64_t v36 = type metadata accessor for TimelineReloadPolicy();
  uint64_t v5 = MEMORY[0x1F4188790](v36);
  uint64_t v37 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v4[11];
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v32 - v8;
  uint64_t v10 = v4[12];
  uint64_t v11 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v14 = (char *)&v32 - v13;
  uint64_t v16 = *(void *)(a2 + 24);
  __int16 v17 = *(_WORD *)(a2 + 32);
  char v18 = *(unsigned char *)(a2 + 34);
  char v19 = *(unsigned char *)(a2 + 56);
  uint64_t v38 = *(void **)a2;
  uint64_t v15 = v38;
  long long v39 = *(_OWORD *)(a2 + 8);
  uint64_t v40 = v16;
  __int16 v41 = v17;
  char v42 = v18;
  long long v43 = *(_OWORD *)(a2 + 40);
  char v44 = v19;
  (*(void (**)(void **, uint64_t, uint64_t))(v10 + 40))(&v38, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v20 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
  (*(void (**)(char *))(v2 + *(void *)(*(void *)v2 + 128)))(v14);
  uint64_t v23 = v32;
  double v24 = sub_191CE2A38((uint64_t)v9, v32, v22 + v21);
  (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v23, v24);
  uint64_t v38 = v15;
  uint64_t v25 = qword_1EB44B1C0;
  id v26 = v33;
  id v27 = v15;
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB44B1D8);
  uint64_t v29 = v37;
  sub_191B643F0(v28, v37, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  uint64_t v30 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, (uint64_t *)&v38, (void *)v22, v29, 1);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
  return v30;
}

uint64_t sub_191CABAE8(void *a1, _OWORD *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v7 = sub_191CF5168();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF51C8();
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a2[1];
  v38[0] = *a2;
  v38[1] = v13;
  v39[0] = a2[2];
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)a2 + 41);
  id v14 = objc_msgSend(a1, sel_intentReference);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel__typedIntent);

    if (v16)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v17 = swift_dynamicCastUnknownClass();
      if (v17)
      {
        uint64_t v18 = v17;
        sub_191BBE468();
        uint64_t v32 = sub_191CF5A18();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v4;
        *(void *)(v19 + 24) = v18;
        long long v20 = a2[1];
        *(_OWORD *)(v19 + 32) = *a2;
        *(_OWORD *)(v19 + 48) = v20;
        *(_OWORD *)(v19 + 64) = a2[2];
        *(_OWORD *)(v19 + 73) = *(_OWORD *)((char *)a2 + 41);
        uint64_t v21 = v36;
        *(void *)(v19 + 96) = v35;
        *(void *)(v19 + 104) = v21;
        *(void *)(v19 + 112) = a1;
        aBlock[4] = (uint64_t)sub_191CAFFF0;
        void aBlock[5] = v19;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_191C2AD74;
        aBlock[3] = (uint64_t)&block_descriptor_10;
        uint64_t v22 = _Block_copy(aBlock);
        swift_retain();
        id v23 = v16;
        sub_191B64458((void **)v38);
        swift_retain();
        id v24 = a1;
        swift_release();
        sub_191CF5188();
        aBlock[0] = MEMORY[0x1E4FBC860];
        sub_191C2B09C();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
        sub_191C2B0F4();
        sub_191CF5C98();
        uint64_t v25 = (void *)v32;
        MEMORY[0x192FE4790](0, v12, v9, v22);
        _Block_release(v22);

        (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v10);
      }
    }
  }
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_191CF3858();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EB44CCE0);
  uint64_t v28 = sub_191CF3838();
  os_log_type_t v29 = sub_191CF5928();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    void aBlock[6] = sub_191C5C36C(0xD00000000000001ELL, 0x8000000191D12740, aBlock);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v28, v29, "No intent in %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v31, -1, -1);
    MEMORY[0x192FE5F00](v30, -1, -1);
  }

  return v35(0);
}

uint64_t sub_191CABFCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *a1;
  long long v12 = *(_OWORD *)(a3 + 16);
  v20[0] = *(_OWORD *)a3;
  v20[1] = v12;
  v21[0] = *(_OWORD *)(a3 + 32);
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)(a3 + 41);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a4;
  *(void *)(v13 + 32) = a5;
  *(void *)(v13 + 40) = a6;
  long long v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v13 + 89) = *(_OWORD *)(a3 + 41);
  uint64_t v15 = *(void *)(v11 + 96);
  id v16 = *(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, void, uint64_t))(v15 + 48);
  swift_retain();
  swift_retain();
  id v17 = a6;
  sub_191B64458((void **)a3);
  v16(a2, v20, sub_191CB0008, v13, *(void *)(v11 + 80), v15);

  return swift_release();
}

uint64_t sub_191CAC124(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  long long v43 = a5;
  uint64_t v44 = a6;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v8 = *a2;
  uint64_t v47 = sub_191CF5168();
  uint64_t v50 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF51C8();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v45 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v8;
  uint64_t v38 = *(void *)(v8 + 96);
  uint64_t v37 = *(void *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v16 = (char *)&v36 - v15;
  sub_191BBE468();
  uint64_t v42 = sub_191CF5A18();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, AssociatedTypeWitness);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v39;
  *((void *)v21 + 2) = v37;
  *((void *)v21 + 3) = *(void *)(v22 + 88);
  *((void *)v21 + 4) = v38;
  *((void *)v21 + 5) = *(void *)(v22 + 104);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[v17], v16, AssociatedTypeWitness);
  *(void *)&v21[v18] = a2;
  id v23 = &v21[v19];
  uint64_t v24 = v41;
  *(void *)id v23 = v40;
  *((void *)v23 + 1) = v24;
  id v26 = v43;
  uint64_t v25 = v44;
  *(void *)&v21[v20] = v43;
  uint64_t v27 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v28 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v25;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v27 + 41) = *(_OWORD *)(v25 + 41);
  aBlock[4] = sub_191CB0154;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_49;
  os_log_type_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v30 = v26;
  sub_191B64458((void **)v25);
  swift_release();
  uint64_t v31 = v45;
  sub_191CF5188();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191C2B09C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191C2B0F4();
  uint64_t v33 = v46;
  uint64_t v32 = v47;
  sub_191CF5C98();
  uint64_t v34 = (void *)v42;
  MEMORY[0x192FE4790](0, v31, v33, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v31, v49);
}

uint64_t sub_191CAC578(uint64_t a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void *a5, void **a6)
{
  uint64_t v35 = a6;
  id v36 = a5;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v31 = a1;
  uint64_t v7 = *a2;
  uint64_t v37 = type metadata accessor for TimelineReloadPolicy();
  uint64_t v8 = MEMORY[0x1F4188790](v37);
  uint64_t v38 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = *(void *)(v7 + 88);
  MEMORY[0x1F4188790](v8);
  v30[0] = (char *)v30 - v10;
  uint64_t v11 = sub_191CF3178();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v14 = (int *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_191CF8410;
  uint64_t v34 = (void *)v16;
  unint64_t v17 = v16 + v15;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v19 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v20 = swift_checkMetadataState();
  uint64_t v21 = v31;
  v19(v20, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(void *)(*a2 + 128)))(v21);
  uint64_t v22 = sub_191CF5038();
  unint64_t v23 = v17 + v14[9];
  uint64_t v24 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v17, v13, v33);
  *(void *)(v17 + v14[7]) = v22;
  unint64_t v25 = v17 + v14[8];
  *(void *)unint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 1;
  *(_OWORD *)(v17 + v14[10]) = xmmword_191CF8430;
  uint64_t v41 = *v35;
  id v42 = v41;
  id v26 = v36;
  sub_191B6B980(&v42);
  if (qword_1EB44B1C0 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB44B1D8);
  uint64_t v28 = v38;
  sub_191B643F0(v27, v38, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, (uint64_t *)&v41, v34, v28, 1);
  v40();
  return swift_release();
}

uint64_t sub_191CAC9C0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  id v36 = a4;
  uint64_t v37 = a1;
  uint64_t v34 = *v6;
  uint64_t v35 = v34;
  uint64_t v8 = *(void *)(v34 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v32 - v11;
  long long v14 = v13[1];
  long long v40 = *v13;
  long long v41 = v14;
  v42[0] = v13[2];
  *(_OWORD *)((char *)v42 + 9) = *(long long *)((char *)v13 + 41);
  (*(void (**)(char *))(v9 + 16))((char *)&v32 - v11);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  uint64_t v21 = v34;
  uint64_t v20 = v35;
  *(void *)(v19 + 16) = v8;
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 88);
  *(void *)(v19 + 40) = *(void *)(v21 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v15, v12, v8);
  uint64_t v22 = v36;
  *(void *)(v19 + v16) = v36;
  unint64_t v23 = (_OWORD *)(v19 + v33);
  *(_OWORD *)((char *)v23 + 41) = *(_OWORD *)((char *)v42 + 9);
  long long v24 = v42[0];
  long long v25 = v40;
  v23[1] = v41;
  v23[2] = v24;
  *unint64_t v23 = v25;
  *(void *)(v19 + v17) = v7;
  id v26 = (void *)(v19 + v18);
  uint64_t v27 = v39;
  void *v26 = v38;
  v26[1] = v27;
  uint64_t v28 = v37;
  *(void *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8)) = v37;
  id v29 = v22;
  sub_191B64458((void **)&v40);
  swift_retain();
  swift_retain();
  id v30 = v28;
  sub_191C2ADB8((uint64_t)sub_191CAFBB8, v19);
  return swift_release();
}

uint64_t sub_191CACC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13 = *a4;
  long long v14 = *(_OWORD *)(a3 + 16);
  v21[0] = *(_OWORD *)a3;
  v21[1] = v14;
  v22[0] = *(_OWORD *)(a3 + 32);
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)(a3 + 41);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  *(void *)(v15 + 32) = a6;
  *(void *)(v15 + 40) = a7;
  long long v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v15 + 89) = *(_OWORD *)(a3 + 41);
  uint64_t v17 = *(void *)(v13 + 96);
  unint64_t v18 = *(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, void, uint64_t))(v17 + 56);
  swift_retain();
  swift_retain();
  id v19 = a7;
  sub_191B64458((void **)a3);
  v18(a2, v21, sub_191CAFC58, v15, *(void *)(v13 + 80), v17);

  return swift_release();
}

uint64_t sub_191CACD50(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  unint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = *a2;
  uint64_t v29 = *(void *)(v30 + 96);
  uint64_t v28 = *(void *)(v30 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for Timeline();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v27 - v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v30;
  *((void *)v17 + 2) = v28;
  *((void *)v17 + 3) = *(void *)(v18 + 88);
  *((void *)v17 + 4) = v29;
  *((void *)v17 + 5) = *(void *)(v18 + 104);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v13], v12, v8);
  *(void *)&v17[v14] = a2;
  id v19 = &v17[v15];
  uint64_t v20 = v32;
  *(void *)id v19 = v31;
  *((void *)v19 + 1) = v20;
  uint64_t v22 = v33;
  uint64_t v21 = v34;
  *(void *)&v17[v16] = v33;
  unint64_t v23 = &v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v24 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)unint64_t v23 = *(_OWORD *)v21;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v23 + 41) = *(_OWORD *)(v21 + 41);
  swift_retain();
  swift_retain();
  id v25 = v22;
  sub_191B64458((void **)v21);
  sub_191C2ADB8((uint64_t)sub_191CAFE60, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_191CACFDC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, id *a6)
{
  id v26 = a6;
  id v27 = a5;
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for Timeline();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (uint64_t *)((char *)&v25 - v15);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  uint64_t v21 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v16, (uint64_t)sub_191CAF7C4, a2, v21, AssociatedTypeWitness, (uint64_t)&protocol witness table for ViewableTimelineEntry, AssociatedConformanceWitness, v20);
  uint64_t v31 = (uint64_t)*v26;
  uint64_t v30 = v31;
  uint64_t v22 = (void *)*v20;
  sub_191B643F0((uint64_t)v20 + *(int *)(v18 + 44), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v23 = v27;
  sub_191B6B980((id *)&v31);
  swift_bridgeObjectRetain();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v23, &v30, v22, (uint64_t)v10, 1);
  v29();
  swift_release();
  return sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44A2F0);
}

void sub_191CAD2BC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  char v24 = *(unsigned char *)(a2 + 34);
  char v25 = *(unsigned char *)(a2 + 33);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  char v23 = *(unsigned char *)(a2 + 56);
  id v13 = objc_msgSend(a1, sel_intentReference);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v13, sel__typedIntent);

    if (v15)
    {
      swift_getAssociatedTypeWitness();
      unint64_t v16 = (void *)swift_dynamicCastUnknownClass();
      if (v16)
      {
        uint64_t v17 = v4 + *(void *)(*(void *)v4 + 120);
        v28[0] = v6;
        v28[1] = v7;
        v28[2] = v9;
        v28[3] = v8;
        char v29 = v10;
        char v30 = v25;
        char v31 = v24;
        uint64_t v32 = v11;
        uint64_t v33 = v12;
        char v34 = v23;
        sub_191CAC9C0(a1, v17, (uint64_t)v28, v16, (uint64_t)a3, a4);

        return;
      }
    }
  }
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_191CF3858();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB44CCE0);
  uint64_t v19 = sub_191CF3838();
  os_log_type_t v20 = sub_191CF5928();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v28[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v35 = sub_191C5C36C(0xD00000000000001ELL, 0x8000000191D12720, v28);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v19, v20, "No intent in %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v22, -1, -1);
    MEMORY[0x192FE5F00](v21, -1, -1);
  }

  a3(0);
}

uint64_t sub_191CAD578(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v39 = a7;
  uint64_t v40 = a4;
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  id v37 = a1;
  uint64_t v12 = (void *)*v7;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](a1);
  id v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v17;
  long long v18 = a2[1];
  long long v41 = *a2;
  long long v42 = v18;
  v43[0] = a2[2];
  *(_OWORD *)((char *)v43 + 9) = *(long long *)((char *)a2 + 41);
  uint64_t v19 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_191CF5698();
  swift_retain();
  id v37 = v37;
  sub_191B64458((void **)&v41);
  swift_retain();
  uint64_t v20 = sub_191CF5688();
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v24 = (char *)swift_allocObject();
  uint64_t v25 = MEMORY[0x1E4FBCFD8];
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v12[10];
  uint64_t v26 = v34;
  *((void *)v24 + 5) = v12[11];
  *((void *)v24 + 6) = v26;
  *((void *)v24 + 7) = v12[12];
  *((void *)v24 + 8) = v12[13];
  *((void *)v24 + 9) = v39;
  (*(void (**)(char *, char *))(v13 + 32))(&v24[v21], v36);
  *(void *)&v24[v22] = v8;
  uint64_t v27 = (uint64_t)v38;
  *(void *)&v24[v23] = v37;
  uint64_t v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v29 = v42;
  *(_OWORD *)uint64_t v28 = v41;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v43[0];
  *(_OWORD *)(v28 + 41) = *(_OWORD *)((char *)v43 + 9);
  char v30 = &v24[(v23 + 79) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v31 = v35;
  *(void *)char v30 = v40;
  *((void *)v30 + 1) = v31;
  sub_191BC2CF8(v27, (uint64_t)&unk_1E92E5268, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_191CAD880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[59] = v13;
  v8[60] = v14;
  v8[57] = a7;
  v8[58] = a8;
  v8[55] = a5;
  v8[56] = a6;
  v8[54] = a4;
  v8[61] = *a5;
  v8[62] = *(void *)(v14 - 8);
  v8[63] = swift_task_alloc();
  v8[64] = swift_task_alloc();
  sub_191CF5698();
  v8[65] = sub_191CF5688();
  uint64_t v10 = sub_191CF5648();
  v8[66] = v10;
  v8[67] = v9;
  return MEMORY[0x1F4188298](sub_191CAD9B8, v10, v9);
}

uint64_t sub_191CAD9B8()
{
  uint64_t v1 = *(void (**)(void, void, void))(*(void *)(v0 + 496) + 16);
  v1(*(void *)(v0 + 512), *(void *)(v0 + 432), *(void *)(v0 + 480));
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(long long **)(v0 + 456);
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 368);
    *(void *)(v0 + 544) = v4;
    char v5 = *(unsigned char *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 384);
    uint64_t v7 = *(void *)(v0 + 392);
    *(void *)(v0 + 552) = v7;
    long long v9 = v2[1];
    long long v8 = v2[2];
    long long v10 = *v2;
    *(_OWORD *)(v0 + 233) = *(long long *)((char *)v2 + 41);
    *(_OWORD *)(v0 + 208) = v9;
    *(_OWORD *)(v0 + 224) = v8;
    *(_OWORD *)(v0 + 192) = v10;
    *(void *)(v0 + 320) = v3;
    *(void *)(v0 + 328) = v4;
    *(unsigned char *)(v0 + 336) = v5;
    *(void *)(v0 + 344) = v6;
    *(void *)(v0 + 352) = v7;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v11;
    void *v11 = v0;
    v11[1] = sub_191B618D4;
    uint64_t v12 = *(void *)(v0 + 448);
    return sub_191CADCF4(v12, (uint64_t *)(v0 + 192), v0 + 320);
  }
  else
  {
    uint64_t v14 = (_OWORD *)(v0 + 104);
    v1(*(void *)(v0 + 504), *(void *)(v0 + 432), *(void *)(v0 + 480));
    if (swift_dynamicCast())
    {
      uint64_t v15 = *(long long **)(v0 + 456);
      long long v16 = *(_OWORD *)(v0 + 152);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
      *(_OWORD *)(v0 + 64) = v16;
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
      *(void *)(v0 + 96) = *(void *)(v0 + 184);
      long long v17 = *(_OWORD *)(v0 + 120);
      *(_OWORD *)(v0 + 16) = *v14;
      *(_OWORD *)(v0 + 32) = v17;
      long long v19 = v15[1];
      long long v18 = v15[2];
      long long v20 = *v15;
      *(_OWORD *)(v0 + 297) = *(long long *)((char *)v15 + 41);
      *(_OWORD *)(v0 + 272) = v19;
      *(_OWORD *)(v0 + 288) = v18;
      *(_OWORD *)(v0 + 256) = v20;
      unint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v21;
      void *v21 = v0;
      v21[1] = sub_191B61AC4;
      uint64_t v22 = *(void *)(v0 + 448);
      return sub_191CAE6C8(v22, (_OWORD *)(v0 + 256), v0 + 16);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 488);
      *uint64_t v14 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(void *)(v0 + 184) = 0;
      swift_release();
      sub_191B01770(v0 + 104, qword_1E92E3690);
      long long v24 = *(_OWORD *)(v23 + 96);
      *(_OWORD *)(v0 + 400) = *(_OWORD *)(v23 + 80);
      *(_OWORD *)(v0 + 416) = v24;
      type metadata accessor for IntentTimelineEntryProvider.Errors();
      swift_getWitnessTable();
      uint64_t v25 = (void *)swift_allocError();
      swift_willThrow();
      uint64_t v26 = *(void (**)(void *, uint64_t))(v0 + 464);
      id v27 = v25;
      v26(v25, 1);

      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
      return v28();
    }
  }
}

uint64_t sub_191CADCF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  *(void *)(v4 + 88) = swift_task_alloc();
  *(void *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 120) = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for Timeline();
  *(void *)(v4 + 128) = v7;
  *(void *)(v4 + 136) = *(void *)(v7 - 8);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a2;
  *(void *)(v4 + 152) = v8;
  *(void *)(v4 + 160) = v9;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 256) = *(unsigned char *)(a3 + 16);
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(a3 + 24);
  sub_191CF5698();
  *(void *)(v4 + 200) = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  *(void *)(v4 + 208) = v11;
  *(void *)(v4 + 216) = v10;
  return MEMORY[0x1F4188298](sub_191CADF10, v11, v10);
}

uint64_t sub_191CADF10()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  *(void *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  uint64_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview entries request being handled by IntentConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  char v5 = *(unsigned char *)(v0 + 256);
  long long v10 = *(_OWORD *)(v0 + 168);
  long long v11 = *(_OWORD *)(v0 + 184);

  *(_OWORD *)(v0 + 16) = v10;
  *(unsigned char *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v11;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_191CAE090;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(v7, v7, v8);
}

uint64_t sub_191CAE090(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[30] = a1;
  v3[31] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[26];
  uint64_t v5 = v3[27];
  if (v1) {
    uint64_t v6 = sub_191B625F4;
  }
  else {
    uint64_t v6 = sub_191CAE1A4;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191CAE1A4()
{
  uint64_t v29 = v0;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[30];
    uint64_t v4 = v0[14];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[7] = MEMORY[0x192FE4350](v3, v4);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v1, v2, "IntentConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1EB44B1C0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)v0[19];
  uint64_t v25 = (void *)v0[20];
  uint64_t v7 = v0[17];
  uint64_t v8 = (void *)v0[18];
  uint64_t v27 = v7;
  uint64_t v10 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[11];
  uint64_t v24 = v0[10];
  uint64_t v22 = v0[30];
  uint64_t v23 = v0[9];
  uint64_t v26 = (void *)v0[8];
  uint64_t v14 = __swift_project_value_buffer(v0[12], (uint64_t)qword_1EB44B1D8);
  sub_191B643F0(v14, v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v22, v11, v6);
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v8, v6, v9);
  uint64_t v15 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v8, (uint64_t)sub_191CAF7C4, v23, v15, v12, (uint64_t)&protocol witness table for ViewableTimelineEntry, v10, v13);
  uint64_t v28 = v25;
  long long v16 = (void *)*v13;
  sub_191B643F0((uint64_t)v13 + *(int *)(v24 + 36), v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v17 = v26;
  id v18 = v25;
  swift_bridgeObjectRetain();
  uint64_t v19 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v17, (uint64_t *)&v28, v16, v11, 0);
  sub_191B01770((uint64_t)v13, (uint64_t *)&unk_1EB44A2F0);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v6, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

double sub_191CAE4D4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v5 = *a2;
  uint64_t v14 = *(void *)(*a2 + 88);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(void *)(*a2 + 128)))(a1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_191CE26B8((uint64_t)v10, (uint64_t)v7, AssociatedTypeWitness, v14, AssociatedConformanceWitness, *(void *)(v5 + 104), v15);
}

uint64_t sub_191CAE6C8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v4 + 96) = a3;
  *(void *)(v4 + 104) = v3;
  *(void *)(v4 + 88) = a1;
  uint64_t v6 = *v3;
  *(void *)(v4 + 112) = *v3;
  uint64_t v7 = *(void *)(v6 + 80);
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = *(void *)(v7 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  long long v8 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = a2[2];
  *(_OWORD *)(v4 + 57) = *(_OWORD *)((char *)a2 + 41);
  *(void *)(v4 + 144) = sub_191CF5698();
  *(void *)(v4 + 152) = sub_191CF5688();
  uint64_t v10 = sub_191CF5648();
  *(void *)(v4 + 160) = v10;
  *(void *)(v4 + 168) = v9;
  return MEMORY[0x1F4188298](sub_191CAE818, v10, v9);
}

uint64_t sub_191CAE818()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  os_log_type_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview provider request being handled by IntentConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[15];

  uint64_t v7 = TimelineProviderPreviewSource.unwrapContent<A>(for:)(v5, v6, v6);
  v0[22] = v7;
  uint64_t v8 = v7;
  uint64_t v9 = v0[17];
  uint64_t v10 = v0[13];
  uint64_t v11 = v0[11];
  uint64_t v12 = sub_191CF5688();
  v0[23] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[24] = v13;
  void v13[2] = v10;
  v13[3] = v11;
  v13[4] = v9;
  v13[5] = v0 + 2;
  v13[6] = v8;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[25] = v14;
  uint64_t v15 = type metadata accessor for WidgetViewCollection();
  *uint64_t v14 = v0;
  v14[1] = sub_191CAEA90;
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F41880D8](v0 + 10, v12, v16, 0xD000000000000029, 0x8000000191D0E4B0, sub_191CAF720, v13, v15);
}

uint64_t sub_191CAEA90()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x1F4188298](sub_191CAEBF0, v3, v2);
}

uint64_t sub_191CAEBF0()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_191CAEC98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v17 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E37E0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_191CAC9C0(a3, a4, a5, v17, (uint64_t)sub_191B6B298, v14);
  return swift_release();
}

uint64_t sub_191CAEE04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_191CF5698();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_191CF5688();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_191BC2CF8((uint64_t)v8, (uint64_t)&unk_1E92E5258, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_191CAEF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a5;
  v6[3] = a6;
  v6[4] = sub_191CF5698();
  void v6[5] = sub_191CF5688();
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_191B63060;
  return sub_191CAEFE8();
}

uint64_t sub_191CAEFE8()
{
  uint64_t v2 = *v0;
  v1[7] = sub_191CF5698();
  v1[8] = sub_191CF5688();
  uint64_t v3 = *(void *)(v2 + 96);
  v1[9] = v3;
  uint64_t v4 = *(int **)(v3 + 72);
  uint64_t v5 = *(void *)(v2 + 80);
  v1[10] = v5;
  uint64_t v8 = (int *)((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[11] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_191CAF158;
  return ((uint64_t (*)(void *, uint64_t, uint64_t))v8)(v1 + 6, v5, v3);
}

uint64_t sub_191CAF158()
{
  swift_task_dealloc();
  uint64_t v1 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191CAF294, v1, v0);
}

uint64_t sub_191CAF294()
{
  swift_release();
  if (v0[3].receiver)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v1 = type metadata accessor for WidgetRelevances();
    unint64_t v2 = sub_191CEF86C(v1);
    swift_bridgeObjectRelease();
    uint64_t v3 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v4 = objc_allocWithZone(v3);
    v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    uint64_t v5 = v4;
    uint64_t v6 = sub_191C2BF48(v2);
    swift_bridgeObjectRelease();
    *(void *)&v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v6;

    v0[2].receiver = v5;
    uint64_t v7 = v0 + 2;
  }
  else
  {
    uint64_t v3 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v8 = objc_allocWithZone(v3);
    v8[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    uint64_t v9 = v8;
    *(void *)&v9[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_191C2BF48(MEMORY[0x1E4FBC860]);

    v0[1].receiver = v9;
    uint64_t v7 = v0 + 1;
  }
  v7->super_class = v3;
  uint64_t v10 = [(objc_super *)v7 init];
  super_class = (uint64_t (*)(objc_super *))v0->super_class;
  return super_class(v10);
}

uint64_t type metadata accessor for IntentTimelineEntryProvider()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CAF424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CAF484(void *a1, uint64_t a2)
{
  return sub_191CAB6E8(a1, a2);
}

uint64_t sub_191CAF4A8(void *a1, _OWORD *a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_191CABAE8(a1, a2, a3, a4);
}

void sub_191CAF4CC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
}

uint64_t sub_191CAF4F0(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_191CAD578(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_191CAF514(uint64_t a1, uint64_t a2)
{
  return sub_191CAEE04(a1, a2);
}

uint64_t sub_191CAF538()
{
  return sub_191CAB45C();
}

uint64_t sub_191CAF55C()
{
  swift_getWitnessTable();

  return sub_191BDAE08();
}

uint64_t sub_191CAF5B0(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_191CAF610()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CAF658(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191CAEF38(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191CAF720(uint64_t a1)
{
  return sub_191CAEC98(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_191CAF730()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E37E0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

double sub_191CAF7C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191CAE4D4(a1, v2, a2);
}

uint64_t sub_191CAF7E0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CAF918(uint64_t a1)
{
  uint64_t v3 = v1[6];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v3 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void **)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)((char *)v1 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_191B0A348;
  return sub_191CAD880(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t type metadata accessor for IntentTimelineEntryProvider.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CAFAAC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v3 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_191CAFBB8()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (v2 + 79) & 0xFFFFFFFFFFFFFFF8;
  return sub_191CACC08(v0 + v1, *(void *)(v0 + v2), v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8), *(uint64_t **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_191CAFC58(uint64_t a1)
{
  return sub_191CB0020(a1, (uint64_t (*)(uint64_t, void, void, void, void, void *))sub_191CACD50);
}

uint64_t sub_191CAFC70()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v1 = (int *)(type metadata accessor for Timeline() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[11];
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v7 = (((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191CAFE60()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void *)(type metadata accessor for Timeline() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + v3);
  unint64_t v7 = *(void (**)(void))(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void **)(v0 + v5);

  return sub_191CACFDC(v0 + v2, v6, v7, v8, v9, (id *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_191CAFF80()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CAFFF0()
{
  return sub_191CABFCC(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112));
}

uint64_t sub_191CB0008(uint64_t a1)
{
  return sub_191CB0020(a1, (uint64_t (*)(uint64_t, void, void, void, void, void *))sub_191CAC124);
}

uint64_t sub_191CB0020(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void *))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2 + 6);
}

uint64_t sub_191CB0038()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191CB0154()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(uint64_t **)(v0 + v3);
  unint64_t v7 = *(void (**)(void))(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void **)(v0 + v5);

  return sub_191CAC578(v0 + v2, v6, v7, v8, v9, (void **)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_191CB0220@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_191CAB5E8(a1, a2);
}

unsigned char *sub_191CB0244(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191CB02E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191CB0308()
{
  return swift_getWitnessTable();
}

uint64_t ControlWidgetConfiguration.displayName(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191CB04D4(a1, a2, a3);
}

uint64_t sub_191CB0338(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*MEMORY[0x1E4FBBC10] + *a1 + 8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - v9);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a3;
  *((void *)v12 + 3) = v7;
  *((void *)v12 + 4) = a4;
  *((void *)v12 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, v7);
  swift_retain();
  sub_191CB0850((uint64_t)sub_191CB1240, (uint64_t)v12);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.description(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191CB04D4(a1, a2, a3);
}

uint64_t sub_191CB04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3008();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v13[0] = sub_191CF5358();
  v13[1] = v11;
  sub_191CB0338(KeyPath, (uint64_t)v13, a2, a3);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t ControlWidgetConfiguration.promptsForUserConfiguration()(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v6 = 1;
  sub_191CB0338(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.pushHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  sub_191CB0338(KeyPath, (uint64_t)v10, a3, a4);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.enabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v7 = 1;
  if ((a1 & 1) == 0) {
    uint64_t v7 = 2;
  }
  uint64_t v9 = v7;
  sub_191CB0338(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.showsContextualMenu(_:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = a1;
  sub_191CB0850((uint64_t)sub_191CB081C, v2);

  return swift_release();
}

uint64_t sub_191CB080C()
{
  return swift_deallocObject();
}

uint64_t sub_191CB081C(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 124)) = v3;
  return result;
}

uint64_t sub_191CB0850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_191B5D22C();
  swift_retain();
  sub_191CF4748();

  return swift_release();
}

uint64_t ControlWidgetConfiguration.showsInSystemSpaces()()
{
  return sub_191CB0850((uint64_t)sub_191CB0934, 0);
}

uint64_t ControlWidgetConfiguration.showsInControlCenter()()
{
  return sub_191CB0850((uint64_t)sub_191CB0934, 0);
}

uint64_t sub_191CB095C(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 116)) = 1;
  *(unsigned char *)(a1 + *(int *)(result + 112)) = 1;
  return result;
}

uint64_t ControlWidgetConfiguration.preferredControlSize(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v8 = v5;
  sub_191CB0338(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.requiresFeatureFlag(domain:featureName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a1;
  void v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191CB0850((uint64_t)sub_191CB0C90, (uint64_t)v8);

  return swift_release();
}

void sub_191CB0AD0(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F58CC8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v3 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_initWithDomain_featureName_, v3, v4);

  uint64_t v6 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 140);
  if (*(void *)(a1 + v6))
  {
    uint64_t v9 = *(void *)(a1 + v6);
    swift_bridgeObjectRetain();
    id v7 = v5;
    MEMORY[0x192FE4280]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_191CF5588();
    }
    sub_191CF55D8();
    sub_191CF5558();
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_191CF9150;
    *(void *)(v8 + 32) = v5;
    uint64_t v9 = v8;
    sub_191CF5558();
  }
  *(void *)(a1 + v6) = v9;
}

uint64_t sub_191CB0C50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_191CB0C90(uint64_t a1)
{
}

uint64_t ControlWidgetConfiguration.requiresFeatureFlag(_:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF3448();
  uint64_t v2 = sub_191CF5DC8();
  uint64_t v4 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF3458();
  uint64_t v5 = sub_191CF5DC8();
  ControlWidgetConfiguration.requiresFeatureFlag(domain:featureName:)(v2, v4, v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void static ControlWidgetSize.small.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static ControlWidgetSize.medium.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static ControlWidgetSize.medium(vertical:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 1;
  if ((result & 1) == 0) {
    uint64_t v2 = 2;
  }
  *a2 = v2;
  return result;
}

void static ControlWidgetSize.large.getter(void *a1@<X8>)
{
  *a1 = 3;
}

BOOL static ControlWidgetSize.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_191CB0DC4()
{
  sub_191B5D22C();

  return sub_191CF4748();
}

uint64_t sub_191CB0E3C(uint64_t result, uint64_t (*a2)(unint64_t))
{
  unint64_t v2 = *(void *)result;
  uint64_t v3 = *(void *)(*(void *)result + 16);
  if (v3)
  {
    uint64_t v5 = (void *)result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
    }
      unint64_t v2 = sub_191CB1168(v2);
    for (unint64_t i = 0; i != v3; ++i)
    {
      if (i >= *(void *)(v2 + 16))
      {
        __break(1u);
        goto LABEL_9;
      }
      uint64_t v7 = *(void *)(type metadata accessor for WidgetDescriptor(0) - 8);
      uint64_t result = a2(v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * i);
    }
    void *v5 = v2;
  }
  return result;
}

uint64_t sub_191CB0F30(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v5 - v2, v3);
  return swift_setAtWritableKeyPath();
}

ValueMetadata *type metadata accessor for ControlWidgetSize()
{
  return &type metadata for ControlWidgetSize;
}

uint64_t sub_191CB103C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CB1098()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CB10D0(uint64_t a1)
{
  return sub_191CB0E3C(a1, *(uint64_t (**)(unint64_t))(v1 + 16));
}

void sub_191CB10D8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_191CF6018();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x192FE4B70);
}

void *sub_191CB1154(void *a1)
{
  return sub_191B403C0(0, a1[2], 0, a1);
}

uint64_t sub_191CB1168(unint64_t a1)
{
  return sub_191B406FC(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_191CB117C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191CB1240(uint64_t a1)
{
  return sub_191CB0F30(a1);
}

uint64_t sub_191CB1280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)a1 = sub_191B8ADCC;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v2;
  *(void *)(a1 + 56) = v3;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 80) = v4;
  id v5 = v2;
  swift_retain();

  return swift_retain();
}

__n128 sub_191CB1304@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *a2;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_OWORD *)(a7 + 16) = v8;
  __n128 result = *(__n128 *)(a1 + 25);
  *(__n128 *)(a7 + 25) = result;
  *(void *)(a7 + 48) = v7;
  *(void *)(a7 + 56) = a3;
  *(void *)(a7 + 64) = a4;
  *(void *)(a7 + 72) = a5;
  *(void *)(a7 + 80) = a6;
  return result;
}

void ControlWidgetButton.body.getter(uint64_t a1)
{
  id v3 = *(id *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 32);
  id v6 = *(id *)v1;
  long long v13 = *(_OWORD *)(v1 + 16);
  swift_retain();
  swift_retain();
  *(void *)&long long v31 = sub_191B8ADCC;
  *((void *)&v31 + 1) = 0;
  __int16 v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  char v35 = 0;
  id v36 = v3;
  uint64_t v37 = v4;
  long long v38 = v13;
  uint64_t v39 = v5;
  long long v7 = *(_OWORD *)(a1 + 40);
  long long v23 = *(_OWORD *)(a1 + 16);
  long long v24 = v7;
  uint64_t v8 = type metadata accessor for ControlWidgetButtonTemplateProvider();
  swift_getWitnessTable();
  sub_191BE0F44((uint64_t)&v31, v8, (uint64_t)&v23);
  uint64_t v9 = v27;
  long long v14 = v23;
  __int16 v15 = v24;
  uint64_t v16 = *((void *)&v24 + 1);
  uint64_t v17 = v25;
  char v18 = v26;
  uint64_t v19 = v27;
  uint64_t v20 = v28;
  long long v21 = v29;
  uint64_t v22 = v30;
  uint64_t v10 = type metadata accessor for TemplateDescriptorPreference();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C6C7AC(&v14, v10, WitnessTable);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v12 = v36;
  long long v23 = v31;
  LOWORD(v24) = v32;
  *((void *)&v24 + 1) = v33;
  uint64_t v25 = v34;
  char v26 = v35;
  uint64_t v27 = v36;
  uint64_t v28 = v37;
  long long v29 = v38;
  uint64_t v30 = v39;
  sub_191C6C7AC(&v23, v10, WitnessTable);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ControlWidgetButtonTemplateProvider()
{
  return swift_getGenericMetadata();
}

uint64_t static ControlWidgetButton._controlType.getter()
{
  return type metadata accessor for ControlWidgetButton();
}

uint64_t type metadata accessor for ControlWidgetButton()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CB15B8()
{
  return static ControlWidgetButton._controlType.getter();
}

uint64_t ControlWidgetButton.init<>(action:label:actionLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v17);
  ControlAction.init<A>(_:)((uint64_t)v16, a6, &v20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a6);
  *a7 = v20;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  return result;
}

uint64_t ControlWidgetButton.init<>(action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v13);
  ControlAction.init<A>(_:)((uint64_t)v12, a4, &v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *a5 = v16;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = nullsub_1;
  a5[4] = 0;
  return result;
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v13);
  ControlAction.init<A>(_:)((uint64_t)v12, a4, &v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *a5 = v16;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = nullsub_1;
  a5[4] = 0;
  return result;
}

__n128 ControlWidgetButton<>.init<>(_:action:actionLabel:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v15 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, a9);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(unsigned char *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  ControlWidgetButton.init<>(action:label:actionLabel:)((uint64_t)v17, (uint64_t)sub_191C89BDC, v19, v23, v24, a9, &v25);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a5, a9);
  __n128 result = v26;
  long long v21 = v27;
  *(void *)a8 = v25;
  *(__n128 *)(a8 + 8) = result;
  *(_OWORD *)(a8 + 24) = v21;
  return result;
}

uint64_t sub_191CB1ACC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

__n128 ControlWidgetButton<>.init<A>(_:action:actionLabel:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v15 = *(void *)(a7 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v31 = a11;
  uint64_t v17 = MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, a7);
  unint64_t v23 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v32;
  *((void *)v24 + 3) = a6;
  uint64_t v25 = v33;
  *((void *)v24 + 4) = a7;
  *((void *)v24 + 5) = v25;
  uint64_t v26 = v31;
  *((void *)v24 + 6) = a10;
  *((void *)v24 + 7) = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v24[v23], v18, a7);
  ControlWidgetButton.init<>(action:label:actionLabel:)((uint64_t)v22, (uint64_t)sub_191CB1EC4, (uint64_t)v24, v34, v35, a6, &v36);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, a6);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, a7);
  __n128 result = v37;
  long long v28 = v38;
  *(void *)a9 = v36;
  *(__n128 *)(a9 + 8) = result;
  *(_OWORD *)(a9 + 24) = v28;
  return result;
}

uint64_t sub_191CB1D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_191CF4B88();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_191CB1E3C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_191CB1EC4@<X0>(uint64_t a1@<X8>)
{
  return sub_191CB1D60(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80)), a1);
}

uint64_t sub_191CB1F10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CB1F5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CB1F78(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t sub_191CB1FBC(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 4);
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v3;
  id v6 = (id)v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_191CB2018(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  long long v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191CB208C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t sub_191CB20E4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191CB212C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlWidgetButtonDefaultActionLabel()
{
  return &type metadata for ControlWidgetButtonDefaultActionLabel;
}

uint64_t sub_191CB2184()
{
  return swift_getWitnessTable();
}

uint64_t sub_191CB220C()
{
  return MEMORY[0x1E4F3F050];
}

uint64_t sub_191CB2218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 232) = a2;
  *(void *)(v4 + 240) = a3;
  *(void *)(v4 + 224) = a1;
  *(_OWORD *)(v4 + 248) = *(_OWORD *)v3;
  *(unsigned char *)(v4 + 400) = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(v4 + 401) = *(unsigned char *)(v3 + 17);
  *(_OWORD *)(v4 + 264) = *(_OWORD *)(v3 + 24);
  *(unsigned char *)(v4 + 402) = *(unsigned char *)(v3 + 40);
  *(void *)(v4 + 280) = *(void *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v4 + 288) = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v4 + 304) = v5;
  sub_191CF5698();
  *(void *)(v4 + 320) = sub_191CF5688();
  uint64_t v7 = sub_191CF5648();
  *(void *)(v4 + 328) = v7;
  *(void *)(v4 + 336) = v6;
  return MEMORY[0x1F4188298](sub_191CB22F4, v7, v6);
}

uint64_t sub_191CB22F4()
{
  uint64_t v42 = v0;
  unint64_t v2 = *(void **)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  char v3 = *(unsigned char *)(v0 + 402);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 272);
  char v6 = *(unsigned char *)(v0 + 401);
  char v7 = *(unsigned char *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void **)(v0 + 240);
  uint64_t v31 = *(void *)(v0 + 312);
  v32[0] = *(void *)(v0 + 248);
  v32[1] = v8;
  char v33 = v7;
  char v34 = v6;
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  char v37 = v3;
  long long v38 = v2;
  uint64_t v39 = v1;
  long long v40 = *(_OWORD *)(v0 + 296);
  uint64_t v41 = v31;
  uint64_t v10 = v9[2];
  uint64_t v11 = v9[3];
  uint64_t v12 = v9[4];
  uint64_t v13 = v9[5];
  sub_191B966C0((uint64_t)v32, v0 + 16);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v15 = *(void *)(v0 + 24);
  char v16 = *(unsigned char *)(v0 + 32);
  char v17 = *(unsigned char *)(v0 + 33);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  *(void *)(v0 + 344) = v15;
  *(void *)(v0 + 352) = v19;
  char v20 = *(unsigned char *)(v0 + 56);
  uint64_t v21 = *(void *)(v0 + 64);
  uint64_t v22 = *(void *)(v0 + 72);
  *(void *)(v0 + 360) = v21;
  uint64_t v23 = *(void *)(v0 + 96);
  *(void *)(v0 + 376) = v23;
  *(void *)(v0 + 104) = v14;
  *(void *)(v0 + 112) = v15;
  *(unsigned char *)(v0 + 120) = v16;
  *(unsigned char *)(v0 + 121) = v17;
  *(void *)(v0 + 128) = v18;
  *(void *)(v0 + 136) = v19;
  *(unsigned char *)(v0 + 144) = v20;
  *(void *)(v0 + 152) = v21;
  *(void *)(v0 + 160) = v22;
  long long v24 = *(_OWORD *)(v0 + 80);
  *(void *)(v0 + 368) = v24;
  *(_OWORD *)(v0 + 168) = v24;
  *(void *)(v0 + 184) = v23;
  swift_retain();
  swift_bridgeObjectRetain();
  id v25 = v2;
  swift_retain();
  swift_retain();
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v26;
  *(void *)(v0 + 192) = v10;
  *(void *)(v0 + 200) = v11;
  *(void *)(v0 + 208) = v12;
  *(void *)(v0 + 216) = v13;
  uint64_t v27 = type metadata accessor for ControlWidgetButtonParser();
  void *v26 = v0;
  v26[1] = sub_191CB24BC;
  uint64_t v28 = *(void *)(v0 + 224);
  uint64_t v29 = *(void *)(v0 + 232);
  return sub_191B96704(v28, v29, v27);
}

uint64_t sub_191CB24BC()
{
  uint64_t v2 = *v1;
  char v3 = *(void **)(*v1 + 360);
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void *)(v2 + 328);
  uint64_t v5 = *(void *)(v2 + 336);
  if (v0) {
    char v6 = sub_191CB26D8;
  }
  else {
    char v6 = sub_191CB2674;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191CB2674()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191CB26D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191CB273C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_191B0A348;
  return sub_191CB2218(a1, a2, a3);
}

uint64_t ViewStatesArchiver.archiveToData()()
{
  type metadata accessor for _MapStates();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v0 = sub_191CF4238();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for _MapStates()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ViewStatesArchiver.encodesCustomFontsAsURLs.setter()
{
  return sub_191CF42C8();
}

uint64_t ViewStatesArchiver.encodesPreciseTextLayout.setter()
{
  return sub_191CF42E8();
}

uint64_t ViewStatesArchiver.deploymentVersion.setter(uint64_t a1)
{
  uint64_t v2 = sub_191CF4488();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_191CF42A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewStatesArchiver.archive(to:)(NSFileHandle to)
{
}

uint64_t ViewStatesArchiver.encodesPreciseTextLayout.getter()
{
  return sub_191CF42D8() & 1;
}

uint64_t sub_191CB2A98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ViewStatesArchiver.encodesPreciseTextLayout.getter();
  *a1 = result & 1;
  return result;
}

uint64_t (*ViewStatesArchiver.encodesPreciseTextLayout.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_191CF42D8() & 1;
  return sub_191CB2B28;
}

uint64_t sub_191CB2B28(uint64_t a1, uint64_t a2)
{
  return sub_191CB2C10(a1, a2, MEMORY[0x1E4F3D390]);
}

uint64_t ViewStatesArchiver.encodesCustomFontsAsURLs.getter()
{
  return sub_191CF42B8() & 1;
}

uint64_t sub_191CB2B68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ViewStatesArchiver.encodesCustomFontsAsURLs.getter();
  *a1 = result & 1;
  return result;
}

uint64_t (*ViewStatesArchiver.encodesCustomFontsAsURLs.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_191CF42B8() & 1;
  return sub_191CB2BF8;
}

uint64_t sub_191CB2BF8(uint64_t a1, uint64_t a2)
{
  return sub_191CB2C10(a1, a2, MEMORY[0x1E4F3D388]);
}

uint64_t sub_191CB2C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(*(unsigned __int8 *)(a1 + 8));
}

uint64_t ViewStatesArchiver.deploymentVersion.getter()
{
  return sub_191CF4298();
}

uint64_t sub_191CB2C64()
{
  return ViewStatesArchiver.deploymentVersion.getter();
}

uint64_t sub_191CB2C98(uint64_t a1)
{
  uint64_t v2 = sub_191CF4488();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return ViewStatesArchiver.deploymentVersion.setter((uint64_t)v4);
}

void (*ViewStatesArchiver.deploymentVersion.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  void *v5 = a2;
  v5[1] = v2;
  uint64_t v6 = sub_191CF4488();
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  sub_191CF4298();
  return sub_191CB2E30;
}

void sub_191CB2E30(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 32), v4, v5);
    ViewStatesArchiver.deploymentVersion.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    ViewStatesArchiver.deploymentVersion.setter(*(void *)(*(void *)a1 + 40));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_191CB2EE8()
{
  return ViewStatesArchiver.encodesPreciseTextLayout.setter();
}

uint64_t sub_191CB2F10()
{
  return 16;
}

__n128 sub_191CB2F1C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_191CB2F2C()
{
  return ViewStatesArchiver.encodesCustomFontsAsURLs.setter();
}

uint64_t sub_191CB2F54()
{
  return 16;
}

__n128 sub_191CB2F60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_191CB2F74()
{
  return 16;
}

__n128 sub_191CB2F80(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_191CB2F90()
{
  swift_release();

  return swift_release();
}

void *sub_191CB2FCC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_191CB3004(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_191CB3064(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ViewStatesArchiver()
{
  return __swift_instantiateGenericMetadata();
}

void sub_191CB30BC()
{
  sub_191CB323C();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

id sub_191CB3164(void *a1)
{
  if (!swift_weakLoadStrong()) {
    return a1;
  }
  uint64_t v2 = sub_191CB3960((uint64_t)a1);
  swift_release();
  return (id)v2;
}

uint64_t sub_191CB31D4()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  sub_191CB3DE0(v0 + qword_1E92E1450);
  return v0;
}

uint64_t sub_191CB320C()
{
  return sub_191CB3B74(sub_191CB31D4);
}

uint64_t type metadata accessor for _SimpleDelegate()
{
  return __swift_instantiateGenericMetadata();
}

void sub_191CB323C()
{
  if (!qword_1EB44AF98)
  {
    sub_191CF3738();
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB44AF98);
    }
  }
}

uint64_t sub_191CB3294()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_191CB3338(void *a1)
{
  return sub_191CB3164(a1);
}

uint64_t sub_191CB335C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 88) + 48))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_191CB34AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = v4[11];
  uint64_t v6 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v8 = v4[13];
  swift_retain();
  sub_191CF4328();
  sub_191CF4338();
  swift_release();
  uint64_t v9 = *(void *)((char *)v2 + v8);
  swift_beginAccess();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v11 = type metadata accessor for _SimpleDelegate();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  v10(a1, v9, v11, WitnessTable, v6, v5);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_191CB3668()
{
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 88);
  uint64_t v4 = *(void *)(*v0 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = (uint64_t)v0 + *(void *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v4);
  sub_191CF2E58();
  swift_allocObject();
  sub_191CF2E48();
  uint64_t v13 = (uint64_t)v11;
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v4, v3);
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v4);
    swift_release();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    uint64_t v13 = sub_191CF2E38();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v4);
  }
  return v13;
}

uint64_t sub_191CB3960(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 + 88) + 72))(a1, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_191CB3AD0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_release();
  return v0;
}

uint64_t sub_191CB3B5C()
{
  return sub_191CB3B74(sub_191CB3AD0);
}

uint64_t sub_191CB3B74(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_191CB3BCC(uint64_t a1)
{
  return sub_191CB335C(a1);
}

uint64_t sub_191CB3BF0(uint64_t a1)
{
  return sub_191CB34AC(a1);
}

uint64_t sub_191CB3C14()
{
  return sub_191CB3668();
}

void sub_191CB3C38()
{
  if (qword_1E92E1198 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF3858();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92F24A8);
  oslog = sub_191CF3838();
  os_log_type_t v1 = sub_191CF5928();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v7 = v3;
    *(_DWORD *)uint64_t v2 = 136315138;
    uint64_t v4 = sub_191CF6568();
    sub_191C5C36C(v4, v5, &v7);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, oslog, v1, "Failed to encode %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v3, -1, -1);
    MEMORY[0x192FE5F00](v2, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_191CB3DE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AFA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static WidgetFontDefinitionFactory.fontDefinition(from:for:)(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 v3 = *a2;
  return sub_191CB3E6C(a1, &v3);
}

uint64_t sub_191CB3E6C(void *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch((unint64_t)objc_msgSend(a1, sel_fontStyle))
  {
    case 1uLL:
      uint64_t v3 = type metadata accessor for ContentSizeCategoryIncrementingFontDefinition();
      uint64_t v4 = (unint64_t *)&unk_1EB449B20;
      unint64_t v5 = type metadata accessor for ContentSizeCategoryIncrementingFontDefinition;
      break;
    case 2uLL:
      uint64_t v3 = type metadata accessor for ContentSizeCategoryDecrementingFontDefinition();
      uint64_t v4 = (unint64_t *)&unk_1EB449CF8;
      unint64_t v5 = type metadata accessor for ContentSizeCategoryDecrementingFontDefinition;
      break;
    case 6uLL:
      if (v2 == 7)
      {
        uint64_t v3 = type metadata accessor for CompactCircularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1E92E5398;
        unint64_t v5 = type metadata accessor for CompactCircularFontDefinition;
      }
      else
      {
        uint64_t v3 = type metadata accessor for CompactRectangularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1E92E5390;
        unint64_t v5 = type metadata accessor for CompactRectangularFontDefinition;
      }
      break;
    case 7uLL:
      if (v2 == 7)
      {
        uint64_t v3 = type metadata accessor for RegularCircularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1E92E2788;
        unint64_t v5 = type metadata accessor for RegularCircularFontDefinition;
      }
      else
      {
        uint64_t v3 = type metadata accessor for RegularRectangularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1EB448F98;
        unint64_t v5 = type metadata accessor for RegularRectangularFontDefinition;
      }
      break;
    case 8uLL:
      if (v2 == 7)
      {
        uint64_t v3 = type metadata accessor for LargeCircularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1EB449630;
        unint64_t v5 = type metadata accessor for LargeCircularFontDefinition;
      }
      else
      {
        uint64_t v3 = type metadata accessor for LargeRectangularFontDefinition();
        uint64_t v4 = (unint64_t *)&unk_1EB448F70;
        unint64_t v5 = type metadata accessor for LargeRectangularFontDefinition;
      }
      break;
    case 0xBuLL:
      uint64_t v3 = type metadata accessor for iOSLikeFontDefinition();
      uint64_t v4 = (unint64_t *)&unk_1E92E5388;
      unint64_t v5 = type metadata accessor for iOSLikeFontDefinition;
      break;
    default:
      uint64_t v3 = type metadata accessor for TightLeadingFontDefinition();
      uint64_t v4 = (unint64_t *)&unk_1EB449D08;
      unint64_t v5 = type metadata accessor for TightLeadingFontDefinition;
      break;
  }
  sub_191CB40DC(v4, (void (*)(uint64_t))v5);
  return v3;
}

uint64_t sub_191CB40A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_191CB40B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for WidgetFontDefinitionFactory()
{
  return &type metadata for WidgetFontDefinitionFactory;
}

uint64_t sub_191CB40DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t View.activityBackgroundTint(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _ActivityBackgroundTintModifier();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)((char *)v8 + *(int *)(v6 + 20)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = a1;
  swift_retain();
  MEMORY[0x192FE3AA0](v8, a2, v6, a3);
  return sub_191CB4270((uint64_t)v8);
}

uint64_t type metadata accessor for _ActivityBackgroundTintModifier()
{
  uint64_t result = qword_1E92E2278;
  if (!qword_1E92E2278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191CB4270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ActivityBackgroundTintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191CB42CC()
{
  return swift_getWitnessTable();
}

unint64_t sub_191CB4338()
{
  unint64_t result = qword_1E92E2270;
  if (!qword_1E92E2270)
  {
    type metadata accessor for _ActivityBackgroundTintModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2270);
  }
  return result;
}

uint64_t *sub_191CB4390(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_191CB44A8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_191CF4058();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_191CB4560(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_191CF4058();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    void *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_191CB4628(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_191BB4E54((uint64_t)a1 + v6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_191CB4714(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_191CB47E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_191BB4E54((uint64_t)a1 + v6);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_191CB48DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CB48F0);
}

uint64_t sub_191CB48F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_191CB49B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CB49C4);
}

void *sub_191CB49C4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191CB4A70()
{
  sub_191BB4EF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_191CB4B08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CB4B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191CF4058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *v2;
  if (*v2)
  {
    sub_191BDC4F0((uint64_t)&v24 - v8);
    sub_191CF4DB8();
    unsigned int v12 = v11;
    unsigned int v14 = v13;
    unsigned int v16 = v15;
    unsigned int v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    unint64_t v19 = v12 | ((unint64_t)v14 << 32);
    unint64_t v20 = v16 | ((unint64_t)v18 << 32);
  }
  else
  {
    unint64_t v19 = 0;
    unint64_t v20 = 0;
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, a1, v21);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0DB0);
  uint64_t v23 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v23 = v19;
  *(void *)(v23 + 8) = v20;
  *(unsigned char *)(v23 + 16) = v10 == 0;
  return result;
}

double sub_191CB4CC4(uint64_t a1, void (*a2)(long long *__return_ptr))
{
  a2(&v5);
  char v3 = v6;
  double result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(unsigned char *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_191CB4D0C(uint64_t a1)
{
  unint64_t v2 = sub_191CB4E78();

  return MEMORY[0x1F40F9710](a1, v2);
}

ValueMetadata *type metadata accessor for _ActivityBackgroundTintPreferenceKey()
{
  return &type metadata for _ActivityBackgroundTintPreferenceKey;
}

unint64_t sub_191CB4D5C()
{
  unint64_t result = qword_1E92E0DA8;
  if (!qword_1E92E0DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0DB0);
    sub_191B00398(&qword_1E92E0DC8, &qword_1E92E0DD0);
    sub_191B00398(&qword_1E92E22D0, &qword_1E92E22D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0DA8);
  }
  return result;
}

unint64_t sub_191CB4E24()
{
  unint64_t result = qword_1E92E17C8;
  if (!qword_1E92E17C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E17C8);
  }
  return result;
}

unint64_t sub_191CB4E78()
{
  unint64_t result = qword_1E92E17C0;
  if (!qword_1E92E17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E17C0);
  }
  return result;
}

void *sub_191CB4ECC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF31D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v11 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    id v12 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191CB4FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CB5054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  id v11 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191CB5100(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_191CB51CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_191CB5264(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF31D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_191CB531C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CB5330);
}

uint64_t sub_191CB5330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF31D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_191CB53F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CB5404);
}

uint64_t sub_191CB5404(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF31D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ActivityViewStates.Metadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E1CD0);
}

uint64_t sub_191CB54E0()
{
  uint64_t result = sub_191CF31D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_191CB5594(void *a1, void *a2, int *a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    v7[16] = *((unsigned char *)a2 + v6 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
    char v7[40] = *((unsigned char *)a2 + v6 + 40);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
    *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
    v7[88] = *((unsigned char *)a2 + v6 + 88);
    *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
    *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
    uint64_t v81 = type metadata accessor for MetricsRequest(0);
    uint64_t v9 = *(int *)(v81 + 40);
    unint64_t v10 = &v7[v9];
    id v11 = &v8[v9];
    uint64_t v12 = sub_191CF43F8();
    uint64_t v13 = *(void *)(v12 - 8);
    unsigned int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    id v15 = v5;
    uint64_t v83 = v14;
    if (v14(v11, 1, v12))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v18 = v12;
    uint64_t v80 = v13;
    uint64_t v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    unint64_t v20 = &v7[v19];
    uint64_t v21 = &v8[v19];
    uint64_t v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v23 = *((void *)v22 - 1);
    uint64_t v24 = a2;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      uint64_t v26 = v81;
    }
    else
    {
      uint64_t v79 = v23;
      *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
      uint64_t v27 = v22[5];
      uint64_t v28 = &v20[v27];
      uint64_t v29 = &v21[v27];
      unsigned char v28[16] = v29[16];
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
      unsigned char v28[40] = v29[40];
      *((void *)v28 + 6) = *((void *)v29 + 6);
      *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
      *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
      v28[88] = v29[88];
      *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
      uint64_t v26 = v81;
      uint64_t v30 = *(int *)(v81 + 40);
      uint64_t v31 = &v28[v30];
      uint64_t v32 = &v29[v30];
      if (v83(&v29[v30], 1, v18))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v31, v32, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v31, 0, 1, v18);
      }
      uint64_t v34 = v22[6];
      uint64_t v35 = &v20[v34];
      uint64_t v36 = &v21[v34];
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      v35[16] = v36[16];
      *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
      v35[40] = v36[40];
      *((void *)v35 + 6) = *((void *)v36 + 6);
      *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
      *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
      v35[88] = v36[88];
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      uint64_t v37 = *(int *)(v81 + 40);
      long long v38 = &v35[v37];
      uint64_t v39 = &v36[v37];
      if (v83(&v36[v37], 1, v18))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v38, v39, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v38, 0, 1, v18);
      }
      uint64_t v41 = v22[7];
      uint64_t v42 = &v20[v41];
      uint64_t v43 = &v21[v41];
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      v42[16] = v43[16];
      *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
      v42[40] = v43[40];
      *((void *)v42 + 6) = *((void *)v43 + 6);
      *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
      *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
      v42[88] = v43[88];
      *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
      uint64_t v44 = *(int *)(v81 + 40);
      uint64_t v45 = &v42[v44];
      uint64_t v46 = &v43[v44];
      if (v83(&v43[v44], 1, v18))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v80;
      }
      else
      {
        uint64_t v48 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v45, v46, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v45, 0, 1, v18);
      }
      uint64_t v49 = v22[8];
      uint64_t v50 = &v20[v49];
      id v51 = &v21[v49];
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      v50[16] = v51[16];
      *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
      v50[40] = v51[40];
      *((void *)v50 + 6) = *((void *)v51 + 6);
      *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
      *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
      v50[88] = v51[88];
      *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
      uint64_t v52 = *(int *)(v81 + 40);
      char v53 = &v50[v52];
      uint64_t v54 = &v51[v52];
      if (v83(&v51[v52], 1, v18))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v53, v54, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v53, 0, 1, v18);
      }
      uint64_t v24 = a2;
      (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v20, 0, 1, v22);
    }
    uint64_t v56 = a3[7];
    uint64_t v57 = a3[8];
    uint64_t v58 = (void *)((char *)v3 + v56);
    uint64_t v59 = (void *)((char *)v24 + v56);
    uint64_t v60 = v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v60;
    *((unsigned char *)v3 + v57) = *((unsigned char *)v24 + v57);
    uint64_t v61 = a3[10];
    *(void *)((char *)v3 + a3[9]) = *(void *)((char *)v24 + a3[9]);
    uint64_t v62 = (_OWORD *)((char *)v3 + v61);
    uint64_t v63 = (_OWORD *)((char *)v24 + v61);
    uint64_t v64 = *(void *)(v26 - 8);
    uint64_t v65 = v26;
    uint64_t v66 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v64 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66(v63, 1, v65))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
      memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      _OWORD *v62 = *v63;
      *((unsigned char *)v62 + 16) = *((unsigned char *)v63 + 16);
      *(_OWORD *)((char *)v62 + 24) = *(_OWORD *)((char *)v63 + 24);
      *((unsigned char *)v62 + 40) = *((unsigned char *)v63 + 40);
      *((void *)v62 + 6) = *((void *)v63 + 6);
      *(_OWORD *)((char *)v62 + 56) = *(_OWORD *)((char *)v63 + 56);
      *(_OWORD *)((char *)v62 + 72) = *(_OWORD *)((char *)v63 + 72);
      *((unsigned char *)v62 + 88) = *((unsigned char *)v63 + 88);
      v62[6] = v63[6];
      uint64_t v68 = *(int *)(v65 + 40);
      int v69 = (char *)v62 + v68;
      char v70 = (char *)v63 + v68;
      if (v83(v70, 1, v18))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v69, v70, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v69, 0, 1, v18);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v64 + 56))(v62, 0, 1, v65);
    }
    uint64_t v72 = a3[11];
    uint64_t v73 = (char *)v3 + v72;
    int v74 = (char *)v24 + v72;
    uint64_t v75 = sub_191CF4058();
    uint64_t v76 = *(void *)(v75 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
    {
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
      memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    *((unsigned char *)v3 + a3[12]) = *((unsigned char *)v24 + a3[12]);
  }
  return v3;
}

uint64_t sub_191CB5F40(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for MetricsRequest(0);
  uint64_t v6 = v4 + *(int *)(v5 + 40);
  uint64_t v7 = sub_191CF43F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v4 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  id v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    uint64_t v23 = v8;
    uint64_t v12 = *(int *)(v5 + 40);
    uint64_t v13 = v10 + v11[5] + v12;
    if (!v9(v13, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v7);
      uint64_t v12 = *(int *)(v5 + 40);
    }
    uint64_t v14 = v10 + v11[6] + v12;
    if (!v9(v14, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v14, v7);
      uint64_t v12 = *(int *)(v5 + 40);
    }
    uint64_t v15 = v10 + v11[7] + v12;
    if (!v9(v15, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v15, v7);
      uint64_t v12 = *(int *)(v5 + 40);
    }
    uint64_t v16 = v10 + v11[8] + v12;
    uint64_t v8 = v23;
    if (!v9(v16, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v7);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v17, 1, v5))
  {
    uint64_t v18 = v17 + *(int *)(v5 + 40);
    if (!v9(v18, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v7);
    }
  }
  uint64_t v19 = a1 + a2[11];
  uint64_t v20 = sub_191CF4058();
  uint64_t v24 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v19, 1, v20);
  if (!result)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
    return v22(v19, v20);
  }
  return result;
}

void *sub_191CB6304(void *a1, void *a2, int *a3)
{
  char v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a3[6];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  v5[16] = *((unsigned char *)a2 + v4 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)((char *)a2 + v4);
  v5[40] = *((unsigned char *)a2 + v4 + 40);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)((char *)a2 + v4 + 24);
  *((void *)v5 + 6) = *(void *)((char *)a2 + v4 + 48);
  v5[88] = *((unsigned char *)a2 + v4 + 88);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)((char *)a2 + v4 + 72);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)((char *)a2 + v4 + 56);
  *((_OWORD *)v5 + 6) = *(_OWORD *)((char *)a2 + v4 + 96);
  uint64_t v7 = type metadata accessor for MetricsRequest(0);
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_191CF43F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  id v14 = v3;
  if (v13(v10, 1, v11))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v79 = v12;
  uint64_t v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  uint64_t v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = v7;
  uint64_t v78 = v11;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    uint64_t v23 = a1;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    uint64_t v24 = v19[5];
    uint64_t v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    v25[16] = v26[16];
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
    v25[40] = v26[40];
    *((void *)v25 + 6) = *((void *)v26 + 6);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
    v25[88] = v26[88];
    *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
    uint64_t v27 = *(int *)(v7 + 40);
    uint64_t v28 = &v25[v27];
    uint64_t v29 = &v26[v27];
    uint64_t v23 = a1;
    if (v13(&v26[v27], 1, v11))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v28, v29, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v28, 0, 1, v11);
    }
    uint64_t v31 = v19[6];
    uint64_t v32 = &v17[v31];
    uint64_t v33 = &v18[v31];
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    v32[40] = v33[40];
    *((void *)v32 + 6) = *((void *)v33 + 6);
    *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
    *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
    v32[88] = v33[88];
    *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
    uint64_t v34 = *(int *)(v21 + 40);
    uint64_t v35 = &v32[v34];
    uint64_t v36 = &v33[v34];
    if (v13(&v33[v34], 1, v11))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v35, v36, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v35, 0, 1, v11);
    }
    uint64_t v38 = v19[7];
    uint64_t v77 = v17;
    uint64_t v39 = &v17[v38];
    uint64_t v40 = &v18[v38];
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
    v39[40] = v40[40];
    *((void *)v39 + 6) = *((void *)v40 + 6);
    *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
    *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
    v39[88] = v40[88];
    *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
    uint64_t v41 = *(int *)(v21 + 40);
    uint64_t v42 = &v39[v41];
    uint64_t v43 = &v40[v41];
    if (v13(&v40[v41], 1, v11))
    {
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      uint64_t v45 = v79;
    }
    else
    {
      uint64_t v45 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v42, v43, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v42, 0, 1, v11);
    }
    uint64_t v46 = v19[8];
    uint64_t v47 = (char *)v77 + v46;
    uint64_t v48 = &v18[v46];
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
    v47[40] = v48[40];
    *((void *)v47 + 6) = *((void *)v48 + 6);
    *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
    *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
    v47[88] = v48[88];
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    uint64_t v49 = *(int *)(v21 + 40);
    uint64_t v50 = &v47[v49];
    id v51 = &v48[v49];
    if (v13(&v48[v49], 1, v11))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v50, v51, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v50, 0, 1, v11);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v77, 0, 1, v19);
  }
  uint64_t v53 = a3[7];
  uint64_t v54 = a3[8];
  uint64_t v55 = (void *)((char *)v23 + v53);
  uint64_t v56 = (void *)((char *)a2 + v53);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  *((unsigned char *)v23 + v54) = *((unsigned char *)a2 + v54);
  uint64_t v58 = a3[10];
  *(void *)((char *)v23 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v59 = (_OWORD *)((char *)v23 + v58);
  uint64_t v60 = (_OWORD *)((char *)a2 + v58);
  uint64_t v61 = *(void *)(v21 - 8);
  uint64_t v62 = v21;
  uint64_t v63 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v62))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
    memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
    uint64_t v65 = a3;
  }
  else
  {
    *uint64_t v59 = *v60;
    *((unsigned char *)v59 + 16) = *((unsigned char *)v60 + 16);
    *(_OWORD *)((char *)v59 + 24) = *(_OWORD *)((char *)v60 + 24);
    *((unsigned char *)v59 + 40) = *((unsigned char *)v60 + 40);
    *((void *)v59 + 6) = *((void *)v60 + 6);
    *(_OWORD *)((char *)v59 + 56) = *(_OWORD *)((char *)v60 + 56);
    *(_OWORD *)((char *)v59 + 72) = *(_OWORD *)((char *)v60 + 72);
    *((unsigned char *)v59 + 88) = *((unsigned char *)v60 + 88);
    v59[6] = v60[6];
    uint64_t v66 = *(int *)(v62 + 40);
    uint64_t v67 = (char *)v59 + v66;
    uint64_t v68 = (char *)v60 + v66;
    if (v13(v68, 1, v78))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v67, v68, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v67, 0, 1, v78);
    }
    uint64_t v65 = a3;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v61 + 56))(v59, 0, 1, v62);
  }
  uint64_t v70 = v65[11];
  uint64_t v71 = (char *)v23 + v70;
  uint64_t v72 = (char *)a2 + v70;
  uint64_t v73 = sub_191CF4058();
  uint64_t v74 = *(void *)(v73 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  *((unsigned char *)v23 + v65[12]) = *((unsigned char *)a2 + v65[12]);
  return v23;
}

void *sub_191CB6C78(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  v176 = a1;
  uint64_t v10 = (char *)a1 + v9;
  v174 = a2;
  uint64_t v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)((char *)a2 + v9);
  v10[16] = *((unsigned char *)a2 + v9 + 16);
  *(_OWORD *)uint64_t v10 = v12;
  long long v13 = *(_OWORD *)((char *)a2 + v9 + 24);
  v10[40] = *((unsigned char *)a2 + v9 + 40);
  *(_OWORD *)(v10 + 24) = v13;
  *((void *)v10 + 6) = *(void *)((char *)a2 + v9 + 48);
  long long v14 = *(_OWORD *)((char *)a2 + v9 + 56);
  long long v15 = *(_OWORD *)((char *)a2 + v9 + 72);
  v10[88] = *((unsigned char *)a2 + v9 + 88);
  *(_OWORD *)(v10 + 72) = v15;
  *(_OWORD *)(v10 + 56) = v14;
  *((void *)v10 + 12) = *(void *)((char *)a2 + v9 + 96);
  *((void *)v10 + 13) = *(void *)((char *)a2 + v9 + 104);
  uint64_t v178 = type metadata accessor for MetricsRequest(0);
  uint64_t v16 = *(int *)(v178 + 40);
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = sub_191CF43F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  uint64_t v177 = v21;
  int v23 = v21(v18, 1, v19);
  uint64_t v173 = v20;
  uint64_t v175 = a3;
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = v176;
  uint64_t v26 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  uint64_t v29 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v30 = *((void *)v29 - 1);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, int *))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (v33)
    {
      sub_191CB7E80((uint64_t)v27, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = *((void *)v28 + 1);
    uint64_t v47 = v29[5];
    uint64_t v48 = &v27[v47];
    uint64_t v49 = &v28[v47];
    long long v50 = *(_OWORD *)v49;
    v48[16] = v49[16];
    *(_OWORD *)uint64_t v48 = v50;
    long long v51 = *(_OWORD *)(v49 + 24);
    v48[40] = v49[40];
    *(_OWORD *)(v48 + 24) = v51;
    *((void *)v48 + 6) = *((void *)v49 + 6);
    long long v52 = *(_OWORD *)(v49 + 56);
    long long v53 = *(_OWORD *)(v49 + 72);
    v48[88] = v49[88];
    *(_OWORD *)(v48 + 72) = v53;
    *(_OWORD *)(v48 + 56) = v52;
    *((void *)v48 + 12) = *((void *)v49 + 12);
    *((void *)v48 + 13) = *((void *)v49 + 13);
    uint64_t v54 = *(int *)(v178 + 40);
    uint64_t v55 = &v48[v54];
    uint64_t v56 = &v49[v54];
    int v57 = v177(&v48[v54], 1, v19);
    int v58 = v177(v56, 1, v19);
    if (v57)
    {
      uint64_t v59 = v20;
      if (!v58)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v55, v56, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v55, 0, 1, v19);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v59 = v20;
      if (!v58)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v55, v56, v19);
LABEL_32:
        uint64_t v94 = v29[6];
        int v95 = &v27[v94];
        uint64_t v96 = &v28[v94];
        long long v97 = *(_OWORD *)v96;
        v95[16] = v96[16];
        *(_OWORD *)int v95 = v97;
        long long v98 = *(_OWORD *)(v96 + 24);
        v95[40] = v96[40];
        *(_OWORD *)(v95 + 24) = v98;
        *((void *)v95 + 6) = *((void *)v96 + 6);
        long long v99 = *(_OWORD *)(v96 + 56);
        long long v100 = *(_OWORD *)(v96 + 72);
        v95[88] = v96[88];
        *(_OWORD *)(v95 + 72) = v100;
        *(_OWORD *)(v95 + 56) = v99;
        *((void *)v95 + 12) = *((void *)v96 + 12);
        *((void *)v95 + 13) = *((void *)v96 + 13);
        uint64_t v101 = *(int *)(v178 + 40);
        uint64_t v102 = &v95[v101];
        uint64_t v103 = &v96[v101];
        int v104 = v177(&v95[v101], 1, v19);
        int v105 = v177(v103, 1, v19);
        if (v104)
        {
          if (!v105)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v102, v103, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v102, 0, 1, v19);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v105)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v102, v103, v19);
LABEL_38:
            uint64_t v107 = v29[7];
            uint64_t v108 = &v27[v107];
            uint64_t v109 = &v28[v107];
            long long v110 = *(_OWORD *)v109;
            v108[16] = v109[16];
            *(_OWORD *)uint64_t v108 = v110;
            long long v111 = *(_OWORD *)(v109 + 24);
            v108[40] = v109[40];
            *(_OWORD *)(v108 + 24) = v111;
            *((void *)v108 + 6) = *((void *)v109 + 6);
            long long v112 = *(_OWORD *)(v109 + 56);
            long long v113 = *(_OWORD *)(v109 + 72);
            v108[88] = v109[88];
            *(_OWORD *)(v108 + 72) = v113;
            *(_OWORD *)(v108 + 56) = v112;
            *((void *)v108 + 12) = *((void *)v109 + 12);
            *((void *)v108 + 13) = *((void *)v109 + 13);
            uint64_t v114 = *(int *)(v178 + 40);
            uint64_t v115 = &v108[v114];
            uint64_t v116 = &v109[v114];
            int v117 = v177(&v108[v114], 1, v19);
            int v118 = v177(v116, 1, v19);
            if (v117)
            {
              if (!v118)
              {
                (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v115, v116, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v115, 0, 1, v19);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v118)
              {
                (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v115, v116, v19);
LABEL_44:
                a3 = v175;
                uint64_t v120 = v29[8];
                uint64_t v121 = &v27[v120];
                long long v122 = &v28[v120];
                long long v123 = *(_OWORD *)v122;
                v121[16] = v122[16];
                *(_OWORD *)uint64_t v121 = v123;
                long long v124 = *(_OWORD *)(v122 + 24);
                v121[40] = v122[40];
                *(_OWORD *)(v121 + 24) = v124;
                *((void *)v121 + 6) = *((void *)v122 + 6);
                long long v125 = *(_OWORD *)(v122 + 56);
                long long v126 = *(_OWORD *)(v122 + 72);
                v121[88] = v122[88];
                *(_OWORD *)(v121 + 72) = v126;
                *(_OWORD *)(v121 + 56) = v125;
                *((void *)v121 + 12) = *((void *)v122 + 12);
                *((void *)v121 + 13) = *((void *)v122 + 13);
                uint64_t v127 = *(int *)(v178 + 40);
                uint64_t v128 = &v121[v127];
                uint64_t v129 = &v122[v127];
                int v130 = v177(&v121[v127], 1, v19);
                int v131 = v177(v129, 1, v19);
                if (v130)
                {
                  uint64_t v25 = v176;
                  if (!v131)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v128, v129, v19);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v128, 0, 1, v19);
                    goto LABEL_50;
                  }
                }
                else
                {
                  uint64_t v25 = v176;
                  if (!v131)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v128, v129, v19);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v59 + 8))(v128, v19);
                }
                uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v128, v129, *(void *)(*(void *)(v132 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v59 + 8))(v115, v19);
            }
            uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v59 + 8))(v102, v19);
        }
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v55, v19);
    }
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v55, v56, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_32;
  }
  if (v33)
  {
LABEL_13:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v27, v28, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_50;
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  uint64_t v34 = v29[5];
  uint64_t v35 = &v27[v34];
  uint64_t v36 = &v28[v34];
  long long v37 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)uint64_t v35 = v37;
  long long v38 = *(_OWORD *)(v36 + 24);
  v35[40] = v36[40];
  *(_OWORD *)(v35 + 24) = v38;
  *((void *)v35 + 6) = *((void *)v36 + 6);
  long long v39 = *(_OWORD *)(v36 + 56);
  long long v40 = *(_OWORD *)(v36 + 72);
  v35[88] = v36[88];
  *(_OWORD *)(v35 + 72) = v40;
  *(_OWORD *)(v35 + 56) = v39;
  *((void *)v35 + 12) = *((void *)v36 + 12);
  *((void *)v35 + 13) = *((void *)v36 + 13);
  uint64_t v41 = *(int *)(v178 + 40);
  uint64_t v42 = &v35[v41];
  uint64_t v43 = &v36[v41];
  if (v177(&v36[v41], 1, v19))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    uint64_t v45 = v20;
  }
  else
  {
    uint64_t v45 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v42, v43, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v42, 0, 1, v19);
  }
  uint64_t v60 = v29[6];
  uint64_t v61 = &v27[v60];
  uint64_t v62 = &v28[v60];
  long long v63 = *(_OWORD *)v62;
  v61[16] = v62[16];
  *(_OWORD *)uint64_t v61 = v63;
  long long v64 = *(_OWORD *)(v62 + 24);
  v61[40] = v62[40];
  *(_OWORD *)(v61 + 24) = v64;
  *((void *)v61 + 6) = *((void *)v62 + 6);
  long long v65 = *(_OWORD *)(v62 + 56);
  long long v66 = *(_OWORD *)(v62 + 72);
  v61[88] = v62[88];
  *(_OWORD *)(v61 + 72) = v66;
  *(_OWORD *)(v61 + 56) = v65;
  *((void *)v61 + 12) = *((void *)v62 + 12);
  *((void *)v61 + 13) = *((void *)v62 + 13);
  uint64_t v67 = *(int *)(v178 + 40);
  uint64_t v68 = &v61[v67];
  uint64_t v69 = &v62[v67];
  if (v177(&v62[v67], 1, v19))
  {
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v68, v69, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v68, 0, 1, v19);
  }
  uint64_t v71 = v29[7];
  uint64_t v72 = &v27[v71];
  uint64_t v73 = &v28[v71];
  long long v74 = *(_OWORD *)v73;
  v72[16] = v73[16];
  *(_OWORD *)uint64_t v72 = v74;
  long long v75 = *(_OWORD *)(v73 + 24);
  v72[40] = v73[40];
  *(_OWORD *)(v72 + 24) = v75;
  *((void *)v72 + 6) = *((void *)v73 + 6);
  long long v76 = *(_OWORD *)(v73 + 56);
  long long v77 = *(_OWORD *)(v73 + 72);
  v72[88] = v73[88];
  *(_OWORD *)(v72 + 72) = v77;
  *(_OWORD *)(v72 + 56) = v76;
  *((void *)v72 + 12) = *((void *)v73 + 12);
  *((void *)v72 + 13) = *((void *)v73 + 13);
  uint64_t v78 = *(int *)(v178 + 40);
  uint64_t v79 = &v72[v78];
  uint64_t v80 = &v73[v78];
  if (v177(&v73[v78], 1, v19))
  {
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v79, v80, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v79, 0, 1, v19);
  }
  uint64_t v82 = v29[8];
  uint64_t v83 = &v27[v82];
  uint64_t v84 = &v28[v82];
  long long v85 = *(_OWORD *)v84;
  v83[16] = v84[16];
  *(_OWORD *)uint64_t v83 = v85;
  long long v86 = *(_OWORD *)(v84 + 24);
  v83[40] = v84[40];
  *(_OWORD *)(v83 + 24) = v86;
  *((void *)v83 + 6) = *((void *)v84 + 6);
  long long v87 = *(_OWORD *)(v84 + 56);
  long long v88 = *(_OWORD *)(v84 + 72);
  v83[88] = v84[88];
  *(_OWORD *)(v83 + 72) = v88;
  *(_OWORD *)(v83 + 56) = v87;
  *((void *)v83 + 12) = *((void *)v84 + 12);
  *((void *)v83 + 13) = *((void *)v84 + 13);
  uint64_t v89 = *(int *)(v178 + 40);
  int v90 = &v83[v89];
  uint64_t v91 = &v84[v89];
  a3 = v175;
  if (v177(&v84[v89], 1, v19))
  {
    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v90, v91, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v90, 0, 1, v19);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
LABEL_50:
  uint64_t v133 = a3[7];
  uint64_t v134 = (uint64_t)v25 + v133;
  uint64_t v135 = (char *)v174 + v133;
  *(void *)((char *)v25 + v133) = *(void *)((char *)v174 + v133);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v134 + 8) = *((void *)v135 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v25 + a3[8]) = *((unsigned char *)v174 + a3[8]);
  *(void *)((char *)v25 + a3[9]) = *(void *)((char *)v174 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v136 = a3[10];
  uint64_t v137 = (uint64_t)v25 + v136;
  v138 = (char *)v174 + v136;
  uint64_t v139 = *(void *)(v178 - 8);
  id v140 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 48);
  int v141 = v140((char *)v25 + v136, 1, v178);
  int v142 = v140(v138, 1, v178);
  if (!v141)
  {
    if (!v142)
    {
      long long v153 = *(_OWORD *)v138;
      *(unsigned char *)(v137 + 16) = v138[16];
      *(_OWORD *)uint64_t v137 = v153;
      long long v154 = *(_OWORD *)(v138 + 24);
      *(unsigned char *)(v137 + 40) = v138[40];
      *(_OWORD *)(v137 + 24) = v154;
      *(void *)(v137 + 48) = *((void *)v138 + 6);
      long long v155 = *(_OWORD *)(v138 + 56);
      long long v156 = *(_OWORD *)(v138 + 72);
      *(unsigned char *)(v137 + 88) = v138[88];
      *(_OWORD *)(v137 + 72) = v156;
      *(_OWORD *)(v137 + 56) = v155;
      *(void *)(v137 + 96) = *((void *)v138 + 12);
      *(void *)(v137 + 104) = *((void *)v138 + 13);
      uint64_t v157 = *(int *)(v178 + 40);
      v158 = (char *)(v137 + v157);
      v159 = &v138[v157];
      int v160 = v177(v158, 1, v19);
      int v161 = v177(v159, 1, v19);
      if (v160)
      {
        uint64_t v150 = v174;
        uint64_t v25 = v176;
        if (!v161)
        {
          (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v158, v159, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v158, 0, 1, v19);
          goto LABEL_65;
        }
      }
      else
      {
        uint64_t v150 = v174;
        uint64_t v25 = v176;
        if (!v161)
        {
          (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v158, v159, v19);
          goto LABEL_65;
        }
        (*(void (**)(char *, uint64_t))(v173 + 8))(v158, v19);
      }
      uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v158, v159, *(void *)(*(void *)(v162 - 8) + 64));
      goto LABEL_65;
    }
    sub_191CB7E80(v137, type metadata accessor for MetricsRequest);
LABEL_56:
    uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
    memcpy((void *)v137, v138, *(void *)(*(void *)(v152 - 8) + 64));
    uint64_t v150 = v174;
    goto LABEL_65;
  }
  if (v142) {
    goto LABEL_56;
  }
  long long v143 = *(_OWORD *)v138;
  *(unsigned char *)(v137 + 16) = v138[16];
  *(_OWORD *)uint64_t v137 = v143;
  long long v144 = *(_OWORD *)(v138 + 24);
  *(unsigned char *)(v137 + 40) = v138[40];
  *(_OWORD *)(v137 + 24) = v144;
  *(void *)(v137 + 48) = *((void *)v138 + 6);
  long long v145 = *(_OWORD *)(v138 + 56);
  long long v146 = *(_OWORD *)(v138 + 72);
  *(unsigned char *)(v137 + 88) = v138[88];
  *(_OWORD *)(v137 + 72) = v146;
  *(_OWORD *)(v137 + 56) = v145;
  *(void *)(v137 + 96) = *((void *)v138 + 12);
  *(void *)(v137 + 104) = *((void *)v138 + 13);
  uint64_t v147 = *(int *)(v178 + 40);
  uint64_t v148 = (void *)(v137 + v147);
  uint64_t v149 = &v138[v147];
  uint64_t v150 = v174;
  if (v177(v149, 1, v19))
  {
    uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v173 + 16))(v148, v149, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v148, 0, 1, v19);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v139 + 56))(v137, 0, 1, v178);
LABEL_65:
  uint64_t v163 = a3[11];
  v164 = (char *)v25 + v163;
  v165 = (char *)v150 + v163;
  uint64_t v166 = sub_191CF4058();
  uint64_t v167 = *(void *)(v166 - 8);
  uint64_t v168 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48);
  int v169 = v168(v164, 1, v166);
  int v170 = v168(v165, 1, v166);
  if (!v169)
  {
    if (!v170)
    {
      (*(void (**)(char *, char *, uint64_t))(v167 + 24))(v164, v165, v166);
      goto LABEL_71;
    }
    (*(void (**)(char *, uint64_t))(v167 + 8))(v164, v166);
    goto LABEL_70;
  }
  if (v170)
  {
LABEL_70:
    uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v164, v165, *(void *)(*(void *)(v171 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
LABEL_71:
  *((unsigned char *)v25 + a3[12]) = *((unsigned char *)v150 + a3[12]);
  return v25;
}

uint64_t sub_191CB7E80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_191CB7EE0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)((char *)a2 + v5);
  v6[16] = *((unsigned char *)a2 + v5 + 16);
  v6[40] = *((unsigned char *)a2 + v5 + 40);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)((char *)a2 + v5 + 24);
  *((void *)v6 + 6) = *(void *)((char *)a2 + v5 + 48);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)((char *)a2 + v5 + 72);
  v6[88] = *((unsigned char *)a2 + v5 + 88);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)((char *)a2 + v5 + 56);
  *((_OWORD *)v6 + 6) = *(_OWORD *)((char *)a2 + v5 + 96);
  uint64_t v8 = type metadata accessor for MetricsRequest(0);
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_191CF43F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v68 = v13;
  if (v70(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  uint64_t v18 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    uint64_t v21 = v18[5];
    int v22 = &v16[v21];
    int v23 = &v17[v21];
    v22[16] = v23[16];
    *(_OWORD *)int v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
    v22[40] = v23[40];
    *((void *)v22 + 6) = *((void *)v23 + 6);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    v22[88] = v23[88];
    *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
    uint64_t v67 = v8;
    uint64_t v24 = *(int *)(v8 + 40);
    uint64_t v25 = &v22[v24];
    uint64_t v26 = &v23[v24];
    if (v70(&v23[v24], 1, v12))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v25, 0, 1, v12);
    }
    uint64_t v28 = v18[6];
    uint64_t v29 = &v16[v28];
    uint64_t v30 = &v17[v28];
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
    unsigned char v29[40] = v30[40];
    *((void *)v29 + 6) = *((void *)v30 + 6);
    *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
    *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
    v29[88] = v30[88];
    *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
    uint64_t v31 = *(int *)(v67 + 40);
    int v32 = &v29[v31];
    int v33 = &v30[v31];
    if (v70(&v30[v31], 1, v12))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v32, 0, 1, v12);
    }
    uint64_t v35 = v18[7];
    uint64_t v36 = &v16[v35];
    long long v37 = &v17[v35];
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
    v36[40] = v37[40];
    *((void *)v36 + 6) = *((void *)v37 + 6);
    *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
    *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
    v36[88] = v37[88];
    *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
    uint64_t v38 = *(int *)(v67 + 40);
    long long v39 = &v36[v38];
    long long v40 = &v37[v38];
    if (v70(&v37[v38], 1, v12))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v39, v40, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v39, 0, 1, v12);
    }
    uint64_t v42 = v18[8];
    uint64_t v43 = &v16[v42];
    uint64_t v44 = &v17[v42];
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    v43[16] = v44[16];
    *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
    v43[40] = v44[40];
    *((void *)v43 + 6) = *((void *)v44 + 6);
    *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
    *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
    v43[88] = v44[88];
    *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
    uint64_t v8 = v67;
    uint64_t v45 = *(int *)(v67 + 40);
    uint64_t v46 = &v43[v45];
    uint64_t v47 = &v44[v45];
    if (v70(&v44[v45], 1, v12))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v46, v47, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v46, 0, 1, v12);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v49 = a3;
  uint64_t v50 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  uint64_t v51 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  long long v52 = (_OWORD *)((char *)a1 + v51);
  long long v53 = (_OWORD *)((char *)a2 + v51);
  uint64_t v54 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))((char *)a2 + v51, 1, v8))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *long long v52 = *v53;
    *((unsigned char *)v52 + 16) = *((unsigned char *)v53 + 16);
    *(_OWORD *)((char *)v52 + 24) = *(_OWORD *)((char *)v53 + 24);
    *((unsigned char *)v52 + 40) = *((unsigned char *)v53 + 40);
    *((void *)v52 + 6) = *((void *)v53 + 6);
    *(_OWORD *)((char *)v52 + 56) = *(_OWORD *)((char *)v53 + 56);
    *(_OWORD *)((char *)v52 + 72) = *(_OWORD *)((char *)v53 + 72);
    *((unsigned char *)v52 + 88) = *((unsigned char *)v53 + 88);
    void v52[6] = v53[6];
    uint64_t v56 = *(int *)(v8 + 40);
    int v57 = (char *)v52 + v56;
    int v58 = (char *)v53 + v56;
    if (v70(v58, 1, v12))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v57, v58, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v57, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v8);
    uint64_t v49 = a3;
  }
  uint64_t v60 = v49[11];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)a2 + v60;
  uint64_t v63 = sub_191CF4058();
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  *((unsigned char *)a1 + v49[12]) = *((unsigned char *)a2 + v49[12]);
  return a1;
}

void *sub_191CB8800(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  int v130 = a2;
  uint64_t v10 = (char *)a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((unsigned char *)a2 + v8 + 16);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
  v9[40] = *((unsigned char *)a2 + v8 + 40);
  *((void *)v9 + 6) = *(void *)((char *)a2 + v8 + 48);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
  v9[88] = *((unsigned char *)a2 + v8 + 88);
  *((_OWORD *)v9 + 6) = *(_OWORD *)((char *)a2 + v8 + 96);
  uint64_t v133 = type metadata accessor for MetricsRequest(0);
  uint64_t v11 = *(int *)(v133 + 40);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = sub_191CF43F8();
  uint64_t v132 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 48);
  int v16 = v15(v12, 1, v14);
  uint64_t v129 = v15;
  int v17 = v15(v13, 1, v14);
  int v131 = a3;
  if (v16)
  {
    if (v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = v132;
    }
    else
    {
      uint64_t v19 = v132;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v12, 0, 1, v14);
    }
  }
  else
  {
    uint64_t v19 = v132;
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v132 + 8))(v12, v14);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 40))(v12, v13, v14);
    }
  }
  uint64_t v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  int v22 = &v9[v21];
  int v23 = &v10[v21];
  uint64_t v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_191CB7E80((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_14;
    }
    *(_OWORD *)int v22 = *(_OWORD *)v23;
    uint64_t v37 = v24[5];
    uint64_t v38 = &v22[v37];
    long long v39 = &v23[v37];
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((void *)v38 + 6) = *((void *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    uint64_t v40 = *(int *)(v133 + 40);
    uint64_t v41 = &v38[v40];
    uint64_t v42 = &v39[v40];
    int v43 = v129(&v38[v40], 1, v14);
    int v44 = v129(v42, 1, v14);
    if (v43)
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v41, v42, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v14);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v41, v42, v14);
LABEL_32:
        uint64_t v67 = v24[6];
        uint64_t v68 = &v22[v67];
        uint64_t v69 = &v23[v67];
        *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
        v68[16] = v69[16];
        *(_OWORD *)(v68 + 24) = *(_OWORD *)(v69 + 24);
        v68[40] = v69[40];
        *((void *)v68 + 6) = *((void *)v69 + 6);
        *(_OWORD *)(v68 + 56) = *(_OWORD *)(v69 + 56);
        *(_OWORD *)(v68 + 72) = *(_OWORD *)(v69 + 72);
        v68[88] = v69[88];
        *((_OWORD *)v68 + 6) = *((_OWORD *)v69 + 6);
        uint64_t v70 = *(int *)(v133 + 40);
        uint64_t v71 = &v68[v70];
        uint64_t v72 = &v69[v70];
        int v73 = v129(&v68[v70], 1, v14);
        int v74 = v129(v72, 1, v14);
        if (v73)
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v71, v72, v14);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v71, 0, 1, v14);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v71, v72, v14);
LABEL_38:
            uint64_t v76 = v24[7];
            long long v77 = &v22[v76];
            uint64_t v78 = &v23[v76];
            *(_OWORD *)long long v77 = *(_OWORD *)v78;
            v77[16] = v78[16];
            *(_OWORD *)(v77 + 24) = *(_OWORD *)(v78 + 24);
            v77[40] = v78[40];
            *((void *)v77 + 6) = *((void *)v78 + 6);
            *(_OWORD *)(v77 + 56) = *(_OWORD *)(v78 + 56);
            *(_OWORD *)(v77 + 72) = *(_OWORD *)(v78 + 72);
            v77[88] = v78[88];
            *((_OWORD *)v77 + 6) = *((_OWORD *)v78 + 6);
            uint64_t v79 = *(int *)(v133 + 40);
            uint64_t v80 = &v77[v79];
            uint64_t v81 = &v78[v79];
            int v82 = v129(&v77[v79], 1, v14);
            int v83 = v129(v81, 1, v14);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v80, v81, v14);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v80, 0, 1, v14);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v80, v81, v14);
LABEL_44:
                a3 = v131;
                uint64_t v85 = v24[8];
                long long v86 = &v22[v85];
                long long v87 = &v23[v85];
                *(_OWORD *)long long v86 = *(_OWORD *)v87;
                v86[16] = v87[16];
                *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
                v86[40] = v87[40];
                *((void *)v86 + 6) = *((void *)v87 + 6);
                *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
                *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
                v86[88] = v87[88];
                *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
                uint64_t v88 = *(int *)(v133 + 40);
                uint64_t v89 = &v86[v88];
                int v90 = &v87[v88];
                int v91 = v129(&v86[v88], 1, v14);
                int v92 = v129(v90, 1, v14);
                if (v91)
                {
                  if (!v92)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v89, v90, v14);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v89, 0, 1, v14);
                    goto LABEL_50;
                  }
                }
                else
                {
                  if (!v92)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v132 + 40))(v89, v90, v14);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v132 + 8))(v89, v14);
                }
                uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v19 + 8))(v80, v14);
            }
            uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v19 + 8))(v71, v14);
        }
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v41, v14);
    }
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v41, v42, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_32;
  }
  if (v28)
  {
LABEL_14:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v22, v23, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_50;
  }
  *(_OWORD *)int v22 = *(_OWORD *)v23;
  uint64_t v29 = v24[5];
  uint64_t v30 = &v22[v29];
  uint64_t v31 = &v23[v29];
  v30[16] = v31[16];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *((void *)v30 + 6) = *((void *)v31 + 6);
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  uint64_t v32 = *(int *)(v133 + 40);
  int v33 = &v30[v32];
  uint64_t v34 = &v31[v32];
  if (v129(&v31[v32], 1, v14))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v33, v34, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v33, 0, 1, v14);
  }
  uint64_t v45 = v24[6];
  uint64_t v46 = &v22[v45];
  uint64_t v47 = &v23[v45];
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  v46[16] = v47[16];
  *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 24);
  v46[40] = v47[40];
  *((void *)v46 + 6) = *((void *)v47 + 6);
  *(_OWORD *)(v46 + 56) = *(_OWORD *)(v47 + 56);
  *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
  v46[88] = v47[88];
  *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
  uint64_t v48 = *(int *)(v133 + 40);
  uint64_t v49 = &v46[v48];
  uint64_t v50 = &v47[v48];
  if (v129(&v47[v48], 1, v14))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v49, v50, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v49, 0, 1, v14);
  }
  uint64_t v52 = v24[7];
  long long v53 = &v22[v52];
  uint64_t v54 = &v23[v52];
  *(_OWORD *)long long v53 = *(_OWORD *)v54;
  v53[16] = v54[16];
  *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
  v53[40] = v54[40];
  *((void *)v53 + 6) = *((void *)v54 + 6);
  *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
  *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
  v53[88] = v54[88];
  *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
  uint64_t v55 = *(int *)(v133 + 40);
  uint64_t v56 = &v53[v55];
  int v57 = &v54[v55];
  if (v129(&v54[v55], 1, v14))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v56, v57, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v56, 0, 1, v14);
  }
  uint64_t v59 = v24[8];
  uint64_t v60 = &v22[v59];
  uint64_t v61 = &v23[v59];
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  v60[16] = v61[16];
  *(_OWORD *)(v60 + 24) = *(_OWORD *)(v61 + 24);
  v60[40] = v61[40];
  *((void *)v60 + 6) = *((void *)v61 + 6);
  *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
  v60[88] = v61[88];
  *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
  uint64_t v62 = *(int *)(v133 + 40);
  uint64_t v63 = &v60[v62];
  uint64_t v64 = &v61[v62];
  a3 = v131;
  if (v129(&v61[v62], 1, v14))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v63, v64, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v63, 0, 1, v14);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_50:
  uint64_t v94 = a3[7];
  int v95 = (char *)a1 + v94;
  uint64_t v96 = (char *)v130 + v94;
  *(void *)((char *)a1 + v94) = *(void *)((char *)v130 + v94);
  swift_bridgeObjectRelease();
  *((void *)v95 + 1) = *((void *)v96 + 1);
  swift_bridgeObjectRelease();
  uint64_t v97 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)v130 + a3[8]);
  *(void *)((char *)a1 + v97) = *(void *)((char *)v130 + v97);
  swift_bridgeObjectRelease();
  long long v98 = a3;
  uint64_t v99 = a3[10];
  uint64_t v100 = (uint64_t)a1 + v99;
  uint64_t v101 = (char *)v130 + v99;
  uint64_t v102 = *(void *)(v133 - 8);
  uint64_t v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
  int v104 = v103((char *)a1 + v99, 1, v133);
  int v105 = v103(v101, 1, v133);
  if (!v104)
  {
    if (!v105)
    {
      *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
      *(unsigned char *)(v100 + 16) = v101[16];
      *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
      *(unsigned char *)(v100 + 40) = v101[40];
      *(void *)(v100 + 48) = *((void *)v101 + 6);
      *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
      *(_OWORD *)(v100 + 72) = *(_OWORD *)(v101 + 72);
      *(unsigned char *)(v100 + 88) = v101[88];
      *(_OWORD *)(v100 + 96) = *((_OWORD *)v101 + 6);
      uint64_t v113 = *(int *)(v133 + 40);
      uint64_t v114 = (char *)(v100 + v113);
      uint64_t v115 = &v101[v113];
      int v116 = v129(v114, 1, v14);
      int v117 = v129(v115, 1, v14);
      uint64_t v109 = v98;
      long long v110 = v130;
      if (v116)
      {
        if (!v117)
        {
          (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v114, v115, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v114, 0, 1, v14);
          goto LABEL_65;
        }
      }
      else
      {
        if (!v117)
        {
          (*(void (**)(char *, char *, uint64_t))(v132 + 40))(v114, v115, v14);
          goto LABEL_65;
        }
        (*(void (**)(char *, uint64_t))(v132 + 8))(v114, v14);
      }
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v114, v115, *(void *)(*(void *)(v118 - 8) + 64));
      goto LABEL_65;
    }
    sub_191CB7E80(v100, type metadata accessor for MetricsRequest);
LABEL_56:
    uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
    memcpy((void *)v100, v101, *(void *)(*(void *)(v112 - 8) + 64));
    uint64_t v109 = v98;
    long long v110 = v130;
    goto LABEL_65;
  }
  if (v105) {
    goto LABEL_56;
  }
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
  *(unsigned char *)(v100 + 16) = v101[16];
  *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
  *(unsigned char *)(v100 + 40) = v101[40];
  *(void *)(v100 + 48) = *((void *)v101 + 6);
  *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
  *(_OWORD *)(v100 + 72) = *(_OWORD *)(v101 + 72);
  *(unsigned char *)(v100 + 88) = v101[88];
  *(_OWORD *)(v100 + 96) = *((_OWORD *)v101 + 6);
  uint64_t v106 = *(int *)(v133 + 40);
  uint64_t v107 = (void *)(v100 + v106);
  uint64_t v108 = &v101[v106];
  uint64_t v109 = v98;
  long long v110 = v130;
  if (v129(v108, 1, v14))
  {
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v132 + 32))(v107, v108, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v107, 0, 1, v14);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v100, 0, 1, v133);
LABEL_65:
  uint64_t v119 = v109[11];
  uint64_t v120 = (char *)a1 + v119;
  uint64_t v121 = (char *)v110 + v119;
  uint64_t v122 = sub_191CF4058();
  uint64_t v123 = *(void *)(v122 - 8);
  long long v124 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 48);
  int v125 = v124(v120, 1, v122);
  int v126 = v124(v121, 1, v122);
  if (!v125)
  {
    if (!v126)
    {
      (*(void (**)(char *, char *, uint64_t))(v123 + 40))(v120, v121, v122);
      goto LABEL_71;
    }
    (*(void (**)(char *, uint64_t))(v123 + 8))(v120, v122);
    goto LABEL_70;
  }
  if (v126)
  {
LABEL_70:
    uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
    memcpy(v120, v121, *(void *)(*(void *)(v127 - 8) + 64));
    goto LABEL_71;
  }
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v120, v121, v122);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
LABEL_71:
  *((unsigned char *)a1 + v109[12]) = *((unsigned char *)v110 + v109[12]);
  return a1;
}

uint64_t sub_191CB99C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CB99D8);
}

uint64_t sub_191CB99D8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for ActivityMetricsDefinition(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_191CB9B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CB9B6C);
}

uint64_t sub_191CB9B6C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for ActivityMetricsDefinition(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for ActivityViewStates(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E1CE0);
}

void sub_191CB9D0C()
{
  type metadata accessor for ActivityMetricsDefinition(319);
  if (v0 <= 0x3F)
  {
    sub_191CB9E84(319, &qword_1E92E2268, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
    if (v1 <= 0x3F)
    {
      sub_191CB9E84(319, (unint64_t *)&qword_1EB44B1A8, MEMORY[0x1E4F3D2F8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_191CB9E84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191CB9ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v9 = sub_191CF4058();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = *a3;
  char v17 = *a4;
  *a5 = 0;
  uint64_t v18 = (int *)type metadata accessor for ActivityViewStates(0);
  *((unsigned char *)a5 + v18[8]) = 0;
  *(uint64_t *)((char *)a5 + v18[9]) = MEMORY[0x1E4FBC868];
  uint64_t v19 = (char *)a5 + v18[10];
  uint64_t v20 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)a5 + v18[11], 1, 1, v9);
  uint64_t v21 = (uint64_t)a5 + v18[6];
  uint64_t v31 = a2;
  sub_191CBCF38(a2, v21, type metadata accessor for ActivityMetricsDefinition);
  *((unsigned char *)a5 + v18[12]) = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1850);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
  *(void *)(v22 + 32) = v33;
  uint64_t v34 = v22;
  sub_191CF5558();
  uint64_t v23 = v34;
  swift_retain();
  id v24 = v32;
  swift_bridgeObjectRetain();
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v16[*(int *)(v14 + 28)], v12, v9);
  *(void *)uint64_t v16 = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v25 = sub_191AFE1D0((uint64_t)v16);
  sub_191CB7E80((uint64_t)v16, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  int v27 = (uint64_t *)((char *)a5 + v18[7]);
  *int v27 = v23;
  v27[1] = v25;
  uint64_t v28 = *(void *)(v23 + 16);
  uint64_t v29 = *(void *)(v25 + 16);
  uint64_t v30 = v28 * v29;
  if ((unsigned __int128)(v28 * (__int128)v29) >> 64 == (v28 * v29) >> 63)
  {
    uint64_t result = sub_191CB7E80(v31, type metadata accessor for ActivityMetricsDefinition);
    *a5 = v30;
    a5[1] = (uint64_t)v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int64_t sub_191CBA1E4(double a1, double a2)
{
  uint64_t v5 = sub_191CF3418();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t result = CGImageGetColorSpace(v2);
  if (!result) {
    return 0;
  }
  if (a1 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((*(void *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_19;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v10 = (CGColorSpace *)result;
  int64_t BitsPerPixel = CGImageGetBitsPerPixel(v2);
  int64_t result = CGImageGetBitsPerComponent(v2);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (BitsPerPixel == 0x8000000000000000 && result == -1) {
    goto LABEL_24;
  }
  uint64_t v12 = BitsPerPixel / result;
  int64_t v13 = (uint64_t)a1 * (BitsPerPixel / result);
  if ((unsigned __int128)((uint64_t)a1 * (__int128)v12) >> 64 == v13 >> 63)
  {
    size_t BitsPerComponent = CGImageGetBitsPerComponent(v2);
    uint32_t AlphaInfo = CGImageGetAlphaInfo(v2);
    CGContextRef v16 = CGBitmapContextCreate(0, (uint64_t)a1, (uint64_t)a2, BitsPerComponent, v13, v10, AlphaInfo);
    if (v16)
    {
      CGContextRef v17 = v16;
      double v18 = CGRectMake();
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      uint64_t v25 = v17;
      v29.origin.x = v18;
      v29.origin.y = v20;
      v29.size.width = v22;
      v29.size.height = v24;
      CGRectGetMinX(v29);
      v30.origin.x = v18;
      v30.origin.y = v20;
      v30.size.width = v22;
      v30.size.height = v24;
      v28[1] = CGRectGetMidX(v30);
      v31.origin.x = v18;
      v31.origin.y = v20;
      v31.size.width = v22;
      v31.size.height = v24;
      CGRectGetMaxX(v31);
      v32.origin.x = v18;
      v32.origin.y = v20;
      v32.size.width = v22;
      v32.size.height = v24;
      CGRectGetMinY(v32);
      v33.origin.x = v18;
      v33.origin.y = v20;
      v33.size.width = v22;
      v33.size.height = v24;
      CGRectGetMidY(v33);
      v34.origin.x = v18;
      v34.origin.y = v20;
      v34.size.width = v22;
      v34.size.height = v24;
      CGRectGetMaxY(v34);
      GenericRGB = CGColorCreateGenericRGB(0.25, 0.25, 0.25, 1.0);
      CGContextSetFillColorWithColor(v25, GenericRGB);

      sub_191CF58A8();
      sub_191CF58B8();
      sub_191CF58B8();
      sub_191CF58B8();
      sub_191CF58B8();
      CGContextClosePath(v25);
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F1DA40], v5);
      sub_191CF58C8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      CGImageRef Image = CGBitmapContextCreateImage(v25);

      return (int64_t)Image;
    }

    return 0;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_191CBA5B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1838);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CBD11C();
  sub_191CF6528();
  LOBYTE(v12) = 0;
  sub_191CF31D8();
  sub_191CBB08C(&qword_1E92E1178, MEMORY[0x1E4F27990]);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
    uint64_t v12 = *(void *)(v3 + v9[5]);
    HIBYTE(v11) = 1;
    sub_191B717BC();
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + v9[6]);
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD8);
    sub_191CBD1C4((unint64_t *)&unk_1E92E17D8, (void (*)(void))sub_191CBD234);
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + v9[7]);
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD0);
    sub_191C26BF0(&qword_1E92E17D0, (void (*)(void))sub_191C26C6C);
    sub_191CF6278();
    LOBYTE(v12) = *(unsigned char *)(v3 + v9[8]);
    HIBYTE(v11) = 4;
    sub_191BEDED0();
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_191CBA8D0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_191CF31D8();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v18 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C20);
  uint64_t v16 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CBD11C();
  CGFloat v20 = v7;
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v14 = a1;
    uint64_t v11 = v17;
    LOBYTE(v22) = 0;
    sub_191CBB08C((unint64_t *)&unk_1E92E0A88, MEMORY[0x1E4F27990]);
    uint64_t v12 = v18;
    uint64_t v13 = v19;
    sub_191CF6178();
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v10, v12, v4);
    char v21 = 1;
    sub_191B715A4();
    sub_191CF6178();
    *(void *)&v10[v8[5]] = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD8);
    char v21 = 2;
    sub_191CBD1C4(&qword_1E92E0BC8, (void (*)(void))sub_191CBD170);
    sub_191CF6178();
    *(void *)&v10[v8[6]] = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1DD0);
    char v21 = 3;
    sub_191C26BF0(&qword_1E92E0BC0, (void (*)(void))sub_191C26B34);
    sub_191CF6178();
    *(void *)&v10[v8[7]] = v22;
    char v21 = 4;
    sub_191BEDFCC();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v13);
    v10[v8[8]] = v22;
    sub_191CBCF38((uint64_t)v10, v15, type metadata accessor for ActivityViewStates.Metadata);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    sub_191CB7E80((uint64_t)v10, type metadata accessor for ActivityViewStates.Metadata);
  }
}

unint64_t sub_191CBAE74()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 2:
      unint64_t result = 0x7367615477656976;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x6465766968637261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191CBAF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191CBD4A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191CBAF54(uint64_t a1)
{
  unint64_t v2 = sub_191CBD11C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CBAF90(uint64_t a1)
{
  unint64_t v2 = sub_191CBD11C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_191CBAFCC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_191CBAFE4(void *a1)
{
  return sub_191CBA5B4(a1);
}

uint64_t sub_191CBAFFC()
{
  return sub_191CBB08C(&qword_1E92E0B28, (void (*)(uint64_t))type metadata accessor for ActivityViewStates.Metadata);
}

uint64_t sub_191CBB044()
{
  return sub_191CBB08C(&qword_1E92E14F8, (void (*)(uint64_t))type metadata accessor for ActivityViewStates.Metadata);
}

uint64_t sub_191CBB08C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191CBB0D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_191CF31C8();
  uint64_t v9 = *(void **)(v1 + 8);
  id v4 = v9;
  WidgetEnvironment.filterForArchiving()();
  uint64_t v5 = type metadata accessor for ActivityViewStates(0);
  uint64_t v6 = *(void *)(v1 + *(int *)(v5 + 36));
  LOBYTE(v2) = *(unsigned char *)(v2 + *(int *)(v5 + 48));
  uint64_t v7 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  *(void *)(a1 + v7[5]) = v9;
  *(void *)(a1 + v7[6]) = &unk_1EE29F4D8;
  *(void *)(a1 + v7[7]) = v6;
  *(unsigned char *)(a1 + v7[8]) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_191CBB17C(uint64_t a1, uint64_t a2)
{
  uint64_t v148 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E26E8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v137 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_191CF3998();
  uint64_t v142 = *(void *)(v138 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v138);
  uint64_t v123 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v143 = (char *)&v119 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A10);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v119 - v13;
  uint64_t v15 = sub_191CF3CF8();
  MEMORY[0x1F4188790](v15 - 8);
  *(void *)&long long v134 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v135 = (uint64_t)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v127 = (uint64_t)&v119 - v20;
  uint64_t v129 = type metadata accessor for CommonActivityArchivingModifiers();
  uint64_t v21 = MEMORY[0x1F4188790](v129);
  uint64_t v128 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v131 = (uint64_t)&v119 - v23;
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1220);
  uint64_t v24 = MEMORY[0x1F4188790](v132);
  uint64_t v130 = (uint64_t)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v149 = (uint64_t *)((char *)&v119 - v26);
  uint64_t v139 = sub_191CF43A8();
  uint64_t v125 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  uint64_t v28 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for MetricsRequest(0);
  uint64_t v140 = *(void *)(v146 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v146);
  uint64_t v133 = (uint64_t)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  int v126 = (uint64_t *)((char *)&v119 - v32);
  MEMORY[0x1F4188790](v31);
  uint64_t v136 = (uint64_t)&v119 - v33;
  uint64_t v147 = sub_191CF4058();
  uint64_t v34 = *(void *)(v147 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v147);
  int v141 = (char *)&v119 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  long long v39 = (char *)&v119 - v38;
  MEMORY[0x1F4188790](v37);
  long long v153 = (char *)&v119 - v40;
  uint64_t result = type metadata accessor for ActivityViewStates(0);
  uint64_t v152 = result;
  uint64_t v42 = (uint64_t *)(v2 + *(int *)(result + 28));
  uint64_t v43 = v42[1];
  uint64_t v44 = *(void *)(v43 + 16);
  if (!v44)
  {
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v45 = a1 / v44;
  if (a1 / v44 < 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v46 = *v42;
  if (v45 >= *(void *)(v46 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v47 = a1 % v44;
  if (v47 < 0)
  {
LABEL_37:
    __break(1u);
    return result;
  }
  uint64_t v120 = v12;
  uint64_t v121 = v9;
  uint64_t v122 = v14;
  uint64_t v151 = v39;
  uint64_t v124 = a1;
  uint64_t v48 = *(void *)(v46 + 8 * v45 + 32);
  unint64_t v49 = v43
      + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
      + *(void *)(v34 + 72) * v47;
  uint64_t v50 = v34 + 16;
  uint64_t v150 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
  uint64_t v51 = v153;
  uint64_t v145 = v34;
  uint64_t v52 = v147;
  v150(v153, v49, v147);
  uint64_t v53 = v152;
  uint64_t v144 = v48;
  swift_retain();
  uint64_t v54 = v2;
  sub_191CF3D88();
  uint64_t v55 = v136;
  ActivityMetricsDefinition.listItemMetrics(for:)((uint64_t)v28, v136);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v28, v139);
  uint64_t v56 = v2 + *(int *)(v53 + 40);
  sub_191B01770(v56, &qword_1E92E1A50);
  sub_191CBCF38(v55, v56, type metadata accessor for MetricsRequest);
  uint64_t v57 = v146;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v140 + 56))(v56, 0, 1, v146);
  uint64_t v58 = *(int *)(v53 + 44);
  uint64_t v140 = v54;
  uint64_t v59 = (char *)(v54 + v58);
  sub_191B01770(v54 + v58, (uint64_t *)&unk_1EB44BBB8);
  uint64_t v139 = v50;
  v150(v59, (unint64_t)v51, v52);
  uint64_t v60 = v55;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v59, 0, 1, v52);
  uint64_t v61 = v55;
  uint64_t v62 = (uint64_t (*)(void, void, void))v126;
  sub_191CBCF38(v61, (uint64_t)v126, type metadata accessor for MetricsRequest);
  uint64_t v63 = (uint64_t)v128;
  *uint64_t v128 = 4;
  uint64_t v64 = v129;
  uint64_t v65 = v63 + *(int *)(v129 + 20);
  sub_191CBCED0((uint64_t)v62, v65, type metadata accessor for MetricsRequest);
  uint64_t v66 = v65 + *(int *)(v57 + 40);
  uint64_t v67 = v127;
  sub_191B01614(v66, v127, &qword_1E92E1F80);
  uint64_t v68 = sub_191CF43F8();
  int v126 = *(void **)(*(void *)(v68 - 8) + 48);
  int v69 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v126)(v67, 1, v68);
  sub_191B01770(v67, &qword_1E92E1F80);
  if (v69 == 1)
  {
    uint64_t v70 = type metadata accessor for DefaultActivityFontDefinition();
    uint64_t v71 = (unint64_t *)&unk_1E92E1708;
    uint64_t v72 = type metadata accessor for DefaultActivityFontDefinition;
  }
  else
  {
    uint64_t v70 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition();
    uint64_t v71 = &qword_1E92E3B18;
    uint64_t v72 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition;
  }
  uint64_t v73 = sub_191CBB08C(v71, (void (*)(uint64_t))v72);
  int v74 = (uint64_t *)(v63 + *(int *)(v64 + 24));
  *int v74 = v70;
  v74[1] = v73;
  uint64_t v75 = v131;
  sub_191CBCED0(v63, v131, (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
  uint64_t v76 = v149;
  sub_191CBCF38(v75, (uint64_t)v149 + *(int *)(v132 + 36), (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
  *uint64_t v76 = v144;
  swift_retain();
  sub_191CB7E80(v75, (uint64_t (*)(void))type metadata accessor for CommonActivityArchivingModifiers);
  sub_191B01614((uint64_t)v76, v130, &qword_1E92E1220);
  sub_191CBCFA0();
  *(void *)&long long v154 = sub_191CF5038();
  sub_191CF4338();
  uint64_t v78 = (void (*)(char *, char *, uint64_t))v150;
  long long v77 = v151;
  v150(v151, (unint64_t)v153, v52);
  sub_191CF3CD8();
  sub_191CF3EB8();
  v78(v141, v77, v52);
  sub_191CF41D8();
  uint64_t v79 = v133;
  sub_191CBCF38(v60, v133, type metadata accessor for MetricsRequest);
  LOBYTE(v77) = *(unsigned char *)(v79 + 16);
  char v80 = *(unsigned char *)(v79 + 40);
  sub_191CB7E80(v79, type metadata accessor for MetricsRequest);
  LOBYTE(v154) = (_BYTE)v77;
  LOBYTE(v166) = v80;
  sub_191CF41E8();
  double v82 = v81;
  double v84 = v83;
  uint64_t v85 = v135;
  sub_191B01614(v60 + *(int *)(v146 + 40), v135, &qword_1E92E1F80);
  LODWORD(v77) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v126)(v85, 1, v68);
  sub_191B01770(v85, &qword_1E92E1F80);
  if (v77 == 1)
  {
    uint64_t v86 = v142;
    long long v87 = v143;
    uint64_t v88 = (uint64_t)v137;
    if (*(unsigned char *)(v60 + 40))
    {
      double v89 = *(double *)(v60 + 32);
      double v90 = *(double *)(v60 + 24);
      if (v89 >= v84) {
        double v89 = v84;
      }
      if (v89 > *(double *)(v60 + 24)) {
        double v90 = v89;
      }
    }
    else
    {
      double v90 = *(double *)(v60 + 24);
    }
  }
  else
  {
    double v90 = *(double *)(v60 + 24);
    uint64_t v86 = v142;
    long long v87 = v143;
    uint64_t v88 = (uint64_t)v137;
  }
  if (*(unsigned char *)(v60 + 16))
  {
    double v91 = *(double *)(v60 + 8);
    double v92 = *(double *)v60;
    if (v91 >= v82) {
      double v91 = v82;
    }
    if (v91 > *(double *)v60) {
      double v92 = v91;
    }
  }
  else
  {
    double v92 = *(double *)v60;
  }
  double v93 = *(double *)(v60 + 48);
  double v94 = *(double *)(v60 + 104);
  if (v94 != 1.0)
  {
    sub_191CF3D68();
    uint64_t v96 = v95;
    uint64_t v97 = (uint64_t)v122;
    sub_191B01614((uint64_t)v149, (uint64_t)v122, &qword_1E92E1220);
    uint64_t v98 = v97 + *(int *)(v121 + 36);
    *(double *)uint64_t v98 = v92;
    *(double *)(v98 + 8) = v90;
    *(double *)(v98 + 16) = v93;
    *(double *)(v98 + 24) = v94;
    *(void *)(v98 + 32) = v96;
    sub_191B01614(v97, (uint64_t)v120, &qword_1E92E1A10);
    sub_191CBD04C();
    *(void *)&long long v154 = sub_191CF5038();
    sub_191CF4338();
    sub_191CF3D68();
    double v100 = 1.0 / v99;
    double v92 = v100 * floor((v92 * v94 + v100 * 0.5) / v100);
    double v90 = v100 * floor((v90 * v94 + v100 * 0.5) / v100);
    long long v87 = v143;
    sub_191B01770(v97, &qword_1E92E1A10);
  }
  sub_191CB4E78();
  sub_191CF4268();
  uint64_t v137 = (char *)*((void *)&v154 + 1);
  uint64_t v146 = v154;
  LODWORD(v135) = LOBYTE(v155);
  sub_191CBD0C8();
  sub_191CF4268();
  long long v101 = v154;
  char v102 = LOBYTE(v155);
  uint64_t v103 = *(int *)(v152 + 48);
  uint64_t v104 = v140;
  if (*(unsigned char *)(v140 + v103))
  {
    char v105 = 1;
    uint64_t v106 = v147;
    uint64_t v107 = v151;
  }
  else
  {
    LODWORD(v133) = LOBYTE(v155);
    long long v134 = v154;
    sub_191CF4678();
    sub_191CF4268();
    uint64_t v108 = v138;
    int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v88, 1, v138);
    uint64_t v110 = v86;
    uint64_t v111 = (unsigned int *)MEMORY[0x1E4F3C5B8];
    if (v109 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v110 + 104))(v87, *MEMORY[0x1E4F3C5B8], v108);
      sub_191B01770(v88, qword_1E92E26E8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v87, v88, v108);
    }
    if (sub_191CF3E78())
    {
      uint64_t v112 = *v111;
      uint64_t v113 = v142;
      uint64_t v114 = v138;
      (*(void (**)(char *, uint64_t, uint64_t))(v142 + 104))(v123, v112, v138);
      uint64_t v115 = v143;
    }
    else
    {
      uint64_t v113 = v142;
      uint64_t v115 = v143;
      uint64_t v114 = v138;
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v123, v143, v138);
    }
    uint64_t v107 = v151;
    sub_191CF3D38();
    uint64_t v106 = v147;
    v150(v141, (unint64_t)v107, v147);
    sub_191CF41D8();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v114);
    uint64_t v104 = v140;
    char v105 = *(unsigned char *)(v140 + v103);
    long long v101 = v134;
    char v102 = v133;
  }
  long long v154 = 0uLL;
  double v155 = v92;
  double v156 = v90;
  double v157 = v93 * v94;
  char v158 = 0;
  uint64_t v159 = v146;
  int v160 = v137;
  __int16 v161 = v135;
  long long v162 = v101;
  char v163 = v102;
  char v164 = 0;
  char v165 = v105;
  uint64_t v116 = *(int *)(v152 + 36);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v166 = *(void *)(v104 + v116);
  *(void *)(v104 + v116) = 0x8000000000000000;
  sub_191B4B14C((uint64_t)&v154, v124, isUniquelyReferenced_nonNull_native);
  *(void *)(v104 + v116) = v166;
  swift_bridgeObjectRelease();
  sub_191CF4308();
  swift_release();
  uint64_t v118 = *(void (**)(char *, uint64_t))(v145 + 8);
  v118(v107, v106);
  sub_191B01770((uint64_t)v149, &qword_1E92E1220);
  sub_191CB7E80(v60, type metadata accessor for MetricsRequest);
  return ((uint64_t (*)(char *, uint64_t))v118)(v153, v106);
}

CGImageRef sub_191CBC200(CGImage *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF4058();
  uint64_t v62 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MetricsRequest(0);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = 91;
  unint64_t v68 = 0xE100000000000000;
  LODWORD(Width) = CGImageGetIdentifier();
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  size_t Width = CGImageGetWidth(a1);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  size_t Width = CGImageGetHeight(a1);
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  unint64_t v13 = v68;
  uint64_t v61 = v67;
  if (qword_1EB44A290 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_191CF3858();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB44C888);
  swift_bridgeObjectRetain_n();
  uint64_t v58 = v15;
  uint64_t v16 = sub_191CF3838();
  os_log_type_t v17 = sub_191CF5948();
  if (os_log_type_enabled(v16, v17))
  {
    CGImageRef v59 = a1;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v57 = v4;
    unint64_t v19 = v13;
    uint64_t v20 = (uint8_t *)v18;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v60 = v7;
    uint64_t v22 = v21;
    uint64_t v67 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    swift_bridgeObjectRetain();
    size_t Width = sub_191C5C36C(v61, v19, &v67);
    a1 = v59;
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v16, v17, "%{public}s Filtering image", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    uint64_t v7 = v60;
    MEMORY[0x192FE5F00](v23, -1, -1);
    uint64_t v24 = v20;
    unint64_t v13 = v19;
    uint64_t v4 = v57;
    MEMORY[0x192FE5F00](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = type metadata accessor for ActivityViewStates(0);
  uint64_t v27 = v65;
  uint64_t v26 = v66;
  sub_191B01614(v66 + *(int *)(v25 + 40), v65, &qword_1E92E1A50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v27, 1, v64) == 1)
  {
    swift_bridgeObjectRelease();
    sub_191B01770(v27, &qword_1E92E1A50);
    sub_191CBCDE8();
    swift_allocError();
    *(_OWORD *)uint64_t v28 = xmmword_191D03A70;
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    *(unsigned char *)(v28 + 32) = 0;
    swift_willThrow();
    return (CGImageRef)v4;
  }
  sub_191CBCED0(v27, (uint64_t)v12, type metadata accessor for MetricsRequest);
  sub_191B01614(v26 + *(int *)(v25 + 44), (uint64_t)v4, (uint64_t *)&unk_1EB44BBB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_191B01770((uint64_t)v4, (uint64_t *)&unk_1EB44BBB8);
    sub_191CBCDE8();
    swift_allocError();
    *(void *)uint64_t v29 = 0xD000000000000013;
    *(void *)(v29 + 8) = 0x8000000191D10980;
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    *(unsigned char *)(v29 + 32) = 0;
    swift_willThrow();
LABEL_26:
    sub_191CB7E80((uint64_t)v12, type metadata accessor for MetricsRequest);
    return (CGImageRef)v4;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v7, v4, v5);
  sub_191CF3D68();
  uint64_t v31 = 8;
  if (!v12[16]) {
    uint64_t v31 = 0;
  }
  double v32 = fmax(v30 * *(double *)&v12[v31] * 1.2, 80.0);
  uint64_t v33 = 24;
  if (v12[40]) {
    uint64_t v33 = 32;
  }
  double v34 = fmax(v30 * *(double *)&v12[v33] * 1.2, 80.0);
  if (v32 <= (double)(uint64_t)CGImageGetWidth(a1) || v34 <= (double)(uint64_t)CGImageGetHeight(a1))
  {
    int64_t v40 = sub_191CBA1E4(v32, v34);
    if (v40)
    {
      uint64_t v4 = (char *)v40;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_191CF3838();
      unint64_t v42 = v13;
      os_log_type_t v43 = sub_191CF5938();
      if (os_log_type_enabled(v41, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v60 = v7;
        uint64_t v45 = v44;
        uint64_t v46 = swift_slowAlloc();
        uint64_t v67 = v46;
        *(_DWORD *)uint64_t v45 = 136446722;
        swift_bridgeObjectRetain();
        size_t Width = sub_191C5C36C(v61, v42, &v67);
        uint64_t v66 = v5;
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2050;
        size_t Width = *(void *)&v32;
        sub_191CF5C08();
        *(_WORD *)(v45 + 22) = 2050;
        size_t Width = *(void *)&v34;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v41, v43, "%{public}s Max size exceeded: %{public}fx%{public}f; using placeholder image",
          (uint8_t *)v45,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v46, -1, -1);
        MEMORY[0x192FE5F00](v45, -1, -1);

        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v66);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v5);
      }
    }
    else
    {
      CGImageRef v59 = a1;
      uint64_t v60 = v7;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_191CF3838();
      os_log_type_t v48 = sub_191CF5938();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v4 = (char *)swift_slowAlloc();
        unint64_t v49 = v13;
        uint64_t v50 = swift_slowAlloc();
        uint64_t v67 = v50;
        *(_DWORD *)uint64_t v4 = 136446722;
        swift_bridgeObjectRetain();
        size_t Width = sub_191C5C36C(v61, v49, &v67);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *((_WORD *)v4 + 6) = 2050;
        size_t Width = *(void *)&v32;
        sub_191CF5C08();
        *((_WORD *)v4 + 11) = 2050;
        size_t Width = *(void *)&v34;
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v47, v48, "%{public}s Max size exceeded: %{public}fx%{public}f; unable to create placeholder image",
          (uint8_t *)v4,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v50, -1, -1);
        MEMORY[0x192FE5F00](v4, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v51 = v59;
      double v52 = (double)(uint64_t)CGImageGetWidth(v59);
      double Height = (double)(uint64_t)CGImageGetHeight(v51);
      sub_191CBCDE8();
      swift_allocError();
      *(double *)uint64_t v54 = v52;
      *(double *)(v54 + 8) = Height;
      *(double *)(v54 + 16) = v32;
      *(double *)(v54 + 24) = v34;
      *(unsigned char *)(v54 + 32) = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v5);
    }
    goto LABEL_26;
  }
  CGImageRef v59 = a1;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_191CF3838();
  os_log_type_t v36 = sub_191CF5948();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v60 = v7;
    uint64_t v39 = v38;
    uint64_t v67 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    swift_bridgeObjectRetain();
    size_t Width = sub_191C5C36C(v61, v13, &v67);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v35, v36, "%{public}s Image permitted", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v39, -1, -1);
    MEMORY[0x192FE5F00](v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v5);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v5);
  }
  sub_191CB7E80((uint64_t)v12, type metadata accessor for MetricsRequest);
  return v59;
}

uint64_t sub_191CBCDA0@<X0>(uint64_t a1@<X8>)
{
  return sub_191CBB0D4(a1);
}

uint64_t sub_191CBCDB8(uint64_t a1, uint64_t a2)
{
  return sub_191CBB17C(a1, a2);
}

CGImageRef sub_191CBCDD0(CGImage *a1)
{
  return sub_191CBC200(a1);
}

unint64_t sub_191CBCDE8()
{
  unint64_t result = qword_1E92E53A0;
  if (!qword_1E92E53A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53A0);
  }
  return result;
}

uint64_t sub_191CBCE3C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191CBCE64(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_191CF5C08();
  *a1 = v5;
  return result;
}

double CGRectMake()
{
  return 0.0;
}

uint64_t sub_191CBCED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191CBCF38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_191CBCFA0()
{
  unint64_t result = qword_1E92E1218;
  if (!qword_1E92E1218)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1220);
    sub_191CBB08C(&qword_1E92E17A8, (void (*)(uint64_t))type metadata accessor for CommonActivityArchivingModifiers);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1218);
  }
  return result;
}

unint64_t sub_191CBD04C()
{
  unint64_t result = qword_1E92E53A8;
  if (!qword_1E92E53A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1A10);
    sub_191CBCFA0();
    sub_191C803F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53A8);
  }
  return result;
}

unint64_t sub_191CBD0C8()
{
  unint64_t result = qword_1E92E1A90;
  if (!qword_1E92E1A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1A90);
  }
  return result;
}

unint64_t sub_191CBD11C()
{
  unint64_t result = qword_1E92E1CB8;
  if (!qword_1E92E1CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CB8);
  }
  return result;
}

unint64_t sub_191CBD170()
{
  unint64_t result = qword_1E92E0B08;
  if (!qword_1E92E0B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0B08);
  }
  return result;
}

uint64_t sub_191CBD1C4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1DD8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191CBD234()
{
  unint64_t result = qword_1E92E1438;
  if (!qword_1E92E1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1438);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivityViewStates.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CBD354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewStates.Metadata.CodingKeys()
{
  return &type metadata for ActivityViewStates.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityViewStates.ArchivingError()
{
  return &type metadata for ActivityViewStates.ArchivingError;
}

unint64_t sub_191CBD3A4()
{
  unint64_t result = qword_1E92E53B0;
  if (!qword_1E92E53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53B0);
  }
  return result;
}

unint64_t sub_191CBD3FC()
{
  unint64_t result = qword_1E92E1CC8;
  if (!qword_1E92E1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CC8);
  }
  return result;
}

unint64_t sub_191CBD454()
{
  unint64_t result = qword_1E92E1CC0;
  if (!qword_1E92E1CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CC0);
  }
  return result;
}

uint64_t sub_191CBD4A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7367615477656976 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000191D109D0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xEE00796C696D6146)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t ControlTemplateToggle.Option.init(value:action:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = *a3;
  uint64_t v18 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v19 = (uint64_t)a9 + v18[6];
  uint64_t v20 = sub_191CF4868();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (char *)a9 + v18[7];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v22 = (void *)((char *)a9 + v18[8]);
  void *v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)((char *)a9 + v18[9]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = v17;
  sub_191B28FA4(a4, v19, qword_1EB4496F8);
  *(void *)uint64_t v21 = a5;
  *((void *)v21 + 1) = a6;
  v21[16] = a7 & 1;
  swift_bridgeObjectRelease();
  void *v22 = a8;
  v22[1] = a10;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v23 = a11;
  v23[1] = a12;
  return result;
}

uint64_t type metadata accessor for ControlTemplateToggle.Option(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B258);
}

uint64_t ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v20 = (int *)type metadata accessor for ControlTemplateToggle(0);
  uint64_t v21 = (uint64_t)a9 + v20[8];
  uint64_t v22 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = (void *)((char *)a9 + v20[11]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_191CA8298(a5, (uint64_t)a9 + v20[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_191CA8298(a6, (uint64_t)a9 + v20[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_191B28FA4(a7, v21, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)a9 + v20[9]) = a8;
  *((unsigned char *)a9 + v20[10]) = a10;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v23 = a11;
  v23[1] = a12;
  *((unsigned char *)a9 + v20[12]) = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplateToggle(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B268);
}

uint64_t ControlTemplateToggle.asPlaceholder()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v66 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v65 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v48 - v10);
  if (qword_1E92E0F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v63 = qword_1E92E0F20;
  uint64_t v64 = qword_1E92E0F28[0];
  uint64_t v12 = qword_1E92E0F50;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v61 = qword_1E92E0F40;
  uint64_t v62 = *(void *)algn_1E92E0F48;
  uint64_t v13 = qword_1E92E2CB8;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v54 = qword_1E92E4A50;
  uint64_t v53 = qword_1E92E4A58;
  uint64_t v14 = (int *)type metadata accessor for ControlTemplateToggle(0);
  uint64_t v15 = v1 + v14[7];
  unint64_t v49 = *(void **)(v15 + 16);
  uint64_t v58 = v15 + v7[6];
  uint64_t v16 = (uint64_t)v6;
  sub_191B01614(v58, (uint64_t)v6, qword_1EB4496F8);
  uint64_t v17 = v7[6];
  uint64_t v18 = v15 + v7[7];
  uint64_t v50 = *(void *)v18;
  uint64_t v51 = *(void *)(v18 + 8);
  int v52 = *(unsigned __int8 *)(v18 + 16);
  uint64_t v19 = (uint64_t)v11 + v17;
  uint64_t v20 = sub_191CF4868();
  uint64_t v60 = v1;
  uint64_t v55 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v57 = v21 + 56;
  v56(v19, 1, 1, v20);
  uint64_t v22 = v7[7];
  CGImageRef v59 = v11;
  uint64_t v23 = (char *)v11 + v22;
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = (uint64_t *)((char *)v11 + v7[8]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (uint64_t *)((char *)v11 + v7[9]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t *v11 = v54;
  uint64_t v26 = v49;
  v11[1] = v53;
  v11[2] = (uint64_t)v26;
  id v27 = v26;
  swift_bridgeObjectRetain();
  sub_191B28FA4(v16, v19, qword_1EB4496F8);
  uint64_t v28 = v51;
  *(void *)uint64_t v23 = v50;
  *((void *)v23 + 1) = v28;
  v23[16] = v52;
  swift_bridgeObjectRelease();
  *uint64_t v24 = 0;
  v24[1] = 0;
  swift_bridgeObjectRelease();
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v29 = qword_1E92E4A58;
  uint64_t v53 = qword_1E92E4A50;
  double v30 = *(void **)(v15 + 16);
  sub_191B01614(v58, v16, qword_1EB4496F8);
  uint64_t v58 = *(void *)v18;
  uint64_t v54 = *(void *)(v18 + 8);
  LOBYTE(v18) = *(unsigned char *)(v18 + 16);
  uint64_t v31 = v65;
  uint64_t v32 = (uint64_t)v65 + v7[6];
  v56(v32, 1, 1, v55);
  uint64_t v33 = (char *)v31 + v7[7];
  *(void *)uint64_t v33 = 0;
  *((void *)v33 + 1) = 0;
  unsigned char v33[16] = 1;
  double v34 = (uint64_t *)((char *)v31 + v7[8]);
  *double v34 = 0;
  v34[1] = 0;
  uint64_t v35 = (uint64_t *)((char *)v31 + v7[9]);
  *uint64_t v35 = 0;
  v35[1] = 0;
  *uint64_t v31 = v53;
  v31[1] = v29;
  v31[2] = (uint64_t)v30;
  id v36 = v30;
  swift_bridgeObjectRetain();
  sub_191B28FA4(v16, v32, qword_1EB4496F8);
  uint64_t v37 = v54;
  *(void *)uint64_t v33 = v58;
  *((void *)v33 + 1) = v37;
  unsigned char v33[16] = v18;
  swift_bridgeObjectRelease();
  *double v34 = 0;
  v34[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_191CF3078();
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
  uint64_t v40 = (uint64_t)v66;
  v39(v66, 1, 1, v38);
  uint64_t v41 = v14[8];
  LOBYTE(v34) = *(unsigned char *)(v60 + v14[9]);
  LOBYTE(v32) = *(unsigned char *)(v60 + v14[10]);
  LODWORD(v60) = *(unsigned __int8 *)(v60 + v14[12]);
  unint64_t v42 = v67;
  uint64_t v43 = (uint64_t)v67 + v41;
  v39((char *)v67 + v41, 1, 1, v38);
  uint64_t v44 = (uint64_t *)((char *)v42 + v14[11]);
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v45 = v64;
  *unint64_t v42 = v63;
  v42[1] = v45;
  uint64_t v46 = v62;
  _OWORD v42[2] = v61;
  v42[3] = v46;
  sub_191CA8298((uint64_t)v59, (uint64_t)v42 + v14[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_191CA8298((uint64_t)v31, (uint64_t)v42 + v14[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_191B28FA4(v40, v43, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v42 + v14[9]) = (_BYTE)v34;
  *((unsigned char *)v42 + v14[10]) = v32;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v44 = 0;
  v44[1] = 0;
  *((unsigned char *)v42 + v14[12]) = v60;
  return result;
}

uint64_t ControlTemplateToggle.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v31 = a2;
  double v30 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v26 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v27 = type metadata accessor for ControlTemplateToggle(0);
  uint64_t v28 = v2;
  uint64_t v15 = v2 + *(int *)(v27 + 24);
  uint64_t v16 = type metadata accessor for ControlTemplateToggle.Option(0);
  sub_191B01614(v15 + *(int *)(v16 + 24), (uint64_t)v8, qword_1EB4496F8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v17(v8, 1, v9) == 1)
  {
    sub_191B01770((uint64_t)v8, qword_1EB4496F8);
    uint64_t v18 = v30;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
    uint64_t v19 = v10;
    uint64_t v20 = v30;
    v30(v14);
    if (v3)
    {
      uint64_t v10 = v19;
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v9);
    uint64_t v21 = v20;
    uint64_t v10 = v19;
    uint64_t v18 = v21;
  }
  uint64_t v22 = v28 + *(int *)(v27 + 28) + *(int *)(v16 + 24);
  uint64_t v23 = v29;
  sub_191B01614(v22, v29, qword_1EB4496F8);
  if (v17((char *)v23, 1, v9) == 1) {
    return sub_191B01770(v23, qword_1EB4496F8);
  }
  uint64_t v14 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v26, v23, v9);
  v18(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

uint64_t ControlTemplateToggle.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_191CF5D88();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v8 = type metadata accessor for ControlTemplateToggle(0);
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v9 = v0 + *(int *)(v8 + 24);
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t v19 = "\n    on:\n        value: ";
  sub_191CF53B8();
  uint64_t v24 = *(void *)(v9 + 16);
  sub_191CF5F38();
  uint64_t v23 = "\n        action: ";
  sub_191CF53B8();
  uint64_t v10 = type metadata accessor for ControlTemplateToggle.Option(0);
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191B01614(v9 + *(int *)(v10 + 24), (uint64_t)v7, qword_1EB4496F8);
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  unsigned int v14 = v13(v7, 1, v11);
  uint64_t v18 = v12;
  uint64_t v21 = v12 + 48;
  uint64_t v22 = "\n        status: ";
  uint64_t v20 = v13;
  if (v14 == 1)
  {
    sub_191B01770((uint64_t)v7, qword_1EB4496F8);
  }
  else
  {
    sub_191CF47B8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v15 = v1 + *(int *)(v8 + 28);
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v24 = *(void *)(v15 + 16);
  sub_191CF5F38();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191B01614(v15 + *(int *)(v10 + 24), (uint64_t)v5, qword_1EB4496F8);
  if (v20(v5, 1, v11) == 1)
  {
    sub_191B01770((uint64_t)v5, qword_1EB4496F8);
  }
  else
  {
    sub_191CF47B8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v11);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v25;
}

uint64_t sub_191CBE9E8()
{
  uint64_t v0 = type metadata accessor for ControlTemplateToggle(0);
  __swift_allocate_value_buffer(v0, qword_1E92E0D80);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E0D80);
  return sub_191CBEA34(v1);
}

uint64_t sub_191CBEA34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v44 = type metadata accessor for ControlTemplateToggle(0) - 8;
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v42 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v40 - v12);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v40 - v15);
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (uint64_t)&v40 - v17;
  uint64_t v18 = sub_191CF4868();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v40 = v19;
  v19((uint64_t)v6, 1, 1, v18);
  uint64_t v20 = (uint64_t)v16 + v8[8];
  v19(v20, 1, 1, v18);
  uint64_t v21 = (char *)v16 + v8[9];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v22 = (void *)((char *)v16 + v8[10]);
  void *v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)((char *)v16 + v8[11]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *uint64_t v16 = 0;
  v16[1] = 0;
  void v16[2] = 0;
  sub_191B28FA4((uint64_t)v6, v20, qword_1EB4496F8);
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  swift_bridgeObjectRelease();
  void *v22 = 0;
  v22[1] = 0;
  swift_bridgeObjectRelease();
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = v46;
  uint64_t v41 = type metadata accessor for ControlTemplateToggle.Option;
  sub_191CA8298((uint64_t)v16, v46, type metadata accessor for ControlTemplateToggle.Option);
  uint64_t v25 = v40;
  v40((uint64_t)v6, 1, 1, v18);
  uint64_t v26 = (uint64_t)v13 + v8[8];
  v25(v26, 1, 1, v18);
  uint64_t v27 = (char *)v13 + v8[9];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  uint64_t v28 = (void *)((char *)v13 + v8[10]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (void *)((char *)v13 + v8[11]);
  *uint64_t v29 = 0;
  v29[1] = 0;
  *uint64_t v13 = 0;
  v13[1] = 0;
  void v13[2] = 0;
  sub_191B28FA4((uint64_t)v6, v26, qword_1EB4496F8);
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  swift_bridgeObjectRelease();
  *uint64_t v28 = 0;
  v28[1] = 0;
  swift_bridgeObjectRelease();
  *uint64_t v29 = 0;
  v29[1] = 0;
  sub_191CA8298((uint64_t)v13, (uint64_t)v16, type metadata accessor for ControlTemplateToggle.Option);
  sub_191CC1C38((uint64_t)v16, (uint64_t)v13, type metadata accessor for ControlTemplateToggle.Option);
  sub_191CC1C38(v24, v47, type metadata accessor for ControlTemplateToggle.Option);
  uint64_t v30 = sub_191CF3078();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v32 = (uint64_t)v42;
  v31(v42, 1, 1, v30);
  double v34 = v43;
  uint64_t v33 = (int *)v44;
  uint64_t v35 = (uint64_t)&v43[*(int *)(v44 + 40)];
  v31((char *)v35, 1, 1, v30);
  id v36 = (void *)((char *)v34 + v33[13]);
  *id v36 = 0;
  v36[1] = 0;
  *double v34 = 0u;
  v34[1] = 0u;
  uint64_t v37 = (uint64_t)v13;
  uint64_t v38 = v41;
  sub_191CA8298(v37, (uint64_t)v34 + v33[8], v41);
  sub_191CA8298(v47, (uint64_t)v34 + v33[9], v38);
  sub_191B28FA4(v32, v35, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v34 + v33[11]) = 0;
  *((unsigned char *)v34 + v33[12]) = 0;
  swift_bridgeObjectRelease();
  *id v36 = 0;
  v36[1] = 0;
  *((unsigned char *)v34 + v33[14]) = 0;
  sub_191CA8298((uint64_t)v34, v45, type metadata accessor for ControlTemplateToggle);
  sub_191CC1CA0((uint64_t)v16, type metadata accessor for ControlTemplateToggle.Option);
  return sub_191CC1CA0(v46, type metadata accessor for ControlTemplateToggle.Option);
}

uint64_t static ControlTemplateToggle.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E0DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplateToggle(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E0D80);
  swift_beginAccess();
  return sub_191CC1C38(v3, a1, type metadata accessor for ControlTemplateToggle);
}

uint64_t static ControlTemplateToggle.empty.setter(uint64_t a1)
{
  if (qword_1E92E0DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplateToggle(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E0D80);
  swift_beginAccess();
  sub_191CBF070(a1, v3);
  swift_endAccess();
  return sub_191CC1CA0(a1, type metadata accessor for ControlTemplateToggle);
}

uint64_t sub_191CBF070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateToggle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplateToggle.empty.modify())()
{
  if (qword_1E92E0DA0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for ControlTemplateToggle(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92E0D80);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*ControlTemplateToggle.Option.value.modify())()
{
  return nullsub_1;
}

id ControlTemplateToggle.Option.action.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void ControlTemplateToggle.Option.action.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;

  *(void *)(v1 + 16) = v2;
}

uint64_t (*ControlTemplateToggle.Option.action.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191CBFF14(type metadata accessor for ControlTemplateToggle.Option, (uint64_t)qword_1EB4496F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191B01614, a1);
}

uint64_t ControlTemplateToggle.Option.icon.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplateToggle.Option(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 24), qword_1EB4496F8);
}

uint64_t (*ControlTemplateToggle.Option.icon.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.tint.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 28));
}

uint64_t ControlTemplateToggle.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v8 = v3 + *(int *)(result + 28);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.tint.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.status.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.status.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.actionHint.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.actionHint.modify())()
{
  return nullsub_1;
}

uint64_t sub_191CBF500()
{
  uint64_t result = 0x65756C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F69746361;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 1953393012;
      break;
    case 4:
      uint64_t result = 0x737574617473;
      break;
    case 5:
      uint64_t result = 0x69486E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191CBF5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191CC4BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191CBF5D8(uint64_t a1)
{
  unint64_t v2 = sub_191CC1B9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CBF614(uint64_t a1)
{
  unint64_t v2 = sub_191CC1B9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplateToggle.Option.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E0CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CC1B9C();
  sub_191CF6528();
  LOBYTE(v13) = 0;
  sub_191CF61E8();
  if (!v2)
  {
    *(void *)&long long v13 = *(void *)(v3 + 16);
    char v15 = 1;
    sub_191B85254();
    sub_191CF6278();
    uint64_t v9 = type metadata accessor for ControlTemplateToggle.Option(0);
    LOBYTE(v13) = 2;
    sub_191CF4868();
    sub_191CC1BF0(&qword_1E92E2460, MEMORY[0x1E4F3DE60]);
    sub_191CF6208();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 28));
    char v11 = *((unsigned char *)v10 + 16);
    long long v13 = *v10;
    char v14 = v11;
    char v15 = 3;
    sub_191B5A5B0();
    sub_191CF6208();
    LOBYTE(v13) = 4;
    sub_191CF61E8();
    LOBYTE(v13) = 5;
    sub_191CF61E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateToggle.Option.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A08);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (uint64_t)v11 + v9[8];
  uint64_t v13 = sub_191CF4868();
  char v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v40 = v12;
  v14(v12, 1, 1, v13);
  char v15 = (char *)v11 + v9[9];
  *(void *)char v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = (uint64_t *)((char *)v11 + v9[10]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v38 = a1;
  uint64_t v39 = v16;
  uint64_t v17 = (uint64_t *)((char *)v11 + v9[11]);
  uint64_t *v17 = 0;
  v17[1] = 0;
  uint64_t v37 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CC1B9C();
  uint64_t v35 = v7;
  uint64_t v18 = v41;
  sub_191CF6508();
  if (v18)
  {
    uint64_t v21 = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    sub_191B01770(v21, qword_1EB4496F8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v34;
    LOBYTE(v42) = 0;
    uint64_t *v11 = sub_191CF60E8();
    v11[1] = v20;
    char v44 = 1;
    sub_191B852A8();
    sub_191CF6178();
    v11[2] = v42;
    LOBYTE(v42) = 2;
    sub_191CC1BF0(&qword_1E92E2178, MEMORY[0x1E4F3DE60]);
    sub_191CF6108();
    uint64_t v22 = v39;
    sub_191B28FA4((uint64_t)v5, v40, qword_1EB4496F8);
    char v44 = 3;
    sub_191B5A6AC();
    sub_191CF6108();
    char v23 = v43;
    *(_OWORD *)char v15 = v42;
    v15[16] = v23;
    LOBYTE(v42) = 4;
    uint64_t v24 = sub_191CF60E8();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t *v22 = v24;
    v22[1] = v26;
    LOBYTE(v42) = 5;
    uint64_t v27 = sub_191CF60E8();
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v35, v36);
    uint64_t v30 = v37;
    swift_bridgeObjectRelease();
    *uint64_t v30 = v27;
    v30[1] = v29;
    sub_191CC1C38((uint64_t)v11, v33, type metadata accessor for ControlTemplateToggle.Option);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    return sub_191CC1CA0((uint64_t)v11, type metadata accessor for ControlTemplateToggle.Option);
  }
}

uint64_t sub_191CBFD94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateToggle.Option.init(from:)(a1, a2);
}

uint64_t sub_191CBFDAC(void *a1)
{
  return ControlTemplateToggle.Option.encode(to:)(a1);
}

uint64_t ControlTemplateToggle.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.on.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191CBFF14(type metadata accessor for ControlTemplateToggle, (uint64_t)type metadata accessor for ControlTemplateToggle.Option, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191CC1C38, a1);
}

uint64_t sub_191CBFF14@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 24), a4, a2);
}

uint64_t ControlTemplateToggle.on.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 24);

  return sub_191CC1D00(a1, v3);
}

uint64_t (*ControlTemplateToggle.on.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.off.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_191CC1C38(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ControlTemplateToggle.Option);
}

uint64_t ControlTemplateToggle.off.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 28);

  return sub_191CC1D00(a1, v3);
}

uint64_t (*ControlTemplateToggle.off.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_191B01614(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t ControlTemplateToggle.associatedURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 32), (uint64_t *)&unk_1EB44BBA8);
}

uint64_t (*ControlTemplateToggle.associatedURL.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.privacySensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 36));
}

uint64_t ControlTemplateToggle.privacySensitive.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateToggle(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.privacySensitive.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.disabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 40));
}

uint64_t ControlTemplateToggle.disabled.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateToggle(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.disabled.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.accessibilityIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 44));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.accessibilityIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.rasterizedImagesAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 48));
}

uint64_t ControlTemplateToggle.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateToggle(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.rasterizedImagesAllowed.modify())()
{
  return nullsub_1;
}

unint64_t sub_191CC0440(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 28271;
      break;
    case 3:
      unint64_t result = 6710895;
      break;
    case 4:
      unint64_t result = 0x746169636F737361;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x64656C6261736964;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191CC0554()
{
  return sub_191CC0440(*v0);
}

uint64_t sub_191CC055C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191CC4E24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191CC0584(uint64_t a1)
{
  unint64_t v2 = sub_191CC1D64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CC05C0(uint64_t a1)
{
  unint64_t v2 = sub_191CC1D64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplateToggle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CC1D64();
  sub_191CF6528();
  v8[31] = 0;
  sub_191CF61E8();
  if (!v1)
  {
    v8[30] = 1;
    sub_191CF61E8();
    type metadata accessor for ControlTemplateToggle(0);
    v8[29] = 2;
    type metadata accessor for ControlTemplateToggle.Option(0);
    sub_191CC1BF0(&qword_1E92E0CE0, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle.Option);
    sub_191CF6278();
    v8[28] = 3;
    sub_191CF6278();
    v8[27] = 4;
    sub_191CF3078();
    sub_191CC1BF0(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
    sub_191CF6208();
    v8[26] = 5;
    sub_191CF6228();
    v8[25] = 6;
    sub_191CF6228();
    v8[24] = 7;
    sub_191CF61E8();
    v8[15] = 8;
    sub_191CF6228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ControlTemplateToggle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1A00);
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ControlTemplateToggle(0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 32)];
  uint64_t v19 = sub_191CF3078();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v45 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v21 = &v17[*(int *)(v14 + 44)];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v48 = v21;
  uint64_t v49 = v14;
  uint64_t v22 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_191CC1D64();
  char v44 = v13;
  uint64_t v23 = v47;
  sub_191CF6508();
  if (v23)
  {
    uint64_t v24 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191B01770(v24, (uint64_t *)&unk_1EB44BBA8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = v19;
    char v58 = 0;
    *(void *)uint64_t v17 = sub_191CF60E8();
    *((void *)v17 + 1) = v25;
    char v57 = 1;
    uint64_t v26 = sub_191CF60E8();
    uint64_t v27 = v49;
    *((void *)v17 + 2) = v26;
    *((void *)v17 + 3) = v28;
    char v56 = 2;
    sub_191CC1BF0(&qword_1E92E19F8, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle.Option);
    sub_191CF6178();
    sub_191CA8298((uint64_t)v10, (uint64_t)&v17[*(int *)(v27 + 24)], type metadata accessor for ControlTemplateToggle.Option);
    char v55 = 3;
    sub_191CF6178();
    sub_191CA8298((uint64_t)v8, (uint64_t)&v17[*(int *)(v27 + 28)], type metadata accessor for ControlTemplateToggle.Option);
    char v54 = 4;
    sub_191CC1BF0(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    uint64_t v29 = (uint64_t)v41;
    sub_191CF6108();
    sub_191B28FA4(v29, v45, (uint64_t *)&unk_1EB44BBA8);
    char v53 = 5;
    char v30 = sub_191CF6128();
    uint64_t v31 = (uint64_t)v46;
    uint64_t v32 = v49;
    v17[*(int *)(v49 + 36)] = v30 & 1;
    char v52 = 6;
    v17[*(int *)(v32 + 40)] = sub_191CF6128() & 1;
    char v51 = 7;
    uint64_t v47 = sub_191CF60E8();
    uint64_t v41 = v33;
    uint64_t v34 = v32;
    uint64_t v35 = (uint64_t *)v48;
    swift_bridgeObjectRelease();
    uint64_t v36 = v41;
    *uint64_t v35 = v47;
    v35[1] = (uint64_t)v36;
    char v50 = 8;
    uint64_t v37 = v44;
    LOBYTE(v35) = sub_191CF6128();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v43);
    v17[*(int *)(v34 + 48)] = v35 & 1;
    sub_191CC1C38((uint64_t)v17, v40, type metadata accessor for ControlTemplateToggle);
    __swift_destroy_boxed_opaque_existential_1(v31);
    return sub_191CC1CA0((uint64_t)v17, type metadata accessor for ControlTemplateToggle);
  }
}

uint64_t sub_191CC105C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B01614(v2 + *(int *)(a1 + 32), a2, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t sub_191CC1088(void (*a1)(char *), uint64_t a2)
{
  return ControlTemplateToggle.validateIcon(_:)(a1, a2);
}

uint64_t sub_191CC10A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateToggle.init(from:)(a1, a2);
}

uint64_t sub_191CC10C0(void *a1)
{
  return ControlTemplateToggle.encode(to:)(a1);
}

uint64_t _s9WidgetKit21ControlTemplateToggleV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v40 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      goto LABEL_26;
    }
    goto LABEL_8;
  }
  if (!v21) {
    goto LABEL_26;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_191CF6348(), char v23 = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        goto LABEL_26;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_191CF6348();
        char v23 = 0;
        if ((v26 & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v25)
    {
      goto LABEL_26;
    }
    uint64_t v43 = v5;
    uint64_t v27 = (int *)type metadata accessor for ControlTemplateToggle(0);
    if (!_s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0((void *)((char *)a1 + v27[6]), (void *)((char *)a2 + v27[6]))|| !_s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0((void *)((char *)a1 + v27[7]), (void *)((char *)a2 + v27[7])))
    {
      goto LABEL_26;
    }
    sub_191B01614((uint64_t)a1 + v27[8], (uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v41 = v27;
    sub_191B01614((uint64_t)a2 + v27[8], (uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_191B01614((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v42 = v28;
    sub_191B01614((uint64_t)v17, v28, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v29((uint64_t)v10, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
      sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
      if (v29(v42, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
LABEL_24:
        uint64_t v32 = v41;
        if (*((unsigned __int8 *)a1 + v41[9]) != *((unsigned __int8 *)a2 + v41[9])
          || *((unsigned __int8 *)a1 + v41[10]) != *((unsigned __int8 *)a2 + v41[10]))
        {
          goto LABEL_26;
        }
        uint64_t v34 = v41[11];
        uint64_t v35 = (void *)((char *)a1 + v34);
        uint64_t v36 = *(void *)((char *)a1 + v34 + 8);
        uint64_t v37 = (void *)((char *)a2 + v34);
        uint64_t v38 = v37[1];
        if (v36)
        {
          if (v38)
          {
            if (*v35 != *v37 || v36 != v38)
            {
              char v39 = sub_191CF6348();
              char v23 = 0;
              if ((v39 & 1) == 0) {
                return v23 & 1;
              }
            }
LABEL_35:
            char v23 = *((unsigned char *)a1 + v32[12]) ^ *((unsigned char *)a2 + v32[12]) ^ 1;
            return v23 & 1;
          }
        }
        else if (!v38)
        {
          goto LABEL_35;
        }
LABEL_26:
        char v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_191B01614((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1EB44BBA8);
      if (v29(v42, 1, v4) != 1)
      {
        uint64_t v30 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v7, v42, v4);
        sub_191CC1BF0(&qword_1E92E3618, MEMORY[0x1E4F276F0]);
        LODWORD(v42) = sub_191CF52F8();
        uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
        v31(v7, v4);
        sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
        sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
        v31(v14, v4);
        sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
        if ((v42 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_24;
      }
      sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
      sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v4);
    }
    sub_191B01770((uint64_t)v10, &qword_1E92E19C0);
    goto LABEL_26;
  }
  return v23 & 1;
}

BOOL _s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF4868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_191CF6348(), BOOL result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    char v56 = a1;
    uint64_t v57 = v5;
    uint64_t v24 = (void *)a1[2];
    uint64_t v25 = (void *)a2[2];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      unint64_t v54 = sub_191B886E4();
      id v26 = v24;
      id v27 = v25;
      id v28 = v26;
      id v29 = v27;
      id v30 = v28;
      char v55 = a2;
      id v31 = v30;
      id v32 = v29;
      LOBYTE(v28) = sub_191CF5B58();

      a2 = v55;
      if ((v28 & 1) == 0) {
        return 0;
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v33 = type metadata accessor for ControlTemplateToggle.Option(0);
    sub_191B01614((uint64_t)v56 + *(int *)(v33 + 24), (uint64_t)v19, qword_1EB4496F8);
    unint64_t v54 = v33;
    char v55 = a2;
    sub_191B01614((uint64_t)a2 + *(int *)(v33 + 24), (uint64_t)v17, qword_1EB4496F8);
    uint64_t v34 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_191B01614((uint64_t)v19, (uint64_t)v10, qword_1EB4496F8);
    sub_191B01614((uint64_t)v17, v34, qword_1EB4496F8);
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    if (v35((uint64_t)v10, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      if (v35(v34, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
LABEL_22:
        unint64_t v40 = v54;
        char v39 = v55;
        uint64_t v41 = *(int *)(v54 + 28);
        uint64_t v42 = v56;
        if (*((unsigned char *)v56 + v41 + 16))
        {
          if (!*((unsigned char *)v55 + v41 + 16)) {
            return 0;
          }
        }
        else if ((*((unsigned char *)v55 + v41 + 16) & 1) != 0 || (sub_191CF4DD8() & 1) == 0)
        {
          return 0;
        }
        uint64_t v43 = *(int *)(v40 + 32);
        char v44 = (void *)((char *)v42 + v43);
        uint64_t v45 = *(void *)((char *)v42 + v43 + 8);
        uint64_t v46 = (void *)((char *)v39 + v43);
        uint64_t v47 = v46[1];
        if (v45)
        {
          if (!v47) {
            return 0;
          }
          if (*v44 != *v46 || v45 != v47)
          {
            char v48 = sub_191CF6348();
            BOOL result = 0;
            if ((v48 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v47)
        {
          return 0;
        }
        uint64_t v49 = *(int *)(v40 + 36);
        char v50 = (void *)((char *)v42 + v49);
        uint64_t v51 = *(void *)((char *)v42 + v49 + 8);
        char v52 = (void *)((char *)v39 + v49);
        uint64_t v53 = v52[1];
        if (v51) {
          return v53 && (*v50 == *v52 && v51 == v53 || (sub_191CF6348() & 1) != 0);
        }
        return !v53;
      }
    }
    else
    {
      sub_191B01614((uint64_t)v10, (uint64_t)v14, qword_1EB4496F8);
      if (v35(v34, 1, v4) != 1)
      {
        uint64_t v36 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v7, v34, v4);
        sub_191CC1BF0(&qword_1E92E3620, MEMORY[0x1E4F3DE60]);
        char v37 = sub_191CF52F8();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v36 + 8);
        v38(v7, v4);
        sub_191B01770((uint64_t)v17, qword_1EB4496F8);
        sub_191B01770((uint64_t)v19, qword_1EB4496F8);
        v38(v14, v4);
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
        if ((v37 & 1) == 0) {
          return 0;
        }
        goto LABEL_22;
      }
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v4);
    }
    sub_191B01770((uint64_t)v10, &qword_1E92E19C8);
    return 0;
  }
  return result;
}

unint64_t sub_191CC1B9C()
{
  unint64_t result = qword_1E92E2110;
  if (!qword_1E92E2110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2110);
  }
  return result;
}

uint64_t sub_191CC1BF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191CC1C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191CC1CA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191CC1D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_191CC1D64()
{
  unint64_t result = qword_1E92E20F8;
  if (!qword_1E92E20F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E20F8);
  }
  return result;
}

uint64_t sub_191CC1DB8(void *a1)
{
  a1[1] = sub_191CC1BF0(&qword_1E92E2128, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
  a1[2] = sub_191CC1BF0(&qword_1E92E19A0, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
  uint64_t result = sub_191CC1BF0(&qword_1E92E19A8, (void (*)(uint64_t))type metadata accessor for ControlTemplateToggle);
  a1[3] = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ControlTemplateToggle(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a3[6];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(void *)((char *)a2 + v7);
    v8[1] = v10;
    unint64_t v68 = *(void **)((char *)a2 + v7 + 16);
    long long v8[2] = v68;
    uint64_t v67 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v11 = v67[6];
    uint64_t v63 = &v9[v11];
    __dst = (char *)v8 + v11;
    uint64_t v12 = sub_191CF4868();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v68;
    uint64_t v66 = v14;
    if (v14(v63, 1, v12))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dst, v63, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v18 = v67[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = &v9[v18];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    v19[16] = v20[16];
    uint64_t v21 = v67[8];
    char v22 = (void *)((char *)v8 + v21);
    char v23 = &v9[v21];
    uint64_t v24 = *((void *)v23 + 1);
    void *v22 = *(void *)v23;
    v22[1] = v24;
    uint64_t v25 = v67[9];
    id v26 = (void *)((char *)v8 + v25);
    id v27 = &v9[v25];
    uint64_t v28 = *((void *)v27 + 1);
    void *v26 = *(void *)v27;
    v26[1] = v28;
    uint64_t v29 = a3[7];
    id v30 = (void *)((char *)v3 + v29);
    id v31 = (char *)a2 + v29;
    uint64_t v32 = *(void *)((char *)a2 + v29 + 8);
    *id v30 = *(void *)((char *)a2 + v29);
    v30[1] = v32;
    uint64_t v33 = *(void **)((char *)a2 + v29 + 16);
    void v30[2] = v33;
    uint64_t v34 = v67[6];
    __dsta = (char *)v30 + v34;
    uint64_t v35 = &v31[v34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v33;
    if (v66(v35, 1, v12))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dsta, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dsta, v35, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dsta, 0, 1, v12);
    }
    uint64_t v38 = v67[7];
    char v39 = (char *)v30 + v38;
    unint64_t v40 = &v31[v38];
    *(_OWORD *)char v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    uint64_t v41 = v67[8];
    uint64_t v42 = (void *)((char *)v30 + v41);
    uint64_t v43 = &v31[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *uint64_t v42 = *(void *)v43;
    v42[1] = v44;
    uint64_t v45 = v67[9];
    uint64_t v46 = (void *)((char *)v30 + v45);
    uint64_t v47 = &v31[v45];
    uint64_t v48 = *((void *)v47 + 1);
    *uint64_t v46 = *(void *)v47;
    v46[1] = v48;
    uint64_t v49 = a3[8];
    char v50 = (char *)v3 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = sub_191CF3078();
    uint64_t v53 = *(void *)(v52 - 8);
    unint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54(v51, 1, v52))
    {
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    uint64_t v56 = a3[10];
    *((unsigned char *)v3 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v3 + v56) = *((unsigned char *)a2 + v56);
    uint64_t v57 = a3[11];
    uint64_t v58 = a3[12];
    CGImageRef v59 = (void *)((char *)v3 + v57);
    uint64_t v60 = (void *)((char *)a2 + v57);
    uint64_t v61 = v60[1];
    *CGImageRef v59 = *v60;
    v59[1] = v61;
    *((unsigned char *)v3 + v58) = *((unsigned char *)a2 + v58);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for ControlTemplateToggle(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  swift_bridgeObjectRelease();

  uint64_t v5 = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v6 = v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_191CF4868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[7];
  swift_bridgeObjectRelease();

  uint64_t v11 = v10 + *(int *)(v5 + 24);
  if (!v9(v11, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[8];
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplateToggle(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a3[6];
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
  *uint64_t v6 = *(void *)((char *)a2 + v5);
  v6[1] = v8;
  uint64_t v66 = *(void **)((char *)a2 + v5 + 16);
  _OWORD v6[2] = v66;
  uint64_t v9 = type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v10 = *(int *)(v9 + 24);
  __dst = (char *)v6 + v10;
  uint64_t v64 = (int *)v9;
  uint64_t v11 = &v7[v10];
  uint64_t v12 = sub_191CF4868();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v66;
  if (v14(v11, 1, v12))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v17 = v64[7];
  uint64_t v18 = (char *)v6 + v17;
  uint64_t v19 = &v7[v17];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  uint64_t v20 = v64[8];
  uint64_t v21 = (void *)((char *)v6 + v20);
  char v22 = &v7[v20];
  uint64_t v23 = *((void *)v22 + 1);
  void *v21 = *(void *)v22;
  v21[1] = v23;
  uint64_t v24 = v64[9];
  uint64_t v25 = (void *)((char *)v6 + v24);
  id v26 = &v7[v24];
  uint64_t v27 = *((void *)v26 + 1);
  *uint64_t v25 = *(void *)v26;
  v25[1] = v27;
  uint64_t v28 = a3[7];
  uint64_t v29 = (void *)((char *)a1 + v28);
  id v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a2 + v28 + 8);
  *uint64_t v29 = *(void *)((char *)a2 + v28);
  v29[1] = v31;
  uint64_t v32 = *(void **)((char *)a2 + v28 + 16);
  v29[2] = v32;
  uint64_t v33 = v64[6];
  uint64_t v34 = (char *)v29 + v33;
  uint64_t v35 = &v30[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = v32;
  if (v14(v35, 1, v12))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v34, v35, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v34, 0, 1, v12);
  }
  uint64_t v38 = v64[7];
  char v39 = (char *)v29 + v38;
  unint64_t v40 = &v30[v38];
  *(_OWORD *)char v39 = *(_OWORD *)v40;
  v39[16] = v40[16];
  uint64_t v41 = v64[8];
  uint64_t v42 = (void *)((char *)v29 + v41);
  uint64_t v43 = &v30[v41];
  uint64_t v44 = *((void *)v43 + 1);
  *uint64_t v42 = *(void *)v43;
  v42[1] = v44;
  uint64_t v45 = v64[9];
  uint64_t v46 = (void *)((char *)v29 + v45);
  uint64_t v47 = &v30[v45];
  uint64_t v48 = *((void *)v47 + 1);
  *uint64_t v46 = *(void *)v47;
  v46[1] = v48;
  uint64_t v49 = a3[8];
  char v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = sub_191CF3078();
  uint64_t v53 = *(void *)(v52 - 8);
  unint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54(v51, 1, v52))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  uint64_t v56 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v56) = *((unsigned char *)a2 + v56);
  uint64_t v57 = a3[11];
  uint64_t v58 = a3[12];
  CGImageRef v59 = (void *)((char *)a1 + v57);
  uint64_t v60 = (void *)((char *)a2 + v57);
  uint64_t v61 = v60[1];
  *CGImageRef v59 = *v60;
  v59[1] = v61;
  *((unsigned char *)a1 + v58) = *((unsigned char *)a2 + v58);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplateToggle(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = a3;
  unint64_t v68 = a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)v7[2];
  uint64_t v10 = (void *)v8[2];
  void v7[2] = v10;
  id v11 = v10;

  uint64_t v12 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = (char *)v7 + v13;
  id v15 = (char *)v8 + v13;
  uint64_t v16 = sub_191CF4868();
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  int v18 = v17(v14, 1, v16);
  int v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = v12[7];
  char v22 = (char *)v7 + v21;
  uint64_t v23 = (char *)v8 + v21;
  long long v24 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_OWORD *)char v22 = v24;
  uint64_t v25 = v12[8];
  id v26 = (void *)((char *)v7 + v25);
  uint64_t v27 = (void *)((char *)v8 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v12[9];
  uint64_t v29 = (void *)((char *)v7 + v28);
  id v30 = (void *)((char *)v8 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v67[7];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)v68 + v31;
  *(void *)uint64_t v32 = *(void *)((char *)v68 + v31);
  *((void *)v32 + 1) = *(void *)((char *)v68 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)*((void *)v32 + 2);
  uint64_t v35 = (void *)*((void *)v33 + 2);
  *((void *)v32 + 2) = v35;
  id v36 = v35;

  uint64_t v37 = v12[6];
  uint64_t v38 = &v32[v37];
  char v39 = &v33[v37];
  int v40 = v17(&v32[v37], 1, v16);
  int v41 = v17(v39, 1, v16);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v38, v39, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v38, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v16);
LABEL_12:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v38, v39, v16);
LABEL_13:
  uint64_t v43 = v12[7];
  uint64_t v44 = &v32[v43];
  uint64_t v45 = &v33[v43];
  long long v46 = *(_OWORD *)v45;
  v44[16] = v45[16];
  *(_OWORD *)uint64_t v44 = v46;
  uint64_t v47 = v12[8];
  uint64_t v48 = &v32[v47];
  uint64_t v49 = &v33[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = v12[9];
  uint64_t v51 = &v32[v50];
  uint64_t v52 = &v33[v50];
  *(void *)uint64_t v51 = *(void *)v52;
  *((void *)v51 + 1) = *((void *)v52 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = v67[8];
  unint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)v68 + v53;
  uint64_t v56 = sub_191CF3078();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v54, v55, v56);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
    goto LABEL_18;
  }
  if (v60)
  {
LABEL_18:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v54, v55, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_19:
  *((unsigned char *)a1 + v67[9]) = *((unsigned char *)v68 + v67[9]);
  *((unsigned char *)a1 + v67[10]) = *((unsigned char *)v68 + v67[10]);
  uint64_t v62 = v67[11];
  uint64_t v63 = (void *)((char *)a1 + v62);
  uint64_t v64 = (void *)((char *)v68 + v62);
  *uint64_t v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v67[12]) = *((unsigned char *)v68 + v67[12]);
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateToggle(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
  uint64_t v9 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v10 = v9[6];
  id v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_191CF4868();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v38(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = v9[7];
  uint64_t v17 = &v7[v16];
  int v18 = &v8[v16];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
  *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)((char *)a2 + v19);
  *((void *)v20 + 2) = *(void *)((char *)a2 + v19 + 16);
  uint64_t v22 = v9[6];
  uint64_t v23 = &v20[v22];
  long long v24 = &v21[v22];
  if (v38(&v21[v22], 1, v13))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v23, v24, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
  }
  uint64_t v26 = v9[7];
  uint64_t v27 = &v20[v26];
  uint64_t v28 = &v21[v26];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)&v20[v9[8]] = *(_OWORD *)&v21[v9[8]];
  *(_OWORD *)&v20[v9[9]] = *(_OWORD *)&v21[v9[9]];
  uint64_t v29 = a3[8];
  id v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_191CF3078();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v35 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v35) = *((unsigned char *)a2 + v35);
  uint64_t v36 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  return a1;
}

void *assignWithTake for ControlTemplateToggle(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v76 = a3;
  long long v77 = a2;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)v9[2];
  id v9[2] = v10[2];

  uint64_t v13 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = (char *)v9 + v14;
  uint64_t v16 = (char *)v10 + v14;
  uint64_t v17 = sub_191CF4868();
  uint64_t v75 = *(void *)(v17 - 8);
  int v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  int v19 = v18(v15, 1, v17);
  int v20 = v18(v16, 1, v17);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v15, v17);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v15, v16, v17);
LABEL_7:
  uint64_t v22 = v13[7];
  uint64_t v23 = (char *)v9 + v22;
  long long v24 = (char *)v10 + v22;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  uint64_t v25 = v13[8];
  uint64_t v26 = (void *)((char *)v9 + v25);
  uint64_t v27 = (void *)((char *)v10 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  void *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = v13[9];
  uint64_t v31 = (void *)((char *)v9 + v30);
  uint64_t v32 = (void *)((char *)v10 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = v76[7];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)v77 + v35;
  uint64_t v38 = *(void *)((char *)v77 + v35 + 8);
  *(void *)uint64_t v36 = *(void *)((char *)v77 + v35);
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  char v39 = (void *)*((void *)v36 + 2);
  *((void *)v36 + 2) = *((void *)v37 + 2);

  uint64_t v40 = v13[6];
  int v41 = &v36[v40];
  uint64_t v42 = &v37[v40];
  int v43 = v18(&v36[v40], 1, v17);
  int v44 = v18(v42, 1, v17);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v41, v42, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v41, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v17);
LABEL_12:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v41, v42, v17);
LABEL_13:
  uint64_t v46 = v13[7];
  uint64_t v47 = &v36[v46];
  uint64_t v48 = &v37[v46];
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  v47[16] = v48[16];
  uint64_t v49 = v13[8];
  uint64_t v50 = &v36[v49];
  uint64_t v51 = &v37[v49];
  uint64_t v53 = *(void *)v51;
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = v13[9];
  uint64_t v55 = &v36[v54];
  uint64_t v56 = &v37[v54];
  uint64_t v58 = *(void *)v56;
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = v58;
  *((void *)v55 + 1) = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = v76[8];
  int v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)v77 + v59;
  uint64_t v62 = sub_191CF3078();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v60, v61, v62);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_18;
  }
  if (v66)
  {
LABEL_18:
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_19:
  uint64_t v68 = v76[10];
  *((unsigned char *)a1 + v76[9]) = *((unsigned char *)v77 + v76[9]);
  *((unsigned char *)a1 + v68) = *((unsigned char *)v77 + v68);
  uint64_t v69 = v76[11];
  uint64_t v70 = (void *)((char *)a1 + v69);
  uint64_t v71 = (void *)((char *)v77 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *uint64_t v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v76[12]) = *((unsigned char *)v77 + v76[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateToggle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CC37F0);
}

uint64_t sub_191CC37F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 24);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 32);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CC3940);
}

uint64_t sub_191CC3940(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ControlTemplateToggle.Option(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_191CC3A70()
{
  type metadata accessor for ControlTemplateToggle.Option(319);
  if (v0 <= 0x3F)
  {
    sub_191B5C208(319, (unint64_t *)&qword_1EB44C548, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplateToggle.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_191CF4868();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    id v14 = v8;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    int v19 = (char *)v4 + v17;
    int v20 = (char *)a2 + v17;
    *(_OWORD *)int v19 = *(_OWORD *)v20;
    v19[16] = v20[16];
    uint64_t v21 = (uint64_t *)((char *)v4 + v18);
    uint64_t v22 = (uint64_t *)((char *)a2 + v18);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_191CF4868();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplateToggle.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v13 = v7;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  int v19 = (void *)((char *)a1 + v16);
  int v20 = (void *)((char *)a2 + v16);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplateToggle.Option(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[2];
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  id v8 = v7;

  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_191CF4868();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  int v19 = (char *)a1 + v18;
  int v20 = (char *)a2 + v18;
  long long v21 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)int v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

void *assignWithTake for ControlTemplateToggle.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  int v19 = (char *)a1 + v17;
  int v20 = (char *)a2 + v17;
  *(_OWORD *)int v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  long long v21 = (void *)((char *)a1 + v18);
  uint64_t v22 = (void *)((char *)a2 + v18);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  void *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CC456C);
}

uint64_t sub_191CC456C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CC4640);
}

uint64_t sub_191CC4640(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191CC46EC()
{
  sub_191B5C208(319, &qword_1EB44B220, MEMORY[0x1E4F3DE60]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for ControlTemplateToggle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CC4880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateToggle.CodingKeys()
{
  return &type metadata for ControlTemplateToggle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ControlTemplateToggle.Option.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CC4984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateToggle.Option.CodingKeys()
{
  return &type metadata for ControlTemplateToggle.Option.CodingKeys;
}

unint64_t sub_191CC49C0()
{
  unint64_t result = qword_1E92E53B8;
  if (!qword_1E92E53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53B8);
  }
  return result;
}

unint64_t sub_191CC4A18()
{
  unint64_t result = qword_1E92E53C0;
  if (!qword_1E92E53C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53C0);
  }
  return result;
}

unint64_t sub_191CC4A70()
{
  unint64_t result = qword_1E92E2108;
  if (!qword_1E92E2108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2108);
  }
  return result;
}

unint64_t sub_191CC4AC8()
{
  unint64_t result = qword_1E92E2100;
  if (!qword_1E92E2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2100);
  }
  return result;
}

unint64_t sub_191CC4B20()
{
  unint64_t result = qword_1E92E2120;
  if (!qword_1E92E2120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2120);
  }
  return result;
}

unint64_t sub_191CC4B78()
{
  unint64_t result = qword_1E92E2118;
  if (!qword_1E92E2118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2118);
  }
  return result;
}

uint64_t sub_191CC4BCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_191CC4E24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 28271 && a2 == 0xE200000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6710895 && a2 == 0xE300000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000191D0E330 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E350 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E370)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_191CC51B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v30 = a8;
  uint64_t v15 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v40[2] = *a1;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v31 = a6;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v18 = sub_191CF5618();
  swift_bridgeObjectRetain();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = v32;
  uint64_t v22 = sub_191B55D64((void (*)(char *, char *))sub_191CC5EEC, (uint64_t)v33, v18, a4, v19, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v40);
  if (v21)
  {
    uint64_t v23 = type metadata accessor for Timeline();
    (*(void (**)(void *, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = v22;
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for Timeline();
    sub_191CC54C8((uint64_t)a1 + *(int *)(v26 + 36), (uint64_t)v17);
    (*(void (**)(void *, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
    uint64_t v27 = v30;
    *uint64_t v30 = v25;
    uint64_t v28 = type metadata accessor for Timeline();
    return sub_191CC544C((uint64_t)v17, (uint64_t)v27 + *(int *)(v28 + 36));
  }
}

uint64_t Timeline.init(entries:policy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (uint64_t)a3 + *(int *)(type metadata accessor for Timeline() + 36);

  return sub_191CC544C(a2, v4);
}

uint64_t type metadata accessor for Timeline()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191CC544C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimelineReloadPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Timeline.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Timeline.policy.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191CC54C8(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_191CC54C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimelineReloadPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_191CC552C()
{
  sub_191B6EC84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_191CC55C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_191CF3178();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_191CC574C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_191CF3178();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_191CC581C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_191CF3178();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_191CC5940(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_191CC5AD0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_191CF3178();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_191CC5BE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_191CC5D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CC5D80);
}

uint64_t sub_191CC5D80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TimelineReloadPolicy();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_191CC5E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CC5E44);
}

void *sub_191CC5E44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimelineReloadPolicy();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_191CC5EEC(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 48))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t WidgetRelevanceEntry<A>.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_191CF2D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E27F0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceEntry<A>.init(group:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E27F0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_191CC5FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for WidgetRelevanceEntry() + 28);
  uint64_t v7 = type metadata accessor for WidgetRelevanceEntry.Attribute();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = (void *)(a4 + *(int *)(type metadata accessor for WidgetRelevanceEntry() + 28));
  *uint64_t v9 = v7;
  v9[1] = v8;
  type metadata accessor for WidgetRelevanceEntry.Attribute();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v10(a4, a1, a3);
}

uint64_t type metadata accessor for WidgetRelevanceEntry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetRelevanceEntry.Attribute()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)((char *)a3 + *(int *)(type metadata accessor for WidgetRelevanceEntry() + 28));
  *uint64_t v7 = v5;
  v7[1] = v6;
  type metadata accessor for WidgetRelevanceEntry.Attribute();
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a3 = a1;
  return result;
}

uint64_t WidgetRelevanceEntry.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WidgetRelevanceEntry.context.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for WidgetRelevanceEntry.Attribute();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v11 - v6, v2 + *(int *)(a1 + 28), v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_191CF2D68();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a2, v7, v9);
  }
  return result;
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a4 + *(int *)(type metadata accessor for WidgetRelevanceEntry() + 28);
  uint64_t v9 = sub_191CF2D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  type metadata accessor for WidgetRelevanceEntry.Attribute();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v10(a4, a1, a3);
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for WidgetRelevanceEntry() + 28);
  uint64_t v7 = sub_191CF2D68();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a2, v7);
  type metadata accessor for WidgetRelevanceEntry.Attribute();
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a3 = a1;
  return result;
}

uint64_t sub_191CC653C()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for WidgetRelevanceEntry.Attribute();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_191CC661C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(sub_191CF2D68() - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 & 0xF8 | 7;
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  if (*(void *)(v8 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unint64_t v14 = v13 + v12 + 1;
  uint64_t v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  int v16 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v15 != 7 || v16 != 0 || v14 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v21 = (void *)(((unint64_t)a1 + v11) & v20);
    uint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v11) & v20);
    unsigned int v23 = v22[v13];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v25 = v13;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v22;
          goto LABEL_22;
        case 2:
          int v26 = *(unsigned __int16 *)v22;
          goto LABEL_22;
        case 3:
          int v26 = *(unsigned __int16 *)v22 | (*(unsigned __int8 *)((((unint64_t)a2 + v11) & v20) + 2) << 16);
          goto LABEL_22;
        case 4:
          int v26 = *(_DWORD *)v22;
LABEL_22:
          int v27 = (v26 | (v24 << (8 * v13))) + 2;
          unsigned int v23 = v26 + 2;
          if (v13 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
      if (*(void *)((((unint64_t)a2 + v11) & v20) + 8) >= 2uLL)
      {
        void *v21 = *(void *)v22;
        *(void *)((((unint64_t)a1 + v11) & v20) + 8) = *(void *)((((unint64_t)a2 + v11) & v20) + 8);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      }
      *((unsigned char *)v21 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20);
      *((unsigned char *)v21 + v13) = 0;
    }
  }
  return a1;
}

unint64_t sub_191CC687C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v7 = (unsigned __int8 *)((v4 + a1 + v6) & ~v6);
  unint64_t v8 = *(void *)(v5 + 64);
  if (v8 <= 0x10) {
    unint64_t v8 = 16;
  }
  unsigned int v9 = v7[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *v7;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)v7;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)v7 | (v7[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)v7;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    unint64_t result = *((void *)v7 + 1);
    if (result >= 2)
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = *(uint64_t (**)(void))(v5 + 8);
    return v15();
  }
  return result;
}

uint64_t sub_191CC6A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    if (*((void *)v12 + 1) >= 2uLL)
    {
      void *v11 = *(void *)v12;
      v11[1] = *((void *)v12 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    }
    char v19 = 1;
  }
  else
  {
    (*(void (**)(void *))(v8 + 16))(v11);
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_191CC6BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_191CF2D68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 0x10uLL) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      if (*((void *)v11 + 1) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_29;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_29:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      if (*((void *)v12 + 1) >= 2uLL)
      {
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = *((void *)v12 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      }
      char v26 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 16))(v11, v12, v13);
      char v26 = 0;
    }
    v11[v15] = v26;
  }
  return a1;
}

uint64_t sub_191CC6E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (_OWORD *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    _OWORD *v11 = *(_OWORD *)v12;
    char v19 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v8 + 32))(v11);
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_191CC7008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_191CF2D68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (unsigned __int8 *)((v6 + v9 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) <= 0x10uLL) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = *(void *)(v8 + 64);
    }
    unsigned int v16 = v11[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v11;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v11;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v11;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      if (*((void *)v11 + 1) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v11, v7);
    }
    unsigned int v21 = v12[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v12;
          goto LABEL_29;
        case 2:
          int v24 = *(unsigned __int16 *)v12;
          goto LABEL_29;
        case 3:
          int v24 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_29;
        case 4:
          int v24 = *(_DWORD *)v12;
LABEL_29:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      char v26 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 32))(v11, v12, v13);
      char v26 = 0;
    }
    v11[v15] = v26;
  }
  return a1;
}

uint64_t sub_191CC726C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_191CF2D68() - 8);
  uint64_t v9 = 16;
  if (*(void *)(v8 + 64) > 0x10uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  if (v7 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = v7;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v12 = *(void *)(v6 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_27;
  }
  uint64_t v13 = v9 + (v12 & ~v11) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_27:
      if (v7 < 0xFE)
      {
        unsigned int v22 = *(unsigned __int8 *)((((unint64_t)a1 + v12) & ~v11) + v9);
        if (v22 >= 2) {
          return (v22 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v21 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v21(a1, v7, v5);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_27;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v19 = v13;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_191CC74D8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v27 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_191CF2D68() - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= 0x10) {
    unint64_t v11 = 16;
  }
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v9;
  }
  uint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v14 = *(void *)(v8 + 64) + v13;
  size_t v15 = v11 + 1;
  size_t v16 = (v14 & ~v13) + v11 + 1;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x191CC7840);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFE)
        {
          uint64_t v23 = (unsigned char *)((unint64_t)&a1[v14] & ~v13);
          if (a2 > 0xFE)
          {
            if (v15 <= 3) {
              int v24 = ~(-1 << (8 * v15));
            }
            else {
              int v24 = -1;
            }
            if (v15)
            {
              int v25 = v24 & (a2 - 255);
              if (v15 <= 3) {
                int v26 = v15;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v15);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  *uint64_t v23 = v25;
                  break;
              }
            }
          }
          else
          {
            v23[v11] = -(char)a2;
          }
        }
        else
        {
          unsigned int v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v22(a1, a2, v9, v7);
        }
      }
      return;
  }
}

uint64_t sub_191CC7878()
{
  uint64_t result = sub_191CF2D68();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_191CC7908(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v6 = a2[1];
      if (v6 >= 2)
      {
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    else
    {
      uint64_t v8 = sub_191CF2D68();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_191CC7A20(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t result = *(void *)(a1 + 8);
    if (result >= 2)
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = sub_191CF2D68();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_191CC7AC4(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
  }
  else
  {
    uint64_t v5 = sub_191CF2D68();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_191CC7B8C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(void *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (a2[1] >= 2uLL)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    else
    {
      uint64_t v5 = sub_191CF2D68();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_191CC7C94(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_191CF2D68();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_191CC7D48(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v6 = sub_191CF2D68();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for _ActivitySystemActionForegroundColorModifier()
{
  uint64_t result = qword_1E92E0E00;
  if (!qword_1E92E0E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191CC7EA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ActivitySystemActionForegroundColorModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s7SwiftUI4ViewP9WidgetKitE23activityForegroundColoryQrAA0H0VSgF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _ActivitySystemActionForegroundColorModifier();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v8 + *(int *)(v6 + 20)) = a1;
  swift_retain();
  MEMORY[0x192FE3AA0](v8, a2, v6, a3);
  return sub_191CC7EA0((uint64_t)v8);
}

uint64_t sub_191CC7FF0()
{
  return swift_getWitnessTable();
}

unint64_t sub_191CC805C()
{
  unint64_t result = qword_1E92E0DF8;
  if (!qword_1E92E0DF8)
  {
    type metadata accessor for _ActivitySystemActionForegroundColorModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0DF8);
  }
  return result;
}

uint64_t *sub_191CC80B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_191CC81D0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_191CF4058();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_191CC8270(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_191CF4058();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *sub_191CC8340(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191BB4E54((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_191CF4058();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_191CC842C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_191CF4058();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_191CC8500(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_191BB4E54((uint64_t)a1);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_191CF4058();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_191CC85EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191CC8600);
}

uint64_t sub_191CC8600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_191CC86D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191CC86E4);
}

uint64_t sub_191CC86E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3DD8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

void sub_191CC87A4()
{
  sub_191BB4EF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_191CC8838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CC8854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_191CF4058();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(a2 + 20));
  if (v11)
  {
    sub_191BDC4F0((uint64_t)v10);
    sub_191CF4DB8();
    unsigned int v13 = v12;
    unsigned int v15 = v14;
    unsigned int v17 = v16;
    unsigned int v19 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v20 = v13 | ((unint64_t)v15 << 32);
    unint64_t v21 = v17 | ((unint64_t)v19 << 32);
  }
  else
  {
    unint64_t v20 = 0;
    unint64_t v21 = 0;
  }
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a3, a1, v22);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0DC0);
  uint64_t v24 = a3 + *(int *)(result + 36);
  *(void *)uint64_t v24 = v20;
  *(void *)(v24 + 8) = v21;
  *(unsigned char *)(v24 + 16) = v11 == 0;
  return result;
}

uint64_t sub_191CC89F0(uint64_t a1)
{
  unint64_t v2 = sub_191CBD0C8();

  return MEMORY[0x1F40F9710](a1, v2);
}

ValueMetadata *type metadata accessor for _ActivitySystemActionForegroundColorPreferenceKey()
{
  return &type metadata for _ActivitySystemActionForegroundColorPreferenceKey;
}

unint64_t sub_191CC8A40()
{
  unint64_t result = qword_1E92E0DB8;
  if (!qword_1E92E0DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E0DC0);
    sub_191B00398(&qword_1E92E0DD8, &qword_1E92E0DE0);
    sub_191B00398(&qword_1E92E0DE8, &qword_1E92E0DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0DB8);
  }
  return result;
}

unint64_t sub_191CC8B08()
{
  unint64_t result = qword_1E92E1A98;
  if (!qword_1E92E1A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1A98);
  }
  return result;
}

uint64_t WidgetConfiguration.hiddenBySensitiveUI(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CC8E40(a1, a2, a3, (uint64_t)&unk_1EE2A88C0, (uint64_t)sub_191CC8B8C);
}

uint64_t sub_191CC8B7C()
{
  return swift_deallocObject();
}

uint64_t sub_191CC8B8C(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 96)) = v3;
  return result;
}

uint64_t WidgetConfiguration.requiresFeatureFlag(domain:featureName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a1;
  void v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191CDB0C8((uint64_t)sub_191CB0C90, (uint64_t)v8);

  return swift_release();
}

uint64_t sub_191CC8C84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t WidgetConfiguration.requiresFeatureFlag(_:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF3448();
  uint64_t v2 = sub_191CF5DC8();
  uint64_t v4 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF3458();
  uint64_t v5 = sub_191CF5DC8();
  WidgetConfiguration.requiresFeatureFlag(domain:featureName:)(v2, v4, v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.showsInSystemSpaces()()
{
  return sub_191CDB0C8((uint64_t)sub_191CB0934, 0);
}

uint64_t WidgetConfiguration.disablesControlStateCaching()()
{
  return sub_191CDB0C8((uint64_t)sub_191CC8DEC, 0);
}

uint64_t sub_191CC8DEC(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 120)) = 1;
  return result;
}

uint64_t WidgetConfiguration.showsContextualMenu(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CC8E40(a1, a2, a3, (uint64_t)&unk_1EE2A8910, (uint64_t)sub_191CB081C);
}

uint64_t sub_191CC8E40(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = a1;
  sub_191CDB0C8(a5, v7);

  return swift_release();
}

uint64_t sub_191CC8ECC()
{
  return swift_deallocObject();
}

uint64_t WidgetConfiguration.hiddenControl()()
{
  return sub_191CDB0C8((uint64_t)sub_191CC8F00, 0);
}

uint64_t sub_191CC8F00(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 108)) = 1;
  *(unsigned char *)(a1 + *(int *)(result + 104)) = 1;
  return result;
}

uint64_t WidgetConfiguration.showsInControlCenter()()
{
  return sub_191CDB0C8((uint64_t)sub_191CB0934, 0);
}

uint64_t sub_191CC8F60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CC8FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_191CC8FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_191B0A348;
  return v11(a1, a2, a3, a4);
}

uint64_t EnvironmentValues._widgetDisplayProperties.getter()
{
  sub_191B4EC44();
  sub_191CF4068();
  return v1;
}

void EnvironmentValues._widgetDisplayProperties.setter(void *a1)
{
  uint64_t v2 = sub_191CF39E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = a1;
  sub_191B4EC44();
  id v6 = a1;
  sub_191CF4078();
  objc_msgSend(v6, sel_scale);
  sub_191CF3D78();
  id v7 = objc_msgSend(v6, sel_colorGamut);
  uint64_t v8 = (unsigned int *)MEMORY[0x1E4F3C700];
  if (v7) {
    uint64_t v8 = (unsigned int *)MEMORY[0x1E4F3C6F8];
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *v8, v2);
  sub_191CF3D58();
}

uint64_t sub_191CC925C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C938 = result;
  return result;
}

uint64_t sub_191CC9284()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A630);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C920 = v0;
  *(void *)algn_1EB44C928 = 0xD000000000000018;
  qword_1EB44C930 = 0x8000000191D0DE90;
  return result;
}

id static CHSWidgetDisplayPropertiesCodable.wrapping(_:)(void *a1)
{
  objc_msgSend(a1, sel_scale);
  double v3 = v2;
  id v4 = objc_msgSend(a1, sel_colorGamut);
  id v5 = objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable());

  return objc_msgSend(v5, sel_initWithScale_colorGamut_, v4, v3);
}

uint64_t type metadata accessor for CHSWidgetDisplayPropertiesCodable()
{
  return self;
}

uint64_t sub_191CC9394()
{
  if (qword_1EB44A588 != -1) {
    swift_once();
  }

  return swift_retain();
}

id sub_191CC93F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  objc_msgSend(*a1, sel_scale);
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable()), sel_initWithScale_colorGamut_, objc_msgSend(v3, sel_colorGamut), v4);
  *a2 = result;
  return result;
}

uint64_t sub_191CC9474()
{
  if (qword_1EB44A6B0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C920;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

id sub_191CC94F4()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58E18]), sel_initWithScale_colorGamut_, 1, 2.0);
  qword_1EB44A020 = (uint64_t)result;
  return result;
}

id sub_191CC9530@<X0>(void *a1@<X8>)
{
  if (qword_1EB44A028 != -1) {
    swift_once();
  }
  double v2 = (void *)qword_1EB44A020;
  *a1 = qword_1EB44A020;

  return v2;
}

uint64_t sub_191CC959C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191CCA39C();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

void (*EnvironmentValues._widgetDisplayProperties.modify(uint64_t a1))(void **a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  sub_191B4EC44();
  sub_191CF4068();
  return sub_191CC965C;
}

void sub_191CC965C(void **a1, char a2)
{
  double v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    EnvironmentValues._widgetDisplayProperties.setter(v3);
  }
  else
  {
    EnvironmentValues._widgetDisplayProperties.setter(v2);
  }
}

uint64_t sub_191CC96C4()
{
  uint64_t v1 = 0x656C616373;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D6147726F6C6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_191CC9718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191CCA404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191CC9740(uint64_t a1)
{
  unint64_t v2 = sub_191CC9B14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CC977C(uint64_t a1)
{
  unint64_t v2 = sub_191CC9B14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CHSWidgetDisplayPropertiesCodable.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CHSWidgetDisplayPropertiesCodable.init(from:)(a1);
}

uint64_t CHSWidgetDisplayPropertiesCodable.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CC9B14();
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    swift_deallocPartialClassInstance();
    return (uint64_t)v9;
  }
  LOBYTE(v21) = 0;
  if ((sub_191CF61B8() & 1) == 0)
  {
    char v24 = 1;
    sub_191B8BABC();
    sub_191CF6178();
    double v13 = v21;
    LOBYTE(v21) = 2;
    uint64_t v17 = sub_191CF6168();
    unsigned int v18 = (objc_class *)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    v23.receiver = v3;
    v23.super_class = v18;
    uint64_t v9 = objc_msgSendSuper2(&v23, sel_initWithScale_colorGamut_, v17, v13);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (uint64_t)v9;
  }
  char v24 = 0;
  sub_191B71714();
  sub_191CF6178();
  uint64_t v11 = *(void *)&v21;
  unint64_t v10 = v22;
  sub_191B016E0(0, &qword_1EB449A20);
  sub_191B016E0(0, &qword_1EB449D38);
  uint64_t result = sub_191CF59A8();
  unsigned int v14 = (void *)result;
  if (result)
  {
    unsigned int v15 = (objc_class *)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    v20.receiver = v3;
    v20.super_class = v15;
    unsigned int v16 = v14;
    uint64_t v9 = objc_msgSendSuper2(&v20, sel_initWithWidgetDisplayProperties_, v14);
    sub_191B1603C(v11, v10);

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t sub_191CC9B14()
{
  unint64_t result = qword_1EB44A6D0;
  if (!qword_1EB44A6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A6D0);
  }
  return result;
}

uint64_t sub_191CC9B68(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A520);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CC9B14();
  sub_191CF6528();
  objc_msgSend(v3, sel_scale);
  uint64_t v12 = v9;
  v11[7] = 1;
  sub_191B74708();
  sub_191CF6278();
  if (!v2)
  {
    objc_msgSend(v3, sel_colorGamut);
    v11[6] = 2;
    sub_191CF6268();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL static CHSWidgetDisplayPropertiesCodable.< infix(_:_:)(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_comparedTo_, a2) == (id)-1;
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(displayConfiguration:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithDisplayConfiguration_, a1);

  return v3;
}

void CHSWidgetDisplayPropertiesCodable.init(displayConfiguration:)()
{
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(widgetDisplayProperties:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithWidgetDisplayProperties_, a1);

  return v3;
}

void CHSWidgetDisplayPropertiesCodable.init(widgetDisplayProperties:)()
{
}

void sub_191CC9ED8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(size:scale:colorGamut:)(uint64_t a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithSize_scale_colorGamut_, a1, a2, a3, a4);
}

void CHSWidgetDisplayPropertiesCodable.init(size:scale:colorGamut:)()
{
}

id CHSWidgetDisplayPropertiesCodable.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191CCA014@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable());
  uint64_t result = CHSWidgetDisplayPropertiesCodable.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191CCA068(void *a1)
{
  return sub_191CC9B68(a1);
}

BOOL sub_191CCA08C(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_comparedTo_, *a2) == (id)-1;
}

uint64_t sub_191CCA0BC()
{
  return sub_191CCA594((unint64_t *)&unk_1EB44A700);
}

uint64_t method lookup function for CHSWidgetDisplayPropertiesCodable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CHSWidgetDisplayPropertiesCodable);
}

uint64_t dispatch thunk of CHSWidgetDisplayPropertiesCodable.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CHSWidgetDisplayPropertiesCodable.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

unsigned char *storeEnumTagSinglePayload for CHSWidgetDisplayPropertiesCodable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CCA24CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CHSWidgetDisplayPropertiesCodable.CodingKeys()
{
  return &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys;
}

ValueMetadata *_s37WidgetDisplayPropertiesEnvironmentKeyVMa()
{
  return &_s37WidgetDisplayPropertiesEnvironmentKeyVN;
}

unint64_t sub_191CCA298()
{
  unint64_t result = qword_1E92E53D0;
  if (!qword_1E92E53D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53D0);
  }
  return result;
}

unint64_t sub_191CCA2F0()
{
  unint64_t result = qword_1EB44A6E0;
  if (!qword_1EB44A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A6E0);
  }
  return result;
}

unint64_t sub_191CCA348()
{
  unint64_t result = qword_1EB44A6D8;
  if (!qword_1EB44A6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A6D8);
  }
  return result;
}

unint64_t sub_191CCA39C()
{
  unint64_t result = qword_1E92E0A60;
  if (!qword_1E92E0A60)
  {
    sub_191B016E0(255, &qword_1EB449D38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0A60);
  }
  return result;
}

uint64_t sub_191CCA404(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6147726F6C6F63 && a2 == 0xEA00000000007475)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for WidgetDisplayPropertiesKey()
{
  return &type metadata for WidgetDisplayPropertiesKey;
}

uint64_t sub_191CCA560()
{
  return sub_191CCA594(&qword_1EB44A6F0);
}

uint64_t sub_191CCA594(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191CCA5D4()
{
  return sub_191CCA594(&qword_1EB44A6F8);
}

uint64_t sub_191CCA608()
{
  return sub_191CCA594(&qword_1EB44A6E8);
}

ValueMetadata *type metadata accessor for AssuredWidgetMetadataModifier()
{
  return &type metadata for AssuredWidgetMetadataModifier;
}

uint64_t sub_191CCA654()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CCA670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADE8);
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADC0);
  MEMORY[0x1F4188790](v25);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AE08);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADA0);
  uint64_t v12 = MEMORY[0x1F4188790](v24);
  unsigned int v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  unsigned int v16 = (char *)&v22 - v15;
  uint64_t v17 = *(void *)v2;
  uint64_t v18 = *(unsigned __int8 *)(v2 + 8);
  sub_191BDE084(v17, v18);
  sub_191BDCC58(v17, v18, &v27);
  sub_191BDE088(v17, v18);
  if (v27 == 7)
  {
    uint64_t v22 = sub_191CF4D88();
    MEMORY[0x1F4188790](v22);
    *(&v22 - 2) = v23;
    sub_191B00398(&qword_1EB44ADE0, &qword_1EB44ADE8);
    sub_191CF4918();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v14 + *(int *)(v24 + 36), v11, v8);
    *unsigned int v14 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_191CCAB98((uint64_t)v14, (uint64_t)v16);
    sub_191CCAC00((uint64_t)v16, (uint64_t)v7);
    swift_storeEnumTagMultiPayload();
    sub_191CCAA88();
    sub_191CF44D8();
    return sub_191CCAC68((uint64_t)v16);
  }
  else
  {
    uint64_t v20 = v22;
    double v21 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v21(v5, v23, v3);
    v21(v7, (uint64_t)v5, v3);
    swift_storeEnumTagMultiPayload();
    sub_191CCAA88();
    sub_191B00398(&qword_1EB44ADE0, &qword_1EB44ADE8);
    sub_191CF44D8();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  }
}

unint64_t sub_191CCAA88()
{
  unint64_t result = qword_1EB44AD98;
  if (!qword_1EB44AD98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44ADA0);
    sub_191B00398(&qword_1EB44AE00, &qword_1EB44AE08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AD98);
  }
  return result;
}

uint64_t sub_191CCAB28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_191CCAB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191CCAC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191CCAC68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191CCACCC()
{
  unint64_t result = qword_1EB44AD78;
  if (!qword_1EB44AD78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44ADD8);
    sub_191CCAA88();
    sub_191B00398(&qword_1EB44ADE0, &qword_1EB44ADE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AD78);
  }
  return result;
}

WidgetKit::ArchiveVersion_optional __swiftcall ArchiveVersion.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::ArchiveVersion_optional)rawValue;
}

uint64_t ArchiveVersion.rawValue.getter()
{
  return *v0;
}

unint64_t sub_191CCAD94()
{
  unint64_t result = qword_1E92E53D8;
  if (!qword_1E92E53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53D8);
  }
  return result;
}

uint64_t sub_191CCADE8()
{
  return sub_191CF5508();
}

uint64_t sub_191CCAE48()
{
  return sub_191CF54E8();
}

unsigned char *storeEnumTagSinglePayload for ArchiveVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CCAF64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchiveVersion()
{
  return &type metadata for ArchiveVersion;
}

unint64_t sub_191CCAF9C()
{
  unint64_t result = qword_1E92E53E0;
  if (!qword_1E92E53E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E53E0);
  }
  return result;
}

uint64_t sub_191CCAFF0(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x1F4188790](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        _OWORD *v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    double v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_191CF50F8();
}

uint64_t sub_191CCB1B4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_191BDE300, a1);
}

uint64_t sub_191CCB1D4()
{
  return sub_191CF4078();
}

id sub_191CCB220(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 56);
  id v3 = *(id *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_191B1BB44(*(id *)v2, v4);
  id v5 = sub_191BDC0A4(v3, v4);
  sub_191B1BBA0(v3, v4);
  return v5;
}

uint64_t sub_191CCB280@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  sub_191B1BB50(*(void *)v4, v6);
  sub_191BDD890(v5, v6, a2);

  return sub_191B172D4(v5, v6);
}

uint64_t sub_191CCB2EC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 64);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_191B1BB50(*(void *)v2, v4);
  char v5 = sub_191BDD1F0(v3, v4);
  sub_191B172D4(v3, v4);
  return v5 & 1;
}

double sub_191CCB34C(uint64_t a1)
{
  id v2 = sub_191CCB220(a1);
  id v3 = objc_msgSend(v2, sel_nestedContentMetrics);

  if (!v3) {
    goto LABEL_4;
  }
  sub_191B016E0(0, &qword_1E92E3080);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C010);
  sub_191CD1BB4();
  uint64_t v4 = sub_191CF5248();

  char v5 = (void *)sub_191CF5B38();
  char v6 = sub_191C6E2C0(v5, v4);

  swift_bridgeObjectRelease();
  if (v6)
  {
    objc_msgSend(v6, sel_size);
  }
  else
  {
LABEL_4:
    char v6 = sub_191CCB220(a1);
    objc_msgSend(v6, sel_size);
  }
  double v8 = v7;

  return v8;
}

uint64_t sub_191CCB46C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (sub_191CCB2EC(a1))
  {
    sub_191CF4D78();
  }
  else
  {
    sub_191CF4D98();
    sub_191CCB280(a1, &v6);
  }
  uint64_t v4 = sub_191CF4DA8();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t AccessoryWidgetGroup.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v33 = a1[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E53F0);
  sub_191CF3BA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E53F8);
  sub_191CF3BA8();
  sub_191CF3BA8();
  uint64_t v31 = (void *)a1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5400);
  uint64_t v4 = a1[5];
  uint64_t v47 = v31;
  uint64_t v48 = v3;
  uint64_t v49 = v4;
  unint64_t v50 = sub_191CCBA7C();
  sub_191CF4668();
  sub_191CF4E48();
  sub_191CF3BA8();
  swift_getTupleTypeMetadata2();
  sub_191CF50E8();
  swift_getWitnessTable();
  uint64_t v5 = sub_191CF5018();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_191CF3BA8();
  uint64_t v34 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (char *)&v28 - v10;
  uint64_t v11 = sub_191CF3BA8();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v30 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v32 = (char *)&v28 - v14;
  sub_191CF43C8();
  uint64_t v38 = v33;
  uint64_t v39 = v31;
  uint64_t v40 = a1[4];
  uint64_t v41 = v4;
  uint64_t v42 = v36;
  sub_191CF5008();
  sub_191CF3BB8();
  sub_191CF4948();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191CF4C38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = (void *)swift_getKeyPath();
  uint64_t v47 = KeyPath;
  LOBYTE(v48) = 0;
  uint64_t v49 = v17;
  unint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  char v53 = 0;
  uint64_t v54 = v18;
  char v55 = 0;
  uint64_t v56 = v19;
  char v57 = 0;
  uint64_t v45 = WitnessTable;
  uint64_t v46 = MEMORY[0x1E4F3DF38];
  uint64_t v20 = swift_getWitnessTable();
  double v21 = v30;
  unint64_t v22 = v29;
  MEMORY[0x192FE3AA0](&v47, v9, &type metadata for LayoutInsetsModifier, v20);
  sub_191B1BBA0(KeyPath, 0);
  sub_191BDDF7C(v17, 0, 0, 0, 0);
  sub_191B172D4(v18, 0);
  sub_191B1BBA0(v19, 0);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v9);
  unint64_t v23 = sub_191CCF274();
  uint64_t v43 = v20;
  unint64_t v44 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = v32;
  sub_191C6C7AC(v21, v11, v24);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v35 + 8);
  v26(v21, v11);
  sub_191C6C7AC(v25, v11, v24);
  return ((uint64_t (*)(char *, uint64_t))v26)(v25, v11);
}

unint64_t sub_191CCBA7C()
{
  unint64_t result = qword_1E92E5408;
  if (!qword_1E92E5408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5400);
    sub_191CCBAF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5408);
  }
  return result;
}

unint64_t sub_191CCBAF8()
{
  unint64_t result = qword_1E92E5410;
  if (!qword_1E92E5410)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5418);
    sub_191CCBB74();
    sub_191CCBD54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5410);
  }
  return result;
}

unint64_t sub_191CCBB74()
{
  unint64_t result = qword_1E92E5420;
  if (!qword_1E92E5420)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5428);
    sub_191CCBC14();
    sub_191B00398(&qword_1E92E5460, &qword_1E92E5468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5420);
  }
  return result;
}

unint64_t sub_191CCBC14()
{
  unint64_t result = qword_1E92E5430;
  if (!qword_1E92E5430)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5438);
    sub_191CCBCB4();
    sub_191B00398(&qword_1E92E5450, &qword_1E92E5458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5430);
  }
  return result;
}

unint64_t sub_191CCBCB4()
{
  unint64_t result = qword_1E92E5440;
  if (!qword_1E92E5440)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5448);
    sub_191B00398(&qword_1E92E5450, &qword_1E92E5458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5440);
  }
  return result;
}

unint64_t sub_191CCBD54()
{
  unint64_t result = qword_1E92E5470;
  if (!qword_1E92E5470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5478);
    sub_191B00398(&qword_1E92E5480, &qword_1E92E5488);
    sub_191B00398(&qword_1E92E5490, &qword_1E92E5498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5470);
  }
  return result;
}

uint64_t sub_191CCBE14@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v110 = a4;
  uint64_t v83 = a1;
  uint64_t v107 = a6;
  uint64_t v116 = a2;
  uint64_t v117 = a3;
  unint64_t v118 = a4;
  unint64_t v119 = a5;
  unint64_t v93 = a5;
  uint64_t v96 = type metadata accessor for AccessoryWidgetGroup();
  uint64_t v98 = *(void *)(v96 - 8);
  uint64_t v101 = *(void *)(v98 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v96);
  uint64_t v95 = (char *)v78 - v11;
  uint64_t v12 = (char *)a3;
  uint64_t v89 = a3;
  uint64_t v92 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  double v91 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5400);
  uint64_t v100 = v14;
  unint64_t v99 = sub_191CCBA7C();
  uint64_t v116 = v12;
  uint64_t v117 = v14;
  unint64_t v118 = a5;
  unint64_t v119 = v99;
  uint64_t v103 = sub_191CF4668();
  uint64_t v97 = sub_191CF4E48();
  uint64_t v105 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  double v90 = (char *)v78 - v15;
  uint64_t v104 = sub_191CF3BA8();
  uint64_t v106 = *(void *)(v104 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v104);
  double v94 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v102 = (char *)v78 - v18;
  uint64_t v88 = sub_191CF4EE8();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v86 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B038);
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v22 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_191CF4AE8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  char v27 = (char *)v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *((void *)a2 - 1);
  MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E53F0);
  uint64_t v108 = a2;
  uint64_t v31 = sub_191CF3BA8();
  uint64_t v82 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v79 = (char *)v78 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E53F8);
  uint64_t v81 = sub_191CF3BA8();
  uint64_t v85 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  char v80 = (char *)v78 - v33;
  uint64_t v84 = sub_191CF3BA8();
  uint64_t v112 = *(void *)(v84 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v84);
  int v109 = (char *)v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v111 = (char *)v78 - v36;
  (*(void (**)(char *, uint64_t, char *))(v28 + 16))(v30, a1, a2);
  uint64_t v37 = v23;
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v27, *MEMORY[0x1E4F3E170], v23);
  uint64_t v38 = *MEMORY[0x1E4F3E090];
  uint64_t v39 = sub_191CF49C8();
  uint64_t v40 = *(void *)(v39 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v22, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v22, 0, 1, v39);
  sub_191CF4A48();
  sub_191CF4A78();
  sub_191B01770((uint64_t)v22, &qword_1EB44B038);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v37);
  uint64_t v41 = v79;
  uint64_t v42 = v108;
  unint64_t v43 = v110;
  sub_191CF4CF8();
  swift_release();
  (*(void (**)(char *, char *))(v28 + 8))(v30, v42);
  uint64_t v44 = v87;
  uint64_t v45 = v86;
  uint64_t v46 = v88;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, *MEMORY[0x1E4F3EC60], v88);
  uint64_t v47 = sub_191B00398(&qword_1E92E55F0, &qword_1E92E53F0);
  v115[9] = v43;
  v115[10] = v47;
  uint64_t v48 = MEMORY[0x1E4F3CC28];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v50 = v80;
  sub_191CF4BB8();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v31);
  sub_191CF5098();
  uint64_t v51 = sub_191B00398(&qword_1E92E55F8, &qword_1E92E53F8);
  v115[7] = WitnessTable;
  v115[8] = v51;
  v78[1] = v48;
  uint64_t v76 = v81;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v52 = v109;
  sub_191CF4D18();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v76);
  v115[5] = v77;
  v115[6] = MEMORY[0x1E4F3CE38];
  uint64_t v53 = v84;
  uint64_t v86 = (char *)swift_getWitnessTable();
  sub_191C6C7AC(v52, v53, v86);
  uint64_t v87 = *(void *)(v112 + 8);
  uint64_t v88 = v112 + 8;
  ((void (*)(char *, uint64_t))v87)(v52, v53);
  uint64_t v54 = v96;
  uint64_t v55 = v83;
  uint64_t v56 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v83 + *(int *)(v96 + 52), v89);
  uint64_t v57 = v98;
  uint64_t v58 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v95, v55, v54);
  unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  int v60 = (char *)swift_allocObject();
  *((void *)v60 + 2) = v108;
  *((void *)v60 + 3) = v56;
  unint64_t v61 = v93;
  *((void *)v60 + 4) = v110;
  *((void *)v60 + 5) = v61;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v60[v59], v58, v54);
  uint64_t v62 = v90;
  sub_191CF4E38();
  sub_191CCB34C(v54);
  sub_191CF5088();
  v115[4] = swift_getWitnessTable();
  uint64_t v63 = v97;
  uint64_t v64 = swift_getWitnessTable();
  int v65 = v94;
  sub_191CF4D08();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v62, v63);
  v115[2] = v64;
  v115[3] = MEMORY[0x1E4F3C7D0];
  uint64_t v66 = v104;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = v102;
  sub_191C6C7AC(v65, v66, v67);
  uint64_t v69 = v106;
  uint64_t v70 = *(void (**)(char *, uint64_t))(v106 + 8);
  v70(v65, v66);
  uint64_t v71 = v111;
  uint64_t v72 = v109;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v109, v111, v53);
  uint64_t v116 = v72;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v65, v68, v66);
  uint64_t v117 = (uint64_t)v65;
  v115[0] = v53;
  v115[1] = v66;
  uint64_t v113 = v86;
  uint64_t v114 = v67;
  sub_191CCAFF0((uint64_t)&v116, 2uLL, (uint64_t)v115);
  v70(v68, v66);
  uint64_t v73 = v71;
  int v74 = (uint64_t (*)(char *, uint64_t))v87;
  ((void (*)(char *, uint64_t))v87)(v73, v53);
  v70(v65, v66);
  return v74(v72, v53);
}

uint64_t sub_191CCCB5C@<X0>(uint64_t a1@<X8>)
{
  return sub_191CCBE14(*(void *)(v1 + 48), *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_191CCCB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v72 = a6;
  uint64_t v71 = a5;
  uint64_t v70 = a4;
  uint64_t v69 = a3;
  uint64_t v73 = a2;
  uint64_t v83 = a7;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5498);
  MEMORY[0x1F4188790](v66);
  unint64_t v61 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5600);
  MEMORY[0x1F4188790](v63);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5478);
  MEMORY[0x1F4188790](v77);
  uint64_t v68 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5488);
  MEMORY[0x1F4188790](v64);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5468);
  MEMORY[0x1F4188790](v67);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5608);
  MEMORY[0x1F4188790](v81);
  uint64_t v82 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5610);
  MEMORY[0x1F4188790](v74);
  uint64_t v76 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5618);
  MEMORY[0x1F4188790](v62);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5428);
  MEMORY[0x1F4188790](v75);
  int v65 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5418);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_191CF4378();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_191CF4688();
  uint64_t v79 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, a1, v22);
  sub_191C54B98(3);
  sub_191CD1C1C();
  sub_191CF5788();
  sub_191CF57E8();
  switch(sub_191CF57D8())
  {
    case 0:
      uint64_t v88 = v69;
      uint64_t v89 = v70;
      uint64_t v90 = v71;
      uint64_t v91 = v72;
      uint64_t v29 = type metadata accessor for AccessoryWidgetGroup();
      sub_191CCB46C(v29, &v88);
      uint64_t v30 = v88;
      sub_191CCB46C(v29, &v84);
      uint64_t v31 = v84;
      sub_191CCB46C(v29, &v92);
      uint64_t v84 = v30;
      uint64_t v85 = v31;
      uint64_t v86 = v92;
      char v87 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5448);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5458);
      sub_191CCBCB4();
      sub_191B00398(&qword_1E92E5450, &qword_1E92E5458);
      sub_191CF44D8();
      uint64_t v32 = v88;
      uint64_t v33 = v89;
      uint64_t v34 = v90;
      LOBYTE(v31) = v91;
      *(void *)uint64_t v19 = v88;
      *((void *)v19 + 1) = v33;
      uint64_t v72 = v33;
      uint64_t v73 = v32;
      *((void *)v19 + 2) = v34;
      unsigned char v19[24] = v31;
      swift_storeEnumTagMultiPayload();
      sub_191CD1CE8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5438);
      sub_191CCBC14();
      sub_191B00398(&qword_1E92E5460, &qword_1E92E5468);
      uint64_t v35 = (uint64_t)v65;
      sub_191CF44D8();
      sub_191B01614(v35, v76, &qword_1E92E5428);
      swift_storeEnumTagMultiPayload();
      sub_191CCBB74();
      sub_191CCBD54();
      uint64_t v36 = (uint64_t)v78;
      sub_191CF44D8();
      sub_191B01770(v35, &qword_1E92E5428);
      sub_191B01614(v36, v82, &qword_1E92E5418);
      swift_storeEnumTagMultiPayload();
      sub_191CCBAF8();
      sub_191CF44D8();
      sub_191B01770(v36, &qword_1E92E5418);
      sub_191CD1D2C();
      return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v28, v26);
    case 1:
      sub_191CF4698();
      uint64_t v88 = v69;
      uint64_t v89 = v70;
      uint64_t v90 = v71;
      uint64_t v91 = v72;
      uint64_t v37 = type metadata accessor for AccessoryWidgetGroup();
      sub_191CCB46C(v37, &v92);
      uint64_t v84 = v92;
      LOBYTE(v85) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1AF0);
      sub_191CD1C74();
      sub_191CF44D8();
      uint64_t v38 = v88;
      char v39 = v89;
      sub_191CCB46C(v37, &v92);
      uint64_t v84 = v92;
      LOBYTE(v85) = 0;
      sub_191CF44D8();
      uint64_t v40 = v88;
      char v41 = v89;
      uint64_t v42 = v67;
      unint64_t v43 = &v15[*(int *)(v67 + 68)];
      *(void *)unint64_t v43 = v38;
      void v43[8] = v39;
      uint64_t v44 = &v15[*(int *)(v42 + 72)];
      *(void *)uint64_t v44 = v40;
      v44[8] = v41;
      uint64_t v45 = &qword_1E92E5468;
      sub_191B01614((uint64_t)v15, (uint64_t)v19, &qword_1E92E5468);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5438);
      sub_191CCBC14();
      sub_191B00398(&qword_1E92E5460, &qword_1E92E5468);
      uint64_t v46 = (uint64_t)v65;
      sub_191CF44D8();
      uint64_t v47 = &qword_1E92E5428;
      sub_191B01614(v46, v76, &qword_1E92E5428);
      swift_storeEnumTagMultiPayload();
      sub_191CCBB74();
      sub_191CCBD54();
      uint64_t v48 = (uint64_t)v78;
      sub_191CF44D8();
      uint64_t v49 = v46;
      goto LABEL_7;
    case 2:
      sub_191CF4698();
      uint64_t v50 = v64;
      sub_191CF4698();
      uint64_t v88 = v69;
      uint64_t v89 = v70;
      uint64_t v90 = v71;
      uint64_t v91 = v72;
      uint64_t v51 = type metadata accessor for AccessoryWidgetGroup();
      sub_191CCB46C(v51, &v92);
      uint64_t v84 = v92;
      LOBYTE(v85) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1AF0);
      sub_191CD1C74();
      sub_191CF44D8();
      char v52 = v89;
      uint64_t v53 = &v13[*(int *)(v50 + 72)];
      *(void *)uint64_t v53 = v88;
      v53[8] = v52;
      sub_191B01614((uint64_t)v13, (uint64_t)v10, &qword_1E92E5488);
      swift_storeEnumTagMultiPayload();
      sub_191B00398(&qword_1E92E5480, &qword_1E92E5488);
      sub_191B00398(&qword_1E92E5490, &qword_1E92E5498);
      uint64_t v54 = (uint64_t)v68;
      sub_191CF44D8();
      sub_191B01614(v54, v76, &qword_1E92E5478);
      swift_storeEnumTagMultiPayload();
      sub_191CCBB74();
      sub_191CCBD54();
      uint64_t v55 = (uint64_t)v78;
      sub_191CF44D8();
      sub_191B01770(v54, &qword_1E92E5478);
      sub_191B01614(v55, v82, &qword_1E92E5418);
      swift_storeEnumTagMultiPayload();
      sub_191CCBAF8();
      sub_191CF44D8();
      sub_191B01770(v55, &qword_1E92E5418);
      uint64_t v56 = (uint64_t)v13;
      uint64_t v57 = &qword_1E92E5488;
      goto LABEL_8;
    case 3:
      uint64_t v15 = v61;
      sub_191CF4698();
      sub_191CF4698();
      sub_191CF4698();
      uint64_t v45 = &qword_1E92E5498;
      sub_191B01614((uint64_t)v15, (uint64_t)v10, &qword_1E92E5498);
      swift_storeEnumTagMultiPayload();
      sub_191B00398(&qword_1E92E5480, &qword_1E92E5488);
      sub_191B00398(&qword_1E92E5490, &qword_1E92E5498);
      uint64_t v58 = (uint64_t)v68;
      sub_191CF44D8();
      uint64_t v47 = &qword_1E92E5478;
      sub_191B01614(v58, v76, &qword_1E92E5478);
      swift_storeEnumTagMultiPayload();
      sub_191CCBB74();
      sub_191CCBD54();
      uint64_t v48 = (uint64_t)v78;
      sub_191CF44D8();
      uint64_t v49 = v58;
LABEL_7:
      sub_191B01770(v49, v47);
      sub_191B01614(v48, v82, &qword_1E92E5418);
      swift_storeEnumTagMultiPayload();
      sub_191CCBAF8();
      sub_191CF44D8();
      sub_191B01770(v48, &qword_1E92E5418);
      uint64_t v56 = (uint64_t)v15;
      uint64_t v57 = v45;
LABEL_8:
      sub_191B01770(v56, v57);
      break;
    default:
      swift_storeEnumTagMultiPayload();
      sub_191CCBAF8();
      sub_191CF44D8();
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v28, v26);
}

uint64_t sub_191CCD934()
{
  uint64_t v0 = sub_191B532D0((uint64_t)&unk_1EE2A3748);
  uint64_t result = swift_arrayDestroy();
  qword_1E92E53E8 = v0;
  return result;
}

double sub_191CCD980()
{
  id v1 = *(id *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_191B1BB44(*(id *)v0, v2);
  id v3 = sub_191BDC0A4(v1, v2);
  sub_191B1BBA0(v1, v2);
  id v4 = objc_msgSend(v3, sel_widgetGroupMargins);

  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 56);
    char v6 = *(unsigned char *)(v0 + 64);
    sub_191B1BB50(v5, v6);
    char v7 = sub_191BDD1F0(v5, v6);
    sub_191B172D4(v5, v6);
    if (v7) {
      goto LABEL_10;
    }
    if (qword_1E92E2D20 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1E92E53E8;
    uint64_t v9 = self;
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v9, sel_mainBundle);
    id v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      uint64_t v12 = sub_191CF5338();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v14 = 0xE300000000000000;
      uint64_t v12 = 7104878;
    }
    char v18 = sub_191C547BC(v12, v14, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_10:
      objc_msgSend(v4, sel_layoutInsets);
      double v17 = v19;
      objc_msgSend(v4, sel_layoutInsets);
      objc_msgSend(v4, sel_layoutInsets);
      objc_msgSend(v4, sel_layoutInsets);
    }
    else
    {
      objc_msgSend(v4, sel_layoutInsets);
      double v21 = v20;
      long long v22 = *(_OWORD *)(v0 + 32);
      v25[0] = *(_OWORD *)(v0 + 16);
      v25[1] = v22;
      char v26 = *(unsigned char *)(v0 + 48);
      sub_191CD1890((uint64_t)v25, (uint64_t)v27);
      sub_191CD18F8((uint64_t)v27, (void (*)(void, void, void, void, void))sub_191CD058C);
      double v23 = sub_191BDDD24();
      sub_191CD18F8((uint64_t)v25, (void (*)(void, void, void, void, void))sub_191BDDF7C);
      double v17 = v21 - v23;
      objc_msgSend(v4, sel_layoutInsets);
      sub_191CD18F8((uint64_t)v27, (void (*)(void, void, void, void, void))sub_191CD058C);
      sub_191BDDD24();
      sub_191CD18F8((uint64_t)v25, (void (*)(void, void, void, void, void))sub_191BDDF7C);
      objc_msgSend(v4, sel_layoutInsets);
      sub_191CD18F8((uint64_t)v27, (void (*)(void, void, void, void, void))sub_191CD058C);
      sub_191BDDD24();
      sub_191CD18F8((uint64_t)v25, (void (*)(void, void, void, void, void))sub_191BDDF7C);
      objc_msgSend(v4, sel_layoutInsets);
      sub_191CD18F8((uint64_t)v27, (void (*)(void, void, void, void, void))sub_191CD058C);
      sub_191BDDD24();
      sub_191CD18F8((uint64_t)v25, (void (*)(void, void, void, void, void))sub_191BDDF7C);
    }
  }
  else
  {
    sub_191B1BB44(v1, v2);
    id v15 = sub_191BDC0A4(v1, v2);
    sub_191B1BBA0(v1, v2);
    objc_msgSend(v15, sel_safeAreaInsets);

    sub_191B1BB44(v1, v2);
    id v16 = sub_191BDC0A4(v1, v2);
    sub_191B1BBA0(v1, v2);
    objc_msgSend(v16, sel_safeAreaInsets);

    return 0.0;
  }
  return v17;
}

uint64_t sub_191CCDD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_191CCD980();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v11 = sub_191CF4948();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E55D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a2, a1, v12);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E55D8);
  uint64_t v14 = a2 + *(int *)(result + 36);
  *(unsigned char *)uint64_t v14 = v11;
  *(double *)(v14 + 8) = v4;
  *(void *)(v14 + 16) = v6;
  *(void *)(v14 + 24) = v8;
  *(void *)(v14 + 32) = v10;
  *(unsigned char *)(v14 + 40) = 0;
  return result;
}

uint64_t sub_191CCDE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v4 = v20;
  uint64_t v21 = MEMORY[0x1E4F3EDA0];
  uint64_t v22 = v3;
  uint64_t v23 = MEMORY[0x1E4F3EDA0];
  uint64_t v24 = *(void *)(a1 + 32);
  uint64_t v5 = v24;
  swift_getTupleTypeMetadata();
  sub_191CF50E8();
  swift_getWitnessTable();
  uint64_t v6 = sub_191CF4FF8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v16 - v11;
  v16[4] = v4;
  v16[5] = v3;
  uint64_t v16[6] = v5;
  long long v17 = *(_OWORD *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = v16[0];
  sub_191CF41B8();
  sub_191CF4FE8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_191C6C7AC(v10, v6, WitnessTable);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  sub_191C6C7AC(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_191CCE040@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v54 = a8;
  uint64_t v53 = *((void *)a4 - 1);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v57 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v51 = (char *)&v47 - v18;
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v56 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v22);
  uint64_t v55 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v47 - v30;
  uint64_t v50 = v32;
  sub_191C6C7AC(v29, v33, v32);
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v49 = a6;
  uint64_t v72 = a6;
  uint64_t v73 = a7;
  uint64_t v34 = a7;
  uint64_t v47 = a7;
  uint64_t v35 = type metadata accessor for NestedContent();
  uint64_t v36 = a1 + *(int *)(v35 + 68);
  uint64_t v48 = v24;
  sub_191C6C7AC(v36, a3, a6);
  uint64_t v37 = v51;
  sub_191C6C7AC(a1 + *(int *)(v35 + 72), a4, v34);
  uint64_t v38 = v55;
  (*(void (**)(char *, char *, char *))(v26 + 16))(v55, v31, a2);
  uint64_t v66 = 0;
  char v67 = 1;
  uint64_t v68 = v38;
  uint64_t v69 = &v66;
  uint64_t v39 = v52;
  uint64_t v40 = v56;
  (*(void (**)(char *, char *, uint64_t *))(v52 + 16))(v56, v24, a3);
  uint64_t v64 = 0;
  char v65 = 1;
  uint64_t v70 = v40;
  uint64_t v71 = &v64;
  uint64_t v41 = v53;
  uint64_t v42 = v57;
  (*(void (**)(char *, char *, char *))(v53 + 16))(v57, v37, a4);
  uint64_t v72 = v42;
  v63[0] = a2;
  v63[1] = MEMORY[0x1E4F3EDA0];
  v63[2] = a3;
  v63[3] = MEMORY[0x1E4F3EDA0];
  v63[4] = a4;
  uint64_t v58 = v50;
  uint64_t v59 = MEMORY[0x1E4F3ED90];
  uint64_t v60 = v49;
  uint64_t v61 = MEMORY[0x1E4F3ED90];
  uint64_t v62 = v47;
  sub_191CCAFF0((uint64_t)&v68, 5uLL, (uint64_t)v63);
  unint64_t v43 = *(void (**)(char *, char *))(v41 + 8);
  v43(v37, a4);
  uint64_t v44 = *(void (**)(char *, uint64_t *))(v39 + 8);
  v44(v48, a3);
  uint64_t v45 = *(void (**)(char *, char *))(v26 + 8);
  v45(v31, a2);
  v43(v57, a4);
  v44(v56, a3);
  return ((uint64_t (*)(char *, char *))v45)(v55, a2);
}

uint64_t _s9WidgetKit09AccessoryA5GroupV5label7contentACyxq_GxyXE_q_yXEtcfC_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for AccessoryWidgetGroup();
  uint64_t v7 = a3 + v6[14];
  *(void *)uint64_t v7 = swift_getKeyPath();
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v8 = a3 + v6[15];
  *(void *)uint64_t v8 = swift_getKeyPath();
  *(unsigned char *)(v8 + 8) = 0;
  uint64_t v9 = a3 + v6[16];
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v9 = KeyPath;
  *(unsigned char *)(v9 + 8) = 0;
  uint64_t v14 = a1(KeyPath, v11, v12, v13);
  return a2(v14);
}

uint64_t AccessoryWidgetGroup<>.init(_:content:)@<X0>(uint64_t (*a1)(uint64_t)@<X4>, uint64_t a2@<X8>)
{
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryWidgetGroup<>.init<A>(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
}

uint64_t sub_191CCE6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_191CF4B88();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

uint64_t AccessoryWidgetGroup<>.init(_:systemImage:content:)@<X0>(uint64_t (*a1)(uint64_t)@<X6>, uint64_t a2@<X8>)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_191CCE87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return MEMORY[0x1F40FC628](a1, a2, a3, a4, a5, a6);
}

uint64_t AccessoryWidgetGroup<>.init<A>(_:systemImage:content:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
}

uint64_t sub_191CCEA30(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  return sub_191CF4F28();
}

uint64_t AccessoryWidgetGroup<>.init(_:image:content:)@<X0>(uint64_t a1@<X4>, uint64_t (*a2)(uint64_t)@<X5>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E54A8);
  sub_191B00398(qword_1E92E54B0, &qword_1E92E54A8);
  AccessoryWidgetGroup.init(label:content:)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_191CCF340, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_191CF3698();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
}

uint64_t sub_191CCEC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_191CF3698();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_191CF4F38();
}

uint64_t AccessoryWidgetGroup<>.init<A>(_:image:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E54A8);
  sub_191B00398(qword_1E92E54B0, &qword_1E92E54A8);
  AccessoryWidgetGroup.init(label:content:)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_191CCF350, a3, a5);
  uint64_t v10 = sub_191CF3698();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a2, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
}

uint64_t sub_191CCEE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_191CF3698();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  return sub_191CF4F48();
}

void static AccessoryWidgetGroupStyle.circular.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static AccessoryWidgetGroupStyle.roundedSquare.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static AccessoryWidgetGroupStyle.automatic.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t View.accessoryWidgetGroupStyle(_:)()
{
  return swift_release();
}

uint64_t sub_191CCF0B8()
{
  sub_191CD1938();

  return sub_191CF4068();
}

uint64_t View.AccessoryWidgetGroupStyle(_:)()
{
  return View.accessoryWidgetGroupStyle(_:)();
}

uint64_t sub_191CCF130@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_191BA09FC, a1);
}

uint64_t keypath_get_5Tm@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_191CF4068();
  *a2 = v4;
  return result;
}

double sub_191CCF1AC@<D0>(_OWORD *a1@<X8>)
{
  sub_191BDE090();
  sub_191CF4068();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_191CCF200@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_191BDE300, a1);
}

uint64_t sub_191CCF220()
{
  return sub_191CF4078();
}

unint64_t sub_191CCF274()
{
  unint64_t result = qword_1E92E54A0;
  if (!qword_1E92E54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E54A0);
  }
  return result;
}

uint64_t type metadata accessor for AccessoryWidgetGroup()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191CCF2E8@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_191BA09FC, a1);
}

uint64_t sub_191CCF308@<X0>(uint64_t a1@<X8>)
{
  return sub_191CCE6AC(*(void *)(v1 + 48), a1);
}

uint64_t sub_191CCF318()
{
  return sub_191CCE87C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_191CCF32C()
{
  return sub_191CCEA30(*(void *)(v0 + 48));
}

uint64_t sub_191CCF340()
{
  return sub_191CCEC48(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_191CCF350()
{
  return sub_191CCEE9C(v0[6], v0[7], v0[2], v0[3]);
}

uint64_t sub_191CCF360@<X0>(unsigned char *a1@<X8>)
{
  sub_191CD1938();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191CCF3B0()
{
  return sub_191CF4078();
}

uint64_t sub_191CCF3FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CCF440()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191CCF51C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9) + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (((unint64_t)v4 + v10) & v17) + v11;
    uint64_t v20 = v18 + v11;
    unint64_t v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v23 = *(id *)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    sub_191B1BB44(*(id *)v22, v24);
    *(void *)unint64_t v21 = v23;
    *(unsigned char *)(v21 + 8) = v24;
    unint64_t v25 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = *(void *)v26;
    char v28 = *(unsigned char *)(v26 + 8);
    sub_191B1BB50(*(void *)v26, v28);
    *(void *)unint64_t v25 = v27;
    *(unsigned char *)(v25 + 8) = v28;
    unint64_t v29 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = *(void *)v30;
    char v32 = *(unsigned char *)(v30 + 8);
    sub_191B1BB50(*(void *)v30, v32);
    *(void *)unint64_t v29 = v31;
    *(unsigned char *)(v29 + 8) = v32;
  }
  return v4;
}

uint64_t sub_191CCF728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  unint64_t v9 = v8 + *(void *)(v7 + 56);
  sub_191B1BBA0(*(id *)((v9 + 7) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_191B172D4(*(void *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v10 = (v9 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);

  return sub_191B172D4(v11, v12);
}

uint64_t sub_191CCF814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v14 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v14 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v19 = *(id *)v18;
  LOBYTE(v13) = *(unsigned char *)(v18 + 8);
  sub_191B1BB44(*(id *)v18, v13);
  *(void *)unint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v13;
  unint64_t v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  LOBYTE(v13) = *(unsigned char *)(v21 + 8);
  sub_191B1BB50(*(void *)v21, v13);
  *(void *)unint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v13;
  unint64_t v23 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)v24;
  LOBYTE(v13) = *(unsigned char *)(v24 + 8);
  sub_191B1BB50(*(void *)v24, v13);
  *(void *)unint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v13;
  return a1;
}

uint64_t sub_191CCF95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v14 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v14 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v19 = *(id *)v18;
  LOBYTE(v13) = *(unsigned char *)(v18 + 8);
  sub_191B1BB44(*(id *)v18, v13);
  unint64_t v20 = *(void **)v17;
  char v21 = *(unsigned char *)(v17 + 8);
  *(void *)unint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v13;
  sub_191B1BBA0(v20, v21);
  unint64_t v22 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v13) = *(unsigned char *)(v23 + 8);
  sub_191B1BB50(*(void *)v23, v13);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v13;
  sub_191B172D4(v25, v26);
  unint64_t v27 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v13) = *(unsigned char *)(v28 + 8);
  sub_191B1BB50(*(void *)v28, v13);
  uint64_t v30 = *(void *)v27;
  char v31 = *(unsigned char *)(v27 + 8);
  *(void *)unint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v13;
  sub_191B172D4(v30, v31);
  return a1;
}

uint64_t sub_191CCFAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)unint64_t v17 = v19;
  unint64_t v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)unint64_t v20 = v22;
  unint64_t v23 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v20) = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v20;
  return a1;
}

uint64_t sub_191CCFBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = *(unsigned char *)(v18 + 8);
  unint64_t v20 = *(void **)v17;
  char v21 = *(unsigned char *)(v17 + 8);
  *(void *)unint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v18;
  sub_191B1BBA0(v20, v21);
  unint64_t v22 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = *(unsigned char *)(v23 + 8);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v23;
  sub_191B172D4(v25, v26);
  unint64_t v27 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v28) = *(unsigned char *)(v28 + 8);
  uint64_t v30 = *(void *)v27;
  char v31 = *(unsigned char *)(v27 + 8);
  *(void *)unint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v28;
  sub_191B172D4(v30, v31);
  return a1;
}

uint64_t sub_191CCFD24(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  if (v11 <= 0xFE) {
    unsigned int v11 = 254;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  if (v11 < a2)
  {
    unint64_t v13 = ((v10 + (v12 & ~v9) + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v14 = (a2 - v11 + 255) >> (8 * v13);
    if (v13 < 4) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = a1[v13];
        if (!a1[v13]) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v17 = *(unsigned __int16 *)&a1[v13];
        if (*(_WORD *)&a1[v13]) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191CCFF10);
      case 4:
        int v17 = *(_DWORD *)&a1[v13];
        if (!v17) {
          break;
        }
LABEL_24:
        int v19 = (v17 - 1) << (8 * v13);
        if (v13 >= 4) {
          int v19 = 0;
        }
        if (((v10 + (v12 & ~v9) + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v20 = *a1;
        }
        else {
          int v20 = *(_DWORD *)a1;
        }
        return v11 + (v20 | v19) + 1;
      default:
        break;
    }
  }
  if (v6 == v11) {
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v21 = (unint64_t)&a1[v12] & ~v9;
  if (v8 == v11) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v21);
  }
  unsigned int v22 = *(unsigned __int8 *)(((v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v22 > 1) {
    return (v22 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_191CCFF24(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (v12 <= 0xFE) {
    unsigned int v12 = 254;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v10;
  size_t v14 = ((v11 + (v13 & ~v10) + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v15 = 8 * v14;
  if (v12 >= a3)
  {
    int v19 = 0;
    if (v12 >= a2)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 3:
          goto LABEL_52;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_35;
        default:
LABEL_35:
          if (a2)
          {
LABEL_36:
            if (v7 == v12)
            {
              unsigned int v22 = *(void (**)(void))(v6 + 56);
              v22();
            }
            else
            {
              unint64_t v23 = (unint64_t)&a1[v13] & ~v10;
              if (v9 == v12)
              {
                uint64_t v24 = *(void (**)(unint64_t))(v8 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
                if (a2 > 0xFE)
                {
                  *(unsigned char *)(v25 + 8) = 0;
                  *(void *)unint64_t v25 = a2 - 255;
                }
                else
                {
                  *(unsigned char *)(v25 + 8) = -(char)a2;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = (a3 - v12 + 255) >> v15;
    if (v14 <= 3) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    if (v12 >= a2) {
      goto LABEL_19;
    }
  }
  if (v14 < 4) {
    unsigned int v20 = ((~v12 + a2) >> v15) + 1;
  }
  else {
    unsigned int v20 = 1;
  }
  if (v14 >= 4) {
    unsigned int v21 = ~v12 + a2;
  }
  else {
    unsigned int v21 = (~(_BYTE)v12 + a2);
  }
  bzero(a1, v14);
  if (v14 == 1) {
    *a1 = v21;
  }
  else {
    *(_DWORD *)a1 = v21;
  }
  switch(v19)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_52:
      __break(1u);
      JUMPOUT(0x191CD01F0);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyle()
{
  return &type metadata for AccessoryWidgetGroupStyle;
}

uint64_t sub_191CD022C()
{
  return swift_getWitnessTable();
}

uint64_t sub_191CD03EC()
{
  return swift_getWitnessTable();
}

unsigned char *_s9WidgetKit25AccessoryWidgetGroupStyleV5StyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CD0554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyle.Style()
{
  return &type metadata for AccessoryWidgetGroupStyle.Style;
}

uint64_t sub_191CD058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

void destroy for LayoutInsetsModifier(uint64_t a1)
{
  sub_191B1BBA0(*(id *)a1, *(unsigned char *)(a1 + 8));
  sub_191BDDF7C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  sub_191B172D4(*(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  unint64_t v2 = *(void **)(a1 + 72);
  char v3 = *(unsigned char *)(a1 + 80);

  sub_191B1BBA0(v2, v3);
}

uint64_t initializeWithCopy for LayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  char v10 = *(unsigned char *)(v2 + 48);
  sub_191CD058C(v6, v7, v8, v9, v10);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(v2 + 56);
  LOBYTE(v7) = *(unsigned char *)(v2 + 64);
  sub_191B1BB50(v11, v7);
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v7;
  unsigned int v12 = *(void **)(v2 + 72);
  LOBYTE(v2) = *(unsigned char *)(v2 + 80);
  sub_191B1BB44(v12, v2);
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v2;
  return a1;
}

uint64_t assignWithCopy for LayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 48);
  sub_191CD058C(v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  char v17 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  sub_191BDDF7C(v13, v14, v15, v16, v17);
  uint64_t v18 = *(void *)(v2 + 56);
  LOBYTE(v9) = *(unsigned char *)(v2 + 64);
  sub_191B1BB50(v18, v9);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v18;
  *(unsigned char *)(a1 + 64) = v9;
  sub_191B172D4(v19, v20);
  unsigned int v21 = *(void **)(v2 + 72);
  LOBYTE(v2) = *(unsigned char *)(v2 + 80);
  sub_191B1BB44(v21, v2);
  unsigned int v22 = *(void **)(a1 + 72);
  char v23 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v21;
  *(unsigned char *)(a1 + 80) = v2;
  sub_191B1BBA0(v22, v23);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for LayoutInsetsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  char v8 = *((unsigned char *)a2 + 48);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  long long v14 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 48) = v8;
  sub_191BDDF7C(v9, v10, v11, v12, v13);
  char v15 = *((unsigned char *)a2 + 64);
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = a2[7];
  *(unsigned char *)(a1 + 64) = v15;
  sub_191B172D4(v16, v17);
  char v18 = *((unsigned char *)a2 + 80);
  uint64_t v19 = *(void **)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = a2[9];
  *(unsigned char *)(a1 + 80) = v18;
  sub_191B1BBA0(v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutInsetsModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutInsetsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutInsetsModifier()
{
  return &type metadata for LayoutInsetsModifier;
}

uint64_t sub_191CD0928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_191CD0930()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_191CD0A40(uint64_t *a1, uint64_t *a2, void *a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(a3[3] - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(void *)(v7 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v12 + v14;
  unint64_t v16 = ((v12 + v14 + v11) & ~v14) + *(void *)(v13 + 64);
  uint64_t v17 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v13 + 80));
  if (v17 <= 7
    && v16 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) == 0)
  {
    uint64_t v21 = ~v9;
    uint64_t v22 = ~v14;
    uint64_t v25 = a3[3];
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v23 = ((unint64_t)a2 + v10) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v21, v23, v25);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(((((unint64_t)v4 + v10) & v21) + v15) & v22, (v23 + v15) & v22, v7);
  }
  else
  {
    uint64_t v20 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v4;
}

uint64_t sub_191CD0C44(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(a2[4] - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v11);
}

uint64_t sub_191CD0D2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((*(void *)(v8 + 48) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_191CD0E2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(void *)(v8 + 40) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_191CD0F2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))((*(void *)(v8 + 32) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_191CD102C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(void *)(v8 + 24) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_191CD112C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[2] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = a3[4];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v9) {
    unsigned int v16 = v9;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(*(void *)(a3[2] - 8) + 64) + v13;
  int v18 = a2 - v16;
  if (a2 <= v16) {
    goto LABEL_27;
  }
  uint64_t v19 = ((v14 + v15 + (v17 & ~v13)) & ~v15) + *(void *)(*(void *)(v10 - 8) + 64);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v22 = ((v18 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v22 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v22 < 2)
    {
LABEL_27:
      if (v16)
      {
        if (v6 == v16)
        {
          char v26 = *(uint64_t (**)(void))(v5 + 48);
          return v26();
        }
        else
        {
          unint64_t v28 = ((unint64_t)a1 + v17) & ~v13;
          if (v8 == v16)
          {
            uint64_t v29 = *(uint64_t (**)(unint64_t))(v7 + 48);
            return v29(v28);
          }
          else
          {
            unint64_t v30 = (v28 + v14 + v15) & ~v15;
            char v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
            return v31(v30, v12, v10);
          }
        }
      }
      return 0;
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_27;
  }
LABEL_17:
  int v23 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v23 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v24 = ((v14 + v15 + (v17 & ~v13)) & ~v15) + *(_DWORD *)(*(void *)(v10 - 8) + 64);
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v16 + (v25 | v23) + 1;
}

void sub_191CD1400(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v17 = v12;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v18 = *(void *)(*(void *)(a4[2] - 8) + 64) + v14;
  size_t v19 = ((v15 + v16 + (v18 & ~v14)) & ~v16) + *(void *)(*(void *)(v9 - 8) + 64);
  BOOL v20 = a3 >= v17;
  unsigned int v21 = a3 - v17;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      unsigned int v26 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v26))
      {
        int v22 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v26 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v17 < a2)
  {
    unsigned int v23 = ~v17 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      if (v19)
      {
        int v27 = v23 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v27;
          a1[2] = BYTE2(v27);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v27;
        }
        else
        {
          *a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v19] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v24;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v19] = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v14;
  switch(v22)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x191CD177CLL);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v7 == v17)
      {
        unint64_t v28 = *(void (**)(char *))(v6 + 56);
        uint64_t v29 = a1;
LABEL_30:
        v28(v29);
        return;
      }
      unint64_t v30 = (unint64_t)&a1[v18] & v25;
      if (v11 != v17)
      {
        uint64_t v29 = (char *)((v30 + v15 + v16) & ~v16);
        unint64_t v28 = *(void (**)(char *))(v13 + 56);
        goto LABEL_30;
      }
      char v31 = *(void (**)(unint64_t))(v10 + 56);
      v31(v30);
      return;
  }
}

uint64_t type metadata accessor for NestedContent()
{
  return swift_getGenericMetadata();
}

unint64_t sub_191CD17C0()
{
  unint64_t result = qword_1E92E55C8;
  if (!qword_1E92E55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E55C8);
  }
  return result;
}

uint64_t sub_191CD1814()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CD1830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CD187C@<X0>(uint64_t a1@<X8>)
{
  return sub_191CCE040(*(void *)(v1 + 64), *(char **)(v1 + 16), *(uint64_t **)(v1 + 24), *(char **)(v1 + 32), *(uint64_t **)(v1 + 40), *(char **)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_191CD1890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E55E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191CD18F8(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_191CD1938()
{
  unint64_t result = qword_1E92E55E8;
  if (!qword_1E92E55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E55E8);
  }
  return result;
}

uint64_t sub_191CD198C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  unint64_t v2 = (int *)(type metadata accessor for AccessoryWidgetGroup() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  sub_191B1BBA0(*(id *)(v3 + v2[16]), *(unsigned char *)(v3 + v2[16] + 8));
  sub_191B172D4(*(void *)(v3 + v2[17]), *(unsigned char *)(v3 + v2[17] + 8));
  sub_191B172D4(*(void *)(v3 + v2[18]), *(unsigned char *)(v3 + v2[18] + 8));
  return swift_deallocObject();
}

uint64_t sub_191CD1AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for AccessoryWidgetGroup() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_191CCCB74(a1, v10, v5, v6, v7, v8, a2);
}

unint64_t sub_191CD1BB4()
{
  unint64_t result = qword_1E92E4A20;
  if (!qword_1E92E4A20)
  {
    sub_191B016E0(255, &qword_1E92E3080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E4A20);
  }
  return result;
}

unint64_t sub_191CD1C1C()
{
  unint64_t result = qword_1E92E5620;
  if (!qword_1E92E5620)
  {
    sub_191CF4688();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5620);
  }
  return result;
}

unint64_t sub_191CD1C74()
{
  unint64_t result = qword_1E92E1AE8;
  if (!qword_1E92E1AE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E92E1AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1AE8);
  }
  return result;
}

uint64_t sub_191CD1CE8()
{
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_191CD1D2C()
{
  swift_release();
  swift_release();

  return swift_release();
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyleEnvironmentKey()
{
  return &type metadata for AccessoryWidgetGroupStyleEnvironmentKey;
}

uint64_t sub_191CD1D80()
{
  return swift_getWitnessTable();
}

unint64_t sub_191CD1E34()
{
  unint64_t result = qword_1E92E5628;
  if (!qword_1E92E5628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E55D8);
    sub_191B00398(&qword_1E92E5630, &qword_1E92E55D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5628);
  }
  return result;
}

id WidgetAuxiliaryViewMetadata.Graphic.platformImage.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF4848();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x1E4F3DE58])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    id v11 = sub_191CD2100();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == *MEMORY[0x1E4F3DE50])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    return *(id *)v9;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  return v11;
}

id sub_191CD2100()
{
  uint64_t v0 = sub_191CF4828();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_191CF4808();
  sub_191CF4838();
  id v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v6, v0) == *MEMORY[0x1E4F3DE48])
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
    (*(void (**)(unsigned char *, uint64_t))(v1 + 96))(v4, v0);
    if (*v4)
    {
      sub_191CF47F8();
      uint64_t v9 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      int v10 = self;
      if ((v7 & 0x100000000) != 0) {
        id v11 = objc_msgSend(v10, sel__systemImageNamed_, v9);
      }
      else {
        id v11 = objc_msgSend(v10, sel__systemImageNamed_variableValue_withConfiguration_, v9, 0, *(float *)&v7);
      }
      id v8 = v11;
    }
    else if ((v7 & 0x100000000) != 0)
    {
      sub_191CF47F8();
      unsigned int v12 = (void *)sub_191CF5318();
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(self, sel_systemImageNamed_, v12);
    }
    else
    {
      sub_191CD2360();
      sub_191CF47F8();
      id v8 = (id)sub_191CF5B28();
    }
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v8;
}

unint64_t sub_191CD2360()
{
  unint64_t result = qword_1E92E5638;
  if (!qword_1E92E5638)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92E5638);
  }
  return result;
}

uint64_t Preview.init<A, B>(_:as:using:widget:contentStates:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v16 = *a3;
  unsigned int v17 = (void *)swift_allocObject();
  void v17[2] = a9;
  v17[3] = a10;
  v17[4] = a11;
  v17[5] = a12;
  v17[6] = a5;
  v17[7] = a6;
  uint64_t v24 = a9;
  uint64_t v25 = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
  uint64_t v19 = *(void *)(a9 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(boxed_opaque_existential_1, a4, a9);
  BOOL v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a9;
  v20[3] = a10;
  v20[4] = a11;
  v20[5] = a12;
  v20[6] = a7;
  v20[7] = a8;
  unsigned int v26 = sub_191C09328;
  int v27 = v17;
  char v28 = v16;
  sub_191B004A8(&v23, (uint64_t)v29);
  v29[5] = &unk_1E92E5648;
  v29[6] = v20;
  sub_191CD2868();
  sub_191CF36E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a4, a9);
}

uint64_t sub_191CD251C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CD2554(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a3;
  v5[3] = a5;
  id v8 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_191CD2624;
  return v8();
}

uint64_t sub_191CD2624()
{
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_191CF5F28();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return v2(v1);
}

uint64_t sub_191CD2794()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = (int *)v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_191B63978;
  id v8 = (uint64_t (*)(int *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E92E5640 + dword_1E92E5640);
  return v8(v6, v5, v2, v3, v4);
}

unint64_t sub_191CD2868()
{
  unint64_t result = qword_1E92E5650[0];
  if (!qword_1E92E5650[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E5650);
  }
  return result;
}

uint64_t static PreviewActivityBuilder.buildExpression(_:)(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_191CD2AF0(AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  swift_allocObject();
  uint64_t v4 = sub_191CF5568();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  sub_191CF5618();
  return v4;
}

uint64_t static PreviewActivityBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();

  return MEMORY[0x1F4183ED8](a1, a2, AssociatedTypeWitness);
}

uint64_t static PreviewActivityBuilder.buildArray(_:)()
{
  return sub_191CF54A8();
}

uint64_t sub_191CD2AF0(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t sub_191CD2B60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PreviewActivityBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CodableColor.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3 & 1;
  return result;
}

uint64_t CodableColor.color.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0;
  }
  uint64_t v2 = sub_191CF4DC8();
  return MEMORY[0x192FE3B80](v2);
}

id CodableColor.uiColor.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0;
  }
  uint64_t v2 = (void *)sub_191CF4DC8();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithCGColor_, v2);

  return v1;
}

uint64_t CodableColor.resolved.getter()
{
  return *(void *)v0;
}

uint64_t CodableColor.resolved.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3 & 1;
  return result;
}

uint64_t (*CodableColor.resolved.modify())()
{
  return nullsub_1;
}

BOOL static CodableColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return (*(unsigned char *)(a2 + 16) & 1) == 0 && (sub_191CF4DD8() & 1) != 0;
  }
  return (*(unsigned char *)(a2 + 16) & 1) != 0;
}

uint64_t sub_191CD2CEC()
{
  return 0x6465766C6F736572;
}

uint64_t sub_191CD2D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191CD2D9C(uint64_t a1)
{
  unint64_t v2 = sub_191CD2F70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CD2DD8(uint64_t a1)
{
  unint64_t v2 = sub_191CD2F70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableColor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  HIDWORD(v10) = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD2F70();
  sub_191CF6528();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  char v13 = BYTE4(v10);
  sub_191B5A5B0();
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_191CD2F70()
{
  unint64_t result = qword_1E92E2250;
  if (!qword_1E92E2250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2250);
  }
  return result;
}

uint64_t CodableColor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0F90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD2F70();
  sub_191CF6508();
  if (!v2)
  {
    sub_191B5A6AC();
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v12;
    *(_OWORD *)a2 = v11;
    *(unsigned char *)(a2 + 16) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

BOOL sub_191CD3138(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return (*(unsigned char *)(a2 + 16) & 1) == 0 && (sub_191CF4DD8() & 1) != 0;
  }
  return *(unsigned char *)(a2 + 16) != 0;
}

uint64_t sub_191CD31A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CodableColor.init(from:)(a1, a2);
}

uint64_t sub_191CD31B8(void *a1)
{
  return CodableColor.encode(to:)(a1);
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CodableColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CodableColor()
{
  return &type metadata for CodableColor;
}

unsigned char *storeEnumTagSinglePayload for CodableColor.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191CD32DCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableColor.CodingKeys()
{
  return &type metadata for CodableColor.CodingKeys;
}

unint64_t sub_191CD3318()
{
  unint64_t result = qword_1E92E56D8;
  if (!qword_1E92E56D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E56D8);
  }
  return result;
}

unint64_t sub_191CD3370()
{
  unint64_t result = qword_1E92E2260;
  if (!qword_1E92E2260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2260);
  }
  return result;
}

unint64_t sub_191CD33C8()
{
  unint64_t result = qword_1E92E2258;
  if (!qword_1E92E2258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2258);
  }
  return result;
}

id ModifyControlStateRequest.control.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
}

uint64_t ModifyControlStateRequest.state.getter()
{
  return swift_retain();
}

id ModifyControlStateRequest.__allocating_init(control:state:)(uint64_t a1, uint64_t a2)
{
  return sub_191CD3E90(a1, a2, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state);
}

id ModifyControlStateRequest.init(control:state:)(uint64_t a1, uint64_t a2)
{
  return sub_191CD3F28(a1, a2, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state, type metadata accessor for ModifyControlStateRequest);
}

uint64_t type metadata accessor for ModifyControlStateRequest()
{
  return self;
}

uint64_t static ModifyControlStateRequest.supportsSecureCoding.getter()
{
  return byte_1E92E56E0;
}

uint64_t static ModifyControlStateRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E56E0 = a1;
  return result;
}

uint64_t (*static ModifyControlStateRequest.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_191CD360C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
  unsigned int v4 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state);
  v7[3] = sub_191CF34B8();
  void v7[4] = sub_191CD541C(&qword_1E92E2458);
  v7[0] = v5;
  swift_retain();
  sub_191CF5B18();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

id ModifyControlStateRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ModifyControlStateRequest.init(coder:)(a1);
}

id ModifyControlStateRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  sub_191B016E0(0, &qword_1E92E2AF0);
  unsigned int v4 = v2;
  uint64_t v5 = sub_191CF5AC8();
  if (!v5)
  {

    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191CF3858();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E92F2508);
    id v6 = a1;
    uint64_t v10 = sub_191CF3838();
    os_log_type_t v11 = sub_191CF5928();
    if (os_log_type_enabled(v10, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      char v13 = (void *)swift_slowAlloc();
      *(_DWORD *)char v12 = 138543362;
      if (objc_msgSend(v6, sel_error))
      {
        uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v24 = v14;
        sub_191CF5C08();
      }
      else
      {
        uint64_t v24 = 0;
        sub_191CF5C08();
        uint64_t v14 = 0;
      }
      *char v13 = v14;

      _os_log_impl(&dword_191AF4000, v10, v11, "Unable to decode state for control=(missing identity): %{public}@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v13, -1, -1);
      MEMORY[0x192FE5F00](v12, -1, -1);
    }
    else
    {
    }
    goto LABEL_20;
  }
  id v6 = (id)v5;
  sub_191CF34B8();
  sub_191CD541C(&qword_1E92E2150);
  sub_191CF5B08();
  uint64_t v7 = v24;
  if (!v24)
  {

    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_191CF3858();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E92F2508);
    id v16 = a1;
    unsigned int v17 = sub_191CF3838();
    os_log_type_t v18 = sub_191CF5928();
    if (!os_log_type_enabled(v17, v18))
    {

LABEL_21:
      type metadata accessor for ModifyControlStateRequest();
      swift_deallocPartialClassInstance();
      return 0;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    BOOL v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138543362;
    if (objc_msgSend(v16, sel_error))
    {
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v24 = v21;
      sub_191CF5C08();
    }
    else
    {
      uint64_t v24 = 0;
      sub_191CF5C08();
      uint64_t v21 = 0;
    }
    void *v20 = v21;

    _os_log_impl(&dword_191AF4000, v17, v18, "Unable to decode state for control=(missing identity): %{public}@", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v20, -1, -1);
    MEMORY[0x192FE5F00](v19, -1, -1);

LABEL_20:
    goto LABEL_21;
  }
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control] = v6;
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state] = v7;

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for ModifyControlStateRequest();
  id v8 = objc_msgSendSuper2(&v23, sel_init);

  return v8;
}

void ModifyControlStateRequest.init()()
{
}

id ModifyControlStateRequest.__deallocating_deinit()
{
  return sub_191CD5388(type metadata accessor for ModifyControlStateRequest);
}

uint64_t static ControlsConfigurationXPCContainer.supportsSecureCoding.getter()
{
  return byte_1E92E56E1;
}

uint64_t static ControlsConfigurationXPCContainer.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E56E1 = a1;
  return result;
}

uint64_t (*static ControlsConfigurationXPCContainer.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id ControlsConfigurationXPCContainer.__allocating_init(controls:tokens:)(uint64_t a1, uint64_t a2)
{
  return sub_191CD3E90(a1, a2, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
}

id sub_191CD3E90(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[*a3] = a1;
  *(void *)&v9[*a4] = a2;
  v11.receiver = v9;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id ControlsConfigurationXPCContainer.init(controls:tokens:)(uint64_t a1, uint64_t a2)
{
  return sub_191CD3F28(a1, a2, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens, type metadata accessor for ControlsConfigurationXPCContainer);
}

id sub_191CD3F28(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(void))
{
  *(void *)&v5[*a3] = a1;
  *(void *)&v5[*a4] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)a5();
  return objc_msgSendSuper2(&v7, sel_init);
}

void sub_191CD3F70(void *a1)
{
  sub_191B016E0(0, &qword_1E92E2AF0);
  uint64_t v2 = (void *)sub_191CF5528();
  id v3 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  sub_191C01BC0((unint64_t *)&unk_1E92E5708);
  unsigned int v4 = (void *)sub_191CF5238();
  id v5 = (id)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
}

id ControlsConfigurationXPCContainer.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ControlsConfigurationXPCContainer.init(coder:)(a1);
}

id ControlsConfigurationXPCContainer.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  sub_191B016E0(0, &qword_1E92E2AF0);
  unsigned int v4 = v2;
  uint64_t v5 = sub_191CF5AF8();
  if (!v5)
  {

    goto LABEL_7;
  }
  uint64_t v6 = v5;
  sub_191B016E0(0, &qword_1EB44C680);
  uint64_t v7 = sub_191CF5AE8();
  if (!v7
    || (uint64_t v13 = v7,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5718),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5720),
        (swift_dynamicCast() & 1) == 0))
  {

    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ControlsConfigurationXPCContainer();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v8 = v12;
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls] = v6;
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens] = v8;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for ControlsConfigurationXPCContainer();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

void ControlsConfigurationXPCContainer.init()()
{
}

uint64_t sub_191CD4348()
{
  if (*v0) {
    return 0x736E656B6F74;
  }
  else {
    return 0x736C6F72746E6F63;
  }
}

uint64_t sub_191CD4380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191CD5688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191CD43A8(uint64_t a1)
{
  unint64_t v2 = sub_191CD5484();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CD43E4(uint64_t a1)
{
  unint64_t v2 = sub_191CD5484();

  return MEMORY[0x1F41862B0](a1, v2);
}

id ControlsConfigurationXPCContainer.__deallocating_deinit()
{
  return sub_191CD5388(type metadata accessor for ControlsConfigurationXPCContainer);
}

uint64_t sub_191CD4484(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5728);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD5484();
  sub_191CF6528();
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5738);
  sub_191CD5570((unint64_t *)&unk_1E92E5740, &qword_1E92E24A0);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5720);
    sub_191CD54D8();
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id ControlsConfigurationXPCContainer.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ControlsConfigurationXPCContainer.init(from:)(a1);
}

id ControlsConfigurationXPCContainer.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5760);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD5484();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    type metadata accessor for ControlsConfigurationXPCContainer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5738);
    char v18 = 0;
    sub_191CD5570((unint64_t *)&unk_1E92E5768, &qword_1E92E2200);
    uint64_t v11 = v16;
    sub_191CF6178();
    *(void *)&v8[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls] = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E5720);
    char v18 = 1;
    sub_191CD55F0();
    sub_191CF6178();
    *(void *)&v8[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens] = v19;

    uint64_t v13 = (objc_class *)type metadata accessor for ControlsConfigurationXPCContainer();
    v17.receiver = v8;
    v17.super_class = v13;
    id v9 = objc_msgSendSuper2(&v17, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v9;
}

id sub_191CD4978@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ControlsConfigurationXPCContainer());
  id result = ControlsConfigurationXPCContainer.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191CD49CC(void *a1)
{
  return sub_191CD4484(a1);
}

id ControlTemplateRequest.fileHandle.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
}

id ControlTemplateRequest.control.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
}

id ControlTemplateRequest.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  *a1 = v2;
  return v2;
}

uint64_t ControlTemplateRequest.isPreview.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
}

id ControlTemplateRequest.__allocating_init(fileHandle:control:environment:isPreview:)(void *a1, void *a2, uint64_t *a3, char a4)
{
  id v5 = v4;
  uint64_t v10 = objc_allocWithZone(v5);
  *(void *)&v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control] = a2;
  *(void *)&v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle] = a1;
  uint64_t v11 = *a3;
  v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview] = a4;
  uint64_t v18 = v11;
  uint64_t v12 = v10;
  id v13 = a2;
  id v14 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment] = v18;

  v17.receiver = v12;
  v17.super_class = v5;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id ControlTemplateRequest.init(fileHandle:control:environment:isPreview:)(void *a1, void *a2, uint64_t *a3, char a4)
{
  id v6 = sub_191CD5774(a1, a2, a3, a4);

  return v6;
}

uint64_t static ControlTemplateRequest.supportsSecureCoding.getter()
{
  return byte_1E92E56E2;
}

uint64_t static ControlTemplateRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92E56E2 = a1;
  return result;
}

uint64_t (*static ControlTemplateRequest.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

void sub_191CD4CB8(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
  uint64_t v4 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
  id v6 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  uint64_t v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
  uint64_t v8 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeBool_forKey_, v7, v8);

  id v9 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  id v10 = (id)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);
}

id ControlTemplateRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ControlTemplateRequest.init(coder:)(a1);
}

id ControlTemplateRequest.init(coder:)(void *a1)
{
  sub_191B016E0(0, &qword_1E92E2AF0);
  id v3 = v1;
  uint64_t v4 = sub_191CF5AC8();
  if (!v4)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_191CF3858();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E92F2508);
    id v13 = sub_191CF3838();
    os_log_type_t v14 = sub_191CF5928();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      MEMORY[0x192FE5F00](v15, -1, -1);
    }

    goto LABEL_21;
  }
  uint64_t v5 = OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control;
  *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control) = (Class)v4;
  sub_191B016E0(0, &qword_1EB44C380);
  uint64_t v6 = sub_191CF5AC8();
  if (!v6)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_191CF3858();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E92F2508);
    objc_super v17 = sub_191CF3838();
    os_log_type_t v18 = sub_191CF5928();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      MEMORY[0x192FE5F00](v19, -1, -1);
    }

    goto LABEL_20;
  }
  uint64_t v7 = OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle;
  *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle) = (Class)v6;
  type metadata accessor for WidgetEnvironment.Storage();
  uint64_t v8 = sub_191CF5AC8();
  if (!v8)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_191CF3858();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E92F2508);
    uint64_t v21 = sub_191CF3838();
    os_log_type_t v22 = sub_191CF5928();
    if (os_log_type_enabled(v21, v22))
    {
      objc_super v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v23 = 0;
      _os_log_impl(&dword_191AF4000, v21, v22, "Unable to decode 'environment", v23, 2u);
      MEMORY[0x192FE5F00](v23, -1, -1);
    }

    a1 = *(Class *)((char *)&v3->isa + v7);
LABEL_20:

    a1 = *(Class *)((char *)&v3->isa + v5);
    id v13 = v3;
LABEL_21:

    type metadata accessor for ControlTemplateRequest();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment) = (Class)v8;
  id v9 = (void *)sub_191CF5318();
  unsigned __int8 v10 = objc_msgSend(a1, sel_decodeBoolForKey_, v9);

  *((unsigned char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview) = v10;
  v25.receiver = v3;
  v25.super_class = (Class)type metadata accessor for ControlTemplateRequest();
  id v11 = objc_msgSendSuper2(&v25, sel_init);

  return v11;
}

id ControlTemplateRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ControlTemplateRequest.init()()
{
}

id ControlTemplateRequest.__deallocating_deinit()
{
  return sub_191CD5388(type metadata accessor for ControlTemplateRequest);
}

id sub_191CD5388(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_191CD541C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191CF34B8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ControlsConfigurationXPCContainer()
{
  return self;
}

unint64_t sub_191CD5484()
{
  unint64_t result = qword_1E92E5730;
  if (!qword_1E92E5730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5730);
  }
  return result;
}

unint64_t sub_191CD54D8()
{
  unint64_t result = qword_1E92E5750;
  if (!qword_1E92E5750)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5720);
    sub_191C01BC0(&qword_1E92E24A0);
    sub_191B718A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5750);
  }
  return result;
}

uint64_t sub_191CD5570(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5738);
    sub_191C01BC0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191CD55F0()
{
  unint64_t result = qword_1E92E5778;
  if (!qword_1E92E5778)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E5720);
    sub_191C01BC0(&qword_1E92E2200);
    sub_191B71714();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5778);
  }
  return result;
}

uint64_t sub_191CD5688(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6F72746E6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E656B6F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_191CD5774(void *a1, void *a2, uint64_t *a3, char a4)
{
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control] = a2;
  *(void *)&v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle] = a1;
  uint64_t v7 = *a3;
  v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview] = a4;
  uint64_t v13 = v7;
  uint64_t v8 = v4;
  id v9 = a2;
  id v10 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v8[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment] = v13;

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for ControlTemplateRequest();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for ControlTemplateRequest()
{
  return self;
}

uint64_t method lookup function for ModifyControlStateRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModifyControlStateRequest);
}

uint64_t dispatch thunk of ModifyControlStateRequest.__allocating_init(control:state:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ModifyControlStateRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ModifyControlStateRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for ControlsConfigurationXPCContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlsConfigurationXPCContainer);
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.__allocating_init(controls:tokens:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for ControlTemplateRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlTemplateRequest);
}

uint64_t dispatch thunk of ControlTemplateRequest.__allocating_init(fileHandle:control:environment:isPreview:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ControlTemplateRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlTemplateRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for ControlsConfigurationXPCContainer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CD5AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlsConfigurationXPCContainer.CodingKeys()
{
  return &type metadata for ControlsConfigurationXPCContainer.CodingKeys;
}

unint64_t sub_191CD5B10()
{
  unint64_t result = qword_1E92E57A8;
  if (!qword_1E92E57A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E57A8);
  }
  return result;
}

unint64_t sub_191CD5B68()
{
  unint64_t result = qword_1E92E57B0;
  if (!qword_1E92E57B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E57B0);
  }
  return result;
}

unint64_t sub_191CD5BC0()
{
  unint64_t result = qword_1E92E57B8;
  if (!qword_1E92E57B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E57B8);
  }
  return result;
}

uint64_t sub_191CD5C1C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000191D0C3C0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      unsigned int v6 = "obstructionSizeHeight";
      goto LABEL_6;
    case 2:
      unsigned int v6 = "compactLeadingMetrics";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v3 = 0x8000000191D0C420;
      break;
    case 4:
      unsigned int v6 = "compactMinimalMetrics";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 5:
      unint64_t v5 = 0x6465646E61707865;
      unint64_t v3 = 0xEF7363697274654DLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000191D0C3C0;
  switch(a2)
  {
    case 1:
      uint64_t v8 = "obstructionSizeHeight";
      goto LABEL_14;
    case 2:
      uint64_t v8 = "compactLeadingMetrics";
      goto LABEL_14;
    case 3:
      unint64_t v7 = 0x8000000191D0C420;
      if (v5 != 0xD000000000000016) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v8 = "compactMinimalMetrics";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000015;
      goto LABEL_15;
    case 5:
      unint64_t v7 = 0xEF7363697274654DLL;
      if (v5 != 0x6465646E61707865) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_19:
      }
        char v9 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_191CD5E08(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x647261646E617473;
  }
  else {
    uint64_t v3 = 0x6573616572636E69;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x647261646E617473;
  }
  else {
    uint64_t v5 = 0x6573616572636E69;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CD5EB4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x8000000191D0C4C0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000012;
    }
    else {
      unint64_t v5 = 0xD000000000000013;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000191D0C4E0;
    }
    else {
      unint64_t v6 = 0x8000000191D0C500;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x8000000191D0C4C0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000012;
    }
    else {
      unint64_t v2 = 0xD000000000000013;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x8000000191D0C4E0;
    }
    else {
      unint64_t v3 = 0x8000000191D0C500;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191CD5FAC(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1684828002;
    }
    else {
      uint64_t v2 = 1701736302;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1684828002;
      }
      else {
        uint64_t v5 = 1701736302;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x72616C75676572;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    char v7 = sub_191CF6348();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CD60A8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x8000000191D0CE30;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1684957547;
      break;
    case 2:
      unint64_t v5 = 0x6D6E6F7269766E65;
      unint64_t v3 = 0xEB00000000746E65;
      break;
    case 3:
      unint64_t v5 = 0x646E6148656C6966;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 4:
      unint64_t v5 = 0x5665766968637261;
      unint64_t v3 = 0xEE006E6F69737265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x8000000191D0CE30;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1684957547) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB00000000746E65;
      if (v5 != 0x6D6E6F7269766E65) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x646E6148656C6966;
      unint64_t v6 = 0xEA0000000000656CLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEE006E6F69737265;
      if (v5 != 0x5665766968637261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_191CD6290(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000657079;
  uint64_t v3 = 0x5474736575716572;
  uint64_t v4 = a1;
  uint64_t v5 = 0x5474736575716572;
  unint64_t v6 = 0xEB00000000657079;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6465786966;
      break;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7235949;
      break;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7889261;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6465786966) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7235949;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE300000000000000;
      if (v5 == 7889261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_191CD6408(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746567646977;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746567646977;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6D6E6F7269766E65;
      unint64_t v3 = 0xEB00000000746E65;
      break;
    case 2:
      uint64_t v5 = 0x646E6148656C6966;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 3:
      uint64_t v5 = 0x5665766968637261;
      unint64_t v3 = 0xEE006E6F69737265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000746E65;
      if (v5 == 0x6D6E6F7269766E65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x646E6148656C6966;
      unint64_t v6 = 0xEA0000000000656CLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE006E6F69737265;
      if (v5 == 0x5665766968637261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_191CD65C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x5079616C70736964;
  }
  else {
    uint64_t v3 = 1111970419;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000033;
  }
  if (a2) {
    uint64_t v5 = 0x5079616C70736964;
  }
  else {
    uint64_t v5 = 1111970419;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000033;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CD6664(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1802658148;
  }
  else {
    uint64_t v3 = 0x746867696CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1802658148;
  }
  else {
    uint64_t v5 = 0x746867696CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CD6700(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x746E65746E69;
  }
  else {
    uint64_t v3 = 0x656761726F7473;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x746E65746E69;
  }
  else {
    uint64_t v5 = 0x656761726F7473;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_191CD67A4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000007265;
  unint64_t v3 = 0x696669746E656469;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000016;
    }
    else {
      unint64_t v5 = 0xD00000000000001ALL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000191D0CC70;
    }
    else {
      unint64_t v6 = 0x8000000191D0CC90;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x696669746E656469;
  unint64_t v6 = 0xEA00000000007265;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000016;
    }
    else {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x8000000191D0CC70;
    }
    else {
      unint64_t v2 = 0x8000000191D0CC90;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191CD68B0()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD69CC()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD6A74()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD6B20()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD6C2C()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CD6D2C()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CD6DBC()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD6ED4()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD6F78()
{
  return sub_191CF64C8();
}

uint64_t sub_191CD7080()
{
  return sub_191CF64C8();
}

id PlaceholderRequest.__allocating_init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, char *a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_191CD85B8(a1, a2, a3, a4, a5, a6);

  return v14;
}

id PlaceholderRequest.extensionIdentity.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
}

uint64_t PlaceholderRequest.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id PlaceholderRequest.environment.getter@<X0>(void *a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  *a1 = v2;
  return v2;
}

id PlaceholderRequest.fileHandle.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
}

void PlaceholderRequest.archiveVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion);
}

uint64_t sub_191CD7238(unsigned __int8 *a1, char *a2)
{
  return sub_191CD60A8(*a1, *a2);
}

uint64_t sub_191CD7244()
{
  return sub_191CD6B20();
}

uint64_t sub_191CD724C()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CD7340()
{
  return sub_191CD6F78();
}

uint64_t sub_191CD7348@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CD8678();
  *a1 = result;
  return result;
}

void sub_191CD7378(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x8000000191D0CE30;
  unint64_t v3 = 0xD000000000000011;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      unint64_t v3 = 1684957547;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6D6E6F7269766E65;
      *(void *)(a1 + 8) = 0xEB00000000746E65;
      break;
    case 3:
      *(void *)a1 = 0x646E6148656C6966;
      *(void *)(a1 + 8) = 0xEA0000000000656CLL;
      break;
    case 4:
      strcpy((char *)a1, "archiveVersion");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_191CD7448()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684957547;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
      unint64_t result = 0x646E6148656C6966;
      break;
    case 4:
      unint64_t result = 0x5665766968637261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191CD7508@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CD8678();
  *a1 = result;
  return result;
}

uint64_t sub_191CD7530(uint64_t a1)
{
  unint64_t v2 = sub_191CD8D5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CD756C(uint64_t a1)
{
  unint64_t v2 = sub_191CD8D5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191CD75A8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD9284();
  sub_191CF6528();
  char v10 = v7;
  sub_191BF2A9C();
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_191CD76F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449940);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD9284();
  sub_191CF6508();
  if (!v2)
  {
    sub_191BF69B4();
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191CD7858(uint64_t a1)
{
  unint64_t v2 = sub_191CD9284();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191CD7894(uint64_t a1)
{
  unint64_t v2 = sub_191CD9284();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191CD78D0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_191CD76F0(a1, a2);
}

uint64_t sub_191CD78E8(void *a1)
{
  return sub_191CD75A8(a1);
}

id PlaceholderRequest.init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, char *a6)
{
  id v8 = sub_191CD85B8(a1, a2, a3, a4, a5, a6);

  return v8;
}

uint64_t PlaceholderRequest.__allocating_init(from:)(void *a1)
{
  return sub_191CD86C4(a1);
}

uint64_t sub_191CD7958(void *a1)
{
  uint64_t v3 = v1;
  _OWORD v20[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E57E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CD8D5C();
  sub_191CF6528();
  v20[0] = *(id *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
  HIBYTE(v19) = 0;
  sub_191CF5A88();
  sub_191CD92D8(&qword_1EB44A308);
  sub_191CF6278();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v20[0]) = 1;
  sub_191CF6218();
  v20[0] = *(id *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  HIBYTE(v19) = 2;
  sub_191B717BC();
  sub_191CF6278();
  uint64_t v10 = self;
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
  v20[0] = 0;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v20);
  id v13 = v20[0];
  if (v12)
  {
    id v14 = (void *)sub_191CF30C8();
    uint64_t v16 = v15;
  }
  else
  {
    objc_super v17 = v13;
    os_log_type_t v18 = (void *)sub_191CF2FE8();

    swift_willThrow();
    id v14 = 0;
    uint64_t v16 = (void *)0xF000000000000000;
  }
  v20[0] = v14;
  v20[1] = v16;
  HIBYTE(v19) = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3ED0);
  sub_191BBC418();
  sub_191CF6278();
  LOBYTE(v20[0]) = *(unsigned char *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion);
  HIBYTE(v19) = 4;
  sub_191BF2A9C();
  sub_191CF6208();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_191B170C8((uint64_t)v14, (unint64_t)v16);
}

uint64_t PlaceholderRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PlaceholderRequest.init(coder:)(a1);
}

uint64_t PlaceholderRequest.init(coder:)(void *a1)
{
  sub_191CF5A88();
  id v3 = v1;
  uint64_t v4 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  uint64_t v5 = sub_191CF5AC8();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_191CF5328();
  }
  type metadata accessor for WidgetEnvironment.Storage();
  uint64_t v7 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, &qword_1EB44C380);
  id v8 = (void *)sub_191CF5AC8();
  sub_191B016E0(0, &qword_1EB44C680);
  uint64_t v9 = sub_191CF5AC8();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = sub_191CF30C8();
    unint64_t v13 = v12;

    sub_191CF2F88();
    swift_allocObject();
    sub_191CF2F78();
    sub_191CD8DB0();
    sub_191CF2F58();
    swift_release();

    sub_191B1603C(v11, v13);
    if (v4) {

    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_191CD817C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
  uint64_t v5 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  uint64_t v6 = (void *)sub_191CF5318();
  uint64_t v7 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  id v8 = *(id *)(v2 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  uint64_t v9 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
  uint64_t v11 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v10, v11);

  sub_191CF2FC8();
  swift_allocObject();
  sub_191CF2FB8();
  sub_191CF2F98();
  sub_191CD8E28();
  uint64_t v12 = sub_191CF2FA8();
  unint64_t v14 = v13;
  id v15 = (void *)sub_191CF30A8();
  uint64_t v16 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  sub_191B1603C(v12, v14);
  return swift_release();
}

id PlaceholderRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PlaceholderRequest.init()()
{
}

id PlaceholderRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191CD8568@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_191CD86C4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191CD8594(void *a1)
{
  return sub_191CD7958(a1);
}

id sub_191CD85B8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, char *a6)
{
  uint64_t v9 = *a4;
  char v10 = *a6;
  *(void *)&v6[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = a1;
  uint64_t v11 = &v6[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
  *(void *)uint64_t v11 = a2;
  *((void *)v11 + 1) = a3;
  uint64_t v17 = v9;
  uint64_t v12 = v6;
  id v13 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v17;
  *(void *)&v12[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = a5;
  v12[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = v10;
  id v14 = a5;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for PlaceholderRequest();
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_191CD8678()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_191CD86C4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E5810);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v50 = a1;
  uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v9 = sub_191CD8D5C();
  sub_191CF6508();
  if (!v1)
  {
    uint64_t v10 = v4;
    sub_191CF5A88();
    char v55 = 0;
    sub_191CD92D8(&qword_1EB448ED0);
    sub_191CF6178();
    uint64_t v11 = v52;
    char v55 = 2;
    sub_191B715A4();
    sub_191CF6178();
    uint64_t v12 = v6;
    uint64_t v13 = v3;
    id v14 = v52;
    LOBYTE(v52) = 1;
    uint64_t v15 = sub_191CF6118();
    uint64_t v17 = v16;
    uint64_t v49 = v15;
    char v55 = 4;
    sub_191BF69B4();
    sub_191CF6108();
    unsigned int v54 = v52;
    char v55 = 3;
    sub_191B71714();
    sub_191CF6178();
    id v44 = v17;
    uint64_t v47 = v12;
    uint64_t v48 = v13;
    uint64_t v20 = (uint64_t)v52;
    unint64_t v19 = v53;
    sub_191B016E0(0, &qword_1EB449A20);
    sub_191B016E0(0, &qword_1EB44C380);
    unint64_t v45 = v19;
    uint64_t v21 = sub_191CF59A8();
    uint64_t v46 = v20;
    int v27 = (void *)v21;
    if (v21)
    {
      char v28 = (objc_class *)type metadata accessor for PlaceholderRequest();
      uint64_t v29 = (char *)objc_allocWithZone(v28);
      *(void *)&v29[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = v11;
      unint64_t v30 = (uint64_t *)&v29[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
      uint64_t v31 = (uint64_t)v44;
      *unint64_t v30 = v49;
      v30[1] = v31;
      uint64_t v52 = v14;
      id v32 = v27;
      id v33 = v14;
      uint64_t v34 = v29;
      id v35 = v11;
      WidgetEnvironment.filterForExtensions()();
      *(void *)&v34[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v52;
      *(void *)&v34[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = v32;
      v34[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = v54;
      id v36 = v32;

      v51.receiver = v34;
      v51.super_class = v28;
      uint64_t v8 = (uint64_t)objc_msgSendSuper2(&v51, sel_init);

      sub_191B1603C(v46, v45);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      return v8;
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_191CF5E38();
    uint64_t v38 = (void *)swift_allocError();
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
    *uint64_t v40 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_191CF8410;
    *(void *)(v41 + 56) = &type metadata for PlaceholderRequest.CodingKeys;
    *(void *)(v41 + 64) = v9;
    *(unsigned char *)(v41 + 32) = 3;
    sub_191CF5E18();
    uint64_t v42 = *(void (**)(uint64_t *))(*(void *)(v37 - 8) + 104);
    unsigned int v54 = *MEMORY[0x1E4FBBA80];
    v42(v40);
    id v44 = v38;
    swift_willThrow();
    uint64_t v22 = sub_191CF5E38();
    swift_allocError();
    uint64_t v24 = v23;
    uint64_t v49 = (uint64_t)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00) + 48);
    *uint64_t v24 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_191CF8410;
    *(void *)(v8 + 56) = &type metadata for PlaceholderRequest.CodingKeys;
    *(void *)(v8 + 64) = v9;
    *(unsigned char *)(v8 + 32) = 3;
    id v25 = v44;
    id v26 = v44;
    sub_191CF5E18();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, v54, v22);
    swift_willThrow();
    sub_191B1603C(v46, v45);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v48);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return v8;
}

unint64_t sub_191CD8D5C()
{
  unint64_t result = qword_1E92E57F0;
  if (!qword_1E92E57F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E57F0);
  }
  return result;
}

unint64_t sub_191CD8DB0()
{
  unint64_t result = qword_1EB449930;
  if (!qword_1EB449930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449930);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderRequest()
{
  return self;
}

unint64_t sub_191CD8E28()
{
  unint64_t result = qword_1E92E0F58;
  if (!qword_1E92E0F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0F58);
  }
  return result;
}

uint64_t method lookup function for PlaceholderRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaceholderRequest);
}

uint64_t dispatch thunk of static PlaceholderRequest.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PlaceholderRequest.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PlaceholderRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

unsigned char *storeEnumTagSinglePayload for PlaceholderRequest.CodingProxy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CD9040);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingProxy()
{
  return &type metadata for PlaceholderRequest.CodingProxy;
}

unsigned char *storeEnumTagSinglePayload for PlaceholderRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CD9144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingKeys()
{
  return &type metadata for PlaceholderRequest.CodingKeys;
}

unint64_t sub_191CD9180()
{
  unint64_t result = qword_1E92E57F8;
  if (!qword_1E92E57F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E57F8);
  }
  return result;
}

unint64_t sub_191CD91D8()
{
  unint64_t result = qword_1E92E5800;
  if (!qword_1E92E5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5800);
  }
  return result;
}

unint64_t sub_191CD9230()
{
  unint64_t result = qword_1E92E5808;
  if (!qword_1E92E5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5808);
  }
  return result;
}

unint64_t sub_191CD9284()
{
  unint64_t result = qword_1EB4499D8;
  if (!qword_1EB4499D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4499D8);
  }
  return result;
}

uint64_t sub_191CD92D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191CF5A88();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceholderRequest.CodingProxy.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191CD93B8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingProxy.CodingKeys()
{
  return &type metadata for PlaceholderRequest.CodingProxy.CodingKeys;
}

unint64_t sub_191CD93F4()
{
  unint64_t result = qword_1E92E5820;
  if (!qword_1E92E5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5820);
  }
  return result;
}

unint64_t sub_191CD944C()
{
  unint64_t result = qword_1EB4499F8;
  if (!qword_1EB4499F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4499F8);
  }
  return result;
}

unint64_t sub_191CD94A4()
{
  unint64_t result = qword_1EB4499E0[0];
  if (!qword_1EB4499E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB4499E0);
  }
  return result;
}

uint64_t sub_191CD9500(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 8) = sub_191B17A68;
  *(void *)(v12 + 104) = a5;
  *(void *)(v12 + 112) = v5;
  *(void *)(v12 + 88) = a2;
  *(void *)(v12 + 96) = a4;
  *(void *)(v12 + 80) = a1;
  *(_OWORD *)(v12 + 57) = *(long long *)((char *)a3 + 41);
  long long v13 = a3[2];
  long long v14 = *a3;
  *(_OWORD *)(v12 + 32) = a3[1];
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 16) = v14;
  return MEMORY[0x1F4188298](sub_191CD962C, 0, 0);
}

uint64_t AppIntentTimelineProvider.snapshot(for:in:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 104) = a5;
  *(void *)(v6 + 112) = v5;
  *(void *)(v6 + 88) = a2;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 80) = a1;
  long long v7 = a3[1];
  *(_OWORD *)(v6 + 16) = *a3;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = a3[2];
  *(_OWORD *)(v6 + 57) = *(_OWORD *)((char *)a3 + 41);
  return MEMORY[0x1F4188298](sub_191CD962C, 0, 0);
}

uint64_t sub_191CD962C()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  long long v4 = *(_OWORD *)(v0 + 104);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v0 + 16;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void *v5 = v0;
  v5[1] = sub_191CD975C;
  uint64_t v7 = *(void *)(v0 + 80);
  return MEMORY[0x1F41880D8](v7, 0, 0, 0xD000000000000011, 0x8000000191D12B70, sub_191CDA86C, v3, AssociatedTypeWitness);
}

uint64_t sub_191CD975C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191CD986C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 8) = sub_191B17A68;
  *(void *)(v12 + 104) = a5;
  *(void *)(v12 + 112) = v5;
  *(void *)(v12 + 88) = a2;
  *(void *)(v12 + 96) = a4;
  *(void *)(v12 + 80) = a1;
  *(_OWORD *)(v12 + 57) = *(long long *)((char *)a3 + 41);
  long long v13 = a3[2];
  long long v14 = *a3;
  *(_OWORD *)(v12 + 32) = a3[1];
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 16) = v14;
  return MEMORY[0x1F4188298](sub_191CD9998, 0, 0);
}

uint64_t AppIntentTimelineProvider.timeline(for:in:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 104) = a5;
  *(void *)(v6 + 112) = v5;
  *(void *)(v6 + 88) = a2;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 80) = a1;
  long long v7 = a3[1];
  *(_OWORD *)(v6 + 16) = *a3;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = a3[2];
  *(_OWORD *)(v6 + 57) = *(_OWORD *)((char *)a3 + 41);
  return MEMORY[0x1F4188298](sub_191CD9998, 0, 0);
}

uint64_t sub_191CD9998()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  long long v4 = *(_OWORD *)(v0 + 104);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v0 + 16;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for Timeline();
  void *v5 = v0;
  v5[1] = sub_191CDB0C4;
  uint64_t v7 = *(void *)(v0 + 80);
  return MEMORY[0x1F41880D8](v7, 0, 0, 0xD000000000000011, 0x8000000191D12B90, sub_191CDA884, v3, v6);
}

void sub_191CD9B04()
{
}

void AppIntentTimelineProvider.getSnapshot(for:in:completion:)()
{
}

void sub_191CD9BBC()
{
}

void AppIntentTimelineProvider.getTimeline(for:in:completion:)()
{
}

uint64_t sub_191CD9C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  void v7[4] = a3;
  v7[1] = sub_191B0A348;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_191CD9D54, 0, 0);
}

uint64_t AppIntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_191CD9D54, 0, 0);
}

uint64_t sub_191CD9D54()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_191AFAE08(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191CD9DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return AppIntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t AppIntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(a3 + 88) + **(int **)(a3 + 88));
  uint64_t v6 = (void *)swift_task_alloc();
  v3[6] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_191CD9F90;
  return v8(v3 + 2, a2, a3);
}

uint64_t sub_191CD9F90()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_191CDA08C, 0, 0);
}

uint64_t sub_191CDA08C()
{
  uint64_t v5 = v0;
  uint64_t v1 = (void *)v0[3];
  uint64_t v4 = v0[2];
  swift_getAssociatedTypeWitness();
  sub_191AFB160(&v4, v1);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_191CDA114(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_191CF5678();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)v19 - v13;
  long long v15 = a4[1];
  v19[0] = *a4;
  v19[1] = v15;
  v20[0] = a4[2];
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)a4 + 41);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v19 - v13, a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, v14, v11);
  (*(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 72))(a3, v19, sub_191CDB00C, v17, a5, a6);
  return swift_release();
}

uint64_t sub_191CDA2DC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, AssociatedTypeWitness);
  sub_191CF5678();
  return sub_191CF5668();
}

uint64_t sub_191CDA3DC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline();
  uint64_t v11 = sub_191CF5678();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)v19 - v13;
  long long v15 = a4[1];
  v19[0] = *a4;
  v19[1] = v15;
  v20[0] = a4[2];
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)a4 + 41);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v19 - v13, a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, v14, v11);
  (*(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 80))(a3, v19, sub_191CDAE58, v17, a5, a6);
  return swift_release();
}

uint64_t sub_191CDA5D8(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for Timeline();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, v2);
  sub_191CF5678();
  return sub_191CF5668();
}

uint64_t _s9WidgetKit25AppIntentTimelineProviderPAAE15recommendationsSayAA0cD14RecommendationVy0D0QzGGyF_0()
{
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191CF3858();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB44CCE0);
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5918();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_191AF4000, v1, v2, "Default implementation for recommendations.", v3, 2u);
    MEMORY[0x192FE5F00](v3, -1, -1);
  }

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AppIntentRecommendation();

  return sub_191CF55A8();
}

uint64_t sub_191CDA86C(uint64_t a1)
{
  return sub_191CDA89C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_191CDA114);
}

uint64_t sub_191CDA884(uint64_t a1)
{
  return sub_191CDA89C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_191CDA3DC);
}

uint64_t sub_191CDA89C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.recommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.snapshot(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 56) + **(int **)(a5 + 56));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_191B17A68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.timeline(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 64) + **(int **)(a5 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_191B17A68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.getSnapshot(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.getTimeline(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 80))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 88) + **(int **)(a3 + 88));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 96) + **(int **)(a3 + 96));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B17A68;
  return v9(a1, a2, a3);
}

uint64_t sub_191CDAD54()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline();
  uint64_t v1 = sub_191CF5678();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_191CDAE58(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline();
  sub_191CF5678();

  return sub_191CDA5D8(a1);
}

uint64_t sub_191CDAF4C()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_191CF5678();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_191CDB00C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_191CF5678();

  return sub_191CDA2DC(a1);
}

uint64_t sub_191CDB0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_191B5D22C();
  swift_retain();
  sub_191CF4428();

  return swift_release();
}

uint64_t sub_191CDB188()
{
  sub_191B5D22C();

  return sub_191CF4428();
}

uint64_t sub_191CDB200(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*MEMORY[0x1E4FBBC10] + *a1 + 8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - v9);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a3;
  *((void *)v12 + 3) = v7;
  *((void *)v12 + 4) = a4;
  *((void *)v12 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, v7);
  swift_retain();
  sub_191CDB0C8((uint64_t)sub_191CDD2F0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_191CDB390(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v5 - v2, v3);
  return swift_setAtWritableKeyPath();
}

uint64_t WidgetConfiguration.configurationDisplayName(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191CDB53C(a1, a2, a3, a4, a5, a6);
}

{
  return sub_191CDB5E4(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))WidgetConfiguration.configurationDisplayName(_:));
}

uint64_t WidgetConfiguration.configurationDisplayName<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191CDB6E0(a1, a2, a3, a4);
}

uint64_t WidgetConfiguration.description(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_191CDB53C(a1, a2, a3, a4, a5, a6);
}

{
  return sub_191CDB5E4(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))WidgetConfiguration.description(_:));
}

uint64_t sub_191CDB53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_191BDB080();
  sub_191CDC3E4(v8, v9, a5, a6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CDB5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_191CF4B78();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  a7(v8, v9);
  sub_191B5D42C(v8, v10, v12);

  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.description<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191CDB6E0(a1, a2, a3, a4);
}

uint64_t sub_191CDB6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_191CF5418();
  sub_191CDC3E4(v8, v9, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.supportedFamilies(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    sub_191AFBAD0(0, v5, 0);
    uint64_t v6 = v14;
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v10 = *v8++;
      char v9 = v10;
      switch(v10)
      {
        case 4:
          sub_191CF6338();
          __break(1u);
          JUMPOUT(0x191CDB968);
        case 5:
          char v9 = 7;
          break;
        case 6:
          char v9 = 8;
          break;
        case 7:
          char v9 = 9;
          break;
        default:
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_191AFBAD0(0, *(void *)(v14 + 16) + 1, 1);
      }
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_191AFBAD0(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(unsigned char *)(v14 + v12 + 32) = v9;
      --v5;
    }
    while (v5);
  }
  WidgetConfiguration.internalSupportedFamilies(_:)(v6, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.internalSupportedFamilies(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v8 = a1;
  sub_191CDB200(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.onBackgroundURLSessionEvents(matching:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a1;
  void v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_191CDB0C8((uint64_t)sub_191CDCBB0, (uint64_t)v8);

  return swift_release();
}

{
  void *v8;
  uint64_t vars8;

  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a1;
  void v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  sub_191B17508(a1);
  swift_retain();
  sub_191CDB0C8((uint64_t)sub_191CDCC04, (uint64_t)v8);

  return swift_release();
}

uint64_t sub_191CDBAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 72);
  unint64_t v12 = *(void **)(a1 + v11);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_191B419E4(0, v12[2] + 1, 1, v12);
    unint64_t v12 = (void *)result;
  }
  unint64_t v15 = v12[2];
  unint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    uint64_t result = (uint64_t)sub_191B419E4((void *)(v14 > 1), v15 + 1, 1, v12);
    unint64_t v12 = (void *)result;
  }
  _OWORD v12[2] = v15 + 1;
  unint64_t v16 = &v12[4 * v15];
  v16[4] = sub_191CDD20C;
  v16[5] = v10;
  uint64_t v16[6] = a4;
  void v16[7] = a5;
  *(void *)(a1 + v11) = v12;
  return result;
}

uint64_t WidgetConfiguration.pushHandler(_:)()
{
  return sub_191CDB0C8((uint64_t)nullsub_1, 0);
}

uint64_t WidgetConfiguration.controlPickerAsSlider()()
{
  return sub_191CDB0C8((uint64_t)sub_191CDBC04, 0);
}

uint64_t sub_191CDBC04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (_OWORD *)((char *)&v16[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191C93670(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_191BAF3A4((uint64_t)v4);
  }
  long long v5 = v4[3];
  void v33[2] = v4[2];
  long long v34 = v5;
  v35[0] = v4[4];
  *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v4 + 73);
  long long v6 = v4[1];
  v33[0] = *v4;
  v33[1] = v6;
  sub_191B15E0C((uint64_t)&v34, (uint64_t)&v18);
  if (v22 == 1)
  {
    sub_191BB2C20((uint64_t)&v18);
  }
  else
  {
    sub_191B004A8(&v18, (uint64_t)v32);
    sub_191AFEE28((uint64_t)v32, (uint64_t)&v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0D78);
    if (swift_dynamicCast())
    {
      long long v15 = v18;
      uint64_t v8 = v19;
      uint64_t v9 = v20;
      char v10 = v21;
      uint64_t v12 = v24;
      uint64_t v11 = v25;
      v16[3] = &type metadata for ControlPickerTemplateProvider;
      v16[4] = &off_1EE2A2A28;
      uint64_t v13 = swift_allocObject();
      v16[0] = v13;
      *(_OWORD *)(v13 + 16) = v15;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v9;
      *(unsigned char *)(v13 + 48) = v10;
      *(_OWORD *)(v13 + 56) = v22;
      *(_OWORD *)(v13 + 72) = v23;
      *(void *)(v13 + 88) = v12;
      *(void *)(v13 + 96) = v11;
      *(_OWORD *)(v13 + 104) = v26;
      *(_OWORD *)(v13 + 120) = v27;
      *(_OWORD *)(v13 + 136) = v28;
      *(unsigned char *)(v13 + 152) = 1;
      long long v14 = v30;
      *(_OWORD *)(v13 + 160) = v29;
      *(_OWORD *)(v13 + 176) = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      char v17 = 0;
      sub_191BE329C((uint64_t)v16, (uint64_t)&v34);
      sub_191BAF3A4(a1);
      sub_191BB2F6C((uint64_t)v33, a1);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
  }
  return sub_191B15E68((uint64_t)v33);
}

uint64_t sub_191CDBEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    uint64_t v11 = sub_191CDD110;
  }
  else
  {
    uint64_t v11 = sub_191B3EDB4;
    uint64_t v10 = 0;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 72);
  long long v14 = *(void **)(a1 + v13);
  sub_191B17508(a2);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_191B419E4(0, v14[2] + 1, 1, v14);
    long long v14 = (void *)result;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_191B419E4((void *)(v16 > 1), v17 + 1, 1, v14);
    long long v14 = (void *)result;
  }
  void v14[2] = v17 + 1;
  long long v18 = &v14[4 * v17];
  v18[4] = sub_191CDD0D0;
  v18[5] = v12;
  void v18[6] = a4;
  v18[7] = a5;
  *(void *)(a1 + v13) = v14;
  return result;
}

uint64_t WidgetConfiguration.widgetBackgroundRemovable(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CDC500(a1, a2, a3);
}

uint64_t WidgetConfiguration.promptsForUserConfiguration()(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v6 = 1;
  sub_191CDB200(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t WidgetConfiguration.enabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v7 = 1;
  if ((a1 & 1) == 0) {
    uint64_t v7 = 2;
  }
  uint64_t v9 = v7;
  sub_191CDB200(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

BOOL static WidgetBackgroundStyle.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t WidgetBackgroundStyle.rawValue.getter()
{
  return *v0;
}

WidgetKit::WidgetBackgroundStyle_optional __swiftcall WidgetBackgroundStyle.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::WidgetBackgroundStyle_optional)rawValue;
}

WidgetKit::WidgetBackgroundStyle_optional sub_191CDC188(Swift::Int *a1)
{
  return WidgetBackgroundStyle.init(rawValue:)(*a1);
}

uint64_t sub_191CDC190()
{
  return sub_191CF5508();
}

uint64_t sub_191CDC1F0()
{
  return sub_191CF54E8();
}

uint64_t WidgetConfiguration.backgroundStyle(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4 = *a1;
  return WidgetConfiguration.preferredBackgroundStyle(_:)(&v4, a2, a3);
}

uint64_t WidgetConfiguration.preferredBackgroundStyle(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v8 = v5;
  sub_191CDB200(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.supportsVibrantContent(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CDC500(a1, a2, a3);
}

uint64_t WidgetConfiguration.supportsAccentedContent()()
{
  return sub_191CDB0C8((uint64_t)sub_191CDC310, 0);
}

uint64_t sub_191CDC310(uint64_t a1)
{
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 60)) = 1;
  return result;
}

uint64_t WidgetConfiguration.isTransparent(_:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = a1;
  sub_191CDB0C8((uint64_t)sub_191CDCC20, v2);

  return swift_release();
}

uint64_t WidgetConfiguration.eventMachServiceName(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191CDC3E4(a1, a2, a3, a4);
}

uint64_t sub_191CDC3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  swift_bridgeObjectRetain();
  sub_191CDB200(KeyPath, (uint64_t)v10, a3, a4);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t WidgetConfiguration.internalWidget()(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v6 = 1;
  sub_191CDB200(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t WidgetConfiguration.supportsInteraction(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CDC500(a1, a2, a3);
}

uint64_t WidgetConfiguration.enablesMultipleTapTargets(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_191CDC500(a1, a2, a3);
}

uint64_t sub_191CDC500(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v8 = a1;
  sub_191CDB200(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.enableContentMarginsForFirstParty(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v8 = a1;
  sub_191CDB200(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.visibilityConfigurableByInternalSettings(visibleByDefault:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v7 = 2;
  if ((a1 & 1) == 0) {
    uint64_t v7 = 3;
  }
  uint64_t v9 = v7;
  sub_191CDB200(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

uint64_t WidgetLocation.hash(into:)()
{
  return sub_191CF6478();
}

BOOL static WidgetLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetLocation.hashValue.getter()
{
  return sub_191CF64C8();
}

void static WidgetLocation.homeScreen.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetLocation.lockScreen.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetLocation.ambient.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static WidgetLocation.continuityMac.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t WidgetConfiguration.disfavoredLocations(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191CDB0C8((uint64_t)sub_191CDCCB0, v4);

  return swift_release();
}

uint64_t sub_191CDC7C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = *(void *)(a2 + 16);
  if (v39)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v38 = a2 + 32;
    uint64_t v5 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v36 = v4;
    uint64_t v37 = v3;
    while (2)
    {
      unsigned __int8 v8 = *(unsigned char *)(v38 + v7);
      uint64_t v40 = v7 + 1;
      switch(v8)
      {
        case 4u:
          goto LABEL_39;
        case 5u:
          unsigned __int8 v8 = 7;
          goto LABEL_6;
        case 6u:
          unsigned __int8 v8 = 8;
          goto LABEL_6;
        case 7u:
          unsigned __int8 v8 = 9;
          goto LABEL_6;
        default:
LABEL_6:
          uint64_t v9 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 36);
          swift_bridgeObjectRetain();
          sub_191B16F2C((uint64_t)v6);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v11 = *(void *)(v4 + v9);
          *(void *)(v4 + v9) = 0x8000000000000000;
          unint64_t v13 = sub_191B1DB10(v8);
          uint64_t v14 = *(void *)(v11 + 16);
          BOOL v15 = (v12 & 1) == 0;
          uint64_t v16 = v14 + v15;
          if (__OFADD__(v14, v15))
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            sub_191CF6338();
            __break(1u);
LABEL_40:
            sub_191CF63D8();
            __break(1u);
            JUMPOUT(0x191CDCB40);
          }
          char v17 = v12;
          if (*(void *)(v11 + 24) >= v16)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_191B4D4E8();
            }
          }
          else
          {
            sub_191B4A330(v16, isUniquelyReferenced_nonNull_native);
            unint64_t v18 = sub_191B1DB10(v8);
            if ((v17 & 1) != (v19 & 1)) {
              goto LABEL_40;
            }
            unint64_t v13 = v18;
          }
          *(void *)(v4 + v9) = v11;
          swift_bridgeObjectRelease();
          uint64_t v20 = *(void **)(v4 + v9);
          if (v17)
          {
            uint64_t v21 = swift_bridgeObjectRetain();
          }
          else
          {
            v20[(v13 >> 6) + 8] |= 1 << v13;
            *(unsigned char *)(v20[6] + v13) = v8;
            *(void *)(v20[7] + 8 * v13) = MEMORY[0x1E4FBC870];
            uint64_t v22 = v20[2];
            uint64_t v23 = v22 + 1;
            BOOL v24 = __OFADD__(v22, 1);
            uint64_t v21 = swift_bridgeObjectRetain();
            if (v24) {
              goto LABEL_38;
            }
            *(void *)(v21 + 16) = v23;
          }
          uint64_t v25 = *(void *)(v21 + 56);
          swift_bridgeObjectRelease();
          uint64_t v26 = *(void *)(v3 + 16);
          if (v26)
          {
            uint64_t v27 = 0;
            while (1)
            {
              uint64_t v29 = *(unsigned __int8 *)(v5 + v27++);
              uint64_t v30 = *(void *)(v25 + 8 * v13);
              sub_191CF6468();
              sub_191CF6478();
              uint64_t v31 = sub_191CF64C8();
              uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
              unint64_t v33 = v31 & ~v32;
              if ((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
              {
                uint64_t v34 = *(void *)(v30 + 48);
                if (*(unsigned __int8 *)(v34 + v33) == v29) {
                  goto LABEL_22;
                }
                uint64_t v35 = ~v32;
                while (1)
                {
                  unint64_t v33 = (v33 + 1) & v35;
                  if (((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
                    break;
                  }
                  if (*(unsigned __int8 *)(v34 + v33) == v29) {
                    goto LABEL_22;
                  }
                }
              }
              char v28 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v41 = *(void *)(v25 + 8 * v13);
              *(void *)(v25 + 8 * v13) = 0x8000000000000000;
              sub_191B46170(v29, v33, v28);
              *(void *)(v25 + 8 * v13) = v41;
              swift_bridgeObjectRelease();
LABEL_22:
              if (v27 == v26)
              {
                uint64_t v3 = v37;
                swift_bridgeObjectRelease();
                uint64_t v4 = v36;
                goto LABEL_4;
              }
            }
          }
          swift_bridgeObjectRelease();
LABEL_4:
          uint64_t v6 = sub_191CDCB60;
          uint64_t v7 = v40;
          if (v40 != v39) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return result;
}

void sub_191CDCB60(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC870];
}

uint64_t sub_191CDCB70()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CDCBB0(uint64_t a1)
{
  return sub_191CDBAC0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_191CDCBBC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CDCC04(uint64_t a1)
{
  return sub_191CDBEFC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_191CDCC10()
{
  return swift_deallocObject();
}

uint64_t sub_191CDCC20(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 16);
  if (v3) {
    char v4 = 2;
  }
  else {
    char v4 = 0;
  }
  uint64_t result = type metadata accessor for WidgetDescriptor(0);
  *(unsigned char *)(a1 + *(int *)(result + 52)) = v4;
  *(unsigned char *)(a1 + *(int *)(result + 56)) = v3;
  return result;
}

uint64_t sub_191CDCC70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191CDCCB0(uint64_t a1)
{
  return sub_191CDC7C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_191CDCCC0()
{
  unint64_t result = qword_1EB449990;
  if (!qword_1EB449990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449990);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetBackgroundStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CDCDE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundStyle()
{
  return &type metadata for WidgetBackgroundStyle;
}

ValueMetadata *type metadata accessor for WidgetLocation()
{
  return &type metadata for WidgetLocation;
}

uint64_t sub_191CDCE2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191CDCE88()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *_s9WidgetKit14WidgetLocationV8LocationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CDCFB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocation.Location()
{
  return &type metadata for WidgetLocation.Location;
}

unint64_t sub_191CDCFF0()
{
  unint64_t result = qword_1E92E5888;
  if (!qword_1E92E5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E5888);
  }
  return result;
}

unint64_t sub_191CDD044()
{
  unint64_t result = qword_1EB44B4B0;
  if (!qword_1EB44B4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4B0);
  }
  return result;
}

uint64_t sub_191CDD098()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CDD0D0(uint64_t a1, uint64_t a2)
{
  void (*v3)(unsigned __int8 *__return_ptr, void *);
  unsigned __int8 v5;
  void v6[2];

  int v3 = *(void (**)(unsigned __int8 *__return_ptr, void *))(v2 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v3(&v5, v6);
  return v5;
}

uint64_t sub_191CDD110@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_191CDD14C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191CDD1D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191CDD20C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 16) == a1 && *(void *)(v2 + 24) == a2) {
    return 1;
  }
  else {
    return sub_191CF6348();
  }
}

uint64_t sub_191CDD22C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191CDD2F0(uint64_t a1)
{
  return sub_191CDB390(a1);
}

uint64_t sub_191CDD340()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C9B8 = result;
  return result;
}

uint64_t sub_191CDD368()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A870);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CA00 = v0;
  strcpy(algn_1EB44CA08, "displayGamut");
  BYTE5(qword_1EB44CA10) = 0;
  HIWORD(qword_1EB44CA10) = -5120;
  return result;
}

ValueMetadata *type metadata accessor for DisplayGamutKey()
{
  return &type metadata for DisplayGamutKey;
}

unint64_t sub_191CDD3F8()
{
  unint64_t result = qword_1EB449D70;
  if (!qword_1EB449D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D70);
  }
  return result;
}

unint64_t sub_191CDD450()
{
  unint64_t result = qword_1EB449D88;
  if (!qword_1EB449D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D88);
  }
  return result;
}

unint64_t sub_191CDD4A8()
{
  unint64_t result = qword_1EB449D68;
  if (!qword_1EB449D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D68);
  }
  return result;
}

uint64_t sub_191CDD4FC(char *a1, char *a2)
{
  return sub_191CD65C0(*a1, *a2);
}

uint64_t sub_191CDD508()
{
  return sub_191CF64C8();
}

uint64_t sub_191CDD588()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191CDD5F4()
{
  return sub_191CF64C8();
}

uint64_t sub_191CDD670@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_191CF60B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_191CDD6D0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1111970419;
  if (*v1) {
    uint64_t v2 = 0x5079616C70736964;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000033;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_191CDD70C()
{
  return sub_191CF54F8();
}

uint64_t sub_191CDD76C()
{
  return sub_191CF54D8();
}

uint64_t sub_191CDD7BC(char *a1, char *a2)
{
  return sub_191CDD9D8(*a1, *a2);
}

uint64_t sub_191CDD7C8(char *a1, char *a2)
{
  return sub_191CA2828(*a1, *a2);
}

uint64_t sub_191CDD7D4(char *a1, char *a2)
{
  return sub_191CA2A30(*a1, *a2);
}

uint64_t sub_191CDD7E0(char *a1, char *a2)
{
  return sub_191CA2D40(*a1, *a2);
}

uint64_t sub_191CDD7EC()
{
  if (qword_1EB44A948 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191CDD848@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = sub_191CF39E8();
  uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3C700];
  if (!v3) {
    uint64_t v5 = (unsigned int *)MEMORY[0x1E4F3C6F8];
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_191CDD8D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_191CDDAD0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_191CDD900()
{
  if (qword_1EB44A940 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CA00;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_191CDD984()
{
  unint64_t result = qword_1EB449D78;
  if (!qword_1EB449D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D78);
  }
  return result;
}

uint64_t sub_191CDD9D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x5079616C70736964;
  }
  else {
    uint64_t v3 = 1111970419;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000033;
  }
  if (a2) {
    uint64_t v5 = 0x5079616C70736964;
  }
  else {
    uint64_t v5 = 1111970419;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000033;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_191CDDA7C()
{
  unint64_t result = qword_1EB449D80;
  if (!qword_1EB449D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D80);
  }
  return result;
}

uint64_t sub_191CDDAD0(uint64_t a1)
{
  uint64_t v2 = sub_191CF39E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E4F3C6F8] || v7 == *MEMORY[0x1E4F3C700]) {
    return v7 != *MEMORY[0x1E4F3C6F8];
  }
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  uint64_t v10 = sub_191CF5E58();
  swift_allocError();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3B08);
  sub_191B4F964((uint64_t)v16, v12);
  v15[0] = sub_191CF5DC8();
  v15[1] = v13;
  sub_191CF53B8();
  void v16[5] = 36;
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x1E4FBBAA0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unsigned char *storeEnumTagSinglePayload for DisplayGamutKey.CodableDisplayGamut(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191CDDE18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayGamutKey.CodableDisplayGamut()
{
  return &type metadata for DisplayGamutKey.CodableDisplayGamut;
}

uint64_t static ControlArchiver.archive<A>(control:environment:asyncDataSource:fileHandle:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[5] = a4;
  v6[4] = *a2;
  uint64_t v11 = (void *)swift_task_alloc();
  v6[6] = (uint64_t)v11;
  void *v11 = v6;
  v11[1] = sub_191CDDF20;
  return static ControlArchiver.archive<A>(control:environment:asyncDataSource:)(a1, v6 + 4, a3, a5, a6);
}

uint64_t sub_191CDDF20(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)*v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[9] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_191CDE0DC;
  }
  else {
    uint64_t v5 = sub_191CDE038;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191CDE038()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  sub_191B1632C();
  sub_191CF58D8();
  sub_191B1603C(*(void *)(v0 + 56), *(void *)(v0 + 64));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191CDE0DC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_191CDE0F4(void (*a1)(char *, void **), uint64_t a2)
{
  objc_super v51 = a1;
  uint64_t v52 = a2;
  uint64_t v2 = type metadata accessor for ControlTemplateType();
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v60 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v59 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4058();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v47 - v11;
  uint64_t v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void **)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v63 = MEMORY[0x1E4FBC860];
  sub_191AFBB20(0, 0, 0);
  sub_191CE1DDC((uint64_t)v58, (uint64_t)v14, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v20 = *v14;
  uint64_t v21 = (char *)v18 + *(int *)(v16 + 28);
  char v55 = *(void (**)(void))(v7 + 16);
  uint64_t v56 = v21;
  v55();
  id v22 = v20;
  uint64_t v23 = sub_191B4EA70(v19);
  uint64_t v62 = v22;
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_191B4FF68(&v62, v23);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();

  *unint64_t v18 = v24;
  v18[1] = v26;
  _OWORD v18[2] = v28;
  sub_191CE1E44((uint64_t)v14, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v57 = v7 + 16;
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  unint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  unsigned int v54 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v49 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    unint64_t v29 = v18[1];
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v46 = sub_191CF6018();
      swift_bridgeObjectRelease();
      unint64_t v31 = v46 - 1;
      if (v46 < 1)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        uint64_t v39 = (uint64_t)v59;
        (*v58)(v59, 1, 1, v6);
LABEL_25:
        sub_191CE1E44((uint64_t)v18, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        sub_191B01770(v39, (uint64_t *)&unk_1EB44BBB8);
        return v63;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v31 = v30 - 1;
      if (v30 < 1) {
        goto LABEL_24;
      }
    }
    sub_191B3CC80(v31);
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x1E4FBC860];
      *unint64_t v18 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      v18[1] = v33;
      swift_bridgeObjectRelease();
      _OWORD v18[2] = v33;
    }
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v55)(v10, v56, v6);
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_191CF6018();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v35) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35) {
        goto LABEL_16;
      }
    }
    if (v35 < 1) {
      break;
    }
    for (uint64_t i = 0; i != v35; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        uint64_t v37 = MEMORY[0x192FE4B60](i, v29);
      }
      else
      {
        uint64_t v37 = *(void *)(v29 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(void **)(v37 + 16) + 112))(v10);
      swift_release();
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v38 = *v54;
    uint64_t v39 = (uint64_t)v59;
    (*v54)(v59, v10, v6);
    (*v58)((char *)v39, 0, 1, v6);
    if ((*v53)(v39, 1, v6) == 1) {
      goto LABEL_25;
    }
    uint64_t v40 = v50;
    v38(v50, (char *)v39, v6);
    uint64_t v41 = v61;
    v51(v40, &v62);
    if (v41)
    {
      (*v49)(v40, v6);
      sub_191CE1E44((uint64_t)v18, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
      return swift_release();
    }
    (*v49)(v40, v6);
    uint64_t v42 = v63;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = 0;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191AFBB20(0, *(void *)(v42 + 16) + 1, 1);
      uint64_t v42 = v63;
    }
    unint64_t v45 = *(void *)(v42 + 16);
    unint64_t v44 = *(void *)(v42 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_191AFBB20(v44 > 1, v45 + 1, 1);
      uint64_t v42 = v63;
    }
    *(void *)(v42 + 16) = v45 + 1;
    sub_191CE1EA4(v60, v42+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v45, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  }
  __break(1u);
  return result;
}

unint64_t sub_191CDE7B0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t result = 0xD000000000000019;
  switch(a3)
  {
    case 1:
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      v4[0] = 0xD000000000000017;
      v4[1] = 0x8000000191D12D20;
      goto LABEL_5;
    case 2:
      strcpy((char *)v4, "Bad archive: ");
      HIWORD(v4[1]) = -4864;
      goto LABEL_5;
    case 3:
      return result;
    default:
      v4[0] = 0;
      v4[1] = 0xE000000000000000;
      sub_191CF5D88();
      sub_191CF53B8();
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
LABEL_5:
      sub_191CF53B8();
      return v4[0];
  }
}

unint64_t sub_191CDE978()
{
  return sub_191CDE7B0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t static ControlArchiver.archive<A>(control:environment:asyncDataSource:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v5[6] = type metadata accessor for ControlArchiveStorage(0);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  v5[7] = v7;
  v5[8] = v8;
  return MEMORY[0x1F4188298](sub_191CDEA24, 0, 0);
}

uint64_t sub_191CDEA24()
{
  if (WidgetEnvironment.enumeratedCount()() < 1)
  {
    sub_191B16380();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    *(unsigned char *)(v9 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[9] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_191CDEB50;
    uint64_t v2 = v0[7];
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[4];
    uint64_t v5 = v0[5];
    uint64_t v7 = v0[2];
    uint64_t v6 = v0[3];
    return sub_191CDEE18(v2, v6, v7, v3, v4, v5);
  }
}