ValueMetadata *type metadata accessor for WidgetRenderingMode()
{
  return &type metadata for WidgetRenderingMode;
}

uint64_t getEnumTagSinglePayload for WidgetBackgroundStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9WidgetKit19WidgetRenderingModeV4ModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 2;
        break;
    }
  }
  return result;
}

BOOL sub_191AF6704(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void static WidgetRenderingMode.accented.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void sub_191AF6728(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t objectdestroy_111Tm(void (*a1)(void))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v3);
  a1(*(void *)(v1 + v6));

  return swift_deallocObject();
}

uint64_t objectdestroy_89Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E26D0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_191AF6A08@<X0>(unsigned char *a1@<X8>)
{
  sub_191AF6A58();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

unint64_t sub_191AF6A58()
{
  unint64_t result = qword_1EB44B278;
  if (!qword_1EB44B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B278);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t View.widgetAccentable(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v35 = a3;
  LODWORD(v31) = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  int v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v10 = (char *)&v30 - v9;
  uint64_t v11 = sub_191CF3BA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_191CF44E8();
  uint64_t v33 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v21 = (char *)&v30 - v20;
  if (v31)
  {
    uint64_t v31 = v18;
    uint64_t v22 = v35;
    MEMORY[0x192FE3AA0](v19, a2, MEMORY[0x1E4F3DEC8], v35);
    uint64_t v36 = v22;
    uint64_t v37 = MEMORY[0x1E4F3DEC0];
    uint64_t WitnessTable = swift_getWitnessTable();
    v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v23(v17, v15, v11);
    v24 = *(void (**)(char *, uint64_t))(v12 + 8);
    v24(v15, v11);
    v23(v15, v17, v11);
    uint64_t v18 = v31;
    sub_191AF6FF8((uint64_t)v15, v11);
    v24(v15, v11);
    v24(v17, v11);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v25(v10, WitnessTable, a2);
    v25(v8, (uint64_t)v10, a2);
    uint64_t v42 = v35;
    uint64_t v43 = MEMORY[0x1E4F3DEC0];
    swift_getWitnessTable();
    sub_191C6C7E8((uint64_t)v8, v11, a2);
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v8, a2);
    v26(v10, a2);
  }
  uint64_t v27 = v35;
  uint64_t v40 = v35;
  uint64_t v41 = MEMORY[0x1E4F3DEC0];
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v27;
  swift_getWitnessTable();
  uint64_t v28 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v34, v21, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v21, v18);
}

uint64_t sub_191AF6FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF44C8();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_191CF44D8();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t objectdestroy_36Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_191CF4058();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v1 + v3, v4);
  }
  else
  {
    swift_release();
  }
  sub_191B5D42C(*(void *)(v1 + v3 + *(int *)(v2 + 20)), *(void *)(v1 + v3 + *(int *)(v2 + 20) + 8), *(unsigned char *)(v1 + v3 + *(int *)(v2 + 20) + 16));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0(void (*a1)(void), void (*a2)(void), void (*a3)(void))
{
  a1(v3[2]);
  a2(v3[4]);
  a3(v3[6]);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = (int *)type metadata accessor for _ClockHandRotationEffect(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_191B172D4(*(void *)v3, *(unsigned char *)(v3 + 8));
  sub_191B172D4(*(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
  uint64_t v4 = v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448A38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_191CF3178();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v1[8];
  uint64_t v8 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4471B0);
  swift_release();
  swift_release();
  uint64_t v9 = v3 + v1[12];
  uint64_t v10 = sub_191CF3318();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t getWKSystemVersionSDK_AzulE()
{
  return 0x7E50301FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Sky()
{
  return 0x7E50901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Sydney()
{
  return 0x7E60901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_SydneyC()
{
  return 0x7E62100FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Dawn()
{
  return 0x7E70901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_DawnC()
{
  return 0x7E70D01FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Crystal()
{
  return 0x7E80000FFFFFFFFLL;
}

id WidgetViewCollection.environment.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t WidgetViewCollection.originatingBundle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B014E8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

id WidgetViewCollection.widget.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
}

uint64_t WidgetViewCollection.reloadPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B014E8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, a1, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
}

uint64_t WidgetViewCollection.requiresReload.getter()
{
  return 0;
}

uint64_t WidgetViewCollection.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191B01614(v9, (uint64_t)v8, &qword_1EB44B720);
  uint64_t v10 = sub_191CF2EA8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_191B01770((uint64_t)v8, &qword_1EB44B720);
  sub_191AF7DFC(a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_191AF8354((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_191AF7B18@<X0>(uint64_t a1@<X8>)
{
  return WidgetViewCollection.dateRange.getter(a1);
}

uint64_t sub_191AF7B3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF2EA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v12 = v11 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191AF8354((uint64_t)v6, v12);
  return swift_endAccess();
}

uint64_t WidgetViewCollection.dateRange.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF2EA8();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_191AF8354((uint64_t)v5, v8);
  return swift_endAccess();
}

uint64_t sub_191AF7DFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_191CF3178();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v42 = (char *)&v35 - v16;
  MEMORY[0x1F4188790](v15);
  v44 = (char *)&v35 - v17;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_191AF89B0(v18, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  if (!*(void *)(v19 + 16))
  {
    uint64_t v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_191AFEE28(v19 + 32, (uint64_t)&v45);
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)&v46 + 1);
  if (!*((void *)&v46 + 1))
  {
LABEL_7:
    sub_191B01770((uint64_t)&v45, &qword_1E92E2F18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_14;
  }
  uint64_t v40 = v5;
  uint64_t v41 = a1;
  uint64_t v21 = v47;
  __swift_project_boxed_opaque_existential_1(&v45, *((uint64_t *)&v46 + 1));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v22(v7, 0, 1, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v23(v7, 1, v8) != 1)
  {
    uint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v37 = v9 + 32;
    v36(v44, v7, v8);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_191AF89B0(v24, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      sub_191AFEE28(v25 + 40 * v26 - 8, (uint64_t)&v45);
    }
    else
    {
      uint64_t v47 = 0;
      long long v45 = 0u;
      long long v46 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)&v46 + 1);
    if (*((void *)&v46 + 1))
    {
      uint64_t v28 = v47;
      __swift_project_boxed_opaque_existential_1(&v45, *((uint64_t *)&v46 + 1));
      v29 = v40;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
      v39(v29, 0, 1, v8);
      uint64_t v7 = v29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
      if (v38(v29, 1, v8) != 1)
      {
        uint64_t v30 = v42;
        v36(v42, v29, v8);
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
        v32 = v44;
        v31(v14, v44, v8);
        v31(v43, v30, v8);
        sub_191CF2E78();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v9 + 8);
        v33(v30, v8);
        return ((uint64_t (*)(char *, uint64_t))v33)(v32, v8);
      }
    }
    else
    {
      sub_191B01770((uint64_t)&v45, &qword_1E92E2F18);
      uint64_t v7 = v40;
      v39(v40, 1, 1, v8);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v44, v8);
  }
LABEL_14:
  sub_191B01770((uint64_t)v7, &qword_1EB44B520);
  sub_191CF3168();
  return sub_191CF2E88();
}

uint64_t sub_191AF8354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t WidgetViewCollection.entries.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF89B0(v0, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  return v1;
}

void (*WidgetViewCollection.dateRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B720);
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = sub_191CF2EA8();
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  WidgetViewCollection.dateRange.getter((uint64_t)v8);
  return sub_191AF8534;
}

void sub_191AF8534(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 80);
  uint64_t v3 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    uint64_t v8 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void, void, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    uint64_t v9 = v8 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_191AF8354((uint64_t)v7, v9);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    uint64_t v10 = v2[8];
    uint64_t v11 = v2[9];
    uint64_t v12 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void *, void, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    uint64_t v13 = v12 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_191AF8354((uint64_t)v7, v13);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);

  free(v2);
}

uint64_t WidgetViewCollection.metrics.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  id v3 = v1;
  unint64_t v4 = sub_191AFA470(KeyPath, (unint64_t)&qword_1EB44C010, 0x1E4F58E80, (uint64_t *)&unk_1E92E2F08);

  uint64_t result = swift_release();
  if (!v4) {
    goto LABEL_12;
  }
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_191CF6018();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_10:
    id v6 = (id)MEMORY[0x192FE4B60](0, v4);
    goto LABEL_7;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v4 + 32);
LABEL_7:
    id v7 = v6;
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_191AF87DC@<X0>(void *a1@<X8>)
{
  sub_191B0171C();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191AF882C(void **a1)
{
  uint64_t v1 = *a1;
  sub_191B0171C();
  id v2 = v1;
  return sub_191CF4078();
}

uint64_t WidgetViewCollection.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  swift_beginAccess();
  uint64_t v4 = sub_191CF3178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void WidgetViewCollection.protectionLevel.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel);
}

uint64_t sub_191AF8920(uint64_t a1)
{
  return sub_191AF89B0(a1, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
}

uint64_t sub_191AF8968(uint64_t a1)
{
  return sub_191AF89B0(a1, type metadata accessor for WidgetArchivableMetadata.EntryMetadata, type metadata accessor for WidgetArchivableMetadata.EntryMetadata, (uint64_t)&off_1EE29BEF0, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
}

uint64_t sub_191AF89B0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v21 = a5;
  uint64_t v8 = a2(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_191AFB904(0, v12, 0);
    uint64_t v13 = v25;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    do
    {
      sub_191B014E8(v14, (uint64_t)v11, a3);
      uint64_t v25 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_191AFB904(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v25;
      }
      uint64_t v23 = v8;
      uint64_t v24 = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
      sub_191B014E8((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, a3);
      *(void *)(v13 + 16) = v17 + 1;
      sub_191B004A8(&v22, v13 + 40 * v17 + 32);
      sub_191B01550((uint64_t)v11, v21);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t WidgetViewCollection.copyWithoutRenderData()@<X0>(void *a1@<X8>)
{
  a1[3] = *v1;
  a1[4] = &protocol witness table for WidgetViewCollection;
  *a1 = v1;
  return swift_retain();
}

uint64_t default argument 4 of WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)()
{
  return 1;
}

uint64_t WidgetViewCollection.__allocating_init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(void *a1, uint64_t *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(void *a1, uint64_t *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v11 = sub_191CF3178();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a2;
  uint64_t v18 = v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  uint64_t v19 = sub_191CF2EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  BundleStub.init(_:)((uint64_t)objc_msgSend(a1, sel_extensionIdentity), (uint64_t)v17);
  sub_191B003DC((uint64_t)v17, v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  sub_191CF3168();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate, v14, v11);
  if (a5)
  {
    uint64_t v26 = a3;
    swift_bridgeObjectRetain();
    sub_191AFC954(&v26);
    swift_bridgeObjectRelease();
    uint64_t v20 = v26;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B688);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = 0;
    a3 = (void *)sub_191AFE870(v21, (uint64_t)sub_191B65EE8, 0);
    swift_release();
  }
  *(void *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries) = a3;
  *(void *)(v5 + 16) = v25;
  *(void *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget) = a1;
  sub_191B014E8(a4, v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  swift_beginAccess();
  char v22 = byte_1EB44B790;
  sub_191B01550(a4, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel) = v22;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_requiresReload) = 0;
  return v5;
}

uint64_t WidgetViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(char **)(v3 + 16);
  uint64_t v9 = &v8[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  uint64_t v10 = swift_beginAccess();
  if (*(void *)(*(void *)v9 + 16)
    && (uint64_t v11 = v8,
        WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2),
        char v13 = v12,
        v11,
        (v13 & 1) != 0))
  {
    uint64_t v16 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    uint64_t v14 = *(void *)(v4 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
    MEMORY[0x1F4188790](v10);
    swift_bridgeObjectRetain();
    sub_191AF9098((uint64_t (*)(uint64_t))sub_191AFEDA4, v14, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_191AF906C()
{
  return sub_191CF3148() & 1;
}

uint64_t sub_191AF9098@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v8 = type metadata accessor for ViewableTimelineEntry();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    uint64_t v11 = a2
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * (v5 - 1);
    uint64_t v12 = -v10;
    while (1)
    {
      uint64_t result = a1(v11);
      if (v3) {
        break;
      }
      if (result)
      {
        sub_191B014E8(v11, a3, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a3, 0, 1, v8);
      }
      v11 += v12;
      if (!--v5) {
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  return result;
}

uint64_t WidgetViewCollection.drop(before:)(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  v15[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_191AF9348((uint64_t (*)(char *))sub_191B01958, (uint64_t)v15, v3);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v10 = v9;
  if ((v9 & 1) == 0) {
    goto LABEL_2;
  }
  sub_191CF6378();
  swift_unknownObjectRetain_n();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = *(void *)(v12 + 16);
  swift_release();
  if (__OFSUB__(v10 >> 1, v8))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v13 != (v10 >> 1) - v8)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v11 = sub_191AFB3D8(v4, v6, v8, v10);
    goto LABEL_9;
  }
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
LABEL_9:
  swift_unknownObjectRelease();
  *(void *)(v1 + v2) = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_191AF9348(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ViewableTimelineEntry() - 8;
  uint64_t result = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    unint64_t v12 = 0;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = a3;
    uint64_t v14 = a3 + ((v13 + 32) & ~v13);
    v18[1] = v8;
    a3 = *(void *)(v8 + 72);
    while (1)
    {
      sub_191B014E8(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      char v15 = a1(v10);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_191B01550((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        return a3;
      }
      char v16 = v15;
      uint64_t result = sub_191B01550((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      if ((v16 & 1) == 0) {
        break;
      }
      ++v12;
      v14 += a3;
      if (v11 == v12)
      {
        unint64_t v12 = v11;
LABEL_10:
        a3 = v19;
        unint64_t v17 = *(void *)(v19 + 16);
        goto LABEL_11;
      }
    }
    if (v11 >= v12) {
      goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    unint64_t v17 = 0;
    unint64_t v12 = 0;
LABEL_11:
    if (v17 >= v12 && v17 >= v11) {
      return a3;
    }
  }
  __break(1u);
  return result;
}

uint64_t WidgetViewCollection.deinit()
{
  sub_191B01550(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  sub_191B01550(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange, &qword_1EB44B720);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetViewCollection.__deallocating_deinit()
{
  sub_191B01550(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(void))type metadata accessor for BundleStub);
  sub_191B01550(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  sub_191B01770(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange, &qword_1EB44B720);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  uint64_t v2 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_191AF9740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191CF38A8();
  *a1 = result;
  return result;
}

uint64_t sub_191AF9790@<X0>(void *a1@<X8>)
{
  return WidgetViewCollection.enumeratedViewableEntriesAndEnvironments()(a1);
}

uint64_t WidgetViewCollection.enumeratedViewableEntriesAndEnvironments()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_191CF4058();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  unint64_t v12 = *(void **)(v1 + 16);
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v10[*(int *)(v8 + 28)], v6, v3);
  *(void *)unint64_t v10 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = sub_191AFE1D0((uint64_t)v10);
  sub_191B01550((uint64_t)v10, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v11;
  a1[1] = v14;
  return result;
}

uint64_t sub_191AF9950@<X0>(uint64_t a1@<X8>)
{
  return sub_191B014E8(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, a1, (uint64_t (*)(void))type metadata accessor for BundleStub);
}

id sub_191AF9990()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
}

uint64_t sub_191AF99A4()
{
  return WidgetViewCollection.metrics.getter();
}

id sub_191AF99C8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_191AF99D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  swift_beginAccess();
  uint64_t v4 = sub_191CF3178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_191AF9A60@<X0>(uint64_t a1@<X8>)
{
  return WidgetViewCollection.dateRange.getter(a1);
}

uint64_t sub_191AF9A84()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AF89B0(v0, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_191AF9B10@<X0>(uint64_t a1@<X8>)
{
  return sub_191B014E8(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, a1, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
}

void sub_191AF9B50(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel);
}

uint64_t sub_191AF9B68()
{
  return 0;
}

uint64_t sub_191AF9B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *v3;
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v4;
  return swift_retain();
}

uint64_t sub_191AF9B84@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  return WidgetViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)(a1, a2, a3);
}

uint64_t WidgetViewCollection.description.getter()
{
  uint64_t v1 = sub_191CF6568();
  sub_191CF53B8();
  sub_191AFEDD4();
  sub_191CF5408();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v1;
}

uint64_t sub_191AF9C64()
{
  return WidgetViewCollection.description.getter();
}

uint64_t WidgetViewCollection.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v31 = sub_191CF3178();
  uint64_t v3 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_191AF89B0(v6, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    v29[1] = v2;
    uint64_t v30 = v0;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_191AFB944(0, v8, 0);
    v29[0] = v7;
    uint64_t v9 = v7 + 32;
    unint64_t v10 = (void (**)(char *, uint64_t))(v3 + 8);
    do
    {
      sub_191AFEE28(v9, (uint64_t)v35);
      uint64_t v11 = v36;
      uint64_t v12 = v37;
      __swift_project_boxed_opaque_existential_1(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      if (qword_1E92E2C18 != -1) {
        swift_once();
      }
      id v13 = (id)qword_1E92E39B0;
      uint64_t v14 = (void *)sub_191CF3138();
      id v15 = objc_msgSend(v13, sel_stringFromDate_, v14, v29[0]);

      uint64_t v16 = sub_191CF5338();
      uint64_t v18 = v17;

      (*v10)(v5, v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t v19 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFB944(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v33;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_191AFB944(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v33;
      }
      *(void *)(v19 + 16) = v21 + 1;
      unint64_t v22 = v19 + 16 * v21;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v18;
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v1 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  v35[0] = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
  sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
  sub_191CF5288();
  swift_bridgeObjectRelease();
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  sub_191CF5D88();
  uint64_t v33 = sub_191CF6568();
  unint64_t v34 = v23;
  sub_191CF53B8();
  v32 = v1;
  sub_191AFEDD4();
  sub_191CF5408();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v24 = *(id *)((char *)v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
  id v25 = objc_msgSend(v24, sel_description);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v26 = (void *)v1[2];
  uint64_t v33 = 0xD000000000000012;
  unint64_t v34 = 0x8000000191D0CE80;
  id v27 = v26;
  WidgetEnvironment.Storage.debugDescription.getter();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();

  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v35[0];
}

uint64_t sub_191AFA1D0()
{
  return WidgetViewCollection.debugDescription.getter();
}

uint64_t WidgetViewCollection.makeIterator()()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_191AFA21C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = 0;
  return result;
}

uint64_t sub_191AFA268()
{
  return 0;
}

uint64_t sub_191AFA270()
{
  return 2;
}

size_t sub_191AFA278()
{
  size_t v1 = sub_191AFDC70(*v0);
  swift_release();
  return v1;
}

uint64_t sub_191AFA2B0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_191AFA2D4(a1, a2, a3);
}

uint64_t sub_191AFA2D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (!a2)
  {
    a3 = 0;
    goto LABEL_11;
  }
  if (!a3)
  {
LABEL_11:
    *a1 = v8;
    a1[1] = a3;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = *(void *)(v8 + 16);
    if (v10)
    {
      unint64_t v11 = 0;
      while (v11 < *(void *)(v8 + 16))
      {
        uint64_t v12 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
        uint64_t v13 = *(void *)(v12 + 72);
        uint64_t result = sub_191B014E8(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v13 * v11, a2, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        if (a3 - 1 == v11) {
          goto LABEL_11;
        }
        a2 += v13;
        if (v10 == ++v11) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    a3 = v10;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_191AFA408()
{
  return sub_191CF5488();
}

uint64_t default argument 1 of WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_191AFA438(uint64_t a1)
{
  return sub_191AFA470(a1, (unint64_t)&qword_1EB44C010, 0x1E4F58E80, (uint64_t *)&unk_1E92E2F08);
}

uint64_t sub_191AFA454(uint64_t a1)
{
  return sub_191AFA470(a1, (unint64_t)&unk_1EB449D38, 0x1E4F58E18, (uint64_t *)&unk_1E92E2EF0);
}

uint64_t sub_191AFA470(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = off_1EB44BD58;
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_191C6E1E4(v7, (uint64_t)v6);
  swift_endAccess();
  uint64_t v9 = swift_release();
  if (v8)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(**(void **)(v8 + 16) + 80))(v9);
    unint64_t v13 = sub_191B38630(v10, v11, v12);
    swift_bridgeObjectRelease();
    swift_release();
    if (v13)
    {
      swift_retain();
      uint64_t v14 = sub_191AFF704(v13, v8, a2);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v14;
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_191CF5F38();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191AFA674(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191AFFB6C, &qword_1E92E2F00);
}

uint64_t sub_191AFA694(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191AFFD68, &qword_1E92E2EB8);
}

uint64_t sub_191AFA6B4(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191AFFF6C, &qword_1E92E2E88);
}

uint64_t sub_191AFA6D4(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191AFF94C, &qword_1E92E2E80);
}

uint64_t sub_191AFA6F4(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B00174, &qword_1E92E2E48);
}

uint64_t sub_191AFA714(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B004C8, &qword_1E92E2E60);
}

uint64_t sub_191AFA734(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B006EC, &qword_1E92E2E68);
}

uint64_t sub_191AFA754(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B0090C, &qword_1E92E2E70);
}

uint64_t sub_191AFA774(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B00B40, &qword_1E92E2E78);
}

uint64_t sub_191AFA794(uint64_t a1)
{
  return sub_191AFAAD4(a1, (uint64_t *)&unk_1E92E2318, MEMORY[0x1E4F3CD58], (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191B41088, (uint64_t *)&unk_1E92E2E90);
}

uint64_t sub_191AFA7D0(uint64_t a1)
{
  return sub_191AFAAD4(a1, &qword_1EB44A288, MEMORY[0x1E4F3D5D8], (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191B410BC, (uint64_t *)&unk_1E92E2EA0);
}

uint64_t sub_191AFA80C(uint64_t a1)
{
  return sub_191AFA82C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_191B01150, &qword_1E92E2EB0);
}

uint64_t sub_191AFA82C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = off_1EB44BD58;
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_191C6E1E4(v6, (uint64_t)v5);
  swift_endAccess();
  uint64_t v8 = swift_release();
  if (v7)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(**(void **)(v7 + 16) + 80))(v8);
    uint64_t v12 = sub_191B38630(v9, v10, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v12)
    {
      swift_retain();
      uint64_t v13 = a2(v12, v7);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v13;
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_191CF5F38();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191AFAA20(uint64_t a1)
{
  return sub_191AFAAD4(a1, &qword_1E92E0FE8, MEMORY[0x1E4F3C708], (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191B41360, (uint64_t *)&unk_1E92E2EC0);
}

uint64_t sub_191AFAA5C(uint64_t a1)
{
  return sub_191AFAAD4(a1, &qword_1E92E22B8, MEMORY[0x1E4F3D548], (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191B41394, (uint64_t *)&unk_1E92E2ED0);
}

uint64_t sub_191AFAA98(uint64_t a1)
{
  return sub_191AFAAD4(a1, qword_1E92E26E8, MEMORY[0x1E4F3C5D0], (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191B413C8, (uint64_t *)&unk_1E92E2EE0);
}

uint64_t sub_191AFAAD4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(BOOL, uint64_t, uint64_t), uint64_t *a5)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = off_1EB44BD58;
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_191C6E1E4(v10, (uint64_t)v9);
  swift_endAccess();
  uint64_t v12 = swift_release();
  if (v11)
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(**(void **)(v11 + 16) + 80))(v12);
    unint64_t v16 = sub_191B38630(v13, v14, v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (v16)
    {
      swift_retain();
      uint64_t v17 = sub_191B00D74(v16, (void *)v11, a2, a3, a4);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v17;
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    __swift_instantiateConcreteTypeFromMangledName(a5);
    sub_191CF5F38();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t default argument 1 of WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)()
{
  return MEMORY[0x1E4FBC860];
}

void default argument 2 of WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t default argument 1 of WidgetEnvironment.matches(_:ignoring:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t default argument 3 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 6 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 8 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

double default argument 2 of MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:watchDisplayVariant:)()
{
  return 0.0;
}

double default argument 2 of MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:)()
{
  return 0.0;
}

uint64_t default argument 4 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 7 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 2 of _TimelineArchivedViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t default argument 8 of ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:isChatty:)()
{
  return 0;
}

uint64_t default argument 1 of MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)()
{
  return 0;
}

uint64_t default argument 2 of MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)()
{
  return 0;
}

uint64_t default argument 4 of MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)()
{
  return 0;
}

uint64_t default argument 7 of MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)()
{
  return 1;
}

uint64_t default argument 3 of ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)()
{
  return 1;
}

unint64_t default argument 4 of ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)()
{
  return sub_191B2D604(MEMORY[0x1E4FBC860]);
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:)()
{
  return 0;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:completion:)()
{
  return 0;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)()
{
  return 0;
}

uint64_t default argument 4 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)()
{
  return 1;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)()
{
  return 0;
}

uint64_t default argument 4 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)()
{
  return 1;
}

uint64_t default argument 6 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 8 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 2 of ActivityArchivedViewCollection.index(for:in:ignoring:)()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t default argument 2 of ActivityArchivedViewCollection.viewEntry(for:in:ignoring:)()
{
  return MEMORY[0x1E4FBC860];
}

void sub_191AFAE08(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_191AFAE10()
{
  return sub_191CF3548();
}

uint64_t sub_191AFAE5C()
{
  return sub_191CF3538();
}

uint64_t sub_191AFAEB4()
{
  return sub_191CF64C8();
}

uint64_t sub_191AFAF20()
{
  return sub_191CF6478();
}

void *sub_191AFAF50@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_191AFAF64@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_191AFAF78@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_191AFAF8C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_191AFAFBC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_191AFAFE8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_191AFB00C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_191AFB020(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_191AFB034(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_191AFB048@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_191AFB05C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_191AFB070(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_191AFB084(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_191AFB098()
{
  return *v0 == 0;
}

uint64_t sub_191AFB0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_191AFB0C0(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_191AFB0D4()
{
  return sub_191CF64C8();
}

uint64_t sub_191AFB11C()
{
  return sub_191CF64C8();
}

void *sub_191AFB160@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_191AFB16C()
{
  uint64_t v0 = sub_191CF5338();
  uint64_t v2 = v1;
  if (v0 == sub_191CF5338() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_191AFB1F8()
{
  swift_getWitnessTable();

  return sub_191CF3528();
}

void *sub_191AFB264@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_191AFB274(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_191AFB280(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_191AFB294@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_191AFF914(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_191AFB2D4(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_191AFB2E0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_191AFF4E0((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_191AFB3D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v8 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

void *sub_191AFB618(uint64_t a1)
{
  return sub_191AFB630(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_191B431DC);
}

void *sub_191AFB630(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C058);
  uint64_t v5 = (void *)swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = v2;
  v5[3] = 2 * ((uint64_t)(v6 - 32) / 24);
  uint64_t v7 = a2(&v9, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_191B004C0();
  if (v7 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_191AFB730(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_191B016E0(0, (unint64_t *)&qword_1EB44ABD0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFB8C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFBB5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFB8E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFBCE4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFB904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFBE70(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFB924(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC034(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFB944(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC1A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFB964(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, &qword_1EB44C670, type metadata accessor for WidgetDescriptor);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFB9A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, &qword_1E92E0760, MEMORY[0x1E4F3C708]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFB9DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC310(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFB9FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, &qword_1EB44B698, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFBA38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, &qword_1E92E2E58, type metadata accessor for ControlTemplatePicker.Option);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFBA74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, &qword_1EB44AE50, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFBAB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC470(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFBAD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC5C0(a1, a2, a3, *v3, (uint64_t *)&unk_1EB44C658);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFBAF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC5C0(a1, a2, a3, *v3, &qword_1EB449BC0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191AFBB20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191AFC70C(a1, a2, a3, (void *)*v3, qword_1E92E24E0, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_191AFBB5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C058);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFBCE4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BC88);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BFF0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFBE70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7D8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B760);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC014(char a1, int64_t a2, char a3, void *a4)
{
  return sub_191AFC70C(a1, a2, a3, a4, &qword_1EB44B698, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
}

uint64_t sub_191AFC034(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C060);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC1A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A1A0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC310(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ACF0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC470(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E08E8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC5C0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC70C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFC954(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_191B4D7D8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_191AFC9FC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_191AFC9FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v128 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v139 = (uint64_t)&v122 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v136 = (uint64_t)&v122 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v135 = (uint64_t)&v122 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_191CF62B8();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_191AFD4A8(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v124 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v130 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    uint64_t v123 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
      v115 = v18;
      if (v20 >= 2)
      {
        uint64_t v116 = *a1;
        do
        {
          unint64_t v117 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_135;
          }
          if (!v116) {
            goto LABEL_147;
          }
          uint64_t v118 = *(void *)&v115[16 * v117 + 32];
          uint64_t v119 = *(void *)&v115[16 * v20 + 24];
          sub_191AFD764(v116 + *(void *)(v131 + 72) * v118, v116 + *(void *)(v131 + 72) * *(void *)&v115[16 * v20 + 16], v116 + *(void *)(v131 + 72) * v119, v130);
          if (v2) {
            break;
          }
          if (v119 < v118) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v115 = sub_191B42AD8((uint64_t)v115);
          }
          if (v117 >= *((void *)v115 + 2)) {
            goto LABEL_137;
          }
          v120 = &v115[16 * v117 + 32];
          *(void *)v120 = v118;
          *((void *)v120 + 1) = v119;
          unint64_t v121 = *((void *)v115 + 2);
          if (v20 > v121) {
            goto LABEL_138;
          }
          memmove(&v115[16 * v20 + 16], &v115[16 * v20 + 32], 16 * (v121 - v20));
          *((void *)v115 + 2) = v121 - 1;
          unint64_t v20 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v123 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_191CF55B8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v131 + 80);
    uint64_t v123 = v16;
    unint64_t v130 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  v137 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v129 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v39 = v19 + 1;
      uint64_t v38 = v19;
      goto LABEL_58;
    }
    uint64_t v126 = v2;
    uint64_t v23 = *a1;
    uint64_t v24 = *(void *)(v131 + 72);
    uint64_t v25 = v135;
    sub_191B014E8(*a1 + v24 * v22, v135, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    uint64_t v134 = v23;
    uint64_t v138 = v12;
    uint64_t v26 = v136;
    sub_191B014E8(v23 + v24 * v21, v136, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    int v27 = sub_191CF3148();
    uint64_t v28 = v26;
    uint64_t v29 = v138;
    sub_191B01550(v28, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    sub_191B01550(v25, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    uint64_t v30 = v24;
    uint64_t v140 = v24;
    if (v21 + 2 >= v29)
    {
      uint64_t v33 = v21 + 2;
      uint64_t v38 = v129;
      if ((v27 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      v125 = v18;
      uint64_t v31 = v24 * v22;
      uint64_t v32 = v134;
      uint64_t v33 = v21 + 2;
      uint64_t v34 = v30 * (v21 + 2);
      do
      {
        uint64_t v35 = v135;
        sub_191B014E8(v32 + v34, v135, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        uint64_t v36 = v136;
        sub_191B014E8(v32 + v31, v136, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        int v37 = sub_191CF3148();
        sub_191B01550(v36, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        sub_191B01550(v35, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        if ((v27 ^ v37))
        {
          a1 = v137;
          uint64_t v29 = v138;
          uint64_t v18 = v125;
          uint64_t v30 = v140;
          uint64_t v38 = v129;
          if ((v27 & 1) == 0) {
            goto LABEL_37;
          }
          goto LABEL_24;
        }
        uint64_t v30 = v140;
        v32 += v140;
        ++v33;
        uint64_t v29 = v138;
      }
      while (v138 != v33);
      uint64_t v33 = v138;
      a1 = v137;
      uint64_t v18 = v125;
      uint64_t v38 = v129;
      if ((v27 & 1) == 0)
      {
LABEL_37:
        uint64_t v39 = v33;
        break;
      }
    }
LABEL_24:
    if (v33 < v38) {
      goto LABEL_141;
    }
    uint64_t v39 = v33;
    if (v38 >= v33) {
      break;
    }
    v125 = v18;
    uint64_t v40 = 0;
    uint64_t v41 = v30 * (v33 - 1);
    uint64_t v42 = v38;
    uint64_t v43 = v33 * v30;
    uint64_t v44 = v42;
    uint64_t v45 = v42 * v30;
    uint64_t v46 = v134;
    do
    {
      if (v44 != v39 + v40 - 1)
      {
        if (!v46) {
          goto LABEL_146;
        }
        sub_191B003DC(v46 + v45, v128, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        if (v45 < v41 || v46 + v45 >= (unint64_t)(v46 + v43))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v45 != v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_191B003DC(v128, v46 + v41, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        uint64_t v39 = v33;
        uint64_t v30 = v140;
      }
      ++v44;
      --v40;
      v41 -= v30;
      v43 -= v30;
      v45 += v30;
    }
    while (v44 < v39 + v40);
    a1 = v137;
    uint64_t v29 = v138;
    uint64_t v18 = v125;
    uint64_t v2 = v126;
    uint64_t v38 = v129;
    if (v39 < v138) {
      goto LABEL_41;
    }
LABEL_58:
    if (v39 < v38) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v138 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_191B427CC(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v64 = *((void *)v18 + 2);
    unint64_t v63 = *((void *)v18 + 3);
    unint64_t v20 = v64 + 1;
    if (v64 >= v63 >> 1) {
      uint64_t v18 = sub_191B427CC((char *)(v63 > 1), v64 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    v65 = v18 + 32;
    v66 = &v18[16 * v64 + 32];
    uint64_t v67 = v138;
    *(void *)v66 = v129;
    *((void *)v66 + 1) = v67;
    if (v64)
    {
      while (1)
      {
        unint64_t v68 = v20 - 1;
        if (v20 >= 4)
        {
          v73 = &v65[16 * v20];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_123;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_124;
          }
          unint64_t v80 = v20 - 2;
          v81 = &v65[16 * v20 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_126;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_129;
          }
          if (v85 >= v76)
          {
            v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_133;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v97 = *((void *)v18 + 4);
            uint64_t v98 = *((void *)v18 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_89;
          }
          uint64_t v70 = *((void *)v18 + 4);
          uint64_t v69 = *((void *)v18 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_125;
        }
        unint64_t v80 = v20 - 2;
        v86 = &v65[16 * v20 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_128;
        }
        v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_131;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_132;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_95:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v91) {
          goto LABEL_127;
        }
        v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_130;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v108 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        v109 = v18;
        v110 = &v65[16 * v107];
        uint64_t v111 = *(void *)v110;
        v112 = &v65[16 * v68];
        uint64_t v113 = *((void *)v112 + 1);
        sub_191AFD764(v108 + *(void *)(v131 + 72) * *(void *)v110, v108 + *(void *)(v131 + 72) * *(void *)v112, v108 + *(void *)(v131 + 72) * v113, v130);
        if (v2) {
          goto LABEL_117;
        }
        if (v113 < v111) {
          goto LABEL_120;
        }
        if (v68 > *((void *)v109 + 2)) {
          goto LABEL_121;
        }
        *(void *)v110 = v111;
        *(void *)&v65[16 * v107 + 8] = v113;
        unint64_t v114 = *((void *)v109 + 2);
        if (v68 >= v114) {
          goto LABEL_122;
        }
        uint64_t v18 = v109;
        unint64_t v20 = v114 - 1;
        memmove(&v65[16 * v68], v112 + 16, 16 * (v114 - 1 - v68));
        *((void *)v109 + 2) = v114 - 1;
        a1 = v137;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v12 = a1[1];
    uint64_t v19 = v138;
    if (v138 >= v12) {
      goto LABEL_106;
    }
  }
  uint64_t v2 = v126;
  if (v39 >= v29) {
    goto LABEL_58;
  }
LABEL_41:
  if (__OFSUB__(v39, v38)) {
    goto LABEL_139;
  }
  if (v39 - v38 >= v124) {
    goto LABEL_58;
  }
  if (__OFADD__(v38, v124)) {
    goto LABEL_142;
  }
  if (v38 + v124 >= v29) {
    uint64_t v47 = v29;
  }
  else {
    uint64_t v47 = v38 + v124;
  }
  if (v47 >= v38)
  {
    if (v39 != v47)
    {
      v125 = v18;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v131 + 72);
      uint64_t v49 = v48 * (v39 - 1);
      uint64_t v133 = v48;
      uint64_t v50 = v39 * v48;
      uint64_t v127 = v47;
      do
      {
        uint64_t v52 = 0;
        uint64_t v138 = v39;
        uint64_t v134 = v50;
        while (1)
        {
          uint64_t v140 = v38;
          uint64_t v53 = *a1;
          uint64_t v54 = v50 + v52 + *a1;
          uint64_t v55 = v135;
          sub_191B014E8(v54, v135, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          uint64_t v56 = v49;
          uint64_t v57 = v49 + v52 + v53;
          uint64_t v58 = v136;
          sub_191B014E8(v57, v136, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          char v59 = sub_191CF3148();
          sub_191B01550(v58, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          sub_191B01550(v55, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          if ((v59 & 1) == 0) {
            break;
          }
          uint64_t v60 = *a1;
          if (!*a1) {
            goto LABEL_144;
          }
          uint64_t v50 = v134;
          uint64_t v49 = v56;
          uint64_t v61 = v60 + v56 + v52;
          sub_191B003DC(v60 + v134 + v52, v139, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_191B003DC(v139, v61, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          v52 -= v133;
          uint64_t v38 = v140 + 1;
          a1 = v137;
          uint64_t v51 = v138;
          if (v138 == v140 + 1) {
            goto LABEL_51;
          }
        }
        uint64_t v51 = v138;
        uint64_t v49 = v56;
        uint64_t v50 = v134;
LABEL_51:
        uint64_t v39 = v51 + 1;
        v49 += v133;
        v50 += v133;
        uint64_t v38 = v129;
      }
      while (v39 != v127);
      uint64_t v39 = v127;
      uint64_t v18 = v125;
      uint64_t v2 = v126;
    }
    goto LABEL_58;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_191CF5FB8();
  __break(1u);
  return result;
}

uint64_t sub_191AFD4A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v7 = MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = a4;
      uint64_t v20 = *a4;
      sub_191B014E8(v31 + v17 + v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      sub_191B014E8(v32 + v17 + v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      char v21 = sub_191CF3148();
      sub_191B01550((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      a4 = v19;
      uint64_t result = sub_191B01550((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_191B003DC(v22 + v31 + v17, v30, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_191B003DC(v30, v23, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      v17 -= v28;
      ++v18;
      a4 = v19;
      if (v29 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_191AFD764(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v8 = MEMORY[0x1F4188790](v44);
  uint64_t v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_191B014E8(v26 + v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v45;
          sub_191B014E8(a2 + v28, v45, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          char v34 = sub_191CF3148();
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_191B01550(v35, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          sub_191B01550(v32, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_191B014E8(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        uint64_t v21 = v45;
        sub_191B014E8(a4, v45, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        char v22 = sub_191CF3148();
        sub_191B01550(v21, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        sub_191B01550((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_191B42998(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

size_t sub_191AFDC70(uint64_t a1)
{
  uint64_t v34 = type metadata accessor for ViewableTimelineEntry();
  MEMORY[0x1F4188790](v34);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v4;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  uint64_t v7 = *(void *)(v6 + 16);
  size_t result = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = (v5 + 32) & ~v5;
    uint64_t v13 = MEMORY[0x1E4FBC860] + v12;
    uint64_t v38 = v12;
    uint64_t v39 = v6 + v12;
    uint64_t v35 = v3;
    uint64_t v36 = v5 | 7;
    int64_t v14 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v15 = v37;
    while (v10 < *(void *)(v6 + 16))
    {
      uint64_t v17 = *(void *)(v15 + 72);
      size_t result = sub_191B014E8(v39 + v17 * v10, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      if (v11)
      {
        uint64_t v9 = v14;
        BOOL v16 = __OFSUB__(v11--, 1);
        if (v16) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v18 = v14[3];
        if ((uint64_t)((v18 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        uint64_t v19 = v6;
        int64_t v20 = v18 & 0xFFFFFFFFFFFFFFFELL;
        if (v20 <= 1) {
          uint64_t v21 = 1;
        }
        else {
          uint64_t v21 = v20;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
        uint64_t v22 = v38;
        uint64_t v9 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v9);
        if (!v17) {
          goto LABEL_36;
        }
        int64_t v23 = result - v22;
        if (result - v22 == 0x8000000000000000 && v17 == -1) {
          goto LABEL_37;
        }
        uint64_t v25 = v23 / v17;
        v9[2] = v21;
        v9[3] = 2 * (v23 / v17);
        unint64_t v26 = (char *)v9 + v22;
        uint64_t v27 = v14[3] >> 1;
        uint64_t v28 = v27 * v17;
        if (v14[2])
        {
          if (v9 < v14 || v26 >= (char *)v14 + v38 + v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v9 != v14)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v14[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v26[v28];
        uint64_t v30 = (v25 & 0x7FFFFFFFFFFFFFFFLL) - v27;
        swift_release();
        uint64_t v15 = v37;
        uint64_t v6 = v19;
        uint64_t v3 = v35;
        BOOL v16 = __OFSUB__(v30, 1);
        uint64_t v11 = v30 - 1;
        if (v16)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
      }
      ++v10;
      size_t result = sub_191B003DC((uint64_t)v3, v13, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      v13 += v17;
      int64_t v14 = v9;
      if (v7 == v10) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_29:
  uint64_t v11 = 0;
LABEL_30:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v31 = v9[3];
  if (v31 < 2) {
    return (size_t)v9;
  }
  unint64_t v32 = v31 >> 1;
  BOOL v16 = __OFSUB__(v32, v11);
  uint64_t v33 = v32 - v11;
  if (!v16)
  {
    v9[2] = v33;
    return (size_t)v9;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_191AFDF38(void *a1, uint64_t a2)
{
  unint64_t v29 = a1;
  id v3 = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_191B4FF68(&v29, a2);
  unint64_t v6 = v5;
  unint64_t v29 = v4;
  unint64_t v30 = v5;
  unint64_t v31 = v7;
  if (v5 >> 62) {
    goto LABEL_27;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v8 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v11 = (unint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_191B3CC80(v8 - 1);
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v29 = v10;
        swift_bridgeObjectRelease();
        unint64_t v30 = (unint64_t)v10;
        swift_bridgeObjectRelease();
        unint64_t v31 = v10;
      }
      if (!v9)
      {
        unint64_t v14 = v12[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1) {
          uint64_t v16 = 1;
        }
        else {
          uint64_t v16 = v15;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BC88);
        uint64_t v17 = (void *)swift_allocObject();
        int64_t v18 = _swift_stdlib_malloc_size(v17);
        uint64_t v19 = v18 - 32;
        if (v18 < 32) {
          uint64_t v19 = v18 - 25;
        }
        uint64_t v20 = v19 >> 3;
        v17[2] = v16;
        v17[3] = 2 * (v19 >> 3);
        unint64_t v21 = (unint64_t)(v17 + 4);
        uint64_t v22 = v12[3] >> 1;
        if (v12[2])
        {
          int64_t v23 = v12 + 4;
          if (v17 != v12 || v21 >= (unint64_t)v23 + 8 * v22) {
            memmove(v17 + 4, v23, 8 * v22);
          }
          v12[2] = 0;
        }
        uint64_t v11 = (unint64_t *)(v21 + 8 * v22);
        uint64_t v9 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        uint64_t v12 = v17;
      }
      BOOL v24 = __OFSUB__(v9--, 1);
      if (v24) {
        break;
      }
      *uint64_t v11 = v6;
      unint64_t v6 = v30;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v8 = sub_191CF6018();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      ++v11;
      if (v8 <= 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v12[3];
  if (v26 < 2) {
    return (uint64_t)v12;
  }
  unint64_t v27 = v26 >> 1;
  BOOL v24 = __OFSUB__(v27, v9);
  uint64_t v28 = v27 - v9;
  if (!v24)
  {
    v12[2] = v28;
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_191AFE1D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v2 - 8);
  v66 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)&v65 - v9;
  uint64_t v10 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void **)((char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v79 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v68 = (v79 + 32) & ~v79;
  uint64_t v77 = MEMORY[0x1E4FBC860] + v68;
  sub_191B014E8(a1, (uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  int64_t v18 = *v12;
  uint64_t v19 = (char *)v16 + *(int *)(v14 + 28);
  uint64_t v20 = *(void (**)(void))(v5 + 16);
  uint64_t v71 = v5 + 16;
  char v72 = v19;
  uint64_t v70 = v20;
  v20();
  id v21 = v18;
  uint64_t v22 = sub_191B4EA70(v17);
  unint64_t v80 = v21;
  id v23 = v21;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_191B4FF68(&v80, v22);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();

  *uint64_t v16 = v24;
  v16[1] = v26;
  uint64_t v29 = v4;
  v16[2] = v28;
  uint64_t v30 = (uint64_t)v66;
  sub_191B01550((uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v31 = 0;
  uint64_t v74 = v5;
  uint64_t v75 = (void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v69 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  unint64_t v32 = v16;
  uint64_t v67 = v79 | 7;
  uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v76 = v29;
  while (1)
  {
    unint64_t v36 = v32[1];
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v61 = sub_191CF6018();
      swift_bridgeObjectRelease();
      unint64_t v38 = v61 - 1;
      if (v61 < 1)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        (*v73)(v30, 1, 1, v29);
LABEL_44:
        sub_191B01550((uint64_t)v32, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        uint64_t result = sub_191B01770(v30, (uint64_t *)&unk_1EB44BBB8);
        unint64_t v62 = v33[3];
        if (v62 >= 2)
        {
          unint64_t v63 = v62 >> 1;
          BOOL v35 = __OFSUB__(v63, v31);
          uint64_t v64 = v63 - v31;
          if (v35) {
            goto LABEL_53;
          }
          v33[2] = v64;
        }
        return (uint64_t)v33;
      }
    }
    else
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v38 = v37 - 1;
      if (v37 < 1) {
        goto LABEL_43;
      }
    }
    unint64_t v79 = (unint64_t)v33;
    sub_191B3CC80(v38);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x1E4FBC860];
      uint64_t *v32 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      v32[1] = v40;
      swift_bridgeObjectRelease();
      v32[2] = v40;
    }
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v70)(v8, v72, v29);
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_191CF6018();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v42) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v42 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v42) {
        goto LABEL_18;
      }
    }
    if (v42 < 1) {
      goto LABEL_49;
    }
    for (uint64_t i = 0; i != v42; ++i)
    {
      if ((v36 & 0xC000000000000001) != 0)
      {
        uint64_t v44 = MEMORY[0x192FE4B60](i, v36);
      }
      else
      {
        uint64_t v44 = *(void *)(v36 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(void **)(v44 + 16) + 112))(v8);
      swift_release();
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v29 = v76;
    uint64_t v45 = *v75;
    (*v75)(v30, v8, v76);
    (*v73)(v30, 0, 1, v29);
    int v46 = (*v69)(v30, 1, v29);
    uint64_t v33 = (void *)v79;
    if (v46 == 1) {
      goto LABEL_44;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v45)(v78, v30, v29);
    if (v31)
    {
      uint64_t v34 = (char *)v77;
      BOOL v35 = __OFSUB__(v31--, 1);
      if (v35) {
        break;
      }
      goto LABEL_3;
    }
    unint64_t v47 = v33[3];
    if ((uint64_t)((v47 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_50;
    }
    int64_t v48 = v47 & 0xFFFFFFFFFFFFFFFELL;
    if (v48 <= 1) {
      uint64_t v49 = 1;
    }
    else {
      uint64_t v49 = v48;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7D0);
    uint64_t v50 = *(void *)(v74 + 72);
    uint64_t v51 = v68;
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v33);
    if (!v50) {
      goto LABEL_51;
    }
    uint64_t v52 = result - v51;
    if (result - v51 == 0x8000000000000000 && v50 == -1) {
      goto LABEL_52;
    }
    uint64_t v54 = v52 / v50;
    v33[2] = v49;
    v33[3] = 2 * (v52 / v50);
    uint64_t v55 = (char *)v33 + v51;
    unint64_t v56 = v79;
    uint64_t v57 = *(void *)(v79 + 24) >> 1;
    uint64_t v58 = v57 * v50;
    if (*(void *)(v79 + 16))
    {
      if ((unint64_t)v33 < v79 || (unint64_t)v55 >= v79 + v68 + v58)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v33 != (void *)v79)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *(void *)(v56 + 16) = 0;
    }
    uint64_t v34 = &v55[v58];
    uint64_t v60 = (v54 & 0x7FFFFFFFFFFFFFFFLL) - v57;
    uint64_t result = swift_release();
    uint64_t v29 = v76;
    BOOL v35 = __OFSUB__(v60, 1);
    uint64_t v31 = v60 - 1;
    if (v35) {
      break;
    }
LABEL_3:
    v45((uint64_t)v34, v78, v29);
    uint64_t v77 = (uint64_t)&v34[*(void *)(v74 + 72)];
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

size_t sub_191AFE870(uint64_t a1, uint64_t a2, int64_t a3)
{
  int64_t v62 = a3;
  uint64_t v58 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B678);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v51 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v57 = (uint64_t)&v51 - v14;
  uint64_t v15 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v60 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B660);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  id v21 = (uint64_t *)((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v54 = (v22 + 32) & ~v22;
  uint64_t v61 = (char *)MEMORY[0x1E4FBC860];
  char v59 = (char *)(MEMORY[0x1E4FBC860] + v54);
  uint64_t v23 = (uint64_t)v21 + *(int *)(v19 + 40);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v56 = v16 + 56;
  v55(v23, 1, 1, v15);
  uint64_t v24 = v58;
  void *v21 = a1;
  v21[1] = v24;
  uint64_t v58 = v16;
  uint64_t v25 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v53 = v22 | 7;
  v21[2] = v62;
  swift_retain();
  swift_retain();
  int64_t v62 = 0;
  while (1)
  {
    v55((uint64_t)v13, 1, 1, v15);
    do
    {
      sub_191CF6088();
      sub_191B01770((uint64_t)v13, &qword_1EB44B678);
      sub_191B015B0((uint64_t)v10, (uint64_t)v13, &qword_1EB44B678);
      sub_191B01614((uint64_t)v13, (uint64_t)v7, &qword_1EB44B678);
      uint64_t v26 = *v25;
      unsigned int v27 = (*v25)(v7, 1, v15);
      sub_191B01770((uint64_t)v7, &qword_1EB44B678);
    }
    while (v27 != 1 && (((uint64_t (*)(char *, uint64_t))v21[1])(v13, v23) & 1) != 0);
    sub_191B01678((uint64_t)v13, v23);
    uint64_t v28 = v57;
    sub_191B015B0((uint64_t)v13, v57, &qword_1EB44B678);
    if (v26((char *)v28, 1, v15) == 1) {
      break;
    }
    size_t result = sub_191B003DC(v28, v60, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    uint64_t v30 = v59;
    if (v62)
    {
      uint64_t v31 = v61;
      int64_t v32 = v62 - 1;
      if (__OFSUB__(v62, 1)) {
        goto LABEL_32;
      }
      goto LABEL_27;
    }
    unint64_t v33 = *((void *)v61 + 3);
    if ((uint64_t)((v33 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_33;
    }
    int64_t v34 = v33 & 0xFFFFFFFFFFFFFFFELL;
    if (v34 <= 1) {
      int64_t v34 = 1;
    }
    int64_t v62 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
    uint64_t v35 = *(void *)(v58 + 72);
    uint64_t v36 = v54;
    char v59 = (char *)swift_allocObject();
    size_t result = _swift_stdlib_malloc_size(v59);
    if (!v35) {
      goto LABEL_34;
    }
    int64_t v37 = result - v36;
    if (result - v36 == 0x8000000000000000 && v35 == -1) {
      goto LABEL_35;
    }
    uint64_t v39 = v36;
    uint64_t v40 = v37 / v35;
    uint64_t v41 = v59;
    *((void *)v59 + 2) = v62;
    v41[3] = 2 * (v37 / v35);
    uint64_t v42 = (char *)v41 + v36;
    unint64_t v43 = v61;
    uint64_t v44 = *((void *)v61 + 3) >> 1;
    uint64_t v45 = v44 * v35;
    if (*((void *)v61 + 2))
    {
      if (v59 < v61 || v42 >= &v61[v39 + v45])
      {
        int64_t v62 = (int64_t)v42;
        uint64_t v46 = v44;
        uint64_t v51 = v45;
        uint64_t v52 = v40;
        swift_arrayInitWithTakeFrontToBack();
LABEL_24:
        uint64_t v45 = v51;
        uint64_t v40 = v52;
        uint64_t v44 = v46;
        uint64_t v42 = (char *)v62;
      }
      else if (v59 != v61)
      {
        int64_t v62 = (int64_t)v42;
        uint64_t v46 = v44;
        uint64_t v51 = v45;
        uint64_t v52 = v40;
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_24;
      }
      *((void *)v43 + 2) = 0;
    }
    uint64_t v30 = &v42[v45];
    int64_t v62 = (v40 & 0x7FFFFFFFFFFFFFFFLL) - v44;
    size_t result = swift_release();
    uint64_t v31 = v59;
    int64_t v32 = v62 - 1;
    if (__OFSUB__(v62, 1))
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_27:
    int64_t v62 = v32;
    sub_191B003DC(v60, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
    char v59 = &v30[*(void *)(v58 + 72)];
    uint64_t v61 = v31;
  }
  sub_191B01770((uint64_t)v21, &qword_1EB44B660);
  sub_191B01770(v28, &qword_1EB44B678);
  size_t result = (size_t)v61;
  unint64_t v47 = *((void *)v61 + 3);
  if (v47 < 2) {
    return result;
  }
  unint64_t v48 = v47 >> 1;
  BOOL v49 = __OFSUB__(v48, v62);
  unint64_t v50 = v48 - v62;
  if (!v49)
  {
    *((void *)v61 + 2) = v50;
    return result;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_191AFEDA4()
{
  return sub_191CF3148() & 1;
}

unint64_t sub_191AFEDD4()
{
  unint64_t result = qword_1E92E0730;
  if (!qword_1E92E0730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0730);
  }
  return result;
}

uint64_t sub_191AFEE28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_191AFEE8C()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_191AFEE98()
{
  return sub_191B00398(&qword_1E92E2D88, &qword_1E92E2D90);
}

uint64_t sub_191AFEED4()
{
  return type metadata accessor for WidgetViewCollection();
}

uint64_t type metadata accessor for WidgetViewCollection()
{
  uint64_t result = qword_1EB44B5D0;
  if (!qword_1EB44B5D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_191AFEF28()
{
  type metadata accessor for BundleStub();
  if (v0 <= 0x3F)
  {
    sub_191AFF0FC(319, (unint64_t *)&qword_1EB44B900, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F)
    {
      sub_191AFF0FC(319, (unint64_t *)&unk_1EB44B728, MEMORY[0x1E4F26E60]);
      if (v2 <= 0x3F)
      {
        sub_191CF3178();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for WidgetViewCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetViewCollection);
}

uint64_t dispatch thunk of WidgetViewCollection.__allocating_init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_191AFF0FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for CHSWidgetBackgroundViewPolicy(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CHSDisplayGamut(uint64_t a1)
{
}

void type metadata accessor for CHSWidgetVisibility(uint64_t a1)
{
}

void type metadata accessor for CHSControlSize(uint64_t a1)
{
}

void type metadata accessor for CHSEnablement(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ControlViewSource.ProviderType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActivityMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

void type metadata accessor for CHSWidgetFamilyMask(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CHSTintAccentedDesaturatedMode(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for TimelineEntryRelevance(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TimelineEntryRelevance(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_191AFF32C()
{
  return sub_191AFF3BC(&qword_1E92E2DB8, type metadata accessor for CHSWidgetFamilyMask);
}

uint64_t sub_191AFF374()
{
  return sub_191AFF3BC(&qword_1E92E2DC0, type metadata accessor for CHSWidgetFamilyMask);
}

uint64_t sub_191AFF3BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191AFF404()
{
  return sub_191AFF3BC(&qword_1E92E2DC8, type metadata accessor for CHSWidgetFamilyMask);
}

uint64_t sub_191AFF44C()
{
  return sub_191AFF3BC(&qword_1E92E2DD0, type metadata accessor for CHSWidgetFamilyMask);
}

uint64_t sub_191AFF494()
{
  return sub_191AFF3BC(&qword_1E92E2DD8, type metadata accessor for CHSWidgetBackgroundViewPolicy);
}

uint64_t sub_191AFF4E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_191B00398(&qword_1E92E2E50, &qword_1EB44BFF0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BFF0);
          uint64_t v12 = sub_191B4D68C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191AFF704(unint64_t a1, uint64_t a2, unint64_t a3)
{
  void (*v16)(uint64_t *__return_ptr, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  uint64_t v5 = v3;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_191CF6018();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v9 = (unint64_t *)a3;
      a3 = a1 & 0xC000000000000001;
      uint64_t v10 = sub_191B016E0(0, v9);
      uint64_t v16 = *(void (**)(uint64_t *__return_ptr, void, uint64_t, uint64_t))(**(void **)(a2 + 16) + 120);
      for (uint64_t i = 4; ; ++i)
      {
        a2 = i - 4;
        if (a3)
        {
          uint64_t v12 = MEMORY[0x192FE4B60](i - 4, a1);
          uint64_t v13 = i - 3;
          if (__OFADD__(a2, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * i);
          swift_retain();
          uint64_t v13 = i - 3;
          if (__OFADD__(a2, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v16(&v17, *(void *)(v12 + 24), v10, v10);
        if (v5)
        {

          swift_release();
          uint64_t v5 = 0;
        }
        else
        {
          uint64_t v14 = swift_release();
          MEMORY[0x192FE4280](v14);
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_191CF5588();
          }
          sub_191CF55D8();
          sub_191CF5558();
          a3 = a1 & 0xC000000000000001;
        }
        if (v13 == v8)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_191AFF914(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_191AFF94C(unint64_t a1, void *a2)
{
  char v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v23 = (void *)a2[2];
      uint64_t v8 = *(void **)(*v23 + 120);
      uint64_t v21 = v6;
      uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v10 = i - 4;
        if (v7)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](i - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * i);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v23;
        ((void (*)(uint64_t *__return_ptr, void, ValueMetadata *, ValueMetadata *))v8)(&v24, *(void *)(v11 + 24), &type metadata for InternalWidgetFamily, &type metadata for InternalWidgetFamily);
        if (v3)
        {

          swift_release();
          char v3 = 0;
        }
        else
        {
          a2 = v8;
          unint64_t v14 = v5;
          unint64_t v15 = v7;
          swift_release();
          char v16 = v24;
          if (v24 != 13)
          {
            uint64_t v17 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v17 = sub_191B40ACC(0, *((void *)v22 + 2) + 1, 1, v22);
            }
            unint64_t v19 = *((void *)v17 + 2);
            unint64_t v18 = *((void *)v17 + 3);
            uint64_t v22 = v17;
            if (v19 >= v18 >> 1) {
              uint64_t v22 = sub_191B40ACC((char *)(v18 > 1), v19 + 1, 1, v17);
            }
            *((void *)v22 + 2) = v19 + 1;
            v22[v19 + 32] = v16;
            uint64_t v6 = v21;
          }
          unint64_t v7 = v15;
          unint64_t v5 = v14;
          uint64_t v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v22;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

uint64_t sub_191AFFB6C(unint64_t a1, uint64_t a2)
{
  void (*v14)(uint64_t *__return_ptr, void, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  char v3 = v2;
  char v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = a1 & 0xC000000000000001;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA68);
      unint64_t v14 = *(void (**)(uint64_t *__return_ptr, void, uint64_t, uint64_t))(**(void **)(a2 + 16) + 120);
      for (uint64_t i = 4; ; ++i)
      {
        a2 = i - 4;
        if (v7)
        {
          uint64_t v10 = MEMORY[0x192FE4B60](i - 4, a1);
          uint64_t v11 = i - 3;
          if (__OFADD__(a2, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(a1 + 8 * i);
          swift_retain();
          uint64_t v11 = i - 3;
          if (__OFADD__(a2, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v14(&v15, *(void *)(v10 + 24), v8, v8);
        if (v3)
        {

          swift_release();
          char v3 = 0;
        }
        else
        {
          uint64_t v12 = swift_release();
          MEMORY[0x192FE4280](v12);
          if (*(void *)(v16 + 16) >= *(void *)(v16 + 24) >> 1) {
            sub_191CF5588();
          }
          sub_191CF55D8();
          sub_191CF5558();
          unint64_t v7 = a1 & 0xC000000000000001;
        }
        if (v11 == v6)
        {
          swift_bridgeObjectRelease();
          return v16;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_191AFFD68(unint64_t a1, void *a2)
{
  void (*v19)(uint64_t *__return_ptr, void, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;

  char v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v20 = v5 & 0xC000000000000001;
      a2 = (void *)a2[2];
      unint64_t v19 = *(void (**)(uint64_t *__return_ptr, void, uint64_t, uint64_t))(*a2 + 120);
      unint64_t v7 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v8 = 4;
      uint64_t v9 = MEMORY[0x1E4FBC958];
      unint64_t v18 = v5;
      while (1)
      {
        uint64_t v10 = v8 - 4;
        if (v20)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](v8 - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v8 - 3;
          if (v12) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * v8);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v8 - 3;
          if (v12)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v19(&v21, *(void *)(v11 + 24), v9, v9);
        if (v3)
        {

          swift_release();
          char v3 = 0;
        }
        else
        {
          swift_release();
          uint64_t v14 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v7 = sub_191B409B0(0, v7[2] + 1, 1, v7);
          }
          unint64_t v16 = v7[2];
          unint64_t v15 = v7[3];
          if (v16 >= v15 >> 1) {
            unint64_t v7 = sub_191B409B0((void *)(v15 > 1), v16 + 1, 1, v7);
          }
          v7[2] = v16 + 1;
          v7[v16 + 4] = v14;
          unint64_t v5 = v18;
        }
        ++v8;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

char *sub_191AFFF6C(unint64_t a1, uint64_t a2)
{
  void (*v20)(uint64_t *__return_ptr, void, void, void);
  uint64_t v21;
  uint64_t v22;

  char v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v21 = *(void *)(a2 + 16);
      uint64_t v20 = *(void (**)(uint64_t *__return_ptr, void, void, void))(*(void *)v21 + 120);
      uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v9 = 4;
      unint64_t v19 = v5 & 0xC000000000000001;
      while (1)
      {
        uint64_t v10 = v9 - 4;
        if (v7)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](v9 - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v9 - 3;
          if (v12) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * v9);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v9 - 3;
          if (v12)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        a2 = v21;
        v20(&v22, *(void *)(v11 + 24), MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB390]);
        if (v3)
        {

          swift_release();
          char v3 = 0;
        }
        else
        {
          a2 = v6;
          unint64_t v14 = v5;
          swift_release();
          char v15 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_191B40AC0(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v17 = *((void *)v8 + 2);
          unint64_t v16 = *((void *)v8 + 3);
          if (v17 >= v16 >> 1) {
            uint64_t v8 = sub_191B40AC0((char *)(v16 > 1), v17 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v17 + 1;
          v8[v17 + 32] = v15;
          unint64_t v5 = v14;
          uint64_t v6 = a2;
          unint64_t v7 = v19;
        }
        ++v9;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

char *sub_191B00174(unint64_t a1, void *a2)
{
  char v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v23 = (void *)a2[2];
      uint64_t v8 = *(void **)(*v23 + 120);
      uint64_t v21 = v6;
      uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v10 = i - 4;
        if (v7)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](i - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * i);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v23;
        ((void (*)(uint64_t *__return_ptr, void, ValueMetadata *, ValueMetadata *))v8)(&v24, *(void *)(v11 + 24), &type metadata for ActivityFamily, &type metadata for ActivityFamily);
        if (v3)
        {

          swift_release();
          char v3 = 0;
        }
        else
        {
          a2 = v8;
          unint64_t v14 = v5;
          unint64_t v15 = v7;
          swift_release();
          char v16 = v24;
          if (v24 != 2)
          {
            unint64_t v17 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v17 = sub_191B40E44(0, *((void *)v22 + 2) + 1, 1, v22);
            }
            unint64_t v19 = *((void *)v17 + 2);
            unint64_t v18 = *((void *)v17 + 3);
            uint64_t v22 = v17;
            if (v19 >= v18 >> 1) {
              uint64_t v22 = sub_191B40E44((char *)(v18 > 1), v19 + 1, 1, v17);
            }
            *((void *)v22 + 2) = v19 + 1;
            v22[v19 + 32] = v16 & 1;
            uint64_t v6 = v21;
          }
          unint64_t v7 = v15;
          unint64_t v5 = v14;
          uint64_t v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v22;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

uint64_t sub_191B00398(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B003DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_191B004A8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_191B004C0()
{
  return swift_release();
}

char *sub_191B004C8(unint64_t a1, void *a2)
{
  long long v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v23 = (void *)a2[2];
      uint64_t v8 = *(void **)(*v23 + 120);
      uint64_t v21 = v6;
      uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v10 = i - 4;
        if (v7)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](i - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * i);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v23;
        ((void (*)(uint64_t *__return_ptr, void, ValueMetadata *, ValueMetadata *))v8)(&v24, *(void *)(v11 + 24), &type metadata for ActivityUpdateAvailability, &type metadata for ActivityUpdateAvailability);
        if (v3)
        {

          swift_release();
          long long v3 = 0;
        }
        else
        {
          a2 = v8;
          unint64_t v14 = v5;
          unint64_t v15 = v7;
          swift_release();
          char v16 = v24;
          if (v24 != 2)
          {
            unint64_t v17 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v17 = sub_191B40E50(0, *((void *)v22 + 2) + 1, 1, v22);
            }
            unint64_t v19 = *((void *)v17 + 2);
            unint64_t v18 = *((void *)v17 + 3);
            uint64_t v22 = v17;
            if (v19 >= v18 >> 1) {
              uint64_t v22 = sub_191B40E50((char *)(v18 > 1), v19 + 1, 1, v17);
            }
            *((void *)v22 + 2) = v19 + 1;
            v22[v19 + 32] = v16 & 1;
            uint64_t v6 = v21;
          }
          unint64_t v7 = v15;
          unint64_t v5 = v14;
          uint64_t v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v22;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

char *sub_191B006EC(unint64_t a1, void *a2)
{
  long long v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v23 = (void *)a2[2];
      uint64_t v8 = *(void **)(*v23 + 120);
      uint64_t v21 = v6;
      uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v10 = i - 4;
        if (v7)
        {
          uint64_t v11 = MEMORY[0x192FE4B60](i - 4, v5);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * i);
          swift_retain();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v23;
        ((void (*)(uint64_t *__return_ptr, void, ValueMetadata *, ValueMetadata *))v8)(&v24, *(void *)(v11 + 24), &type metadata for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
        if (v3)
        {

          swift_release();
          long long v3 = 0;
        }
        else
        {
          a2 = v8;
          unint64_t v14 = v5;
          unint64_t v15 = v7;
          swift_release();
          char v16 = v24;
          if (v24 != 3)
          {
            unint64_t v17 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v17 = sub_191B40E5C(0, *((void *)v22 + 2) + 1, 1, v22);
            }
            unint64_t v19 = *((void *)v17 + 2);
            unint64_t v18 = *((void *)v17 + 3);
            uint64_t v22 = v17;
            if (v19 >= v18 >> 1) {
              uint64_t v22 = sub_191B40E5C((char *)(v18 > 1), v19 + 1, 1, v17);
            }
            *((void *)v22 + 2) = v19 + 1;
            v22[v19 + 32] = v16;
            uint64_t v6 = v21;
          }
          unint64_t v7 = v15;
          unint64_t v5 = v14;
          uint64_t v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v22;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E4FBC860];
}

void *sub_191B0090C(unint64_t a1, void **a2)
{
  long long v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v8 = *a2[2];
      unsigned int v27 = (void **)a2[2];
      uint64_t v9 = *(void ***)(v8 + 120);
      uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v10 = 4;
      uint64_t v23 = v6;
      while (1)
      {
        uint64_t v11 = v10 - 4;
        if (v7)
        {
          uint64_t v12 = MEMORY[0x192FE4B60](v10 - 4, v5);
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(v5 + 8 * v10);
          swift_retain();
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v27;
        ((void (*)(void *__return_ptr, void, ValueMetadata *, ValueMetadata *))v9)(v26, *(void *)(v12 + 24), &type metadata for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
        if (v3)
        {

          swift_release();
          long long v3 = 0;
        }
        else
        {
          a2 = v9;
          unint64_t v15 = v5;
          unint64_t v16 = v7;
          swift_release();
          char v17 = v26[0];
          if (LOBYTE(v26[0]) != 3)
          {
            uint64_t v24 = v26[1];
            unint64_t v18 = v25;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v18 = sub_191B40E68(0, v25[2] + 1, 1, v25);
            }
            unint64_t v20 = v18[2];
            unint64_t v19 = v18[3];
            uint64_t v25 = v18;
            if (v20 >= v19 >> 1) {
              uint64_t v25 = sub_191B40E68((void *)(v19 > 1), v20 + 1, 1, v18);
            }
            v25[2] = v20 + 1;
            uint64_t v21 = &v25[2 * v20];
            *((unsigned char *)v21 + 32) = v17;
            v21[5] = v24;
            uint64_t v6 = v23;
          }
          unint64_t v7 = v16;
          unint64_t v5 = v15;
          uint64_t v9 = a2;
        }
        ++v10;
        if (v14 == v6)
        {
          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void *sub_191B00B40(unint64_t a1, void **a2)
{
  long long v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191CF6018();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v8 = *a2[2];
      uint64_t v28 = (void **)a2[2];
      uint64_t v9 = *(void ***)(v8 + 120);
      uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v10 = 4;
      uint64_t v23 = v6;
      while (1)
      {
        uint64_t v11 = v10 - 4;
        if (v7)
        {
          uint64_t v12 = MEMORY[0x192FE4B60](v10 - 4, v5);
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(v5 + 8 * v10);
          swift_retain();
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v28;
        ((void (*)(uint64_t *__return_ptr, void, void, void))v9)(&v26, *(void *)(v12 + 24), MEMORY[0x1E4F277C0], MEMORY[0x1E4F277C0]);
        if (v3)
        {

          swift_release();
          long long v3 = 0;
        }
        else
        {
          a2 = v9;
          unint64_t v15 = v5;
          unint64_t v16 = v7;
          swift_release();
          unint64_t v17 = v27;
          if (v27 >> 60 != 15)
          {
            uint64_t v24 = v26;
            unint64_t v18 = v25;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v18 = sub_191B40F78(0, v25[2] + 1, 1, v25);
            }
            unint64_t v20 = v18[2];
            unint64_t v19 = v18[3];
            uint64_t v25 = v18;
            if (v20 >= v19 >> 1) {
              uint64_t v25 = sub_191B40F78((void *)(v19 > 1), v20 + 1, 1, v18);
            }
            v25[2] = v20 + 1;
            uint64_t v21 = &v25[2 * v20];
            v21[4] = v24;
            v21[5] = v17;
            uint64_t v6 = v23;
          }
          unint64_t v7 = v16;
          unint64_t v5 = v15;
          uint64_t v9 = a2;
        }
        ++v10;
        if (v14 == v6)
        {
          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_191B00D74(unint64_t a1, void *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(BOOL, uint64_t, uint64_t))
{
  int64_t v32 = a5;
  unint64_t v7 = v5;
  uint64_t v35 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a4(0);
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v44 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  int64_t v34 = (char *)&v31 - v16;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_191CF6018();
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
    {
LABEL_3:
      unint64_t v43 = a1 & 0xC000000000000001;
      a2 = (void *)a2[2];
      unint64_t v18 = *(void (**)(void, uint64_t, uint64_t))(*a2 + 120);
      uint64_t v40 = *a2 + 120;
      uint64_t v41 = v18;
      unint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      int64_t v37 = (void (**)(char *, char *, uint64_t))(v36 + 32);
      uint64_t v45 = MEMORY[0x1E4FBC860];
      uint64_t v19 = 4;
      unint64_t v33 = a1;
      uint64_t v42 = v17;
      while (1)
      {
        uint64_t v20 = v19 - 4;
        if (v43)
        {
          uint64_t v21 = MEMORY[0x192FE4B60](v19 - 4, a1);
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v20, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v21 = *(void *)(a1 + 8 * v19);
          swift_retain();
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v20, 1))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v41(*(void *)(v21 + 24), v13, v13);
        if (v7)
        {

          unint64_t v7 = 0;
          uint64_t v23 = 1;
        }
        else
        {
          uint64_t v23 = 0;
        }
        (*v39)(v12, v23, 1, v13);
        swift_release();
        if ((*v38)(v12, 1, v13) == 1)
        {
          sub_191B01770((uint64_t)v12, v35);
        }
        else
        {
          uint64_t v24 = *v37;
          uint64_t v25 = v34;
          (*v37)(v34, v12, v13);
          v24(v44, v25, v13);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v26 = v45;
          }
          else {
            uint64_t v26 = v32(0, *(void *)(v45 + 16) + 1, 1);
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v28 >= v27 >> 1) {
            uint64_t v26 = v32(v27 > 1, v28 + 1, 1);
          }
          *(void *)(v26 + 16) = v28 + 1;
          unint64_t v29 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
          uint64_t v45 = v26;
          v24((char *)(v26 + v29 + *(void *)(v36 + 72) * v28), v44, v13);
          a1 = v33;
        }
        ++v19;
        if (v22 == v42)
        {
          swift_bridgeObjectRelease();
          return v45;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_191B01150(unint64_t a1, void *a2)
{
  long long v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E22A8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v34 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v25 = (uint64_t)&v24 - v12;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      unint64_t v33 = a1 & 0xC000000000000001;
      a2 = (void *)a2[2];
      uint64_t v14 = *(void (**)(void, uint64_t, uint64_t))(*a2 + 120);
      uint64_t v29 = *a2 + 120;
      uint64_t v30 = v14;
      unint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      unint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      unint64_t v15 = MEMORY[0x1E4FBC860];
      uint64_t v16 = 4;
      uint64_t v31 = v13;
      unint64_t v32 = a1;
      while (1)
      {
        uint64_t v17 = v16 - 4;
        if (v33)
        {
          a1 = MEMORY[0x192FE4B60](v16 - 4, a1);
          uint64_t v18 = v16 - 3;
          if (__OFADD__(v17, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          a1 = *(void *)(a1 + 8 * v16);
          swift_retain();
          uint64_t v18 = v16 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        v30(*(void *)(a1 + 24), v9, v9);
        if (v3)
        {

          long long v3 = 0;
          uint64_t v19 = 1;
        }
        else
        {
          uint64_t v19 = 0;
        }
        (*v28)(v8, v19, 1, v9);
        swift_release();
        if ((*v27)(v8, 1, v9) == 1)
        {
          sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1E92E22A8);
        }
        else
        {
          uint64_t v20 = v25;
          sub_191B015B0((uint64_t)v8, v25, &qword_1EB44A280);
          sub_191B015B0(v20, v34, &qword_1EB44A280);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v15 = sub_191B410F0(0, *(void *)(v15 + 16) + 1, 1, v15);
          }
          unint64_t v22 = *(void *)(v15 + 16);
          unint64_t v21 = *(void *)(v15 + 24);
          if (v22 >= v21 >> 1) {
            unint64_t v15 = sub_191B410F0(v21 > 1, v22 + 1, 1, v15);
          }
          *(void *)(v15 + 16) = v22 + 1;
          sub_191B015B0(v34, v15+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v22, &qword_1EB44A280);
        }
        a1 = v32;
        ++v16;
        if (v18 == v31)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_191B014E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B01550(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B015B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B01614(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B01678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B016E0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_191B0171C()
{
  unint64_t result = qword_1EB44BB20;
  if (!qword_1EB44BB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB20);
  }
  return result;
}

uint64_t sub_191B01770(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CHSControlType(uint64_t a1)
{
}

void type metadata accessor for CHSControlContentType(uint64_t a1)
{
}

void type metadata accessor for CHSWidgetFamily(uint64_t a1)
{
}

void sub_191B01830(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_191B01878()
{
  return sub_191AFF3BC((unint64_t *)&unk_1EB449AF8, type metadata accessor for CHSWidgetFamily);
}

uint64_t sub_191B018C0()
{
  return sub_191AFF3BC((unint64_t *)&qword_1EB44B920, type metadata accessor for CFString);
}

uint64_t sub_191B01908()
{
  return sub_191AFF3BC((unint64_t *)&unk_1EB44BC68, type metadata accessor for CFString);
}

uint64_t sub_191B01958()
{
  return sub_191AFEDA4() & 1;
}

id sub_191B019A4()
{
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  uint64_t v0 = sub_191CF5338();
  id result = sub_191BDA6B4(v0, v1, 1103, 0, 0xD000000000000036, 0x8000000191D0D710);
  qword_1E92F24C0 = (uint64_t)result;
  return result;
}

id sub_191B01A18()
{
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  uint64_t v0 = sub_191CF5338();
  id result = sub_191BDA6B4(v0, v1, 1100, 0, 0xD000000000000043, 0x8000000191D0D770);
  qword_1EB44C7A0 = (uint64_t)result;
  return result;
}

uint64_t sub_191B01A8C()
{
  uint64_t v1 = sub_191CF5168();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v36 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_191CF51C8();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v45 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v0;
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v44 = *(void *)(v8 + 16);
  if (v44)
  {
    uint64_t v9 = *(int *)(v6 + 72);
    uint64_t v40 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v41 = v9;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v11 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v5;
    while (v11 < *(void *)(v8 + 16))
    {
      uint64_t v12 = *(void *)(v5 + 72);
      unint64_t v46 = v11;
      uint64_t v13 = v45;
      sub_191B172EC(v40 + v12 * v11, v45, type metadata accessor for WidgetDescriptor);
      uint64_t v14 = *(void *)(v13 + v41);
      swift_bridgeObjectRetain();
      sub_191B17354(v13, type metadata accessor for WidgetDescriptor);
      uint64_t v47 = v14;
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = *(void *)(v48 + 16);
        uint64_t v17 = *(void *)(v48 + 24);
        uint64_t v18 = v15 - 1;
        for (uint64_t i = v47 + 56; ; i += 32)
        {
          uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(i - 24);
          unint64_t v21 = *(void (**)(uint64_t, uint64_t, void (*)(), void *))(i - 8);
          swift_retain();
          swift_retain();
          if (v20(v16, v17))
          {
            uint64_t v22 = v48;
            dispatch_group_enter(*(dispatch_group_t *)(v48 + 64));
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499B0);
            uint64_t v23 = swift_allocObject();
            *(_DWORD *)(v23 + 20) = 0;
            *(unsigned char *)(v23 + 16) = 0;
            uint64_t v24 = (void *)swift_allocObject();
            v24[2] = v23;
            v24[3] = v16;
            v24[4] = v17;
            v24[5] = v22;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            v21(v16, v17, sub_191B174FC, v24);
            swift_release();
            uint64_t v25 = self;
            uint64_t v26 = (void *)sub_191CF5318();
            objc_msgSend(v25, sel__sendPendingCallbacksForSessionIdentifier_, v26);
            swift_release();
            swift_release();
            swift_release();

            if (!v18) {
              break;
            }
          }
          else
          {
            swift_release();
            swift_release();
            if (!v18) {
              break;
            }
          }
          --v18;
        }
      }
      unint64_t v11 = v46 + 1;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v43;
      uint64_t v8 = v42;
      if (v11 == v44)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
    unint64_t v27 = (void *)sub_191CF5A18();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_191B174AC;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191C2AD74;
    aBlock[3] = &block_descriptor_217;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v30 = v34;
    sub_191CF5188();
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    uint64_t v31 = v36;
    uint64_t v32 = v39;
    sub_191CF5C98();
    sub_191CF59D8();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v37);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_191B02044(os_unfair_lock_s *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = (char *)&a1[4];
  uint64_t v8 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_191B02428(v7, v23);
  os_unfair_lock_unlock(v8);
  if (v23[0])
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191CF3858();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB44CCE0);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_191CF3838();
    os_log_type_t v11 = sub_191CF5938();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v23[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a2, a3, v23);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v10, v11, "BUG IN CLIENT OF WIDGETKIT. Completion handler called multiple times by %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v13, -1, -1);
      MEMORY[0x192FE5F00](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_191CF3858();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB44CCE0);
    swift_retain_n();
    uint64_t v15 = sub_191CF3838();
    os_log_type_t v16 = sub_191CF5918();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v23[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      sub_191C5C36C(0x6E657645646E6573, 0xEC00000029287374, v23);
      sub_191CF5C08();
      *(_WORD *)(v17 + 12) = 2082;
      type metadata accessor for WidgetURLHandler();
      swift_retain();
      uint64_t v19 = sub_191CF5368();
      sub_191C5C36C(v19, v20, v23);
      sub_191CF5C08();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v15, v16, "%{public}s - %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v18, -1, -1);
      MEMORY[0x192FE5F00](v17, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    unint64_t v21 = self;
    uint64_t v22 = (void *)sub_191CF5318();
    objc_msgSend(v21, sel__releaseProcessAssertionForSessionIdentifier_, v22);

    dispatch_group_leave(*(dispatch_group_t *)(a4 + 64));
  }
}

char *sub_191B02428@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v2 = *result;
  *uint64_t result = 1;
  *a2 = v2;
  return result;
}

uint64_t sub_191B0243C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result + 40);
    sub_191B17508((uint64_t)v1);
    uint64_t result = swift_release();
    if (v1)
    {
      v1(result);
      return sub_191B16F2C((uint64_t)v1);
    }
  }
  return result;
}

uint64_t sub_191B024C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(*(void *)(v0 + 40));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetURLHandler()
{
  return self;
}

uint64_t sub_191B0253C()
{
  return sub_191CF64C8();
}

void sub_191B02584()
{
  id v1 = *(id *)(*(void *)v0 + 56);
  sub_191CF5B68();
}

uint64_t sub_191B025E0()
{
  sub_191CF6468();
  id v1 = *(id *)(*(void *)v0 + 56);
  sub_191CF5B68();

  return sub_191CF64C8();
}

uint64_t sub_191B02630()
{
  return sub_191CF5B58() & 1;
}

uint64_t sub_191B02688()
{
  uint64_t v0 = sub_191CF5068();
  __swift_allocate_value_buffer(v0, qword_1EB44C788);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB44C788);
  return sub_191CF5058();
}

uint64_t sub_191B027C8(uint64_t result)
{
  if ((void)xmmword_1EB44CC98)
  {
    id v1 = (void (*)(uint64_t))result;
    unint64_t v2 = (*(uint64_t (**)(void))(qword_1EB44CCA8 + 16))(*(void *)xmmword_1EB44CC98);
    uint64_t v3 = sub_191BBA5C8(v2);
    swift_bridgeObjectRelease();
    v1(v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191B028B8(uint64_t a1, uint64_t a2)
{
  sub_191B016E0(0, &qword_1EB44C5B0);
  id v3 = (id)sub_191CF5528();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

void sub_191B02934(void (*a1)(void))
{
  if ((void)xmmword_1EB44CC98)
  {
    unint64_t v2 = (void *)(*(uint64_t (**)(void))(qword_1EB44CCA8 + 32))(*(void *)xmmword_1EB44CC98);
    a1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191B02A0C(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_191B02A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v29 = a4;
  uint64_t v30 = a2;
  uint64_t v8 = sub_191CF5168();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_191CF51C8();
  uint64_t v27 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v28 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_191CF3858();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB44CCE0);
  uint64_t v13 = sub_191CF3838();
  os_log_type_t v14 = sub_191CF5948();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v26 = v10;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v33 = sub_191C5C36C(0xD000000000000027, 0x8000000191D0D7C0, aBlock);
    uint64_t v10 = v26;
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v13, v14, "%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v16, -1, -1);
    MEMORY[0x192FE5F00](v15, -1, -1);
  }

  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  uint64_t v19 = (void *)sub_191CF5A18();
  unint64_t v20 = (void *)swift_allocObject();
  v20[2] = v17;
  v20[3] = a3;
  uint64_t v21 = v30;
  v20[4] = v29;
  v20[5] = a1;
  v20[6] = v21;
  v20[7] = v5;
  aBlock[4] = (uint64_t)sub_191B16E6C;
  aBlock[5] = (uint64_t)v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_191C2AD74;
  aBlock[3] = (uint64_t)&block_descriptor_136;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v23 = v5;
  swift_release();
  uint64_t v24 = v28;
  sub_191CF5188();
  aBlock[0] = v18;
  sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v24, v10, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v31);
  return swift_release();
}

uint64_t sub_191B02F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a4;
  uint64_t v11 = sub_191CF5168();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_191CF51C8();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v17 = *(void *)xmmword_1EB44CC98;
    aBlock[0] = xmmword_1EB44CC98;
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(qword_1EB44CCA8 + 24))(v17);
    swift_beginAccess();
    *(void *)(a1 + 16) = v18;
    swift_bridgeObjectRelease();
    type metadata accessor for UnfairLock();
    uint64_t v19 = swift_allocObject();
    unint64_t v20 = (_DWORD *)swift_slowAlloc();
    *unint64_t v20 = 0;
    *(void *)(v19 + 16) = v20;
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 0;
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v19;
    v22[3] = v21;
    v36[0] = v19;
    v36[1] = v21;
    v22[4] = a2;
    v22[5] = a3;
    swift_beginAccess();
    uint64_t v23 = *(void *)(a1 + 16);
    type metadata accessor for WidgetURLHandler();
    uint64_t v24 = (void *)swift_allocObject();
    v24[5] = 0;
    v24[6] = 0;
    id v25 = objc_allocWithZone(MEMORY[0x1E4F29128]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24[7] = objc_msgSend(v25, sel_init);
    v24[8] = dispatch_group_create();
    v24[2] = v37;
    v24[3] = a5;
    v24[4] = v23;
    swift_beginAccess();
    swift_retain();
    sub_191B43698(&v44, (uint64_t)v24);
    swift_endAccess();
    swift_release();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = sub_191B16E90;
    v28[5] = v22;
    uint64_t v29 = v24[5];
    v24[5] = sub_191B16F20;
    v24[6] = v28;
    swift_retain();
    swift_retain();
    sub_191B16F2C(v29);
    uint64_t v30 = *(void **)(a6 + OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject__queue);
    aBlock[4] = sub_191B16F3C;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191C2AD74;
    aBlock[3] = &block_descriptor_152;
    uint64_t v31 = _Block_copy(aBlock);
    swift_retain();
    id v32 = v30;
    sub_191CF5188();
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    uint64_t v33 = v16;
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    uint64_t v34 = v38;
    uint64_t v35 = v42;
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v33, v34, v31);
    _Block_release(v31);
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v40);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B0349C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (unsigned char *)(a2 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    *uint64_t v6 = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
    return a3();
  }
  return result;
}

uint64_t sub_191B03580(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x192FE5FF0](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_beginAccess();
      sub_191C77FC4();
      swift_endAccess();
      swift_release();

      swift_release();
    }
    else
    {
    }
  }
  return a3();
}

uint64_t sub_191B03724(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v13 = (unsigned char *)(a3 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a2 + 16));
  swift_beginAccess();
  if (*(unsigned char *)(a3 + 16))
  {
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    *uint64_t v13 = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
    if (a1)
    {
      uint64_t v14 = qword_1EB44AD60;
      uint64_t v36 = a1;
      id v15 = a1;
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_191CF3858();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB44CB58);
      swift_bridgeObjectRetain_n();
      id v17 = v15;
      uint64_t v18 = sub_191CF3838();
      os_log_type_t v19 = sub_191CF5948();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        uint64_t v35 = a7;
        uint64_t v22 = swift_slowAlloc();
        uint64_t v37 = v22;
        *(_DWORD *)uint64_t v20 = 136446466;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a4, a5, &v37);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 2114;
        id v23 = v17;
        sub_191CF5C08();
        a1 = v36;
        void *v21 = v36;

        _os_log_impl(&dword_191AF4000, v18, v19, "Batch ended (%{public}s) - failure: %{public}@", (uint8_t *)v20, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v21, -1, -1);
        swift_arrayDestroy();
        uint64_t v24 = v22;
        a7 = v35;
        MEMORY[0x192FE5F00](v24, -1, -1);
        MEMORY[0x192FE5F00](v20, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        a1 = v36;
      }
    }
    else
    {
      if (qword_1EB44AD60 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_191CF3858();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EB44CB58);
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_191CF3838();
      os_log_type_t v27 = sub_191CF5948();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v37 = v29;
        *(_DWORD *)uint64_t v28 = 136446210;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a4, a5, &v37);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_191AF4000, v26, v27, "Batch ended (%{public}s) - success", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v29, -1, -1);
        MEMORY[0x192FE5F00](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    sub_191CF5A58();
    if (qword_1EB44B6D0 != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v30;
    *(_OWORD *)(v30 + 16) = xmmword_191CF8410;
    if (a1) {
      uint64_t v32 = 1702195828;
    }
    else {
      uint64_t v32 = 0x65736C6166;
    }
    if (a1) {
      unint64_t v33 = 0xE400000000000000;
    }
    else {
      unint64_t v33 = 0xE500000000000000;
    }
    *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v30 + 64) = sub_191B1647C();
    *(void *)(v31 + 32) = v32;
    *(void *)(v31 + 40) = v33;
    sub_191CF3758();
    swift_bridgeObjectRelease();
    return a7(a1);
  }
  return result;
}

void sub_191B03CB8(unint64_t a1, void (*a2)(void *))
{
  uint64_t v13 = 0;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    a2(0);
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_191CF6018();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v5 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v6 = MEMORY[0x192FE4B60](v5 - 4, a1);
    }
    else {
      uint64_t v6 = *(id *)(a1 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v9 = (void *)MEMORY[0x192FE55C0]();
    sub_191B03E40(v7, &v13);
    uint64_t v10 = v13;
    if (v13) {
      break;
    }

    ++v5;
    if (v8 == v4) {
      goto LABEL_10;
    }
  }
  uint64_t v11 = v13;
  swift_bridgeObjectRelease();
  id v12 = v11;
  a2(v10);
}

void sub_191B03E40(NSObject *a1, void **a2)
{
  void (*v49)(long long *__return_ptr, NSObject *, uint64_t, uint64_t);
  long long v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  os_log_t v59;
  uint64_t v60;
  size_t v61;
  NSObject *v62;
  void **v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  unint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  os_log_t v95;
  uint64_t v96;
  void **v97;
  id v98;
  NSObject *v99;
  unint64_t v100;
  uint64_t v101;
  void **v102;
  long long v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  long long v107;
  uint64_t v108;
  uint64_t v109;
  long long v110;
  uint64_t v111;
  long long v112;
  uint64_t v113;
  uint64_t v114;
  _UNKNOWN **v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  char v123;
  char v124;

  uint64_t v5 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v5);
  uint64_t v104 = ((char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(uint64_t *)((char *)&a1[1].isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind);
  uint64_t v105 = *(uint64_t *)((char *)&a1->isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind);
  uint64_t v11 = *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v13 = v11;
  uint64_t v14 = sub_191AFA6D4(KeyPath);

  swift_release();
  if (!v14) {
    goto LABEL_18;
  }
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v33 = sub_191CF5338();
    uint64_t v35 = 0x8000000191D0D8A0;
    uint64_t v36 = 0xD000000000000010;
LABEL_43:
    BOOL v89 = sub_191BDA6B4(v33, v34, 1102, 0, v36, v35);
    uint64_t v90 = *a2;
    *a2 = v89;

    return;
  }
  *((void *)&v103 + 1) = *(unsigned __int8 *)(v14 + 32);
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_getKeyPath();
  id v16 = v13;
  unint64_t v17 = sub_191AFA438(v15);

  swift_release();
  if (!v17) {
    goto LABEL_42;
  }
  *(void *)&v103 = v16;
  if (!(v17 >> 62))
  {
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (!v88)
  {
LABEL_41:
    swift_bridgeObjectRelease();
LABEL_42:
    swift_bridgeObjectRelease();
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v33 = sub_191CF5338();
    uint64_t v36 = 0xD000000000000011;
    uint64_t v35 = 0x8000000191D0D8C0;
    goto LABEL_43;
  }
LABEL_6:
  uint64_t v102 = v2;
  uint64_t v97 = a2;
  if ((v17 & 0xC000000000000001) != 0)
  {
    uint64_t v18 = MEMORY[0x192FE4B60](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_46:
      swift_once();
LABEL_29:
      v66 = __swift_project_value_buffer(v92, (uint64_t)qword_1EB44B1D8);
      uint64_t v67 = v104;
      sub_191B172EC(v66, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
      uint64_t v68 = type metadata accessor for WidgetViewCollection();
      swift_allocObject();
      uint64_t v69 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(a1, (uint64_t *)&v112, (void *)v17, (uint64_t)v67, 1);
      uint64_t v70 = type metadata accessor for WidgetArchiver();
      unint64_t v114 = v68;
      v115 = &protocol witness table for WidgetViewCollection;
      *(void *)&v112 = v69;
      uint64_t v71 = (uint64_t *)swift_retain();
      char v72 = sub_191B12114(v71);
      sub_191C12358(&v112, (uint64_t)v72, v70, v98);
      if (a2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
        v73 = sub_191CF2FD8();

        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v74 = *v97;
        *uint64_t v97 = (void *)v73;
      }
      else
      {
        v99 = a1;
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
        v81 = v100;
        swift_bridgeObjectRetain();
        uint64_t v82 = sub_191CF3838();
        uint64_t v83 = sub_191CF5948();
        uint64_t v104 = v82;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          uint64_t v102 = 0;
          v86 = v85;
          *(void *)&v112 = v85;
          *(_DWORD *)uint64_t v84 = 136446210;
          uint64_t v98 = v84 + 4;
          swift_bridgeObjectRetain();
          v109 = sub_191C5C36C(v96, v81, (uint64_t *)&v112);
          sub_191CF5C08();
          swift_bridgeObjectRelease_n();
          uint64_t v87 = v104;
          _os_log_impl(&dword_191AF4000, v104, v83, "Request ended for %{public}s - success.", v84, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x192FE5F00](v86, -1, -1);
          MEMORY[0x192FE5F00](v84, -1, -1);
          swift_release();

          swift_release();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v119);
      return;
    }
    uint64_t v18 = *(id *)(v17 + 32);
  }
  v99 = v18;
  swift_bridgeObjectRelease();
  os_log_type_t v19 = *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
  *(void *)&v112 = v105;
  *((void *)&v112 + 1) = v10;
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  if (DWORD2(v103) >= 0xD || ((0x13BFu >> SBYTE8(v103)) & 1) == 0)
  {
LABEL_49:
    sub_191CF6338();
    __break(1u);
    return;
  }
  uint64_t v101 = SBYTE8(v103);
  id v20 = (id)NSStringFromWidgetFamily();
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  unint64_t v21 = *((void *)&v112 + 1);
  BOOL v96 = v112;
  if (qword_1EB44AD60 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_191CF3858();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB44CB58);
  swift_bridgeObjectRetain_n();
  id v24 = v19;
  uint64_t v25 = sub_191CF3838();
  int v26 = sub_191CF5948();
  BOOL v27 = os_log_type_enabled(v25, (os_log_type_t)v26);
  uint64_t v100 = v21;
  uint64_t v94 = v23;
  uint64_t v98 = v24;
  if (v27)
  {
    uint64_t v122 = v26;
    uint64_t v95 = v25;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v93 = (id)swift_slowAlloc();
    *(void *)&v112 = v93;
    *(_DWORD *)uint64_t v28 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_191C5C36C(v96, v21, (uint64_t *)&v112);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2082;
    sub_191BBE658((uint64_t)v9);
    uint64_t v29 = sub_191CF3078();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v29) == 1)
    {
      sub_191B01770((uint64_t)v9, (uint64_t *)&unk_1EB44BBA8);
      unint64_t v31 = 0xE700000000000000;
      uint64_t v32 = 0x6E776F6E6B6E75;
    }
    else
    {
      uint64_t v32 = sub_191CF3058();
      unint64_t v31 = v38;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v29);
    }
    unsigned int v37 = v101;
    uint64_t v119 = sub_191C5C36C(v32, v31, (uint64_t *)&v112);
    sub_191CF5C08();
    id v39 = v98;

    swift_bridgeObjectRelease();
    os_log_t v40 = v95;
    _os_log_impl(&dword_191AF4000, v95, (os_log_type_t)v122, "Request began for %{public}s - to archive: %{public}s", (uint8_t *)v28, 0x16u);
    id v41 = v93;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v41, -1, -1);
    MEMORY[0x192FE5F00](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    unsigned int v37 = v101;
  }
  id v42 = *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
  if (v37 >= 0xD || ((0x13BFu >> v37) & 1) == 0)
  {
LABEL_48:
    char v91 = v42;
    goto LABEL_49;
  }
  uint64_t v43 = qword_191CF8640[SBYTE8(v103)];
  id v44 = objc_allocWithZone(MEMORY[0x1E4F58DD8]);
  id v42 = v42;
  uint64_t v45 = (void *)sub_191CF5318();
  swift_bridgeObjectRelease();
  unint64_t v46 = objc_msgSend(v44, sel_initWithExtensionIdentity_kind_family_intent_activityIdentifier_, v42, v45, v43, 0, 0);

  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v47 = qword_1EB44CCA8;
  uint64_t v48 = *(void *)xmmword_1EB44CC98;
  v109 = xmmword_1EB44CC98;
  uint64_t v49 = *(void (**)(long long *__return_ptr, NSObject *, uint64_t, uint64_t))(qword_1EB44CCA8 + 40);
  swift_retain();
  v49(&v112, v46, v48, v47);
  swift_release();
  if (v114)
  {
    v92 = v5;
    sub_191B004A8(&v112, (uint64_t)&v119);
    *(void *)&v112 = v103;
    uint64_t v93 = (id)v103;
    TimelineProviderContext.EnvironmentVariants.init(_:)((void **)&v112, &v109);
    uint64_t v106 = v109;
    unint64_t v107 = v110;
    uint64_t v108 = v111;
    InternalWidgetFamily.init(_:)((uint64_t)[v46 family], &v124);
    uint64_t v123 = *((unsigned char *)&a1->isa + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion);
    TimelineProviderContext.init(environmentVariants:family:isPreview:archiveVersion:)((uint64_t)&v106, &v124, 0, &v123, (uint64_t)&v112);
    uint64_t v95 = v46;
    unint64_t v50 = v112;
    uint64_t v52 = v113;
    uint64_t v51 = v114;
    uint64_t v122 = (unsigned __int16)v115;
    uint64_t v53 = BYTE2(v115);
    uint64_t v54 = v116;
    uint64_t v55 = v117;
    uint64_t v56 = v118;
    uint64_t v57 = v120;
    uint64_t v58 = v121;
    __swift_project_boxed_opaque_existential_1(&v119, v120);
    v103 = v50;
    v112 = v50;
    uint64_t v101 = v52;
    uint64_t v113 = v52;
    unint64_t v114 = v51;
    uint64_t v105 = v51;
    LOWORD(v115) = v122;
    char v59 = v95;
    BYTE2(v115) = v53;
    uint64_t v116 = v54;
    unint64_t v117 = v55;
    uint64_t v118 = v56;
    uint64_t v60 = (*(uint64_t (**)(os_log_t, long long *, uint64_t, uint64_t))(v58 + 24))(v95, &v112, v57, v58);
    if (!v60)
    {
      swift_bridgeObjectRelease();
      sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
      uint64_t v77 = sub_191CF5338();
      unint64_t v79 = sub_191BDA6B4(v77, v78, 1101, 0, 0xD00000000000001BLL, 0x8000000191D0D8E0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v80 = *v97;
      *uint64_t v97 = v79;

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v119);
      return;
    }
    uint64_t v61 = sub_191AFDC70(v60);
    int64_t v62 = v59;
    uint64_t v9 = v99;
    unint64_t v63 = v102;
    unint64_t v17 = sub_191B1049C(v61, v62, v9);
    a2 = v63;
    swift_release();

    *(void *)&v112 = v93;
    uint64_t v64 = qword_1EB44B1C0;
    uint64_t v65 = v93;
    a1 = v62;
    if (v64 == -1) {
      goto LABEL_29;
    }
    goto LABEL_46;
  }
  swift_bridgeObjectRelease();
  sub_191B01770((uint64_t)&v112, &qword_1E92E3078);
  if (qword_1EB4499B8 != -1) {
    swift_once();
  }
  uint64_t v75 = (id)qword_1EB44C7A0;

  uint64_t v76 = *v97;
  *uint64_t v97 = v75;
}

uint64_t sub_191B04CD8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v48 = a2;
  unint64_t v50 = (char *)a1;
  uint64_t v58 = a4;
  uint64_t v57 = sub_191CF3178();
  uint64_t v61 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ViewableTimelineEntry() - 8;
  uint64_t v55 = (int *)v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_191CF3C68();
  uint64_t v9 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449BC8);
  uint64_t v52 = *(void *)(v54 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v54);
  uint64_t v53 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)&v47 - v15;
  MEMORY[0x1F4188790](v14);
  char v59 = (char *)&v47 - v16;
  uint64_t v17 = *(void *)(a1 + *(int *)(v7 + 28));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  swift_retain();
  id v20 = v48;
  id v21 = a3;
  id v22 = objc_msgSend(v20, sel_family);
  uint64_t v62 = v17;
  id v63 = v20;
  id v64 = v21;
  id v65 = v22;
  uint64_t v66 = KeyPath;
  char v67 = 0;
  uint64_t v68 = v19;
  uint64_t v69 = 0;
  char v70 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AD70);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_191CF8420;
  sub_191CF3C28();
  sub_191CF3C38();
  uint64_t v71 = v23;
  sub_191B17414(&qword_1EB44ACD8, 255, MEMORY[0x1E4F3CD58]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ACE0);
  sub_191B1745C(&qword_1EB44ACE8, &qword_1EB44ACE0);
  uint64_t v24 = v49;
  sub_191CF5C98();
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A318);
  id v48 = (id)sub_191B16918();
  uint64_t v25 = v59;
  sub_191CF4D48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  int v26 = v63;
  uint64_t v27 = v66;
  LOBYTE(v11) = v67;
  uint64_t v28 = v68;
  uint64_t v29 = v69;
  LOBYTE(v19) = v70;

  swift_release();
  sub_191B172D4(v27, (char)v11);
  sub_191B172E0(v28, v29, v19);
  uint64_t v30 = v56;
  sub_191B172EC((uint64_t)v50, v56, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  unint64_t v31 = v51;
  uint64_t v32 = v52;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v34 = v25;
  uint64_t v35 = v54;
  v33(v51, v34, v54);
  uint64_t v36 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v30, v57);
  v33(v53, v31, v35);
  uint64_t v62 = v47;
  id v63 = v48;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_191CF5038();
  unint64_t v38 = v55;
  id v39 = (char **)(v30 + v55[8]);
  uint64_t v53 = *v39;
  unint64_t v50 = v39[1];
  LODWORD(v49) = *((unsigned __int8 *)v39 + 16);
  os_log_t v40 = *(void (**)(char *, uint64_t))(v32 + 8);
  v40(v31, v35);
  sub_191B17354(v30, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
  uint64_t v41 = v58;
  uint64_t v42 = v58 + v38[9];
  uint64_t v43 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v41, v60, v36);
  *(void *)(v41 + v38[7]) = v37;
  uint64_t v44 = v41 + v38[8];
  uint64_t v45 = (uint64_t)v50;
  *(void *)uint64_t v44 = v53;
  *(void *)(v44 + 8) = v45;
  *(unsigned char *)(v44 + 16) = v49;
  *(_OWORD *)(v41 + v38[10]) = xmmword_191CF8430;
  return ((uint64_t (*)(char *, uint64_t))v40)(v59, v35);
}

uint64_t sub_191B054AC(unint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  int v58 = a2;
  uint64_t v9 = sub_191CF32C8();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_191CF31D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_191CF31C8();
  uint64_t v17 = sub_191CF3188();
  unint64_t v19 = v18;
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  sub_191B116C8(6, v17, v19);
  swift_bridgeObjectRelease();
  sub_191CF5BE8();
  swift_bridgeObjectRelease();
  uint64_t v62 = 2976116;
  unint64_t v63 = 0xE300000000000000;
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t v21 = v62;
  unint64_t v20 = v63;
  if (v16 < 1) {
    goto LABEL_8;
  }
  if (qword_1EB449E40 != -1) {
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v22 = sub_191CF3858();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB44C7E8);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_191CF3838();
    os_log_type_t v24 = sub_191CF5948();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v55 = v6;
      uint64_t v27 = v26;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v62 = v54;
      *(_DWORD *)uint64_t v27 = 136446466;
      os_log_t v53 = v23;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_191C5C36C(v21, v20, &v62);
      uint64_t v52 = &v62;
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v51 = v27 + 14;
      uint64_t v28 = v11;
      sub_191CF3268();
      sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
      int v50 = v25;
      uint64_t v29 = v21;
      uint64_t v30 = v57;
      uint64_t v31 = sub_191CF62C8();
      unint64_t v32 = a3;
      uint64_t v33 = v16;
      unint64_t v35 = v34;
      uint64_t v36 = v30;
      uint64_t v21 = v29;
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v28, v36);
      uint64_t v61 = sub_191C5C36C(v31, v35, &v62);
      sub_191CF5C08();
      uint64_t v16 = v33;
      a3 = v32;
      swift_bridgeObjectRelease();
      os_log_t v37 = v53;
      _os_log_impl(&dword_191AF4000, v53, (os_log_type_t)v50, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v27, 0x16u);
      uint64_t v11 = (unsigned char *)v54;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v11, -1, -1);
      uint64_t v38 = v27;
      uint64_t v6 = v55;
      MEMORY[0x192FE5F00](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    uint64_t v39 = swift_allocObject();
    *(unsigned char *)(v39 + 16) = v16 > 0;
    *(void *)(v39 + 24) = v21;
    *(void *)(v39 + 32) = v20;
    uint64_t v41 = v59;
    uint64_t v40 = v60;
    *(void *)(v39 + 40) = v59;
    *(void *)(v39 + 48) = v40;
    if ((a1 & 0xC000000000000001) != 0) {
      break;
    }
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > a3)
    {
      uint64_t v42 = *(void **)(a1 + 8 * a3 + 32);
      swift_retain();
      uint64_t v43 = v42;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_retain();
  uint64_t v43 = (char *)MEMORY[0x192FE4B60](a3, a1);
LABEL_12:
  uint64_t v44 = v43;
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v45;
  *(void *)(v46 + 24) = v41;
  *(void *)(v46 + 32) = v60;
  *(void *)(v46 + 40) = a3;
  *(void *)(v46 + 48) = a1;
  int v47 = v58 & 1;
  *(unsigned char *)(v46 + 56) = v58 & 1;
  *(void *)(v46 + 64) = sub_191B16CFC;
  *(void *)(v46 + 72) = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191B05CA8(v44, v47, (uint64_t)sub_191B16DAC, v46);
  swift_release();

  swift_release();
  return swift_release();
}

void sub_191B05A74(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, char a7, void (*a8)(uint64_t))
{
  uint64_t v15 = a2 + 16;
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x192FE5FF0](v15);
  if (!v16)
  {
    if (qword_1EB449E40 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB44C7E8);
    unint64_t v20 = sub_191CF3838();
    os_log_type_t v21 = sub_191CF5948();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_191AF4000, v20, v21, "WidgetExtensionXPCServer disappeared", v22, 2u);
      MEMORY[0x192FE5F00](v22, -1, -1);
    }

    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v23 = sub_191CF5338();
    id v17 = sub_191BDA6B4(v23, v24, 1050, 0, 0xD000000000000024, 0x8000000191D0D5E0);
    a3();
    goto LABEL_15;
  }
  id v17 = (id)v16;
  if (a1)
  {
    uint64_t v18 = a1;
    goto LABEL_14;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_191CF6018();
    swift_bridgeObjectRelease();
    uint64_t v26 = v27 - 1;
    if (!__OFSUB__(v27, 1)) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v26 = v25 - 1;
    if (!__OFSUB__(v25, 1))
    {
LABEL_11:
      if (v26 > a5)
      {
        sub_191B054AC(a6, a7 & 1, a5 + 1, a3, a4);
LABEL_15:

        return;
      }
      uint64_t v18 = 0;
LABEL_14:
      a8(v18);
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_191B05CA8(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v104 = a3;
  uint64_t v105 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v113 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_191CF37A8();
  uint64_t v103 = *(void *)(v114 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v114);
  v110 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v9;
  MEMORY[0x1F4188790](v8);
  v112 = (char *)&v95 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191CF3858();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v109 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)&v95 - v19;
  int v98 = a2;
  uint64_t v111 = v18;
  uint64_t v102 = v15;
  if (a2)
  {
    if (qword_1EB449B38 != -1) {
      swift_once();
    }
    os_log_type_t v21 = qword_1EB44C7B0;
  }
  else
  {
    if (qword_1EB449E40 != -1) {
      swift_once();
    }
    os_log_type_t v21 = qword_1EB44C7E8;
  }
  uint64_t v22 = __swift_project_value_buffer(v14, (uint64_t)v21);
  uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v97(v20, v22, v14);
  uint64_t v23 = *(void **)&a1[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget];
  id v24 = objc_msgSend(v23, sel_kind);
  uint64_t v25 = sub_191CF5338();
  unint64_t v27 = v26;

  uint64_t v116 = v25;
  unint64_t v117 = v27;
  sub_191CF53B8();
  objc_msgSend(v23, sel_family);
  id v28 = (id)NSStringFromWidgetFamily();
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v29 = objc_msgSend(v23, sel_intentReference);
  if (v29)
  {
    uint64_t v30 = v29;
    id v31 = objc_msgSend(v29, sel_stableHash);

    uint64_t v115 = (uint64_t)v31;
    sub_191B16840();
    sub_191CF5C38();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  unint64_t v32 = v117;
  uint64_t v108 = v116;
  id v33 = objc_msgSend(v23, sel_intentReference);
  uint64_t v95 = v13;
  if (v33)
  {
    unint64_t v34 = v33;
    id v35 = objc_msgSend(v33, sel_intent);
  }
  else
  {
    id v35 = 0;
  }
  id v36 = v35;
  os_log_t v37 = sub_191CF3838();
  os_log_type_t v38 = sub_191CF5948();
  BOOL v39 = os_log_type_enabled(v37, v38);
  unint64_t v107 = v32;
  if (v39)
  {
    uint64_t v106 = a1;
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v116 = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    if (v35)
    {
      uint64_t v42 = v36;
      id v43 = objc_msgSend(v36, sel_description);
      uint64_t v44 = sub_191CF5338();
      unint64_t v46 = v45;
    }
    else
    {
      unint64_t v46 = 0xE300000000000000;
      uint64_t v44 = 7104878;
      uint64_t v42 = v36;
    }
    uint64_t v115 = sub_191C5C36C(v44, v46, &v116);
    sub_191CF5C08();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v37, v38, "intent = %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v41, -1, -1);
    MEMORY[0x192FE5F00](v40, -1, -1);

    a1 = v106;
    unint64_t v32 = v107;
    id v36 = v42;
  }
  else
  {
  }
  swift_bridgeObjectRetain_n();
  int v47 = a1;
  id v48 = sub_191CF3838();
  os_log_type_t v49 = sub_191CF5948();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v106 = v47;
  id v96 = v36;
  if (v50)
  {
    uint64_t v51 = v20;
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v116 = v53;
    *(_DWORD *)uint64_t v52 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v115 = sub_191C5C36C(v108, v32, &v116);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v52 + 12) = 2082;
    uint64_t v54 = (uint64_t)v95;
    sub_191BBE658((uint64_t)v95);
    uint64_t v55 = sub_191CF3078();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
    {
      sub_191B01770(v54, (uint64_t *)&unk_1EB44BBA8);
      unint64_t v57 = 0xE700000000000000;
      uint64_t v58 = 0x6E776F6E6B6E75;
    }
    else
    {
      uint64_t v59 = sub_191CF3058();
      uint64_t v60 = v54;
      uint64_t v58 = v59;
      unint64_t v57 = v61;
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v60, v55);
    }
    uint64_t v115 = sub_191C5C36C(v58, v57, &v116);
    sub_191CF5C08();
    uint64_t v62 = v106;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v48, v49, "Request began for %{public}s - to archive: %{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v53, -1, -1);
    MEMORY[0x192FE5F00](v52, -1, -1);

    unint64_t v20 = v51;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1EB44B6D0 != -1) {
    swift_once();
  }
  id v63 = (id)qword_1EB44CBF0;
  id v64 = v112;
  sub_191CF3788();
  sub_191CF5A68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_191CF8420;
  uint64_t v116 = 91;
  unint64_t v117 = 0xE100000000000000;
  id v66 = objc_msgSend(v23, sel_extensionBundleIdentifier);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  id v67 = objc_msgSend(v23, sel_kind);
  sub_191CF5338();

  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v68 = v116;
  unint64_t v69 = v117;
  uint64_t v70 = MEMORY[0x1E4FBB1A0];
  *(void *)(v65 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v71 = sub_191B1647C();
  *(void *)(v65 + 32) = v68;
  *(void *)(v65 + 40) = v69;
  BOOL v72 = (v98 & 1) == 0;
  v98 &= 1u;
  uint64_t v73 = 1702195828;
  if (v72) {
    uint64_t v73 = 0x65736C6166;
  }
  unint64_t v74 = 0xE500000000000000;
  *(void *)(v65 + 96) = v70;
  *(void *)(v65 + 104) = v71;
  if (!v72) {
    unint64_t v74 = 0xE400000000000000;
  }
  *(void *)(v65 + 64) = v71;
  *(void *)(v65 + 72) = v73;
  *(void *)(v65 + 80) = v74;
  uint64_t v75 = v64;
  sub_191CF3758();
  swift_bridgeObjectRelease();
  uint64_t v76 = sub_191CF56B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v113, 1, 1, v76);
  uint64_t v77 = v102;
  v97(v109, (uint64_t)v20, v111);
  uint64_t v97 = (void (*)(char *, uint64_t, uint64_t))v20;
  uint64_t v78 = v103;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v110, v75, v114);
  sub_191CF5698();
  uint64_t v106 = v106;
  id v79 = v101;
  uint64_t v80 = v105;
  swift_retain();
  uint64_t v81 = sub_191CF5688();
  unint64_t v82 = (*(unsigned __int8 *)(v77 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  unint64_t v83 = (v99 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v84 = (*(unsigned __int8 *)(v78 + 80) + v83 + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  unint64_t v85 = (v100 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v86 = swift_allocObject();
  uint64_t v87 = MEMORY[0x1E4FBCFD8];
  *(void *)(v86 + 16) = v81;
  *(void *)(v86 + 24) = v87;
  uint64_t v88 = v106;
  *(void *)(v86 + 32) = v79;
  *(void *)(v86 + 40) = v88;
  *(unsigned char *)(v86 + 48) = v98;
  uint64_t v89 = v111;
  (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v86 + v82, v109, v111);
  uint64_t v90 = (void *)(v86 + v83);
  unint64_t v91 = v107;
  *uint64_t v90 = v108;
  v90[1] = v91;
  uint64_t v92 = v114;
  (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v86 + v84, v110, v114);
  uint64_t v93 = (void *)(v86 + v85);
  *uint64_t v93 = v104;
  v93[1] = v80;
  sub_191BC2CF8(v113, (uint64_t)&unk_1E92E3058, v86);

  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v112, v92);
  return (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t), uint64_t))(v77 + 8))(v97, v89);
}

uint64_t sub_191B0689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v15;
  *(void *)(v8 + 80) = v16;
  *(_OWORD *)(v8 + 56) = v14;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(unsigned char *)(v8 + 120) = a6;
  *(void *)(v8 + 88) = sub_191CF5698();
  *(void *)(v8 + 96) = sub_191CF5688();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 104) = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_191B06974;
  return sub_191B12474(a5, a6);
}

uint64_t sub_191B06974()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    uint64_t v4 = sub_191B06D94;
  }
  else {
    uint64_t v4 = sub_191B06AD0;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191B06AD0()
{
  uint64_t v17 = v0;
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 48);
    unint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_191C5C36C(v4, v3, &v16);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191AF4000, v1, v2, "Request ended for %{public}s - success", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v6, -1, -1);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_191CF5A58();
  if (qword_1EB44B6D0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void (**)(void))(v0 + 72);
  int v8 = *(unsigned __int8 *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_191CF8420;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_191B1647C();
  uint64_t v12 = 0x65736C6166;
  unint64_t v13 = 0xE500000000000000;
  *(void *)(v9 + 32) = 0x65736C6166;
  *(void *)(v9 + 40) = 0xE500000000000000;
  if (v8) {
    uint64_t v12 = 1702195828;
  }
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  if (v8) {
    unint64_t v13 = 0xE400000000000000;
  }
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v13;
  sub_191CF3758();
  swift_bridgeObjectRelease();
  v7(0);
  long long v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_191B06D94()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();
  unint64_t v27 = (void *)sub_191CF2FD8();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5948();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 48);
    unint64_t v7 = *(void *)(v0 + 56);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_191C5C36C(v8, v7, &v28);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v12;
    sub_191CF5C08();
    void *v10 = v12;

    _os_log_impl(&dword_191AF4000, v4, v5, "Request ended for %{public}s - error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v26, -1, -1);
    MEMORY[0x192FE5F00](v9, -1, -1);
  }
  else
  {
    unint64_t v13 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease_n();
  }
  sub_191CF5A58();
  if (qword_1EB44B6D0 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void (**)(void *))(v0 + 72);
  int v24 = *(unsigned __int8 *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = (void *)v14;
  *(_OWORD *)(v14 + 16) = xmmword_191CF8420;
  if (v27) {
    uint64_t v16 = 1702195828;
  }
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if (v27) {
    unint64_t v17 = 0xE400000000000000;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v19 = sub_191B1647C();
  void v15[4] = v16;
  v15[5] = v17;
  if (v24) {
    uint64_t v20 = 1702195828;
  }
  else {
    uint64_t v20 = 0x65736C6166;
  }
  if (v24) {
    unint64_t v21 = 0xE400000000000000;
  }
  else {
    unint64_t v21 = 0xE500000000000000;
  }
  v15[12] = v18;
  v15[13] = v19;
  v15[8] = v19;
  v15[9] = v20;
  v15[10] = v21;
  sub_191CF3758();
  swift_bridgeObjectRelease();
  v25(v27);

  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_191B0714C(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v12 = sub_191CF51F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  uint64_t *v15 = sub_191CF5A18();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  char v16 = sub_191CF5218();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v18 = a4[3];
    uint64_t v19 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v18);
    long long v20 = a6[1];
    v21[0] = *a6;
    v21[1] = v20;
    v22[0] = a6[2];
    *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)a6 + 41);
    if (a3) {
      return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 32))(a5, v21, a1, a2, v18, v19);
    }
    else {
      return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40))(a5, v21, a1, a2, v18, v19);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B0733C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void (*)(uint64_t a1), uint64_t), uint64_t a5)
{
  uint64_t v20 = a5;
  unint64_t v21 = a4;
  uint64_t v19 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449960);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF3858();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = (v13 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v14, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
  swift_retain();
  v21(sub_191B16BC0, v16);
  return swift_release();
}

void sub_191B07570(uint64_t a1, os_unfair_lock_s *a2)
{
  id v3 = a2 + 4;
  uint64_t v4 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_191B16C9C(v3, v5);
  os_unfair_lock_unlock(v4);
  if (v5[0] == 1)
  {
    *(void *)os_log_type_t v5 = a1;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449960);
    sub_191CF5668();
  }
}

void sub_191B07610(unsigned char *a1@<X0>, char *a2@<X8>)
{
  if (*a1)
  {
    id v3 = sub_191CF3838();
    os_log_type_t v4 = sub_191CF5938();
    if (os_log_type_enabled(v3, v4))
    {
      os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v5 = 0;
      _os_log_impl(&dword_191AF4000, v3, v4, "Completion handler can only be called once. Subsequent calls in the same session are ignored.", v5, 2u);
      MEMORY[0x192FE5F00](v5, -1, -1);
    }

    char v6 = 0;
  }
  else
  {
    char v6 = 1;
    *a1 = 1;
  }
  *a2 = v6;
}

uint64_t sub_191B07740(char *a1, uint64_t (*a2)(void), uint64_t a3)
{
  void (*v40)(long long *__return_ptr, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void (*v46)(uint64_t (*)(void *), void *, uint64_t, uint64_t);
  id v47;
  uint64_t (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  long long v59[2];
  void v60[3];
  uint64_t v61;
  uint64_t v62;

  uint64_t v52 = a1;
  uint64_t v5 = type metadata accessor for ViewSource(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  BOOL v50 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v48 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v56 = *(void *)(v53 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v53);
  unint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v55 = (uint64_t)&v48 - v16;
  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    return result;
  }
  uint64_t v17 = *(void *)xmmword_1EB44CC98;
  v60[0] = xmmword_1EB44CC98;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(qword_1EB44CCA8 + 24))(v17);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    uint64_t v28 = 1;
    uint64_t v30 = v53;
    uint64_t v29 = v54;
    goto LABEL_17;
  }
  id v48 = a2;
  os_log_type_t v49 = a3;
  uint64_t v20 = v18 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
  uint64_t v58 = &v52[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  uint64_t v21 = *(void *)(v56 + 72);
  uint64_t v51 = v18;
  swift_bridgeObjectRetain();
  unint64_t v57 = v5;
  while (1)
  {
    sub_191B172EC(v20, (uint64_t)v14, type metadata accessor for WidgetDescriptor);
    sub_191B172EC((uint64_t)v14, (uint64_t)v9, type metadata accessor for ViewSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
        swift_release();
        swift_release();
        uint64_t v23 = sub_191CF33C8();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v23 - 8) + 8))(v9, v23);
      }
      else
      {
        sub_191B17354((uint64_t)v9, type metadata accessor for ViewSource);
      }
      goto LABEL_5;
    }
    uint64_t v25 = *v9;
    uint64_t v24 = v9[1];
    uint64_t v26 = v9[4];
    swift_bridgeObjectRelease();
    sub_191B16F2C(v26);
    swift_release();
    if (v25 == *(void *)v58 && v24 == *((void *)v58 + 1)) {
      break;
    }
    char v27 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_16;
    }
LABEL_5:
    sub_191B17354((uint64_t)v14, type metadata accessor for WidgetDescriptor);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = 1;
      a2 = v48;
      a3 = v49;
      uint64_t v30 = v53;
      uint64_t v29 = v54;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v29 = v54;
  sub_191B169FC((uint64_t)v14, v54, type metadata accessor for WidgetDescriptor);
  uint64_t v28 = 0;
  a2 = v48;
  a3 = v49;
  uint64_t v30 = v53;
LABEL_17:
  uint64_t v31 = v56;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v29, v28, 1, v30);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_191B01770(v29, (uint64_t *)&unk_1EB44BB00);
    goto LABEL_25;
  }
  uint64_t v32 = v29;
  uint64_t v33 = v55;
  sub_191B169FC(v32, v55, type metadata accessor for WidgetDescriptor);
  uint64_t v34 = v50;
  sub_191B172EC(v33, v50, type metadata accessor for ViewSource);
  int v35 = swift_getEnumCaseMultiPayload();
  if (v35)
  {
    if (v35 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v36 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v34, v36);
    }
    else
    {
      sub_191B17354(v34, type metadata accessor for ViewSource);
    }
    sub_191B17354(v55, type metadata accessor for WidgetDescriptor);
LABEL_25:
    if (qword_1EB4499B8 != -1) {
      swift_once();
    }
    return a2(qword_1EB44C7A0);
  }
  else
  {
    os_log_t v37 = a2;
    uint64_t v38 = v34;
    uint64_t v39 = *(void *)(v34 + 32);
    uint64_t v40 = *(void (**)(long long *__return_ptr, uint64_t))(v38 + 48);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191B16F2C(v39);
    uint64_t v41 = swift_release();
    v40(v59, v41);
    swift_release();
    sub_191B004A8(v59, (uint64_t)v60);
    uint64_t v42 = v61;
    id v43 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    uint64_t v44 = (void *)swift_allocObject();
    unint64_t v45 = v52;
    v44[2] = v52;
    v44[3] = v37;
    v44[4] = a3;
    unint64_t v46 = *(void (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(v43 + 56);
    int v47 = v45;
    swift_retain();
    v46(sub_191B16F94, v44, v42, v43);
    swift_release();
    sub_191B17354(v55, type metadata accessor for WidgetDescriptor);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
}

uint64_t sub_191B07E2C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_191CF5698();
  id v12 = a1;
  id v13 = a2;
  swift_retain();
  uint64_t v14 = sub_191CF5688();
  unint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  v15[2] = v14;
  v15[3] = v16;
  void v15[4] = v12;
  v15[5] = v13;
  v15[6] = a3;
  v15[7] = a4;
  sub_191BC2CF8((uint64_t)v10, (uint64_t)&unk_1E92E3070, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_191B07F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_191CF5698();
  v7[6] = sub_191CF5688();
  uint64_t v9 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B08014, v9, v8);
}

uint64_t sub_191B08014()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_191C02A5C(v2, *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle));
  (*(void (**)(void))(v0 + 32))(0);
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_191B0825C()
{
  return sub_191B08338(type metadata accessor for WidgetExtensionXPCServer.ExportedObject);
}

id sub_191B08320()
{
  return sub_191B08338(type metadata accessor for WidgetExtensionXPCServer);
}

id sub_191B08338(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WidgetExtensionXPCServer()
{
  return self;
}

uint64_t type metadata accessor for WidgetExtensionXPCServer.ExportedObject()
{
  return self;
}

uint64_t sub_191B083B8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v56 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF32C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v54 = (char *)v10;
  uint64_t v55 = v11;
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_191CF31D8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_191CF31C8();
  uint64_t v19 = sub_191CF3188();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_191B116C8(6, v19, v21);
  swift_bridgeObjectRelease();
  sub_191CF5BE8();
  swift_bridgeObjectRelease();
  uint64_t v60 = 2978915;
  unint64_t v61 = 0xE300000000000000;
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t v22 = v60;
  unint64_t v23 = v61;
  if (v18 < 1) {
    goto LABEL_9;
  }
  uint64_t v53 = v9;
  if (qword_1E92E2330 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v24 = sub_191CF3858();
    __swift_project_value_buffer(v24, (uint64_t)qword_1E92F2508);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_191CF3838();
    os_log_type_t v26 = sub_191CF5948();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v52 = v18;
      int v50 = v27;
      uint64_t v29 = v28;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v60 = v51;
      *(_DWORD *)uint64_t v29 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_191C5C36C(v22, v23, &v60);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v49 = v29 + 14;
      uint64_t v30 = v13;
      sub_191CF3268();
      sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
      id v13 = v54;
      uint64_t v31 = sub_191CF62C8();
      uint64_t v32 = v22;
      unint64_t v34 = v33;
      (*(void (**)(char *, char *))(v55 + 8))(v30, v13);
      uint64_t v59 = sub_191C5C36C(v31, v34, &v60);
      sub_191CF5C08();
      uint64_t v22 = v32;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191AF4000, v25, (os_log_type_t)v50, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v29, 0x16u);
      uint64_t v35 = v51;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v35, -1, -1);
      uint64_t v18 = v52;
      MEMORY[0x192FE5F00](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v9 = v53;
LABEL_9:
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = v18 > 0;
    *(void *)(v36 + 24) = v22;
    *(void *)(v36 + 32) = v23;
    uint64_t v37 = v57;
    uint64_t v22 = v58;
    *(void *)(v36 + 40) = v57;
    *(void *)(v36 + 48) = v22;
    if ((a1 & 0xC000000000000001) != 0) {
      break;
    }
    uint64_t v18 = v56;
    if ((v56 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > v56)
    {
      uint64_t v38 = *(void **)(a1 + 8 * v56 + 32);
      swift_retain();
      id v39 = v38;
      goto LABEL_13;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  swift_retain();
  uint64_t v18 = v56;
  id v39 = (id)MEMORY[0x192FE4B60](v56, a1);
LABEL_13:
  uint64_t v40 = v39;
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v42 = (void *)swift_allocObject();
  v42[2] = v41;
  v42[3] = sub_191B160F4;
  v42[4] = v36;
  v42[5] = v18;
  v42[6] = a1;
  v42[7] = v37;
  v42[8] = v22;
  uint64_t v43 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 1, 1, v43);
  sub_191CF5698();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v44 = v40;
  swift_retain();
  uint64_t v45 = sub_191CF5688();
  unint64_t v46 = (void *)swift_allocObject();
  uint64_t v47 = MEMORY[0x1E4FBCFD8];
  v46[2] = v45;
  v46[3] = v47;
  v46[4] = v44;
  v46[5] = sub_191B16158;
  v46[6] = v42;
  sub_191B0B438((uint64_t)v9, (uint64_t)&unk_1E92E3010, (uint64_t)v46);
  swift_release();
  sub_191B01770((uint64_t)v9, &qword_1EB44AF18);
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_191B08B18(id a1, char a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void))
{
  if (a2)
  {
    if (a1)
    {
      id v9 = a1;
      if (qword_1E92E2330 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_191CF3858();
      __swift_project_value_buffer(v10, (uint64_t)qword_1E92F2508);
      swift_bridgeObjectRetain();
      id v11 = a1;
      swift_bridgeObjectRetain();
      id v12 = a1;
      id v13 = sub_191CF3838();
      os_log_type_t v14 = sub_191CF5948();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v16 = (void *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v28 = v17;
        *(_DWORD *)uint64_t v15 = 136446466;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a3, a4, &v28);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2114;
        id v18 = a1;
        uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
        sub_191CF5C08();
        *uint64_t v16 = v27;

        _os_log_impl(&dword_191AF4000, v13, v14, "Batch end (%{public}s) - failure: %{public}@", (uint8_t *)v15, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v16, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v17, -1, -1);
        MEMORY[0x192FE5F00](v15, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (qword_1E92E2330 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_191CF3858();
      __swift_project_value_buffer(v19, (uint64_t)qword_1E92F2508);
      swift_bridgeObjectRetain_n();
      unint64_t v20 = sub_191CF3838();
      os_log_type_t v21 = sub_191CF5948();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v26 = a5;
        uint64_t v23 = swift_slowAlloc();
        uint64_t v28 = v23;
        *(_DWORD *)uint64_t v22 = 136446210;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a3, a4, &v28);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_191AF4000, v20, v21, "Batch end (%{public}s) - success", v22, 0xCu);
        swift_arrayDestroy();
        uint64_t v24 = v23;
        a5 = v26;
        MEMORY[0x192FE5F00](v24, -1, -1);
        MEMORY[0x192FE5F00](v22, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return a5(a1);
}

void sub_191B08F24(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = a2 + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x192FE5FF0](v14);
  if (!v15)
  {
    if (qword_1E92E2330 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F2508);
    unint64_t v20 = sub_191CF3838();
    os_log_type_t v21 = sub_191CF5948();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_191AF4000, v20, v21, "WidgetExtensionXPCServer disappeared", v22, 2u);
      MEMORY[0x192FE5F00](v22, -1, -1);
    }

    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v23 = sub_191CF5338();
    id v16 = sub_191BDA6B4(v23, v24, 1500, 0, 0xD000000000000024, 0x8000000191D0D5E0);
    goto LABEL_13;
  }
  id v16 = (id)v15;
  if (a1)
  {
    id v17 = a1;
    id v18 = a1;
    ((void (*)(void *))a3)(a1);

    return;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_191CF6018();
    swift_bridgeObjectRelease();
    uint64_t v26 = v27 - 1;
    if (!__OFSUB__(v27, 1))
    {
LABEL_11:
      if (v26 > a5)
      {
        sub_191B083B8(a6, a5 + 1, a7, a8);
LABEL_14:

        return;
      }
LABEL_13:
      a3();
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v26 = v25 - 1;
    if (!__OFSUB__(v25, 1)) {
      goto LABEL_11;
    }
  }
  __break(1u);
}

uint64_t sub_191B09170()
{
  v1[18] = v0;
  sub_191CF5698();
  v1[19] = sub_191CF5688();
  uint64_t v3 = sub_191CF5648();
  v1[20] = v3;
  v1[21] = v2;
  return MEMORY[0x1F4188298](sub_191B09208, v3, v2);
}

uint64_t sub_191B09208()
{
  uint64_t v1 = *(void **)(v0 + 144);
  if (*v1 == 1)
  {
    swift_release();
    sub_191CF34B8();
    uint64_t v2 = sub_191CF3498();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    sub_191B162A0((uint64_t)(v1 + 1), v0 + 16);
    if (*(unsigned char *)(v0 + 56))
    {
      sub_191B004A8((long long *)(v0 + 16), v0 + 64);
      uint64_t v5 = *(void *)(v0 + 88);
      uint64_t v6 = *(void *)(v0 + 96);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v5);
      uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 48) + **(int **)(v6 + 48));
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_191B09694;
      return v14(v5, v6);
    }
    else
    {
      sub_191B004A8((long long *)(v0 + 16), v0 + 104);
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v9 = *(void *)(v0 + 136);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), v8);
      uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      *(void *)(v0 + 176) = v10;
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v12 = *(void *)(v0 + 136);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), v11);
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 24) + **(int **)(v12 + 24));
      id v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v13;
      *id v13 = v0;
      v13[1] = sub_191B094C8;
      return v15(v10, v11, v12);
    }
  }
}

uint64_t sub_191B094C8(uint64_t a1)
{
  os_log_type_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_191B09850;
  }
  else
  {
    v4[25] = a1;
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_191B095F0;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_191B095F0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();
  sub_191CF34B8();
  uint64_t v2 = sub_191CF3498();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_191B09694(uint64_t a1)
{
  os_log_type_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_191B098C8;
  }
  else
  {
    v4[28] = a1;
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_191B097BC;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_191B097BC()
{
  swift_release();
  sub_191CF34B8();
  uint64_t v1 = sub_191CF3498();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_191B09850()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B098C8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191B09938(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_191CF5698();
  v3[21] = sub_191CF5688();
  uint64_t v5 = sub_191CF5648();
  v3[22] = v5;
  v3[23] = v4;
  return MEMORY[0x1F4188298](sub_191B099D4, v5, v4);
}

uint64_t sub_191B099D4()
{
  sub_191B162A0(*(void *)(v0 + 160) + 8, v0 + 16);
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v1 = *(uint64_t **)(v0 + 144);
    sub_191B004A8((long long *)(v0 + 16), v0 + 64);
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v2);
    uint64_t v4 = *(int **)(v3 + 56);
    v1[3] = swift_getAssociatedTypeWitness();
    v1[4] = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
    uint64_t v19 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_191B09E74;
    uint64_t v7 = *(void *)(v0 + 152);
    return v19(boxed_opaque_existential_1, v7, v2, v3);
  }
  else
  {
    uint64_t v9 = *(uint64_t **)(v0 + 160);
    sub_191B004A8((long long *)(v0 + 16), v0 + 104);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    *(void *)(v0 + 192) = v12;
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), v13);
    uint64_t v15 = *v9;
    unint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 16)
                                                                                       + **(int **)(v14 + 16));
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_191B09CC0;
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 152);
    return v20(v17, v18, v12, v15, v13, v14);
  }
}

uint64_t sub_191B09CC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_191B0A020;
  }
  else {
    uint64_t v5 = sub_191B09DFC;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B09DFC()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B09E74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_191B0A098;
  }
  else {
    uint64_t v5 = sub_191B09FB0;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B09FB0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191B0A020()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B0A098()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B0A114()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_191B0A1A0;
  return sub_191B09170();
}

uint64_t sub_191B0A1A0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_191B0A2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191B0A348;
  return sub_191B09938(a1, a2);
}

uint64_t sub_191B0A348()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191B0A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[47] = a5;
  v6[48] = a6;
  v6[46] = a4;
  sub_191CF5698();
  v6[49] = sub_191CF5688();
  uint64_t v8 = sub_191CF5648();
  v6[50] = v8;
  v6[51] = v7;
  return MEMORY[0x1F4188298](sub_191B0A4D8, v8, v7);
}

void sub_191B0A4D8()
{
  if (qword_1E92E2330 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 368);
  uint64_t v2 = sub_191CF3858();
  *(void *)(v0 + 416) = __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2508);
  id v3 = v1;
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5948();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(unsigned __int8 **)(v0 + 368);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 67240192;
    *(_DWORD *)(v0 + 108) = v7[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview];
    sub_191CF5C08();

    _os_log_impl(&dword_191AF4000, v4, v5, "Generating control template [isPreview=%{BOOL,public}d]...", v8, 8u);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v9 = *(void *)(v0 + 368);
  uint64_t v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
  *(unsigned char *)(v0 + 105) = v10;
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v11 = *((void *)&xmmword_1EB44CC98 + 1);
    uint64_t v12 = *(void *)xmmword_1EB44CC98;
    *(void *)(v0 + 360) = xmmword_1EB44CC98;
    uint64_t v13 = *(void **)(v9 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
    *(void *)(v0 + 424) = v13;
    swift_retain();
    sub_191C9E948(v13, v12, v11, (_OWORD *)(v0 + 16));
    swift_release();
    sub_191B15E0C(v0 + 64, v0 + 216);
    if (*(unsigned char *)(v0 + 256))
    {
      uint64_t v14 = *(int **)(v0 + 216);
      *(void *)(v0 + 432) = *(void *)(v0 + 224);
      id v15 = objc_msgSend(v13, sel_intentReference);
      if (v15)
      {
        uint64_t v16 = v15;
        id v17 = objc_msgSend(v15, sel_intent);
      }
      else
      {
        id v17 = 0;
      }
      *(void *)(v0 + 440) = v17;
      uint64_t v29 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_191B0AAA4;
      uint64_t v23 = v0 + 264;
      uint64_t v24 = (uint64_t)v17;
      uint64_t v25 = v10;
      uint64_t v26 = v29;
    }
    else
    {
      sub_191B004A8((long long *)(v0 + 216), v0 + 168);
      *(unsigned char *)(v0 + 208) = 0;
      uint64_t v18 = *(unsigned __int8 *)(v0 + 105);
      uint64_t v19 = *(void *)(v0 + 368);
      sub_191B162A0(v0 + 168, v0 + 120);
      *(void *)(v0 + 112) = v18;
      unint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
      *(void *)(v0 + 464) = v20;
      *(void *)(v0 + 472) = *(void *)(v19 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
      uint64_t v28 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E92E3018 + dword_1E92E3018);
      id v21 = v20;
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 480) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_191B0AD24;
      uint64_t v23 = *(void *)(v0 + 424);
      uint64_t v24 = (uint64_t)v21;
      uint64_t v25 = v0 + 112;
      uint64_t v26 = v28;
    }
    v26(v23, v24, v25);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191B0AAA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v2 + 408);
  uint64_t v4 = *(void *)(v2 + 400);
  if (v0) {
    os_log_type_t v5 = sub_191B0B228;
  }
  else {
    os_log_type_t v5 = sub_191B0ABF8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B0ABF8()
{
  swift_release();
  sub_191B004A8((long long *)(v0 + 264), v0 + 168);
  *(unsigned char *)(v0 + 208) = 1;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 105);
  uint64_t v2 = *(void *)(v0 + 368);
  sub_191B162A0(v0 + 168, v0 + 120);
  *(void *)(v0 + 112) = v1;
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  *(void *)(v0 + 464) = v3;
  *(void *)(v0 + 472) = *(void *)(v2 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E92E3018 + dword_1E92E3018);
  id v4 = v3;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v5;
  *os_log_type_t v5 = v0;
  v5[1] = sub_191B0AD24;
  uint64_t v6 = *(void *)(v0 + 424);
  return v8(v6, (uint64_t)v4, v0 + 112);
}

uint64_t sub_191B0AD24(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)*v3;
  v4[61] = a1;
  v4[62] = a2;
  v4[63] = v2;
  swift_task_dealloc();
  if (v2) {
    os_log_type_t v5 = sub_191B0AEFC;
  }
  else {
    os_log_type_t v5 = sub_191B0AE3C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_191B0AE3C()
{
  uint64_t v1 = *(void *)(v0 + 504);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 488);
  sub_191B1632C();
  sub_191CF58D8();
  uint64_t v2 = *(void **)(v0 + 464);
  sub_191B1603C(*(void *)(v0 + 488), *(void *)(v0 + 496));

  if (v1)
  {
    *(void *)(v0 + 512) = v1;
    uint64_t v3 = *(void *)(v0 + 400);
    uint64_t v4 = *(void *)(v0 + 408);
    os_log_type_t v5 = sub_191B0B00C;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 400);
    uint64_t v4 = *(void *)(v0 + 408);
    os_log_type_t v5 = sub_191B0AF68;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_191B0AEFC()
{
  *(void *)(v0 + 512) = *(void *)(v0 + 504);
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 408);
  return MEMORY[0x1F4188298](sub_191B0B00C, v1, v2);
}

uint64_t sub_191B0AF68()
{
  uint64_t v1 = *(void (**)(void))(v0 + 376);
  swift_release();
  v1(0);
  sub_191B162D8(v0 + 112);
  sub_191B16304(v0 + 168);
  sub_191B15E68(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_191B0B00C()
{
  id v15 = v0;
  swift_release();
  sub_191B162D8((uint64_t)(v0 + 14));
  sub_191B16304((uint64_t)(v0 + 21));
  sub_191B15E68((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[64];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5928();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_191C80710(v0[39]);
    v0[43] = sub_191C5C36C(v8, v9, &v14);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191AF4000, v4, v5, "Template request failed: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v7, -1, -1);
    MEMORY[0x192FE5F00](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = (void (*)(void *))v0[47];
  id v11 = v1;
  v10(v1);

  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_191B0B228()
{
  id v15 = v0;
  swift_release();
  swift_release();
  sub_191B15E68((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[57];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5928();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_191C80710(v0[39]);
    v0[43] = sub_191C5C36C(v8, v9, &v14);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191AF4000, v4, v5, "Template request failed: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v7, -1, -1);
    MEMORY[0x192FE5F00](v6, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = (void (*)(void *))v0[47];
  id v11 = v1;
  v10(v1);

  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_191B0B438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B01614(a1, (uint64_t)v8, &qword_1EB44AF18);
  uint64_t v9 = sub_191CF56B8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_191B01770((uint64_t)v8, &qword_1EB44AF18);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_191CF5648();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_191CF56A8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_191B0B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[54] = a5;
  v6[55] = a6;
  v6[53] = a4;
  sub_191CF5698();
  v6[56] = sub_191CF5688();
  uint64_t v8 = sub_191CF5648();
  v6[57] = v8;
  v6[58] = v7;
  return MEMORY[0x1F4188298](sub_191B0B6C8, v8, v7);
}

uint64_t sub_191B0B6C8()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 392) = MEMORY[0x1E4FBC860];
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  *(void *)(v0 + 472) = v3;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = swift_bridgeObjectRetain();
    *(void *)(v0 + 480) = v4;
    if (v4) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v5 = swift_release();
    *(void *)(v0 + 408) = v2;
    if ((void)xmmword_1EB44CC98)
    {
      uint64_t v55 = (uint64_t *)(v0 + 408);
      uint64_t v15 = *((void *)&xmmword_1EB44CC98 + 1);
      uint64_t v16 = *(void *)xmmword_1EB44CC98;
      *(void *)(v0 + 400) = xmmword_1EB44CC98;
      uint64_t v17 = (*(uint64_t (**)(uint64_t))(v15 + 8))(v16);
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        uint64_t v19 = type metadata accessor for WidgetDescriptor(0);
        uint64_t v20 = 0;
        unint64_t v21 = v17
            + ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80));
        uint64_t v22 = *(void *)(*(void *)(v19 - 8) + 72);
        uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v53 = v18;
        do
        {
          uint64_t v25 = (uint64_t *)(v21 + v20 * v22 + *(int *)(v19 + 128));
          uint64_t v26 = *v25;
          if (*v25)
          {
            uint64_t v27 = v25[1];
            uint64_t v28 = v23[2];
            if (v28)
            {
              uint64_t v29 = 4;
              uint64_t v30 = v23[2];
              while (v23[v29] != v26)
              {
                v29 += 2;
                if (!--v30) {
                  goto LABEL_22;
                }
              }
            }
            else
            {
LABEL_22:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v23 = sub_191B40D34(0, v28 + 1, 1, v23);
              }
              unint64_t v32 = v23[2];
              unint64_t v31 = v23[3];
              if (v32 >= v31 >> 1) {
                uint64_t v23 = sub_191B40D34((void *)(v31 > 1), v32 + 1, 1, v23);
              }
              uint64_t v23[2] = v32 + 1;
              uint64_t v24 = &v23[2 * v32];
              v24[4] = v26;
              v24[5] = v27;
              uint64_t v18 = v53;
              *uint64_t v55 = (uint64_t)v23;
            }
          }
          ++v20;
        }
        while (v20 != v18);
      }
      swift_bridgeObjectRelease();
      if (qword_1E92E2330 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_191CF3858();
      __swift_project_value_buffer(v33, (uint64_t)qword_1E92F2508);
      unint64_t v34 = sub_191CF3838();
      os_log_type_t v35 = sub_191CF5948();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 134349312;
        swift_beginAccess();
        *(void *)(v0 + 416) = *(void *)(*(void *)(v0 + 392) + 16);
        sub_191CF5C08();
        *(_WORD *)(v36 + 12) = 2050;
        swift_beginAccess();
        *(void *)(v0 + 384) = *(void *)(*v55 + 16);
        sub_191CF5C08();
        _os_log_impl(&dword_191AF4000, v34, v35, "Sending %{public}ld ControlInfo instance(s) to %{public}ld PushHandler instances.", (uint8_t *)v36, 0x16u);
        MEMORY[0x192FE5F00](v36, -1, -1);
      }

      swift_beginAccess();
      uint64_t v54 = *v55;
      uint64_t v37 = *(void *)(*v55 + 16);
      if (v37)
      {
        uint64_t v38 = v0;
        id v39 = (uint64_t *)(v0 + 216);
        uint64_t v52 = v38;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v40 = 0;
        do
        {
          uint64_t v41 = v54 + 16 * v40++;
          long long v56 = *(_OWORD *)(v41 + 32);
          uint64_t v42 = *(void (**)(void, void))(*((void *)&v56 + 1) + 8);
          *(_OWORD *)(v52 + 240) = v56;
          __swift_allocate_boxed_opaque_existential_1(v39);
          v42(v56, *((void *)&v56 + 1));
          uint64_t v43 = v37;
          id v44 = *(void (**)(uint64_t, void, void))(*((void *)&v56 + 1) + 16);
          uint64_t v45 = swift_bridgeObjectRetain();
          v44(v45, v56, *((void *)&v56 + 1));
          uint64_t v37 = v43;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        }
        while (v43 != v40);
        swift_bridgeObjectRelease();
        uint64_t v0 = v52;
      }
      (*(void (**)(void))(v0 + 432))(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
      return v46();
    }
LABEL_43:
    __break(1u);
    return MEMORY[0x1F4188298](v5, v6, v7);
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_191CF6018();
  uint64_t v4 = v5;
  *(void *)(v0 + 480) = v5;
  if (!v5) {
    goto LABEL_12;
  }
LABEL_3:
  *(void *)(v0 + 488) = *(void *)(*(void *)(v0 + 424)
                                    + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v8 = 0;
  while (1)
  {
    *(void *)(v0 + 496) = v8;
    uint64_t v9 = *(void *)(v0 + 472);
    if ((v9 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x192FE4B60]();
    }
    else {
      id v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    uint64_t v11 = v10;
    *(void *)(v0 + 504) = v10;
    if (!*(void *)(*(void *)(v0 + 488) + 16)) {
      goto LABEL_5;
    }
    id v12 = v10;
    unint64_t v13 = sub_191B1CBA4((uint64_t)v12);
    if (v14) {
      break;
    }

LABEL_5:
    uint64_t v8 = *(void *)(v0 + 496) + 1;
    if (v8 == *(void *)(v0 + 480)) {
      goto LABEL_12;
    }
  }
  id v48 = (uint64_t *)(*(void *)(*(void *)(v0 + 488) + 56) + 16 * v13);
  uint64_t v49 = *v48;
  *(void *)(v0 + 512) = *v48;
  unint64_t v50 = v48[1];
  *(void *)(v0 + 520) = v50;
  sub_191B15F88(v49, v50);

  id v51 = v12;
  sub_191B15F88(v49, v50);
  uint64_t v5 = (uint64_t)sub_191B0BD14;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_191B0BD14()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void **)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 512);
  *(void *)(v0 + 128) = v2;
  id v4 = v2;
  id v5 = objc_msgSend(v4, sel_kind);
  uint64_t v6 = sub_191CF5338();
  uint64_t v8 = v7;

  *(void *)(v0 + 96) = v6;
  *(void *)(v0 + 104) = v8;
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = v1;
  id v9 = objc_msgSend(v4, sel_intentReference);
  if (v9)
  {
    id v10 = v9;
    id v11 = objc_msgSend(v9, sel_intent);
    *(void *)(v0 + 528) = v11;

    if (v11)
    {
      self;
      id v12 = (void *)swift_dynamicCastObjCClass();
      if (v12)
      {
        unint64_t v13 = (_OWORD *)(v0 + 256);
        id v14 = objc_msgSend(v12, sel_linkAction);
        if (v14)
        {
          id v15 = v14;
          *(void *)(v0 + 280) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
          *(void *)(v0 + 256) = v15;
        }
        else
        {
          *unint64_t v13 = 0u;
          *(_OWORD *)(v0 + 272) = 0u;
        }
        uint64_t v18 = (void *)swift_task_alloc();
        *(void *)(v0 + 536) = v18;
        *uint64_t v18 = v0;
        v18[1] = sub_191B0BF0C;
        return MEMORY[0x1F40D3A38](v0 + 176, v13);
      }
    }
  }

  *(void *)(v0 + 168) = 0;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  uint64_t v16 = *(void *)(v0 + 456);
  uint64_t v17 = *(void *)(v0 + 464);
  return MEMORY[0x1F4188298](sub_191B0C15C, v16, v17);
}

uint64_t sub_191B0BF0C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_191B0C0B8;
  }
  else
  {
    sub_191B01770(v2 + 256, (uint64_t *)&unk_1EB44BC90);
    uint64_t v3 = sub_191B0C034;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191B0C034()
{
  uint64_t v1 = *(void **)(v0 + 528);

  sub_191B015B0(v0 + 176, v0 + 136, &qword_1E92E0FF8);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  return MEMORY[0x1F4188298](sub_191B0C15C, v2, v3);
}

uint64_t sub_191B0C0B8()
{
  uint64_t v1 = *(void **)(v0 + 528);

  sub_191B01770(v0 + 256, (uint64_t *)&unk_1EB44BC90);
  *(_OWORD *)(v0 + 192) = 0u;
  *(void *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  sub_191B015B0(v0 + 176, v0 + 136, &qword_1E92E0FF8);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  return MEMORY[0x1F4188298](sub_191B0C15C, v2, v3);
}

uint64_t sub_191B0C15C()
{
  sub_191B15FE0(v0 + 96, v0 + 16);
  uint64_t v1 = *(void **)(v0 + 392);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_191B40C10(0, v1[2] + 1, 1, v1);
  }
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_191B40C10((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  unint64_t v4 = *(void *)(v0 + 520);
  uint64_t v6 = *(void **)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 512);
  v1[2] = v3 + 1;
  uint64_t v7 = &v1[10 * v3];
  v7[2] = *(_OWORD *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 48);
  long long v10 = *(_OWORD *)(v0 + 80);
  v7[5] = *(_OWORD *)(v0 + 64);
  v7[6] = v10;
  v7[3] = v8;
  v7[4] = v9;
  sub_191B1603C(v5, v4);

  *(void *)(v0 + 392) = v1;
  sub_191B16094(v0 + 96);
  while (1)
  {
    uint64_t v11 = *(void *)(v0 + 496) + 1;
    if (v11 == *(void *)(v0 + 480)) {
      break;
    }
    *(void *)(v0 + 496) = v11;
    uint64_t v12 = *(void *)(v0 + 472);
    if ((v12 & 0xC000000000000001) != 0) {
      id v13 = (id)MEMORY[0x192FE4B60]();
    }
    else {
      id v13 = *(id *)(v12 + 8 * v11 + 32);
    }
    id v14 = v13;
    *(void *)(v0 + 504) = v13;
    if (*(void *)(*(void *)(v0 + 488) + 16))
    {
      id v15 = v13;
      unint64_t v16 = sub_191B1CBA4((uint64_t)v15);
      if (v17)
      {
        uint64_t v52 = (uint64_t *)(*(void *)(*(void *)(v0 + 488) + 56) + 16 * v16);
        uint64_t v53 = *v52;
        *(void *)(v0 + 512) = *v52;
        unint64_t v54 = v52[1];
        *(void *)(v0 + 520) = v54;
        sub_191B15F88(v53, v54);

        id v55 = v15;
        sub_191B15F88(v53, v54);
        uint64_t v18 = sub_191B0BD14;
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        return MEMORY[0x1F4188298](v18, v19, v20);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t (*)())swift_release();
  *(void *)(v0 + 408) = MEMORY[0x1E4FBC860];
  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    return MEMORY[0x1F4188298](v18, v19, v20);
  }
  uint64_t v59 = (uint64_t *)(v0 + 408);
  uint64_t v21 = *((void *)&xmmword_1EB44CC98 + 1);
  uint64_t v22 = *(void *)xmmword_1EB44CC98;
  *(void *)(v0 + 400) = xmmword_1EB44CC98;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v21 + 8))(v22);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = type metadata accessor for WidgetDescriptor(0);
    uint64_t v26 = 0;
    unint64_t v27 = v23
        + ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80));
    uint64_t v28 = *(void *)(*(void *)(v25 - 8) + 72);
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v57 = v24;
    do
    {
      unint64_t v31 = (uint64_t *)(v27 + v26 * v28 + *(int *)(v25 + 128));
      uint64_t v32 = *v31;
      if (*v31)
      {
        uint64_t v33 = v31[1];
        uint64_t v34 = v29[2];
        if (v34)
        {
          uint64_t v35 = 4;
          uint64_t v36 = v29[2];
          while (v29[v35] != v32)
          {
            v35 += 2;
            if (!--v36) {
              goto LABEL_24;
            }
          }
        }
        else
        {
LABEL_24:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_191B40D34(0, v34 + 1, 1, v29);
          }
          unint64_t v38 = v29[2];
          unint64_t v37 = v29[3];
          if (v38 >= v37 >> 1) {
            uint64_t v29 = sub_191B40D34((void *)(v37 > 1), v38 + 1, 1, v29);
          }
          void v29[2] = v38 + 1;
          uint64_t v30 = &v29[2 * v38];
          v30[4] = v32;
          v30[5] = v33;
          *uint64_t v59 = (uint64_t)v29;
          uint64_t v24 = v57;
        }
      }
      ++v26;
    }
    while (v26 != v24);
  }
  swift_bridgeObjectRelease();
  if (qword_1E92E2330 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_191CF3858();
  __swift_project_value_buffer(v39, (uint64_t)qword_1E92F2508);
  uint64_t v40 = sub_191CF3838();
  os_log_type_t v41 = sub_191CF5948();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134349312;
    swift_beginAccess();
    *(void *)(v0 + 416) = *(void *)(*(void *)(v0 + 392) + 16);
    sub_191CF5C08();
    *(_WORD *)(v42 + 12) = 2050;
    swift_beginAccess();
    *(void *)(v0 + 384) = *(void *)(*(void *)(v0 + 408) + 16);
    sub_191CF5C08();
    _os_log_impl(&dword_191AF4000, v40, v41, "Sending %{public}ld ControlInfo instance(s) to %{public}ld PushHandler instances.", (uint8_t *)v42, 0x16u);
    MEMORY[0x192FE5F00](v42, -1, -1);
  }

  swift_beginAccess();
  uint64_t v56 = *v59;
  uint64_t v43 = *(void *)(*v59 + 16);
  if (v43)
  {
    uint64_t v60 = (uint64_t *)(v0 + 216);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v44 = 0;
    do
    {
      uint64_t v45 = v56 + 16 * v44++;
      long long v58 = *(_OWORD *)(v45 + 32);
      unint64_t v46 = *(void (**)(void, void))(*((void *)&v58 + 1) + 8);
      *(_OWORD *)(v0 + 240) = v58;
      __swift_allocate_boxed_opaque_existential_1(v60);
      v46(v58, *((void *)&v58 + 1));
      uint64_t v47 = v0;
      id v48 = *(void (**)(uint64_t, void, void))(*((void *)&v58 + 1) + 16);
      uint64_t v49 = swift_bridgeObjectRetain();
      v48(v49, v58, *((void *)&v58 + 1));
      uint64_t v0 = v47;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    }
    while (v43 != v44);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(void))(v0 + 432))(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_191B0C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[11] = a5;
  v7[14] = sub_191CF5698();
  v7[15] = sub_191CF5688();
  long long v9 = (void *)swift_task_alloc();
  v7[16] = v9;
  *long long v9 = v7;
  v9[1] = sub_191B0CA10;
  return sub_191B14E10(a5);
}

uint64_t sub_191B0CA10()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  if (v0) {
    unint64_t v4 = sub_191B0CE60;
  }
  else {
    unint64_t v4 = sub_191B0CB6C;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_191B0CB6C()
{
  uint64_t v20 = v0;
  swift_release();
  if (qword_1E92E2330 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = sub_191CF3858();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E92F2508);
  id v3 = v1;
  unint64_t v4 = sub_191CF3838();
  os_log_type_t v5 = sub_191CF5948();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(char **)(v0 + 88);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v8 = 136315394;
    id v9 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control], sel_kind);
    uint64_t v10 = sub_191CF5338();
    os_log_type_t type = v5;
    unint64_t v12 = v11;

    *(void *)(v0 + 64) = sub_191C5C36C(v10, v12, &v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    *(void *)(v0 + 72) = *(void *)&v7[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state];
    sub_191CF34B8();
    sub_191B17414(&qword_1E92E2FF0, 255, MEMORY[0x1E4F58930]);
    uint64_t v13 = sub_191CF62C8();
    *(void *)(v0 + 80) = sub_191C5C36C(v13, v14, &v19);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191AF4000, v4, type, "State for %s updated to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v18, -1, -1);
    MEMORY[0x192FE5F00](v8, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void))(v0 + 96))(0);
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_191B0CE60()
{
  unint64_t v27 = v0;
  swift_release();
  if (qword_1E92E2330 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = sub_191CF3858();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92F2508);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_191CF3838();
  os_log_type_t v9 = sub_191CF5928();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = (void *)v0[17];
  unint64_t v12 = (char *)v0[11];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v13 = 136315394;
    id v14 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control], sel_kind);
    uint64_t v15 = sub_191CF5338();
    unint64_t v17 = v16;

    v0[6] = sub_191C5C36C(v15, v17, &v26);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v18 = sub_191C80710(v0[3]);
    v0[7] = sub_191C5C36C(v18, v19, &v26);
    sub_191CF5C08();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_191AF4000, v8, v9, "Error setting state for %s: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v25, -1, -1);
    MEMORY[0x192FE5F00](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v20 = (void *)v0[17];
  uint64_t v21 = (void (*)(void))v0[12];
  uint64_t v22 = (void *)sub_191CF2FD8();
  v21();

  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_191B0D2E4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a3;
  uint64_t v7 = sub_191CF32C8();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF31D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_191CF31C8();
  uint64_t v14 = sub_191CF3188();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_191B116C8(6, v14, v16);
  swift_bridgeObjectRelease();
  sub_191CF5BE8();
  swift_bridgeObjectRelease();
  uint64_t v52 = 2977907;
  unint64_t v53 = 0xE300000000000000;
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t v18 = v52;
  unint64_t v17 = v53;
  if (v13 < 1) {
    goto LABEL_8;
  }
  if (qword_1E92E1198 != -1) {
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v19 = sub_191CF3858();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E92F24A8);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_191CF3838();
    os_log_type_t v21 = sub_191CF5948();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v52 = v45;
      *(_DWORD *)uint64_t v23 = 136446466;
      int v44 = v22;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_191C5C36C(v18, v17, &v52);
      v43[2] = (os_log_t)&v52;
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2082;
      v43[1] = (os_log_t)(v23 + 14);
      uint64_t v24 = v47;
      sub_191CF3268();
      sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
      uint64_t v25 = v49;
      uint64_t v26 = sub_191CF62C8();
      v43[0] = v20;
      uint64_t v27 = v18;
      uint64_t v28 = v26;
      uint64_t v46 = v13;
      uint64_t v29 = a4;
      unint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v25);
      uint64_t v32 = v28;
      uint64_t v18 = v27;
      uint64_t v51 = sub_191C5C36C(v32, v31, &v52);
      sub_191CF5C08();
      a4 = v29;
      uint64_t v13 = v46;
      swift_bridgeObjectRelease();
      os_log_t v33 = v43[0];
      _os_log_impl(&dword_191AF4000, v43[0], (os_log_type_t)v44, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v23, 0x16u);
      uint64_t v34 = v45;
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v34, -1, -1);
      MEMORY[0x192FE5F00](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = v13 > 0;
    *(void *)(v35 + 24) = v18;
    *(void *)(v35 + 32) = v17;
    *(void *)(v35 + 40) = v50;
    *(void *)(v35 + 48) = a4;
    if ((a1 & 0xC000000000000001) != 0) {
      break;
    }
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      uint64_t v36 = *(void **)(a1 + 8 * a2 + 32);
      swift_retain();
      id v37 = v36;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_retain();
  id v37 = (id)MEMORY[0x192FE4B60](a2, a1);
LABEL_12:
  unint64_t v38 = v37;
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = v50;
  v40[2] = v39;
  v40[3] = v41;
  v40[4] = a4;
  v40[5] = a2;
  v40[6] = a1;
  v40[7] = sub_191B11788;
  v40[8] = v35;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_191B15458(v38, (uint64_t)sub_191B117E8, (uint64_t)v40);
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_191B0D944(uint64_t a1, uint64_t a2)
{
  return sub_191B17414(&qword_1E92E2FC0, a2, (void (*)(uint64_t))type metadata accessor for WidgetURLHandler);
}

uint64_t sub_191B0D98C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_191B0D9C4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_191B0D9D8(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8)
{
  if (a2)
  {
    if (a1)
    {
      uint64_t v13 = *a7;
      id v14 = a1;
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_191CF3858();
      __swift_project_value_buffer(v15, a8);
      swift_bridgeObjectRetain_n();
      id v16 = v14;
      unint64_t v17 = sub_191CF3838();
      os_log_type_t v18 = sub_191CF5948();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = v28;
        *(_DWORD *)uint64_t v19 = 136446466;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a3, a4, &v29);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2114;
        id v20 = v16;
        sub_191CF5C08();
        *uint64_t v27 = a1;

        _os_log_impl(&dword_191AF4000, v17, v18, "Batch end (%{public}s) - failure: %{public}@", (uint8_t *)v19, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v27, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v28, -1, -1);
        MEMORY[0x192FE5F00](v19, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (*a7 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_191CF3858();
      __swift_project_value_buffer(v21, a8);
      swift_bridgeObjectRetain_n();
      int v22 = sub_191CF3838();
      os_log_type_t v23 = sub_191CF5948();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v29 = v25;
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        sub_191C5C36C(a3, a4, &v29);
        sub_191CF5C08();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_191AF4000, v22, v23, "Batch end (%{public}s) - success", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v25, -1, -1);
        MEMORY[0x192FE5F00](v24, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return a5(a1);
}

void sub_191B0DDB4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v13 = a2 + 16;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x192FE5FF0](v13);
  if (!v14)
  {
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v17 = sub_191CF5338();
    id v15 = sub_191BDA6B4(v17, v18, 1050, 0, 0xD000000000000024, 0x8000000191D0D5E0);
    a3();
    goto LABEL_11;
  }
  id v15 = (id)v14;
  if (a1)
  {
    uint64_t v16 = a1;
LABEL_10:
    a7(v16);
    goto LABEL_11;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_191CF6018();
    swift_bridgeObjectRelease();
    uint64_t v20 = v21 - 1;
    if (!__OFSUB__(v21, 1)) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v20 = v19 - 1;
    if (!__OFSUB__(v19, 1))
    {
LABEL_7:
      if (v20 <= a5)
      {
        uint64_t v16 = 0;
        goto LABEL_10;
      }
      sub_191B0D2E4(a6, a5 + 1, a3, a4);
LABEL_11:

      return;
    }
  }
  __break(1u);
}

uint64_t sub_191B0DF20(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

uint64_t sub_191B0DFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for ControlArchiveStorage(0);
  v3[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191B0E05C, 0, 0);
}

uint64_t sub_191B0E05C()
{
  if (WidgetEnvironment.enumeratedCount()() < 1)
  {
    sub_191B16380();
    swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[7] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_191B0E188;
    uint64_t v2 = v0[6];
    uint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    uint64_t v5 = v0[2];
    return sub_191B0E454(v2, v3, v5, v4);
  }
}

uint64_t sub_191B0E188()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191B0E3F0;
  }
  else {
    uint64_t v2 = sub_191B0E29C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191B0E29C()
{
  uint64_t v1 = v0[8];
  sub_191B17414(&qword_1E92E2488, 255, (void (*)(uint64_t))type metadata accessor for ControlArchiveStorage);
  uint64_t v2 = sub_191CF5258();
  if (v1)
  {
    sub_191B17354(v0[6], type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v2;
    uint64_t v7 = v3;
    sub_191B17354(v0[6], type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v8(v6, v7);
  }
}

uint64_t sub_191B0E3F0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191B0E454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a3;
  v4[32] = a4;
  v4[29] = a1;
  v4[30] = a2;
  v4[33] = *(void *)(type metadata accessor for ControlTemplateType() - 8);
  v4[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  v4[35] = swift_task_alloc();
  v4[36] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  v4[37] = swift_task_alloc();
  uint64_t v5 = sub_191CF4058();
  v4[38] = v5;
  v4[39] = *(void *)(v5 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  v4[44] = swift_task_alloc();
  type metadata accessor for BundleStub();
  v4[45] = swift_task_alloc();
  uint64_t v6 = sub_191CF3178();
  v4[46] = v6;
  v4[47] = *(void *)(v6 - 8);
  v4[48] = swift_task_alloc();
  v4[49] = type metadata accessor for ControlArchiveStorageMetadata(0);
  v4[50] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[51] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_191B0E704;
  return sub_191B09170();
}

uint64_t sub_191B0E704(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 416) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_191B0E8D4, 0, 0);
  }
}

uint64_t sub_191B0E8D4()
{
  uint64_t v79 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void **)(v0 + 256);
  id v3 = *(id *)(v0 + 248);
  id v4 = v2;
  swift_retain();
  sub_191CF3168();
  BundleStub.init(_:)((uint64_t)objc_msgSend(v3, sel_extensionIdentity), v1);
  if (qword_1EB44BA38 != -1) {
    swift_once();
  }
  uint64_t v5 = *(int **)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v9 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v68 = *(void *)(v0 + 416);
  uint64_t v69 = *(void *)(v0 + 344);
  uint64_t v66 = *(void *)(v0 + 384);
  uint64_t v67 = *(void *)(v0 + 336);
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v72 = *(void *)(v0 + 304);
  uint64_t v76 = *(uint64_t **)(v0 + 296);
  uint64_t v74 = *(void *)(v0 + 288);
  uint64_t v12 = *(void *)(v0 + 248);
  uint64_t v11 = *(void **)(v0 + 256);
  uint64_t v70 = *(void ***)(v0 + 352);
  swift_beginAccess();
  uint64_t v13 = qword_1EB44BA48;
  *(void *)(v6 + v5[6]) = v12;
  sub_191B172EC(v9, v6, (uint64_t (*)(void))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6 + v5[8], v66, v8);
  *(void *)(v6 + v5[5]) = v13;
  uint64_t v78 = v11;
  id v14 = v11;
  WidgetEnvironment.filterForControlArchiving()();
  sub_191B17354(v9, (uint64_t (*)(void))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v66, v8);

  *(void *)(v6 + v5[7]) = v11;
  *(void *)(v6 + v5[9]) = v68;
  id v15 = v11;
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  uint64_t v16 = (char *)v70 + *(int *)(v69 + 20);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  *(void *)(v0 + 424) = v17;
  *(void *)(v0 + 432) = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v17(v16, v67, v72);
  *uint64_t v70 = v15;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 440) = v18;
  *(void *)(v0 + 448) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v18(v67, v72);
  *(void *)(v0 + 456) = sub_191CE0434();
  uint64_t v19 = *v70;
  uint64_t v20 = *(int *)(v74 + 20);
  *(_DWORD *)(v0 + 60) = v20;
  v17((char *)v76 + v20, (uint64_t)v16, v72);
  id v21 = v19;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v23 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  uint64_t v78 = v21;
  id v24 = v21;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_191B4FF68(&v78, v23);
  unint64_t v27 = v26;
  uint64_t v29 = v28;

  swift_bridgeObjectRelease();
  *uint64_t v76 = v25;
  v76[1] = v27;
  v76[2] = v29;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v40 = sub_191CF6018();
    swift_bridgeObjectRelease();
    unint64_t v31 = v40 - 1;
    if (v40 >= 1)
    {
LABEL_5:
      *(void *)(v0 + 464) = v22;
      sub_191B3CC80(v31);
      if ((v32 & 1) == 0)
      {
        os_log_t v33 = *(void **)(v0 + 296);
        swift_bridgeObjectRelease();
        *os_log_t v33 = v22;
        swift_bridgeObjectRelease();
        v33[1] = v22;
        swift_bridgeObjectRelease();
        v33[2] = v22;
      }
      uint64_t v34 = (*(uint64_t (**)(void, void, void))(v0 + 424))(*(void *)(v0 + 328), *(void *)(v0 + 296) + *(int *)(v0 + 60), *(void *)(v0 + 304));
      if (v27 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_191CF6018();
        uint64_t v34 = swift_bridgeObjectRelease();
        if (!v37) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v37 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v37) {
          goto LABEL_18;
        }
      }
      if (v37 < 1)
      {
        __break(1u);
        return MEMORY[0x1F4188298](v34, v35, v36);
      }
      for (uint64_t i = 0; i != v37; ++i)
      {
        if ((v27 & 0xC000000000000001) != 0)
        {
          uint64_t v39 = MEMORY[0x192FE4B60](i, v27);
        }
        else
        {
          uint64_t v39 = *(void *)(v27 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(void))(**(void **)(v39 + 16) + 112))(*(void *)(v0 + 328));
        swift_release();
      }
LABEL_18:
      uint64_t v42 = *(void *)(v0 + 328);
      uint64_t v43 = *(void *)(v0 + 304);
      uint64_t v44 = *(void *)(v0 + 312);
      uint64_t v45 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
      v46(v45, v42, v43);
      uint64_t v47 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56);
      *(void *)(v0 + 472) = v47;
      v47(v45, 0, 1, v43);
      int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43);
      uint64_t v49 = *(void *)(v0 + 456);
      if (v48 == 1) {
        goto LABEL_19;
      }
      v46(*(void *)(v0 + 320), *(void *)(v0 + 280), *(void *)(v0 + 304));
      if (v49)
      {
        swift_retain();
        sub_191CF4DB8();
        unsigned int v73 = v57;
        unsigned int v77 = v58;
        unsigned int v71 = v59;
        unsigned int v75 = v60;
        swift_release();
        v61.i64[0] = v73;
        v61.i64[1] = v71;
        int8x16_t v62 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)__PAIR64__(v75, v77), 0x20uLL), v61);
      }
      else
      {
        int8x16_t v62 = 0uLL;
      }
      BOOL v63 = *(void *)(v0 + 456) == 0;
      *(int8x16_t *)(v0 + 208) = v62;
      *(unsigned char *)(v0 + 224) = v63;
      sub_191B163D4();
      sub_191CF4078();
      sub_191CF5698();
      *(void *)(v0 + 480) = sub_191CF5688();
      uint64_t v64 = sub_191CF5648();
      uint64_t v36 = v65;
      *(void *)(v0 + 488) = v64;
      *(void *)(v0 + 496) = v65;
      uint64_t v34 = (uint64_t)sub_191B0F05C;
      uint64_t v35 = v64;
      return MEMORY[0x1F4188298](v34, v35, v36);
    }
  }
  else
  {
    uint64_t v30 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v31 = v30 - 1;
    if (v30 >= 1) {
      goto LABEL_5;
    }
  }
  uint64_t v41 = *(void *)(v0 + 312);
  swift_bridgeObjectRelease();
  (*(void (**)(void, uint64_t, uint64_t, void))(v41 + 56))(*(void *)(v0 + 280), 1, 1, *(void *)(v0 + 304));
LABEL_19:
  uint64_t v50 = *(void *)(v0 + 400);
  uint64_t v51 = *(void *)(v0 + 352);
  uint64_t v52 = *(void *)(v0 + 296);
  uint64_t v53 = *(void *)(v0 + 232);
  swift_release();
  swift_release();
  sub_191B17354(v52, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_191B17354(v51, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_191B169FC(v50, v53, type metadata accessor for ControlArchiveStorageMetadata);
  uint64_t v54 = type metadata accessor for ControlArchiveStorage(0);
  *(void *)(v53 + *(int *)(v54 + 20)) = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v53 + *(int *)(v54 + 24)) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v55 = *(uint64_t (**)(void))(v0 + 8);
  return v55();
}

uint64_t sub_191B0F05C()
{
  sub_191B162A0(*(void *)(v0 + 240) + 8, v0 + 16);
  if (*(unsigned char *)(v0 + 56))
  {
    sub_191B004A8((long long *)(v0 + 16), v0 + 104);
    uint64_t v1 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 104), v1);
    id v3 = *(int **)(v2 + 56);
    *(void *)(v0 + 88) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 96) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
    uint64_t v17 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_191B0F488;
    uint64_t v6 = *(void *)(v0 + 320);
    return v17(boxed_opaque_existential_1, v6, v1, v2);
  }
  else
  {
    uint64_t v8 = *(uint64_t **)(v0 + 240);
    sub_191B004A8((long long *)(v0 + 16), v0 + 144);
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 176);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 144), v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    *(void *)(v0 + 504) = v11;
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 144), v12);
    uint64_t v14 = *v8;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 16)
                                                                                       + **(int **)(v13 + 16));
    id v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v15;
    void *v15 = v0;
    v15[1] = sub_191B0F34C;
    uint64_t v16 = *(void *)(v0 + 320);
    return v18(v0 + 64, v16, v11, v14, v12, v13);
  }
}

uint64_t sub_191B0F34C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v5 = sub_191B0F640;
  }
  else {
    uint64_t v5 = sub_191B0F5C4;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B0F488()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v5 = sub_191B0FEF4;
  }
  else {
    uint64_t v5 = sub_191B0FE80;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B0F5C4()
{
  uint64_t v1 = *(void **)(v0 + 504);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return MEMORY[0x1F4188298](sub_191B0F6D8, 0, 0);
}

uint64_t sub_191B0F640()
{
  uint64_t v1 = (void *)v0[63];
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
  swift_bridgeObjectRelease();
  v0[68] = v0[65];
  return MEMORY[0x1F4188298](sub_191B0FD0C, 0, 0);
}

uint64_t sub_191B0F6D8()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v2);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = (char *)swift_task_alloc();
  (*(void (**)(char *, void *, uint64_t))(v4 + 16))(v5, v3, v2);
  ControlTemplateType.init<A>(_:)(v5, v2, v1);
  swift_task_dealloc();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 464);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_191B40BDC(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 464));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_191B40BDC(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  uint64_t v11 = *(void *)(v0 + 320);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v15 = *(void *)(v0 + 264);
  uint64_t v14 = *(void *)(v0 + 272);
  *(void *)(v7 + 16) = v9 + 1;
  sub_191B169FC(v14, v7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v9, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
  v10(v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  unint64_t v16 = *(void *)(v13 + 8);
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v17 > 0)
    {
LABEL_7:
      *(void *)(v0 + 464) = v7;
      sub_191B3CC80(v17 - 1);
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = *(void **)(v0 + 296);
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x1E4FBC860];
        *uint64_t v19 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        v19[1] = v20;
        swift_bridgeObjectRelease();
        v19[2] = v20;
      }
      id v21 = (uint64_t (*)())(*(uint64_t (**)(void, void, void))(v0 + 424))(*(void *)(v0 + 328), *(void *)(v0 + 296) + *(int *)(v0 + 60), *(void *)(v0 + 304));
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_191CF6018();
        id v21 = (uint64_t (*)())swift_bridgeObjectRelease();
        if (!v24) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v24 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v24) {
          goto LABEL_20;
        }
      }
      if (v24 < 1)
      {
        __break(1u);
        return MEMORY[0x1F4188298](v21, v22, v23);
      }
      for (uint64_t i = 0; i != v24; ++i)
      {
        if ((v16 & 0xC000000000000001) != 0)
        {
          uint64_t v26 = MEMORY[0x192FE4B60](i, v16);
        }
        else
        {
          uint64_t v26 = *(void *)(v16 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(void))(**(void **)(v26 + 16) + 112))(*(void *)(v0 + 328));
        swift_release();
      }
LABEL_20:
      uint64_t v27 = *(void *)(v0 + 328);
      uint64_t v28 = *(void *)(v0 + 304);
      uint64_t v29 = *(void *)(v0 + 312);
      uint64_t v30 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      unint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
      v31(v30, v27, v28);
      char v32 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
      *(void *)(v0 + 472) = v32;
      v32(v30, 0, 1, v28);
      int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28);
      uint64_t v34 = *(void *)(v0 + 456);
      if (v33 == 1) {
        goto LABEL_21;
      }
      v31(*(void *)(v0 + 320), *(void *)(v0 + 280), *(void *)(v0 + 304));
      if (v34)
      {
        swift_retain();
        sub_191CF4DB8();
        unsigned int v52 = v42;
        unsigned int v54 = v43;
        unsigned int v51 = v44;
        unsigned int v53 = v45;
        swift_release();
        v46.i64[0] = v52;
        v46.i64[1] = v51;
        int8x16_t v47 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)__PAIR64__(v53, v54), 0x20uLL), v46);
      }
      else
      {
        int8x16_t v47 = 0uLL;
      }
      BOOL v48 = *(void *)(v0 + 456) == 0;
      *(int8x16_t *)(v0 + 208) = v47;
      *(unsigned char *)(v0 + 224) = v48;
      sub_191B163D4();
      sub_191CF4078();
      sub_191CF5698();
      *(void *)(v0 + 480) = sub_191CF5688();
      uint64_t v49 = sub_191CF5648();
      uint64_t v23 = v50;
      *(void *)(v0 + 488) = v49;
      *(void *)(v0 + 496) = v50;
      id v21 = sub_191B0F05C;
      uint64_t v22 = v49;
      return MEMORY[0x1F4188298](v21, v22, v23);
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17 > 0) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 472))(*(void *)(v0 + 280), 1, 1, *(void *)(v0 + 304));
LABEL_21:
  uint64_t v35 = *(void *)(v0 + 400);
  uint64_t v36 = *(void *)(v0 + 352);
  uint64_t v37 = *(void *)(v0 + 296);
  uint64_t v38 = *(void *)(v0 + 232);
  swift_release();
  swift_release();
  sub_191B17354(v37, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_191B17354(v36, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_191B169FC(v35, v38, type metadata accessor for ControlArchiveStorageMetadata);
  uint64_t v39 = type metadata accessor for ControlArchiveStorage(0);
  *(void *)(v38 + *(int *)(v39 + 20)) = v7;
  *(_DWORD *)(v38 + *(int *)(v39 + 24)) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_191B0FD0C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[40];
  uint64_t v6 = v0[37];
  uint64_t v5 = v0[38];
  swift_release();
  swift_release();
  v1(v4, v5);
  sub_191B17354(v6, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_191B17354(v3, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_191B17354(v2, type metadata accessor for ControlArchiveStorageMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_191B0FE80()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return MEMORY[0x1F4188298](sub_191B0F6D8, 0, 0);
}

uint64_t sub_191B0FEF4()
{
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 544) = *(void *)(v0 + 536);
  return MEMORY[0x1F4188298](sub_191B0FD0C, 0, 0);
}

uint64_t sub_191B0FF90(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_191B1006C;
  return v6(a1);
}

uint64_t sub_191B1006C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_191B10164(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_191B10190(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191B101B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = type metadata accessor for TestingNilDescriptorQuerying();
  uint64_t v24 = &off_1EE2A27B8;
  *(void *)&long long v22 = a4;
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions) = 0;
  uint64_t v10 = MEMORY[0x1E4FBC868];
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion) = 2;
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing) = 0;
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes) = MEMORY[0x1E4FBC860];
  uint64_t v11 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  uint64_t v12 = sub_191CF4058();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily) = v10;
  uint64_t v13 = OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_allowedImageTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B030);
  uint64_t v14 = sub_191CF3738();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_191CF8440;
  sub_191CF3728();
  sub_191CF36F8();
  sub_191CF3718();
  sub_191CF3708();
  uint64_t v17 = sub_191BA73F4(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(a6 + v13) = v17;
  uint64_t v18 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType;
  sub_191CF36F8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  sub_191B169FC(a2, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(void))type metadata accessor for BundleStub);
  *(void *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion) = a1;
  *(unsigned char *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode) = a3;
  sub_191B015B0(a5, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1EB449FB8);
  sub_191B004A8(&v22, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  return a6;
}

uint64_t sub_191B1049C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v6 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_191AFB9FC(0, v10, 0);
    uint64_t v11 = v20;
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = *(void *)(v7 + 72);
    while (1)
    {
      sub_191B04CD8(v13, v18, v19, (uint64_t)v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v20 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_191AFB9FC(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v20;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_191B169FC((uint64_t)v9, v11 + v12 + v16 * v14, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      v13 += v14;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_191B10638(uint64_t a1, void *a2, void *a3)
{
  id v36 = a2;
  id v37 = a3;
  uint64_t v5 = (int *)type metadata accessor for ViewableTimelineEntry();
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v33[1] = v3;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_191AFB9FC(0, v9, 0);
    unint64_t v35 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = a1 + v35;
    uint64_t v34 = *(void *)(v6 + 72);
    do
    {
      int64_t v38 = v9;
      uint64_t v12 = *(void *)(v11 + v5[5]);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v14 = swift_getKeyPath();
      swift_retain();
      id v15 = v36;
      id v16 = v37;
      id v17 = objc_msgSend(v15, sel_family);
      uint64_t v18 = sub_191CF3178();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v11, v18);
      uint64_t v39 = v12;
      id v40 = v15;
      id v41 = v16;
      id v42 = v17;
      uint64_t v43 = KeyPath;
      char v44 = 0;
      uint64_t v45 = v14;
      uint64_t v46 = 0;
      char v47 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A318);
      sub_191B16918();
      uint64_t v19 = sub_191CF5038();
      uint64_t v20 = (uint64_t *)(v11 + v5[6]);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      LOBYTE(v17) = *((unsigned char *)v20 + 16);
      sub_191B01614(v11 + v5[7], (uint64_t)&v8[v5[7]], &qword_1EB44A180);
      uint64_t v23 = (uint64_t *)(v11 + v5[8]);
      uint64_t v24 = *v23;
      unint64_t v25 = v23[1];
      *(void *)&v8[v5[5]] = v19;
      uint64_t v26 = &v8[v5[6]];
      *(void *)uint64_t v26 = v21;
      *((void *)v26 + 1) = v22;
      v26[16] = (char)v17;
      uint64_t v27 = (uint64_t *)&v8[v5[8]];
      *uint64_t v27 = v24;
      v27[1] = v25;
      uint64_t v10 = v48;
      sub_191B169E8(v24, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFB9FC(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v48;
      }
      unint64_t v29 = *(void *)(v10 + 16);
      unint64_t v28 = *(void *)(v10 + 24);
      int64_t v30 = v38;
      if (v29 >= v28 >> 1)
      {
        sub_191AFB9FC(v28 > 1, v29 + 1, 1);
        uint64_t v10 = v48;
      }
      *(void *)(v10 + 16) = v29 + 1;
      uint64_t v31 = v34;
      sub_191B169FC((uint64_t)v8, v10 + v35 + v29 * v34, (uint64_t (*)(void))type metadata accessor for ViewableTimelineEntry);
      v11 += v31;
      int64_t v9 = v30 - 1;
    }
    while (v9);
  }
  return v10;
}

id sub_191B10924(void *a1)
{
  uint64_t v12 = sub_191CF5A08();
  uint64_t v3 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF59E8();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_191CF51C8();
  MEMORY[0x1F4188790](v7 - 8);
  *(void *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_previewAgent] = 0;
  *(void *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_urlHandlers] = MEMORY[0x1E4FBC870];
  *(void *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_xpcConnection] = a1;
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  uint64_t v8 = v1;
  id v9 = a1;
  sub_191CF51B8();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_191B17414(&qword_1EB44C5D0, 255, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C5C0);
  sub_191B1745C(&qword_1EB44C5C8, &qword_1EB44C5C0);
  sub_191CF5C98();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC68], v12);
  *(void *)&v8[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject__queue] = sub_191CF5A38();

  uint64_t v10 = (objc_class *)type metadata accessor for WidgetExtensionXPCServer.ExportedObject();
  v13.receiver = v8;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_191B10BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5168();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v37 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_191CF51C8();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v35 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF32C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_191CF3858();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB44CCE0);
  objc_super v13 = sub_191CF3838();
  os_log_type_t v14 = sub_191CF5948();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v5;
    uint64_t v16 = v15;
    uint64_t v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v39 = sub_191C5C36C(0xD000000000000022, 0x8000000191D0D950, aBlock);
    uint64_t v33 = a1;
    sub_191CF5C08();
    *(_WORD *)(v16 + 12) = 2082;
    v31[1] = v16 + 14;
    sub_191CF3268();
    sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
    uint64_t v17 = sub_191CF62C8();
    uint64_t v18 = v9;
    uint64_t v19 = a2;
    uint64_t v20 = v4;
    unint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v8);
    uint64_t v39 = sub_191C5C36C(v17, v22, aBlock);
    a1 = v33;
    sub_191CF5C08();
    uint64_t v4 = v20;
    a2 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v13, v14, "=+= %{public}s - locale: %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v23, -1, -1);
    uint64_t v24 = v16;
    uint64_t v5 = v34;
    MEMORY[0x192FE5F00](v24, -1, -1);
  }

  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  unint64_t v25 = (void *)sub_191CF5A18();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = a2;
  aBlock[4] = (uint64_t)sub_191B1740C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_191C2AD74;
  aBlock[3] = (uint64_t)&block_descriptor_213;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unint64_t v28 = v35;
  sub_191CF5188();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  unint64_t v29 = v37;
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v28, v29, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v28, v38);
}

uint64_t sub_191B11150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5168();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v37 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_191CF51C8();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v35 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF32C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_191CF3858();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB44CCE0);
  objc_super v13 = sub_191CF3838();
  os_log_type_t v14 = sub_191CF5948();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v5;
    uint64_t v16 = v15;
    uint64_t v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v39 = sub_191C5C36C(0xD000000000000025, 0x8000000191D0D920, aBlock);
    uint64_t v33 = a1;
    sub_191CF5C08();
    *(_WORD *)(v16 + 12) = 2082;
    v31[1] = v16 + 14;
    sub_191CF3268();
    sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
    uint64_t v17 = sub_191CF62C8();
    uint64_t v18 = v9;
    uint64_t v19 = a2;
    uint64_t v20 = v4;
    unint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v8);
    uint64_t v39 = sub_191C5C36C(v17, v22, aBlock);
    a1 = v33;
    sub_191CF5C08();
    uint64_t v4 = v20;
    a2 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v13, v14, "=+= %{public}s - locale: %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v23, -1, -1);
    uint64_t v24 = v16;
    uint64_t v5 = v34;
    MEMORY[0x192FE5F00](v24, -1, -1);
  }

  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  unint64_t v25 = (void *)sub_191CF5A18();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = a2;
  aBlock[4] = (uint64_t)sub_191B173FC;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_191C2AD74;
  aBlock[3] = (uint64_t)&block_descriptor_204;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unint64_t v28 = v35;
  sub_191CF5188();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  unint64_t v29 = v37;
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v28, v29, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v28, v38);
}

uint64_t sub_191B116C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return MEMORY[0x1F4183BA0]();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v4 = sub_191CF53A8();
  if (v5) {
    unint64_t v4 = 15;
  }
  if (4 * v3 < v4 >> 14) {
    goto LABEL_12;
  }

  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_191B11788(void *a1)
{
  return sub_191B16D20(a1, &qword_1E92E1198, (uint64_t)qword_1E92F24A8);
}

uint64_t sub_191B117AC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_191B117E8(uint64_t a1)
{
  return sub_191B16170(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_191B0DDB4);
}

uint64_t sub_191B11800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v4 = sub_191CF5168();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_191CF51C8();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  BOOL v63 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_191CF37A8();
  uint64_t v62 = *(void *)(v70 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v70);
  uint64_t v58 = v8;
  unsigned int v59 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v55 - v9;
  uint64_t v10 = sub_191CF32C8();
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_191CF31D8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191CF31C8();
  uint64_t v17 = sub_191CF3188();
  unint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_191B116C8(6, v17, v19);
  swift_bridgeObjectRelease();
  sub_191CF5BE8();
  swift_bridgeObjectRelease();
  uint64_t aBlock = 2976880;
  unint64_t v73 = 0xE300000000000000;
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t v20 = aBlock;
  unint64_t v21 = v73;
  if (qword_1EB44AD60 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_191CF3858();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB44CB58);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_191CF3838();
  os_log_type_t v24 = sub_191CF5948();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v57 = v20;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v55 = a1;
    uint64_t v28 = v27;
    uint64_t aBlock = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_191C5C36C(v20, v21, &aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2082;
    sub_191CF3268();
    sub_191B17414(&qword_1EB44C5B8, 255, MEMORY[0x1E4F27A78]);
    uint64_t v29 = sub_191CF62C8();
    uint64_t v30 = v10;
    unint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v30);
    uint64_t v71 = sub_191C5C36C(v29, v32, &aBlock);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v23, v24, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    uint64_t v33 = v28;
    a1 = v55;
    MEMORY[0x192FE5F00](v33, -1, -1);
    MEMORY[0x192FE5F00](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1EB44B6D0 != -1) {
    swift_once();
  }
  id v34 = (id)qword_1EB44CBF0;
  unint64_t v35 = v69;
  sub_191CF3788();
  sub_191CF5A68();
  sub_191CF3768();
  type metadata accessor for UnfairLock();
  uint64_t v36 = swift_allocObject();
  id v37 = (_DWORD *)swift_slowAlloc();
  *id v37 = 0;
  *(void *)(v36 + 16) = v37;
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 0;
  uint64_t v39 = v38;
  uint64_t v40 = v62;
  id v41 = v59;
  uint64_t v42 = v70;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v35, v70);
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v44 = (v58 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = v36;
  *((void *)v45 + 3) = v39;
  uint64_t v56 = v39;
  *((void *)v45 + 4) = v57;
  *((void *)v45 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v45[v43], v41, v42);
  uint64_t v46 = &v45[v44];
  uint64_t v47 = v61;
  *(void *)uint64_t v46 = v60;
  *((void *)v46 + 1) = v47;
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v48 = (void *)sub_191CF5A18();
  uint64_t v49 = (void *)swift_allocObject();
  v49[2] = a1;
  v49[3] = sub_191B171D8;
  unsigned char v49[4] = v45;
  uint64_t v76 = sub_191B172C0;
  unsigned int v77 = v49;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v73 = 1107296256;
  uint64_t v74 = sub_191C2AD74;
  unsigned int v75 = &block_descriptor_187;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  unsigned int v51 = v63;
  sub_191CF5188();
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  unsigned int v52 = v65;
  uint64_t v53 = v68;
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v51, v52, v50);
  _Block_release(v50);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v66);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v69, v70);
  return swift_release();
}

id sub_191B12114(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = v2;
  v31[4] = &protocol witness table for WidgetViewCollection;
  v31[0] = a1;
  uint64_t v6 = self;
  swift_retain();
  id result = objc_msgSend(v6, sel_sharedInstance);
  if (result)
  {
    uint64_t v8 = result;
    unsigned int v9 = objc_msgSend(result, sel_isInternalInstall);

    if (v9)
    {
      id v10 = objc_msgSend(self, sel_processInfo);
      id v11 = objc_msgSend(v10, sel_environment);

      uint64_t v12 = sub_191CF5248();
      if (*(void *)(v12 + 16))
      {
        sub_191B1CB2C(0xD000000000000011, 0x8000000191D0D750);
        char v14 = v13;
        swift_bridgeObjectRelease();
        if (v14)
        {
          if (qword_1EB44BA38 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v15 = qword_1EB44BA48;
          sub_191B172EC((uint64_t)a1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BundleStub);
          type metadata accessor for TestingNilDescriptorQuerying();
          uint64_t v16 = swift_allocObject();
          type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
          long long v28 = 0u;
          long long v29 = 0u;
          uint64_t v30 = 0;
          uint64_t v17 = swift_allocObject();
          uint64_t v18 = sub_191B101B8(v15, (uint64_t)v5, 0, v16, (uint64_t)&v28, v17);
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v19 = type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    uint64_t v20 = __swift_project_boxed_opaque_existential_1(v31, v2);
    unint64_t v21 = off_1EE29BC48;
    *((void *)&v29 + 1) = v2;
    uint64_t v30 = off_1EE29BC48;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v2 - 8) + 16);
    uint64_t v24 = v23(boxed_opaque_existential_1, v20, v2);
    MEMORY[0x1F4188790](v24);
    uint64_t v26 = (char *)&v27 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    v23((uint64_t *)v26, boxed_opaque_existential_1, v2);
    uint64_t v18 = sub_191C19A3C((uint64_t)v26, v19, v2, (uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return (id)v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B12474(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 73) = a2;
  *(void *)(v2 + 552) = a1;
  type metadata accessor for TimelineReloadPolicy();
  *(void *)(v2 + 560) = swift_task_alloc();
  *(void *)(v2 + 568) = type metadata accessor for ViewSource(0);
  *(void *)(v2 + 576) = swift_task_alloc();
  *(void *)(v2 + 584) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BB00);
  *(void *)(v2 + 592) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for WidgetDescriptor(0);
  *(void *)(v2 + 600) = v3;
  *(void *)(v2 + 608) = *(void *)(v3 - 8);
  *(void *)(v2 + 616) = swift_task_alloc();
  uint64_t v4 = sub_191CF3858();
  *(void *)(v2 + 624) = v4;
  *(void *)(v2 + 632) = *(void *)(v4 - 8);
  *(void *)(v2 + 640) = swift_task_alloc();
  sub_191CF5698();
  *(void *)(v2 + 648) = sub_191CF5688();
  uint64_t v6 = sub_191CF5648();
  *(void *)(v2 + 656) = v6;
  *(void *)(v2 + 664) = v5;
  return MEMORY[0x1F4188298](sub_191B12668, v6, v5);
}

uint64_t sub_191B12668()
{
  uint64_t v113 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 552) + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  *(void *)(v0 + 672) = v1;
  id v2 = objc_msgSend(v1, sel_intentReference);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_intent);
  }
  else
  {
    id v4 = 0;
  }
  *(void *)(v0 + 680) = v4;
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    if (qword_1EB449B38 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1EB44C7B0;
  }
  else
  {
    if (qword_1EB449E40 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1EB44C7E8;
  }
  uint64_t v6 = *(void *)(v0 + 640);
  uint64_t v7 = *(void *)(v0 + 632);
  uint64_t v8 = *(void *)(v0 + 624);
  uint64_t v9 = *(void *)(v0 + 552);
  uint64_t v10 = __swift_project_value_buffer(v8, (uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v10, v8);
  id v11 = *(void **)(v9 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  *(void *)(v0 + 688) = v11;
  uint64_t KeyPath = swift_getKeyPath();
  id v13 = v11;
  unint64_t v14 = sub_191AFA438(KeyPath);
  swift_release();

  if (!v14) {
    goto LABEL_55;
  }
  uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFF8);
  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (!v92)
  {
LABEL_54:
    swift_bridgeObjectRelease();
LABEL_55:
    swift_release();
    uint64_t v47 = *(void *)(v0 + 640);
    uint64_t v48 = *(void *)(v0 + 632);
    uint64_t v49 = *(void *)(v0 + 624);
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
    uint64_t v93 = sub_191CF5338();
    sub_191BDA6B4(v93, v94, 1002, 0, 0xD000000000000019, 0x8000000191D0D680);
    swift_willThrow();

    goto LABEL_56;
  }
LABEL_14:
  id v101 = v4;
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x192FE4B60](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_62;
    }
    id v16 = *(id *)(v14 + 32);
  }
  uint64_t v99 = v13;
  uint64_t v100 = v16;
  *(void *)(v0 + 696) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v1, sel_family), &v108);
  if (!(void)xmmword_1EB44CC98)
  {
    __break(1u);
    return MEMORY[0x1F41880D0](v17, v18, v19, v20, v21, v22);
  }
  uint64_t v23 = v1;
  char v97 = v108;
  uint64_t v24 = *(void *)(v0 + 608);
  uint64_t v104 = *(void *)(v0 + 600);
  uint64_t v25 = *(void *)(v0 + 592);
  uint64_t v26 = qword_1EB44CCA8;
  uint64_t v27 = *(void *)xmmword_1EB44CC98;
  *(void *)(v0 + 536) = xmmword_1EB44CC98;
  uint64_t v28 = *(void *)(v26 + 8);
  long long v29 = *(void (**)(void *, uint64_t, uint64_t))(v28 + 8);
  swift_retain();
  int v98 = v23;
  v29(v23, v27, v28);
  swift_release();
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v104);
  uint64_t v31 = *(void *)(v0 + 592);
  if (v30 == 1)
  {
    swift_release();
    sub_191B01770(v31, (uint64_t *)&unk_1EB44BB00);
    id v4 = v100;
    uint64_t v15 = v101;
    goto LABEL_29;
  }
  uint64_t v32 = *(void *)(v0 + 616);
  uint64_t v33 = *(void *)(v0 + 584);
  sub_191B169FC(*(void *)(v0 + 592), v32, type metadata accessor for WidgetDescriptor);
  sub_191B172EC(v32, v33, type metadata accessor for ViewSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *(void *)(v0 + 584);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v36 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
    else
    {
      sub_191B17354(*(void *)(v0 + 584), type metadata accessor for ViewSource);
    }
    id v4 = v100;
    uint64_t v15 = v101;
    uint64_t v46 = *(void *)(v0 + 616);
    swift_release();
    sub_191B17354(v46, type metadata accessor for WidgetDescriptor);
LABEL_29:
    if (qword_1EB4499B8 == -1)
    {
LABEL_30:
      uint64_t v47 = *(void *)(v0 + 640);
      uint64_t v48 = *(void *)(v0 + 632);
      uint64_t v49 = *(void *)(v0 + 624);
      (id)qword_1EB44C7A0;
      swift_willThrow();

LABEL_56:
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
LABEL_57:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v95 = *(uint64_t (**)(void))(v0 + 8);
      return v95();
    }
LABEL_62:
    swift_once();
    goto LABEL_30;
  }
  uint64_t v37 = v0 + 408;
  uint64_t v96 = *(void *)(v0 + 616);
  uint64_t v38 = *(void *)(v0 + 584);
  uint64_t v39 = *(void *)(v0 + 576);
  uint64_t v40 = *(void *)(v38 + 32);
  id v41 = *(void (**)(uint64_t))(v38 + 48);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_191B16F2C(v40);
  uint64_t v42 = swift_release();
  v41(v42);
  swift_release();
  sub_191B004A8((long long *)(v0 + 208), v0 + 408);
  sub_191B172EC(v96, v39, type metadata accessor for ViewSource);
  int v43 = swift_getEnumCaseMultiPayload();
  if (v43)
  {
    if (v43 == 1)
    {
      uint64_t v44 = *(void *)(v0 + 576);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB4498A8);
      swift_release();
      swift_release();
      uint64_t v45 = sub_191CF33C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    }
    else
    {
      sub_191B17354(*(void *)(v0 + 576), type metadata accessor for ViewSource);
    }
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 576);
    uint64_t v51 = *(void *)(v50 + 24);
    uint64_t v52 = *(void *)(v50 + 32);
    swift_bridgeObjectRelease();
    sub_191B16F2C(v52);
    swift_release();
    if (v51)
    {
      swift_bridgeObjectRelease();
      if (!v101)
      {
        swift_release();
        if (qword_1E92E1860 != -1) {
          swift_once();
        }
        uint64_t v53 = *(void *)(v0 + 640);
        uint64_t v54 = *(void *)(v0 + 632);
        uint64_t v55 = *(void *)(v0 + 624);
        uint64_t v56 = *(void *)(v0 + 616);
        (id)qword_1E92F24C0;
        swift_willThrow();

        sub_191B17354(v56, type metadata accessor for WidgetDescriptor);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
        __swift_destroy_boxed_opaque_existential_1(v0 + 408);
        goto LABEL_57;
      }
    }
  }
  uint64_t v57 = (_OWORD *)(v0 + 16);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v58 = (long long *)(v0 + 368);
  __swift_project_value_buffer(*(void *)(v0 + 624), (uint64_t)qword_1EB44CCE0);
  sub_191AFEE28(v0 + 408, v0 + 248);
  unsigned int v59 = sub_191CF3838();
  os_log_type_t v60 = sub_191CF5918();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    uint64_t v62 = v108;
    *(_DWORD *)uint64_t v61 = 136446210;
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 248), *(void *)(v0 + 272));
    uint64_t v63 = sub_191CF62C8();
    *(void *)(v0 + 544) = sub_191C5C36C(v63, v64, &v108);
    uint64_t v58 = (long long *)(v0 + 368);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 248);
    _os_log_impl(&dword_191AF4000, v59, v60, "reload: %{public}s", v61, 0xCu);
    swift_arrayDestroy();
    uint64_t v65 = v62;
    uint64_t v37 = v0 + 408;
    MEMORY[0x192FE5F00](v65, -1, -1);
    uint64_t v66 = v61;
    uint64_t v57 = (_OWORD *)(v0 + 16);
    MEMORY[0x192FE5F00](v66, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 248);
  }

  char v67 = *(unsigned char *)(v0 + 73);
  uint64_t v68 = *(void *)(v0 + 552);
  uint64_t v108 = (uint64_t)v99;
  id v69 = v99;
  TimelineProviderContext.EnvironmentVariants.init(_:)((void **)&v108, &v105);
  uint64_t v108 = v105;
  long long v109 = v106;
  uint64_t v110 = v107;
  char v111 = v97;
  v112[0] = *(unsigned char *)(v68 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
  TimelineProviderContext.init(environmentVariants:family:isPreview:archiveVersion:)((uint64_t)&v108, &v111, v67, v112, (uint64_t)v57);
  sub_191AFEE28(v37, v0 + 328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AE30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449E10);
  if (!swift_dynamicCast())
  {
    uint64_t v81 = (uint64_t)v58;
    uint64_t v82 = *(void *)(v0 + 640);
    char v83 = *(unsigned char *)(v0 + 73);
    *(_OWORD *)uint64_t v81 = 0u;
    *(_OWORD *)(v81 + 16) = 0u;
    *(void *)(v81 + 32) = 0;
    sub_191B01770(v81, &qword_1EB449E18);
    uint64_t v84 = swift_task_alloc();
    uint64_t v85 = v37;
    uint64_t v86 = v84;
    *(void *)(v0 + 720) = v84;
    *(unsigned char *)(v84 + 16) = v83;
    *(void *)(v84 + 24) = v85;
    *(void *)(v84 + 32) = v98;
    *(void *)(v84 + 40) = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499B0);
    uint64_t v87 = swift_allocObject();
    *(void *)(v0 + 728) = v87;
    *(_DWORD *)(v87 + 20) = 0;
    *(unsigned char *)(v87 + 16) = 0;
    uint64_t v88 = (void *)swift_task_alloc();
    *(void *)(v0 + 736) = v88;
    v88[2] = v87;
    v88[3] = v82;
    v88[4] = sub_191B1689C;
    v88[5] = v86;
    uint64_t v89 = (void *)swift_task_alloc();
    *(void *)(v0 + 744) = v89;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499A8);
    *uint64_t v89 = v0;
    v89[1] = sub_191B13F50;
    unint64_t v18 = 0xD000000000000029;
    unint64_t v19 = 0x8000000191D0D6A0;
    uint64_t v20 = sub_191B168AC;
    uint64_t v17 = v0 + 528;
    unint64_t v21 = v88;
    return MEMORY[0x1F41880D0](v17, v18, v19, v20, v21, v22);
  }
  int v70 = *(unsigned __int8 *)(v0 + 73);
  sub_191B004A8(v58, v0 + 288);
  uint64_t v71 = *(void *)(v0 + 312);
  uint64_t v72 = *(void *)(v0 + 320);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), v71);
  if (v70 == 1)
  {
    long long v73 = v57[1];
    *(_OWORD *)(v0 + 80) = *v57;
    *(_OWORD *)(v0 + 96) = v73;
    *(_OWORD *)(v0 + 112) = v57[2];
    *(_OWORD *)(v0 + 121) = *(_OWORD *)((char *)v57 + 41);
    uint64_t v102 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 + 16) + **(int **)(v72 + 16));
    uint64_t v74 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_191B133F8;
    unsigned int v75 = v98;
    uint64_t v76 = v0 + 80;
    uint64_t v77 = v71;
    uint64_t v78 = v72;
    uint64_t v79 = v102;
  }
  else
  {
    long long v90 = v57[1];
    *(_OWORD *)(v0 + 144) = *v57;
    *(_OWORD *)(v0 + 160) = v90;
    *(_OWORD *)(v0 + 176) = v57[2];
    *(_OWORD *)(v0 + 185) = *(_OWORD *)((char *)v57 + 41);
    uint64_t v103 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 + 24) + **(int **)(v72 + 24));
    unint64_t v91 = (void *)swift_task_alloc();
    *(void *)(v0 + 712) = v91;
    *unint64_t v91 = v0;
    v91[1] = sub_191B139A4;
    unsigned int v75 = v98;
    uint64_t v76 = v0 + 144;
    uint64_t v77 = v71;
    uint64_t v78 = v72;
    uint64_t v79 = v103;
  }
  return v79(v75, v76, v77, v78);
}

uint64_t sub_191B133F8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 488) = v1;
  *(void *)(v3 + 496) = a1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 664);
  uint64_t v5 = *(void *)(v2 + 656);
  return MEMORY[0x1F4188298](sub_191B1351C, v5, v4);
}

uint64_t sub_191B1351C()
{
  id v41 = v0;
  uint64_t v38 = (id *)(v0 + 2);
  uint64_t v39 = (uint64_t)(v0 + 51);
  uint64_t v1 = v0[62];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 36));
  if (v1)
  {
    swift_retain();
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_191AF8920(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t v5 = (void *)v0[87];
      uint64_t v6 = (void *)v0[86];
      uint64_t v7 = (void *)v0[84];
      uint64_t v8 = v0[70];
      uint64_t v36 = v0[69];
      uint64_t v9 = swift_retain();
      size_t v10 = sub_191AFDC70(v9);
      swift_release();
      id v11 = v7;
      id v12 = v5;
      id v13 = (void *)sub_191B10638(v10, v11, v12);

      swift_release();
      uint64_t v40 = v6;
      sub_191B172EC(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v8, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
      uint64_t v14 = type metadata accessor for WidgetViewCollection();
      swift_allocObject();
      id v15 = v6;
      uint64_t v16 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v11, (uint64_t *)&v40, v13, v8, 1);
      uint64_t v17 = type metadata accessor for WidgetArchiver();
      v0[59] = v14;
      v0[60] = &protocol witness table for WidgetViewCollection;
      v0[56] = v16;
      unint64_t v18 = *(void **)(v36 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
      unint64_t v19 = (uint64_t *)swift_retain();
      id v20 = sub_191B12114(v19);
      sub_191C12358(v0 + 56, (uint64_t)v20, v17, v18);
      unint64_t v21 = (void *)v0[87];
      uint64_t v22 = (void *)v0[85];
      uint64_t v23 = v0[80];
      uint64_t v24 = v0[79];
      uint64_t v37 = v0[78];
      uint64_t v25 = v0[77];
      swift_release();

      sub_191B168B8(v38);
      swift_release();
      swift_release_n();
      sub_191B17354(v25, type metadata accessor for WidgetDescriptor);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v37);
      __swift_destroy_boxed_opaque_existential_1(v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 56));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = (uint64_t (*)(void))v0[1];
      goto LABEL_6;
    }
    swift_release();
  }
  uint64_t v26 = (void *)v0[87];
  uint64_t v27 = (void *)v0[85];
  uint64_t v28 = v0[80];
  uint64_t v29 = v0[79];
  uint64_t v30 = v0[78];
  uint64_t v31 = v0[77];
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  uint64_t v32 = sub_191CF5338();
  sub_191BDA6B4(v32, v33, 1101, 0, 0xD000000000000031, 0x8000000191D0D6D0);
  swift_willThrow();

  sub_191B168B8(v38);
  swift_release();
  sub_191B17354(v31, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  __swift_destroy_boxed_opaque_existential_1(v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v35();
}

uint64_t sub_191B139A4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 504) = v1;
  *(void *)(v3 + 512) = a1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 664);
  uint64_t v5 = *(void *)(v2 + 656);
  return MEMORY[0x1F4188298](sub_191B13AC8, v5, v4);
}

uint64_t sub_191B13AC8()
{
  id v41 = v0;
  uint64_t v38 = (id *)(v0 + 2);
  uint64_t v39 = (uint64_t)(v0 + 51);
  uint64_t v1 = v0[64];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 36));
  if (v1)
  {
    swift_retain();
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_191AF8920(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t v5 = (void *)v0[87];
      uint64_t v6 = (void *)v0[86];
      uint64_t v7 = (void *)v0[84];
      uint64_t v8 = v0[70];
      uint64_t v36 = v0[69];
      uint64_t v9 = swift_retain();
      size_t v10 = sub_191AFDC70(v9);
      swift_release();
      id v11 = v7;
      id v12 = v5;
      id v13 = (void *)sub_191B10638(v10, v11, v12);

      swift_release();
      uint64_t v40 = v6;
      sub_191B172EC(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v8, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
      uint64_t v14 = type metadata accessor for WidgetViewCollection();
      swift_allocObject();
      id v15 = v6;
      uint64_t v16 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v11, (uint64_t *)&v40, v13, v8, 1);
      uint64_t v17 = type metadata accessor for WidgetArchiver();
      v0[59] = v14;
      v0[60] = &protocol witness table for WidgetViewCollection;
      v0[56] = v16;
      unint64_t v18 = *(void **)(v36 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
      unint64_t v19 = (uint64_t *)swift_retain();
      id v20 = sub_191B12114(v19);
      sub_191C12358(v0 + 56, (uint64_t)v20, v17, v18);
      unint64_t v21 = (void *)v0[87];
      uint64_t v22 = (void *)v0[85];
      uint64_t v23 = v0[80];
      uint64_t v24 = v0[79];
      uint64_t v37 = v0[78];
      uint64_t v25 = v0[77];
      swift_release();

      sub_191B168B8(v38);
      swift_release();
      swift_release_n();
      sub_191B17354(v25, type metadata accessor for WidgetDescriptor);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v37);
      __swift_destroy_boxed_opaque_existential_1(v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 56));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = (uint64_t (*)(void))v0[1];
      goto LABEL_6;
    }
    swift_release();
  }
  uint64_t v26 = (void *)v0[87];
  uint64_t v27 = (void *)v0[85];
  uint64_t v28 = v0[80];
  uint64_t v29 = v0[79];
  uint64_t v30 = v0[78];
  uint64_t v31 = v0[77];
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  uint64_t v32 = sub_191CF5338();
  sub_191BDA6B4(v32, v33, 1101, 0, 0xD000000000000031, 0x8000000191D0D6D0);
  swift_willThrow();

  sub_191B168B8(v38);
  swift_release();
  sub_191B17354(v31, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  __swift_destroy_boxed_opaque_existential_1(v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v35();
}

uint64_t sub_191B13F50()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[94] = v1[66];
  swift_task_dealloc();
  uint64_t v2 = v1[83];
  uint64_t v3 = v1[82];
  return MEMORY[0x1F4188298](sub_191B140E8, v3, v2);
}

uint64_t sub_191B140E8()
{
  id v41 = v0;
  uint64_t v38 = (id *)(v0 + 2);
  uint64_t v39 = (uint64_t)(v0 + 51);
  swift_release();
  uint64_t v1 = v0[94];
  if (v1)
  {
    swift_retain();
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_191AF8920(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t v5 = (void *)v0[87];
      uint64_t v6 = (void *)v0[86];
      uint64_t v7 = (void *)v0[84];
      uint64_t v8 = v0[70];
      uint64_t v36 = v0[69];
      uint64_t v9 = swift_retain();
      size_t v10 = sub_191AFDC70(v9);
      swift_release();
      id v11 = v7;
      id v12 = v5;
      id v13 = (void *)sub_191B10638(v10, v11, v12);

      swift_release();
      uint64_t v40 = v6;
      sub_191B172EC(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v8, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
      uint64_t v14 = type metadata accessor for WidgetViewCollection();
      swift_allocObject();
      id v15 = v6;
      uint64_t v16 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v11, (uint64_t *)&v40, v13, v8, 1);
      uint64_t v17 = type metadata accessor for WidgetArchiver();
      v0[59] = v14;
      v0[60] = &protocol witness table for WidgetViewCollection;
      v0[56] = v16;
      unint64_t v18 = *(void **)(v36 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
      unint64_t v19 = (uint64_t *)swift_retain();
      id v20 = sub_191B12114(v19);
      sub_191C12358(v0 + 56, (uint64_t)v20, v17, v18);
      unint64_t v21 = (void *)v0[87];
      uint64_t v22 = (void *)v0[85];
      uint64_t v23 = v0[80];
      uint64_t v24 = v0[79];
      uint64_t v37 = v0[78];
      uint64_t v25 = v0[77];
      swift_release();

      sub_191B168B8(v38);
      swift_release();
      swift_release_n();
      sub_191B17354(v25, type metadata accessor for WidgetDescriptor);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v37);
      __swift_destroy_boxed_opaque_existential_1(v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 56));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = (uint64_t (*)(void))v0[1];
      goto LABEL_6;
    }
    swift_release();
  }
  uint64_t v26 = (void *)v0[87];
  uint64_t v27 = (void *)v0[85];
  uint64_t v28 = v0[80];
  uint64_t v29 = v0[79];
  uint64_t v30 = v0[78];
  uint64_t v31 = v0[77];
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C740);
  uint64_t v32 = sub_191CF5338();
  sub_191BDA6B4(v32, v33, 1101, 0, 0xD000000000000031, 0x8000000191D0D6D0);
  swift_willThrow();

  sub_191B168B8(v38);
  swift_release();
  sub_191B17354(v31, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  __swift_destroy_boxed_opaque_existential_1(v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v35();
}

void sub_191B14564(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedListener);
  id v3 = objc_msgSend(v2, sel_listenerEndpoint);

  uint64_t v4 = self;
  id v5 = objc_msgSend(self, sel_tokenForCurrentProcess);
  objc_msgSend(v5, sel_realToken);
  long long v10 = v13;
  long long v11 = v12;

  long long v12 = v11;
  long long v13 = v10;
  id v6 = objc_msgSend(v4, sel_if_dataWithAuditToken_, &v12);
  if (v6)
  {
    uint64_t v7 = sub_191CF30C8();
    unint64_t v9 = v8;

    id v6 = (id)sub_191CF30A8();
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, id, id, void))(a1 + 16))(a1, v3, v6, 0);

  sub_191B170C8(v7, v9);
}

uint64_t sub_191B146BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF5168();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_191CF51C8();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  long long v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
  long long v13 = (void *)sub_191CF5A18();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_191B16F44;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191C2AD74;
  aBlock[3] = &block_descriptor_162;
  id v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  sub_191CF5188();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
  sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
  sub_191CF5C98();
  MEMORY[0x192FE4790](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_191B149A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_191CF3858();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB44CCE0);
  uint64_t v11 = sub_191CF3838();
  os_log_type_t v12 = sub_191CF5948();
  if (os_log_type_enabled(v11, v12))
  {
    long long v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v13 = 0;
    _os_log_impl(&dword_191AF4000, v11, v12, "Attaching to preview agent.", v13, 2u);
    MEMORY[0x192FE5F00](v13, -1, -1);
  }

  uint64_t v14 = sub_191CF5378();
  id v15 = dlopen((const char *)(v14 + 32), 2);
  swift_release();
  if (v15)
  {
    id v16 = (uint64_t (*)(void *))dlsym(v15, "_initializePreviewAgent");
    if (v16)
    {
      uint64_t v17 = v16;
      if (a3)
      {
        swift_unknownObjectRetain();
        self;
        uint64_t v18 = (void *)swift_dynamicCastObjCClass();
        if (!v18) {
          swift_unknownObjectRelease();
        }
      }
      else
      {
        uint64_t v18 = 0;
      }
      uint64_t v25 = v17(v18);

      *(void *)(a4 + OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_previewAgent) = v25;
      swift_retain();
      swift_release();
      id v26 = objc_msgSend(self, sel_tokenForCurrentProcess);
      (*(void (**)(uint64_t, id))(a5 + 16))(a5, v26);
    }
    else
    {
      uint64_t v22 = sub_191CF3838();
      os_log_type_t v23 = sub_191CF5918();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_191AF4000, v22, v23, "Failed to find Preview Agent initialization function symbol", v24, 2u);
        MEMORY[0x192FE5F00](v24, -1, -1);
      }

      (*(void (**)(uint64_t, void))(a5 + 16))(a5, 0);
    }
    return dlclose(v15);
  }
  else
  {
    if (dlerror())
    {
      uint64_t v19 = sub_191CF53C8();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v21 = 0xED0000726F727265;
      uint64_t v19 = 0x206E776F6E6B6E75;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_191CF3838();
    os_log_type_t v29 = sub_191CF5918();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v31;
      *(_DWORD *)uint64_t v30 = 136446466;
      swift_bridgeObjectRetain();
      sub_191C5C36C(a1, a2, &v32);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_191C5C36C(v19, v21, &v32);
      sub_191CF5C08();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191AF4000, v28, v29, "Failed to open Preview Agent framework: %{public}s, %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v31, -1, -1);
      MEMORY[0x192FE5F00](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, void))(a5 + 16))(a5, 0);
  }
}

uint64_t sub_191B14E10(uint64_t a1)
{
  v1[26] = a1;
  sub_191CF5698();
  v1[27] = sub_191CF5688();
  uint64_t v3 = sub_191CF5648();
  v1[28] = v3;
  v1[29] = v2;
  return MEMORY[0x1F4188298](sub_191B14EA8, v3, v2);
}

void sub_191B14EA8()
{
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v1 = *(void *)(v0 + 208);
    uint64_t v2 = *((void *)&xmmword_1EB44CC98 + 1);
    uint64_t v3 = *(void *)xmmword_1EB44CC98;
    *(void *)(v0 + 200) = xmmword_1EB44CC98;
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
    swift_retain();
    sub_191C9E948(v4, v3, v2, (_OWORD *)(v0 + 16));
    swift_release();
    uint64_t v5 = sub_191CF34A8();
    sub_191B15E0C(v0 + 64, v0 + 112);
    if (*(unsigned char *)(v0 + 152))
    {
      swift_release();
      swift_release();
      if (qword_1E92E2330 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_191CF3858();
      __swift_project_value_buffer(v6, (uint64_t)qword_1E92F2508);
      uint64_t v7 = sub_191CF3838();
      os_log_type_t v8 = sub_191CF5938();
      if (os_log_type_enabled(v7, v8))
      {
        unint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v9 = 0;
        _os_log_impl(&dword_191AF4000, v7, v8, "ModifyControlStateRequest is unsupported in the API", v9, 2u);
        MEMORY[0x192FE5F00](v9, -1, -1);
      }

      sub_191B15E68(v0 + 16);
      uint64_t v10 = *(void (**)(void))(v0 + 8);
      v10();
    }
    else
    {
      sub_191B004A8((long long *)(v0 + 112), v0 + 160);
      uint64_t v11 = *(void *)(v0 + 184);
      uint64_t v12 = *(void *)(v0 + 192);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 160), v11);
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      *(void *)(v0 + 240) = v13;
      uint64_t v14 = *(void *)(v0 + 184);
      uint64_t v15 = *(void *)(v0 + 192);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 160), v14);
      uint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 32) + **(int **)(v15 + 32));
      id v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v16;
      *id v16 = v0;
      v16[1] = sub_191B151FC;
      v17(v5, v13, v14, v15);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191B151FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v5 = sub_191B153C8;
  }
  else {
    uint64_t v5 = sub_191B15338;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_191B15338()
{
  swift_release();
  sub_191B15E68(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191B153C8()
{
  swift_release();
  sub_191B15E68(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191B15458(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v4 = sub_191CF5168();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x1F4188790](v4);
  int v43 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_191CF51C8();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  id v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF37A8();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x1F4188790](v7);
  id v34 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF3858();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActivityArchiver();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v35 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v38 = (uint64_t)&v34 - v18;
  if ((void)xmmword_1EB44CC98)
  {
    uint64_t v48 = *(void **)xmmword_1EB44CC98;
    uint64_t v49 = (uint64_t (*)())qword_1EB44CCA8;
    aBlock[0] = xmmword_1EB44CC98;
    uint64_t v19 = qword_1E92E1198;
    id v20 = a1;
    swift_retain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v9, (uint64_t)qword_1E92F24A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
    sub_191CF37B8();
    *(void *)id v16 = v20;
    sub_191AFEE28((uint64_t)aBlock, (uint64_t)(v16 + 8));
    id v22 = v20;
    sub_191CF37C8();
    os_log_type_t v23 = v34;
    sub_191CF3788();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v16[*(int *)(v13 + 28)], v23, v37);
    uint64_t v24 = v38;
    sub_191B169FC((uint64_t)v16, v38, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    sub_191B016E0(0, (unint64_t *)&qword_1EB44C710);
    uint64_t v25 = (void *)sub_191CF5A18();
    sub_191B172EC(v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    unint64_t v26 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v27 = swift_allocObject();
    sub_191B169FC((uint64_t)v16, v27 + v26, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
    uint64_t v28 = (void *)(v27 + ((v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v29 = v40;
    *uint64_t v28 = v39;
    v28[1] = v29;
    uint64_t v49 = sub_191B15BEC;
    uint64_t v50 = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191C2AD74;
    uint64_t v48 = &block_descriptor;
    uint64_t v30 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v31 = v41;
    sub_191CF5188();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_191B17414((unint64_t *)&qword_1EB44C688, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C690);
    sub_191B1745C((unint64_t *)&qword_1EB44C698, &qword_1EB44C690);
    uint64_t v32 = v43;
    uint64_t v33 = v46;
    sub_191CF5C98();
    MEMORY[0x192FE4790](0, v31, v32, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v44);
    return sub_191B17354(v24, (uint64_t (*)(void))type metadata accessor for ActivityArchiver);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191B15A8C()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivityArchiver() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 1));
  uint64_t v3 = (char *)v2 + v1[8];
  uint64_t v4 = sub_191CF37D8();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v2 + v1[9];
  uint64_t v6 = sub_191CF37A8();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B15BEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivityArchiver() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_191B0DF20(v0 + v2, v3);
}

uint64_t sub_191B15C80(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_191B17A68;
  return sub_191B0C95C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_191B15D54(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191B0A348;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E92E2FD8 + dword_1E92E2FD8);
  return v6(a1, v4);
}

uint64_t sub_191B15E0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191B15E68(uint64_t a1)
{
  return a1;
}

uint64_t sub_191B15EC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191B0B62C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191B15F88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_191B15FE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191B1603C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_191B16094(uint64_t a1)
{
  return a1;
}

void sub_191B160E8(uint64_t a1)
{
  sub_191C6E180(a1, *(void *)(v1 + 16));
}

uint64_t sub_191B160F4(void *a1)
{
  return sub_191B08B18(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(void))(v1 + 40));
}

uint64_t objectdestroy_38Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16158(uint64_t a1)
{
  return sub_191B16170(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_191B08F24);
}

uint64_t sub_191B16170(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t objectdestroy_64Tm()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B161D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191B0A43C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191B162A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191B162D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_191B16304(uint64_t a1)
{
  return a1;
}

unint64_t sub_191B1632C()
{
  unint64_t result = qword_1EB44ACF8;
  if (!qword_1EB44ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ACF8);
  }
  return result;
}

unint64_t sub_191B16380()
{
  unint64_t result = qword_1E92E3020;
  if (!qword_1E92E3020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3020);
  }
  return result;
}

unint64_t sub_191B163D4()
{
  unint64_t result = qword_1E92E26D8;
  if (!qword_1E92E26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E26D8);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x192FE5F00);
  }
  return result;
}

unint64_t sub_191B1647C()
{
  unint64_t result = qword_1EB44B6A0;
  if (!qword_1EB44B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B6A0);
  }
  return result;
}

uint64_t sub_191B164D0()
{
  uint64_t v1 = sub_191CF3858();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_191CF37A8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16674(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_191CF3858() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_191CF37A8();
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_191B17A68;
  return sub_191B0689C(a1, v13, v12, v6, v7, v8, v1 + v4, v9);
}

unint64_t sub_191B16840()
{
  unint64_t result = qword_1EB449638[0];
  if (!qword_1EB449638[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB449638);
  }
  return result;
}

uint64_t sub_191B1689C(uint64_t a1, uint64_t a2)
{
  return sub_191B0714C(a1, a2, *(unsigned char *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(_OWORD **)(v2 + 40));
}

uint64_t sub_191B168AC(uint64_t a1)
{
  return sub_191B0733C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void (*)(uint64_t), uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

id *sub_191B168B8(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_191B16918()
{
  unint64_t result = qword_1EB44A310;
  if (!qword_1EB44A310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A318);
    sub_191B16994();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A310);
  }
  return result;
}

unint64_t sub_191B16994()
{
  unint64_t result = qword_1EB44A330;
  if (!qword_1EB44A330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A330);
  }
  return result;
}

uint64_t sub_191B169E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_191B15F88(a1, a2);
  }
  return a1;
}

uint64_t sub_191B169FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B16A64()
{
  uint64_t v1 = sub_191CF3858();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449960);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_191B16BC0(uint64_t a1)
{
  sub_191CF3858();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449960);
  unint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);

  sub_191B07570(a1, v3);
}

void sub_191B16C9C(unsigned char *a1@<X0>, char *a2@<X8>)
{
}

uint64_t objectdestroy_32Tm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16CFC(void *a1)
{
  return sub_191B16D20(a1, &qword_1EB449E40, (uint64_t)qword_1EB44C7E8);
}

uint64_t sub_191B16D20(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_191B0D9D8(a1, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t (**)(void *))(v3 + 40), *(void *)(v3 + 48), a2, a3);
}

uint64_t sub_191B16D5C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_191B16DAC(uint64_t a1)
{
  sub_191B05A74(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

uint64_t sub_191B16DE4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B16E1C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B16E6C()
{
  return sub_191B02F38(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_191B16E7C()
{
  return swift_deallocObject();
}

uint64_t sub_191B16E90()
{
  return sub_191B0349C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_191B16E9C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t objectdestroy_141Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16F20()
{
  return sub_191B03580(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_191B16F2C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_191B16F44()
{
  return sub_191B07740(*(char **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_158Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16F94(void *a1)
{
  return sub_191B07E2C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t objectdestroy_48Tm()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B16FF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_191B0A348;
  return sub_191B07F78(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_191B170C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_191B1603C(a1, a2);
  }
  return a1;
}

uint64_t sub_191B170DC()
{
  uint64_t v1 = sub_191CF37A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B171D8(void *a1)
{
  uint64_t v3 = *(void *)(sub_191CF37A8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  unint64_t v8 = v1[5];
  uint64_t v9 = *(uint64_t (**)(void))((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_191B03724(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_191B17280()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_191B172C0()
{
  sub_191B03CB8(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_191B172D4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_191B172E0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_191B172EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B17354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B173B4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_191B173C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_191B173FC()
{
  sub_191B02934(*(void (**)(void))(v0 + 16));
}

void sub_191B17404(uint64_t a1)
{
  sub_191B028B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_191B1740C()
{
  return sub_191B027C8(*(void *)(v0 + 16));
}

uint64_t sub_191B17414(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B1745C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B174AC()
{
  return sub_191B0243C();
}

uint64_t sub_191B174B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_191B174FC()
{
  sub_191B02044(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_191B17508(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v3 = *(unsigned char *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(unsigned char *)(a1 + 48) = v3;
  return a1;
}

uint64_t assignWithCopy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (a1 != a2)
  {
    uint64_t v4 = a2 + 8;
    sub_191B16304(a1 + 8);
    char v5 = *(unsigned char *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, v4);
    *(unsigned char *)(a1 + 48) = v5;
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (a1 != a2)
  {
    sub_191B16304(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource()
{
  return &type metadata for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource;
}

uint64_t initializeWithCopy for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    if (v4 == 1)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewSource.ProviderType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ControlViewSource.ProviderType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191B179A4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_191B179C4(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider()
{
  return &type metadata for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider;
}

uint64_t sub_191B17A6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_191B17A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_191B17A9C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_191CF5BC8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191B17BC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  unsigned int v12 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((((v11 + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v18 = (const void *)(((unint64_t)a2 + v10) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v16))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v17), v18, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v17, 0, 1, v16);
    }
    uint64_t v19 = (void *)(((((unint64_t)a1 + v10) & v17) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    id v20 = (void *)(((unint64_t)v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v21 = *(void *)v22;
    *(void *)(v21 + 8) = *(void *)(v22 + 8);
    *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
    *(unsigned char *)(v21 + 17) = *(unsigned char *)(v22 + 17);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191B17E48(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B17FA8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    uint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = (void *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(unsigned char *)(v20 + 17) = *(unsigned char *)(v21 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191B18184(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = (void *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(unsigned char *)(v20 + 17) = *(unsigned char *)(v21 + 17);
  return a1;
}

uint64_t sub_191B183E8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    size_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = (uint64_t)v10 + v17 + 7;
  uint64_t v19 = (void *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v18 = *v19;
  unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(unsigned char *)(v20 + 17) = *(unsigned char *)(v21 + 17);
  return a1;
}

uint64_t sub_191B185B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = (void *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(unsigned char *)(v20 + 17) = *(unsigned char *)(v21 + 17);
  return a1;
}

uint64_t sub_191B18814(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v6) {
    unsigned int v12 = v6;
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v10) {
    ++v14;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v5 + 64) + v13;
  uint64_t v16 = v14 + 7;
  if (v12 < a2)
  {
    unint64_t v17 = ((((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
    if (v17 <= 3) {
      unsigned int v18 = ((a2 - v12 + 0xFFFF) >> (8 * v17)) + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v18 < 0x100) {
      unsigned int v19 = 1;
    }
    if (v18 >= 2) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v17);
        if (!*((unsigned char *)a1 + v17)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v17);
        if (*(unsigned __int16 *)((char *)a1 + v17)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191B18AF8);
      case 4:
        int v21 = *(_DWORD *)((char *)a1 + v17);
        if (!v21) {
          break;
        }
LABEL_28:
        int v22 = (v21 - 1) << (8 * v17);
        if (v17 <= 3)
        {
          int v23 = *a1;
        }
        else
        {
          int v22 = 0;
          int v23 = *(_DWORD *)a1;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v6 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
    return v24(a1, v6, AssociatedTypeWitness);
  }
  unint64_t v26 = ((unint64_t)a1 + v15) & ~v13;
  if (v11 == v12)
  {
    if (v10 >= 2)
    {
      unsigned int v28 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v26);
      if (v28 >= 2) {
        return v28 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v27 = *(void *)(((((v16 + v26) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v27 >= 0xFFFFFFFF) {
    LODWORD(v27) = -1;
  }
  return (v27 + 1);
}

void sub_191B18B0C(unsigned int *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  int v9 = 0;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 64);
  if (v13 <= v8) {
    unsigned int v16 = v8;
  }
  else {
    unsigned int v16 = v13;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  uint64_t v17 = *(void *)(v7 + 64) + v14;
  if (!v12) {
    ++v15;
  }
  uint64_t v18 = v15 + 7;
  size_t v19 = ((((v18 + (v17 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
  char v20 = 8 * v19;
  if (v16 < a3)
  {
    if (v19 <= 3) {
      unsigned int v21 = ((a3 - v16 + 0xFFFF) >> v20) + 1;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v21 >= 0x10000) {
      int v22 = 4;
    }
    else {
      int v22 = 2;
    }
    if (v21 < 0x100) {
      int v22 = 1;
    }
    if (v21 >= 2) {
      int v9 = v22;
    }
    else {
      int v9 = 0;
    }
  }
  if (v16 < a2)
  {
    unsigned int v23 = ~v16 + a2;
    unsigned int v24 = v23 >> v20;
    bzero(a1, v19);
    if (v19 <= 3) {
      int v25 = v24 + 1;
    }
    else {
      int v25 = 1;
    }
    if (v19 > 3) {
      *a1 = v23;
    }
    else {
      *(_WORD *)a1 = v23;
    }
    switch(v9)
    {
      case 1:
        *((unsigned char *)a1 + v19) = v25;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v19) = v25;
        return;
      case 3:
        goto LABEL_52;
      case 4:
        *(unsigned int *)((char *)a1 + v19) = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = ~v14;
  switch(v9)
  {
    case 1:
      *((unsigned char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)((char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
LABEL_52:
      __break(1u);
      JUMPOUT(0x191B18E5CLL);
    case 4:
      *(unsigned int *)((char *)a1 + v19) = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (a2)
      {
LABEL_36:
        if (v8 == v16)
        {
          unint64_t v27 = *(void (**)(unsigned int *, uint64_t, uint64_t, uint64_t))(v7 + 56);
          v27(a1, a2, v8, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v28 = ((unint64_t)a1 + v17) & v26;
          if (v13 == v16)
          {
            uint64_t v29 = *(void (**)(unint64_t, void))(v11 + 56);
            v29(v28, (a2 + 1));
          }
          else
          {
            uint64_t v30 = (void *)((((v18 + v28) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            if ((a2 & 0x80000000) != 0)
            {
              *uint64_t v30 = a2 ^ 0x80000000;
              v30[1] = 0;
            }
            else
            {
              v30[1] = (a2 - 1);
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CompositeViewStates.Metadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B18E9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF5BC8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_191B18F90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(v8 + 64);
  }
  else {
    size_t v12 = *(void *)(v8 + 64) + 1;
  }
  if ((v9 | v5) > 7
    || ((v9 | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((v12 + ((v6 + v9 + ((v5 + 16) & ~v5)) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
     + 27 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v10 | v5) & 0xF8 ^ 0x1F8) & ((v10 | v5) + 16)));
    swift_retain();
  }
  else
  {
    unint64_t v16 = ~(unint64_t)v9;
    *a1 = *a2;
    uint64_t v17 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v17 = *v18;
    uint64_t v19 = ((unint64_t)v17 + v5 + 8) & ~v5;
    uint64_t v20 = ((unint64_t)v18 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v19, v20);
    unsigned int v21 = (void *)((v19 + v11) & v16);
    int v22 = (const void *)((v20 + v11) & v16);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v22, 1, v7))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    *((unsigned char *)v21 + v12) = *((unsigned char *)v22 + v12);
    unint64_t v23 = ((unint64_t)v21 + v12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v22 + v12) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = *(void *)(v24 + 16);
    *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
    *(unsigned char *)(v23 + 25) = *(unsigned char *)(v24 + 25);
    *(unsigned char *)(v23 + 26) = *(unsigned char *)(v24 + 26);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_191B191F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  }

  return swift_bridgeObjectRelease();
}

void *sub_191B19318(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (char *)((v16 + v10) & ~v15);
  uint64_t v18 = (char *)((v16 + v11) & ~v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    int v19 = *(_DWORD *)(v14 + 84);
    uint64_t v20 = *(void *)(v14 + 64);
    if (v19) {
      size_t v21 = *(void *)(v14 + 64);
    }
    else {
      size_t v21 = v20 + 1;
    }
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
    unint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v22 = v14 + 56;
    v23(v17, 0, 1, v13);
    int v19 = *(_DWORD *)(v22 + 28);
    uint64_t v20 = *(void *)(v22 + 8);
  }
  if (v19) {
    uint64_t v24 = v20;
  }
  else {
    uint64_t v24 = v20 + 1;
  }
  unint64_t v25 = (unint64_t)&v17[v24];
  unint64_t v26 = (unint64_t)&v18[v24];
  *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
  v25 &= 0xFFFFFFFFFFFFFFF8;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(unsigned char *)(v25 + 24) = *(unsigned char *)(v26 + 24);
  *(unsigned char *)(v25 + 25) = *(unsigned char *)(v26 + 25);
  *(unsigned char *)(v25 + 26) = *(unsigned char *)(v26 + 26);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_191B194DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (char *)((v16 + v10) & ~v15);
  uint64_t v18 = (char *)((v16 + v11) & ~v15);
  int v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v17, v18, v13);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  if (v22) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = v23 + 1;
  }
  memcpy(v17, v18, v24);
LABEL_12:
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v25 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v14 + 64) + 1;
  }
  unint64_t v26 = (unint64_t)&v17[v25];
  unint64_t v27 = (unint64_t)&v18[v25];
  *(unsigned char *)unint64_t v26 = *(unsigned char *)v27;
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (unsigned char *)(v27 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v28 + 8) = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v28 + 16) = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 24) = v29[24];
  *(unsigned char *)(v28 + 25) = v29[25];
  *(unsigned char *)(v28 + 26) = v29[26];
  return a1;
}

void *sub_191B19728(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (char *)((v16 + v10) & ~v15);
  uint64_t v18 = (char *)((v16 + v11) & ~v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    int v19 = *(_DWORD *)(v14 + 84);
    uint64_t v20 = *(void *)(v14 + 64);
    if (v19) {
      size_t v21 = *(void *)(v14 + 64);
    }
    else {
      size_t v21 = v20 + 1;
    }
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v18, v13);
    size_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v22 = v14 + 56;
    v23(v17, 0, 1, v13);
    int v19 = *(_DWORD *)(v22 + 28);
    uint64_t v20 = *(void *)(v22 + 8);
  }
  if (v19) {
    uint64_t v24 = v20;
  }
  else {
    uint64_t v24 = v20 + 1;
  }
  unint64_t v25 = (unint64_t)&v17[v24];
  unint64_t v26 = (unint64_t)&v18[v24];
  *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
  v25 &= 0xFFFFFFFFFFFFFFF8;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  long long v27 = *(_OWORD *)(v26 + 8);
  *(_DWORD *)(v25 + 23) = *(_DWORD *)(v26 + 23);
  *(_OWORD *)(v25 + 8) = v27;
  return a1;
}

void *sub_191B198D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (char *)((v16 + v10) & ~v15);
  uint64_t v18 = (char *)((v16 + v11) & ~v15);
  int v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v17, v18, v13);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    int v22 = *(_DWORD *)(v14 + 84);
    size_t v23 = *(void *)(v14 + 64);
  }
  if (v22) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = v23 + 1;
  }
  memcpy(v17, v18, v24);
LABEL_12:
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v25 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v14 + 64) + 1;
  }
  unint64_t v26 = (unint64_t)&v17[v25];
  unint64_t v27 = (unint64_t)&v18[v25];
  *(unsigned char *)unint64_t v26 = *(unsigned char *)v27;
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (unsigned char *)(v27 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v28 + 8) = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v28 + 16) = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 24) = v29[24];
  *(unsigned char *)(v28 + 25) = v29[25];
  *(unsigned char *)(v28 + 26) = v29[26];
  return a1;
}

uint64_t sub_191B19B14(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = v9;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v8) {
    ++v14;
  }
  if (!a2) {
    return 0;
  }
  if (v10 < a2)
  {
    unint64_t v15 = ((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v14) & 0xFFFFFFFFFFFFFFF8) + 27;
    unsigned int v16 = (a2 - v10 + 0xFFFFFF) >> (8 * v15);
    if (((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v14) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!*((unsigned char *)a1 + v15)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (*(unsigned __int16 *)((char *)a1 + v15)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191B19D88);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_28:
        int v20 = (v19 << 24) - 0x1000000;
        if (((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v14) & 0xFFFFFFF8) == 0xFFFFFFE8)
        {
          int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        }
        else
        {
          int v20 = 0;
          int v26 = *(_DWORD *)a1;
        }
        return v10 + (v26 | v20) + 1;
      default:
        break;
    }
  }
  unint64_t v21 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
  if (v6 == v10)
  {
    int v22 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    return v22(v21, v6, v4);
  }
  unint64_t v24 = (v21 + v12 + v13) & ~v13;
  if (v9 == v10)
  {
    if (v8 >= 2)
    {
      unsigned int v27 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v24);
      if (v27 >= 2) {
        return v27 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v25 = *(void *)(((v24 + v14) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v25 >= 0xFFFFFFFF) {
    LODWORD(v25) = -1;
  }
  return (v25 + 1);
}

void sub_191B19D9C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a4 + 24) - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  unsigned int v14 = v10 - 1;
  if (!v10) {
    unsigned int v14 = 0;
  }
  if (v14 <= v8) {
    unsigned int v15 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v15 = v14;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  if (v10) {
    uint64_t v16 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v17 = ((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v16) & 0xFFFFFFFFFFFFFFF8) + 27;
  char v18 = 8 * v17;
  if (v15 < a3)
  {
    unsigned int v19 = (a3 - v15 + 0xFFFFFF) >> v18;
    if (((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v16) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v20 = v19 + 1;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v6 = v21;
    }
    else {
      int v6 = 0;
    }
  }
  if (v15 < a2)
  {
    unsigned int v22 = ~v15 + a2;
    unsigned int v23 = v22 >> v18;
    bzero(a1, ((((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + v16) & 0xFFFFFFFFFFFFFFF8) + 27);
    if (v17 == 3) {
      int v24 = v23 + 1;
    }
    else {
      int v24 = 1;
    }
    if (v17 == 3)
    {
      *(_WORD *)a1 = v22;
      a1[2] = BYTE2(v22);
    }
    else
    {
      *(_DWORD *)a1 = v22;
    }
    switch(v6)
    {
      case 1:
        a1[v17] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v24;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v17] = v24;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x191B1A08CLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (a2)
      {
LABEL_37:
        unint64_t v25 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11;
        if (v8 == v15)
        {
          int v26 = *(void (**)(unint64_t))(v7 + 56);
          v26(v25);
        }
        else
        {
          unint64_t v27 = (v25 + v12 + v13) & ~v13;
          if (v14 == v15)
          {
            uint64_t v28 = a2 + 1;
            uint64_t v29 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
            v29(v27, v28);
          }
          else
          {
            unint64_t v30 = (v27 + v16) & 0xFFFFFFFFFFFFFFF8;
            if ((a2 & 0x80000000) != 0)
            {
              *(unsigned char *)(v30 + 26) = 0;
              *(_WORD *)(v30 + 24) = 0;
              *(void *)(v30 + 8) = a2 ^ 0x80000000;
              *(void *)(v30 + 16) = 0;
            }
            else
            {
              *(void *)(v30 + 16) = a2 - 1;
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CompositeViewStates()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B1A0CC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_191B1A0EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_191B1A108()
{
  return swift_getWitnessTable();
}

BOOL sub_191B1A124(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_191B1A134()
{
  return sub_191CF6478();
}

uint64_t sub_191B1A15C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000191D0D9A0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4964616F6C796170 && a2 == 0xE900000000000044 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x697472656C417369 && a2 == 0xEA0000000000676ELL || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7974746168437369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_191B1A3D8()
{
  return sub_191CF64C8();
}

unint64_t sub_191B1A420(char a1)
{
  unint64_t result = 1952867692;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7468676972;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x4964616F6C796170;
      break;
    case 4:
      unint64_t result = 0x697472656C417369;
      break;
    case 5:
      unint64_t result = 0x7974746168437369;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_191B1A4EC(char *a1, char *a2)
{
  return sub_191B1A124(*a1, *a2);
}

uint64_t sub_191B1A4F8()
{
  return sub_191B1A3D8();
}

uint64_t sub_191B1A500()
{
  return sub_191B1A134();
}

uint64_t sub_191B1A508()
{
  return sub_191CF64C8();
}

unint64_t sub_191B1A548()
{
  return sub_191B1A420(*v0);
}

uint64_t sub_191B1A550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B1A15C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B1A578()
{
  return 0;
}

uint64_t sub_191B1A584@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B1BB3C();
  *a1 = result;
  return result;
}

uint64_t sub_191B1A5B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_191B1A60C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_191B1A660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  int v10 = (int *)type metadata accessor for CompositeViewStates.Metadata();
  uint64_t v11 = a8 + v10[13];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a8, a1, v13);
  uint64_t v14 = sub_191CF5BC8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v11, a2, v14);
  *(void *)(a8 + v10[14]) = a3;
  uint64_t v16 = (void *)(a8 + v10[15]);
  *uint64_t v16 = a4;
  v16[1] = a5;
  *(unsigned char *)(a8 + v10[16]) = a6;
  *(unsigned char *)(a8 + v10[17]) = a7;
  return result;
}

uint64_t sub_191B1A80C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v46 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_191CF5BC8();
  uint64_t v59 = *(void *)(v12 - 8);
  uint64_t v60 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v47 = (char *)&v45 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)&v45 - v15;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  type metadata accessor for CompositeViewStates.Metadata.CodingKeys();
  swift_getWitnessTable();
  uint64_t v16 = sub_191CF61C8();
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v51 = v16;
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v45 - v17;
  uint64_t v48 = a2;
  uint64_t v49 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v19 = type metadata accessor for CompositeViewStates.Metadata();
  uint64_t v45 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  unsigned int v22 = (char *)&v45 - v21;
  uint64_t v55 = v20;
  uint64_t v23 = *(int *)(v20 + 52);
  uint64_t v61 = v22;
  int v24 = &v22[v23];
  unint64_t v25 = *(void (**)(void))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v58 = v24;
  v25();
  uint64_t v26 = a1[3];
  uint64_t v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  uint64_t v56 = v18;
  uint64_t v27 = v66;
  sub_191CF6508();
  if (v27)
  {
    uint64_t v31 = v58;
    uint64_t v33 = v59;
    uint64_t v32 = v60;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v32);
  }
  else
  {
    uint64_t v28 = v47;
    uint64_t v29 = v52;
    uint64_t v30 = v53;
    LOBYTE(v62) = 0;
    swift_getAssociatedConformanceWitness();
    sub_191CF6178();
    uint64_t v34 = v30;
    uint64_t v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v61, v54, v34);
    LOBYTE(v62) = 1;
    swift_getAssociatedConformanceWitness();
    sub_191CF6108();
    (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v58, v28, v60);
    LOBYTE(v62) = 2;
    uint64_t v36 = sub_191CF6158();
    uint64_t v37 = v55;
    *(void *)&v35[*(int *)(v55 + 56)] = v36;
    LOBYTE(v62) = 3;
    uint64_t v38 = sub_191CF6118();
    uint64_t v39 = (uint64_t *)&v35[*(int *)(v37 + 60)];
    *uint64_t v39 = v38;
    v39[1] = v40;
    LOBYTE(v62) = 4;
    char v41 = sub_191CF60F8();
    v35[*(int *)(v37 + 64)] = (v41 == 2) | v41 & 1;
    LOBYTE(v62) = 5;
    uint64_t v42 = v37;
    LOBYTE(v37) = sub_191CF60F8();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v56, v51);
    v35[*(int *)(v42 + 68)] = v37 & 1;
    uint64_t v43 = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v46, v35, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v35, v42);
  }
}

uint64_t sub_191B1AEA0(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v5 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v13 = a2[3];
  uint64_t v14 = a2;
  uint64_t v16 = v3;
  uint64_t v17 = v13;
  uint64_t v18 = v5;
  uint64_t v19 = v4;
  v12[1] = v4;
  type metadata accessor for CompositeViewStates.Metadata.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_191CF62A8();
  uint64_t v15 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned int v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF6528();
  LOBYTE(v16) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = v20;
  sub_191CF6278();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v6);
  }
  LOBYTE(v16) = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_191CF6208();
  LOBYTE(v16) = 2;
  sub_191CF6258();
  uint64_t v11 = v15;
  LOBYTE(v16) = 3;
  sub_191CF6218();
  LOBYTE(v16) = 4;
  sub_191CF6228();
  LOBYTE(v16) = 5;
  sub_191CF6228();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v6);
}

uint64_t sub_191B1B1F4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_191B1A80C(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_191B1B218(void *a1, void *a2)
{
  return sub_191B1AEA0(a1, a2);
}

uint64_t sub_191B1B230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v30 = *(void *)(a1 + 40);
  uint64_t v31 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_191CF5BC8();
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = v32;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 56))(v10, v9);
  if (!v14)
  {
    uint64_t v32 = 0;
    uint64_t v26 = v11;
    uint64_t v27 = v2;
    uint64_t v16 = v31;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v2 + *(int *)(a1 + 60), 1, v31))
    {
      uint64_t v17 = 1;
      uint64_t v18 = (uint64_t)v13;
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, v17, 1, AssociatedTypeWitness);
      uint64_t v19 = *(void *)(v27 + 8);
      uint64_t v20 = v27 + *(int *)(a1 + 68);
      uint64_t v21 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      char v23 = *(unsigned char *)(v20 + 17);
      char v24 = *(unsigned char *)(v20 + 18);
      swift_bridgeObjectRetain();
      return sub_191B1A660(v18, (uint64_t)v8, v19, v21, v22, v23, v24, v29);
    }
    uint64_t v25 = v32;
    (*(void (**)(uint64_t))(v30 + 56))(v16);
    uint64_t v18 = (uint64_t)v13;
    if (!v25)
    {
      uint64_t v32 = 0;
      uint64_t v17 = 0;
      goto LABEL_4;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v26);
  }
  return result;
}

uint64_t sub_191B1B514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 8);
  *(unsigned char *)(v3 + *(int *)(a3 + 64)) = v6 > a1;
  if (v6 <= a1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a3 + 24) - 8) + 48))(v3 + *(int *)(a3 + 60), 1, *(void *)(a3 + 24));
    if (result) {
      return result;
    }
    uint64_t result = a1 - v6;
    if (__OFSUB__(a1, v6))
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = *(uint64_t (**)(void))(*(void *)(a3 + 40) + 64);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(*(void *)(a3 + 32) + 64);
  }
  return v7();
}

id sub_191B1B678(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = sub_191CF5BC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + *(int *)(a2 + 64)) == 1)
  {
    uint64_t v14 = v2 + *(int *)(a2 + 56);
    uint64_t v15 = v18[1];
    uint64_t v16 = (*(uint64_t (**)(void *, void))(*(void *)(a2 + 32) + 72))(a1, *(void *)(a2 + 16));
    if (!v15) {
      return (id)v16;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v2 + *(int *)(a2 + 60), v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return a1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v5);
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t))(*(void *)(a2 + 40) + 72))(a1, v5);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v5);
    }
  }
  return (id)v14;
}

uint64_t sub_191B1B8E0()
{
  return *(void *)v0;
}

uint64_t sub_191B1B8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B1B230(a1, a2);
}

uint64_t sub_191B1B900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_191B1B514(a1, a2, a5);
}

id sub_191B1B91C(void *a1, uint64_t a2)
{
  return sub_191B1B678(a1, a2);
}

uint64_t type metadata accessor for CompositeViewStates.Metadata.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B1B94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t getEnumTagSinglePayload for JindoMetricsDefinition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_191B1B9E4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B1BAB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_191B1BAD8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_191B1BAE0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_191B1BAE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_191B1BB04()
{
  return swift_getWitnessTable();
}

uint64_t sub_191B1BB20()
{
  return swift_getWitnessTable();
}

uint64_t sub_191B1BB3C()
{
  return 6;
}

id sub_191B1BB44(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_191B1BB50(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for WidgetScalingModifier(uint64_t a1)
{
  sub_191B1BBA0(*(id *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_191B172D4(v2, v3);
}

void sub_191B1BBA0(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t initializeWithCopy for WidgetScalingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v6, v2);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetScalingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_191B1BB44(*(id *)a2, v5);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_191B1BB50(v8, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v2;
  sub_191B172D4(v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetScalingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_191B1BBA0(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_191B172D4(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetScalingModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetScalingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetScalingModifier()
{
  return &type metadata for WidgetScalingModifier;
}

uint64_t sub_191B1BDA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191B1BDC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v35 = a5;
  uint64_t v39 = a1;
  uint64_t v42 = a6;
  char v8 = a3 & 1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AD90);
  MEMORY[0x1F4188790](v36);
  char v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADB0);
  uint64_t v11 = MEMORY[0x1F4188790](v41);
  uint64_t v37 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = &v34[-v13];
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADB8);
  MEMORY[0x1F4188790](v40);
  uint64_t v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADF8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v34[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_191B1BB44(a2, v8);
  id v20 = sub_191BDC0A4(a2, v8);
  sub_191B1BBA0(a2, v8);
  unsigned int v21 = objc_msgSend(v20, sel__isUnitScale);

  if (v21)
  {
    uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16);
    v22(v19, v39, v16);
    v22(v15, (uint64_t)v19, v16);
    swift_storeEnumTagMultiPayload();
    sub_191B1C2F0();
    sub_191B1C34C();
    sub_191CF44D8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    sub_191B1BB44(a2, v8);
    id v24 = sub_191BDC0A4(a2, v8);
    sub_191B1BBA0(a2, v8);
    int v25 = v35 & 1;
    sub_191B1BB50(a4, v35 & 1);
    double v26 = sub_191BDC2E4(a4, v25);
    sub_191B172D4(a4, v25);
    objc_msgSend(v24, sel__rawSizePixelAlignedForDisplayScale_, v26);

    sub_191CF5088();
    sub_191CF3A38();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v10, v39, v16);
    uint64_t v27 = &v10[*(int *)(v36 + 36)];
    long long v28 = v44;
    *uint64_t v27 = v43;
    v27[1] = v28;
    v27[2] = v45;
    sub_191B1BB44(a2, v8);
    id v29 = sub_191BDC0A4(a2, v8);
    sub_191B1BBA0(a2, v8);
    objc_msgSend(v29, sel_scaleFactor);
    uint64_t v31 = v30;

    uint64_t v32 = v37;
    sub_191B01614((uint64_t)v10, (uint64_t)v37, &qword_1EB44AD90);
    *(void *)&v32[*(int *)(v41 + 36)] = v31;
    sub_191B01770((uint64_t)v10, &qword_1EB44AD90);
    uint64_t v33 = v38;
    sub_191B1C288((uint64_t)v32, (uint64_t)v38);
    sub_191B01614((uint64_t)v33, (uint64_t)v15, &qword_1EB44ADB0);
    swift_storeEnumTagMultiPayload();
    sub_191B1C2F0();
    sub_191B1C34C();
    sub_191CF44D8();
    return sub_191B01770((uint64_t)v33, &qword_1EB44ADB0);
  }
}

uint64_t sub_191B1C24C()
{
  return sub_191CF3A18();
}

uint64_t sub_191B1C268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B1BDC4(a1, *(void **)v2, *(unsigned char *)(v2 + 8), *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t sub_191B1C288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ADB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191B1C2F0()
{
  unint64_t result = qword_1EB44ADF0;
  if (!qword_1EB44ADF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44ADF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ADF0);
  }
  return result;
}

unint64_t sub_191B1C34C()
{
  unint64_t result = qword_1EB44ADA8;
  if (!qword_1EB44ADA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44ADB0);
    sub_191B1C3C8();
    sub_191B1C444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ADA8);
  }
  return result;
}

unint64_t sub_191B1C3C8()
{
  unint64_t result = qword_1EB44AD88;
  if (!qword_1EB44AD88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44AD90);
    sub_191B1C2F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AD88);
  }
  return result;
}

unint64_t sub_191B1C444()
{
  unint64_t result = qword_1EB449B60;
  if (!qword_1EB449B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449B60);
  }
  return result;
}

unint64_t sub_191B1C49C()
{
  unint64_t result = qword_1EB44ADC8;
  if (!qword_1EB44ADC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44ADD0);
    sub_191B1C2F0();
    sub_191B1C34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44ADC8);
  }
  return result;
}

uint64_t JindoArchivedViewCollection.ViewIndex.description.getter()
{
  return sub_191CF62C8();
}

BOOL static JindoArchivedViewCollection.ViewIndex.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_191B1C570()
{
  return sub_191CF62C8();
}

id JindoArchivedViewCollection.environment.getter@<X0>(void *a1@<X8>)
{
  unsigned int v3 = *(void **)(v1 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20));
  *a1 = v3;

  return v3;
}

uint64_t type metadata accessor for JindoArchivedViewCollection()
{
  uint64_t result = qword_1E92E0B80;
  if (!qword_1E92E0B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t JindoArchivedViewCollection.metadata(viewIndex:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for JindoArchivedViewCollection();
  unint64_t result = v4 - *v2;
  if (__OFSUB__(v4, *v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)((char *)v2 + *(int *)(v5 + 20) + 8);
    if (*(void *)(v7 + 16) && (unint64_t result = sub_191B1CBF4(result), (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(v7 + 56) + 88 * result;
      uint64_t v10 = *(void *)(v9 + 32);
      char v11 = *(unsigned char *)(v9 + 40);
      char v12 = *(unsigned char *)(v9 + 60);
      char v13 = *(unsigned char *)(v9 + 61);
      char v14 = *(unsigned char *)(v9 + 80);
      char v15 = *(unsigned char *)(v9 + 81);
      char v16 = *(unsigned char *)(v9 + 82);
      long long v17 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)a2 = *(_OWORD *)v9;
      *(_OWORD *)(a2 + 16) = v17;
      *(void *)(a2 + 32) = v10;
      *(unsigned char *)(a2 + 40) = v11;
      *(_OWORD *)(a2 + 44) = *(_OWORD *)(v9 + 44);
      *(unsigned char *)(a2 + 60) = v12;
      *(unsigned char *)(a2 + 61) = v13;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(v9 + 64);
      *(unsigned char *)(a2 + 80) = v14;
      *(unsigned char *)(a2 + 81) = v15;
      *(unsigned char *)(a2 + 82) = v16;
    }
    else
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 2;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(_DWORD *)(a2 + 79) = 0;
    }
  }
  return result;
}

void JindoArchivedViewCollection.index(for:in:)(WidgetKit::JindoViewTag a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *(id *)(v3 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20));
  char v8 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, MEMORY[0x1E4FBC860]);
  LOBYTE(a2) = v9;

  if (a2)
  {
    *(void *)a3 = 0;
    *(unsigned char *)(a3 + 8) = 1;
  }
  else
  {
    JindoArchivedViewCollection.index(for:environmentAtIndex:)(a1, (Swift::Int)v8);
  }
}

WidgetKit::JindoArchivedViewCollection::ViewIndex_optional __swiftcall JindoArchivedViewCollection.index(for:environmentAtIndex:)(WidgetKit::JindoViewTag a1, Swift::Int environmentAtIndex)
{
  uint64_t v6 = v2;
  type metadata accessor for JindoArchivedViewCollection();
  Swift::Int v7 = WidgetEnvironment.enumeratedCount()();
  uint64_t v9 = a1 * v7;
  if (((unsigned __int128)a1 * v7) >> 64 != v9 >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v10 = __OFADD__(*v3, v9);
  uint64_t v11 = *v3 + v9;
  if (v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Swift::Int v12 = v11 + environmentAtIndex;
  if (__OFADD__(v11, environmentAtIndex))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_191CF44B8();
  sub_191B1E724(&qword_1E92E1008, MEMORY[0x1E4F3D720]);
  sub_191CF5788();
  sub_191CF57E8();
  Swift::Int v7 = sub_191CF57D8();
  if (v12 < v7) {
    Swift::Int v13 = v12;
  }
  else {
    Swift::Int v13 = 0;
  }
  *(void *)uint64_t v6 = v13;
  *(unsigned char *)(v6 + 8) = v12 >= v7;
LABEL_11:
  result.value.base = v7;
  result.is_nil = v8;
  return result;
}

uint64_t JindoArchivedViewCollection.view(at:)()
{
  return sub_191CF44A8();
}

uint64_t JindoArchivedViewCollection.view(for:in:)@<X0>(WidgetKit::JindoViewTag a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v8 = *(id *)(v3 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20));
  uint64_t v9 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, MEMORY[0x1E4FBC860]);
  LOBYTE(a2) = v10;

  if (a2 & 1) != 0 || (JindoArchivedViewCollection.index(for:environmentAtIndex:)(a1, (Swift::Int)v9), (v14))
  {
    uint64_t v11 = sub_191CF3AD8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
  else
  {
    uint64_t result = sub_191CF44A8();
    if (!v4)
    {
      uint64_t v13 = sub_191CF3AD8();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 0, 1, v13);
    }
  }
  return result;
}

unint64_t sub_191B1CABC(uint64_t a1)
{
  sub_191CF5C78();
  uint64_t v2 = sub_191CF5268();
  return sub_191B1DD80(a1, v2);
}

unint64_t sub_191B1CB2C(uint64_t a1, uint64_t a2)
{
  sub_191CF6468();
  sub_191CF5388();
  uint64_t v4 = sub_191CF64C8();

  return sub_191B1DE4C(a1, a2, v4);
}

unint64_t sub_191B1CBA4(uint64_t a1)
{
  uint64_t v2 = sub_191CF5B48();
  return sub_191B1E610(a1, v2, &qword_1E92E2AF0);
}

unint64_t sub_191B1CBF4(uint64_t a1)
{
  uint64_t v2 = sub_191CF6458();

  return sub_191B1DF30(a1, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for JindoArchivedViewCollection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v11 = *(void **)((char *)a2 + v7);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *(void *)id v8 = v11;
    *((void *)v8 + 1) = v10;
    *((_WORD *)v8 + 16) = *(_WORD *)((char *)a2 + v7 + 32);
    *((_OWORD *)v8 + 1) = *(_OWORD *)((char *)a2 + v7 + 16);
    uint64_t v12 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
    __dst = &v8[v12];
    uint64_t v13 = &v9[v12];
    uint64_t v14 = sub_191CF3078();
    uint64_t v15 = *(void *)(v14 - 8);
    char v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    id v17 = v11;
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(__dst, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v20 = *(int *)(a3 + 24);
    unsigned int v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_191CF44B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for JindoArchivedViewCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  int v5 = (char *)v4 + *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  uint64_t v6 = sub_191CF3078();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_191CF44B8();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *initializeWithCopy for JindoArchivedViewCollection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v9 = *(void **)((char *)a2 + v5);
  uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
  *(void *)uint64_t v6 = v9;
  *((void *)v6 + 1) = v8;
  *((_WORD *)v6 + 16) = *(_WORD *)((char *)a2 + v5 + 32);
  *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
  uint64_t v10 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  id v16 = v9;
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_191CF44B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

void *assignWithCopy for JindoArchivedViewCollection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void **)((char *)a2 + v6);
  uint64_t v10 = *(void **)v7;
  *(void *)uint64_t v7 = v9;
  id v11 = v9;

  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v12 = *((_OWORD *)v8 + 1);
  *((_WORD *)v7 + 16) = *((_WORD *)v8 + 16);
  *((_OWORD *)v7 + 1) = v12;
  uint64_t v13 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_191CF3078();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (char *)a1 + v22;
  id v24 = (char *)a2 + v22;
  uint64_t v25 = sub_191CF44B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

void *initializeWithTake for JindoArchivedViewCollection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((_WORD *)v7 + 16) = *(_WORD *)((char *)a2 + v6 + 32);
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  uint64_t v10 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  id v11 = &v7[v10];
  long long v12 = &v8[v10];
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_191CF44B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

void *assignWithTake for JindoArchivedViewCollection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(void **)((char *)a1 + v6);
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);

  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_bridgeObjectRelease();
  *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
  *((_WORD *)v7 + 16) = *((_WORD *)v8 + 16);
  uint64_t v10 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  id v11 = &v7[v10];
  long long v12 = &v8[v10];
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 24);
  int v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_191CF44B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B1D6F0);
}

uint64_t sub_191B1D6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JindoViewStates.Metadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_191CF44B8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for JindoArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B1D800);
}

uint64_t sub_191B1D800(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for JindoViewStates.Metadata(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_191CF44B8();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t sub_191B1D908()
{
  uint64_t result = type metadata accessor for JindoViewStates.Metadata(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_191CF44B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoArchivedViewCollection.ViewIndex()
{
  return &type metadata for JindoArchivedViewCollection.ViewIndex;
}

unint64_t sub_191B1D9F0(uint64_t a1)
{
  sub_191CF6468();
  type metadata accessor for CFString(0);
  sub_191B1E724((unint64_t *)&unk_1EB44B910, type metadata accessor for CFString);
  sub_191CF3538();
  uint64_t v2 = sub_191CF64C8();

  return sub_191B1DFCC(a1, v2);
}

unint64_t sub_191B1DAA4(uint64_t a1)
{
  sub_191CF6468();
  sub_191CF6478();
  uint64_t v2 = sub_191CF64C8();

  return sub_191B1DF30(a1, v2);
}

unint64_t sub_191B1DB10(unsigned __int8 a1)
{
  sub_191CF6468();
  sub_191CF6478();
  uint64_t v2 = sub_191CF64C8();

  return sub_191B1E128(a1, v2);
}

unint64_t sub_191B1DB7C(uint64_t a1)
{
  sub_191CF5F68();
  uint64_t v2 = sub_191CF5268();

  return sub_191B1E1C8(a1, v2);
}

unint64_t sub_191B1DBE0(unsigned __int8 a1, uint64_t a2)
{
  sub_191CF6468();
  sub_191CF6478();
  sub_191CF5B68();
  uint64_t v4 = sub_191CF64C8();

  return sub_191B1E360(a1, a2, v4);
}

unint64_t sub_191B1DC60(uint64_t a1)
{
  sub_191CF6468();
  sub_191CF3178();
  sub_191B1E724(&qword_1E92E3480, MEMORY[0x1E4F27928]);
  sub_191CF5278();
  type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  WidgetEnvironment.Storage.hash.getter();
  sub_191CF6478();
  uint64_t v2 = sub_191CF64C8();

  return sub_191B1E460(a1, v2);
}

unint64_t sub_191B1DD30(uint64_t a1)
{
  uint64_t v2 = sub_191CF5B48();
  return sub_191B1E610(a1, v2, &qword_1E92E3080);
}

unint64_t sub_191B1DD80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_191CF5C78();
    do
    {
      if (sub_191CF52F8()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_191B1DE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_191CF6348() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_191CF6348() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_191B1DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_191B1DFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_191B1E724((unint64_t *)&unk_1EB44B910, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_191CF3528();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_191CF3528();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_191B1E128(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_191B1E1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_191CF5F68();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_191CF52F8();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_191B1E360(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    int v8 = a1;
    uint64_t v9 = ~v5;
    do
    {
      uint64_t v10 = *(void *)(v7 + 48);
      if (*(unsigned __int8 *)(v10 + 16 * v6) == v8)
      {
        uint64_t v11 = *(void **)(v10 + 16 * v6 + 8);
        sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
        id v12 = v11;
        char v13 = sub_191CF5B58();

        if (v13) {
          break;
        }
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_191B1E460(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  MEMORY[0x1F4188790](v21);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_191B1E76C(*(void *)(v3 + 48) + v12 * v10, (uint64_t)v8);
      if (sub_191CF3158())
      {
        uint64_t v13 = *(int *)(v21 + 20);
        uint64_t v14 = *(void **)&v8[v13];
        uint64_t v15 = *(void **)(a1 + v13);
        sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
        id v16 = v14;
        id v17 = v15;
        char v18 = sub_191CF5B58();

        if (v18) {
          break;
        }
      }
      sub_191B1E7D0((uint64_t)v8);
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        return v10;
      }
    }
    sub_191B1E7D0((uint64_t)v8);
  }
  return v10;
}

unint64_t sub_191B1E610(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_191B016E0(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_191CF5B58();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_191CF5B58();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_191B1E724(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B1E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B1E7D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_191B1E82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = v9 + 24 * i;
    if ((*(void *)(v10 + 8) != a1 || *(void *)(v10 + 16) != a2) && (sub_191CF6348() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
      {
        uint64_t v13 = v9 + 24 * i;
        if (*(void *)(v13 + 8) == a1 && *(void *)(v13 + 16) == a2) {
          break;
        }
        if (sub_191CF6348()) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_191B1E938(uint64_t a1, uint64_t a2)
{
  sub_191CF6468();
  swift_bridgeObjectRetain();
  sub_191CF5388();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_191CF64C8();

  return sub_191B1E82C(a1, a2, v4);
}

double sub_191B1E9C0(unsigned __int8 a1, char a2, unsigned __int8 a3)
{
  if (a2 == 2)
  {
    if (a3 >= 3u)
    {
      if (a3 == 3)
      {
        if (a1 < 4u)
        {
          v3 += 160;
        }
        else if (a1 - 8 >= 3)
        {
          if (a1 == 4) {
            v3 += 184;
          }
          else {
            v3 += 208;
          }
        }
        else
        {
          v3 += 232;
        }
      }
      else if (a1 < 4u)
      {
        v3 += 256;
      }
      else if (a1 - 8 >= 3)
      {
        if (a1 == 4) {
          v3 += 280;
        }
        else {
          v3 += 304;
        }
      }
      else
      {
        v3 += 328;
      }
    }
    else if (a1 < 4u)
    {
      v3 += 64;
    }
    else if (a1 - 8 >= 3)
    {
      if (a1 == 4) {
        v3 += 88;
      }
      else {
        v3 += 112;
      }
    }
    else
    {
      v3 += 136;
    }
  }
  else if (a2)
  {
    if (a1 < 4u)
    {
      v3 += 32;
    }
    else if (a1 - 8 >= 3)
    {
      if (a1 == 4) {
        v3 += 40;
      }
      else {
        v3 += 48;
      }
    }
    else
    {
      v3 += 56;
    }
  }
  else if (a1 >= 4u)
  {
    if (a1 - 8 >= 3)
    {
      if (a1 == 4) {
        v3 += 8;
      }
      else {
        v3 += 16;
      }
    }
    else
    {
      v3 += 24;
    }
  }
  return *(double *)v3;
}

uint64_t sub_191B1EBB4()
{
  xmmword_1E92E3088 = xmmword_191CF8A50;
  unk_1E92E3098 = xmmword_191CF8A60;
  xmmword_1E92E30A8 = xmmword_191CF8A70;
  unk_1E92E30B8 = xmmword_191CF8A80;
  qword_1E92E30C8 = 0x4036000000000000;
  unk_1E92E30D0 = 0x403A000000000000;
  byte_1E92E30D8 = 0;
  qword_1E92E30E0 = 0x402A000000000000;
  unk_1E92E30E8 = 0x4030000000000000;
  byte_1E92E30F0 = 0;
  qword_1E92E30F8 = 0x402A000000000000;
  unk_1E92E3100 = 0x4030000000000000;
  byte_1E92E3108 = 0;
  qword_1E92E3110 = 0x4026000000000000;
  unk_1E92E3118 = 0x402A000000000000;
  byte_1E92E3120 = 0;
  qword_1E92E3128 = 0x4036000000000000;
  unk_1E92E3130 = 0x403A000000000000;
  byte_1E92E3138 = 0;
  qword_1E92E3140 = 0x402A000000000000;
  unk_1E92E3148 = 0x4033000000000000;
  byte_1E92E3150 = 0;
  qword_1E92E3158 = 0x402A000000000000;
  unk_1E92E3160 = 0x4033000000000000;
  byte_1E92E3168 = 0;
  uint64_t result = 0x402C000000000000;
  qword_1E92E3170 = 0x4024000000000000;
  unk_1E92E3178 = 0x402C000000000000;
  byte_1E92E3180 = 0;
  qword_1E92E3188 = 0x4036000000000000;
  unk_1E92E3190 = 0x403A000000000000;
  byte_1E92E3198 = 0;
  qword_1E92E31A0 = 0x402A000000000000;
  unk_1E92E31A8 = 0x4034000000000000;
  byte_1E92E31B0 = 0;
  qword_1E92E31B8 = 0x402A000000000000;
  unk_1E92E31C0 = 0x4034000000000000;
  byte_1E92E31C8 = 0;
  qword_1E92E31D0 = 0x4024000000000000;
  unk_1E92E31D8 = 0x402E000000000000;
  byte_1E92E31E0 = 0;
  return result;
}

uint64_t sub_191B1ECBC()
{
  xmmword_1E92E31E8 = xmmword_191CF8A90;
  unk_1E92E31F8 = xmmword_191CF8A60;
  xmmword_1E92E3208 = xmmword_191CF8AA0;
  unk_1E92E3218 = xmmword_191CF8A80;
  qword_1E92E3228 = 0x4042000000000000;
  unk_1E92E3230 = 0x4040000000000000;
  byte_1E92E3238 = 0;
  qword_1E92E3240 = 0x402A000000000000;
  unk_1E92E3248 = 0x4030000000000000;
  byte_1E92E3250 = 0;
  qword_1E92E3258 = 0x402A000000000000;
  unk_1E92E3260 = 0x4030000000000000;
  byte_1E92E3268 = 0;
  qword_1E92E3270 = 0x4026000000000000;
  unk_1E92E3278 = 0x402A000000000000;
  byte_1E92E3280 = 0;
  qword_1E92E3288 = 0x4042000000000000;
  unk_1E92E3290 = 0x4043000000000000;
  byte_1E92E3298 = 0;
  qword_1E92E32A0 = 0x402A000000000000;
  unk_1E92E32A8 = 0x4033000000000000;
  byte_1E92E32B0 = 0;
  qword_1E92E32B8 = 0x402A000000000000;
  unk_1E92E32C0 = 0x4033000000000000;
  byte_1E92E32C8 = 0;
  uint64_t result = 0x402C000000000000;
  qword_1E92E32D0 = 0x4024000000000000;
  unk_1E92E32D8 = 0x402C000000000000;
  byte_1E92E32E0 = 0;
  qword_1E92E32E8 = 0x4042000000000000;
  unk_1E92E32F0 = 0x4043000000000000;
  byte_1E92E32F8 = 0;
  qword_1E92E3300 = 0x402A000000000000;
  unk_1E92E3308 = 0x4034000000000000;
  byte_1E92E3310 = 0;
  qword_1E92E3318 = 0x402A000000000000;
  unk_1E92E3320 = 0x4034000000000000;
  byte_1E92E3328 = 0;
  qword_1E92E3330 = 0x4024000000000000;
  unk_1E92E3338 = 0x402E000000000000;
  byte_1E92E3340 = 0;
  return result;
}

uint64_t sub_191B1EDC8()
{
  xmmword_1E92E2568 = xmmword_191CF8AB0;
  unk_1E92E2578 = xmmword_191CF8AC0;
  xmmword_1E92E2588 = xmmword_191CF8AD0;
  unk_1E92E2598 = xmmword_191CF8A60;
  qword_1E92E25A8 = 0x4038000000000000;
  unk_1E92E25B0 = 0x403C000000000000;
  byte_1E92E25B8 = 0;
  qword_1E92E25C0 = 0x402E000000000000;
  unk_1E92E25C8 = 0x4032000000000000;
  byte_1E92E25D0 = 0;
  qword_1E92E25D8 = 0x402E000000000000;
  unk_1E92E25E0 = 0x4032000000000000;
  byte_1E92E25E8 = 0;
  qword_1E92E25F0 = 0x4026000000000000;
  unk_1E92E25F8 = 0x402A000000000000;
  byte_1E92E2600 = 0;
  qword_1E92E2608 = 0x4038000000000000;
  unk_1E92E2610 = 0x403C000000000000;
  byte_1E92E2618 = 0;
  qword_1E92E2620 = 0x402C000000000000;
  unk_1E92E2628 = 0x4034000000000000;
  byte_1E92E2630 = 0;
  qword_1E92E2638 = 0x402C000000000000;
  unk_1E92E2640 = 0x4034000000000000;
  byte_1E92E2648 = 0;
  uint64_t result = 0x4024000000000000;
  qword_1E92E2650 = 0x4024000000000000;
  unk_1E92E2658 = 0x402C000000000000;
  byte_1E92E2660 = 0;
  qword_1E92E2668 = 0x4038000000000000;
  unk_1E92E2670 = 0x403C000000000000;
  byte_1E92E2678 = 0;
  qword_1E92E2680 = 0x402C000000000000;
  unk_1E92E2688 = 0x4035000000000000;
  byte_1E92E2690 = 0;
  qword_1E92E2698 = 0x402C000000000000;
  unk_1E92E26A0 = 0x4035000000000000;
  byte_1E92E26A8 = 0;
  qword_1E92E26B0 = 0x4024000000000000;
  unk_1E92E26B8 = 0x402E000000000000;
  byte_1E92E26C0 = 0;
  return result;
}

uint64_t sub_191B1EED0()
{
  xmmword_1E92E2978 = xmmword_191CF8AE0;
  unk_1E92E2988 = xmmword_191CF8AC0;
  xmmword_1E92E2998 = xmmword_191CF8AF0;
  unk_1E92E29A8 = xmmword_191CF8A60;
  qword_1E92E29B8 = 0x4043000000000000;
  unk_1E92E29C0 = 0x4042000000000000;
  byte_1E92E29C8 = 0;
  qword_1E92E29D0 = 0x402E000000000000;
  unk_1E92E29D8 = 0x4032000000000000;
  byte_1E92E29E0 = 0;
  qword_1E92E29E8 = 0x402E000000000000;
  unk_1E92E29F0 = 0x4032000000000000;
  byte_1E92E29F8 = 0;
  qword_1E92E2A00 = 0x4026000000000000;
  unk_1E92E2A08 = 0x402A000000000000;
  byte_1E92E2A10 = 0;
  qword_1E92E2A18 = 0x4043000000000000;
  unk_1E92E2A20 = 0x4044000000000000;
  byte_1E92E2A28 = 0;
  qword_1E92E2A30 = 0x402C000000000000;
  unk_1E92E2A38 = 0x4034000000000000;
  byte_1E92E2A40 = 0;
  qword_1E92E2A48 = 0x402C000000000000;
  unk_1E92E2A50 = 0x4034000000000000;
  byte_1E92E2A58 = 0;
  uint64_t result = 0x4024000000000000;
  qword_1E92E2A60 = 0x4024000000000000;
  unk_1E92E2A68 = 0x402C000000000000;
  byte_1E92E2A70 = 0;
  qword_1E92E2A78 = 0x4043000000000000;
  unk_1E92E2A80 = 0x4044000000000000;
  byte_1E92E2A88 = 0;
  qword_1E92E2A90 = 0x402C000000000000;
  unk_1E92E2A98 = 0x4035000000000000;
  byte_1E92E2AA0 = 0;
  qword_1E92E2AA8 = 0x402C000000000000;
  unk_1E92E2AB0 = 0x4035000000000000;
  byte_1E92E2AB8 = 0;
  qword_1E92E2AC0 = 0x4024000000000000;
  unk_1E92E2AC8 = 0x402E000000000000;
  byte_1E92E2AD0 = 0;
  return result;
}

uint64_t sub_191B1EFDC()
{
  xmmword_1EB4493E0 = xmmword_191CF8B00;
  *(_OWORD *)algn_1EB4493F0 = xmmword_191CF8B10;
  xmmword_1EB449400 = xmmword_191CF8B20;
  unk_1EB449410 = xmmword_191CF8B30;
  qword_1EB449420 = 0x403A000000000000;
  unk_1EB449428 = 0x403E000000000000;
  byte_1EB449430 = 0;
  qword_1EB449438 = 0x4031000000000000;
  unk_1EB449440 = 0x4034000000000000;
  byte_1EB449448 = 0;
  qword_1EB449450 = 0x4031000000000000;
  unk_1EB449458 = 0x4034000000000000;
  byte_1EB449460 = 0;
  uint64_t result = 0x402E000000000000;
  qword_1EB449468 = 0x402A000000000000;
  unk_1EB449470 = 0x402E000000000000;
  byte_1EB449478 = 0;
  qword_1EB449480 = 0x403A000000000000;
  unk_1EB449488 = 0x403E000000000000;
  byte_1EB449490 = 0;
  qword_1EB449498 = 0x402E000000000000;
  unk_1EB4494A0 = 0x4035000000000000;
  byte_1EB4494A8 = 0;
  qword_1EB4494B0 = 0x402E000000000000;
  unk_1EB4494B8 = 0x4035000000000000;
  byte_1EB4494C0 = 0;
  qword_1EB4494C8 = 0x4026000000000000;
  unk_1EB4494D0 = 0x4030000000000000;
  byte_1EB4494D8 = 0;
  qword_1EB4494E0 = 0x403A000000000000;
  unk_1EB4494E8 = 0x403E000000000000;
  byte_1EB4494F0 = 0;
  qword_1EB4494F8 = 0x402E000000000000;
  unk_1EB449500 = 0x4036800000000000;
  byte_1EB449508 = 0;
  qword_1EB449510 = 0x402E000000000000;
  unk_1EB449518 = 0x4036800000000000;
  byte_1EB449520 = 0;
  qword_1EB449528 = 0x4026000000000000;
  unk_1EB449530 = 0x4031000000000000;
  byte_1EB449538 = 0;
  return result;
}

uint64_t sub_191B1F0E8()
{
  xmmword_1E92E2800 = xmmword_191CF8B40;
  *(_OWORD *)algn_1E92E2810 = xmmword_191CF8B10;
  xmmword_1E92E2820 = xmmword_191CF8B50;
  unk_1E92E2830 = xmmword_191CF8B30;
  qword_1E92E2840 = 0x4044000000000000;
  unk_1E92E2848 = 0x4043000000000000;
  byte_1E92E2850 = 0;
  qword_1E92E2858 = 0x4031000000000000;
  unk_1E92E2860 = 0x4034000000000000;
  byte_1E92E2868 = 0;
  qword_1E92E2870 = 0x4031000000000000;
  unk_1E92E2878 = 0x4034000000000000;
  byte_1E92E2880 = 0;
  qword_1E92E2888 = 0x402A000000000000;
  unk_1E92E2890 = 0x402E000000000000;
  byte_1E92E2898 = 0;
  qword_1E92E28A0 = 0x4044000000000000;
  unk_1E92E28A8 = 0x4045000000000000;
  byte_1E92E28B0 = 0;
  qword_1E92E28B8 = 0x402E000000000000;
  unk_1E92E28C0 = 0x4035000000000000;
  byte_1E92E28C8 = 0;
  qword_1E92E28D0 = 0x402E000000000000;
  unk_1E92E28D8 = 0x4035000000000000;
  byte_1E92E28E0 = 0;
  uint64_t result = 0x4026000000000000;
  qword_1E92E28E8 = 0x4026000000000000;
  unk_1E92E28F0 = 0x4030000000000000;
  byte_1E92E28F8 = 0;
  qword_1E92E2900 = 0x4044000000000000;
  unk_1E92E2908 = 0x4045000000000000;
  byte_1E92E2910 = 0;
  qword_1E92E2918 = 0x402E000000000000;
  unk_1E92E2920 = 0x4036800000000000;
  byte_1E92E2928 = 0;
  qword_1E92E2930 = 0x402E000000000000;
  unk_1E92E2938 = 0x4036800000000000;
  byte_1E92E2940 = 0;
  qword_1E92E2948 = 0x4026000000000000;
  unk_1E92E2950 = 0x4031000000000000;
  byte_1E92E2958 = 0;
  return result;
}

uint64_t type metadata accessor for CircularFontDefinition()
{
  return self;
}

double sub_191B1F220(unsigned __int8 a1)
{
  (*(void (**)(void *__return_ptr))(v1 + 200))(v6);
  if (qword_1EB44A060 != -1) {
    swift_once();
  }
  char v3 = byte_1EB44C860;
  unsigned __int8 v4 = sub_191C41D90();
  return sub_191B1E9C0(a1, v3, v4);
}

uint64_t sub_191B1F2C8(uint64_t a1)
{
  uint64_t v3 = sub_191CF4AE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == *MEMORY[0x1E4F3E130]
    || v7 == *MEMORY[0x1E4F3E148]
    || v7 == *MEMORY[0x1E4F3E150]
    || v7 == *MEMORY[0x1E4F3E158])
  {
    return (*(double (**)(void))(v1 + 208))();
  }
  if (v7 == *MEMORY[0x1E4F3E188])
  {
    sub_191CF4A68();
    return v12;
  }
  else if (v7 == *MEMORY[0x1E4F3E138] || v7 == *MEMORY[0x1E4F3E140] || v7 == *MEMORY[0x1E4F3E160])
  {
    sub_191CF4A58();
    return v15;
  }
  else if (v7 == *MEMORY[0x1E4F3E178] || v7 == *MEMORY[0x1E4F3E168] || v7 == *MEMORY[0x1E4F3E170])
  {
    sub_191CF4A48();
    return v18;
  }
  else
  {
    sub_191CF4A58();
    uint64_t v11 = v19;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11;
}

unint64_t sub_191B1F4E0()
{
  return sub_191B1F510(MEMORY[0x1E4F24530], MEMORY[0x1E4FBB808], 7);
}

unint64_t sub_191B1F4F8()
{
  return sub_191B1F510(MEMORY[0x1E4F24610], MEMORY[0x1E4FBB550], 0x8000);
}

unint64_t sub_191B1F510(void **a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8410;
  int v7 = *a1;
  *(void *)(inited + 64) = a2;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = a3;
  id v8 = v7;
  return sub_191B2D3B8(inited);
}

void sub_191B1F584()
{
}

uint64_t type metadata accessor for RectangularFontDefinition()
{
  return self;
}

void *sub_191B1F5F8@<X0>(void *a1@<X8>)
{
  if (qword_1E92E2BC8 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1E92E3088, 0x159uLL);
}

uint64_t type metadata accessor for CompactCircularFontDefinition()
{
  return self;
}

void *sub_191B1F68C@<X0>(void *a1@<X8>)
{
  if (qword_1E92E2BD0 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1E92E31E8, 0x159uLL);
}

uint64_t type metadata accessor for CompactRectangularFontDefinition()
{
  return self;
}

void *sub_191B1F720@<X0>(void *a1@<X8>)
{
  if (qword_1E92E26C8 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1E92E2568, 0x159uLL);
}

uint64_t type metadata accessor for RegularCircularFontDefinition()
{
  return self;
}

void *sub_191B1F7B4@<X0>(void *a1@<X8>)
{
  if (qword_1E92E2AE0 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1E92E2978, 0x159uLL);
}

uint64_t type metadata accessor for RegularRectangularFontDefinition()
{
  return self;
}

void *sub_191B1F848@<X0>(void *a1@<X8>)
{
  if (qword_1EB449548 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1EB4493E0, 0x159uLL);
}

uint64_t type metadata accessor for LargeCircularFontDefinition()
{
  return self;
}

void *sub_191B1F8DC@<X0>(void *a1@<X8>)
{
  if (qword_1E92E2960 != -1) {
    swift_once();
  }

  return memcpy(a1, &xmmword_1E92E2800, 0x159uLL);
}

uint64_t type metadata accessor for LargeRectangularFontDefinition()
{
  return self;
}

void sub_191B1F970()
{
}

uint64_t sub_191B1F9BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultAccessoryWidgetFontDefinition()
{
  return self;
}

char *sub_191B1F9F4(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v11 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for JindoViewCollection();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v128 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v122 = v8;
      uint64_t v12 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      long long v13 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 2) = v13;
      uint64_t v14 = v13;
      uint64_t v15 = **(void (***)(char *, char *, uint64_t))(v13 - 8);
      id v16 = v12;
      v15(a1 + 8, a2 + 8, v14);
      uint64_t v17 = *(int *)(v7 + 24);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
      v18[16] = a2[v17 + 16];
      *(_OWORD *)(v18 + 24) = *(_OWORD *)&a2[v17 + 24];
      v18[40] = a2[v17 + 40];
      *((void *)v18 + 6) = *(void *)&a2[v17 + 48];
      *(_OWORD *)(v18 + 56) = *(_OWORD *)&a2[v17 + 56];
      *(_OWORD *)(v18 + 72) = *(_OWORD *)&a2[v17 + 72];
      v18[88] = a2[v17 + 88];
      *((_OWORD *)v18 + 6) = *(_OWORD *)&a2[v17 + 96];
      uint64_t v129 = type metadata accessor for MetricsRequest(0);
      uint64_t v20 = *(int *)(v129 + 40);
      uint64_t v21 = &v18[v20];
      uint64_t v22 = &v19[v20];
      uint64_t v23 = sub_191CF43F8();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      uint64_t v121 = v24;
      if (v124(v22, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v26 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
      uint64_t v27 = &v18[v26];
      long long v28 = &v19[v26];
      id v29 = (int *)type metadata accessor for JindoMetricsDefinition(0);
      uint64_t v30 = *((void *)v29 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        uint64_t v32 = v122;
      }
      else
      {
        uint64_t v119 = v30;
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
        uint64_t v33 = v29[5];
        uint64_t v34 = &v27[v33];
        int v35 = &v28[v33];
        v34[16] = v35[16];
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
        v34[40] = v35[40];
        *((void *)v34 + 6) = *((void *)v35 + 6);
        *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
        *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
        v34[88] = v35[88];
        *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
        uint64_t v36 = *(int *)(v129 + 40);
        uint64_t v37 = &v34[v36];
        uint64_t v38 = &v35[v36];
        if (v124(&v35[v36], 1, v23))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v37, v38, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v37, 0, 1, v23);
        }
        uint64_t v40 = v29[6];
        uint64_t v41 = &v27[v40];
        uint64_t v42 = &v28[v40];
        *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
        v41[16] = v42[16];
        *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
        v41[40] = v42[40];
        *((void *)v41 + 6) = *((void *)v42 + 6);
        *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
        *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
        v41[88] = v42[88];
        *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
        uint64_t v43 = *(int *)(v129 + 40);
        long long v44 = &v41[v43];
        long long v45 = &v42[v43];
        if (v124(&v42[v43], 1, v23))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v44, v45, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v44, 0, 1, v23);
        }
        uint64_t v47 = v29[7];
        uint64_t v48 = &v27[v47];
        uint64_t v49 = &v28[v47];
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        v48[16] = v49[16];
        *(_OWORD *)(v48 + 24) = *(_OWORD *)(v49 + 24);
        v48[40] = v49[40];
        *((void *)v48 + 6) = *((void *)v49 + 6);
        *(_OWORD *)(v48 + 56) = *(_OWORD *)(v49 + 56);
        *(_OWORD *)(v48 + 72) = *(_OWORD *)(v49 + 72);
        v48[88] = v49[88];
        *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
        uint64_t v50 = *(int *)(v129 + 40);
        uint64_t v51 = &v48[v50];
        uint64_t v52 = &v49[v50];
        if (v124(&v49[v50], 1, v23))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v51, v52, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v51, 0, 1, v23);
        }
        uint64_t v6 = v128;
        uint64_t v54 = v29[8];
        uint64_t v55 = &v27[v54];
        uint64_t v56 = &v28[v54];
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        v55[16] = v56[16];
        *(_OWORD *)(v55 + 24) = *(_OWORD *)(v56 + 24);
        v55[40] = v56[40];
        *((void *)v55 + 6) = *((void *)v56 + 6);
        *(_OWORD *)(v55 + 56) = *(_OWORD *)(v56 + 56);
        *(_OWORD *)(v55 + 72) = *(_OWORD *)(v56 + 72);
        v55[88] = v56[88];
        *((_OWORD *)v55 + 6) = *((_OWORD *)v56 + 6);
        uint64_t v57 = *(int *)(v129 + 40);
        uint64_t v58 = &v55[v57];
        uint64_t v59 = &v56[v57];
        if (v124(&v56[v57], 1, v23))
        {
          uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v58, v59, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v58, 0, 1, v23);
        }
        uint64_t v32 = v122;
        (*(void (**)(char *, void, uint64_t, int *))(v119 + 56))(v27, 0, 1, v29);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v7);
    }
    uint64_t v61 = v6[5];
    uint64_t v62 = v6[6];
    uint64_t v63 = *(void **)&a2[v61];
    *(void *)&a1[v61] = v63;
    *(void *)&a1[v62] = *(void *)&a2[v62];
    uint64_t v64 = v6[7];
    uint64_t v126 = a1;
    uint64_t v65 = &a1[v64];
    uint64_t v123 = a2;
    uint64_t v66 = &a2[v64];
    *(_OWORD *)uint64_t v65 = *(_OWORD *)&a2[v64];
    v65[16] = a2[v64 + 16];
    *(_OWORD *)(v65 + 24) = *(_OWORD *)&a2[v64 + 24];
    v65[40] = a2[v64 + 40];
    *((void *)v65 + 6) = *(void *)&a2[v64 + 48];
    *(_OWORD *)(v65 + 56) = *(_OWORD *)&a2[v64 + 56];
    *(_OWORD *)(v65 + 72) = *(_OWORD *)&a2[v64 + 72];
    v65[88] = a2[v64 + 88];
    *((_OWORD *)v65 + 6) = *(_OWORD *)&a2[v64 + 96];
    uint64_t v125 = type metadata accessor for MetricsRequest(0);
    uint64_t v67 = *(int *)(v125 + 40);
    uint64_t v68 = &v65[v67];
    id v69 = &v66[v67];
    uint64_t v70 = sub_191CF43F8();
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    id v73 = v63;
    swift_retain();
    unint64_t v130 = v72;
    if (v72(v69, 1, v70))
    {
      uint64_t v74 = v70;
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v68, v69, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      uint64_t v74 = v70;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    uint64_t v76 = v71;
    uint64_t v11 = v126;
    uint64_t v77 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    uint64_t v78 = &v65[v77];
    uint64_t v79 = &v66[v77];
    uint64_t v80 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v81 = *((void *)v80 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
      char v83 = v128;
      uint64_t v84 = v123;
    }
    else
    {
      uint64_t v127 = v81;
      *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
      uint64_t v85 = v80[5];
      uint64_t v86 = &v78[v85];
      uint64_t v87 = &v79[v85];
      v86[16] = v87[16];
      *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
      *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
      v86[40] = v87[40];
      *((void *)v86 + 6) = *((void *)v87 + 6);
      *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
      *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
      v86[88] = v87[88];
      *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
      uint64_t v88 = *(int *)(v125 + 40);
      uint64_t v89 = &v86[v88];
      long long v90 = &v87[v88];
      uint64_t v91 = v74;
      if (v130(&v87[v88], 1, v74))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v89, v90, v74);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v89, 0, 1, v74);
      }
      uint64_t v93 = v80[6];
      uint64_t v94 = &v78[v93];
      uint64_t v95 = &v79[v93];
      *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
      v94[16] = v95[16];
      *(_OWORD *)(v94 + 24) = *(_OWORD *)(v95 + 24);
      v94[40] = v95[40];
      *((void *)v94 + 6) = *((void *)v95 + 6);
      *(_OWORD *)(v94 + 56) = *(_OWORD *)(v95 + 56);
      *(_OWORD *)(v94 + 72) = *(_OWORD *)(v95 + 72);
      v94[88] = v95[88];
      *((_OWORD *)v94 + 6) = *((_OWORD *)v95 + 6);
      uint64_t v96 = *(int *)(v125 + 40);
      char v97 = &v94[v96];
      int v98 = &v95[v96];
      if (v130(&v95[v96], 1, v74))
      {
        uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v97, v98, v74);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v97, 0, 1, v74);
      }
      uint64_t v100 = v80[7];
      id v101 = &v78[v100];
      uint64_t v102 = &v79[v100];
      *(_OWORD *)id v101 = *(_OWORD *)v102;
      v101[16] = v102[16];
      *(_OWORD *)(v101 + 24) = *(_OWORD *)(v102 + 24);
      v101[40] = v102[40];
      *((void *)v101 + 6) = *((void *)v102 + 6);
      *(_OWORD *)(v101 + 56) = *(_OWORD *)(v102 + 56);
      *(_OWORD *)(v101 + 72) = *(_OWORD *)(v102 + 72);
      v101[88] = v102[88];
      *((_OWORD *)v101 + 6) = *((_OWORD *)v102 + 6);
      uint64_t v103 = *(int *)(v125 + 40);
      uint64_t v104 = &v101[v103];
      uint64_t v105 = &v102[v103];
      uint64_t v120 = v76;
      if (v130(&v102[v103], 1, v74))
      {
        uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v104, v105, v74);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v104, 0, 1, v74);
      }
      uint64_t v107 = v80[8];
      uint64_t v108 = &v78[v107];
      long long v109 = &v79[v107];
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      v108[16] = v109[16];
      *(_OWORD *)(v108 + 24) = *(_OWORD *)(v109 + 24);
      v108[40] = v109[40];
      *((void *)v108 + 6) = *((void *)v109 + 6);
      *(_OWORD *)(v108 + 56) = *(_OWORD *)(v109 + 56);
      *(_OWORD *)(v108 + 72) = *(_OWORD *)(v109 + 72);
      v108[88] = v109[88];
      *((_OWORD *)v108 + 6) = *((_OWORD *)v109 + 6);
      uint64_t v110 = *(int *)(v125 + 40);
      char v111 = &v108[v110];
      v112 = &v109[v110];
      char v83 = v128;
      if (v130(&v109[v110], 1, v91))
      {
        uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v111, v112, v91);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v111, 0, 1, v91);
      }
      uint64_t v84 = v123;
      (*(void (**)(char *, void, uint64_t, int *))(v127 + 56))(v78, 0, 1, v80);
    }
    uint64_t v114 = v83[9];
    *(void *)&v11[v83[8]] = *(void *)((char *)v84 + v83[8]);
    uint64_t v115 = (uint64_t)&v11[v114];
    uint64_t v116 = (uint64_t)v84 + v114;
    uint64_t v117 = *(void *)(v116 + 8);
    *(void *)uint64_t v115 = *(void *)v116;
    *(void *)(v115 + 8) = v117;
    *(unsigned char *)(v115 + 16) = *(unsigned char *)(v116 + 16);
    *(_WORD *)(v115 + 17) = *(_WORD *)(v116 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_191B20834(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JindoViewCollection();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 1));
    int v5 = (char *)a1 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for MetricsRequest(0);
    uint64_t v7 = &v5[*(int *)(v6 + 40)];
    uint64_t v8 = sub_191CF43F8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v11 = &v5[*(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20)];
    uint64_t v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v12 - 1) + 48))(v11, 1, v12))
    {
      uint64_t v33 = a2;
      uint64_t v13 = v6;
      uint64_t v14 = *(int *)(v6 + 40);
      uint64_t v15 = &v11[v12[5] + v14];
      if (!v10(v15, 1, v8))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        uint64_t v14 = *(int *)(v13 + 40);
      }
      id v16 = &v11[v12[6] + v14];
      if (!v10(v16, 1, v8))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
        uint64_t v14 = *(int *)(v13 + 40);
      }
      uint64_t v17 = &v11[v12[7] + v14];
      if (!v10(v17, 1, v8))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        uint64_t v14 = *(int *)(v13 + 40);
      }
      uint64_t v18 = &v11[v12[8] + v14];
      a2 = v33;
      if (!v10(v18, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
      }
    }
  }

  swift_release();
  uint64_t v19 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v20 = type metadata accessor for MetricsRequest(0);
  uint64_t v21 = &v19[*(int *)(v20 + 40)];
  uint64_t v22 = sub_191CF43F8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22)) {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  }
  uint64_t v25 = &v19[*(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20)];
  uint64_t v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v26 - 1) + 48))(v25, 1, v26))
  {
    uint64_t v27 = *(int *)(v20 + 40);
    long long v28 = &v25[v26[5] + v27];
    if (!v24(v28, 1, v22))
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
      uint64_t v27 = *(int *)(v20 + 40);
    }
    id v29 = &v25[v26[6] + v27];
    if (!v24(v29, 1, v22))
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
      uint64_t v27 = *(int *)(v20 + 40);
    }
    uint64_t v30 = &v25[v26[7] + v27];
    if (!v24(v30, 1, v22))
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v22);
      uint64_t v27 = *(int *)(v20 + 40);
    }
    uint64_t v31 = &v25[v26[8] + v27];
    if (!v24(v31, 1, v22)) {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v22);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_OWORD *sub_191B20D34(_OWORD *a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for JindoViewCollection();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v125 = a3;
  uint64_t v126 = a2;
  uint64_t v124 = a1;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v119 = v7;
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    long long v10 = *((_OWORD *)a2 + 2);
    a1[2] = v10;
    uint64_t v11 = v10;
    uint64_t v12 = **(void (***)(char *, void **, uint64_t))(v10 - 8);
    id v13 = v9;
    v12((char *)a1 + 8, a2 + 1, v11);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = (char *)a1 + v14;
    id v16 = (char *)a2 + v14;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)((char *)a2 + v14);
    v15[16] = *((unsigned char *)a2 + v14 + 16);
    *(_OWORD *)(v15 + 24) = *(_OWORD *)((char *)a2 + v14 + 24);
    v15[40] = *((unsigned char *)a2 + v14 + 40);
    *((void *)v15 + 6) = *(void **)((char *)a2 + v14 + 48);
    *(_OWORD *)(v15 + 56) = *(_OWORD *)((char *)a2 + v14 + 56);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)((char *)a2 + v14 + 72);
    v15[88] = *((unsigned char *)a2 + v14 + 88);
    *((_OWORD *)v15 + 6) = *(_OWORD *)((char *)a2 + v14 + 96);
    uint64_t v121 = type metadata accessor for MetricsRequest(0);
    uint64_t v17 = *(int *)(v121 + 40);
    uint64_t v18 = &v15[v17];
    uint64_t v19 = &v16[v17];
    uint64_t v20 = sub_191CF43F8();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v24 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    uint64_t v25 = &v15[v24];
    uint64_t v26 = &v16[v24];
    uint64_t v27 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      a3 = v125;
      a2 = v126;
      uint64_t v30 = v119;
    }
    else
    {
      uint64_t v117 = v28;
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      uint64_t v31 = v27[5];
      uint64_t v32 = &v25[v31];
      uint64_t v33 = &v26[v31];
      v32[16] = v33[16];
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
      v32[40] = v33[40];
      *((void *)v32 + 6) = *((void *)v33 + 6);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
      v32[88] = v33[88];
      *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
      uint64_t v34 = *(int *)(v121 + 40);
      int v35 = &v32[v34];
      uint64_t v36 = &v33[v34];
      if (v22(&v33[v34], 1, v20))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v35, v36, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v35, 0, 1, v20);
      }
      uint64_t v38 = v27[6];
      uint64_t v39 = &v25[v38];
      uint64_t v40 = &v26[v38];
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
      *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
      v39[40] = v40[40];
      *((void *)v39 + 6) = *((void *)v40 + 6);
      *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      v39[88] = v40[88];
      *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
      uint64_t v41 = *(int *)(v121 + 40);
      uint64_t v42 = &v39[v41];
      uint64_t v43 = &v40[v41];
      if (v22(&v40[v41], 1, v20))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v42, v43, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v42, 0, 1, v20);
      }
      uint64_t v45 = v27[7];
      uint64_t v46 = &v25[v45];
      uint64_t v47 = &v26[v45];
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      v46[16] = v47[16];
      *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 24);
      v46[40] = v47[40];
      *((void *)v46 + 6) = *((void *)v47 + 6);
      *(_OWORD *)(v46 + 56) = *(_OWORD *)(v47 + 56);
      *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
      v46[88] = v47[88];
      *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
      uint64_t v48 = *(int *)(v121 + 40);
      uint64_t v49 = &v46[v48];
      uint64_t v50 = &v47[v48];
      if (v22(&v47[v48], 1, v20))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v49, v50, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v49, 0, 1, v20);
      }
      uint64_t v52 = v27[8];
      uint64_t v53 = &v25[v52];
      uint64_t v54 = &v26[v52];
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      v53[16] = v54[16];
      *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
      v53[40] = v54[40];
      *((void *)v53 + 6) = *((void *)v54 + 6);
      *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
      *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
      v53[88] = v54[88];
      *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
      uint64_t v55 = *(int *)(v121 + 40);
      uint64_t v56 = &v53[v55];
      uint64_t v57 = &v54[v55];
      a1 = v124;
      if (v22(&v54[v55], 1, v20))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v56, v57, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v56, 0, 1, v20);
      }
      a2 = v126;
      uint64_t v30 = v119;
      (*(void (**)(char *, void, uint64_t, int *))(v117 + 56))(v25, 0, 1, v27);
      a3 = v125;
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v6);
  }
  uint64_t v59 = a3[5];
  uint64_t v60 = a3[6];
  uint64_t v61 = *(void **)((char *)a2 + v59);
  *(void *)((char *)a1 + v59) = v61;
  *(void *)((char *)a1 + v60) = *(void **)((char *)a2 + v60);
  uint64_t v62 = a3[7];
  uint64_t v63 = (char *)a1 + v62;
  uint64_t v64 = (char *)a2 + v62;
  *(_OWORD *)uint64_t v63 = *(_OWORD *)((char *)a2 + v62);
  v63[16] = *((unsigned char *)a2 + v62 + 16);
  *(_OWORD *)(v63 + 24) = *(_OWORD *)((char *)a2 + v62 + 24);
  v63[40] = *((unsigned char *)a2 + v62 + 40);
  *((void *)v63 + 6) = *(void **)((char *)a2 + v62 + 48);
  *(_OWORD *)(v63 + 56) = *(_OWORD *)((char *)a2 + v62 + 56);
  *(_OWORD *)(v63 + 72) = *(_OWORD *)((char *)a2 + v62 + 72);
  v63[88] = *((unsigned char *)a2 + v62 + 88);
  *((_OWORD *)v63 + 6) = *(_OWORD *)((char *)a2 + v62 + 96);
  uint64_t v122 = type metadata accessor for MetricsRequest(0);
  uint64_t v65 = *(int *)(v122 + 40);
  uint64_t v66 = &v63[v65];
  uint64_t v67 = &v64[v65];
  uint64_t v68 = sub_191CF43F8();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  id v71 = v61;
  uint64_t v72 = v68;
  swift_retain();
  uint64_t v118 = v69;
  uint64_t v120 = v70;
  if (v70(v67, 1, v68))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v74 = v122;
  uint64_t v75 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v76 = &v63[v75];
  uint64_t v77 = &v64[v75];
  uint64_t v78 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v79 = *((void *)v78 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v77, 1, v78))
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    uint64_t v81 = v124;
    uint64_t v82 = v126;
  }
  else
  {
    *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
    uint64_t v83 = v78[5];
    uint64_t v84 = &v76[v83];
    uint64_t v85 = &v77[v83];
    v84[16] = v85[16];
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    *(_OWORD *)(v84 + 24) = *(_OWORD *)(v85 + 24);
    v84[40] = v85[40];
    *((void *)v84 + 6) = *((void *)v85 + 6);
    *(_OWORD *)(v84 + 56) = *(_OWORD *)(v85 + 56);
    *(_OWORD *)(v84 + 72) = *(_OWORD *)(v85 + 72);
    v84[88] = v85[88];
    *((_OWORD *)v84 + 6) = *((_OWORD *)v85 + 6);
    uint64_t v86 = *(int *)(v122 + 40);
    uint64_t v87 = &v84[v86];
    uint64_t v88 = &v85[v86];
    uint64_t v89 = v120;
    if (v120(&v85[v86], 1, v68))
    {
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v87, v88, v68);
      uint64_t v89 = v120;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v87, 0, 1, v68);
    }
    uint64_t v91 = v78[6];
    uint64_t v92 = &v76[v91];
    uint64_t v93 = &v77[v91];
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    v92[16] = v93[16];
    *(_OWORD *)(v92 + 24) = *(_OWORD *)(v93 + 24);
    v92[40] = v93[40];
    *((void *)v92 + 6) = *((void *)v93 + 6);
    *(_OWORD *)(v92 + 56) = *(_OWORD *)(v93 + 56);
    *(_OWORD *)(v92 + 72) = *(_OWORD *)(v93 + 72);
    v92[88] = v93[88];
    *((_OWORD *)v92 + 6) = *((_OWORD *)v93 + 6);
    uint64_t v94 = *(int *)(v122 + 40);
    uint64_t v95 = &v92[v94];
    uint64_t v96 = &v93[v94];
    if (v89(&v93[v94], 1, v68))
    {
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v95, v96, v68);
      uint64_t v89 = v120;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v95, 0, 1, v68);
    }
    uint64_t v98 = v78[7];
    uint64_t v99 = &v76[v98];
    uint64_t v100 = &v77[v98];
    *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
    v99[16] = v100[16];
    *(_OWORD *)(v99 + 24) = *(_OWORD *)(v100 + 24);
    v99[40] = v100[40];
    *((void *)v99 + 6) = *((void *)v100 + 6);
    *(_OWORD *)(v99 + 56) = *(_OWORD *)(v100 + 56);
    *(_OWORD *)(v99 + 72) = *(_OWORD *)(v100 + 72);
    v99[88] = v100[88];
    *((_OWORD *)v99 + 6) = *((_OWORD *)v100 + 6);
    uint64_t v101 = *(int *)(v122 + 40);
    uint64_t v102 = &v99[v101];
    uint64_t v103 = &v100[v101];
    uint64_t v123 = v79;
    if (v89(&v100[v101], 1, v68))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v102, v103, v68);
      uint64_t v89 = v120;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v102, 0, 1, v68);
    }
    uint64_t v105 = v78[8];
    uint64_t v106 = &v76[v105];
    uint64_t v107 = &v77[v105];
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    v106[16] = v107[16];
    *(_OWORD *)(v106 + 24) = *(_OWORD *)(v107 + 24);
    v106[40] = v107[40];
    *((void *)v106 + 6) = *((void *)v107 + 6);
    *(_OWORD *)(v106 + 56) = *(_OWORD *)(v107 + 56);
    *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
    v106[88] = v107[88];
    *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
    uint64_t v108 = *(int *)(v74 + 40);
    long long v109 = &v106[v108];
    uint64_t v110 = &v107[v108];
    uint64_t v81 = v124;
    if (v89(&v107[v108], 1, v72))
    {
      uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v109, v110, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v109, 0, 1, v72);
    }
    uint64_t v82 = v126;
    (*(void (**)(char *, void, uint64_t, int *))(v123 + 56))(v76, 0, 1, v78);
  }
  uint64_t v112 = v125[9];
  *(void *)((char *)v81 + v125[8]) = *(void **)((char *)v82 + v125[8]);
  uint64_t v113 = (uint64_t)v81 + v112;
  uint64_t v114 = (uint64_t)v82 + v112;
  uint64_t v115 = *(void *)(v114 + 8);
  *(void *)uint64_t v113 = *(void *)v114;
  *(void *)(v113 + 8) = v115;
  *(unsigned char *)(v113 + 16) = *(unsigned char *)(v114 + 16);
  *(_WORD *)(v113 + 17) = *(_WORD *)(v114 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v81;
}

void *sub_191B21B00(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for JindoViewCollection();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  v339 = a1;
  v340 = a2;
  v341 = a3;
  if (!v9)
  {
    if (v10)
    {
      sub_191B27A64((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
      goto LABEL_7;
    }
    uint64_t v27 = (void *)*a2;
    uint64_t v28 = (void *)*a1;
    *a1 = *a2;
    id v29 = v27;

    __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
    uint64_t v30 = *(int *)(v6 + 24);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    long long v33 = *(_OWORD *)((char *)a2 + v30);
    v31[16] = *((unsigned char *)a2 + v30 + 16);
    *(_OWORD *)uint64_t v31 = v33;
    long long v34 = *(_OWORD *)((char *)a2 + v30 + 24);
    v31[40] = *((unsigned char *)a2 + v30 + 40);
    *(_OWORD *)(v31 + 24) = v34;
    *((void *)v31 + 6) = *(void *)((char *)a2 + v30 + 48);
    long long v35 = *(_OWORD *)((char *)a2 + v30 + 56);
    long long v36 = *(_OWORD *)((char *)a2 + v30 + 72);
    v31[88] = *((unsigned char *)a2 + v30 + 88);
    *(_OWORD *)(v31 + 72) = v36;
    *(_OWORD *)(v31 + 56) = v35;
    *((void *)v31 + 12) = *(void *)((char *)a2 + v30 + 96);
    *((void *)v31 + 13) = *(void *)((char *)a2 + v30 + 104);
    uint64_t v343 = type metadata accessor for MetricsRequest(0);
    uint64_t v37 = *(int *)(v343 + 40);
    uint64_t v38 = &v31[v37];
    uint64_t v39 = &v32[v37];
    uint64_t v40 = sub_191CF43F8();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
    int v43 = v42(v38, 1, v40);
    int v44 = v42(v39, 1, v40);
    uint64_t v337 = v41;
    if (v43)
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_19:
        uint64_t v63 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
        uint64_t v64 = &v31[v63];
        uint64_t v65 = &v32[v63];
        uint64_t v66 = (int *)type metadata accessor for JindoMetricsDefinition(0);
        uint64_t v67 = *((void *)v66 - 1);
        uint64_t v68 = *(uint64_t (**)(char *, uint64_t, int *))(v67 + 48);
        int v69 = v68(v64, 1, v66);
        int v70 = v68(v65, 1, v66);
        if (v69)
        {
          if (!v70)
          {
            *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
            uint64_t v71 = v66[5];
            uint64_t v72 = &v64[v71];
            uint64_t v73 = &v65[v71];
            long long v74 = *(_OWORD *)v73;
            v72[16] = v73[16];
            *(_OWORD *)uint64_t v72 = v74;
            long long v75 = *(_OWORD *)(v73 + 24);
            v72[40] = v73[40];
            *(_OWORD *)(v72 + 24) = v75;
            *((void *)v72 + 6) = *((void *)v73 + 6);
            long long v76 = *(_OWORD *)(v73 + 56);
            long long v77 = *(_OWORD *)(v73 + 72);
            v72[88] = v73[88];
            *(_OWORD *)(v72 + 72) = v77;
            *(_OWORD *)(v72 + 56) = v76;
            *((void *)v72 + 12) = *((void *)v73 + 12);
            *((void *)v72 + 13) = *((void *)v73 + 13);
            uint64_t v78 = *(int *)(v343 + 40);
            uint64_t v79 = &v72[v78];
            uint64_t v80 = &v73[v78];
            if (v42(&v73[v78], 1, v40))
            {
              uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v79, v80, v40);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v79, 0, 1, v40);
            }
            uint64_t v128 = v66[6];
            uint64_t v129 = &v64[v128];
            unint64_t v130 = &v65[v128];
            long long v131 = *(_OWORD *)v130;
            v129[16] = v130[16];
            *(_OWORD *)uint64_t v129 = v131;
            long long v132 = *(_OWORD *)(v130 + 24);
            v129[40] = v130[40];
            *(_OWORD *)(v129 + 24) = v132;
            *((void *)v129 + 6) = *((void *)v130 + 6);
            long long v133 = *(_OWORD *)(v130 + 56);
            long long v134 = *(_OWORD *)(v130 + 72);
            v129[88] = v130[88];
            *(_OWORD *)(v129 + 72) = v134;
            *(_OWORD *)(v129 + 56) = v133;
            *((void *)v129 + 12) = *((void *)v130 + 12);
            *((void *)v129 + 13) = *((void *)v130 + 13);
            uint64_t v135 = *(int *)(v343 + 40);
            uint64_t v136 = &v129[v135];
            v137 = &v130[v135];
            if (v42(&v130[v135], 1, v40))
            {
              uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v136, v137, v40);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v136, 0, 1, v40);
            }
            uint64_t v139 = v66[7];
            uint64_t v140 = &v64[v139];
            v141 = &v65[v139];
            long long v142 = *(_OWORD *)v141;
            v140[16] = v141[16];
            *(_OWORD *)uint64_t v140 = v142;
            long long v143 = *(_OWORD *)(v141 + 24);
            v140[40] = v141[40];
            *(_OWORD *)(v140 + 24) = v143;
            *((void *)v140 + 6) = *((void *)v141 + 6);
            long long v144 = *(_OWORD *)(v141 + 56);
            long long v145 = *(_OWORD *)(v141 + 72);
            v140[88] = v141[88];
            *(_OWORD *)(v140 + 72) = v145;
            *(_OWORD *)(v140 + 56) = v144;
            *((void *)v140 + 12) = *((void *)v141 + 12);
            *((void *)v140 + 13) = *((void *)v141 + 13);
            uint64_t v146 = *(int *)(v343 + 40);
            v147 = &v140[v146];
            v148 = &v141[v146];
            if (v42(&v141[v146], 1, v40))
            {
              uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v147, v148, v40);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v147, 0, 1, v40);
            }
            uint64_t v150 = v66[8];
            v151 = &v64[v150];
            v152 = &v65[v150];
            long long v153 = *(_OWORD *)v152;
            v151[16] = v152[16];
            *(_OWORD *)v151 = v153;
            long long v154 = *(_OWORD *)(v152 + 24);
            v151[40] = v152[40];
            *(_OWORD *)(v151 + 24) = v154;
            *((void *)v151 + 6) = *((void *)v152 + 6);
            long long v155 = *(_OWORD *)(v152 + 56);
            long long v156 = *(_OWORD *)(v152 + 72);
            v151[88] = v152[88];
            *(_OWORD *)(v151 + 72) = v156;
            *(_OWORD *)(v151 + 56) = v155;
            *((void *)v151 + 12) = *((void *)v152 + 12);
            *((void *)v151 + 13) = *((void *)v152 + 13);
            uint64_t v157 = *(int *)(v343 + 40);
            v158 = &v151[v157];
            v159 = &v152[v157];
            a1 = v339;
            if (v42(&v152[v157], 1, v40))
            {
              uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v158, v159, v40);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v158, 0, 1, v40);
            }
            (*(void (**)(char *, void, uint64_t, int *))(v67 + 56))(v64, 0, 1, v66);
            goto LABEL_53;
          }
LABEL_25:
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
          memcpy(v64, v65, *(void *)(*(void *)(v82 - 8) + 64));
          a1 = v339;
LABEL_53:
          a2 = v340;
          a3 = v341;
          goto LABEL_54;
        }
        if (v70)
        {
          sub_191B27A64((uint64_t)v64, type metadata accessor for JindoMetricsDefinition);
          goto LABEL_25;
        }
        *(void *)uint64_t v64 = *(void *)v65;
        *((void *)v64 + 1) = *((void *)v65 + 1);
        uint64_t v116 = v66[5];
        uint64_t v117 = &v64[v116];
        uint64_t v118 = &v65[v116];
        long long v119 = *(_OWORD *)v118;
        v117[16] = v118[16];
        *(_OWORD *)uint64_t v117 = v119;
        long long v120 = *(_OWORD *)(v118 + 24);
        v117[40] = v118[40];
        *(_OWORD *)(v117 + 24) = v120;
        *((void *)v117 + 6) = *((void *)v118 + 6);
        long long v121 = *(_OWORD *)(v118 + 56);
        long long v122 = *(_OWORD *)(v118 + 72);
        v117[88] = v118[88];
        *(_OWORD *)(v117 + 72) = v122;
        *(_OWORD *)(v117 + 56) = v121;
        *((void *)v117 + 12) = *((void *)v118 + 12);
        *((void *)v117 + 13) = *((void *)v118 + 13);
        uint64_t v123 = *(int *)(v343 + 40);
        uint64_t v124 = &v117[v123];
        uint64_t v125 = &v118[v123];
        int v126 = v42(&v117[v123], 1, v40);
        int v127 = v42(v125, 1, v40);
        if (v126)
        {
          if (!v127)
          {
            (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v124, v125, v40);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v124, 0, 1, v40);
            goto LABEL_112;
          }
        }
        else
        {
          if (!v127)
          {
            (*(void (**)(char *, char *, uint64_t))(v337 + 24))(v124, v125, v40);
LABEL_112:
            uint64_t v296 = v66[6];
            v297 = &v64[v296];
            v298 = &v65[v296];
            long long v299 = *(_OWORD *)v298;
            v297[16] = v298[16];
            *(_OWORD *)v297 = v299;
            long long v300 = *(_OWORD *)(v298 + 24);
            v297[40] = v298[40];
            *(_OWORD *)(v297 + 24) = v300;
            *((void *)v297 + 6) = *((void *)v298 + 6);
            long long v301 = *(_OWORD *)(v298 + 56);
            long long v302 = *(_OWORD *)(v298 + 72);
            v297[88] = v298[88];
            *(_OWORD *)(v297 + 72) = v302;
            *(_OWORD *)(v297 + 56) = v301;
            *((void *)v297 + 12) = *((void *)v298 + 12);
            *((void *)v297 + 13) = *((void *)v298 + 13);
            uint64_t v303 = *(int *)(v343 + 40);
            v304 = &v297[v303];
            v305 = &v298[v303];
            int v306 = v42(&v297[v303], 1, v40);
            int v307 = v42(v305, 1, v40);
            if (v306)
            {
              if (!v307)
              {
                (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v304, v305, v40);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v304, 0, 1, v40);
                goto LABEL_118;
              }
            }
            else
            {
              if (!v307)
              {
                (*(void (**)(char *, char *, uint64_t))(v337 + 24))(v304, v305, v40);
LABEL_118:
                uint64_t v309 = v66[7];
                v310 = &v64[v309];
                v311 = &v65[v309];
                long long v312 = *(_OWORD *)v311;
                v310[16] = v311[16];
                *(_OWORD *)v310 = v312;
                long long v313 = *(_OWORD *)(v311 + 24);
                v310[40] = v311[40];
                *(_OWORD *)(v310 + 24) = v313;
                *((void *)v310 + 6) = *((void *)v311 + 6);
                long long v314 = *(_OWORD *)(v311 + 56);
                long long v315 = *(_OWORD *)(v311 + 72);
                v310[88] = v311[88];
                *(_OWORD *)(v310 + 72) = v315;
                *(_OWORD *)(v310 + 56) = v314;
                *((void *)v310 + 12) = *((void *)v311 + 12);
                *((void *)v310 + 13) = *((void *)v311 + 13);
                uint64_t v316 = *(int *)(v343 + 40);
                v317 = &v310[v316];
                v318 = &v311[v316];
                int v319 = v42(&v310[v316], 1, v40);
                int v320 = v42(v318, 1, v40);
                if (v319)
                {
                  if (!v320)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v317, v318, v40);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v317, 0, 1, v40);
                    goto LABEL_124;
                  }
                }
                else
                {
                  if (!v320)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v337 + 24))(v317, v318, v40);
LABEL_124:
                    uint64_t v322 = v66[8];
                    v323 = &v64[v322];
                    v324 = &v65[v322];
                    long long v325 = *(_OWORD *)v324;
                    v323[16] = v324[16];
                    *(_OWORD *)v323 = v325;
                    long long v326 = *(_OWORD *)(v324 + 24);
                    v323[40] = v324[40];
                    *(_OWORD *)(v323 + 24) = v326;
                    *((void *)v323 + 6) = *((void *)v324 + 6);
                    long long v327 = *(_OWORD *)(v324 + 56);
                    long long v328 = *(_OWORD *)(v324 + 72);
                    v323[88] = v324[88];
                    *(_OWORD *)(v323 + 72) = v328;
                    *(_OWORD *)(v323 + 56) = v327;
                    *((void *)v323 + 12) = *((void *)v324 + 12);
                    *((void *)v323 + 13) = *((void *)v324 + 13);
                    uint64_t v329 = *(int *)(v343 + 40);
                    v330 = &v323[v329];
                    v331 = &v324[v329];
                    int v332 = v42(&v323[v329], 1, v40);
                    int v333 = v42(v331, 1, v40);
                    a1 = v339;
                    if (v332)
                    {
                      a2 = v340;
                      if (!v333)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v337 + 16))(v330, v331, v40);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v337 + 56))(v330, 0, 1, v40);
                        a3 = v341;
                        goto LABEL_54;
                      }
                    }
                    else
                    {
                      a2 = v340;
                      if (!v333)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v337 + 24))(v330, v331, v40);
                        a3 = v341;
                        goto LABEL_54;
                      }
                      (*(void (**)(char *, uint64_t))(v337 + 8))(v330, v40);
                    }
                    uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                    memcpy(v330, v331, *(void *)(*(void *)(v334 - 8) + 64));
                    a3 = v341;
                    goto LABEL_54;
                  }
                  (*(void (**)(char *, uint64_t))(v337 + 8))(v317, v40);
                }
                uint64_t v321 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v317, v318, *(void *)(*(void *)(v321 - 8) + 64));
                goto LABEL_124;
              }
              (*(void (**)(char *, uint64_t))(v337 + 8))(v304, v40);
            }
            uint64_t v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v304, v305, *(void *)(*(void *)(v308 - 8) + 64));
            goto LABEL_118;
          }
          (*(void (**)(char *, uint64_t))(v337 + 8))(v124, v40);
        }
        uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v124, v125, *(void *)(*(void *)(v295 - 8) + 64));
        goto LABEL_112;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
    }
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v38, v39, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
    memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_54;
  }
  uint64_t v11 = (void *)*a2;
  *a1 = *a2;
  uint64_t v12 = a2[4];
  a1[4] = v12;
  a1[5] = a2[5];
  id v13 = **(void (***)(void *, void *, uint64_t))(v12 - 8);
  id v14 = v11;
  v13(a1 + 1, a2 + 1, v12);
  uint64_t v15 = *(int *)(v6 + 24);
  id v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  LOBYTE(v15) = *((unsigned char *)a2 + v15 + 16);
  *(_OWORD *)id v16 = *(_OWORD *)v17;
  v16[16] = v15;
  LOBYTE(v15) = v17[40];
  *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
  v16[40] = v15;
  *((void *)v16 + 6) = *((void *)v17 + 6);
  long long v18 = *(_OWORD *)(v17 + 56);
  long long v19 = *(_OWORD *)(v17 + 72);
  v16[88] = v17[88];
  *(_OWORD *)(v16 + 72) = v19;
  *(_OWORD *)(v16 + 56) = v18;
  *((void *)v16 + 12) = *((void *)v17 + 12);
  *((void *)v16 + 13) = *((void *)v17 + 13);
  uint64_t v342 = type metadata accessor for MetricsRequest(0);
  uint64_t v20 = *(int *)(v342 + 40);
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = sub_191CF43F8();
  uint64_t v24 = *(void *)(v23 - 8);
  v336 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v336(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v45 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v46 = &v16[v45];
  uint64_t v47 = &v17[v45];
  uint64_t v48 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v49 = *((void *)v48 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v335 = v49;
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    uint64_t v51 = v48[5];
    uint64_t v52 = &v46[v51];
    uint64_t v53 = &v47[v51];
    long long v54 = *(_OWORD *)v53;
    v52[16] = v53[16];
    *(_OWORD *)uint64_t v52 = v54;
    long long v55 = *(_OWORD *)(v53 + 24);
    v52[40] = v53[40];
    *(_OWORD *)(v52 + 24) = v55;
    *((void *)v52 + 6) = *((void *)v53 + 6);
    long long v56 = *(_OWORD *)(v53 + 56);
    long long v57 = *(_OWORD *)(v53 + 72);
    v52[88] = v53[88];
    *(_OWORD *)(v52 + 72) = v57;
    *(_OWORD *)(v52 + 56) = v56;
    *((void *)v52 + 12) = *((void *)v53 + 12);
    *((void *)v52 + 13) = *((void *)v53 + 13);
    uint64_t v58 = *(int *)(v342 + 40);
    uint64_t v59 = &v52[v58];
    uint64_t v60 = &v53[v58];
    if (v336(&v53[v58], 1, v23))
    {
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v59, v60, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v59, 0, 1, v23);
    }
    uint64_t v83 = v48[6];
    uint64_t v84 = &v46[v83];
    uint64_t v85 = &v47[v83];
    long long v86 = *(_OWORD *)v85;
    v84[16] = v85[16];
    *(_OWORD *)uint64_t v84 = v86;
    long long v87 = *(_OWORD *)(v85 + 24);
    v84[40] = v85[40];
    *(_OWORD *)(v84 + 24) = v87;
    *((void *)v84 + 6) = *((void *)v85 + 6);
    long long v88 = *(_OWORD *)(v85 + 56);
    long long v89 = *(_OWORD *)(v85 + 72);
    v84[88] = v85[88];
    *(_OWORD *)(v84 + 72) = v89;
    *(_OWORD *)(v84 + 56) = v88;
    *((void *)v84 + 12) = *((void *)v85 + 12);
    *((void *)v84 + 13) = *((void *)v85 + 13);
    uint64_t v90 = *(int *)(v342 + 40);
    uint64_t v91 = &v84[v90];
    uint64_t v92 = &v85[v90];
    if (v336(&v85[v90], 1, v23))
    {
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v91, v92, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v91, 0, 1, v23);
    }
    uint64_t v94 = v48[7];
    uint64_t v95 = &v46[v94];
    uint64_t v96 = &v47[v94];
    long long v97 = *(_OWORD *)v96;
    v95[16] = v96[16];
    *(_OWORD *)uint64_t v95 = v97;
    long long v98 = *(_OWORD *)(v96 + 24);
    v95[40] = v96[40];
    *(_OWORD *)(v95 + 24) = v98;
    *((void *)v95 + 6) = *((void *)v96 + 6);
    long long v99 = *(_OWORD *)(v96 + 56);
    long long v100 = *(_OWORD *)(v96 + 72);
    v95[88] = v96[88];
    *(_OWORD *)(v95 + 72) = v100;
    *(_OWORD *)(v95 + 56) = v99;
    *((void *)v95 + 12) = *((void *)v96 + 12);
    *((void *)v95 + 13) = *((void *)v96 + 13);
    uint64_t v101 = *(int *)(v342 + 40);
    uint64_t v102 = &v95[v101];
    uint64_t v103 = &v96[v101];
    if (v336(&v96[v101], 1, v23))
    {
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v102, v103, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v102, 0, 1, v23);
    }
    uint64_t v105 = v48[8];
    uint64_t v106 = &v46[v105];
    uint64_t v107 = &v47[v105];
    long long v108 = *(_OWORD *)v107;
    v106[16] = v107[16];
    *(_OWORD *)uint64_t v106 = v108;
    long long v109 = *(_OWORD *)(v107 + 24);
    v106[40] = v107[40];
    *(_OWORD *)(v106 + 24) = v109;
    *((void *)v106 + 6) = *((void *)v107 + 6);
    long long v110 = *(_OWORD *)(v107 + 56);
    long long v111 = *(_OWORD *)(v107 + 72);
    v106[88] = v107[88];
    *(_OWORD *)(v106 + 72) = v111;
    *(_OWORD *)(v106 + 56) = v110;
    *((void *)v106 + 12) = *((void *)v107 + 12);
    *((void *)v106 + 13) = *((void *)v107 + 13);
    uint64_t v112 = *(int *)(v342 + 40);
    uint64_t v113 = &v106[v112];
    uint64_t v114 = &v107[v112];
    a1 = v339;
    if (v336(&v107[v112], 1, v23))
    {
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v113, v114, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v113, 0, 1, v23);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v335 + 56))(v46, 0, 1, v48);
  }
  a2 = v340;
  a3 = v341;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_54:
  uint64_t v161 = a3[5];
  v162 = *(void **)((char *)a2 + v161);
  v163 = *(void **)((char *)a1 + v161);
  *(void *)((char *)a1 + v161) = v162;
  id v164 = v162;

  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v165 = a3[7];
  v166 = (char *)a1 + v165;
  v167 = (char *)a2 + v165;
  long long v168 = *(_OWORD *)((char *)a2 + v165);
  v166[16] = *((unsigned char *)a2 + v165 + 16);
  *(_OWORD *)v166 = v168;
  long long v169 = *(_OWORD *)((char *)a2 + v165 + 24);
  v166[40] = *((unsigned char *)a2 + v165 + 40);
  *(_OWORD *)(v166 + 24) = v169;
  *((void *)v166 + 6) = *(void *)((char *)a2 + v165 + 48);
  long long v170 = *(_OWORD *)((char *)a2 + v165 + 56);
  long long v171 = *(_OWORD *)((char *)a2 + v165 + 72);
  v166[88] = *((unsigned char *)a2 + v165 + 88);
  *(_OWORD *)(v166 + 72) = v171;
  *(_OWORD *)(v166 + 56) = v170;
  *((void *)v166 + 12) = *(void *)((char *)a2 + v165 + 96);
  *((void *)v166 + 13) = *(void *)((char *)a2 + v165 + 104);
  uint64_t v344 = type metadata accessor for MetricsRequest(0);
  uint64_t v172 = *(int *)(v344 + 40);
  v173 = &v166[v172];
  v174 = &v167[v172];
  uint64_t v175 = sub_191CF43F8();
  uint64_t v176 = *(void *)(v175 - 8);
  v177 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 48);
  int v178 = v177(v173, 1, v175);
  int v179 = v177(v174, 1, v175);
  uint64_t v338 = v176;
  if (v178)
  {
    if (!v179)
    {
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v173, v174, v175);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  if (v179)
  {
    (*(void (**)(char *, uint64_t))(v176 + 8))(v173, v175);
LABEL_59:
    uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v173, v174, *(void *)(*(void *)(v180 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(char *, char *, uint64_t))(v176 + 24))(v173, v174, v175);
LABEL_60:
  uint64_t v181 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v182 = &v166[v181];
  v183 = &v167[v181];
  v184 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v185 = *((void *)v184 - 1);
  v186 = *(uint64_t (**)(char *, uint64_t, int *))(v185 + 48);
  int v187 = v186(v182, 1, v184);
  int v188 = v186(v183, 1, v184);
  if (!v187)
  {
    if (v188)
    {
      sub_191B27A64((uint64_t)v182, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_66;
    }
    *(void *)v182 = *(void *)v183;
    *((void *)v182 + 1) = *((void *)v183 + 1);
    uint64_t v204 = v184[5];
    v205 = &v182[v204];
    v206 = &v183[v204];
    long long v207 = *(_OWORD *)v206;
    v205[16] = v206[16];
    *(_OWORD *)v205 = v207;
    long long v208 = *(_OWORD *)(v206 + 24);
    v205[40] = v206[40];
    *(_OWORD *)(v205 + 24) = v208;
    *((void *)v205 + 6) = *((void *)v206 + 6);
    long long v209 = *(_OWORD *)(v206 + 56);
    long long v210 = *(_OWORD *)(v206 + 72);
    v205[88] = v206[88];
    *(_OWORD *)(v205 + 72) = v210;
    *(_OWORD *)(v205 + 56) = v209;
    *((void *)v205 + 12) = *((void *)v206 + 12);
    *((void *)v205 + 13) = *((void *)v206 + 13);
    uint64_t v211 = *(int *)(v344 + 40);
    v212 = &v205[v211];
    v213 = &v206[v211];
    int v214 = v177(&v205[v211], 1, v175);
    int v215 = v177(v213, 1, v175);
    if (v214)
    {
      if (v215)
      {
        uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v212, v213, *(void *)(*(void *)(v216 - 8) + 64));
        uint64_t v217 = v338;
      }
      else
      {
        uint64_t v217 = v338;
        (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v212, v213, v175);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v212, 0, 1, v175);
      }
    }
    else
    {
      uint64_t v217 = v338;
      if (v215)
      {
        (*(void (**)(char *, uint64_t))(v338 + 8))(v212, v175);
        uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v212, v213, *(void *)(*(void *)(v255 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v338 + 24))(v212, v213, v175);
      }
    }
    uint64_t v256 = v184[6];
    v257 = &v182[v256];
    v258 = &v183[v256];
    long long v259 = *(_OWORD *)v258;
    v257[16] = v258[16];
    *(_OWORD *)v257 = v259;
    long long v260 = *(_OWORD *)(v258 + 24);
    v257[40] = v258[40];
    *(_OWORD *)(v257 + 24) = v260;
    *((void *)v257 + 6) = *((void *)v258 + 6);
    long long v261 = *(_OWORD *)(v258 + 56);
    long long v262 = *(_OWORD *)(v258 + 72);
    v257[88] = v258[88];
    *(_OWORD *)(v257 + 72) = v262;
    *(_OWORD *)(v257 + 56) = v261;
    *((void *)v257 + 12) = *((void *)v258 + 12);
    *((void *)v257 + 13) = *((void *)v258 + 13);
    uint64_t v263 = *(int *)(v344 + 40);
    v264 = &v257[v263];
    v265 = &v258[v263];
    int v266 = v177(&v257[v263], 1, v175);
    int v267 = v177(v265, 1, v175);
    if (v266)
    {
      if (!v267)
      {
        (*(void (**)(char *, char *, uint64_t))(v217 + 16))(v264, v265, v175);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v217 + 56))(v264, 0, 1, v175);
        goto LABEL_94;
      }
    }
    else
    {
      if (!v267)
      {
        (*(void (**)(char *, char *, uint64_t))(v217 + 24))(v264, v265, v175);
LABEL_94:
        uint64_t v269 = v184[7];
        v270 = &v182[v269];
        v271 = &v183[v269];
        long long v272 = *(_OWORD *)v271;
        v270[16] = v271[16];
        *(_OWORD *)v270 = v272;
        long long v273 = *(_OWORD *)(v271 + 24);
        v270[40] = v271[40];
        *(_OWORD *)(v270 + 24) = v273;
        *((void *)v270 + 6) = *((void *)v271 + 6);
        long long v274 = *(_OWORD *)(v271 + 56);
        long long v275 = *(_OWORD *)(v271 + 72);
        v270[88] = v271[88];
        *(_OWORD *)(v270 + 72) = v275;
        *(_OWORD *)(v270 + 56) = v274;
        *((void *)v270 + 12) = *((void *)v271 + 12);
        *((void *)v270 + 13) = *((void *)v271 + 13);
        uint64_t v276 = *(int *)(v344 + 40);
        v277 = &v270[v276];
        v278 = &v271[v276];
        int v279 = v177(&v270[v276], 1, v175);
        int v280 = v177(v278, 1, v175);
        if (v279)
        {
          if (!v280)
          {
            (*(void (**)(char *, char *, uint64_t))(v217 + 16))(v277, v278, v175);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v217 + 56))(v277, 0, 1, v175);
            goto LABEL_100;
          }
        }
        else
        {
          if (!v280)
          {
            (*(void (**)(char *, char *, uint64_t))(v217 + 24))(v277, v278, v175);
LABEL_100:
            v202 = v339;
            uint64_t v282 = v184[8];
            v283 = &v182[v282];
            v284 = &v183[v282];
            long long v285 = *(_OWORD *)v284;
            v283[16] = v284[16];
            *(_OWORD *)v283 = v285;
            long long v286 = *(_OWORD *)(v284 + 24);
            v283[40] = v284[40];
            *(_OWORD *)(v283 + 24) = v286;
            *((void *)v283 + 6) = *((void *)v284 + 6);
            long long v287 = *(_OWORD *)(v284 + 56);
            long long v288 = *(_OWORD *)(v284 + 72);
            v283[88] = v284[88];
            *(_OWORD *)(v283 + 72) = v288;
            *(_OWORD *)(v283 + 56) = v287;
            *((void *)v283 + 12) = *((void *)v284 + 12);
            *((void *)v283 + 13) = *((void *)v284 + 13);
            uint64_t v289 = *(int *)(v344 + 40);
            v290 = &v283[v289];
            v291 = &v284[v289];
            int v292 = v177(&v283[v289], 1, v175);
            int v293 = v177(v291, 1, v175);
            if (v292)
            {
              if (!v293)
              {
                (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v290, v291, v175);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v290, 0, 1, v175);
                goto LABEL_67;
              }
            }
            else
            {
              if (!v293)
              {
                (*(void (**)(char *, char *, uint64_t))(v338 + 24))(v290, v291, v175);
                goto LABEL_67;
              }
              (*(void (**)(char *, uint64_t))(v338 + 8))(v290, v175);
            }
            uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v290, v291, *(void *)(*(void *)(v294 - 8) + 64));
            goto LABEL_67;
          }
          (*(void (**)(char *, uint64_t))(v217 + 8))(v277, v175);
        }
        uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v277, v278, *(void *)(*(void *)(v281 - 8) + 64));
        goto LABEL_100;
      }
      (*(void (**)(char *, uint64_t))(v217 + 8))(v264, v175);
    }
    uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v264, v265, *(void *)(*(void *)(v268 - 8) + 64));
    goto LABEL_94;
  }
  if (v188)
  {
LABEL_66:
    uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v182, v183, *(void *)(*(void *)(v201 - 8) + 64));
    v202 = v339;
LABEL_67:
    v203 = v340;
    goto LABEL_83;
  }
  *(_OWORD *)v182 = *(_OWORD *)v183;
  uint64_t v189 = v184[5];
  v190 = &v182[v189];
  v191 = &v183[v189];
  long long v192 = *(_OWORD *)v191;
  v190[16] = v191[16];
  *(_OWORD *)v190 = v192;
  long long v193 = *(_OWORD *)(v191 + 24);
  v190[40] = v191[40];
  *(_OWORD *)(v190 + 24) = v193;
  *((void *)v190 + 6) = *((void *)v191 + 6);
  long long v194 = *(_OWORD *)(v191 + 56);
  long long v195 = *(_OWORD *)(v191 + 72);
  v190[88] = v191[88];
  *(_OWORD *)(v190 + 72) = v195;
  *(_OWORD *)(v190 + 56) = v194;
  *((void *)v190 + 12) = *((void *)v191 + 12);
  *((void *)v190 + 13) = *((void *)v191 + 13);
  uint64_t v196 = *(int *)(v344 + 40);
  v197 = &v190[v196];
  v198 = &v191[v196];
  if (v177(&v191[v196], 1, v175))
  {
    uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
    uint64_t v200 = v338;
  }
  else
  {
    uint64_t v200 = v338;
    (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v197, v198, v175);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v197, 0, 1, v175);
  }
  uint64_t v218 = v184[6];
  v219 = &v182[v218];
  v220 = &v183[v218];
  long long v221 = *(_OWORD *)v220;
  v219[16] = v220[16];
  *(_OWORD *)v219 = v221;
  long long v222 = *(_OWORD *)(v220 + 24);
  v219[40] = v220[40];
  *(_OWORD *)(v219 + 24) = v222;
  *((void *)v219 + 6) = *((void *)v220 + 6);
  long long v223 = *(_OWORD *)(v220 + 56);
  long long v224 = *(_OWORD *)(v220 + 72);
  v219[88] = v220[88];
  *(_OWORD *)(v219 + 72) = v224;
  *(_OWORD *)(v219 + 56) = v223;
  *((void *)v219 + 12) = *((void *)v220 + 12);
  *((void *)v219 + 13) = *((void *)v220 + 13);
  uint64_t v225 = *(int *)(v344 + 40);
  v226 = &v219[v225];
  v227 = &v220[v225];
  if (v177(&v220[v225], 1, v175))
  {
    uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v226, v227, v175);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v226, 0, 1, v175);
  }
  uint64_t v229 = v184[7];
  v230 = &v182[v229];
  v231 = &v183[v229];
  long long v232 = *(_OWORD *)v231;
  v230[16] = v231[16];
  *(_OWORD *)v230 = v232;
  long long v233 = *(_OWORD *)(v231 + 24);
  v230[40] = v231[40];
  *(_OWORD *)(v230 + 24) = v233;
  *((void *)v230 + 6) = *((void *)v231 + 6);
  long long v234 = *(_OWORD *)(v231 + 56);
  long long v235 = *(_OWORD *)(v231 + 72);
  v230[88] = v231[88];
  *(_OWORD *)(v230 + 72) = v235;
  *(_OWORD *)(v230 + 56) = v234;
  *((void *)v230 + 12) = *((void *)v231 + 12);
  *((void *)v230 + 13) = *((void *)v231 + 13);
  uint64_t v236 = *(int *)(v344 + 40);
  v237 = &v230[v236];
  v238 = &v231[v236];
  if (v177(&v231[v236], 1, v175))
  {
    uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v237, v238, v175);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v237, 0, 1, v175);
  }
  v202 = v339;
  uint64_t v240 = v184[8];
  v241 = &v182[v240];
  v242 = &v183[v240];
  long long v243 = *(_OWORD *)v242;
  v241[16] = v242[16];
  *(_OWORD *)v241 = v243;
  long long v244 = *(_OWORD *)(v242 + 24);
  v241[40] = v242[40];
  *(_OWORD *)(v241 + 24) = v244;
  *((void *)v241 + 6) = *((void *)v242 + 6);
  long long v245 = *(_OWORD *)(v242 + 56);
  long long v246 = *(_OWORD *)(v242 + 72);
  v241[88] = v242[88];
  *(_OWORD *)(v241 + 72) = v246;
  *(_OWORD *)(v241 + 56) = v245;
  *((void *)v241 + 12) = *((void *)v242 + 12);
  *((void *)v241 + 13) = *((void *)v242 + 13);
  uint64_t v247 = *(int *)(v344 + 40);
  v248 = &v241[v247];
  v249 = &v242[v247];
  if (v177(&v242[v247], 1, v175))
  {
    uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v248, v249, v175);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v248, 0, 1, v175);
  }
  v203 = v340;
  (*(void (**)(char *, void, uint64_t, int *))(v185 + 56))(v182, 0, 1, v184);
LABEL_83:
  *(void *)((char *)v202 + v341[8]) = *(void *)((char *)v203 + v341[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v251 = v341[9];
  uint64_t v252 = (uint64_t)v202 + v251;
  v253 = (char *)v203 + v251;
  *(void *)uint64_t v252 = *(void *)((char *)v203 + v251);
  *(void *)(v252 + 8) = *(void *)((char *)v203 + v251 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v252 + 16) = v253[16];
  *(unsigned char *)(v252 + 17) = v253[17];
  *(unsigned char *)(v252 + 18) = v253[18];
  return v202;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *sub_191B23EB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for JindoViewCollection();
  uint64_t v7 = *(void *)(v6 - 8);
  long long v109 = a3;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    a1[5] = a2[5];
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)((char *)a2 + v9);
    v10[16] = *((unsigned char *)a2 + v9 + 16);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)((char *)a2 + v9 + 24);
    v10[40] = *((unsigned char *)a2 + v9 + 40);
    *((void *)v10 + 6) = *(void *)((char *)a2 + v9 + 48);
    *(_OWORD *)(v10 + 56) = *(_OWORD *)((char *)a2 + v9 + 56);
    *(_OWORD *)(v10 + 72) = *(_OWORD *)((char *)a2 + v9 + 72);
    v10[88] = *((unsigned char *)a2 + v9 + 88);
    *((_OWORD *)v10 + 6) = *(_OWORD *)((char *)a2 + v9 + 96);
    uint64_t v105 = type metadata accessor for MetricsRequest(0);
    uint64_t v12 = *(int *)(v105 + 40);
    id v13 = &v10[v12];
    id v14 = &v11[v12];
    uint64_t v15 = sub_191CF43F8();
    uint64_t v16 = *(void *)(v15 - 8);
    long long v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v104 = v16;
    if (v110(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    long long v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v22 = *((void *)v21 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v103 = v22;
      uint64_t v107 = a2;
      *(_OWORD *)long long v19 = *(_OWORD *)v20;
      uint64_t v24 = v21[5];
      uint64_t v25 = &v19[v24];
      uint64_t v26 = &v20[v24];
      v25[16] = v26[16];
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
      v25[40] = v26[40];
      *((void *)v25 + 6) = *((void *)v26 + 6);
      *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
      v25[88] = v26[88];
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      uint64_t v27 = v105;
      uint64_t v28 = *(int *)(v105 + 40);
      id v29 = &v25[v28];
      uint64_t v30 = &v26[v28];
      if (v110(&v26[v28], 1, v15))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v29, v30, v15);
        uint64_t v27 = v105;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v29, 0, 1, v15);
      }
      uint64_t v32 = v21[6];
      long long v33 = &v19[v32];
      long long v34 = &v20[v32];
      *(_OWORD *)long long v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
      *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
      v33[40] = v34[40];
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *(_OWORD *)(v33 + 56) = *(_OWORD *)(v34 + 56);
      *(_OWORD *)(v33 + 72) = *(_OWORD *)(v34 + 72);
      v33[88] = v34[88];
      *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
      uint64_t v35 = *(int *)(v27 + 40);
      long long v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      if (v110(&v34[v35], 1, v15))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v36, v37, v15);
        uint64_t v27 = v105;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v36, 0, 1, v15);
      }
      uint64_t v39 = v21[7];
      uint64_t v40 = &v19[v39];
      uint64_t v41 = &v20[v39];
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
      *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
      v40[40] = v41[40];
      *((void *)v40 + 6) = *((void *)v41 + 6);
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
      v40[88] = v41[88];
      *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
      uint64_t v42 = *(int *)(v27 + 40);
      int v43 = &v40[v42];
      int v44 = &v41[v42];
      if (v110(&v41[v42], 1, v15))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v43, v44, v15);
        uint64_t v27 = v105;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v43, 0, 1, v15);
      }
      uint64_t v46 = v21[8];
      uint64_t v47 = &v19[v46];
      uint64_t v48 = &v20[v46];
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      v47[16] = v48[16];
      *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
      v47[40] = v48[40];
      *((void *)v47 + 6) = *((void *)v48 + 6);
      *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
      *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
      v47[88] = v48[88];
      *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
      uint64_t v49 = *(int *)(v27 + 40);
      uint64_t v50 = &v47[v49];
      uint64_t v51 = &v48[v49];
      a2 = v107;
      if (v110(&v48[v49], 1, v15))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v50, v51, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v50, 0, 1, v15);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v103 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    a3 = v109;
  }
  uint64_t v53 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
  uint64_t v54 = a3[7];
  long long v55 = (char *)a1 + v54;
  long long v56 = (char *)a2 + v54;
  *(_OWORD *)long long v55 = *(_OWORD *)((char *)a2 + v54);
  v55[16] = *((unsigned char *)a2 + v54 + 16);
  *(_OWORD *)(v55 + 24) = *(_OWORD *)((char *)a2 + v54 + 24);
  v55[40] = *((unsigned char *)a2 + v54 + 40);
  *((void *)v55 + 6) = *(void *)((char *)a2 + v54 + 48);
  *(_OWORD *)(v55 + 56) = *(_OWORD *)((char *)a2 + v54 + 56);
  *(_OWORD *)(v55 + 72) = *(_OWORD *)((char *)a2 + v54 + 72);
  v55[88] = *((unsigned char *)a2 + v54 + 88);
  *((_OWORD *)v55 + 6) = *(_OWORD *)((char *)a2 + v54 + 96);
  uint64_t v57 = type metadata accessor for MetricsRequest(0);
  uint64_t v58 = *(int *)(v57 + 40);
  uint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  uint64_t v61 = sub_191CF43F8();
  uint64_t v62 = *(void *)(v61 - 8);
  long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  if (v111(v60, 1, v61))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  uint64_t v64 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v65 = &v55[v64];
  uint64_t v66 = &v56[v64];
  uint64_t v67 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v68 = *((void *)v67 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    int v70 = v109;
  }
  else
  {
    uint64_t v106 = v68;
    long long v108 = a2;
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
    uint64_t v71 = v67[5];
    uint64_t v72 = &v65[v71];
    uint64_t v73 = &v66[v71];
    v72[16] = v73[16];
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
    v72[40] = v73[40];
    *((void *)v72 + 6) = *((void *)v73 + 6);
    *(_OWORD *)(v72 + 56) = *(_OWORD *)(v73 + 56);
    *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
    v72[88] = v73[88];
    *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
    uint64_t v74 = *(int *)(v57 + 40);
    long long v75 = &v72[v74];
    long long v76 = &v73[v74];
    if (v111(&v73[v74], 1, v61))
    {
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v75, v76, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v75, 0, 1, v61);
    }
    uint64_t v78 = v67[6];
    uint64_t v79 = &v65[v78];
    uint64_t v80 = &v66[v78];
    *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
    v79[16] = v80[16];
    *(_OWORD *)(v79 + 24) = *(_OWORD *)(v80 + 24);
    v79[40] = v80[40];
    *((void *)v79 + 6) = *((void *)v80 + 6);
    *(_OWORD *)(v79 + 56) = *(_OWORD *)(v80 + 56);
    *(_OWORD *)(v79 + 72) = *(_OWORD *)(v80 + 72);
    v79[88] = v80[88];
    *((_OWORD *)v79 + 6) = *((_OWORD *)v80 + 6);
    uint64_t v81 = *(int *)(v57 + 40);
    uint64_t v82 = &v79[v81];
    uint64_t v83 = &v80[v81];
    if (v111(&v80[v81], 1, v61))
    {
      uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v82, v83, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v82, 0, 1, v61);
    }
    uint64_t v85 = v67[7];
    long long v86 = &v65[v85];
    long long v87 = &v66[v85];
    *(_OWORD *)long long v86 = *(_OWORD *)v87;
    v86[16] = v87[16];
    *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
    v86[40] = v87[40];
    *((void *)v86 + 6) = *((void *)v87 + 6);
    *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
    *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
    v86[88] = v87[88];
    *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
    uint64_t v88 = *(int *)(v57 + 40);
    long long v89 = &v86[v88];
    uint64_t v90 = &v87[v88];
    if (v111(&v87[v88], 1, v61))
    {
      uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v89, v90, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v89, 0, 1, v61);
    }
    uint64_t v92 = v67[8];
    uint64_t v93 = &v65[v92];
    uint64_t v94 = &v66[v92];
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    v93[16] = v94[16];
    *(_OWORD *)(v93 + 24) = *(_OWORD *)(v94 + 24);
    v93[40] = v94[40];
    *((void *)v93 + 6) = *((void *)v94 + 6);
    *(_OWORD *)(v93 + 56) = *(_OWORD *)(v94 + 56);
    *(_OWORD *)(v93 + 72) = *(_OWORD *)(v94 + 72);
    v93[88] = v94[88];
    *((_OWORD *)v93 + 6) = *((_OWORD *)v94 + 6);
    uint64_t v95 = *(int *)(v57 + 40);
    uint64_t v96 = &v93[v95];
    long long v97 = &v94[v95];
    a2 = v108;
    if (v111(&v94[v95], 1, v61))
    {
      uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v96, v97, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v96, 0, 1, v61);
    }
    int v70 = v109;
    (*(void (**)(char *, void, uint64_t, int *))(v106 + 56))(v65, 0, 1, v67);
  }
  uint64_t v99 = v70[9];
  *(void *)((char *)a1 + v70[8]) = *(void *)((char *)a2 + v70[8]);
  long long v100 = (char *)a1 + v99;
  uint64_t v101 = (char *)a2 + v99;
  *(_OWORD *)long long v100 = *(_OWORD *)v101;
  *(_DWORD *)(v100 + 15) = *(_DWORD *)(v101 + 15);
  return a1;
}

uint64_t sub_191B24C1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for JindoViewCollection();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v244 = a1;
  long long v245 = a3;
  uint64_t v246 = a2;
  if (!v9)
  {
    if (v10)
    {
      sub_191B27A64(a1, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
      goto LABEL_7;
    }
    uint64_t v23 = *(void **)a1;
    *(void *)a1 = *(void *)a2;

    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v24 = *(int *)(v6 + 24);
    uint64_t v25 = a1 + v24;
    uint64_t v26 = a2 + v24;
    *(unsigned char *)(v25 + 16) = *(unsigned char *)(a2 + v24 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)(a2 + v24);
    *(unsigned char *)(v25 + 40) = *(unsigned char *)(a2 + v24 + 40);
    *(_OWORD *)(v25 + 24) = *(_OWORD *)(a2 + v24 + 24);
    *(void *)(v25 + 48) = *(void *)(a2 + v24 + 48);
    *(unsigned char *)(v25 + 88) = *(unsigned char *)(a2 + v24 + 88);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)(a2 + v24 + 72);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(a2 + v24 + 56);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(a2 + v24 + 96);
    uint64_t v248 = type metadata accessor for MetricsRequest(0);
    uint64_t v27 = *(int *)(v248 + 40);
    uint64_t v28 = (void *)(v25 + v27);
    id v29 = (void *)(v26 + v27);
    uint64_t v30 = sub_191CF43F8();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
    int v33 = v32(v28, 1, v30);
    int v34 = v32(v29, 1, v30);
    uint64_t v242 = v31;
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_20:
        uint64_t v49 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
        uint64_t v50 = (_OWORD *)(v25 + v49);
        uint64_t v51 = (_OWORD *)(v26 + v49);
        uint64_t v52 = (int *)type metadata accessor for JindoMetricsDefinition(0);
        uint64_t v53 = *((void *)v52 - 1);
        uint64_t v54 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v53 + 48);
        int v55 = v54(v50, 1, v52);
        int v56 = v54(v51, 1, v52);
        if (v55)
        {
          if (!v56)
          {
            *uint64_t v50 = *v51;
            uint64_t v57 = v52[5];
            uint64_t v58 = (char *)v50 + v57;
            uint64_t v59 = (char *)v51 + v57;
            v58[16] = v59[16];
            *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
            *(_OWORD *)(v58 + 24) = *(_OWORD *)(v59 + 24);
            v58[40] = v59[40];
            *((void *)v58 + 6) = *((void *)v59 + 6);
            *(_OWORD *)(v58 + 56) = *(_OWORD *)(v59 + 56);
            *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
            v58[88] = v59[88];
            *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
            uint64_t v60 = *(int *)(v248 + 40);
            uint64_t v61 = &v58[v60];
            uint64_t v62 = &v59[v60];
            if (v32(&v59[v60], 1, v30))
            {
              uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v61, v62, v30);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v61, 0, 1, v30);
            }
            uint64_t v94 = v52[6];
            uint64_t v95 = (char *)v50 + v94;
            uint64_t v96 = (char *)v51 + v94;
            *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
            v95[16] = v96[16];
            *(_OWORD *)(v95 + 24) = *(_OWORD *)(v96 + 24);
            v95[40] = v96[40];
            *((void *)v95 + 6) = *((void *)v96 + 6);
            *(_OWORD *)(v95 + 56) = *(_OWORD *)(v96 + 56);
            *(_OWORD *)(v95 + 72) = *(_OWORD *)(v96 + 72);
            v95[88] = v96[88];
            *((_OWORD *)v95 + 6) = *((_OWORD *)v96 + 6);
            uint64_t v97 = *(int *)(v248 + 40);
            uint64_t v98 = &v95[v97];
            uint64_t v99 = &v96[v97];
            if (v32(&v96[v97], 1, v30))
            {
              uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v98, v99, v30);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v98, 0, 1, v30);
            }
            uint64_t v101 = v52[7];
            uint64_t v102 = (char *)v50 + v101;
            uint64_t v103 = (char *)v51 + v101;
            *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
            v102[16] = v103[16];
            *(_OWORD *)(v102 + 24) = *(_OWORD *)(v103 + 24);
            v102[40] = v103[40];
            *((void *)v102 + 6) = *((void *)v103 + 6);
            *(_OWORD *)(v102 + 56) = *(_OWORD *)(v103 + 56);
            *(_OWORD *)(v102 + 72) = *(_OWORD *)(v103 + 72);
            v102[88] = v103[88];
            *((_OWORD *)v102 + 6) = *((_OWORD *)v103 + 6);
            uint64_t v104 = *(int *)(v248 + 40);
            uint64_t v105 = &v102[v104];
            uint64_t v106 = &v103[v104];
            if (v32(&v103[v104], 1, v30))
            {
              uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v105, v106, v30);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v105, 0, 1, v30);
            }
            uint64_t v108 = v52[8];
            long long v109 = (char *)v50 + v108;
            long long v110 = (char *)v51 + v108;
            *(_OWORD *)long long v109 = *(_OWORD *)v110;
            v109[16] = v110[16];
            *(_OWORD *)(v109 + 24) = *(_OWORD *)(v110 + 24);
            v109[40] = v110[40];
            *((void *)v109 + 6) = *((void *)v110 + 6);
            *(_OWORD *)(v109 + 56) = *(_OWORD *)(v110 + 56);
            *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
            v109[88] = v110[88];
            *((_OWORD *)v109 + 6) = *((_OWORD *)v110 + 6);
            uint64_t v111 = *(int *)(v248 + 40);
            uint64_t v112 = &v109[v111];
            uint64_t v113 = &v110[v111];
            a1 = v244;
            if (v32(&v110[v111], 1, v30))
            {
              uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
              memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v112, v113, v30);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v112, 0, 1, v30);
            }
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v53 + 56))(v50, 0, 1, v52);
            goto LABEL_54;
          }
LABEL_26:
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
          memcpy(v50, v51, *(void *)(*(void *)(v64 - 8) + 64));
          a1 = v244;
LABEL_54:
          a3 = v245;
          a2 = v246;
          goto LABEL_55;
        }
        if (v56)
        {
          sub_191B27A64((uint64_t)v50, type metadata accessor for JindoMetricsDefinition);
          goto LABEL_26;
        }
        *uint64_t v50 = *v51;
        uint64_t v86 = v52[5];
        long long v87 = (char *)v50 + v86;
        uint64_t v88 = (char *)v51 + v86;
        *(_OWORD *)long long v87 = *(_OWORD *)v88;
        v87[16] = v88[16];
        *(_OWORD *)(v87 + 24) = *(_OWORD *)(v88 + 24);
        v87[40] = v88[40];
        *((void *)v87 + 6) = *((void *)v88 + 6);
        *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
        *(_OWORD *)(v87 + 72) = *(_OWORD *)(v88 + 72);
        v87[88] = v88[88];
        *((_OWORD *)v87 + 6) = *((_OWORD *)v88 + 6);
        uint64_t v89 = *(int *)(v248 + 40);
        uint64_t v90 = &v87[v89];
        uint64_t v91 = &v88[v89];
        int v92 = v32(&v87[v89], 1, v30);
        int v93 = v32(v91, 1, v30);
        if (v92)
        {
          if (!v93)
          {
            (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v90, v91, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v90, 0, 1, v30);
            goto LABEL_113;
          }
        }
        else
        {
          if (!v93)
          {
            (*(void (**)(char *, char *, uint64_t))(v242 + 40))(v90, v91, v30);
LABEL_113:
            uint64_t v214 = v52[6];
            int v215 = (char *)v50 + v214;
            uint64_t v216 = (char *)v51 + v214;
            *(_OWORD *)int v215 = *(_OWORD *)v216;
            v215[16] = v216[16];
            *(_OWORD *)(v215 + 24) = *(_OWORD *)(v216 + 24);
            v215[40] = v216[40];
            *((void *)v215 + 6) = *((void *)v216 + 6);
            *(_OWORD *)(v215 + 56) = *(_OWORD *)(v216 + 56);
            *(_OWORD *)(v215 + 72) = *(_OWORD *)(v216 + 72);
            v215[88] = v216[88];
            *((_OWORD *)v215 + 6) = *((_OWORD *)v216 + 6);
            uint64_t v217 = *(int *)(v248 + 40);
            uint64_t v218 = &v215[v217];
            v219 = &v216[v217];
            int v220 = v32(&v215[v217], 1, v30);
            int v221 = v32(v219, 1, v30);
            if (v220)
            {
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v218, v219, v30);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v218, 0, 1, v30);
                goto LABEL_119;
              }
            }
            else
            {
              if (!v221)
              {
                (*(void (**)(char *, char *, uint64_t))(v242 + 40))(v218, v219, v30);
LABEL_119:
                uint64_t v223 = v52[7];
                long long v224 = (char *)v50 + v223;
                uint64_t v225 = (char *)v51 + v223;
                *(_OWORD *)long long v224 = *(_OWORD *)v225;
                v224[16] = v225[16];
                *(_OWORD *)(v224 + 24) = *(_OWORD *)(v225 + 24);
                v224[40] = v225[40];
                *((void *)v224 + 6) = *((void *)v225 + 6);
                *(_OWORD *)(v224 + 56) = *(_OWORD *)(v225 + 56);
                *(_OWORD *)(v224 + 72) = *(_OWORD *)(v225 + 72);
                v224[88] = v225[88];
                *((_OWORD *)v224 + 6) = *((_OWORD *)v225 + 6);
                uint64_t v226 = *(int *)(v248 + 40);
                v227 = &v224[v226];
                uint64_t v228 = &v225[v226];
                int v229 = v32(&v224[v226], 1, v30);
                int v230 = v32(v228, 1, v30);
                if (v229)
                {
                  if (!v230)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v227, v228, v30);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v227, 0, 1, v30);
LABEL_125:
                    uint64_t v232 = v52[8];
                    long long v233 = (char *)v50 + v232;
                    long long v234 = (char *)v51 + v232;
                    *(_OWORD *)long long v233 = *(_OWORD *)v234;
                    v233[16] = v234[16];
                    *(_OWORD *)(v233 + 24) = *(_OWORD *)(v234 + 24);
                    v233[40] = v234[40];
                    *((void *)v233 + 6) = *((void *)v234 + 6);
                    *(_OWORD *)(v233 + 56) = *(_OWORD *)(v234 + 56);
                    *(_OWORD *)(v233 + 72) = *(_OWORD *)(v234 + 72);
                    v233[88] = v234[88];
                    *((_OWORD *)v233 + 6) = *((_OWORD *)v234 + 6);
                    uint64_t v235 = *(int *)(v248 + 40);
                    uint64_t v236 = &v233[v235];
                    v237 = &v234[v235];
                    int v238 = v32(&v233[v235], 1, v30);
                    int v239 = v32(v237, 1, v30);
                    a1 = v244;
                    if (v238)
                    {
                      a3 = v245;
                      a2 = v246;
                      if (!v239)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v236, v237, v30);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v236, 0, 1, v30);
                        goto LABEL_55;
                      }
                    }
                    else
                    {
                      a3 = v245;
                      a2 = v246;
                      if (!v239)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v242 + 40))(v236, v237, v30);
                        goto LABEL_55;
                      }
                      (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v30);
                    }
                    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80) - 8)
                                    + 64);
                    uint64_t v21 = v236;
                    uint64_t v22 = v237;
LABEL_8:
                    memcpy(v21, v22, v20);
                    goto LABEL_55;
                  }
                }
                else
                {
                  if (!v230)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v242 + 40))(v227, v228, v30);
                    goto LABEL_125;
                  }
                  (*(void (**)(char *, uint64_t))(v242 + 8))(v227, v30);
                }
                uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
                memcpy(v227, v228, *(void *)(*(void *)(v231 - 8) + 64));
                goto LABEL_125;
              }
              (*(void (**)(char *, uint64_t))(v242 + 8))(v218, v30);
            }
            uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v218, v219, *(void *)(*(void *)(v222 - 8) + 64));
            goto LABEL_119;
          }
          (*(void (**)(char *, uint64_t))(v242 + 8))(v90, v30);
        }
        uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v90, v91, *(void *)(*(void *)(v213 - 8) + 64));
        goto LABEL_113;
      }
      (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    }
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v28, v29, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590) - 8) + 64);
    uint64_t v21 = (void *)a1;
    uint64_t v22 = (char *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v11 = *(int *)(v6 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(a2 + v11 + 16);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(a2 + v11 + 24);
  *(unsigned char *)(v12 + 40) = *(unsigned char *)(a2 + v11 + 40);
  *(void *)(v12 + 48) = *(void *)(a2 + v11 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a2 + v11 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(a2 + v11 + 72);
  *(unsigned char *)(v12 + 88) = *(unsigned char *)(a2 + v11 + 88);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(a2 + v11 + 96);
  uint64_t v247 = type metadata accessor for MetricsRequest(0);
  uint64_t v14 = *(int *)(v247 + 40);
  uint64_t v15 = (void *)(v12 + v14);
  uint64_t v16 = (const void *)(v13 + v14);
  uint64_t v17 = sub_191CF43F8();
  uint64_t v18 = *(void *)(v17 - 8);
  v241 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  if (v241(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v35 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  long long v36 = (_OWORD *)(v12 + v35);
  uint64_t v37 = (_OWORD *)(v13 + v35);
  uint64_t v38 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v39 = *((void *)v38 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v240 = v39;
    *long long v36 = *v37;
    uint64_t v41 = v38[5];
    uint64_t v42 = (char *)v36 + v41;
    int v43 = (char *)v37 + v41;
    v42[16] = v43[16];
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *((void *)v42 + 6) = *((void *)v43 + 6);
    *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
    uint64_t v44 = *(int *)(v247 + 40);
    uint64_t v45 = &v42[v44];
    uint64_t v46 = &v43[v44];
    if (v241(&v43[v44], 1, v17))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v45, v46, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v45, 0, 1, v17);
    }
    uint64_t v65 = v38[6];
    uint64_t v66 = (char *)v36 + v65;
    uint64_t v67 = (char *)v37 + v65;
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    v66[16] = v67[16];
    *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
    v66[40] = v67[40];
    *((void *)v66 + 6) = *((void *)v67 + 6);
    *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
    *(_OWORD *)(v66 + 72) = *(_OWORD *)(v67 + 72);
    v66[88] = v67[88];
    *((_OWORD *)v66 + 6) = *((_OWORD *)v67 + 6);
    uint64_t v68 = *(int *)(v247 + 40);
    uint64_t v69 = &v66[v68];
    int v70 = &v67[v68];
    if (v241(&v67[v68], 1, v17))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v69, v70, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v69, 0, 1, v17);
    }
    uint64_t v72 = v38[7];
    uint64_t v73 = (char *)v36 + v72;
    uint64_t v74 = (char *)v37 + v72;
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    v73[16] = v74[16];
    *(_OWORD *)(v73 + 24) = *(_OWORD *)(v74 + 24);
    v73[40] = v74[40];
    *((void *)v73 + 6) = *((void *)v74 + 6);
    *(_OWORD *)(v73 + 56) = *(_OWORD *)(v74 + 56);
    *(_OWORD *)(v73 + 72) = *(_OWORD *)(v74 + 72);
    v73[88] = v74[88];
    *((_OWORD *)v73 + 6) = *((_OWORD *)v74 + 6);
    uint64_t v75 = *(int *)(v247 + 40);
    long long v76 = &v73[v75];
    uint64_t v77 = &v74[v75];
    if (v241(&v74[v75], 1, v17))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v76, v77, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v76, 0, 1, v17);
    }
    uint64_t v79 = v38[8];
    uint64_t v80 = (char *)v36 + v79;
    uint64_t v81 = (char *)v37 + v79;
    *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
    v80[16] = v81[16];
    *(_OWORD *)(v80 + 24) = *(_OWORD *)(v81 + 24);
    v80[40] = v81[40];
    *((void *)v80 + 6) = *((void *)v81 + 6);
    *(_OWORD *)(v80 + 56) = *(_OWORD *)(v81 + 56);
    *(_OWORD *)(v80 + 72) = *(_OWORD *)(v81 + 72);
    v80[88] = v81[88];
    *((_OWORD *)v80 + 6) = *((_OWORD *)v81 + 6);
    uint64_t v82 = *(int *)(v247 + 40);
    uint64_t v83 = &v80[v82];
    uint64_t v84 = &v81[v82];
    a1 = v244;
    if (v241(&v81[v82], 1, v17))
    {
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v83, v84, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v83, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v240 + 56))(v36, 0, 1, v38);
  }
  a3 = v245;
  a2 = v246;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_55:
  uint64_t v115 = a3[5];
  uint64_t v116 = *(void **)(a1 + v115);
  *(void *)(a1 + v115) = *(void *)(a2 + v115);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v117 = a3[7];
  uint64_t v118 = a1 + v117;
  uint64_t v119 = a2 + v117;
  *(_OWORD *)uint64_t v118 = *(_OWORD *)(a2 + v117);
  *(unsigned char *)(v118 + 16) = *(unsigned char *)(a2 + v117 + 16);
  *(_OWORD *)(v118 + 24) = *(_OWORD *)(a2 + v117 + 24);
  *(unsigned char *)(v118 + 40) = *(unsigned char *)(a2 + v117 + 40);
  *(void *)(v118 + 48) = *(void *)(a2 + v117 + 48);
  *(_OWORD *)(v118 + 56) = *(_OWORD *)(a2 + v117 + 56);
  *(_OWORD *)(v118 + 72) = *(_OWORD *)(a2 + v117 + 72);
  *(unsigned char *)(v118 + 88) = *(unsigned char *)(a2 + v117 + 88);
  *(_OWORD *)(v118 + 96) = *(_OWORD *)(a2 + v117 + 96);
  uint64_t v249 = type metadata accessor for MetricsRequest(0);
  uint64_t v120 = *(int *)(v249 + 40);
  long long v121 = (void *)(v118 + v120);
  long long v122 = (void *)(v119 + v120);
  uint64_t v123 = sub_191CF43F8();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48);
  int v126 = v125(v121, 1, v123);
  int v127 = v125(v122, 1, v123);
  uint64_t v243 = v124;
  if (v126)
  {
    if (!v127)
    {
      (*(void (**)(void *, void *, uint64_t))(v124 + 32))(v121, v122, v123);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v127)
  {
    (*(void (**)(void *, uint64_t))(v124 + 8))(v121, v123);
LABEL_60:
    uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v121, v122, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(void *, void *, uint64_t))(v124 + 40))(v121, v122, v123);
LABEL_61:
  uint64_t v129 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  unint64_t v130 = (_OWORD *)(v118 + v129);
  long long v131 = (_OWORD *)(v119 + v129);
  long long v132 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v133 = *((void *)v132 - 1);
  long long v134 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v133 + 48);
  int v135 = v134(v130, 1, v132);
  int v136 = v134(v131, 1, v132);
  if (!v135)
  {
    if (v136)
    {
      sub_191B27A64((uint64_t)v130, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_67;
    }
    *unint64_t v130 = *v131;
    uint64_t v149 = v132[5];
    uint64_t v150 = (char *)v130 + v149;
    v151 = (char *)v131 + v149;
    *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
    v150[16] = v151[16];
    *(_OWORD *)(v150 + 24) = *(_OWORD *)(v151 + 24);
    v150[40] = v151[40];
    *((void *)v150 + 6) = *((void *)v151 + 6);
    *(_OWORD *)(v150 + 56) = *(_OWORD *)(v151 + 56);
    *(_OWORD *)(v150 + 72) = *(_OWORD *)(v151 + 72);
    v150[88] = v151[88];
    *((_OWORD *)v150 + 6) = *((_OWORD *)v151 + 6);
    uint64_t v152 = *(int *)(v249 + 40);
    long long v153 = &v150[v152];
    long long v154 = &v151[v152];
    int v155 = v125(&v150[v152], 1, v123);
    int v156 = v125(v154, 1, v123);
    if (v155)
    {
      if (v156)
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
        uint64_t v158 = v243;
      }
      else
      {
        uint64_t v158 = v243;
        (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v153, v154, v123);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(v153, 0, 1, v123);
      }
    }
    else
    {
      uint64_t v158 = v243;
      if (v156)
      {
        (*(void (**)(char *, uint64_t))(v243 + 8))(v153, v123);
        uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v153, v154, *(void *)(*(void *)(v185 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v153, v154, v123);
      }
    }
    uint64_t v186 = v132[6];
    int v187 = (char *)v130 + v186;
    int v188 = (char *)v131 + v186;
    *(_OWORD *)int v187 = *(_OWORD *)v188;
    v187[16] = v188[16];
    *(_OWORD *)(v187 + 24) = *(_OWORD *)(v188 + 24);
    v187[40] = v188[40];
    *((void *)v187 + 6) = *((void *)v188 + 6);
    *(_OWORD *)(v187 + 56) = *(_OWORD *)(v188 + 56);
    *(_OWORD *)(v187 + 72) = *(_OWORD *)(v188 + 72);
    v187[88] = v188[88];
    *((_OWORD *)v187 + 6) = *((_OWORD *)v188 + 6);
    uint64_t v189 = *(int *)(v249 + 40);
    v190 = &v187[v189];
    v191 = &v188[v189];
    int v192 = v125(&v187[v189], 1, v123);
    int v193 = v125(v191, 1, v123);
    if (v192)
    {
      if (!v193)
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v190, v191, v123);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v190, 0, 1, v123);
        goto LABEL_95;
      }
    }
    else
    {
      if (!v193)
      {
        (*(void (**)(char *, char *, uint64_t))(v158 + 40))(v190, v191, v123);
LABEL_95:
        uint64_t v195 = v132[7];
        uint64_t v196 = (char *)v130 + v195;
        v197 = (char *)v131 + v195;
        *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
        v196[16] = v197[16];
        *(_OWORD *)(v196 + 24) = *(_OWORD *)(v197 + 24);
        v196[40] = v197[40];
        *((void *)v196 + 6) = *((void *)v197 + 6);
        *(_OWORD *)(v196 + 56) = *(_OWORD *)(v197 + 56);
        *(_OWORD *)(v196 + 72) = *(_OWORD *)(v197 + 72);
        v196[88] = v197[88];
        *((_OWORD *)v196 + 6) = *((_OWORD *)v197 + 6);
        uint64_t v198 = *(int *)(v249 + 40);
        uint64_t v199 = &v196[v198];
        uint64_t v200 = &v197[v198];
        int v201 = v125(&v196[v198], 1, v123);
        int v202 = v125(v200, 1, v123);
        if (v201)
        {
          if (!v202)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v199, v200, v123);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v199, 0, 1, v123);
            goto LABEL_101;
          }
        }
        else
        {
          if (!v202)
          {
            (*(void (**)(char *, char *, uint64_t))(v158 + 40))(v199, v200, v123);
LABEL_101:
            uint64_t v146 = v244;
            uint64_t v204 = v132[8];
            v205 = (char *)v130 + v204;
            v206 = (char *)v131 + v204;
            *(_OWORD *)v205 = *(_OWORD *)v206;
            v205[16] = v206[16];
            *(_OWORD *)(v205 + 24) = *(_OWORD *)(v206 + 24);
            v205[40] = v206[40];
            *((void *)v205 + 6) = *((void *)v206 + 6);
            *(_OWORD *)(v205 + 56) = *(_OWORD *)(v206 + 56);
            *(_OWORD *)(v205 + 72) = *(_OWORD *)(v206 + 72);
            v205[88] = v206[88];
            *((_OWORD *)v205 + 6) = *((_OWORD *)v206 + 6);
            uint64_t v207 = *(int *)(v249 + 40);
            long long v208 = &v205[v207];
            long long v209 = &v206[v207];
            int v210 = v125(&v205[v207], 1, v123);
            int v211 = v125(v209, 1, v123);
            if (v210)
            {
              if (!v211)
              {
                (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v208, v209, v123);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(v208, 0, 1, v123);
                goto LABEL_68;
              }
            }
            else
            {
              if (!v211)
              {
                (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v208, v209, v123);
                goto LABEL_68;
              }
              (*(void (**)(char *, uint64_t))(v243 + 8))(v208, v123);
            }
            uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v208, v209, *(void *)(*(void *)(v212 - 8) + 64));
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v158 + 8))(v199, v123);
        }
        uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v199, v200, *(void *)(*(void *)(v203 - 8) + 64));
        goto LABEL_101;
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v190, v123);
    }
    uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
    goto LABEL_95;
  }
  if (v136)
  {
LABEL_67:
    uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v130, v131, *(void *)(*(void *)(v145 - 8) + 64));
    uint64_t v146 = v244;
LABEL_68:
    v147 = v245;
    uint64_t v148 = v246;
    goto LABEL_84;
  }
  *unint64_t v130 = *v131;
  uint64_t v137 = v132[5];
  uint64_t v138 = (char *)v130 + v137;
  uint64_t v139 = (char *)v131 + v137;
  v138[16] = v139[16];
  *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
  *(_OWORD *)(v138 + 24) = *(_OWORD *)(v139 + 24);
  v138[40] = v139[40];
  *((void *)v138 + 6) = *((void *)v139 + 6);
  *(_OWORD *)(v138 + 56) = *(_OWORD *)(v139 + 56);
  *(_OWORD *)(v138 + 72) = *(_OWORD *)(v139 + 72);
  v138[88] = v139[88];
  *((_OWORD *)v138 + 6) = *((_OWORD *)v139 + 6);
  uint64_t v140 = *(int *)(v249 + 40);
  v141 = &v138[v140];
  long long v142 = &v139[v140];
  if (v125(&v139[v140], 1, v123))
  {
    uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
    uint64_t v144 = v243;
  }
  else
  {
    uint64_t v144 = v243;
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v141, v142, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(v141, 0, 1, v123);
  }
  uint64_t v159 = v132[6];
  uint64_t v160 = (char *)v130 + v159;
  uint64_t v161 = (char *)v131 + v159;
  *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
  v160[16] = v161[16];
  *(_OWORD *)(v160 + 24) = *(_OWORD *)(v161 + 24);
  v160[40] = v161[40];
  *((void *)v160 + 6) = *((void *)v161 + 6);
  *(_OWORD *)(v160 + 56) = *(_OWORD *)(v161 + 56);
  *(_OWORD *)(v160 + 72) = *(_OWORD *)(v161 + 72);
  v160[88] = v161[88];
  *((_OWORD *)v160 + 6) = *((_OWORD *)v161 + 6);
  uint64_t v162 = *(int *)(v249 + 40);
  v163 = &v160[v162];
  id v164 = &v161[v162];
  if (v125(&v161[v162], 1, v123))
  {
    uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v163, v164, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v163, v164, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v163, 0, 1, v123);
  }
  uint64_t v166 = v132[7];
  v167 = (char *)v130 + v166;
  long long v168 = (char *)v131 + v166;
  *(_OWORD *)v167 = *(_OWORD *)v168;
  v167[16] = v168[16];
  *(_OWORD *)(v167 + 24) = *(_OWORD *)(v168 + 24);
  v167[40] = v168[40];
  *((void *)v167 + 6) = *((void *)v168 + 6);
  *(_OWORD *)(v167 + 56) = *(_OWORD *)(v168 + 56);
  *(_OWORD *)(v167 + 72) = *(_OWORD *)(v168 + 72);
  v167[88] = v168[88];
  *((_OWORD *)v167 + 6) = *((_OWORD *)v168 + 6);
  uint64_t v169 = *(int *)(v249 + 40);
  long long v170 = &v167[v169];
  long long v171 = &v168[v169];
  if (v125(&v168[v169], 1, v123))
  {
    uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v170, v171, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v170, 0, 1, v123);
  }
  uint64_t v146 = v244;
  uint64_t v173 = v132[8];
  v174 = (char *)v130 + v173;
  uint64_t v175 = (char *)v131 + v173;
  *(_OWORD *)v174 = *(_OWORD *)v175;
  v174[16] = v175[16];
  *(_OWORD *)(v174 + 24) = *(_OWORD *)(v175 + 24);
  v174[40] = v175[40];
  *((void *)v174 + 6) = *((void *)v175 + 6);
  *(_OWORD *)(v174 + 56) = *(_OWORD *)(v175 + 56);
  *(_OWORD *)(v174 + 72) = *(_OWORD *)(v175 + 72);
  v174[88] = v175[88];
  *((_OWORD *)v174 + 6) = *((_OWORD *)v175 + 6);
  uint64_t v176 = *(int *)(v249 + 40);
  v177 = &v174[v176];
  int v178 = &v175[v176];
  if (v125(&v175[v176], 1, v123))
  {
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v177, v178, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(v177, 0, 1, v123);
  }
  v147 = v245;
  uint64_t v148 = v246;
  (*(void (**)(_OWORD *, void, uint64_t, int *))(v133 + 56))(v130, 0, 1, v132);
LABEL_84:
  *(void *)(v146 + v147[8]) = *(void *)(v148 + v147[8]);
  swift_bridgeObjectRelease();
  uint64_t v180 = v147[9];
  uint64_t v181 = v146 + v180;
  uint64_t v182 = v148 + v180;
  uint64_t v183 = *(void *)(v182 + 8);
  *(void *)uint64_t v181 = *(void *)v182;
  *(void *)(v181 + 8) = v183;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v181 + 16) = *(unsigned char *)(v182 + 16);
  *(unsigned char *)(v181 + 17) = *(unsigned char *)(v182 + 17);
  *(unsigned char *)(v181 + 18) = *(unsigned char *)(v182 + 18);
  return v146;
}

uint64_t sub_191B26C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B26C70);
}

uint64_t sub_191B26C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_191B26DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B26DB4);
}

uint64_t sub_191B26DB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for ActivityMetricsDefinition(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ActivityViewCollection()
{
  uint64_t result = qword_1E92E1A70;
  if (!qword_1E92E1A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_191B26F30()
{
  sub_191B2702C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActivityMetricsDefinition(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_191B2702C()
{
  if (!qword_1E92E1A68)
  {
    type metadata accessor for JindoViewCollection();
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92E1A68);
    }
  }
}

unint64_t sub_191B27088()
{
  unint64_t result = qword_1E92E3348;
  if (!qword_1E92E3348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E1588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3348);
  }
  return result;
}

uint64_t sub_191B270E4@<X0>(void *a1@<X8>)
{
  uint64_t v97 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1448);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v90 = (uint64_t (*)(uint64_t))((char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v88 = (char *)&v84 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v91 = (uint64_t *)((char *)&v84 - v8);
  MEMORY[0x1F4188790](v7);
  uint64_t v89 = (uint64_t)&v84 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1590);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void **)((char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for JindoViewStates(0);
  uint64_t v94 = *(void *)(v13 - 8);
  uint64_t v95 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v86 = (uint64_t (*)(uint64_t))((char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (uint64_t)&v84 - v16;
  uint64_t v17 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ActivityViewStates(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v87 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  int v93 = (uint64_t *)((char *)&v84 - v24);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (uint64_t *)((char *)&v84 - v25);
  uint64_t v27 = (int *)type metadata accessor for ActivityViewCollection();
  uint64_t v28 = v27[5];
  uint64_t v29 = v1;
  uint64_t v30 = *(void **)(v1 + v28);
  uint64_t KeyPath = swift_getKeyPath();
  id v32 = v30;
  uint64_t v33 = sub_191AFA6F4(KeyPath);

  swift_release();
  if (v33)
  {
    if (*(void *)(v33 + 16)) {
      int v34 = *(unsigned __int8 *)(v33 + 32);
    }
    else {
      int v34 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    int v34 = 1;
  }
  uint64_t v35 = v29;
  uint64_t v36 = *(void *)(v29 + v27[8]);
  uint64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    uint64_t v38 = (unsigned __int8 *)(v36 + 32);
    while (v34 != *v38)
    {
      ++v38;
      if (!--v37) {
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    LOBYTE(v34) = 1;
  }
  uint64_t v39 = *(void *)(v29 + v27[6]);
  sub_191B27B28(v29 + v27[7], (uint64_t)v19, type metadata accessor for ActivityMetricsDefinition);
  v98[0] = *(id *)(v29 + v28);
  id v40 = v98[0];
  LOBYTE(v99) = v34;
  swift_retain();
  id v41 = v40;
  sub_191CB9ED8(v39, (uint64_t)v19, v98, (char *)&v99, v26);
  sub_191B01614(v29, (uint64_t)v12, &qword_1E92E1590);
  uint64_t v42 = type metadata accessor for JindoViewCollection();
  int v43 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v12, 1, v42);
  uint64_t v96 = v26;
  if (v43 == 1)
  {
    sub_191B01770((uint64_t)v12, &qword_1E92E1590);
    uint64_t v86 = type metadata accessor for ActivityViewStates;
    uint64_t v44 = v87;
    sub_191B27B28((uint64_t)v26, v87, type metadata accessor for ActivityViewStates);
    uint64_t v46 = v94;
    uint64_t v45 = v95;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
    uint64_t v48 = (uint64_t)v88;
    v47(v88, 1, 1, v95);
    uint64_t v49 = v29 + v27[9];
    int v93 = *(uint64_t **)v49;
    uint64_t v85 = *(void *)(v49 + 8);
    LODWORD(v92) = *(unsigned __int8 *)(v49 + 16);
    LODWORD(v91) = *(unsigned __int8 *)(v49 + 17);
    LODWORD(v89) = *(unsigned __int8 *)(v49 + 18);
    uint64_t v50 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
    uint64_t v51 = v97;
    uint64_t v52 = (char *)v97 + v50[15];
    v47(v52, 1, 1, v45);
    uint64_t v53 = (uint64_t *)v44;
    *((unsigned char *)v51 + v50[16]) = 1;
    sub_191B27B28(v44, (uint64_t)v51 + v50[14], v86);
    uint64_t v54 = v85;
    swift_bridgeObjectRetain();
    uint64_t v55 = (uint64_t)v52;
    uint64_t v56 = v48;
    sub_191B279FC(v48, v55);
    uint64_t v57 = *v53;
    v51[1] = *v53;
    uint64_t v58 = (char *)v51 + v50[17];
    *(void *)uint64_t v58 = v93;
    *((void *)v58 + 1) = v54;
    v58[16] = v92;
    v58[17] = (char)v91;
    v58[18] = v89;
    uint64_t v59 = v90;
    sub_191B01614(v56, (uint64_t)v90, &qword_1E92E1448);
    if ((*(unsigned int (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v46 + 48))(v59, 1, v45) == 1)
    {
      sub_191B01770(v56, &qword_1E92E1448);
      sub_191B27A64((uint64_t)v53, type metadata accessor for ActivityViewStates);
      uint64_t result = sub_191B01770((uint64_t)v59, &qword_1E92E1448);
      uint64_t v61 = 0;
    }
    else
    {
      uint64_t v61 = *(void *)v59;
      sub_191B01770(v56, &qword_1E92E1448);
      sub_191B27A64((uint64_t)v53, type metadata accessor for ActivityViewStates);
      uint64_t result = sub_191B27A64((uint64_t)v59, type metadata accessor for JindoViewStates);
    }
    BOOL v80 = __OFADD__(v57, v61);
    uint64_t v81 = v57 + v61;
    uint64_t v82 = (uint64_t)v96;
    if (!v80)
    {
      *uint64_t v97 = v81;
      return sub_191B27A64(v82, type metadata accessor for ActivityViewStates);
    }
    __break(1u);
  }
  else
  {
    sub_191AFEE28((uint64_t)(v12 + 1), (uint64_t)v98);
    sub_191B27B28((uint64_t)v12 + *(int *)(v42 + 24), (uint64_t)v19, type metadata accessor for ActivityMetricsDefinition);
    uint64_t v99 = *v12;
    id v62 = v99;
    uint64_t v63 = v86;
    sub_191C2280C((uint64_t)v98, (uint64_t)v19, &v99, (uint64_t *)v86);
    sub_191B27A64((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for JindoViewCollection);
    uint64_t v64 = (uint64_t)v63;
    uint64_t v65 = v92;
    sub_191B27AC4(v64, v92);
    uint64_t v90 = type metadata accessor for ActivityViewStates;
    sub_191B27B28((uint64_t)v26, (uint64_t)v93, type metadata accessor for ActivityViewStates);
    uint64_t v66 = v89;
    sub_191B27B28(v65, v89, type metadata accessor for JindoViewStates);
    uint64_t v67 = v94;
    uint64_t v68 = v95;
    uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v69(v66, 0, 1, v95);
    int v70 = (char **)(v35 + v27[9]);
    uint64_t v71 = v70[1];
    uint64_t v88 = *v70;
    LODWORD(v87) = *((unsigned __int8 *)v70 + 16);
    LODWORD(v86) = *((unsigned __int8 *)v70 + 17);
    LODWORD(v85) = *((unsigned __int8 *)v70 + 18);
    uint64_t v72 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1588);
    uint64_t v73 = v97;
    uint64_t v74 = (uint64_t)v97 + v72[15];
    v69(v74, 1, 1, v68);
    uint64_t v75 = v93;
    *((unsigned char *)v73 + v72[16]) = 1;
    sub_191B27B28((uint64_t)v75, (uint64_t)v73 + v72[14], v90);
    swift_bridgeObjectRetain();
    sub_191B279FC(v66, v74);
    uint64_t v76 = *v75;
    v73[1] = *v75;
    uint64_t v77 = (char *)v73 + v72[17];
    *(void *)uint64_t v77 = v88;
    *((void *)v77 + 1) = v71;
    v77[16] = v87;
    v77[17] = (char)v86;
    v77[18] = v85;
    uint64_t v78 = v91;
    sub_191B01614(v66, (uint64_t)v91, &qword_1E92E1448);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v67 + 48))(v78, 1, v68) == 1)
    {
      sub_191B01770(v66, &qword_1E92E1448);
      sub_191B27A64((uint64_t)v75, type metadata accessor for ActivityViewStates);
      uint64_t result = sub_191B01770((uint64_t)v78, &qword_1E92E1448);
      uint64_t v79 = 0;
    }
    else
    {
      uint64_t v79 = *v78;
      sub_191B01770(v66, &qword_1E92E1448);
      sub_191B27A64((uint64_t)v75, type metadata accessor for ActivityViewStates);
      uint64_t result = sub_191B27A64((uint64_t)v78, type metadata accessor for JindoViewStates);
    }
    BOOL v80 = __OFADD__(v76, v79);
    uint64_t v83 = v76 + v79;
    uint64_t v82 = (uint64_t)v96;
    if (!v80)
    {
      *uint64_t v97 = v83;
      sub_191B27A64(v92, type metadata accessor for JindoViewStates);
      return sub_191B27A64(v82, type metadata accessor for ActivityViewStates);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191B279FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B27A64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B27AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JindoViewStates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B27B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B27B90()
{
  dyld_get_active_platform();
  int base_platform = dyld_get_base_platform();
  uint64_t result = dyld_get_program_sdk_version();
  LODWORD(qword_1EB44BA48) = base_platform;
  HIDWORD(qword_1EB44BA48) = result;
  return result;
}

double static SystemVersion.currentProcessSDKVersion.getter@<D0>(void *a1@<X8>)
{
  return sub_191B27CE8(&qword_1EB44BA38, (double *)&qword_1EB44BA48, a1);
}

uint64_t static SystemVersion.currentProcessSDKVersion.setter(uint64_t *a1)
{
  return sub_191B27D6C(a1, &qword_1EB44BA38, &qword_1EB44BA48);
}

uint64_t (*static SystemVersion.currentProcessSDKVersion.modify())()
{
  if (qword_1EB44BA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_191B27C9C()
{
  uint64_t result = dyld_get_program_sdk_version();
  dword_1E92E3350 = -1;
  *(_DWORD *)algn_1E92E3354 = result;
  return result;
}

double static SystemVersion.currentProcessSDKVersionForAnyPlatforms.getter@<D0>(void *a1@<X8>)
{
  return sub_191B27CE8(&qword_1E92E2BE0, (double *)&dword_1E92E3350, a1);
}

double sub_191B27CE8@<D0>(void *a1@<X0>, double *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double result = *a2;
  *a3 = *(void *)a2;
  return result;
}

uint64_t static SystemVersion.currentProcessSDKVersionForAnyPlatforms.setter(uint64_t *a1)
{
  return sub_191B27D6C(a1, &qword_1E92E2BE0, &dword_1E92E3350);
}

uint64_t sub_191B27D6C(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v4 = *a1;
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a3 = v4;
  return result;
}

uint64_t (*static SystemVersion.currentProcessSDKVersionForAnyPlatforms.modify())()
{
  if (qword_1E92E2BE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_191B27E5C()
{
  uint64_t result = getWKSystemVersionSDK_AzulE();
  qword_1E92E3358 = result;
  return result;
}

double static SystemVersion.AzulE.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(qword_1E92E2BE8, (double *)&qword_1E92E3358, a1);
}

uint64_t sub_191B27EA4()
{
  uint64_t result = getWKSystemVersionSDK_Sky();
  qword_1EB44C418 = result;
  return result;
}

double static SystemVersion.Sky.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(&qword_1EB44C420, (double *)&qword_1EB44C418, a1);
}

uint64_t sub_191B27EEC()
{
  uint64_t result = getWKSystemVersionSDK_Sydney();
  qword_1EB44AC50 = result;
  return result;
}

double static SystemVersion.Sydney.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(&qword_1EB44AC48, qword_1EB44AC50, a1);
}

uint64_t sub_191B27F34()
{
  uint64_t result = getWKSystemVersionSDK_SydneyC();
  qword_1E92E1418 = result;
  return result;
}

double static SystemVersion.SydneyC.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(&qword_1E92E1420, (double *)&qword_1E92E1418, a1);
}

uint64_t sub_191B27F7C()
{
  uint64_t result = getWKSystemVersionSDK_Dawn();
  qword_1EB44BA98 = result;
  return result;
}

double static SystemVersion.Dawn.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(&qword_1EB44BAA8, qword_1EB44BA98, a1);
}

uint64_t sub_191B27FC4()
{
  uint64_t result = getWKSystemVersionSDK_DawnC();
  qword_1EB449A08 = result;
  return result;
}

double static SystemVersion.DawnC.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(qword_1EB449A10, (double *)&qword_1EB449A08, a1);
}

uint64_t sub_191B2800C()
{
  uint64_t result = getWKSystemVersionSDK_Crystal();
  qword_1EB449B10 = result;
  return result;
}

double static SystemVersion.Crystal.getter@<D0>(void *a1@<X8>)
{
  return sub_191B28054(&qword_1EB449B18, (double *)&qword_1EB449B10, a1);
}

double sub_191B28054@<D0>(void *a1@<X0>, double *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  double result = *a2;
  *a3 = *(void *)a2;
  return result;
}

uint64_t static SystemVersion.currentProcessIsLinkedOnOrAfter(_:)()
{
  return dyld_program_sdk_at_least();
}

uint64_t SystemVersion.description.getter()
{
  sub_191B28158();
  uint64_t v1 = sub_191CF5408();
  sub_191CF53B8();
  sub_191CF5408();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_191B28158()
{
  unint64_t result = qword_1E92E3360;
  if (!qword_1E92E3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3360);
  }
  return result;
}

void SystemVersion.forAnyPlatform()(_DWORD *a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 4);
  *a1 = -1;
  a1[1] = v2;
}

uint64_t SystemVersion.hash(into:)()
{
  return sub_191CF6498();
}

BOOL static SystemVersion.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL sub_191B2820C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_191B28224()
{
  return sub_191CF64C8();
}

uint64_t sub_191B2826C()
{
  return sub_191CF6478();
}

uint64_t sub_191B28298()
{
  return sub_191CF64C8();
}

uint64_t sub_191B282DC()
{
  if (*v0) {
    return 7038067;
  }
  else {
    return 0x6D726F6674616C70;
  }
}

uint64_t sub_191B28310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B28C98(a1, a2);
  *a3 = result;
  return result;
}

void sub_191B28338(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_191B28344(uint64_t a1)
{
  unint64_t v2 = sub_191B28524();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B28380(uint64_t a1)
{
  unint64_t v2 = sub_191B28524();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SystemVersion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B28524();
  sub_191CF6528();
  char v12 = 0;
  sub_191CF6298();
  if (!v2)
  {
    char v11 = 1;
    sub_191CF6298();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_191B28524()
{
  unint64_t result = qword_1EB44BAE8;
  if (!qword_1EB44BAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BAE8);
  }
  return result;
}

uint64_t SystemVersion.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t SystemVersion.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448E70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B28524();
  sub_191CF6508();
  if (!v2)
  {
    char v14 = 0;
    int v9 = sub_191CF6198();
    char v13 = 1;
    int v10 = sub_191CF6198();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191B28770@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return SystemVersion.init(from:)(a1, a2);
}

uint64_t sub_191B28788(void *a1)
{
  return SystemVersion.encode(to:)(a1);
}

uint64_t sub_191B287A0()
{
  return sub_191CF64C8();
}

uint64_t sub_191B287FC()
{
  return sub_191CF6498();
}

uint64_t sub_191B28838()
{
  return sub_191CF64C8();
}

unint64_t sub_191B28894()
{
  unint64_t result = qword_1E92E3368;
  if (!qword_1E92E3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3368);
  }
  return result;
}

uint64_t sub_191B288E8()
{
  sub_191B28158();
  uint64_t v1 = sub_191CF5408();
  sub_191CF53B8();
  sub_191CF5408();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return v1;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemVersion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SystemVersion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion()
{
  return &type metadata for SystemVersion;
}

uint64_t getEnumTagSinglePayload for ActivityFamily(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SystemVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B28B4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_191B28B74(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion.CodingKeys()
{
  return &type metadata for SystemVersion.CodingKeys;
}

unint64_t sub_191B28B94()
{
  unint64_t result = qword_1E92E3370;
  if (!qword_1E92E3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3370);
  }
  return result;
}

unint64_t sub_191B28BEC()
{
  unint64_t result = qword_1EB44BAF8;
  if (!qword_1EB44BAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BAF8);
  }
  return result;
}

unint64_t sub_191B28C44()
{
  unint64_t result = qword_1EB44BAF0;
  if (!qword_1EB44BAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BAF0);
  }
  return result;
}

uint64_t sub_191B28C98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7038067 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t WidgetViewMetadata.supportsForeground.getter()
{
  return *v0;
}

uint64_t WidgetViewMetadata.supportsForeground.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*WidgetViewMetadata.supportsForeground.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.containsPrivacyRedactions.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t WidgetViewMetadata.containsPrivacyRedactions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*WidgetViewMetadata.containsPrivacyRedactions.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.containsInteractiveControls.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t WidgetViewMetadata.containsInteractiveControls.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*WidgetViewMetadata.containsInteractiveControls.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WidgetViewMetadata();
  return sub_191B01614(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t type metadata accessor for WidgetViewMetadata()
{
  uint64_t result = qword_1EB44A130;
  if (!qword_1EB44A130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WidgetViewMetadata.url.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WidgetViewMetadata();
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1EB44BBA8);
}

uint64_t (*WidgetViewMetadata.url.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.auxiliaryMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WidgetViewMetadata();
  return sub_191B01614(v1 + *(int *)(v3 + 32), a1, &qword_1EB44AF40);
}

uint64_t WidgetViewMetadata.auxiliaryMetadata.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WidgetViewMetadata();
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 32), &qword_1EB44AF40);
}

uint64_t sub_191B28FA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*WidgetViewMetadata.auxiliaryMetadata.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for WidgetViewMetadata();
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 32);
  uint64_t v7 = sub_191CF4898();
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v9)((void *)(v7 - 8), v6, 1, 1, v7);
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  sub_191B01770(v3, (uint64_t *)&unk_1EB44BBA8);
  v5(v3, 1, 1, v4);
  sub_191B01770(v6, &qword_1EB44AF40);

  return v9(v6, 1, 1, v7);
}

unint64_t sub_191B291AC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 7107189;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191B29258()
{
  return sub_191B291AC(*v0);
}

uint64_t sub_191B29260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B2B010(a1, a2);
  *a3 = result;
  return result;
}

void sub_191B29288(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_191B29294(uint64_t a1)
{
  unint64_t v2 = sub_191B29590();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B292D0(uint64_t a1)
{
  unint64_t v2 = sub_191B29590();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetViewMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449FF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B29590();
  sub_191CF6528();
  v8[15] = 0;
  sub_191CF6228();
  if (!v1)
  {
    v8[14] = 1;
    sub_191CF6228();
    v8[13] = 2;
    sub_191CF61F8();
    type metadata accessor for WidgetViewMetadata();
    v8[12] = 3;
    sub_191CF3078();
    sub_191B29A68(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
    sub_191CF6208();
    v8[11] = 4;
    sub_191CF4898();
    sub_191B29A68(&qword_1EB44AD80, MEMORY[0x1E4F3DE80]);
    sub_191CF6208();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_191B29590()
{
  unint64_t result = qword_1EB44A168;
  if (!qword_1EB44A168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A168);
  }
  return result;
}

uint64_t WidgetViewMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447238);
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetViewMetadata();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v12[2] = 2;
  id v32 = &v12[*(int *)(v10 + 36)];
  char v13 = v32;
  uint64_t v14 = sub_191CF3078();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (uint64_t)&v12[*(int *)(v10 + 40)];
  uint64_t v16 = sub_191CF4898();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B29590();
  uint64_t v30 = v8;
  uint64_t v18 = (uint64_t)v32;
  uint64_t v17 = v33;
  sub_191CF6508();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_191B01770(v18, (uint64_t *)&unk_1EB44BBA8);
    return sub_191B01770(v15, &qword_1EB44AF40);
  }
  else
  {
    uint64_t v33 = v16;
    uint64_t v20 = v28;
    uint64_t v19 = (uint64_t)v29;
    char v38 = 0;
    *uint64_t v12 = sub_191CF6128() & 1;
    char v37 = 1;
    v12[1] = sub_191CF6128() & 1;
    char v36 = 2;
    void v12[2] = sub_191CF60F8();
    char v35 = 3;
    sub_191B29A68(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    sub_191CF6108();
    sub_191B28FA4(v19, v18, (uint64_t *)&unk_1EB44BBA8);
    char v34 = 4;
    sub_191B29A68(&qword_1EB447200, MEMORY[0x1E4F3DE80]);
    uint64_t v21 = (uint64_t)v26;
    uint64_t v22 = v30;
    uint64_t v23 = v31;
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v23);
    uint64_t v24 = v27;
    sub_191B28FA4(v21, v15, &qword_1EB44AF40);
    sub_191B29AB0((uint64_t)v12, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191B29B14((uint64_t)v12);
  }
}

uint64_t sub_191B29A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B29AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B29B14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191B29B70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetViewMetadata.init(from:)(a1, a2);
}

uint64_t sub_191B29B88(void *a1)
{
  return WidgetViewMetadata.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for WidgetViewMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = *(int *)(a3 + 28);
    int v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_191CF3078();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_191CF4898();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for WidgetViewMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_191CF4898();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_191CF4898();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

unsigned char *assignWithCopy for WidgetViewMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_191CF4898();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t initializeWithTake for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_191CF4898();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

unsigned char *assignWithTake for WidgetViewMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_191CF4898();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B2A990);
}

uint64_t sub_191B2A990(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      int v13 = &a1[*(int *)(a3 + 28)];
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
      uint64_t v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = &a1[*(int *)(a3 + 32)];
      return v16(v18, a2, v17);
    }
  }
}

uint64_t storeEnumTagSinglePayload for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B2AAD8);
}

unsigned char *sub_191B2AAD8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 28)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF40);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 32)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_191B2AC08()
{
  sub_191B2AD20(319, (unint64_t *)&qword_1EB44C548, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_191B2AD20(319, &qword_1EB44AF38, MEMORY[0x1E4F3DE80]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_191B2AD20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for WidgetViewMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetViewMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B2AED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetViewMetadata.CodingKeys()
{
  return &type metadata for WidgetViewMetadata.CodingKeys;
}

unint64_t sub_191B2AF0C()
{
  unint64_t result = qword_1E92E3378;
  if (!qword_1E92E3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3378);
  }
  return result;
}

unint64_t sub_191B2AF64()
{
  unint64_t result = qword_1EB44A178;
  if (!qword_1EB44A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A178);
  }
  return result;
}

unint64_t sub_191B2AFBC()
{
  unint64_t result = qword_1EB44A170;
  if (!qword_1EB44A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A170);
  }
  return result;
}

uint64_t sub_191B2B010(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000191D0DBD0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000191D0DBF0 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000191D0DC10 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000191D0DC30)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t WidgetEnvironment.subscript.getter()
{
  return sub_191B2E658();
}

BOOL WidgetEnvironment.matches(_:ignoring:)(uint64_t a1, int64_t a2)
{
  uint64_t v5 = *v2 + OBJC_IVAR___CHKWidgetEnvironment_tuples;
  swift_beginAccess();
  if (!*(void *)(*(void *)v5 + 16)) {
    return 1;
  }
  WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2);
  return (v6 & 1) == 0;
}

uint64_t sub_191B2B2B0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_191AFB8C4(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_191B4D7EC(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v24 = v3 + 80;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v28 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 24 * v6);
    uint64_t v13 = *v12;
    uint64_t v29 = v12[1];
    uint64_t v14 = v12[2];
    uint64_t v15 = v3;
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_191AFB8C4(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v30 + 16) = v17 + 1;
    uint64_t v18 = (void *)(v30 + 24 * v17);
    v18[4] = v13;
    v18[5] = v29;
    v18[6] = v14;
    int64_t v9 = 1 << *(unsigned char *)(v15 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v15;
    int v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v28 + 1;
    uint64_t v6 = v9;
    if (v28 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_191B2B4E8@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F2C8();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B2B538()
{
  return sub_191CF4078();
}

char *sub_191B2B584(uint64_t (*a1)(void **), uint64_t a2, void *a3, uint64_t a4)
{
  v18[0] = a3;
  id v7 = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_191B4FF68(v18, a4);
  int64_t v10 = (void *)v9;
  uint64_t v19 = v8;
  unint64_t v20 = v9;
  unint64_t v21 = v11;
  if (v9 >> 62) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v12 >= 1)
  {
    uint64_t v13 = 0;
    unint64_t v14 = MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_191B3CC80(v12 - 1);
      if ((v15 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = v14;
        swift_bridgeObjectRelease();
        unint64_t v20 = v14;
        swift_bridgeObjectRelease();
        unint64_t v21 = v14;
      }
      if (__OFADD__(v13, 1)) {
        break;
      }
      v18[0] = v13;
      v18[1] = v10;
      char v16 = a1(v18);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v13;
      }
      swift_bridgeObjectRelease();
      int64_t v10 = (void *)v20;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v12 = sub_191CF6018();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      ++v13;
      if (v12 <= 0) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_191B2B7B0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v48 = a3;
  uint64_t v4 = sub_191CF4058();
  unint64_t v49 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char **)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AA8);
  MEMORY[0x1F4188790](v14 - 8);
  char v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (uint64_t *)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191B01614(v61, (uint64_t)v16, &qword_1E92E1AA8);
  uint64_t v53 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v13;
  sub_191B539D0((uint64_t)v16, (uint64_t)v13, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  unint64_t v21 = (void *)*v13;
  unint64_t v22 = (char *)v20 + *(int *)(v18 + 28);
  unint64_t v23 = *(void (**)(void))(v49 + 16);
  unint64_t v58 = v49 + 16;
  uint64_t v59 = v22;
  uint64_t v61 = v4;
  uint64_t v57 = v23;
  v23();
  id v24 = v21;
  uint64_t v25 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  id v62 = v24;
  id v26 = v24;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_191B4FF68(&v62, v25);
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();

  *unint64_t v20 = v27;
  v20[1] = v29;
  v20[2] = v31;
  sub_191B53970((uint64_t)v53, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  unint64_t v32 = v20[1];
  if (v32 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v34 = v61;
  if (v33 >= 1)
  {
    uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    char v35 = (void (**)(char *, uint64_t))(v49 + 8);
    uint64_t v53 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
    unint64_t v49 = (v49 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v50 = v35;
    while (1)
    {
      sub_191B3CC80(v33 - 1);
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = MEMORY[0x1E4FBC860];
        *unint64_t v20 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        v20[1] = v37;
        swift_bridgeObjectRelease();
        v20[2] = v37;
      }
      ((void (*)(char *, char *, uint64_t))v57)(v8, v59, v34);
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_191CF6018();
        swift_bridgeObjectRelease();
        if (!v38) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v38) {
          goto LABEL_16;
        }
      }
      if (v38 < 1)
      {
        __break(1u);
        goto LABEL_30;
      }
      for (uint64_t i = 0; i != v38; ++i)
      {
        if ((v32 & 0xC000000000000001) != 0)
        {
          uint64_t v40 = MEMORY[0x192FE4B60](i, v32);
        }
        else
        {
          uint64_t v40 = *(void *)(v32 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(void **)(v40 + 16) + 112))(v8);
        swift_release();
      }
LABEL_16:
      swift_bridgeObjectRelease();
      id v41 = *v52;
      uint64_t v42 = v60;
      uint64_t v34 = v61;
      (*v52)(v60, v8, v61);
      int v43 = *v53;
      (*v53)(v42, 0, 1, v34);
      if ((*v51)(v42, 1, v34) == 1) {
        goto LABEL_26;
      }
      uint64_t v44 = v54;
      v41(v54, v42, v34);
      char v45 = v55(v44);
      if (v3)
      {
        (*v50)(v44, v34);
        return sub_191B53970((uint64_t)v20, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
      }
      if (v45)
      {
        sub_191B53970((uint64_t)v20, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        uint64_t v47 = v48;
        v41(v48, v44, v34);
        return v43(v47, 0, 1, v34);
      }
      (*v50)(v44, v34);
      unint64_t v32 = v20[1];
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v33 = sub_191CF6018();
        swift_bridgeObjectRelease();
        if (v33 <= 0)
        {
LABEL_23:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v33 <= 0) {
          goto LABEL_23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  int v43 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
LABEL_25:
  v43(v60, 1, 1, v34);
LABEL_26:
  sub_191B53970((uint64_t)v20, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  return v43(v48, 1, 1, v34);
}

char *WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(uint64_t a1, int64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v102 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_191CF39E8();
  uint64_t v7 = *(char **)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v105 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF4058();
  uint64_t v108 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v89 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  long long v109 = (char *)v89 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v89 - v18;
  unint64_t v20 = *v2;
  uint64_t v21 = (uint64_t)*v2 + OBJC_IVAR___CHKWidgetEnvironment_tuples;
  swift_beginAccess();
  if (!*(void *)(*(void *)v21 + 16)) {
    return 0;
  }
  uint64_t v92 = v12;
  int v93 = v15;
  uint64_t v107 = v9;
  swift_bridgeObjectRetain();
  id v22 = v20;
  uint64_t v23 = sub_191B4EA70(a2);
  uint64_t v24 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v24);
  v89[-2] = a1;
  uint64_t v25 = sub_191B2B584((uint64_t (*)(void **))sub_191B4EBAC, (uint64_t)&v89[-4], v22, v23);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  if (v27)
  {
    swift_bridgeObjectRelease();
    return v25;
  }
  uint64_t v91 = 0;
  uint64_t KeyPath = swift_getKeyPath();
  id v29 = v22;
  unint64_t v30 = sub_191AFA454(KeyPath);
  uint64_t v94 = v29;

  swift_release();
  if (!v30) {
    return 0;
  }
  unint64_t v31 = sub_191B4EC44();
  sub_191CF4068();
  id v32 = v112;
  sub_191B3BADC((uint64_t)v112, v30);
  char v34 = v33;
  swift_bridgeObjectRelease();

  if ((v34 & 1) == 0) {
    return 0;
  }
  sub_191CF4068();
  id v36 = v112;
  id v37 = objc_msgSend(v112, sel_fallbackDisplayProperties);

  sub_191B016E0(0, &qword_1EB449D38);
  unint64_t v38 = sub_191CF5538();

  unint64_t v101 = v38;
  if (v38 >> 62)
  {
LABEL_64:
    swift_bridgeObjectRetain();
    unint64_t v38 = v101;
    uint64_t v88 = sub_191CF6018();
    swift_bridgeObjectRelease();
    uint64_t v39 = v88;
  }
  else
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v40 = v107;
  unint64_t v103 = v31;
  uint64_t v104 = a1;
  if (v39)
  {
    if (v39 < 1)
    {
      __break(1u);
LABEL_66:
      swift_once();
LABEL_52:
      uint64_t v64 = sub_191CF3858();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EB44C848);
      uint64_t v65 = v92;
      uint64_t v66 = v107;
      ((void (*)(char *, char *, uint64_t))v90)(v92, v93, v107);
      uint64_t v67 = sub_191CF3838();
      os_log_type_t v68 = sub_191CF5918();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        int v70 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v69 = 138412290;
        sub_191CF4068();
        id v71 = v112;
        uint64_t v66 = v107;
        sub_191CF5C08();
        *int v70 = v71;
        uint64_t v72 = *v96;
        (*v96)(v65, v66);
        _os_log_impl(&dword_191AF4000, v67, v68, "Matched with fallback display properties: %@", v69, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
        swift_arrayDestroy();
        MEMORY[0x192FE5F00](v70, -1, -1);
        MEMORY[0x192FE5F00](v69, -1, -1);
      }
      else
      {

        uint64_t v72 = *v96;
        (*v96)(v65, v66);
      }
      v72(v93, v66);
      return v25;
    }
    uint64_t v41 = 0;
    unint64_t v100 = v38 & 0xC000000000000001;
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v108 + 16);
    LODWORD(v99) = *MEMORY[0x1E4F3C6F8];
    uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))(v7 + 104);
    LODWORD(v97) = *MEMORY[0x1E4F3C700];
    uint64_t v96 = (void (**)(char *, uint64_t))(v108 + 32);
    int64_t v95 = v108 + 8;
    unint64_t v43 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v44 = v39;
      if (v100) {
        id v45 = (id)MEMORY[0x192FE4B60](v41, v38);
      }
      else {
        id v45 = *(id *)(v38 + 8 * v41 + 32);
      }
      uint64_t v46 = v45;
      uint64_t v47 = *v42;
      (*v42)(v19, v104, v40);
      id v112 = v46;
      uint64_t v7 = v46;
      sub_191CF4078();
      objc_msgSend(v7, sel_scale);
      sub_191CF3D78();
      if (objc_msgSend(v7, sel_colorGamut)) {
        uint64_t v48 = v99;
      }
      else {
        uint64_t v48 = v97;
      }
      (*v98)(v105, v48, v106);
      sub_191CF3D58();
      v47(v109, (uint64_t)v19, v40);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v43 = sub_191B40730(0, *(void *)(v43 + 16) + 1, 1, v43, &qword_1EB44B7D0, MEMORY[0x1E4F3D2F8], MEMORY[0x1E4F3D2F8]);
      }
      unint64_t v50 = *(void *)(v43 + 16);
      unint64_t v49 = *(void *)(v43 + 24);
      if (v50 >= v49 >> 1) {
        unint64_t v43 = sub_191B40730(v49 > 1, v50 + 1, 1, v43, &qword_1EB44B7D0, MEMORY[0x1E4F3D2F8], MEMORY[0x1E4F3D2F8]);
      }
      ++v41;
      *(void *)(v43 + 16) = v50 + 1;
      uint64_t v51 = v108;
      uint64_t v40 = v107;
      (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v43+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v50, v109, v107);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v40);
      uint64_t v39 = v44;
      unint64_t v38 = v101;
    }
    while (v44 != v41);
  }
  else
  {
    unint64_t v43 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v99 = *(void *)(v43 + 16);
  if (v99)
  {
    unint64_t v31 = 0;
    a1 = v108;
    uint64_t v105 = (char *)(v43 + ((*(unsigned __int8 *)(a1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80)));
    uint64_t v106 = v108 + 16;
    unint64_t v100 = v108 + 48;
    uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))(v108 + 32);
    uint64_t v52 = a2 & 0xFFFFFFFFFFFFFF8;
    long long v109 = (char *)(a2 & 0xFFFFFFFFFFFFFF8);
    if (a2 < 0) {
      uint64_t v52 = a2;
    }
    v89[2] = v52;
    uint64_t v19 = (char *)(a2 & 0xC000000000000001);
    uint64_t v96 = (void (**)(char *, uint64_t))(v108 + 8);
    unint64_t v101 = v108 + 56;
    v89[1] = (v108 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v97 = (unint64_t)a2 >> 62;
    uint64_t v25 = v93;
    uint64_t v53 = v102;
    int64_t v95 = a2;
    while (1)
    {
      if (v31 >= *(void *)(v43 + 16))
      {
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      uint64_t v7 = *(char **)(a1 + 16);
      ((void (*)(char *, char *, uint64_t))v7)(v53, &v105[*(void *)(a1 + 72) * v31], v40);
      uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(a1 + 56);
      v91(v53, 0, 1, v40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(a1 + 48))(v53, 1, v40) == 1) {
        goto LABEL_54;
      }
      (*v98)(v25, (uint64_t)v53, v40);
      unint64_t v54 = v97;
      if (v97)
      {
        swift_bridgeObjectRetain();
        id v63 = v94;
        sub_191CF6018();
      }
      else
      {
        swift_bridgeObjectRetain();
        id v55 = v94;
      }
      sub_191CF5C78();
      id v56 = (id)sub_191CF5708();
      id v112 = v56;
      if (v54)
      {
        swift_bridgeObjectRetain();
        a1 = sub_191CF6018();
        swift_bridgeObjectRelease();
      }
      else
      {
        a1 = *((void *)v109 + 2);
      }
      uint64_t v90 = v7;
      if (a1)
      {
        if (a1 < 1) {
          goto LABEL_63;
        }
        uint64_t v57 = 0;
        do
        {
          if (v19)
          {
            uint64_t v58 = MEMORY[0x192FE4B60](v57, a2);
          }
          else
          {
            uint64_t v58 = *(void *)(a2 + 8 * v57 + 32);
            swift_retain();
          }
          ++v57;
          sub_191B43400(v111, v58);
          swift_release();
        }
        while (a1 != v57);
        uint64_t v59 = swift_bridgeObjectRelease();
        id v56 = v112;
        uint64_t v25 = v93;
      }
      else
      {
        uint64_t v59 = swift_bridgeObjectRelease();
      }
      MEMORY[0x1F4188790](v59);
      v89[-2] = v25;
      uint64_t v60 = v94;
      uint64_t v7 = v25;
      uint64_t v25 = sub_191B2B584((uint64_t (*)(void **))sub_191B4EBAC, (uint64_t)&v89[-4], v94, (uint64_t)v56);
      uint64_t v62 = v61;
      swift_bridgeObjectRelease();

      if (v62) {
        break;
      }
      ++v31;
      uint64_t v40 = v107;
      (*v96)(v7, v107);
      uint64_t v25 = v7;
      uint64_t v53 = v102;
      a1 = v108;
      a2 = v95;
      if (v31 == v99)
      {
        v91(v102, 1, 1, v40);
        goto LABEL_54;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB44A048 != -1) {
      goto LABEL_66;
    }
    goto LABEL_52;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v102, 1, 1, v40);
LABEL_54:
  swift_bridgeObjectRelease();
  uint64_t v73 = swift_getKeyPath();
  id v74 = v94;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v75 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v76 = (char *)objc_allocWithZone(v75);
    uint64_t v77 = (unint64_t *)&v76[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v78 = (char *)v74;
    uint64_t v79 = v76;
    *uint64_t v77 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    BOOL v80 = (unint64_t *)&v78[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v81 = *v80;
    swift_beginAccess();
    *uint64_t v77 = v81;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v110.receiver = v79;
    v110.super_class = v75;
    id v74 = objc_msgSendSuper2(&v110, sel_init);
  }
  sub_191B2E940(0, v73, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191B5195C, (uint64_t *)&unk_1E92E2EF0);
  id v82 = v74;
  swift_bridgeObjectRetain();
  id v83 = v82;
  uint64_t v84 = sub_191B4EA70(a2);
  uint64_t v85 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v85);
  v89[-2] = v104;
  uint64_t v25 = sub_191B2B584((uint64_t (*)(void **))sub_191B4EBAC, (uint64_t)&v89[-4], v83, v84);
  uint64_t v87 = v86;
  swift_bridgeObjectRelease();

  if (v87) {
    swift_bridgeObjectRelease();
  }
  else {
    uint64_t v25 = 0;
  }

  return v25;
}

Swift::Int __swiftcall WidgetEnvironment.enumeratedCount()()
{
  uint64_t v0 = sub_191B38120()[2];
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 != 0;
  Swift::Int result = (Swift::Int)sub_191B38120();
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(result + 32);
    while (1)
    {
      if (*v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_191CF6018();
        Swift::Int result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v5 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v6 = v5 <= 1 ? 1 : v5;
      Swift::Int v7 = v1 * v6;
      if ((unsigned __int128)(v1 * (__int128)v6) >> 64 != (v1 * v6) >> 63) {
        break;
      }
      ++v4;
      v1 *= v6;
      if (!--v3) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    Swift::Int v7 = v0 != 0;
LABEL_13:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t WidgetEnvironment.environmentValues(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v3 = sub_191CF4058();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3388);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *v2;
  uint64_t v17 = (uint64_t)*v2 + OBJC_IVAR___CHKWidgetEnvironment_tuples;
  swift_beginAccess();
  if (!*(void *)(*(void *)v17 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v23, 1, 1, v3);
  }
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  *(void *)uint64_t v9 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  id v19 = v16;
  v18(v6, v3);
  uint64_t result = sub_191B539D0((uint64_t)v9, (uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v12[*(int *)(v10 + 36)] = v22;
    sub_191B3BE40(v15);
    WidgetEnvironment.EnvironmentValuesEnumerator.Iterator.next()(v23);
    return sub_191B53970((uint64_t)v15, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  }
  return result;
}

unint64_t sub_191B2D038(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C028);
  uint64_t v2 = (void *)sub_191CF6068();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    swift_retain();
    swift_retain();
    unint64_t result = sub_191B1CABC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191B2D144(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C018);
  uint64_t v2 = (void *)sub_191CF6068();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 56);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 3);
    uint64_t v6 = (uint64_t)*(v4 - 2);
    uint64_t v7 = (uint64_t)*(v4 - 1);
    char v8 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_191B1E938(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (void *)(v2[6] + 24 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    void v12[2] = v7;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191B2D280(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A278);
  uint64_t v2 = sub_191CF6068();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_191B01614(v6, (uint64_t)&v15, (uint64_t *)&unk_1E92E34C0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_191B1CB2C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_191B4F9C0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191B2D3B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B930);
  uint64_t v2 = sub_191CF6068();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_191B01614(v6, (uint64_t)&v13, &qword_1EB44B7C8);
    uint64_t v7 = v13;
    unint64_t result = sub_191B1D9F0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_191B4F9C0(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191B2D4E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C020);
  uint64_t v2 = (void *)sub_191CF6068();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_191B1CB2C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191B2D604(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3470);
  uint64_t v2 = (void *)sub_191CF6068();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_191B1CB2C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_191B2D728(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_191CF6348();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  char v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_191CF6348() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191B2D7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(void *)(v4 + 8 * v5);
    if (!v6)
    {
      if (!a1) {
        break;
      }
      goto LABEL_4;
    }
    if (a1)
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
      sub_191B00398((unint64_t *)&qword_1E92E0770, qword_1EB44AB40);
      sub_191CF54C8();
      sub_191CF54C8();
      if (v23 == v21 && v24 == v22)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v7 = sub_191CF6348();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_38;
        }
      }
      uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
      char v9 = *(void **)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
      uint64_t v10 = v8[2];
      if (v10 != v9[2]) {
        goto LABEL_38;
      }
      if (v10) {
        BOOL v11 = v8 == v9;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11)
      {
        BOOL v14 = v8[4] == v9[4] && v8[5] == v9[5];
        if (!v14 && (sub_191CF6348() & 1) == 0) {
          goto LABEL_38;
        }
        if (v10 != 1)
        {
          BOOL v15 = v8[6] == v9[6] && v8[7] == v9[7];
          if (!v15 && (sub_191CF6348() & 1) == 0) {
            goto LABEL_38;
          }
          uint64_t v16 = v10 - 2;
          if (v16)
          {
            long long v17 = v9 + 9;
            uint64_t v18 = v8 + 9;
            while (1)
            {
              BOOL v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
              if (!v19 && (sub_191CF6348() & 1) == 0) {
                break;
              }
              v17 += 2;
              v18 += 2;
              if (!--v16) {
                goto LABEL_17;
              }
            }
LABEL_38:
            swift_release();
            swift_release();
            goto LABEL_4;
          }
        }
      }
LABEL_17:
      int v12 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      int v13 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      swift_release();
      swift_release();
      if (v12 == v13) {
        break;
      }
    }
LABEL_4:
    if (++v5 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_191B2DA6C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_191CF6018())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)MEMORY[0x192FE4B60](0, a2);
LABEL_5:
      uint64_t v8 = v7;
      sub_191B016E0(0, (unint64_t *)a3);
      a3 = sub_191CF5B58();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = sub_191CF5B58();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x192FE4B60](a3, a2);
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = sub_191CF5B58();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_191B2DBF4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return v2 & 1;
  }
  if (*(unsigned char *)(a2 + 32) == (result & 1)) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v3 = 33;
  while (1)
  {
    uint64_t v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1)) {
      break;
    }
    char v5 = *(unsigned char *)(a2 + v3) ^ result;
    if (v5)
    {
      ++v3;
      if (v4 != v2) {
        continue;
      }
    }
    LOBYTE(v2) = v5 ^ 1;
    return v2 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B2DC64(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v3 = sub_191CF3C18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2300);
  MEMORY[0x1F4188790](v26);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  char v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v23 = a2;
  uint64_t v24 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v28 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v14 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  uint64_t v15 = v26;
  while (1)
  {
    uint64_t v16 = (uint64_t)&v10[*(int *)(v15 + 48)];
    sub_191B01614(v12, (uint64_t)v10, &qword_1EB44A280);
    sub_191B01614(v29, v16, &qword_1EB44A280);
    long long v17 = *v13;
    if ((*v13)(v10, 1, v3) == 1) {
      break;
    }
    sub_191B01614((uint64_t)v10, v30, &qword_1EB44A280);
    if (v17((char *)v16, 1, v3) == 1)
    {
      (*v28)(v30, v3);
      goto LABEL_4;
    }
    uint64_t v18 = v25;
    (*v24)(v25, v16, v3);
    sub_191B4FAC8(&qword_1E92E1BC8, 255, MEMORY[0x1E4F3CD10]);
    int v27 = sub_191CF52F8();
    BOOL v19 = *v28;
    unint64_t v20 = v18;
    uint64_t v15 = v26;
    (*v28)((uint64_t)v20, v3);
    v19(v30, v3);
    sub_191B01770((uint64_t)v10, &qword_1EB44A280);
    if (v27) {
      goto LABEL_14;
    }
LABEL_5:
    v12 += v14;
    if (!--v11)
    {
      uint64_t v21 = 0;
      goto LABEL_15;
    }
  }
  if (v17((char *)v16, 1, v3) != 1)
  {
LABEL_4:
    sub_191B01770((uint64_t)v10, &qword_1E92E2300);
    goto LABEL_5;
  }
  sub_191B01770((uint64_t)v10, &qword_1EB44A280);
LABEL_14:
  uint64_t v21 = 1;
LABEL_15:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_191B2E010(uint64_t result, double a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return 0;
  }
  if (*(double *)(result + 32) == a2) {
    return 1;
  }
  if (v2 != 1)
  {
    for (uint64_t i = 5; ; ++i)
    {
      uint64_t v5 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      double v6 = *(double *)(result + 8 * i);
      BOOL v3 = v6 == a2;
      if (v6 == a2 || v5 == v2) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_191B2E070()
{
  if (qword_1EB44B4E8 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_191AFB618(v0);
  uint64_t result = swift_bridgeObjectRelease();
  off_1EB44BD50 = v1;
  return result;
}

void *sub_191B2E0E4()
{
  uint64_t result = (void *)sub_191B4DA94();
  off_1EB44B4D8 = result;
  return result;
}

void sub_191B2E104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_191B4AE68(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = (id)sub_191C98D14(a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_191B2E204(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_191B4F9C0((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_191B4B968(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_191CF5F68();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_191B01770(a1, (uint64_t *)&unk_1EB44BC90);
    sub_191C98694(a2, v9);
    uint64_t v7 = sub_191CF5F68();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_191B01770((uint64_t)v9, (uint64_t *)&unk_1EB44BC90);
  }
}

uint64_t sub_191B2E324@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
  *a2 = a1;
  sub_191CF5DC8();
  sub_191CF53B8();
  sub_191CF62C8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF5E18();
  uint64_t v4 = *MEMORY[0x1E4FBBA70];
  uint64_t v5 = sub_191CF5E38();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
}

void WidgetEnvironment._storage.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*WidgetEnvironment._storage.modify())()
{
  return nullsub_1;
}

void sub_191B2E490(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  uint64_t v4 = WidgetEnvironment.subscript.getter();

  *a2 = v4;
}

uint64_t sub_191B2E4EC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  return WidgetEnvironment.subscript.setter(v1);
}

uint64_t WidgetEnvironment.subscript.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v3 = *v1;
    uint64_t v4 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    double v6 = (unint64_t *)&v5[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v7 = v3;
    uint64_t v8 = v5;
    *double v6 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v9 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v10 = *v9;
    swift_beginAccess();
    *double v6 = v10;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v14.receiver = v8;
    v14.super_class = v4;
    id v11 = objc_msgSendSuper2(&v14, sel_init);

    uint64_t v12 = *v1;
    *uint64_t v1 = v11;
  }
  return sub_191B2ED88(a1);
}

uint64_t sub_191B2E658()
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_1EB44BD58;
  uint64_t v1 = swift_retain();
  uint64_t v2 = sub_191C6E1E4(v1, (uint64_t)v0);
  swift_endAccess();
  uint64_t v3 = swift_release();
  if (v2)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(**(void **)(v2 + 16) + 80))(v3);
    uint64_t v7 = sub_191B38630(v4, v5, v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = swift_release();
    if (v7)
    {
      MEMORY[0x1F4188790](v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BFF0);
      sub_191B00398(&qword_1EB448F58, &qword_1EB44BFF0);
      uint64_t v9 = sub_191CF5458();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v9;
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF5F18();
    sub_191CF6318();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191B2E900(uint64_t a1, uint64_t a2)
{
  return sub_191B2E940(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191C798E0, (uint64_t *)&unk_1E92E2F08);
}

uint64_t sub_191B2E920(uint64_t a1, uint64_t a2)
{
  return sub_191B2E940(a1, a2, sub_191C7972C, &qword_1E92E2E80);
}

uint64_t sub_191B2E940(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t *a4)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = off_1EB44BD58;
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_191C6E1E4(v9, (uint64_t)v8);
  swift_endAccess();
  uint64_t v11 = swift_release();
  if (v10)
  {
    uint64_t v12 = (*(uint64_t (**)(uint64_t))(**(void **)(v10 + 16) + 80))(v11);
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    if (a1)
    {
      swift_retain();
      swift_retain();
      unint64_t v17 = a3(a1, v10, a2);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      unint64_t v17 = 0;
    }
    sub_191B38914(v17, v12, v14, v16);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_191CF5F38();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191B2EB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a6)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = off_1EB44BD58;
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_191C6E1E4(v13, (uint64_t)v12);
  swift_endAccess();
  uint64_t v15 = swift_release();
  if (v14)
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t))(**(void **)(v14 + 16) + 80))(v15);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    if (a1)
    {
      swift_retain();
      swift_retain();
      unint64_t v21 = a5(a1, v14, a2, a3, a4);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      unint64_t v21 = 0;
    }
    sub_191B38914(v21, v16, v18, v20);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    __swift_instantiateConcreteTypeFromMangledName(a6);
    sub_191CF5F38();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_191B2ED88(uint64_t a1)
{
  if (qword_1EB44BCB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = off_1EB44BD58;
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_191C6E1E4(v3, (uint64_t)v2);
  swift_endAccess();
  uint64_t v5 = swift_release();
  if (v4)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(**(void **)(v4 + 16) + 80))(v5);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    if (a1)
    {
      v14[0] = v14;
      v14[3] = a1;
      MEMORY[0x1F4188790](v6);
      sub_191CF5618();
      type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
      swift_getWitnessTable();
      unint64_t v12 = sub_191CF5458();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v12 = 0;
    }
    sub_191B38914(v12, v7, v9, v11);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_191CF5D88();
    sub_191CF53B8();
    sub_191CF5F18();
    sub_191CF6318();
    uint64_t result = sub_191CF5FC8();
    __break(1u);
  }
  return result;
}

uint64_t (*WidgetEnvironment.subscript.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = sub_191B2E658();
  return sub_191B2F08C;
}

uint64_t sub_191B2F08C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    WidgetEnvironment.subscript.setter(v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return WidgetEnvironment.subscript.setter(v2);
  }
}

Swift::Void __swiftcall WidgetEnvironment.filterForExtensions()()
{
  uint64_t v1 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v3 = *v0;
    uint64_t v4 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    uint64_t v6 = (unint64_t *)&v5[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v7 = v3;
    uint64_t v8 = v5;
    *uint64_t v6 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v9 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v10 = *v9;
    swift_beginAccess();
    *uint64_t v6 = v10;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v25.receiver = v8;
    v25.super_class = v4;
    id v11 = objc_msgSendSuper2(&v25, sel_init);

    unint64_t v12 = *v1;
    *uint64_t v1 = v11;
  }
  sub_191B2EB5C(0, KeyPath, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v13 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v14 = *v1;
    uint64_t v15 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    uint64_t v17 = (unint64_t *)&v16[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v18 = v14;
    uint64_t v19 = v16;
    unint64_t *v17 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v20 = (unint64_t *)&v18[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v21 = *v20;
    swift_beginAccess();
    unint64_t *v17 = v21;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v24.receiver = v19;
    v24.super_class = v15;
    id v22 = objc_msgSendSuper2(&v24, sel_init);

    uint64_t v23 = *v1;
    *uint64_t v1 = v22;
  }
  sub_191B2EB5C(0, v13, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
}

uint64_t sub_191B2F374@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F520, a1);
}

uint64_t sub_191B2F394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F520);
}

uint64_t sub_191B2F3B4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F574, a1);
}

uint64_t sub_191B2F3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F574);
}

void WidgetEnvironment.filteredForExtensions()(void **a1@<X8>)
{
  uint64_t v3 = *v1;
  *a1 = *v1;
  id v4 = v3;
  WidgetEnvironment.filterForExtensions()();
}

Swift::Void __swiftcall WidgetEnvironment.filterForControlArchiving()()
{
  uint64_t v1 = v0;
  WidgetEnvironment.filterForArchiving()();
  uint64_t KeyPath = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v3 = *v0;
    id v4 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    uint64_t v6 = (unint64_t *)&v5[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v7 = v3;
    uint64_t v8 = v5;
    *uint64_t v6 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v9 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v10 = *v9;
    swift_beginAccess();
    *uint64_t v6 = v10;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v61.receiver = v8;
    v61.super_class = v4;
    id v11 = objc_msgSendSuper2(&v61, sel_init);

    unint64_t v12 = *v1;
    *uint64_t v1 = v11;
  }
  sub_191B2EB5C(0, KeyPath, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v13 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v14 = *v1;
    uint64_t v15 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    uint64_t v17 = (unint64_t *)&v16[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v18 = v14;
    uint64_t v19 = v16;
    unint64_t *v17 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v20 = (unint64_t *)&v18[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v21 = *v20;
    swift_beginAccess();
    unint64_t *v17 = v21;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v60.receiver = v19;
    v60.super_class = v15;
    id v22 = objc_msgSendSuper2(&v60, sel_init);

    uint64_t v23 = *v1;
    *uint64_t v1 = v22;
  }
  sub_191B2E940(0, v13, sub_191B51C90, &qword_1E92E2E68);
  uint64_t v24 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_super v25 = *v1;
    uint64_t v26 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    int v27 = (char *)objc_allocWithZone(v26);
    uint64_t v28 = (unint64_t *)&v27[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v29 = v25;
    uint64_t v30 = v27;
    *uint64_t v28 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    unint64_t v31 = (unint64_t *)&v29[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v32 = *v31;
    swift_beginAccess();
    *uint64_t v28 = v32;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v59.receiver = v30;
    v59.super_class = v26;
    id v33 = objc_msgSendSuper2(&v59, sel_init);

    char v34 = *v1;
    *uint64_t v1 = v33;
  }
  sub_191B2E940(0, v24, sub_191C7972C, &qword_1E92E2E80);
  uint64_t v35 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v36 = *v1;
    id v37 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    unint64_t v38 = (char *)objc_allocWithZone(v37);
    uint64_t v39 = (unint64_t *)&v38[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v40 = v36;
    uint64_t v41 = v38;
    *uint64_t v39 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v42 = (unint64_t *)&v40[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v43 = *v42;
    swift_beginAccess();
    *uint64_t v39 = v43;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v58.receiver = v41;
    v58.super_class = v37;
    id v44 = objc_msgSendSuper2(&v58, sel_init);

    id v45 = *v1;
    *uint64_t v1 = v44;
  }
  sub_191B2E940(0, v35, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191C798E0, (uint64_t *)&unk_1E92E2F08);
  uint64_t v46 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v47 = *v1;
    uint64_t v48 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    unint64_t v49 = (char *)objc_allocWithZone(v48);
    unint64_t v50 = (unint64_t *)&v49[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v51 = v47;
    uint64_t v52 = v49;
    *unint64_t v50 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v53 = (unint64_t *)&v51[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v54 = *v53;
    swift_beginAccess();
    *unint64_t v50 = v54;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v57.receiver = v52;
    v57.super_class = v48;
    id v55 = objc_msgSendSuper2(&v57, sel_init);

    id v56 = *v1;
    *uint64_t v1 = v55;
  }
  sub_191B2E940(0, v46, sub_191B51E40, &qword_1E92E2E70);
}

Swift::Void __swiftcall WidgetEnvironment.filterForArchiving()()
{
  uint64_t v1 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v3 = *v0;
    id v4 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    uint64_t v6 = (unint64_t *)&v5[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v7 = v3;
    uint64_t v8 = v5;
    *uint64_t v6 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v9 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v10 = *v9;
    swift_beginAccess();
    *uint64_t v6 = v10;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v37.receiver = v8;
    v37.super_class = v4;
    id v11 = objc_msgSendSuper2(&v37, sel_init);

    unint64_t v12 = *v1;
    *uint64_t v1 = v11;
  }
  sub_191B2EB5C(0, KeyPath, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v13 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v14 = *v1;
    uint64_t v15 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    uint64_t v17 = (unint64_t *)&v16[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v18 = v14;
    uint64_t v19 = v16;
    unint64_t *v17 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v20 = (unint64_t *)&v18[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v21 = *v20;
    swift_beginAccess();
    unint64_t *v17 = v21;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v36.receiver = v19;
    v36.super_class = v15;
    id v22 = objc_msgSendSuper2(&v36, sel_init);

    uint64_t v23 = *v1;
    *uint64_t v1 = v22;
  }
  sub_191B2EB5C(0, v13, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v24 = swift_getKeyPath();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    objc_super v25 = *v1;
    uint64_t v26 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    int v27 = (char *)objc_allocWithZone(v26);
    uint64_t v28 = (unint64_t *)&v27[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v29 = v25;
    uint64_t v30 = v27;
    *uint64_t v28 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    unint64_t v31 = (unint64_t *)&v29[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v32 = *v31;
    swift_beginAccess();
    *uint64_t v28 = v32;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v35.receiver = v30;
    v35.super_class = v26;
    id v33 = objc_msgSendSuper2(&v35, sel_init);

    char v34 = *v1;
    *uint64_t v1 = v33;
  }
  sub_191B2EB5C(0, v24, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
}

uint64_t sub_191B2FCE4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F4CC, a1);
}

uint64_t sub_191B2FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F4CC);
}

void WidgetEnvironment.filteredForControlArchiving()(void **a1@<X8>)
{
  uint64_t v3 = *v1;
  *a1 = *v1;
  id v4 = v3;
  WidgetEnvironment.filterForControlArchiving()();
}

uint64_t sub_191B2FD58@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F734, a1);
}

uint64_t sub_191B2FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F734);
}

uint64_t sub_191B2FD98@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F788, a1);
}

uint64_t sub_191B2FDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F788);
}

uint64_t sub_191B2FDD8@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F31C, a1);
}

uint64_t keypath_get_4Tm@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_191CF4068();
  *a2 = v4;
  return result;
}

uint64_t sub_191B2FE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F31C);
}

void WidgetEnvironment.filteredForArchiving()(void **a1@<X8>)
{
  uint64_t v3 = *v1;
  *a1 = *v1;
  id v4 = v3;
  WidgetEnvironment.filterForArchiving()();
}

uint64_t WidgetEnvironment.apply(environmentValues:)()
{
  uint64_t v1 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A490);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191CF8410;
  *(unsigned char *)(inited + 32) = sub_191CF3F58() & 1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v4 = *v0;
    uint64_t v5 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    uint64_t v7 = (unint64_t *)&v6[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v8 = v4;
    uint64_t v9 = v6;
    *uint64_t v7 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    unint64_t v10 = (unint64_t *)&v8[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v11 = *v10;
    swift_beginAccess();
    *uint64_t v7 = v11;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v327.receiver = v9;
    v327.super_class = v5;
    id v12 = objc_msgSendSuper2(&v327, sel_init);

    uint64_t v13 = *v1;
    *uint64_t v1 = v12;
  }
  sub_191B2EB5C(inited, KeyPath, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_191CF8410;
  *(unsigned char *)(v15 + 32) = sub_191CF3EC8() & 1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v16 = *v1;
    uint64_t v17 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v18 = (char *)objc_allocWithZone(v17);
    uint64_t v19 = (unint64_t *)&v18[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v20 = v16;
    unint64_t v21 = v18;
    *uint64_t v19 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    id v22 = (unint64_t *)&v20[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v23 = *v22;
    swift_beginAccess();
    *uint64_t v19 = v23;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v326.receiver = v21;
    v326.super_class = v17;
    id v24 = objc_msgSendSuper2(&v326, sel_init);

    objc_super v25 = *v1;
    *uint64_t v1 = v24;
  }
  sub_191B2EB5C(v15, v14, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_191CF8410;
  *(unsigned char *)(v27 + 32) = sub_191CF3ED8() & 1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v28 = *v1;
    uint64_t v29 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v30 = (char *)objc_allocWithZone(v29);
    unint64_t v31 = (unint64_t *)&v30[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    unint64_t v32 = v28;
    id v33 = v30;
    *unint64_t v31 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    char v34 = (unint64_t *)&v32[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v35 = *v34;
    swift_beginAccess();
    *unint64_t v31 = v35;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v325.receiver = v33;
    v325.super_class = v29;
    id v36 = objc_msgSendSuper2(&v325, sel_init);

    objc_super v37 = *v1;
    *uint64_t v1 = v36;
  }
  sub_191B2EB5C(v27, v26, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = xmmword_191CF8410;
  *(unsigned char *)(v39 + 32) = sub_191CF3F28() & 1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v40 = *v1;
    uint64_t v41 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v42 = (char *)objc_allocWithZone(v41);
    unint64_t v43 = (unint64_t *)&v42[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    id v44 = v40;
    id v45 = v42;
    *unint64_t v43 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v46 = (unint64_t *)&v44[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v47 = *v46;
    swift_beginAccess();
    *unint64_t v43 = v47;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v324.receiver = v45;
    v324.super_class = v41;
    id v48 = objc_msgSendSuper2(&v324, sel_init);

    unint64_t v49 = *v1;
    *uint64_t v1 = v48;
  }
  sub_191B2EB5C(v39, v38, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v50 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448E58);
  sub_191CF4388();
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_191CF8410;
  sub_191CF3E98();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v52 = *v1;
    uint64_t v53 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    unint64_t v54 = (char *)objc_allocWithZone(v53);
    id v55 = (unint64_t *)&v54[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    id v56 = v52;
    objc_super v57 = v54;
    *id v55 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    objc_super v58 = (unint64_t *)&v56[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v59 = *v58;
    swift_beginAccess();
    *id v55 = v59;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v323.receiver = v57;
    v323.super_class = v53;
    id v60 = objc_msgSendSuper2(&v323, sel_init);

    objc_super v61 = *v1;
    *uint64_t v1 = v60;
  }
  sub_191B2EB5C(v51, v50, MEMORY[0x1E4F3D548], (uint64_t)&unk_1EB448DE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B521D0, (uint64_t *)&unk_1E92E2ED0);
  uint64_t v62 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448E40);
  sub_191CF3998();
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_191CF8410;
  sub_191CF3D28();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v64 = *v1;
    uint64_t v65 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v66 = (char *)objc_allocWithZone(v65);
    uint64_t v67 = (unint64_t *)&v66[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    os_log_type_t v68 = v64;
    uint64_t v69 = v66;
    *uint64_t v67 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    int v70 = (unint64_t *)&v68[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v71 = *v70;
    swift_beginAccess();
    *uint64_t v67 = v71;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v322.receiver = v69;
    v322.super_class = v65;
    id v72 = objc_msgSendSuper2(&v322, sel_init);

    uint64_t v73 = *v1;
    *uint64_t v1 = v72;
  }
  sub_191B2EB5C(v63, v62, MEMORY[0x1E4F3C5D0], (uint64_t)&unk_1EB448DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B521D0, (uint64_t *)&unk_1E92E2EE0);
  uint64_t v74 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448E48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_191CF8410;
  sub_191CF3E08();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v76 = *v1;
    uint64_t v77 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v78 = (char *)objc_allocWithZone(v77);
    uint64_t v79 = (unint64_t *)&v78[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    BOOL v80 = v76;
    unint64_t v81 = v78;
    *uint64_t v79 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    id v82 = (unint64_t *)&v80[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v83 = *v82;
    swift_beginAccess();
    *uint64_t v79 = v83;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v321.receiver = v81;
    v321.super_class = v77;
    id v84 = objc_msgSendSuper2(&v321, sel_init);

    uint64_t v85 = *v1;
    *uint64_t v1 = v84;
  }
  sub_191B2E940(v75, v74, sub_191B52510, &qword_1E92E2EB0);
  uint64_t v86 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448E68);
  sub_191CF43A8();
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_191CF8410;
  sub_191CF3D88();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v88 = *v1;
    uint64_t v89 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v90 = (char *)objc_allocWithZone(v89);
    uint64_t v91 = (unint64_t *)&v90[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v92 = v88;
    int v93 = v90;
    *uint64_t v91 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v94 = (unint64_t *)&v92[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v95 = *v94;
    swift_beginAccess();
    *uint64_t v91 = v95;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v320.receiver = v93;
    v320.super_class = v89;
    id v96 = objc_msgSendSuper2(&v320, sel_init);

    unint64_t v97 = *v1;
    *uint64_t v1 = v96;
  }
  sub_191B2EB5C(v87, v86, MEMORY[0x1E4F3D5D8], (uint64_t)&unk_1EB448DF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B521D0, (uint64_t *)&unk_1E92E2EA0);
  uint64_t v98 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AD70);
  sub_191CF3C68();
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_191CF8410;
  sub_191CF3E28();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    unint64_t v100 = *v1;
    unint64_t v101 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v102 = (char *)objc_allocWithZone(v101);
    unint64_t v103 = (unint64_t *)&v102[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v104 = v100;
    uint64_t v105 = v102;
    unint64_t *v103 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v106 = (unint64_t *)&v104[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v107 = *v106;
    swift_beginAccess();
    unint64_t *v103 = v107;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v319.receiver = v105;
    v319.super_class = v101;
    id v108 = objc_msgSendSuper2(&v319, sel_init);

    long long v109 = *v1;
    *uint64_t v1 = v108;
  }
  sub_191B2EB5C(v99, v98, MEMORY[0x1E4F3CD58], (uint64_t)&unk_1EB448EA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B521D0, (uint64_t *)&unk_1E92E2E90);
  uint64_t v110 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C658);
  uint64_t v111 = swift_initStackObject();
  *(_OWORD *)(v111 + 16) = xmmword_191CF8410;
  sub_191B4F2C8();
  sub_191CF4068();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v112 = *v1;
    uint64_t v113 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v114 = (char *)objc_allocWithZone(v113);
    uint64_t v115 = (unint64_t *)&v114[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v116 = v112;
    uint64_t v117 = v114;
    unint64_t *v115 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v118 = (unint64_t *)&v116[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v119 = *v118;
    swift_beginAccess();
    unint64_t *v115 = v119;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v318.receiver = v117;
    v318.super_class = v113;
    id v120 = objc_msgSendSuper2(&v318, sel_init);

    long long v121 = *v1;
    *uint64_t v1 = v120;
  }
  sub_191B2E940(v111, v110, sub_191C7972C, &qword_1E92E2E80);
  uint64_t v122 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B1B0);
  uint64_t v123 = swift_initStackObject();
  *(_OWORD *)(v123 + 16) = xmmword_191CF9150;
  sub_191B0171C();
  sub_191CF4068();
  *(void *)(v123 + 32) = v317;
  uint64_t v317 = v123;
  sub_191CF5558();
  uint64_t v124 = v123;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v125 = *v1;
    int v126 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    int v127 = (char *)objc_allocWithZone(v126);
    uint64_t v128 = (unint64_t *)&v127[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v129 = v125;
    unint64_t v130 = v127;
    *uint64_t v128 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    long long v131 = (unint64_t *)&v129[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v132 = *v131;
    swift_beginAccess();
    *uint64_t v128 = v132;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v316.receiver = v130;
    v316.super_class = v126;
    id v133 = objc_msgSendSuper2(&v316, sel_init);

    long long v134 = *v1;
    *uint64_t v1 = v133;
  }
  sub_191B2E940(v124, v122, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191C798E0, (uint64_t *)&unk_1E92E2F08);
  uint64_t v135 = swift_getKeyPath();
  uint64_t v136 = swift_initStackObject();
  *(_OWORD *)(v136 + 16) = xmmword_191CF8410;
  sub_191B4F31C();
  sub_191CF4068();
  *(unsigned char *)(v136 + 32) = v315;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v137 = *v1;
    uint64_t v138 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v139 = (char *)objc_allocWithZone(v138);
    uint64_t v140 = (unint64_t *)&v139[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v141 = v137;
    long long v142 = v139;
    *uint64_t v140 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v143 = (unint64_t *)&v141[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v144 = *v143;
    swift_beginAccess();
    *uint64_t v140 = v144;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v314.receiver = v142;
    v314.super_class = v138;
    id v145 = objc_msgSendSuper2(&v314, sel_init);

    uint64_t v146 = *v1;
    *uint64_t v1 = v145;
  }
  sub_191B2EB5C(v136, v135, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v147 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA90);
  uint64_t v148 = swift_initStackObject();
  *(_OWORD *)(v148 + 16) = xmmword_191CF8410;
  sub_191B4F378();
  sub_191CF4068();
  *(void *)(v148 + 32) = v313;
  uint64_t v313 = v148;
  sub_191CF5558();
  uint64_t v149 = v148;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v150 = *v1;
    v151 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v152 = (char *)objc_allocWithZone(v151);
    long long v153 = (unint64_t *)&v152[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    long long v154 = v150;
    int v155 = v152;
    *long long v153 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    int v156 = (unint64_t *)&v154[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v157 = *v156;
    swift_beginAccess();
    *long long v153 = v157;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v312.receiver = v155;
    v312.super_class = v151;
    id v158 = objc_msgSendSuper2(&v312, sel_init);

    uint64_t v159 = *v1;
    *uint64_t v1 = v158;
  }
  sub_191B2E940(v149, v147, sub_191B52818, &qword_1E92E2F00);
  uint64_t v160 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448DB0);
  uint64_t v161 = swift_initStackObject();
  *(_OWORD *)(v161 + 16) = xmmword_191CF8410;
  sub_191B4F420();
  sub_191CF4068();
  *(_OWORD *)(v161 + 32) = v311;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v162 = *v1;
    v163 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    id v164 = (char *)objc_allocWithZone(v163);
    uint64_t v165 = (unint64_t *)&v164[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v166 = v162;
    v167 = v164;
    *uint64_t v165 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    long long v168 = (unint64_t *)&v166[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v169 = *v168;
    swift_beginAccess();
    *uint64_t v165 = v169;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v310.receiver = v167;
    v310.super_class = v163;
    id v170 = objc_msgSendSuper2(&v310, sel_init);

    long long v171 = *v1;
    *uint64_t v1 = v170;
  }
  sub_191B2E940(v161, v160, sub_191B529F4, &qword_1E92E2E78);
  uint64_t v172 = swift_getKeyPath();
  uint64_t v173 = swift_initStackObject();
  *(_OWORD *)(v173 + 16) = xmmword_191CF8410;
  *(unsigned char *)(v173 + 32) = sub_191CF3E78() & 1;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v174 = *v1;
    uint64_t v175 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v176 = (char *)objc_allocWithZone(v175);
    v177 = (unint64_t *)&v176[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    int v178 = v174;
    uint64_t v179 = v176;
    unint64_t *v177 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v180 = (unint64_t *)&v178[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v181 = *v180;
    swift_beginAccess();
    unint64_t *v177 = v181;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v309.receiver = v179;
    v309.super_class = v175;
    id v182 = objc_msgSendSuper2(&v309, sel_init);

    uint64_t v183 = *v1;
    *uint64_t v1 = v182;
  }
  sub_191B2EB5C(v173, v172, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v184 = swift_getKeyPath();
  uint64_t v185 = swift_initStackObject();
  *(_OWORD *)(v185 + 16) = xmmword_191CF8410;
  sub_191B4F4CC();
  sub_191CF4068();
  *(unsigned char *)(v185 + 32) = v308;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v186 = *v1;
    int v187 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    int v188 = (char *)objc_allocWithZone(v187);
    uint64_t v189 = (unint64_t *)&v188[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v190 = v186;
    v191 = v188;
    *uint64_t v189 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    int v192 = (unint64_t *)&v190[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v193 = *v192;
    swift_beginAccess();
    *uint64_t v189 = v193;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v307.receiver = v191;
    v307.super_class = v187;
    id v194 = objc_msgSendSuper2(&v307, sel_init);

    uint64_t v195 = *v1;
    *uint64_t v1 = v194;
  }
  sub_191B2EB5C(v185, v184, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v196 = swift_getKeyPath();
  uint64_t v197 = swift_initStackObject();
  *(_OWORD *)(v197 + 16) = xmmword_191CF8410;
  sub_191B4F520();
  sub_191CF4068();
  *(unsigned char *)(v197 + 32) = v306;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v198 = *v1;
    uint64_t v199 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v200 = (char *)objc_allocWithZone(v199);
    int v201 = (unint64_t *)&v200[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    int v202 = v198;
    uint64_t v203 = v200;
    *int v201 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v204 = (unint64_t *)&v202[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v205 = *v204;
    swift_beginAccess();
    *int v201 = v205;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v305.receiver = v203;
    v305.super_class = v199;
    id v206 = objc_msgSendSuper2(&v305, sel_init);

    uint64_t v207 = *v1;
    *uint64_t v1 = v206;
  }
  sub_191B2EB5C(v197, v196, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v208 = swift_getKeyPath();
  uint64_t v209 = swift_initStackObject();
  *(_OWORD *)(v209 + 16) = xmmword_191CF8410;
  sub_191B4F574();
  sub_191CF4068();
  *(unsigned char *)(v209 + 32) = v304;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    int v210 = *v1;
    int v211 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v212 = (char *)objc_allocWithZone(v211);
    uint64_t v213 = (unint64_t *)&v212[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v214 = v210;
    int v215 = v212;
    unint64_t *v213 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v216 = (unint64_t *)&v214[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v217 = *v216;
    swift_beginAccess();
    unint64_t *v213 = v217;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v303.receiver = v215;
    v303.super_class = v211;
    id v218 = objc_msgSendSuper2(&v303, sel_init);

    v219 = *v1;
    *uint64_t v1 = v218;
  }
  sub_191B2EB5C(v209, v208, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v220 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23A8);
  uint64_t v221 = swift_initStackObject();
  *(_OWORD *)(v221 + 16) = xmmword_191CF8410;
  sub_191B4F638();
  sub_191CF4068();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v222 = *v1;
    uint64_t v223 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    long long v224 = (char *)objc_allocWithZone(v223);
    uint64_t v225 = (unint64_t *)&v224[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v226 = v222;
    v227 = v224;
    *uint64_t v225 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v228 = (unint64_t *)&v226[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v229 = *v228;
    swift_beginAccess();
    *uint64_t v225 = v229;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v302.receiver = v227;
    v302.super_class = v223;
    id v230 = objc_msgSendSuper2(&v302, sel_init);

    uint64_t v231 = *v1;
    *uint64_t v1 = v230;
  }
  sub_191B2EB5C(v221, v220, (uint64_t)&type metadata for ActivityUpdateAvailability, (uint64_t)&unk_1E92E23A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E60);
  uint64_t v232 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448EE8);
  uint64_t v233 = swift_initStackObject();
  *(_OWORD *)(v233 + 16) = xmmword_191CF8410;
  sub_191B4F68C();
  sub_191CF4068();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    long long v234 = *v1;
    uint64_t v235 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v236 = (char *)objc_allocWithZone(v235);
    v237 = (unint64_t *)&v236[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    int v238 = v234;
    int v239 = v236;
    unint64_t *v237 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v240 = (unint64_t *)&v238[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v241 = *v240;
    swift_beginAccess();
    unint64_t *v237 = v241;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v301.receiver = v239;
    v301.super_class = v235;
    id v242 = objc_msgSendSuper2(&v301, sel_init);

    uint64_t v243 = *v1;
    *uint64_t v1 = v242;
  }
  sub_191B2E940(v233, v232, sub_191B51E40, &qword_1E92E2E70);
  uint64_t v244 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448EF8);
  uint64_t v245 = swift_initStackObject();
  *(_OWORD *)(v245 + 16) = xmmword_191CF8410;
  sub_191B4F6E0();
  sub_191CF4068();
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    uint64_t v246 = *v1;
    uint64_t v247 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    uint64_t v248 = (char *)objc_allocWithZone(v247);
    uint64_t v249 = (unint64_t *)&v248[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v250 = v246;
    uint64_t v251 = v248;
    unint64_t *v249 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v252 = (unint64_t *)&v250[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v253 = *v252;
    swift_beginAccess();
    unint64_t *v249 = v253;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v300.receiver = v251;
    v300.super_class = v247;
    id v254 = objc_msgSendSuper2(&v300, sel_init);

    uint64_t v255 = *v1;
    *uint64_t v1 = v254;
  }
  sub_191B2E940(v245, v244, sub_191B51C90, &qword_1E92E2E68);
  uint64_t v256 = swift_getKeyPath();
  uint64_t v257 = swift_initStackObject();
  *(_OWORD *)(v257 + 16) = xmmword_191CF9150;
  sub_191B4EC44();
  sub_191CF4068();
  *(void *)(v257 + 32) = v299;
  uint64_t v299 = v257;
  sub_191CF5558();
  uint64_t v258 = v257;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    long long v259 = *v1;
    long long v260 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    long long v261 = (char *)objc_allocWithZone(v260);
    long long v262 = (unint64_t *)&v261[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    uint64_t v263 = v259;
    v264 = v261;
    *long long v262 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    v265 = (unint64_t *)&v263[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v266 = *v265;
    swift_beginAccess();
    *long long v262 = v266;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v298.receiver = v264;
    v298.super_class = v260;
    id v267 = objc_msgSendSuper2(&v298, sel_init);

    uint64_t v268 = *v1;
    *uint64_t v1 = v267;
  }
  sub_191B2E940(v258, v256, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191B5195C, (uint64_t *)&unk_1E92E2EF0);
  uint64_t v269 = swift_getKeyPath();
  uint64_t v270 = swift_initStackObject();
  *(_OWORD *)(v270 + 16) = xmmword_191CF8410;
  sub_191B4F734();
  sub_191CF4068();
  *(unsigned char *)(v270 + 32) = v297;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v271 = *v1;
    long long v272 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    long long v273 = (char *)objc_allocWithZone(v272);
    long long v274 = (unint64_t *)&v273[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    long long v275 = v271;
    uint64_t v276 = v273;
    *long long v274 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    v277 = (unint64_t *)&v275[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v278 = *v277;
    swift_beginAccess();
    *long long v274 = v278;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v296.receiver = v276;
    v296.super_class = v272;
    id v279 = objc_msgSendSuper2(&v296, sel_init);

    int v280 = *v1;
    *uint64_t v1 = v279;
  }
  sub_191B2EB5C(v270, v269, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
  uint64_t v281 = swift_getKeyPath();
  uint64_t v282 = swift_initStackObject();
  *(_OWORD *)(v282 + 16) = xmmword_191CF8410;
  sub_191B4F788();
  sub_191CF4068();
  *(unsigned char *)(v282 + 32) = v295;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v283 = *v1;
    v284 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    long long v285 = (char *)objc_allocWithZone(v284);
    long long v286 = (unint64_t *)&v285[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    long long v287 = v283;
    long long v288 = v285;
    *long long v286 = sub_191B2D144(MEMORY[0x1E4FBC860]);
    uint64_t v289 = (unint64_t *)&v287[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    unint64_t v290 = *v289;
    swift_beginAccess();
    *long long v286 = v290;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v294.receiver = v288;
    v294.super_class = v284;
    id v291 = objc_msgSendSuper2(&v294, sel_init);

    int v292 = *v1;
    *uint64_t v1 = v291;
  }
  return sub_191B2EB5C(v282, v281, MEMORY[0x1E4FBB390], (uint64_t)&unk_1EB448E00, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_191B52BC0, &qword_1E92E2E88);
}

uint64_t sub_191B32024@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F68();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B32054()
{
  return sub_191CF3F78();
}

uint64_t sub_191B3207C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3EE8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B320AC()
{
  return sub_191CF3EF8();
}

uint64_t sub_191B320D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F08();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B32104()
{
  return sub_191CF3F18();
}

uint64_t sub_191B3212C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F38();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B3215C()
{
  return sub_191CF3F48();
}

uint64_t sub_191B32184()
{
  return sub_191CF3EA8();
}

uint64_t sub_191B321A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3D548], MEMORY[0x1E4F3D128]);
}

uint64_t sub_191B321D4()
{
  return sub_191CF3D28();
}

uint64_t sub_191B321F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3CF08]);
}

uint64_t sub_191B32224()
{
  return sub_191CF3E08();
}

uint64_t sub_191B32248(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v2 - 8);
  sub_191B01614(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB44A280);
  return sub_191CF3E18();
}

uint64_t sub_191B322DC()
{
  return sub_191CF3D88();
}

uint64_t sub_191B32300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3D5D8], MEMORY[0x1E4F3CF98]);
}

uint64_t sub_191B3232C()
{
  return sub_191CF3E28();
}

uint64_t sub_191B32350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3CD58], MEMORY[0x1E4F3D060]);
}

double sub_191B3237C@<D0>(_OWORD *a1@<X8>)
{
  sub_191B4F420();
  sub_191CF4068();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_191B323CC(uint64_t a1)
{
  return sub_191CF4078();
}

uint64_t sub_191B32420@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3E78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B32450()
{
  return sub_191CF3E88();
}

uint64_t sub_191B32478@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F638();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B324C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F638);
}

uint64_t keypath_set_5Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_191CF4078();
}

uint64_t sub_191B32538@<X0>(void *a1@<X8>)
{
  sub_191B4EC44();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

void sub_191B32588(id *a1)
{
}

uint64_t WidgetEnvironment.union(_:)(uint64_t *a1)
{
  return sub_191B325DC(*a1);
}

uint64_t sub_191B325DC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v54 = *v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*v2 + 64);
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  int64_t v55 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v56 = *v2;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v59 = v7;
      unint64_t v11 = v10 | (v7 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_48;
    }
    if (v12 >= v55) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v54 + 8 * v12);
    int64_t v14 = v7 + 1;
    if (!v13)
    {
      int64_t v14 = v7 + 2;
      if (v7 + 2 >= v55) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v54 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v7 + 3;
        if (v7 + 3 >= v55) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v54 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    int64_t v59 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_23:
    uint64_t v16 = (uint64_t *)(*(void *)(v56 + 48) + 24 * v11);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = *(void **)(*(void *)(v56 + 56) + 8 * v11);
    id v21 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
    swift_retain();
    swift_bridgeObjectRetain();
    id v22 = v20;
    id v23 = objc_msgSend(v21, sel_initWithOrderedSet_, v22);
    swift_beginAccess();
    uint64_t v24 = *v6;
    id v58 = v22;
    uint64_t v60 = v18;
    if (*(void *)(*v6 + 16))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_191B1E938(v18, v19);
      if (v26)
      {
        uint64_t v27 = *(void **)(*(void *)(v24 + 56) + 8 * v25);
        swift_endAccess();
        id v28 = v27;
        swift_bridgeObjectRelease();
        swift_release();
        objc_msgSend(v23, sel_unionOrderedSet_, v28);

        goto LABEL_29;
      }
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_29:
    id v29 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_super v57 = v23;
    id v30 = objc_msgSend(v29, sel_initWithOrderedSet_, v23);
    swift_beginAccess();
    if (v30)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = *v6;
      objc_super v61 = (void *)*v6;
      *uint64_t v6 = 0x8000000000000000;
      unint64_t v34 = sub_191B1E938(v18, v19);
      uint64_t v35 = *(void *)(v32 + 16);
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      char v38 = v33;
      if (*(void *)(v32 + 24) >= v37)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_191B4BFF0();
        }
        uint64_t v39 = v60;
        uint64_t v42 = v61;
        if ((v38 & 1) == 0)
        {
LABEL_42:
          v42[(v34 >> 6) + 8] |= 1 << v34;
          unint64_t v49 = (void *)(v42[6] + 24 * v34);
          *unint64_t v49 = v17;
          v49[1] = v39;
          v49[2] = v19;
          *(void *)(v42[7] + 8 * v34) = v30;
          uint64_t v50 = v42[2];
          BOOL v51 = __OFADD__(v50, 1);
          uint64_t v52 = v50 + 1;
          if (v51) {
            goto LABEL_49;
          }
          v42[2] = v52;
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_5;
        }
      }
      else
      {
        sub_191B47F94(v37, isUniquelyReferenced_nonNull_native);
        uint64_t v39 = v60;
        unint64_t v40 = sub_191B1E938(v60, v19);
        if ((v38 & 1) != (v41 & 1)) {
          goto LABEL_51;
        }
        unint64_t v34 = v40;
        uint64_t v42 = v61;
        if ((v38 & 1) == 0) {
          goto LABEL_42;
        }
      }
      uint64_t v8 = v42[7];

      *(void *)(v8 + 8 * v34) = v30;
LABEL_5:
      *uint64_t v6 = (uint64_t)v42;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      int64_t v7 = v59;
      uint64_t v9 = v58;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unint64_t v43 = sub_191B1E938(v18, v19);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if (v45)
    {
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v47 = *v6;
      uint64_t v62 = *v6;
      *uint64_t v6 = 0x8000000000000000;
      uint64_t v9 = v58;
      if ((v46 & 1) == 0)
      {
        sub_191B4BFF0();
        uint64_t v47 = v62;
      }
      swift_bridgeObjectRelease();
      swift_release();
      id v48 = *(void **)(*(void *)(v47 + 56) + 8 * v43);
      sub_191B4A604(v43, v47);
      *uint64_t v6 = v47;

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v9 = v58;
    }
    int64_t v7 = v59;
LABEL_6:
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v15 = v7 + 4;
  if (v7 + 4 >= v55) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v54 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v7 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v55) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v54 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_191CF63D8();
  __break(1u);
  return result;
}

BOOL static WidgetEnvironment.DifferenceUsage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WidgetEnvironment.DifferenceUsage.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t WidgetEnvironment.DifferenceUsage.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unint64_t v184 = a2;
  uint64_t v187 = a1;
  uint64_t v186 = sub_191CF3C68();
  uint64_t v182 = *(void *)(v186 - 8);
  MEMORY[0x1F4188790](v186);
  unint64_t v181 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF43A8();
  uint64_t v179 = *(void *)(v6 - 8);
  uint64_t v180 = v6;
  MEMORY[0x1F4188790](v6);
  int v178 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  MEMORY[0x1F4188790](v8 - 8);
  v177 = (char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191CF39E8();
  uint64_t v175 = *(void *)(v10 - 8);
  uint64_t v176 = v10;
  MEMORY[0x1F4188790](v10);
  v174 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191CF4388();
  uint64_t v172 = *(void *)(v12 - 8);
  uint64_t v173 = v12;
  MEMORY[0x1F4188790](v12);
  long long v171 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_191CF3998();
  uint64_t v14 = *(void *)(v170 - 8);
  MEMORY[0x1F4188790](v170);
  uint64_t v16 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a3;
  uint64_t v18 = *v3;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v183 = v19 + 16;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = swift_getKeyPath();
  id v22 = v18;
  uint64_t v23 = sub_191AFAA98(v21);

  swift_release();
  sub_191CF3D28();
  unint64_t v24 = v184;
  sub_191B34E94(0x686353726F6C6F63, 0xEB00000000656D65, KeyPath, v23, (uint64_t)v16, v184, v17, v19, MEMORY[0x1E4F3C5D0], (unint64_t *)&unk_1E92E22F0, MEMORY[0x1E4F3C5D0]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v170);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_getKeyPath();
  id v27 = v22;
  uint64_t v28 = sub_191AFAA5C(v26);

  swift_release();
  uint64_t v29 = (uint64_t)v171;
  sub_191CF3E98();
  unint64_t v30 = v24;
  unint64_t v31 = v24;
  uint64_t v32 = v19;
  sub_191B34E94(0xD000000000000013, 0x8000000191D0DC50, v25, v28, v29, v31, v17, v19, MEMORY[0x1E4F3D548], &qword_1E92E2328, MEMORY[0x1E4F3D548]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v29, v173);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  id v35 = v27;
  uint64_t v36 = sub_191AFAA20(v34);

  swift_release();
  uint64_t v37 = (uint64_t)v174;
  sub_191CF3D48();
  sub_191B34E94(0x4779616C70736964, 0xEC00000074756D61, v33, v36, v37, v30, v17, v19, MEMORY[0x1E4F3C708], (unint64_t *)&unk_1E92E0FD8, MEMORY[0x1E4F3C708]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v37, v176);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = swift_getKeyPath();
  id v40 = v35;
  uint64_t v41 = sub_191AFA694(v39);

  swift_release();
  sub_191CF3D68();
  sub_191B34394(0x5379616C70736964, 0xEC000000656C6163, v42, v38, v41, v30, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  id v45 = v40;
  uint64_t v46 = sub_191AFA80C(v44);

  swift_release();
  unint64_t v47 = (unint64_t)v177;
  sub_191CF3E08();
  sub_191B348B4(0xD000000000000010, 0x8000000191D0DC70, v43, v46, v47, v30, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  sub_191B01770(v47, &qword_1EB44A280);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = swift_getKeyPath();
  id v50 = v45;
  uint64_t v51 = sub_191AFA7D0(v49);

  swift_release();
  uint64_t v52 = (uint64_t)v178;
  sub_191CF3D88();
  sub_191B34E94(0x65746143657A6973, 0xEC00000079726F67, v48, v51, v52, v30, v17, v19, MEMORY[0x1E4F3D5D8], (unint64_t *)&unk_1EB449DF0, MEMORY[0x1E4F3D5D8]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v52, v180);
  uint64_t v53 = swift_getKeyPath();
  uint64_t v54 = swift_getKeyPath();
  id v55 = v50;
  uint64_t v56 = sub_191AFA794(v54);

  swift_release();
  uint64_t v57 = (uint64_t)v181;
  sub_191CF3E28();
  sub_191B34E94(0xD000000000000010, 0x8000000191D0DC90, v53, v56, v57, v30, v17, v19, MEMORY[0x1E4F3CD58], (unint64_t *)&unk_1E92E2308, MEMORY[0x1E4F3CD58]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v57, v186);
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = swift_getKeyPath();
  id v60 = v55;
  uint64_t v61 = sub_191AFA6B4(v59);

  swift_release();
  char v62 = sub_191CF3F58();
  sub_191B35610(0xD000000000000026, 0x8000000191D0DCB0, v58, v61, v62 & 1, v30, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = swift_getKeyPath();
  uint64_t v64 = swift_getKeyPath();
  id v65 = v60;
  uint64_t v66 = sub_191AFA6B4(v64);

  swift_release();
  char v67 = sub_191CF3EC8();
  sub_191B35610(0xD000000000000019, 0x8000000191D0DCE0, v63, v66, v67 & 1, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = swift_getKeyPath();
  uint64_t v69 = swift_getKeyPath();
  id v70 = v65;
  uint64_t v71 = sub_191AFA6B4(v69);

  swift_release();
  char v72 = sub_191CF3ED8();
  sub_191B35610(0xD000000000000019, 0x8000000191D0DD00, v68, v71, v72 & 1, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v73 = swift_getKeyPath();
  uint64_t v74 = swift_getKeyPath();
  id v75 = v70;
  uint64_t v76 = sub_191AFA6B4(v74);

  swift_release();
  char v77 = sub_191CF3F28();
  sub_191B35610(0xD00000000000001FLL, 0x8000000191D0DD20, v73, v76, v77 & 1, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v78 = swift_getKeyPath();
  uint64_t v79 = swift_getKeyPath();
  id v80 = v75;
  unint64_t v81 = sub_191AFA438(v79);

  swift_release();
  sub_191B0171C();
  sub_191CF4068();
  id v82 = v188;
  sub_191B37578(0x4D7465676469775FLL, 0xEE00736369727465, v78, v81, v188, v30, v17, v32, (unint64_t *)&qword_1EB44C010);

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v83 = swift_getKeyPath();
  uint64_t v84 = swift_getKeyPath();
  id v85 = v80;
  uint64_t v86 = sub_191AFA6B4(v84);

  swift_release();
  sub_191B4F31C();
  sub_191CF4068();
  sub_191B35610(0xD000000000000010, 0x8000000191D0DD40, v83, v86, (char)v188, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v87 = swift_getKeyPath();
  uint64_t v88 = swift_getKeyPath();
  id v89 = v85;
  uint64_t v90 = sub_191AFA6D4(v88);

  swift_release();
  sub_191B4F2C8();
  sub_191CF4068();
  sub_191B36AE8(0x467465676469775FLL, 0xED0000796C696D61, v87, v90, (char)v188, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v91 = swift_getKeyPath();
  uint64_t v92 = swift_getKeyPath();
  id v93 = v89;
  uint64_t v94 = sub_191AFA674(v92);

  swift_release();
  sub_191B4F378();
  sub_191CF4068();
  unint64_t v95 = v30;
  unsigned int v185 = v17;
  uint64_t v186 = v32;
  sub_191B35B38(0x7A696C61636F6C5FLL, 0xEE00736E6F697461, v91, v94, (uint64_t)v188, v30, v17, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v96 = swift_getKeyPath();
  uint64_t v97 = swift_getKeyPath();
  id v98 = v93;
  uint64_t v99 = sub_191AFA774(v97);

  swift_release();
  if (v99)
  {
    int64_t v100 = *(void *)(v99 + 16);
    if (v100)
    {
      uint64_t v182 = v96;
      int v188 = (void *)MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v100, 0);
      unint64_t v101 = v188;
      uint64_t v102 = (unint64_t *)(v99 + 40);
      do
      {
        uint64_t v103 = *(v102 - 1);
        unint64_t v104 = *v102;
        sub_191B15F88(v103, *v102);
        uint64_t v105 = sub_191CF30B8();
        uint64_t v107 = v106;
        sub_191B1603C(v103, v104);
        int v188 = v101;
        unint64_t v109 = v101[2];
        unint64_t v108 = v101[3];
        if (v109 >= v108 >> 1)
        {
          sub_191AFB944(v108 > 1, v109 + 1, 1);
          unint64_t v101 = v188;
        }
        v102 += 2;
        v101[2] = v109 + 1;
        uint64_t v110 = &v101[2 * v109];
        v110[4] = v105;
        v110[5] = v107;
        --v100;
      }
      while (v100);
      swift_bridgeObjectRelease();
      unint64_t v95 = v184;
      uint64_t v96 = v182;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v101 = (void *)MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v101 = 0;
  }
  sub_191B4F420();
  sub_191CF4068();
  uint64_t v111 = (uint64_t)v188;
  unint64_t v112 = v189;
  unint64_t v113 = sub_191CF30B8();
  uint64_t v115 = v114;
  sub_191B1603C(v111, v112);
  uint64_t v116 = v96;
  unint64_t v117 = v95;
  unint64_t v118 = v95;
  uint64_t v119 = v185;
  sub_191B36068(0xD000000000000012, 0x8000000191D0DD60, v116, v101, v113, v115, v118, v185, v186);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v120 = swift_getKeyPath();
  uint64_t v121 = swift_getKeyPath();
  id v122 = v98;
  uint64_t v123 = sub_191AFA6B4(v121);

  swift_release();
  char v124 = sub_191CF3E78();
  uint64_t v125 = v119;
  uint64_t v126 = v119;
  uint64_t v127 = v186;
  sub_191B35610(0xD000000000000012, 0x8000000191D0DD80, v120, v123, v124 & 1, v117, v126, v186);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v128 = swift_getKeyPath();
  uint64_t v129 = swift_getKeyPath();
  id v130 = v122;
  uint64_t v131 = sub_191AFA6B4(v129);

  swift_release();
  sub_191B4F4CC();
  sub_191CF4068();
  sub_191B35610(0xD000000000000010, 0x8000000191D0DDA0, v128, v131, (char)v188, v117, v125, v127);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v132 = swift_getKeyPath();
  uint64_t v133 = swift_getKeyPath();
  id v134 = v130;
  uint64_t v135 = sub_191AFA754(v133);

  swift_release();
  sub_191B4F68C();
  sub_191CF4068();
  unint64_t v136 = v127;
  sub_191B36594(0xD000000000000013, 0x8000000191D0DDC0, v132, v135, v188, v189, v117, v125, v127);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v137 = swift_getKeyPath();
  uint64_t v138 = swift_getKeyPath();
  id v139 = v134;
  uint64_t v140 = sub_191AFA734(v138);

  swift_release();
  sub_191B4F6E0();
  sub_191CF4068();
  sub_191B36AE8(0xD000000000000025, 0x8000000191D0DDE0, v137, v140, (char)v188, v117, v125, v136);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v141 = swift_getKeyPath();
  uint64_t v142 = swift_getKeyPath();
  id v143 = v139;
  uint64_t v144 = sub_191AFA6B4(v142);

  swift_release();
  sub_191B4F520();
  sub_191CF4068();
  sub_191B35610(0xD000000000000025, 0x8000000191D0DE10, v141, v144, (char)v188, v117, v125, v136);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v145 = swift_getKeyPath();
  uint64_t v146 = swift_getKeyPath();
  id v147 = v143;
  uint64_t v148 = sub_191AFA6B4(v146);

  swift_release();
  sub_191B4F574();
  sub_191CF4068();
  uint64_t v149 = v185;
  sub_191B35610(0xD00000000000002BLL, 0x8000000191D0DE40, v145, v148, (char)v188, v117, v185, v136);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v150 = swift_getKeyPath();
  uint64_t v151 = swift_getKeyPath();
  id v152 = v147;
  uint64_t v153 = sub_191AFA714(v151);

  swift_release();
  sub_191B4F638();
  sub_191CF4068();
  uint64_t v154 = v149;
  sub_191B37030(0xD00000000000001ALL, 0x8000000191D0DE70, v150, v153, (char)v188, v117, v149, v136);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v155 = swift_getKeyPath();
  uint64_t v156 = swift_getKeyPath();
  id v157 = v152;
  unint64_t v158 = sub_191AFA454(v156);

  swift_release();
  sub_191B4EC44();
  sub_191CF4068();
  uint64_t v159 = v188;
  sub_191B37578(0xD000000000000018, 0x8000000191D0DE90, v155, v158, v188, v117, v154, v136, &qword_1EB449D38);

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v160 = swift_getKeyPath();
  uint64_t v161 = swift_getKeyPath();
  id v162 = v157;
  uint64_t v163 = sub_191AFA6B4(v161);

  swift_release();
  sub_191B4F734();
  sub_191CF4068();
  sub_191B35610(0xD000000000000022, 0x8000000191D0DEB0, v160, v163, (char)v188, v117, v154, v136);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v164 = swift_getKeyPath();
  uint64_t v165 = swift_getKeyPath();
  id v166 = v162;
  uint64_t v167 = sub_191AFA6B4(v165);

  swift_release();
  sub_191B4F788();
  sub_191CF4068();
  sub_191B35610(0xD000000000000019, 0x8000000191D0DEE0, v164, v167, (char)v188, v117, v154, v136);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v168 = *(void *)(v136 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v168;
}

uint64_t sub_191B34394(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_191CF6018();
    if (v14)
    {
LABEL_3:
      uint64_t v32 = a5;
      unint64_t v33 = a8;
      uint64_t v34 = a1;
      uint64_t v35 = a2;
      sub_191CF5C78();
      a8 = a6 & 0xC000000000000001;
      a2 = 4;
      a1 = MEMORY[0x1E4FBB900];
      do
      {
        uint64_t v15 = a2 - 4;
        if (a8)
        {
          a5 = MEMORY[0x192FE4B60](a2 - 4, a6);
          uint64_t v16 = a2 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          a5 = *(void *)(a6 + 8 * a2);
          swift_retain();
          uint64_t v16 = a2 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v17 = sub_191CF52F8();
        swift_release();
        if (v17) {
          return swift_bridgeObjectRelease();
        }
        ++a2;
      }
      while (v16 != v14);
      uint64_t result = swift_bridgeObjectRelease();
      a1 = v34;
      a2 = v35;
      a5 = v32;
      a8 = v33;
      if (v32) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a5) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2E010(a5, a3);
  if ((result & 1) == 0)
  {
    int64_t v19 = *(void *)(a5 + 16);
    if (v19)
    {
      uint64_t v36 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v19, 0);
      uint64_t v20 = a5 + 32;
      do
      {
        sub_191CF5F38();
        unint64_t v22 = *(void *)(v36 + 16);
        unint64_t v21 = *(void *)(v36 + 24);
        unint64_t v23 = v22 + 1;
        if (v22 >= v21 >> 1) {
          sub_191AFB944(v21 > 1, v22 + 1, 1);
        }
        *(void *)(v36 + 16) = v23;
        uint64_t v24 = v36 + 16 * v22;
        *(void *)(v24 + 32) = 0;
        *(void *)(v24 + 40) = 0xE000000000000000;
        v20 += 8;
        --v19;
      }
      while (v19);
      if (v23 > 1) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v23 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
LABEL_28:
        uint64_t v25 = (void **)(a8 + 16);
        sub_191CF5D88();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        uint64_t v26 = a2;
        swift_beginAccess();
        id v27 = *v25;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v25 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          id v27 = sub_191B405E0(0, v27[2] + 1, 1, v27);
          *uint64_t v25 = v27;
        }
        unint64_t v30 = v27[2];
        unint64_t v29 = v27[3];
        if (v30 >= v29 >> 1)
        {
          id v27 = sub_191B405E0((void *)(v29 > 1), v30 + 1, 1, v27);
          *uint64_t v25 = v27;
        }
        v27[2] = v30 + 1;
        unint64_t v31 = &v27[2 * v30];
        v31[4] = a1;
        void v31[5] = v26;
        return swift_endAccess();
      }
    }
    if (!v23)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_191B348B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, int a7, uint64_t a8)
{
  LODWORD(v9) = a7;
  uint64_t v46 = a1;
  unint64_t v47 = a2;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  uint64_t v14 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_191CF6018();
    if (v16)
    {
LABEL_3:
      uint64_t v41 = v14;
      uint64_t v42 = a4;
      uint64_t v43 = a8;
      int v44 = v9;
      unint64_t v45 = a5;
      sub_191CF5C78();
      a5 = a6 & 0xC000000000000001;
      uint64_t v14 = 4;
      a8 = MEMORY[0x1E4FBB900];
      do
      {
        uint64_t v17 = v14 - 4;
        if (a5)
        {
          a4 = MEMORY[0x192FE4B60](v14 - 4, a6);
          uint64_t v9 = v14 - 3;
          if (__OFADD__(v17, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          a4 = *(void *)(a6 + 8 * v14);
          swift_retain();
          uint64_t v9 = v14 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        uint64_t v50 = a4;
        uint64_t v52 = a3;
        char v18 = sub_191CF52F8();
        swift_release();
        if (v18) {
          return swift_bridgeObjectRelease();
        }
        ++v14;
      }
      while (v9 != v16);
      uint64_t result = swift_bridgeObjectRelease();
      a5 = v45;
      LODWORD(v9) = v44;
      a4 = v42;
      a8 = v43;
      uint64_t v14 = v41;
      if (v42) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a4) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2DC64(a5, a4);
  if ((result & 1) == 0)
  {
    int64_t v20 = *(void *)(a4 + 16);
    if (v20)
    {
      uint64_t v43 = a8;
      int v44 = v9;
      unint64_t v45 = a5;
      uint64_t v52 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v20, 0);
      uint64_t v21 = a4 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v22 = *(void *)(v14 + 72);
      uint64_t v23 = v52;
      do
      {
        uint64_t v24 = v48;
        sub_191B01614(v21, v48, &qword_1EB44A280);
        uint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_191CF5F38();
        uint64_t v26 = v50;
        unint64_t v25 = v51;
        sub_191B01770(v24, &qword_1EB44A280);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB944(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v52;
        }
        unint64_t v28 = *(void *)(v23 + 16);
        unint64_t v27 = *(void *)(v23 + 24);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          sub_191AFB944(v27 > 1, v28 + 1, 1);
          uint64_t v23 = v52;
        }
        *(void *)(v23 + 16) = v29;
        uint64_t v30 = v23 + 16 * v28;
        *(void *)(v30 + 32) = v26;
        *(void *)(v30 + 40) = v25;
        v21 += v22;
        --v20;
      }
      while (v20);
      a5 = v45;
      a8 = v43;
      if (v29 > 1) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v23 = MEMORY[0x1E4FBC860];
      unint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v29 > 1)
      {
LABEL_26:
        uint64_t v50 = 91;
        unint64_t v51 = 0xE100000000000000;
        uint64_t v52 = v23;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
LABEL_30:
        unint64_t v31 = (void **)(a8 + 16);
        uint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_191CF5D88();
        unint64_t v32 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v50 = v46;
        unint64_t v51 = v32;
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191B01614(a5, v48, &qword_1EB44A280);
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        uint64_t v33 = v50;
        unint64_t v34 = v51;
        swift_beginAccess();
        uint64_t v35 = *v31;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *unint64_t v31 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v35 = sub_191B405E0(0, v35[2] + 1, 1, v35);
          *unint64_t v31 = v35;
        }
        unint64_t v38 = v35[2];
        unint64_t v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          uint64_t v35 = sub_191B405E0((void *)(v37 > 1), v38 + 1, 1, v35);
          *unint64_t v31 = v35;
        }
        v35[2] = v38 + 1;
        uint64_t v39 = &v35[2 * v38];
        v39[4] = v33;
        v39[5] = v34;
        return swift_endAccess();
      }
    }
    if (!v29)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_191B34E94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t a8, uint64_t (*a9)(void), unint64_t *a10, void (*a11)(uint64_t))
{
  LODWORD(v12) = a7;
  uint64_t v64 = a5;
  uint64_t v58 = a1;
  unint64_t v59 = a2;
  uint64_t v16 = a9(0);
  unint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v65 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v62 = (char *)&v55 - v20;
  if (!(a6 >> 62))
  {
    uint64_t v21 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v69 = v16;
    if (v21) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    if (!a4) {
      return result;
    }
LABEL_17:
    unint64_t v25 = *(void **)(a4 + 16);
    if (v25)
    {
      unint64_t v55 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      unint64_t v26 = a4 + v55;
      unint64_t v27 = v62;
      char v67 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
      unint64_t v68 = v17 + 16;
      v67(v62, a4 + v55, v69);
      uint64_t v28 = sub_191B4FAC8(a10, 255, a11);
      swift_bridgeObjectRetain();
      uint64_t v61 = v28;
      uint64_t v29 = sub_191CF52F8();
      uint64_t v30 = v69;
      unint64_t v31 = (void *)v29;
      unint64_t v63 = v17;
      uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
      unint64_t v32 = v17 + 8;
      uint64_t v66 = v33;
      v33(v27, v69);
      if (v31) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v60 = a4;
      uint64_t v56 = a8;
      int v57 = v12;
      uint64_t v36 = v62;
      if (v25 != (void *)1)
      {
        uint64_t v37 = *(void *)(v63 + 72);
        unint64_t v38 = v60 + v37 + v55;
        uint64_t v39 = 1;
        while (1)
        {
          v67(v36, v38, v30);
          uint64_t v40 = (void *)(v39 + 1);
          if (__OFADD__(v39, 1)) {
            break;
          }
          uint64_t v41 = sub_191CF52F8();
          uint64_t v30 = v69;
          unint64_t v31 = (void *)v41;
          v66(v36, v69);
          if (v31) {
            return swift_bridgeObjectRelease();
          }
          ++v39;
          v38 += v37;
          if (v40 == v25) {
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_43;
      }
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v72 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, (int64_t)v25, 0);
      uint64_t v42 = v69;
      uint64_t v43 = *(void *)(v63 + 72);
      do
      {
        int v44 = v65;
        v67(v65, v26, v42);
        uint64_t v70 = 0;
        unint64_t v71 = 0xE000000000000000;
        sub_191CF5F38();
        uint64_t v45 = v70;
        unint64_t v46 = v71;
        v66(v44, v42);
        uint64_t v34 = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191AFB944(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v42 = v69;
          uint64_t v34 = v72;
        }
        unint64_t v48 = *(void *)(v34 + 16);
        unint64_t v47 = *(void *)(v34 + 24);
        unint64_t v35 = v48 + 1;
        if (v48 >= v47 >> 1)
        {
          sub_191AFB944(v47 > 1, v48 + 1, 1);
          uint64_t v42 = v69;
          uint64_t v34 = v72;
        }
        *(void *)(v34 + 16) = v35;
        uint64_t v49 = v34 + 16 * v48;
        *(void *)(v49 + 32) = v45;
        *(void *)(v49 + 40) = v46;
        v26 += v43;
        unint64_t v25 = (void *)((char *)v25 - 1);
      }
      while (v25);
      unint64_t v17 = v63;
      a8 = v56;
      if (v35 <= 1) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
      unint64_t v35 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v35 <= 1)
      {
LABEL_34:
        if (!v35)
        {
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_36:
        unint64_t v25 = (void *)(a8 + 16);
        uint64_t v70 = 0;
        unint64_t v71 = 0xE000000000000000;
        sub_191CF5D88();
        unint64_t v50 = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v70 = v58;
        unint64_t v71 = v50;
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v65, v64, v69);
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        uint64_t v36 = (char *)v70;
        unint64_t v32 = v71;
        swift_beginAccess();
        unint64_t v31 = *(void **)(a8 + 16);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(a8 + 16) = v31;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_37:
          unint64_t v53 = v31[2];
          unint64_t v52 = v31[3];
          if (v53 >= v52 >> 1)
          {
            unint64_t v31 = sub_191B405E0((void *)(v52 > 1), v53 + 1, 1, v31);
            *unint64_t v25 = v31;
          }
          void v31[2] = v53 + 1;
          uint64_t v54 = &v31[2 * v53];
          v54[4] = v36;
          v54[5] = v32;
          return swift_endAccess();
        }
LABEL_43:
        unint64_t v31 = sub_191B405E0(0, v31[2] + 1, 1, v31);
        *unint64_t v25 = v31;
        goto LABEL_37;
      }
    }
    uint64_t v70 = 91;
    unint64_t v71 = 0xE100000000000000;
    uint64_t v72 = v34;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
    sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
    sub_191CF5288();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    goto LABEL_36;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_191CF6018();
  uint64_t v69 = v16;
  if (!v21) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v60 = a4;
  uint64_t v56 = a8;
  int v57 = v12;
  unint64_t v63 = v17;
  uint64_t v16 = sub_191CF5C78();
  unint64_t v17 = a6 & 0xC000000000000001;
  a8 = 4;
  do
  {
    a4 = a8 - 4;
    if (v17)
    {
      uint64_t v22 = MEMORY[0x192FE4B60](a8 - 4, a6);
      uint64_t v12 = a8 - 3;
      if (__OFADD__(a4, 1)) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v22 = *(void *)(a6 + 8 * a8);
      swift_retain();
      uint64_t v12 = a8 - 3;
      if (__OFADD__(a4, 1))
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    uint64_t v70 = v22;
    uint64_t v72 = a3;
    char v23 = sub_191CF52F8();
    swift_release();
    if (v23) {
      return swift_bridgeObjectRelease();
    }
    ++a8;
  }
  while (v12 != v21);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v17 = v63;
  LODWORD(v12) = v57;
  a8 = v56;
  a4 = v60;
  if (v60) {
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_191B35610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      uint64_t v29 = a4;
      uint64_t v30 = a8;
      uint64_t v32 = a2;
      char v33 = v10;
      sub_191CF5C78();
      unint64_t v10 = a6 & 0xC000000000000001;
      a2 = 4;
      a4 = MEMORY[0x1E4FBB900];
      do
      {
        a8 = a2 - 4;
        if (v10)
        {
          MEMORY[0x192FE4B60](a2 - 4, a6);
          uint64_t v14 = a2 - 3;
          if (__OFADD__(a8, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          uint64_t v14 = a2 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v15 = sub_191CF52F8();
        swift_release();
        if (v15) {
          return swift_bridgeObjectRelease();
        }
        ++a2;
      }
      while (v14 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      LOBYTE(v10) = v33;
      a8 = v30;
      a2 = v32;
      a4 = v29;
      if (v29) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a4) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2DBF4(v10 & 1, a4);
  if ((result & 1) == 0)
  {
    int64_t v17 = *(void *)(a4 + 16);
    if (v17)
    {
      uint64_t v31 = a8;
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v17, 0);
      uint64_t v18 = a4 + 32;
      do
      {
        sub_191CF5F38();
        unint64_t v20 = *(void *)(v35 + 16);
        unint64_t v19 = *(void *)(v35 + 24);
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1) {
          sub_191AFB944(v19 > 1, v20 + 1, 1);
        }
        *(void *)(v35 + 16) = v21;
        uint64_t v22 = v35 + 16 * v20;
        *(void *)(v22 + 32) = 0;
        *(void *)(v22 + 40) = 0xE000000000000000;
        ++v18;
        --v17;
      }
      while (v17);
      a8 = v31;
      if (v21 > 1) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
LABEL_28:
        char v23 = (void **)(a8 + 16);
        sub_191CF5D88();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_beginAccess();
        uint64_t v24 = *v23;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *char v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v24 = sub_191B405E0(0, v24[2] + 1, 1, v24);
          *char v23 = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_191B405E0((void *)(v26 > 1), v27 + 1, 1, v24);
          *char v23 = v24;
        }
        v24[2] = v27 + 1;
        uint64_t v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_191B35B38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      uint64_t v29 = a4;
      uint64_t v30 = a8;
      unint64_t v32 = a2;
      uint64_t v33 = a5;
      sub_191CF5C78();
      a2 = a6 & 0xC000000000000001;
      a5 = 4;
      a4 = MEMORY[0x1E4FBB900];
      do
      {
        a8 = a5 - 4;
        if (a2)
        {
          MEMORY[0x192FE4B60](a5 - 4, a6);
          uint64_t v14 = a5 - 3;
          if (__OFADD__(a8, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          uint64_t v14 = a5 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v15 = sub_191CF52F8();
        swift_release();
        if (v15) {
          return swift_bridgeObjectRelease();
        }
        ++a5;
      }
      while (v14 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v32;
      a5 = v33;
      a4 = v29;
      a8 = v30;
      if (v29) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a4) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2D7F0(a5, a4);
  if ((result & 1) == 0)
  {
    int64_t v17 = *(void *)(a4 + 16);
    if (v17)
    {
      uint64_t v31 = a8;
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v17, 0);
      uint64_t v18 = a4 + 32;
      do
      {
        v18 += 8;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA68);
        sub_191CF5F38();
        unint64_t v20 = *(void *)(v35 + 16);
        unint64_t v19 = *(void *)(v35 + 24);
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1) {
          sub_191AFB944(v19 > 1, v20 + 1, 1);
        }
        *(void *)(v35 + 16) = v21;
        uint64_t v22 = v35 + 16 * v20;
        *(void *)(v22 + 32) = 0;
        *(void *)(v22 + 40) = 0xE000000000000000;
        --v17;
      }
      while (v17);
      a8 = v31;
      if (v21 > 1) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
LABEL_28:
        char v23 = (void **)(a8 + 16);
        sub_191CF5D88();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA68);
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_beginAccess();
        uint64_t v24 = *v23;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *char v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v24 = sub_191B405E0(0, v24[2] + 1, 1, v24);
          *char v23 = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_191B405E0((void *)(v26 > 1), v27 + 1, 1, v24);
          *char v23 = v24;
        }
        v24[2] = v27 + 1;
        uint64_t v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_191B36068(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      uint64_t v29 = a4;
      unint64_t v30 = a5;
      uint64_t v31 = a6;
      sub_191CF5C78();
      a5 = a7 & 0xC000000000000001;
      a6 = 4;
      do
      {
        a4 = (void *)(a6 - 4);
        if (a5)
        {
          MEMORY[0x192FE4B60](a6 - 4, a7);
          uint64_t v14 = a6 - 3;
          if (__OFADD__(a4, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          uint64_t v14 = a6 - 3;
          if (__OFADD__(a4, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v15 = sub_191CF52F8();
        swift_release();
        if (v15) {
          return swift_bridgeObjectRelease();
        }
        ++a6;
      }
      while (v14 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      a5 = v30;
      a6 = v31;
      a4 = v29;
      if (v29) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a4) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2D728(a5, a6, a4);
  if ((result & 1) == 0)
  {
    int64_t v17 = a4[2];
    if (v17)
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v17, 0);
      uint64_t v18 = a4 + 5;
      do
      {
        sub_191CF5F38();
        unint64_t v20 = *(void *)(v34 + 16);
        unint64_t v19 = *(void *)(v34 + 24);
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1) {
          sub_191AFB944(v19 > 1, v20 + 1, 1);
        }
        v18 += 2;
        *(void *)(v34 + 16) = v21;
        uint64_t v22 = v34 + 16 * v20;
        *(void *)(v22 + 32) = 0;
        *(void *)(v22 + 40) = 0xE000000000000000;
        --v17;
      }
      while (v17);
      if (v21 > 1) {
        goto LABEL_24;
      }
    }
    else
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
LABEL_28:
        char v23 = (void *)(a9 + 16);
        sub_191CF5D88();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRetain();
        sub_191CF5368();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_beginAccess();
        uint64_t v24 = *(void **)(a9 + 16);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(a9 + 16) = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v24 = sub_191B405E0(0, v24[2] + 1, 1, v24);
          *char v23 = v24;
        }
        unint64_t v27 = v24[2];
        unint64_t v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          uint64_t v24 = sub_191B405E0((void *)(v26 > 1), v27 + 1, 1, v24);
          *char v23 = v24;
        }
        v24[2] = v27 + 1;
        uint64_t v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_191B36594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_191CF6018();
    if (v14)
    {
LABEL_3:
      unsigned __int8 v35 = a5;
      uint64_t v36 = a4;
      uint64_t v37 = a2;
      unint64_t v38 = a6;
      sub_191CF5C78();
      a6 = a7 & 0xC000000000000001;
      uint64_t v15 = 4;
      a5 = MEMORY[0x1E4FBB900];
      do
      {
        a4 = v15 - 4;
        if (a6)
        {
          a2 = MEMORY[0x192FE4B60](v15 - 4, a7);
          uint64_t v16 = v15 - 3;
          if (__OFADD__(a4, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          a2 = *(void *)(a7 + 8 * v15);
          swift_retain();
          uint64_t v16 = v15 - 3;
          if (__OFADD__(a4, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v17 = sub_191CF52F8();
        swift_release();
        if (v17) {
          return swift_bridgeObjectRelease();
        }
        ++v15;
      }
      while (v16 != v14);
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v37;
      a6 = v38;
      a4 = v36;
      a5 = v35;
      if (v36) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    int64_t v19 = *(void *)(a4 + 16);
    if (v19)
    {
      unint64_t v20 = (void *)(a4 + 40);
      uint64_t v21 = *(void *)(a4 + 16);
      while (*((unsigned __int8 *)v20 - 8) != a5 || *v20 != a6)
      {
        v20 += 2;
        if (!--v21)
        {
          uint64_t v40 = MEMORY[0x1E4FBC860];
          sub_191AFB944(0, v19, 0);
          uint64_t v23 = a4 + 40;
          do
          {
            sub_191CF5F38();
            unint64_t v25 = *(void *)(v40 + 16);
            unint64_t v24 = *(void *)(v40 + 24);
            unint64_t v26 = v25 + 1;
            if (v25 >= v24 >> 1) {
              sub_191AFB944(v24 > 1, v25 + 1, 1);
            }
            v23 += 16;
            *(void *)(v40 + 16) = v26;
            uint64_t v27 = v40 + 16 * v25;
            *(void *)(v27 + 32) = 0;
            *(void *)(v27 + 40) = 0xE000000000000000;
            --v19;
          }
          while (v19);
          if (v26 > 1) {
            goto LABEL_30;
          }
          goto LABEL_32;
        }
      }
    }
    else
    {
      unint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v26 <= 1)
      {
LABEL_32:
        if (!v26)
        {
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_30:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
      }
      uint64_t v28 = (void *)(a9 + 16);
      sub_191CF5D88();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF5368();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      uint64_t v29 = a2;
      swift_beginAccess();
      unint64_t v30 = *(void **)(a9 + 16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a9 + 16) = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v30 = sub_191B405E0(0, v30[2] + 1, 1, v30);
        *uint64_t v28 = v30;
      }
      unint64_t v33 = v30[2];
      unint64_t v32 = v30[3];
      if (v33 >= v32 >> 1)
      {
        unint64_t v30 = sub_191B405E0((void *)(v32 > 1), v33 + 1, 1, v30);
        *uint64_t v28 = v30;
      }
      v30[2] = v33 + 1;
      uint64_t v34 = &v30[2 * v33];
      unsigned char v34[4] = a1;
      v34[5] = v29;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_191B36AE8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      char v31 = v10;
      uint64_t v32 = a4;
      uint64_t v33 = a8;
      unint64_t v35 = a2;
      sub_191CF5C78();
      a2 = a6 & 0xC000000000000001;
      uint64_t v14 = 4;
      do
      {
        a8 = v14 - 4;
        if (a2)
        {
          a4 = MEMORY[0x192FE4B60](v14 - 4, a6);
          uint64_t v10 = v14 - 3;
          if (__OFADD__(a8, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          a4 = *(void *)(a6 + 8 * v14);
          swift_retain();
          uint64_t v10 = v14 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v15 = sub_191CF52F8();
        swift_release();
        if (v15) {
          return swift_bridgeObjectRelease();
        }
        ++v14;
      }
      while (v10 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      a8 = v33;
      a2 = v35;
      a4 = v32;
      LOBYTE(v10) = v31;
      if (v32) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    int64_t v17 = *(void *)(a4 + 16);
    if (v17)
    {
      uint64_t v18 = 0;
      uint64_t v19 = a4 + 32;
      while (*(unsigned __int8 *)(v19 + v18) != v10)
      {
        if (v17 == ++v18)
        {
          uint64_t v34 = a8;
          uint64_t v37 = MEMORY[0x1E4FBC860];
          sub_191AFB944(0, v17, 0);
          do
          {
            ++v19;
            sub_191CF5F38();
            unint64_t v21 = *(void *)(v37 + 16);
            unint64_t v20 = *(void *)(v37 + 24);
            unint64_t v22 = v21 + 1;
            if (v21 >= v20 >> 1) {
              sub_191AFB944(v20 > 1, v21 + 1, 1);
            }
            *(void *)(v37 + 16) = v22;
            uint64_t v23 = v37 + 16 * v21;
            *(void *)(v23 + 32) = 0;
            *(void *)(v23 + 40) = 0xE000000000000000;
            --v17;
          }
          while (v17);
          a8 = v34;
          if (v22 > 1) {
            goto LABEL_27;
          }
          goto LABEL_29;
        }
      }
    }
    else
    {
      unint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v22 <= 1)
      {
LABEL_29:
        if (!v22)
        {
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_27:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
      }
      unint64_t v24 = (void **)(a8 + 16);
      sub_191CF5D88();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF5368();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      unint64_t v25 = a2;
      swift_beginAccess();
      unint64_t v26 = *v24;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v24 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v26 = sub_191B405E0(0, v26[2] + 1, 1, v26);
        *unint64_t v24 = v26;
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1)
      {
        unint64_t v26 = sub_191B405E0((void *)(v28 > 1), v29 + 1, 1, v26);
        *unint64_t v24 = v26;
      }
      void v26[2] = v29 + 1;
      unint64_t v30 = &v26[2 * v29];
      v30[4] = a1;
      v30[5] = v25;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_191B37030(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      char v31 = v10;
      uint64_t v32 = a4;
      uint64_t v33 = a8;
      unint64_t v34 = a2;
      sub_191CF5C78();
      a2 = a6 & 0xC000000000000001;
      uint64_t v14 = 4;
      do
      {
        a8 = v14 - 4;
        if (a2)
        {
          a4 = MEMORY[0x192FE4B60](v14 - 4, a6);
          uint64_t v10 = v14 - 3;
          if (__OFADD__(a8, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          a4 = *(void *)(a6 + 8 * v14);
          swift_retain();
          uint64_t v10 = v14 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v15 = sub_191CF52F8();
        swift_release();
        if (v15) {
          return swift_bridgeObjectRelease();
        }
        ++v14;
      }
      while (v10 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      a8 = v33;
      a2 = v34;
      a4 = v32;
      LOBYTE(v10) = v31;
      if (v32) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    int64_t v17 = *(void *)(a4 + 16);
    if (v17)
    {
      uint64_t v18 = 0;
      uint64_t v19 = a4 + 32;
      while (((((v10 & 1) == 0) ^ *(unsigned __int8 *)(v19 + v18)) & 1) == 0)
      {
        if (v17 == ++v18)
        {
          uint64_t v36 = MEMORY[0x1E4FBC860];
          sub_191AFB944(0, v17, 0);
          do
          {
            sub_191CF5F38();
            unint64_t v21 = *(void *)(v36 + 16);
            unint64_t v20 = *(void *)(v36 + 24);
            unint64_t v22 = v21 + 1;
            if (v21 >= v20 >> 1) {
              sub_191AFB944(v20 > 1, v21 + 1, 1);
            }
            *(void *)(v36 + 16) = v22;
            uint64_t v23 = v36 + 16 * v21;
            *(void *)(v23 + 32) = 0;
            *(void *)(v23 + 40) = 0xE000000000000000;
            ++v19;
            --v17;
          }
          while (v17);
          if (v22 > 1) {
            goto LABEL_27;
          }
          goto LABEL_29;
        }
      }
    }
    else
    {
      unint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v22 <= 1)
      {
LABEL_29:
        if (!v22)
        {
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_27:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
        sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
        sub_191CF5288();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
        swift_bridgeObjectRelease();
        sub_191CF53B8();
      }
      unint64_t v24 = (void **)(a8 + 16);
      sub_191CF5D88();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF5368();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      unint64_t v25 = a2;
      swift_beginAccess();
      unint64_t v26 = *v24;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v24 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v26 = sub_191B405E0(0, v26[2] + 1, 1, v26);
        *unint64_t v24 = v26;
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1)
      {
        unint64_t v26 = sub_191B405E0((void *)(v28 > 1), v29 + 1, 1, v26);
        *unint64_t v24 = v26;
      }
      void v26[2] = v29 + 1;
      unint64_t v30 = &v26[2 * v29];
      v30[4] = a1;
      v30[5] = v25;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_191B37578(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6, uint64_t a7, unint64_t a8, unint64_t *a9)
{
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    if (v13)
    {
LABEL_3:
      uint64_t v39 = a5;
      unint64_t v40 = a4;
      unint64_t v36 = a8;
      a5 = (void *)sub_191CF5C78();
      a4 = 4;
      do
      {
        unint64_t v14 = a4 - 4;
        if ((a6 & 0xC000000000000001) != 0)
        {
          MEMORY[0x192FE4B60](a4 - 4, a6);
          BOOL v15 = __OFADD__(v14, 1);
          a8 = a4 - 3;
          if (v15) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          BOOL v15 = __OFADD__(v14, 1);
          a8 = a4 - 3;
          if (v15)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        char v16 = sub_191CF52F8();
        swift_release();
        if (v16) {
          return swift_bridgeObjectRelease();
        }
        ++a4;
      }
      while (a8 != v13);
      uint64_t result = swift_bridgeObjectRelease();
      a5 = v39;
      a4 = v40;
      a8 = v36;
      if (v40) {
        goto LABEL_17;
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!a4) {
    return result;
  }
LABEL_17:
  uint64_t result = sub_191B2DA6C((uint64_t)a5, a4, (uint64_t)a9);
  if ((result & 1) == 0)
  {
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_191CF6018();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    if (v18)
    {
      uint64_t v41 = MEMORY[0x1E4FBC860];
      sub_191AFB944(0, v18 & ~(v18 >> 63), 0);
      if (v18 < 0)
      {
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v19 = v41;
      if ((a4 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = 0;
        do
        {
          MEMORY[0x192FE4B60](v20, a4);
          sub_191B016E0(0, a9);
          sub_191CF5F38();
          swift_unknownObjectRelease();
          unint64_t v22 = *(void *)(v41 + 16);
          unint64_t v21 = *(void *)(v41 + 24);
          if (v22 >= v21 >> 1) {
            sub_191AFB944(v21 > 1, v22 + 1, 1);
          }
          ++v20;
          *(void *)(v41 + 16) = v22 + 1;
          uint64_t v23 = v41 + 16 * v22;
          *(void *)(v23 + 32) = 0;
          *(void *)(v23 + 40) = 0xE000000000000000;
        }
        while (v18 != v20);
      }
      else
      {
        unint64_t v24 = a4 + 32;
        sub_191B016E0(0, a9);
        do
        {
          sub_191CF5F38();
          unint64_t v26 = *(void *)(v41 + 16);
          unint64_t v25 = *(void *)(v41 + 24);
          if (v26 >= v25 >> 1) {
            sub_191AFB944(v25 > 1, v26 + 1, 1);
          }
          *(void *)(v41 + 16) = v26 + 1;
          uint64_t v27 = v41 + 16 * v26;
          *(void *)(v27 + 32) = 0;
          *(void *)(v27 + 40) = 0xE000000000000000;
          v24 += 8;
          --v18;
        }
        while (v18);
      }
    }
    unint64_t v28 = *(void *)(v19 + 16);
    if (v28 > 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
      sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
      sub_191CF5288();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
LABEL_36:
      unint64_t v29 = (void **)(a8 + 16);
      sub_191CF5D88();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191B016E0(0, a9);
      id v30 = a5;
      sub_191CF5368();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      swift_beginAccess();
      char v31 = *v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v29 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v31 = sub_191B405E0(0, v31[2] + 1, 1, v31);
        void *v29 = v31;
      }
      unint64_t v34 = v31[2];
      unint64_t v33 = v31[3];
      if (v34 >= v33 >> 1)
      {
        char v31 = sub_191B405E0((void *)(v33 > 1), v34 + 1, 1, v31);
        void *v29 = v31;
      }
      void v31[2] = v34 + 1;
      unint64_t v35 = &v31[2 * v34];
      v35[4] = a1;
      v35[5] = a2;
      return swift_endAccess();
    }
    if (v28)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_44:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_191B37BBC()
{
  return sub_191CF3D48();
}

uint64_t sub_191B37BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3C708], MEMORY[0x1E4F3CF70]);
}

uint64_t sub_191B37C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_191B37CDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(*(void *)a1 + 24) + 16) + 104))(*(void *)(*(void *)(*(void *)a2 + 24) + 16)) & 1;
}

BOOL sub_191B37D38(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(**(void **)(*(void *)(*(void *)a2 + 24) + 16) + 104))(*(void *)(*(void *)(*(void *)a1 + 24) + 16)) & 1) == 0;
}

BOOL sub_191B37D98(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(**(void **)(*(void *)(*(void *)a1 + 24) + 16) + 104))(*(void *)(*(void *)(*(void *)a2 + 24) + 16)) & 1) == 0;
}

uint64_t sub_191B37DF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(*(void *)a2 + 24) + 16) + 104))(*(void *)(*(void *)(*(void *)a1 + 24) + 16)) & 1;
}

uint64_t sub_191B37E54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_191CF6468();
  (*(void (**)(uint64_t))(**(void **)(v1 + 16) + 80))(v2);
  swift_bridgeObjectRetain();
  sub_191CF5388();
  swift_release();
  swift_bridgeObjectRelease_n();
  return sub_191CF64C8();
}

uint64_t sub_191B37EF8()
{
  (*(void (**)(void))(**(void **)(*(void *)v0 + 16) + 80))();
  swift_bridgeObjectRetain();
  sub_191CF5388();
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_191B37F84()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_191CF6468();
  (*(void (**)(uint64_t))(**(void **)(v1 + 16) + 80))(v2);
  swift_bridgeObjectRetain();
  sub_191CF5388();
  swift_release();
  swift_bridgeObjectRelease_n();
  return sub_191CF64C8();
}

uint64_t sub_191B38024(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(*(void *)a1 + 24) + 16) + 96))(*(void *)(*(void *)(*(void *)a2 + 24) + 16)) & 1;
}

void *sub_191B38120()
{
  uint64_t v1 = sub_191CF3018();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v32 = sub_191B404D0(0, *(void *)(*v5 + 16), 0, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v5;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_191B2B2B0(v6);
  swift_bridgeObjectRelease();
  *(void *)&long long v38 = v7;
  swift_bridgeObjectRetain();
  sub_191B41C90((uint64_t *)&v38);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v38 + 16);
  if (!v34)
  {
LABEL_21:
    swift_release();
    return v32;
  }
  unint64_t v8 = 0;
  uint64_t v33 = v38 + 32;
  uint64_t v27 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v9 = v28;
  uint64_t v35 = v38;
  while (1)
  {
    if (v8 >= *(void *)(v35 + 16))
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v10 = (uint64_t *)(v33 + 24 * v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v13 = v10[2];
    swift_beginAccess();
    uint64_t v14 = *v9;
    if (*(void *)(*v9 + 16)) {
      break;
    }
    swift_bridgeObjectRetain_n();
    swift_retain();
LABEL_4:
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v8 == v34) {
      goto LABEL_21;
    }
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v15 = sub_191B1E938(v11, v13);
  if ((v16 & 1) == 0)
  {
    swift_release();
    goto LABEL_4;
  }
  int64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
  swift_endAccess();
  id v18 = v17;
  uint64_t v30 = v13;
  swift_bridgeObjectRelease();
  uint64_t v31 = v12;
  swift_release();
  unint64_t v19 = (unint64_t)objc_msgSend(v18, sel_count);
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_191CF5EB8();
  id v20 = v18;
  sub_191CF58F8();

  if ((v19 & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  id v29 = v20;
  if (!v19)
  {
LABEL_14:
    sub_191B4FAC8(&qword_1EB44BD18, 255, MEMORY[0x1E4F27660]);
    while (1)
    {
      sub_191CF5BF8();
      if (!v37) {
        break;
      }
      sub_191B4F9C0(&v36, &v38);
      sub_191B4F964((uint64_t)&v38, (uint64_t)&v36);
      swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      sub_191CF5E98();
    }
    (*v27)(v4, v1);
    sub_191B01770((uint64_t)&v36, (uint64_t *)&unk_1EB44BC90);
    uint64_t v21 = v40;
    unint64_t v22 = v32;
    unint64_t v24 = v32[2];
    unint64_t v23 = v32[3];
    if (v24 >= v23 >> 1) {
      unint64_t v22 = sub_191B404D0((void *)(v23 > 1), v24 + 1, 1, v32);
    }
    _OWORD v22[2] = v24 + 1;
    uint64_t v32 = v22;
    v22[v24 + 4] = v21;

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v9 = v28;
    goto LABEL_5;
  }
  sub_191B4FAC8(&qword_1EB44BD18, 255, MEMORY[0x1E4F27660]);
  while (1)
  {
    sub_191CF5BF8();
    if (!v39) {
      break;
    }
    sub_191B4F964((uint64_t)&v38, (uint64_t)&v36);
    swift_dynamicCast();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    sub_191CF5E88();
    sub_191CF5EC8();
    sub_191CF5ED8();
    sub_191CF5E98();
    if (!--v19) {
      goto LABEL_14;
    }
  }
LABEL_24:
  __break(1u);
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_191B38630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3018();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v11 = *v10;
  if (!*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
LABEL_10:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_191B1E938(a2, a3);
  if ((v13 & 1) == 0)
  {
    swift_release();
    goto LABEL_10;
  }
  uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
  swift_endAccess();
  id v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v26 = MEMORY[0x1E4FBC860];
  id v16 = v15;
  sub_191CF58F8();

  sub_191B4FAC8(&qword_1EB44BD18, 255, MEMORY[0x1E4F27660]);
  sub_191CF5BF8();
  while (v25)
  {
    sub_191B4F9C0(&v24, v23);
    sub_191B4F964((uint64_t)v23, (uint64_t)v22);
    swift_dynamicCast();
    uint64_t v17 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    MEMORY[0x192FE4280](v17);
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_191CF5588();
    }
    sub_191CF55D8();
    sub_191CF5558();
    sub_191CF5BF8();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v19 = v26;
  if ((v26 & 0x8000000000000000) != 0 || (v26 & 0x4000000000000000) != 0)
  {
    id v18 = sub_191AFB2E0(v26);

    swift_bridgeObjectRelease();
  }
  else
  {

    return v19 & 0xFFFFFFFFFFFFFF8;
  }
  return (uint64_t)v18;
}

void sub_191B38914(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    goto LABEL_21;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_191CF6018();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_191CF6018();
      swift_bridgeObjectRelease();
      if (!v8)
      {
        swift_bridgeObjectRelease();
LABEL_16:
        id v18 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
        unint64_t v19 = (void *)sub_191CF5528();
        swift_bridgeObjectRelease();
        id v20 = objc_msgSend(v18, sel_initWithArray_, v19);

        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_191B2E104((uint64_t)v20, a2, a3, a4);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
  {
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    swift_beginAccess();
    unint64_t v22 = (void *)sub_191C98D14(a3, a4);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
LABEL_4:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_191AFB924(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = a3;
    uint64_t v9 = v26;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        uint64_t v11 = MEMORY[0x192FE4B60](i, a1);
        uint64_t v25 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        uint64_t v26 = v9;
        *(void *)&long long v24 = v11;
        unint64_t v13 = *(void *)(v9 + 16);
        unint64_t v12 = *(void *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_191AFB924(v12 > 1, v13 + 1, 1);
          uint64_t v9 = v26;
        }
        *(void *)(v9 + 16) = v13 + 1;
        sub_191B4F9C0(&v24, (_OWORD *)(v9 + 32 * v13 + 32));
      }
    }
    else
    {
      uint64_t v14 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v15 = *v14;
        uint64_t v25 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        uint64_t v26 = v9;
        *(void *)&long long v24 = v15;
        unint64_t v16 = *(void *)(v9 + 16);
        unint64_t v17 = *(void *)(v9 + 24);
        swift_retain();
        if (v16 >= v17 >> 1)
        {
          sub_191AFB924(v17 > 1, v16 + 1, 1);
          uint64_t v9 = v26;
        }
        *(void *)(v9 + 16) = v16 + 1;
        sub_191B4F9C0(&v24, (_OWORD *)(v9 + 32 * v16 + 32));
        ++v14;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
    a3 = v23;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_191B38C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  (*(void (**)(void *__return_ptr, void, uint64_t))(**(void **)(a2 + 16) + 120))(a4, *(void *)(*(void *)a1 + 24), a3);
  if (v4)
  {

    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v7, 1, a3);
}

uint64_t sub_191B38CC8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 120))();
}

void sub_191B38D0C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  id v20 = a4;
  uint64_t v8 = *(void *)(*MEMORY[0x1E4FBBC10] + *a3 + 8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v17 - v10;
  v19[3] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  unint64_t v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16);
  v13(boxed_opaque_existential_1, a1, v8);
  uint64_t v18 = a2;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(**(void **)(a2 + 16) + 128))(v19);
  if (v4)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    *id v20 = 0;
  }
  else
  {
    uint64_t v15 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t v17 = type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    v13((uint64_t *)v11, a1, v8);
    sub_191CF5F18();
    uint64_t v16 = sub_191B38F28((uint64_t)a3, (uint64_t)v11, v15, v18);
    *id v20 = v16;
    swift_retain();
    swift_retain();
  }
}

uint64_t sub_191B38F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.Storage();
  *(void *)(v8 + 16) = sub_191B3FB04(a1, a2, a4);
  *(void *)(v8 + 24) = a3;
  return v8;
}

uint64_t WidgetEnvironment.Storage.debugDescription.getter()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_191CF3018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v56 = sub_191B405E0(0, *(void *)(*v6 + 16), 0, MEMORY[0x1E4FBC860]);
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_191AFB618(v7);
  swift_bridgeObjectRelease();
  *(void *)&long long v63 = v8;
  sub_191B41C90((uint64_t *)&v63);
  swift_bridgeObjectRelease();
  uint64_t v9 = v63;
  uint64_t v53 = *(void *)(v63 + 16);
  if (!v53)
  {
LABEL_29:
    swift_release();
    *(void *)&long long v63 = v56;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
    sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
    sub_191CF5288();
    swift_bridgeObjectRelease();
    *(void *)&long long v63 = sub_191CF6568();
    *((void *)&v63 + 1) = v47;
    sub_191CF53B8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    return v63;
  }
  v49[1] = ObjectType;
  unint64_t v10 = 0;
  uint64_t v59 = v63 + 32;
  unint64_t v50 = (void (**)(char *, uint64_t))(v3 + 8);
  v49[2] = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = v53;
  unint64_t v52 = v6;
  uint64_t v51 = v63;
  while (1)
  {
    if (v10 >= *(void *)(v9 + 16))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    unint64_t v12 = (uint64_t *)(v59 + 24 * v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    uint64_t v15 = v12[2];
    swift_beginAccess();
    uint64_t v16 = *v6;
    if (*(void *)(*v6 + 16)) {
      break;
    }
    swift_bridgeObjectRetain_n();
    swift_retain();
LABEL_4:
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v10 == v11) {
      goto LABEL_29;
    }
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v58 = v13;
  unint64_t v17 = sub_191B1E938(v13, v15);
  if ((v18 & 1) == 0)
  {
    swift_release();
    goto LABEL_4;
  }
  unint64_t v19 = *(void **)(*(void *)(v16 + 56) + 8 * v17);
  swift_endAccess();
  id v20 = v19;
  uint64_t v57 = v15;
  swift_bridgeObjectRelease();
  uint64_t v55 = v14;
  swift_release();
  uint64_t v21 = (uint64_t)objc_msgSend(v20, sel_count);
  uint64_t v65 = MEMORY[0x1E4FBC860];
  sub_191AFB944(0, v21 & ~(v21 >> 63), 0);
  id v22 = v20;
  sub_191CF58F8();

  if (v21 < 0) {
    goto LABEL_31;
  }
  id v54 = v22;
  if (!v21)
  {
LABEL_20:
    sub_191B4FAC8(&qword_1EB44BD18, 255, MEMORY[0x1E4F27660]);
    sub_191CF5BF8();
    while (v62)
    {
      sub_191B4F9C0(&v61, &v63);
      sub_191B4F964((uint64_t)&v63, (uint64_t)&v61);
      swift_dynamicCast();
      uint64_t v33 = *(void *)(v60 + 24);
      swift_retain();
      swift_release();
      uint64_t v34 = *(uint64_t (**)(uint64_t))(**(void **)(v33 + 16) + 80);
      uint64_t v35 = swift_retain();
      uint64_t v36 = v34(v35);
      uint64_t v38 = v37;
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
      uint64_t v39 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFB944(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v39 = v65;
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_191AFB944(v40 > 1, v41 + 1, 1);
        uint64_t v39 = v65;
      }
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v42 = v39 + 16 * v41;
      *(void *)(v42 + 32) = v36;
      *(void *)(v42 + 40) = v38;
      sub_191CF5BF8();
    }
    (*v50)(v5, v2);
    sub_191B01770((uint64_t)&v61, (uint64_t *)&unk_1EB44BC90);
    *(void *)&long long v63 = v65;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
    sub_191B00398((unint64_t *)&qword_1E92E1980, (uint64_t *)&unk_1EB44BFF8);
    sub_191CF5288();
    swift_release();
    *(void *)&long long v63 = v58;
    *((void *)&v63 + 1) = v57;
    swift_bridgeObjectRetain();
    sub_191CF53B8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    long long v43 = v63;
    int v44 = v56;
    unint64_t v46 = v56[2];
    unint64_t v45 = v56[3];
    if (v46 >= v45 >> 1) {
      int v44 = sub_191B405E0((void *)(v45 > 1), v46 + 1, 1, v56);
    }
    uint64_t v6 = v52;
    v44[2] = v46 + 1;
    uint64_t v56 = v44;
    *(_OWORD *)&v44[2 * v46 + 4] = v43;
    swift_bridgeObjectRelease();
    swift_release();

    uint64_t v9 = v51;
    uint64_t v11 = v53;
    goto LABEL_5;
  }
  sub_191B4FAC8(&qword_1EB44BD18, 255, MEMORY[0x1E4F27660]);
  while (1)
  {
    sub_191CF5BF8();
    if (!v64) {
      break;
    }
    sub_191B4F964((uint64_t)&v63, (uint64_t)&v61);
    swift_dynamicCast();
    uint64_t v23 = *(void *)(v60 + 24);
    swift_retain();
    swift_release();
    long long v24 = *(uint64_t (**)(uint64_t))(**(void **)(v23 + 16) + 80);
    uint64_t v25 = swift_retain();
    uint64_t v26 = v24(v25);
    uint64_t v28 = v27;
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    uint64_t v29 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_191AFB944(0, *(void *)(v29 + 16) + 1, 1);
      uint64_t v29 = v65;
    }
    unint64_t v31 = *(void *)(v29 + 16);
    unint64_t v30 = *(void *)(v29 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_191AFB944(v30 > 1, v31 + 1, 1);
      uint64_t v29 = v65;
    }
    *(void *)(v29 + 16) = v31 + 1;
    uint64_t v32 = v29 + 16 * v31;
    *(void *)(v32 + 32) = v26;
    *(void *)(v32 + 40) = v28;
    if (!--v21) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WidgetEnvironment.Storage.init(from:)(a1);
}

uint64_t WidgetEnvironment.Storage.init(from:)(void *a1)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C038);
  uint64_t v78 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (unint64_t *)&v1[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  unint64_t v10 = v1;
  unint64_t v11 = sub_191B2D144(MEMORY[0x1E4FBC860]);
  uint64_t v86 = v9;
  *uint64_t v9 = v11;
  if (qword_1EB44BCA0 != -1) {
LABEL_58:
  }
    swift_once();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B4F9D0();
  sub_191CF6508();
  unint64_t v12 = (void *)v3;
  if (v3) {
    goto LABEL_55;
  }
  uint64_t v13 = sub_191CF61A8();
  uint64_t v14 = v8;
  uint64_t v8 = *(char **)(v13 + 16);
  id v85 = v14;
  if (!v8)
  {
    swift_bridgeObjectRelease();
LABEL_52:
    uint64_t v63 = v78;
    uint64_t v64 = v86;
    swift_beginAccess();
    if (*(void *)(*v64 + 16) || !v8)
    {

      (*(void (**)(char *, unint64_t))(v63 + 8))(v85, v6);
      v89.receiver = v10;
      v89.super_class = ObjectType;
      unint64_t v68 = (unint64_t)objc_msgSendSuper2(&v89, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v68;
    }
    uint64_t v65 = sub_191CF5E38();
    swift_allocError();
    uint64_t v67 = v66;
    sub_191CF5E18();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v65 - 8) + 104))(v67, *MEMORY[0x1E4FBBA78], v65);
    swift_willThrow();
    (*(void (**)(char *, unint64_t))(v63 + 8))(v85, v6);
LABEL_55:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    unint64_t v68 = *v86;

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v68;
  }
  unint64_t v71 = v6;
  uint64_t v72 = v10;
  uint64_t v73 = a1;
  uint64_t v74 = ObjectType;
  unint64_t v6 = 0;
  a1 = (void *)(v13 + 32);
  uint64_t v76 = MEMORY[0x1E4FBC840] + 8;
  char v77 = v8;
  unint64_t v10 = (char *)v13;
  id v75 = (char *)v13;
  uint64_t v83 = (void *)(v13 + 32);
  while (1)
  {
    uint64_t v15 = (objc_class **)&a1[3 * v6];
    uint64_t ObjectType = *v15;
    uint64_t v3 = (uint64_t)v15[1];
    uint64_t v16 = (uint64_t)v15[2];
    uint64_t v17 = qword_1EB44BCD0;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    ++v6;
    swift_beginAccess();
    char v18 = off_1EB44BD40;
    if (!*((void *)off_1EB44BD40 + 2)) {
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_191B1CB2C(v3, v16);
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_endAccess();
      goto LABEL_13;
    }
    uint64_t v3 = *(void *)(v18[7] + 8 * v19);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v3 + 16);
    uint64_t v22 = (*(uint64_t (**)(char *))(*(void *)v21 + 112))(v85);
    if (v12)
    {

      swift_release();
      unint64_t v12 = 0;
      a1 = v83;
      goto LABEL_13;
    }
    unint64_t v23 = v22;
    uint64_t v81 = (*(uint64_t (**)(void))(*(void *)v21 + 80))();
    unint64_t v82 = v24;
    uint64_t v84 = v25;
    uint64_t v80 = v3;
    if (v23 >> 62) {
      break;
    }
    uint64_t v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_18;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    id v36 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    uint64_t v37 = (void *)sub_191CF5528();
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(v36, sel_initWithArray_, v37);

    uint64_t v39 = (uint64_t *)v86;
    swift_beginAccess();
    if (v38)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v90 = (void *)*v39;
      unint64_t v41 = v90;
      *uint64_t v39 = 0x8000000000000000;
      unint64_t v43 = sub_191B1E938(v82, v84);
      uint64_t v44 = v41[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_60;
      }
      char v47 = v42;
      if (v41[3] >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_191B4BFF0();
        }
      }
      else
      {
        sub_191B47F94(v46, isUniquelyReferenced_nonNull_native);
        unint64_t v48 = sub_191B1E938(v82, v84);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_62;
        }
        unint64_t v43 = v48;
      }
      uint64_t v56 = v90;
      if (v47)
      {
        uint64_t v57 = v90[7];

        *(void *)(v57 + 8 * v43) = v38;
      }
      else
      {
        v90[(v43 >> 6) + 8] |= 1 << v43;
        uint64_t v58 = (uint64_t *)(v56[6] + 24 * v43);
        unint64_t v59 = v82;
        *uint64_t v58 = v81;
        v58[1] = v59;
        v58[2] = v84;
        *(void *)(v56[7] + 8 * v43) = v38;
        uint64_t v60 = v56[2];
        BOOL v61 = __OFADD__(v60, 1);
        uint64_t v62 = v60 + 1;
        if (v61) {
          goto LABEL_61;
        }
        v56[2] = v62;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      uint64_t v3 = *v86;
      unint64_t *v86 = (unint64_t)v56;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v8 = v77;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = v84;
      unint64_t v82 = sub_191B1E938(v82, v84);
      char v51 = v50;
      swift_bridgeObjectRelease();
      if (v51)
      {
        uint64_t v79 = v12;
        char v52 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v53 = *v39;
        uint64_t v90 = (void *)*v39;
        *uint64_t v39 = 0x8000000000000000;
        if ((v52 & 1) == 0)
        {
          sub_191B4BFF0();
          uint64_t v53 = (uint64_t)v90;
        }
        unint64_t v54 = v82;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v55 = *(void **)(*(void *)(v53 + 56) + 8 * v54);
        sub_191B4A604(v54, v53);
        uint64_t v3 = *v39;
        *uint64_t v39 = v53;

        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v12 = v79;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    unint64_t v10 = v75;
    a1 = v83;
    swift_endAccess();
    swift_release();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
    if ((char *)v6 == v8)
    {
      swift_bridgeObjectRelease();
      a1 = v73;
      uint64_t ObjectType = v74;
      unint64_t v10 = v72;
      unint64_t v6 = v71;
      goto LABEL_52;
    }
    if (v6 >= *((void *)v10 + 2))
    {
      __break(1u);
      goto LABEL_58;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_31;
  }
LABEL_18:
  uint64_t v90 = (void *)MEMORY[0x1E4FBC860];
  sub_191AFB924(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v79 = 0;
    uint64_t v27 = v90;
    if ((v23 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v26; ++i)
      {
        uint64_t v29 = MEMORY[0x192FE4B60](i, v23);
        uint64_t v88 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        *(void *)&long long v87 = v29;
        uint64_t v90 = v27;
        unint64_t v31 = v27[2];
        unint64_t v30 = v27[3];
        if (v31 >= v30 >> 1)
        {
          sub_191AFB924(v30 > 1, v31 + 1, 1);
          uint64_t v27 = v90;
        }
        v27[2] = v31 + 1;
        sub_191B4F9C0(&v87, &v27[4 * v31 + 4]);
      }
    }
    else
    {
      for (uint64_t j = 0; j != v26; ++j)
      {
        uint64_t v33 = *(void *)(v23 + 8 * j + 32);
        uint64_t v88 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        *(void *)&long long v87 = v33;
        uint64_t v90 = v27;
        unint64_t v35 = v27[2];
        unint64_t v34 = v27[3];
        swift_retain();
        if (v35 >= v34 >> 1)
        {
          sub_191AFB924(v34 > 1, v35 + 1, 1);
          uint64_t v27 = v90;
        }
        v27[2] = v35 + 1;
        sub_191B4F9C0(&v87, &v27[4 * v35 + 4]);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v79;
    uint64_t v8 = v77;
    goto LABEL_32;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  uint64_t result = sub_191CF63D8();
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BB88);
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B4F9D0();
  uint64_t v26 = v6;
  sub_191CF6528();
  uint64_t result = (uint64_t)sub_191B38120();
  uint64_t v8 = result;
  uint64_t v29 = *(void *)(result + 16);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v27);
  }
  uint64_t v23 = v4;
  uint64_t v24 = result;
  unint64_t v9 = 0;
  uint64_t v28 = result + 32;
  while (v9 < *(void *)(v8 + 16))
  {
    unint64_t v10 = *(void *)(v28 + 8 * v9);
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_191CF6018();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_3;
      }
    }
    uint64_t v31 = v2;
    if ((v10 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = MEMORY[0x192FE4B60](0, v10);
      uint64_t v12 = v13;
    }
    else
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_32;
      }
      uint64_t v12 = *(void *)(v10 + 32);
      uint64_t v13 = swift_retain();
    }
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(**(void **)(v12 + 16) + 80))(v13);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_release();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_191CF6018();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_13:
        uint64_t v25 = v17;
        uint64_t v32 = MEMORY[0x1E4FBC860];
        uint64_t result = sub_191CF5EB8();
        if (v18 < 0) {
          goto LABEL_33;
        }
        uint64_t v19 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0) {
            MEMORY[0x192FE4B60](v19, v10);
          }
          else {
            swift_retain();
          }
          ++v19;
          swift_retain();
          swift_release();
          sub_191CF5E88();
          sub_191CF5EC8();
          sub_191CF5ED8();
          sub_191CF5E98();
        }
        while (v18 != v19);
        uint64_t v20 = v32;
        swift_bridgeObjectRelease();
        uint64_t v17 = v25;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_22:
    uint64_t v35 = v20;
    uint64_t v32 = v30;
    uint64_t v33 = v15;
    uint64_t v34 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BB70);
    sub_191B4FA24();
    uint64_t v21 = v31;
    sub_191CF6278();
    uint64_t v2 = v21;
    if (v21)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v8 = v24;
LABEL_4:
    if (++v9 == v29)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v23;
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v27);
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t static WidgetEnvironment.Storage.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetEnvironment.Storage.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WidgetEnvironment.Storage.init(coder:)(a1);
}

id WidgetEnvironment.Storage.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = (unint64_t *)&v1[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  uint64_t v5 = v1;
  *uint64_t v4 = sub_191B2D144(MEMORY[0x1E4FBC860]);
  self;
  if (!swift_dynamicCastObjCClass())
  {
    sub_191B016E0(0, &qword_1EB44C680);
    uint64_t v10 = sub_191CF5AC8();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      sub_191CF2F88();
      swift_allocObject();
      sub_191CF2F78();
      id v12 = v11;
      uint64_t v13 = sub_191CF30C8();
      unint64_t v15 = v14;

      sub_191B4FAC8(qword_1EB44BEC0, v16, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
      sub_191CF2F58();
      swift_release();

      sub_191B1603C(v13, v15);
      uint64_t v19 = (unint64_t *)&v20[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      swift_beginAccess();
      unint64_t v9 = *v19;
      swift_bridgeObjectRetain();

      goto LABEL_4;
    }

LABEL_9:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  sub_191B4FAC8(qword_1EB44BEC0, v6, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
  id v7 = a1;
  sub_191CF5998();

  if (!v20)
  {

    goto LABEL_9;
  }
  uint64_t v8 = (unint64_t *)&v20[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  unint64_t v9 = *v8;
  swift_bridgeObjectRetain();

LABEL_4:
  swift_beginAccess();
  *uint64_t v4 = v9;

  swift_bridgeObjectRelease();
  v21.receiver = v5;
  v21.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v21, sel_init);

  return v17;
}

Swift::Void __swiftcall WidgetEnvironment.Storage.encode(with:)(NSCoder with)
{
  swift_getObjectType();
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_191B4FAC8(&qword_1EB44B208, v2, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
    id v3 = with.super.isa;
    sub_191CF5988();
  }
  else
  {
    sub_191CF2FC8();
    swift_allocObject();
    sub_191CF2FB8();
    sub_191CF2F98();
    sub_191B4FAC8(&qword_1EB44B208, v4, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
    uint64_t v5 = sub_191CF2FA8();
    unint64_t v7 = v6;
    uint64_t v8 = (void *)sub_191CF30A8();
    unint64_t v9 = (void *)sub_191CF5318();
    [(objc_class *)with.super.isa encodeObject:v8 forKey:v9];

    sub_191B1603C(v5, v7);
    swift_release();
  }
}

uint64_t WidgetEnvironment.Storage.hash.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v36 = *v1 + 64;
  uint64_t v4 = 1;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v38 = v2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int64_t v11 = 0;
  do
  {
    if (v7)
    {
      unint64_t v18 = __clz(__rbit64(v7));
      uint64_t v19 = (v7 - 1) & v7;
      unint64_t v20 = v18 | (v11 << 6);
      BOOL v17 = __OFADD__(v9++, 1);
      if (v17) {
        goto LABEL_33;
      }
    }
    else
    {
      int64_t v21 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_34;
      }
      if (v21 >= v37)
      {
LABEL_31:
        swift_release();
        sub_191CF64D8();
        sub_191CF6478();
        sub_191CF6478();
        sub_191CF6478();
        return sub_191CF64B8();
      }
      unint64_t v22 = *(void *)(v36 + 8 * v21);
      ++v11;
      if (!v22)
      {
        int64_t v11 = v21 + 1;
        if (v21 + 1 >= v37) {
          goto LABEL_31;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v11);
        if (!v22)
        {
          int64_t v11 = v21 + 2;
          if (v21 + 2 >= v37) {
            goto LABEL_31;
          }
          unint64_t v22 = *(void *)(v36 + 8 * v11);
          if (!v22)
          {
            int64_t v23 = v21 + 3;
            if (v23 >= v37) {
              goto LABEL_31;
            }
            unint64_t v22 = *(void *)(v36 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_35;
                }
                if (v11 >= v37) {
                  goto LABEL_31;
                }
                unint64_t v22 = *(void *)(v36 + 8 * v11);
                ++v23;
                if (v22) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
      }
LABEL_23:
      uint64_t v19 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      BOOL v17 = __OFADD__(v9++, 1);
      if (v17) {
        goto LABEL_33;
      }
    }
    uint64_t v39 = v10;
    uint64_t v24 = v4;
    unint64_t v25 = v19;
    int64_t v26 = v11;
    uint64_t v27 = *(void *)(v38 + 48) + 24 * v20;
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
    uint64_t v30 = *(void **)(*(void *)(v38 + 56) + 8 * v20);
    uint64_t v31 = qword_1EB44B4E8;
    swift_retain();
    swift_bridgeObjectRetain();
    id v32 = v30;
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v33 = off_1EB44B4D8;
    if (*((void *)off_1EB44B4D8 + 2))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v34 = sub_191B1E938(v28, v29);
      if (v35) {
        uint64_t v12 = *(void *)(v33[7] + 8 * v34);
      }
      else {
        uint64_t v12 = 1;
      }
      int64_t v11 = v26;
      unint64_t v7 = v25;
      uint64_t v13 = v24;
      unint64_t v14 = v39;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v12 = 1;
      int64_t v11 = v26;
      unint64_t v7 = v25;
      uint64_t v13 = v24;
      unint64_t v14 = v39;
    }
    uint64_t v4 = v12 * v13;
    id v15 = v32;
    uint64_t v16 = (char *)objc_msgSend(v15, sel_count);

    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    BOOL v17 = __OFADD__(v14, v16);
    uint64_t v10 = &v16[(void)v14];
  }
  while (!v17);
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_191B01614(a1, (uint64_t)v11, (uint64_t *)&unk_1EB44BC90);
  if (!v12)
  {
    sub_191B01770((uint64_t)v11, (uint64_t *)&unk_1EB44BC90);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = (uint64_t *)&v10[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191B3AF98(v4, v6);
  char v8 = v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_191B3AF98(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v24) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v24) {
        return;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v24) {
          return;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v24) {
            return;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(a1 + 48) + 24 * v10;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    BOOL v17 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_retain();
    swift_bridgeObjectRetain();
    id v18 = v17;
    unint64_t v19 = sub_191B1E938(v15, v16);
    char v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    if ((v21 & 1) == 0)
    {

      return;
    }
    sub_191B016E0(0, &qword_1EB44A148);
    id v22 = *(id *)(*(void *)(a2 + 56) + 8 * v19);
    char v23 = sub_191CF5B58();

    if ((v23 & 1) == 0) {
      return;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v24) {
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v24) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
}

id WidgetEnvironment.Storage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191B3B294@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  uint64_t result = WidgetEnvironment.Storage.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_191B3B2E4(void *a1)
{
  return WidgetEnvironment.Storage.encode(to:)(a1);
}

id WidgetEnvironment.init()@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
  *a1 = result;
  return result;
}

uint64_t WidgetEnvironment.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
  WidgetEnvironment.apply(environmentValues:)();
  uint64_t v3 = sub_191CF4058();
  int64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t WidgetEnvironment.init(from:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id WidgetEnvironment.secureCodable()()
{
  return *v0;
}

uint64_t WidgetEnvironment.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF64E8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    type metadata accessor for WidgetEnvironment.Storage();
    sub_191B4FAC8(qword_1EB44BEC0, v5, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
    sub_191CF6358();
    uint64_t v6 = v8[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t WidgetEnvironment.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF6518();
  uint64_t v7 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  type metadata accessor for WidgetEnvironment.Storage();
  sub_191B4FAC8(&qword_1EB44B208, v3, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
  sub_191CF6368();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t WidgetEnvironment.hash(into:)()
{
  return sub_191CF6478();
}

uint64_t static WidgetEnvironment.== infix(_:_:)()
{
  return sub_191CF5B58() & 1;
}

uint64_t WidgetEnvironment.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t sub_191B3B694@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return WidgetEnvironment.init(from:)(a1, a2);
}

uint64_t sub_191B3B6AC(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF6518();
  uint64_t v7 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  type metadata accessor for WidgetEnvironment.Storage();
  sub_191B4FAC8(&qword_1EB44B208, v3, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage);
  sub_191CF6368();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_191B3B788()
{
  return sub_191CF64C8();
}

uint64_t sub_191B3B7D0()
{
  return sub_191CF6478();
}

uint64_t sub_191B3B800()
{
  return sub_191CF64C8();
}

uint64_t sub_191B3B844()
{
  return sub_191CF5B58() & 1;
}

unint64_t WidgetEnvironment.description.getter()
{
  return 0xD000000000000012;
}

unint64_t WidgetEnvironment.debugDescription.getter()
{
  return 0xD000000000000011;
}

unint64_t sub_191B3B914()
{
  return 0xD000000000000011;
}

unint64_t sub_191B3B930()
{
  return 0xD000000000000012;
}

uint64_t sub_191B3B990(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_191CF6018();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x192FE4B60](v6 - 4, a3);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * v6);
          swift_retain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v15 = v8;
        char v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v12 & 1;
        }
        char v11 = v10;
        swift_release();
        if ((v11 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          char v12 = 0;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  char v12 = 1;
  return v12 & 1;
}

void sub_191B3BADC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x192FE4B60](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_191B016E0(0, &qword_1EB449D38);
      char v6 = sub_191CF5B58();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x192FE4B60](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_191CF5B58();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_191CF6018();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_191B3BC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(sub_191CF43A8() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_191B4FAC8((unint64_t *)&unk_1EB449DF0, 255, MEMORY[0x1E4F3D5D8]);
  uint64_t v7 = 0;
  while ((sub_191CF52F8() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

id WidgetEnvironment.makeEnumerator(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v8 = *v2;
  uint64_t v5 = (char *)a2 + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0) + 20);
  uint64_t v6 = sub_191CF4058();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a1, v6);
  *a2 = v8;

  return v8;
}

uint64_t sub_191B3BE40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191CF4058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v8 - 8);
  char v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (void **)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AA8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B01614(v2, (uint64_t)v15, &qword_1E92E1AA8);
  sub_191B539D0((uint64_t)v15, (uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v16 = *v12;
  BOOL v17 = (char *)a1
      + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  uint64_t v44 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v5;
  id v18 = *(void (**)(void))(v5 + 16);
  uint64_t v49 = v5 + 16;
  char v50 = v17;
  uint64_t v52 = v4;
  unint64_t v48 = v18;
  v18();
  uint64_t v19 = v2;
  id v20 = v16;
  uint64_t v21 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  uint64_t v53 = v20;
  id v22 = v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_191B4FF68(&v53, v21);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  *a1 = v23;
  a1[1] = v25;
  a1[2] = v27;
  sub_191B53970((uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  uint64_t v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3388) + 36);
  if (*(uint64_t *)(v19 + v46) >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v44 + 4);
    char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 7);
    v44 += 6;
    BOOL v45 = v29;
    do
    {
      unint64_t v30 = a1[1];
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v41 = sub_191CF6018();
        swift_bridgeObjectRelease();
        unint64_t v32 = v41 - 1;
        if (v41 < 1)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t)v51;
          (*v47)(v51, 1, 1, v52);
LABEL_22:
          sub_191B01770(v19, &qword_1E92E3388);
          char v42 = (uint64_t *)&unk_1EB44BBB8;
          uint64_t v43 = v40;
          return sub_191B01770(v43, v42);
        }
      }
      else
      {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        unint64_t v32 = v31 - 1;
        if (v31 < 1) {
          goto LABEL_21;
        }
      }
      sub_191B3CC80(v32);
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = MEMORY[0x1E4FBC860];
        *a1 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        a1[1] = v34;
        swift_bridgeObjectRelease();
        a1[2] = v34;
      }
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v48)(v7, v50, v52);
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_191CF6018();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v36) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v36 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v36) {
          goto LABEL_17;
        }
      }
      if (v36 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v36; ++i)
      {
        if ((v30 & 0xC000000000000001) != 0)
        {
          uint64_t v38 = MEMORY[0x192FE4B60](i, v30);
        }
        else
        {
          uint64_t v38 = *(void *)(v30 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(void **)(v38 + 16) + 112))(v7);
        swift_release();
      }
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v51;
      uint64_t v39 = v52;
      (*v45)(v51, v7, v52);
      (*v47)((char *)v40, 0, 1, v39);
      if ((*v44)(v40, 1, v39) == 1) {
        goto LABEL_22;
      }
      sub_191B01770(v40, (uint64_t *)&unk_1EB44BBB8);
      ++v28;
    }
    while (v28 < *(void *)(v19 + v46));
  }
  char v42 = &qword_1E92E3388;
  uint64_t v43 = v19;
  return sub_191B01770(v43, v42);
}

uint64_t WidgetEnvironment.EnvironmentValuesEnumerator.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191CF4058();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *((void *)v1 + 1);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_191CF6018();
    swift_bridgeObjectRelease();
    unint64_t v8 = v16 - 1;
    if (v16 >= 1) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    BOOL v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    return v17(a1, 1, 1, v3);
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v8 = v7 - 1;
  if (v7 < 1) {
    goto LABEL_17;
  }
LABEL_3:
  sub_191B3CC80(v8);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    *(void *)uint64_t v1 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    *((void *)v1 + 1) = v10;
    swift_bridgeObjectRelease();
    *((void *)v1 + 2) = v10;
  }
  uint64_t v11 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 16))(v5, &v1[*(int *)(v11 + 20)], v3);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191CF6018();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v5, v3);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v3);
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_15;
    }
  }
  if (v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = MEMORY[0x192FE4B60](i, v6);
      }
      else
      {
        uint64_t v15 = *(void *)(v6 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(void **)(v15 + 16) + 112))(v5);
      swift_release();
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.environmentValues(where:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1AA8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF4058();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v3;
  uint64_t v17 = (uint64_t)*v3 + OBJC_IVAR___CHKWidgetEnvironment_tuples;
  swift_beginAccess();
  if (!*(void *)(*(void *)v17 + 16)) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, 1, 1, v9);
  }
  _s9WidgetKit0A11EnvironmentV14makeEnumerator4withAC0c6ValuesE0V7SwiftUI0cG0V_tFfA__0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v15[*(int *)(v13 + 20)], v12, v9);
  *(void *)uint64_t v15 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  id v19 = v16;
  v18(v12, v9);
  sub_191B539D0((uint64_t)v15, (uint64_t)v8, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_191B2B7B0(a1, v22, a3);
  return sub_191B01770((uint64_t)v8, &qword_1E92E1AA8);
}

void WidgetEnvironment.EnvironmentValuesEnumerator.makeIterator()(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (char *)v1 + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0) + 20);
  uint64_t v5 = (char *)a1
     + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  uint64_t v6 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v4, v6);
  id v7 = v3;
  uint64_t v8 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  uint64_t v15 = v7;
  id v9 = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_191B4FF68(&v15, v8);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  *a1 = v10;
  a1[1] = v12;
  a1[2] = v14;
}

unint64_t sub_191B3C974()
{
  unint64_t v1 = v0[1];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v3 = v2 - 1;
    if (v2 >= 1) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_191CF6018();
  swift_bridgeObjectRelease();
  unint64_t v3 = v6 - 1;
  if (v6 < 1) {
    goto LABEL_6;
  }
LABEL_3:
  sub_191B3CC80(v3);
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x1E4FBC860];
    *uint64_t v0 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    v0[1] = v5;
    swift_bridgeObjectRelease();
    v0[2] = v5;
  }
  return v1;
}

uint64_t sub_191B3CA3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v4 = *v2;
  uint64_t v5 = (char *)v2 + *(int *)(a1 + 20);
  uint64_t v6 = (char *)a2
     + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  uint64_t v7 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v5, v7);
  id v8 = v4;
  uint64_t v9 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  uint64_t v17 = v8;
  id v10 = v8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_191B4FF68(&v17, v9);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  *a2 = v11;
  a2[1] = v13;
  a2[2] = v15;
  return sub_191B53970((uint64_t)v2, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
}

uint64_t sub_191B3CB48()
{
  uint64_t v1 = sub_191AFE1D0(v0);
  sub_191B53970(v0, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  return v1;
}

uint64_t sub_191B3CB94(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_191CF5FB8();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_191CF55B8();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  id v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *id v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

void sub_191B3CC80(unint64_t a1)
{
  int64x2_t v7 = (unint64_t *)(v2 + 8);
  while (1)
  {
    if ((a1 & 0x8000000000000000) != 0) {
      goto LABEL_46;
    }
    unint64_t v4 = v22[2];
    if (*(void *)(v4 + 16) <= a1) {
      goto LABEL_47;
    }
    uint64_t v8 = *(void *)(v4 + 8 * a1 + 32);
    uint64_t v3 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_48;
    }
    unint64_t v1 = *v22;
    if (*(void *)(*v22 + 16) <= a1) {
      goto LABEL_49;
    }
    unint64_t v5 = v1 + 32;
    unint64_t v9 = *(void *)(v1 + 32 + 8 * a1);
    if (v9 >> 62) {
      break;
    }
    if (v3 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_29;
    }
LABEL_9:
    unint64_t v10 = *(void *)(v4 + 16);
    if (v10 < a1) {
      goto LABEL_50;
    }
    if (v10 != a1)
    {
      unint64_t v11 = *(void *)(v1 + 16);
      if (v11 > a1 && v10 <= v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = (unint64_t)sub_191CB1154((void *)v4);
        }
        unint64_t v1 = a1;
        while (v1 < *(void *)(v4 + 16))
        {
          *(void *)(v4 + 32 + 8 * v1) = 0;
          uint64_t v12 = *(void *)(v5 + 8 * v1);
          if ((v12 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v13 = MEMORY[0x192FE4B60](0, v12);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_44;
            }
            uint64_t v13 = *(void *)(v12 + 32);
            swift_retain();
          }
          unint64_t v14 = *v7;
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *int64x2_t v7 = v14;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v14 & 0x8000000000000000) != 0
            || (v14 & 0x4000000000000000) != 0)
          {
            sub_191CB10D8(v14);
            unint64_t v14 = v16;
            *int64x2_t v7 = v16;
          }
          if (v1 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v13;
          swift_release();
          sub_191CF5558();
          if (v10 == ++v1)
          {
            _OWORD v22[2] = v4;
            goto LABEL_2;
          }
        }
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
      }
      __break(1u);
      goto LABEL_52;
    }
LABEL_2:
    if ((--a1 & 0x8000000000000000) != 0) {
      return;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (v3 >= v17) {
    goto LABEL_9;
  }
LABEL_29:
  if (swift_isUniquelyReferenced_nonNull_native()) {
    goto LABEL_30;
  }
LABEL_52:
  unint64_t v4 = (unint64_t)sub_191CB1154((void *)v4);
LABEL_30:
  if (*(void *)(v4 + 16) <= a1)
  {
    __break(1u);
    goto LABEL_54;
  }
  *(void *)(v4 + 8 * a1 + 32) = v3;
  _OWORD v22[2] = v4;
  if (*(void *)(v1 + 16) <= a1)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  unint64_t v4 = *(void *)(v5 + 8 * a1);
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x192FE4B60](v3, v4);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if ((unint64_t)v3 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    return;
  }
  uint64_t v18 = *(void *)(v4 + 8 * v3 + 32);
  swift_retain();
LABEL_36:
  unint64_t v19 = *v7;
  int v20 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64x2_t v7 = v19;
  if (!v20 || (v19 & 0x8000000000000000) != 0 || (v19 & 0x4000000000000000) != 0)
  {
    sub_191CB10D8(v19);
    unint64_t v19 = v21;
    *int64x2_t v7 = v21;
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1) {
    goto LABEL_58;
  }
  *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20) = v18;
  swift_release();
  sub_191CF5558();
}

unint64_t sub_191B3CFA8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191B3C974();
  *a1 = result;
  return result;
}

void sub_191B3CFD0(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  unint64_t v11 = v3;
  id v5 = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_191B4FF68(&v11, v4);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  *a1 = v6;
  a1[1] = v8;
  a1[2] = v10;
}

uint64_t sub_191B3D04C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = sub_191AFDF38(*(void **)v0, *(void *)(v0 + 8));
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_191B3D094(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_191B42AEC(a1, a2, a3, *(void **)v3, *(void *)(v3 + 8));
}

void *sub_191B3D09C()
{
  unint64_t result = (void *)sub_191B2D4E8(MEMORY[0x1E4FBC860]);
  off_1EB44BD40 = result;
  return result;
}

void *sub_191B3D0C4()
{
  unint64_t result = (void *)sub_191B2D038(MEMORY[0x1E4FBC860]);
  off_1EB44BD58 = result;
  return result;
}

uint64_t sub_191B3D0EC()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for WidgetEnvironment.AnyKey.Storage();
  *(void *)(v0 + 16) = swift_allocObject();
  return v0;
}

void *sub_191B3D154()
{
  if (qword_1EB44BCE0 != -1) {
LABEL_43:
  }
    swift_once();
  unint64_t result = off_1EB44BD50;
  uint64_t v1 = *((void *)off_1EB44BD50 + 2);
  if (!v1) {
    return result;
  }
  for (uint64_t i = swift_bridgeObjectRetain() + 48; ; i += 24)
  {
    uint64_t v4 = *(void *)(i - 16);
    uint64_t v5 = qword_1EB44BCD0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    (*(void (**)(void))(**(void **)(v4 + 16) + 80))();
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    swift_release();
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = off_1EB44BD40;
    uint64_t v41 = off_1EB44BD40;
    off_1EB44BD40 = (_UNKNOWN *)0x8000000000000000;
    unint64_t v13 = sub_191B1CB2C(v7, v9);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    char v17 = v12;
    if (v11[3] < v16) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      int v20 = v41;
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_191B4C904();
      int v20 = v41;
      if (v17)
      {
LABEL_15:
        uint64_t v21 = v20[7];
        swift_release();
        *(void *)(v21 + 8 * v13) = v4;
        goto LABEL_19;
      }
    }
LABEL_17:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v22 = (uint64_t *)(v20[6] + 16 * v13);
    *uint64_t v22 = v7;
    v22[1] = v9;
    *(void *)(v20[7] + 8 * v13) = v4;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_41;
    }
    v20[2] = v25;
    swift_bridgeObjectRetain();
LABEL_19:
    off_1EB44BD40 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_1EB44BCB8 != -1) {
      swift_once();
    }
    uint64_t v26 = (*(uint64_t (**)(void))(**(void **)(v4 + 16) + 104))();
    swift_beginAccess();
    uint64_t v27 = off_1EB44BD58;
    if (((unint64_t)off_1EB44BD58 & 0xC000000000000001) != 0)
    {
      if ((uint64_t)off_1EB44BD58 >= 0) {
        uint64_t v27 = (void *)((unint64_t)off_1EB44BD58 & 0xFFFFFFFFFFFFFF8);
      }
      swift_retain();
      uint64_t v28 = sub_191CF5CD8();
      if (__OFADD__(v28, 1)) {
        goto LABEL_40;
      }
      off_1EB44BD58 = (_UNKNOWN *)sub_191B47A2C((uint64_t)v27, v28 + 1);
    }
    else
    {
      swift_retain();
    }
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v30 = off_1EB44BD58;
    char v42 = off_1EB44BD58;
    off_1EB44BD58 = (_UNKNOWN *)0x8000000000000000;
    unint64_t v32 = sub_191B1CABC(v26);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      goto LABEL_39;
    }
    char v36 = v31;
    if (v30[3] >= v35)
    {
      if ((v29 & 1) == 0) {
        sub_191B4C758();
      }
    }
    else
    {
      sub_191B48C50(v35, v29);
      unint64_t v37 = sub_191B1CABC(v26);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_45;
      }
      unint64_t v32 = v37;
    }
    if (v36)
    {
      uint64_t v3 = v42[7];
      swift_release();
      *(void *)(v3 + 8 * v32) = v4;
    }
    else
    {
      v42[(v32 >> 6) + 8] |= 1 << v32;
      *(void *)(v42[6] + 8 * v32) = v26;
      *(void *)(v42[7] + 8 * v32) = v4;
      uint64_t v39 = v42[2];
      BOOL v24 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v24) {
        goto LABEL_42;
      }
      v42[2] = v40;
      swift_retain();
    }
    off_1EB44BD58 = v42;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release_n();
    if (!--v1) {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  sub_191B48F6C(v16, isUniquelyReferenced_nonNull_native);
  unint64_t v18 = sub_191B1CB2C(v7, v9);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    int v20 = v41;
    if (v17) {
      goto LABEL_15;
    }
    goto LABEL_17;
  }
  sub_191CF63D8();
  __break(1u);
LABEL_45:
  sub_191CF5C78();
  unint64_t result = (void *)sub_191CF63D8();
  __break(1u);
  return result;
}

uint64_t sub_191B3D5F0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191B3D620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_191B53478(a1, a2);
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

void sub_191B3D64C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_191B3D658(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 0;
  }
  else {
    return sub_191CF6348();
  }
}

uint64_t sub_191B3D688(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_191CF6348() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_191B3D6C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    char v3 = 1;
  }
  else {
    char v3 = sub_191CF6348() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_191B3D714(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_191CF6348();
  }
}

uint64_t sub_191B3D738()
{
  return sub_191CF64C8();
}

uint64_t sub_191B3D794()
{
  swift_bridgeObjectRetain();
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B3D7EC()
{
  return sub_191CF64C8();
}

uint64_t sub_191B3D844(uint64_t a1)
{
  unint64_t v2 = sub_191B4F9D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B3D880(uint64_t a1)
{
  unint64_t v2 = sub_191B4F9D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191B3D8BC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_191CF6348();
  }
}

void sub_191B3D8EC()
{
}

void sub_191B3D938()
{
}

void sub_191B3D984()
{
}

void sub_191B3D9D0()
{
}

void sub_191B3DA1C()
{
}

void sub_191B3DA68()
{
}

void sub_191B3DAB4()
{
}

uint64_t sub_191B3DB00()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t sub_191B3DB44()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t sub_191B3DB88()
{
  return swift_allocObject();
}

uint64_t sub_191B3DB98()
{
  return sub_191B4DA60(*(void *)(*(void *)v0 + 144), *(void *)(*(void *)v0 + 152));
}

uint64_t sub_191B3DBC8()
{
  (*(void (**)(void))(*(void *)(*(void *)v0 + 152) + 48))();
  sub_191CF5C78();
  return sub_191CF5368();
}

uint64_t sub_191B3DC48()
{
  return sub_191B5329C(*(void *)(*(void *)v0 + 144), *(void *)(*(void *)v0 + 152));
}

uint64_t sub_191B3DC78()
{
  (*(void (**)(void))(*(void *)(*(void *)v0 + 152) + 72))();
  uint64_t v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_191B3DCEC(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v4 = *(void *)(v3 + 144);
  uint64_t v5 = *(void *)(v3 + 152);
  uint64_t v16 = sub_191B3D0EC();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_191CF5618();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v4, v5);
  uint64_t v19 = v7;
  uint64_t v20 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C038);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getWitnessTable();
  uint64_t v9 = a1;
  sub_191CF6178();
  if (v15[6])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_willThrow();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_release();
    uint64_t v18 = v21;
    MEMORY[0x1F4188790](v10);
    v15[2] = v4;
    v15[3] = v5;
    void v15[4] = v16;
    uint64_t v11 = type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A300);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v9 = sub_191B55D64((void (*)(char *, char *))sub_191B5394C, (uint64_t)v15, v6, v11, v12, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v21);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v9;
}

uint64_t sub_191B3DF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  char v31 = a5;
  uint64_t v30 = a2;
  uint64_t v26 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v28 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v28);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v23 - v17;
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 56);
  uint64_t v29 = a1;
  uint64_t result = v19(a1, a3, a4);
  if (v6)
  {
    *char v31 = v6;
  }
  else
  {
    uint64_t v25 = type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v18, v28);
    uint64_t v23 = type metadata accessor for WidgetEnvironment.AnyValue();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, v29, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v21 = sub_191B3E284((uint64_t)v12);
    sub_191CF4058();
    sub_191CF5F18();
    uint64_t v22 = sub_191B38F28(v24, (uint64_t)v16, v21, v30);
    *uint64_t v26 = v22;
    return swift_retain();
  }
  return result;
}

uint64_t sub_191B3E284(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for WidgetEnvironment.AnyValue.Storage();
  *(void *)(v2 + 16) = sub_191B3F1EC(a1);
  return v2;
}

uint64_t sub_191B3E2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v43 = a1;
  uint64_t v36 = a3;
  uint64_t v4 = *v3;
  uint64_t v5 = sub_191CF5BC8();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  char v38 = (char *)&v34 - v6;
  uint64_t v7 = *(void *)(v4 + 152);
  uint64_t v8 = *(void *)(v4 + 144);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v34 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_191CF5BC8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = *(void *)(v10 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v34 - v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v43 + 16) + 88))(v42, v17);
  uint64_t v20 = v16;
  int v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v21)
  {
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v24 = v38;
    uint64_t v25 = v39;
    v22(v15, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v19, v15, v10);
    uint64_t v26 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 56))(v19, v8, v7);
    if (v26)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v19, v10);
    }
    else
    {
      uint64_t v29 = v25;
      char v30 = swift_dynamicCast();
      char v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      if (v30)
      {
        uint64_t v32 = *(void *)(v25 - 8);
        v31(v24, 0, 1, v29);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v10);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v36, v24, v29);
      }
      else
      {
        v31(v24, 1, 1, v25);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
        sub_191CF5E38();
        swift_allocError();
        sub_191B2E324(v23, v33);
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v19, v10);
      }
    }
  }
  else
  {
    v22(v15, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_191CF5E38();
    swift_allocError();
    sub_191B2E324(v10, v28);
    return swift_willThrow();
  }
}

uint64_t sub_191B3E81C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  v21[0] = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v21[0]);
  uint64_t v23 = (char *)v21 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_191CF5BC8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)v21 - v13;
  sub_191B4F964(a1, (uint64_t)v22);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v15)
  {
    v16(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
    uint64_t v17 = (uint64_t)v23;
    uint64_t v18 = v21[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 64))(v14, v4, v3);
    if (v18)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
    }
    else
    {
      type metadata accessor for WidgetEnvironment.AnyValue();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      return sub_191B3E284(v17);
    }
  }
  else
  {
    v16(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_191CF5E38();
    swift_allocError();
    sub_191B2E324(AssociatedTypeWitness, v20);
    return swift_willThrow();
  }
}

uint64_t sub_191B3EBC8()
{
  type metadata accessor for WidgetEnvironment.AnyKey.Storage();
  *(void *)(v0 + 16) = swift_allocObject();
  return v0;
}

uint64_t sub_191B3EC00()
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)v0 + 16) + 96))();
}

void sub_191B3EC48()
{
}

void sub_191B3EC94()
{
}

void sub_191B3ECE0()
{
}

void sub_191B3ED2C()
{
}

uint64_t sub_191B3ED78()
{
  return 0;
}

uint64_t sub_191B3ED84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_191B3EDB4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_191B3EDC0(uint64_t a1)
{
  unint64_t v2 = sub_191B538F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B3EDFC(uint64_t a1)
{
  unint64_t v2 = sub_191B538F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191B3EE38(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3438);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B538F8();
  sub_191CF6528();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_191B3EF48(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 104))(*a2) & 1;
}

uint64_t sub_191B3EFA0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80))();
}

uint64_t sub_191B3EFE4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t sub_191B3F028(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 96))(*a2) & 1;
}

uint64_t sub_191B3F074(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, v1 + *(void *)(v3 + 152), v2);
  return sub_191CF5368();
}

uint64_t sub_191B3F158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 152);
  uint64_t v3 = *(void *)(*(void *)v1 + 128);
  a1[3] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(boxed_opaque_existential_1, v2, v3);
}

uint64_t sub_191B3F1EC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 128) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 152), a1);
  return v2;
}

uint64_t sub_191B3F280(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191CF6518();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_191CF6368();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_191B3F35C()
{
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    char v1 = sub_191CF52F8();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_191B3F418()
{
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    char v1 = sub_191CF5298();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_191B3F4D0()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 128) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 152));
}

uint64_t sub_191B3F528()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 128) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 152));

  return swift_deallocClassInstance();
}

uint64_t sub_191B3F5D4(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for WidgetEnvironment.AnyValue.Storage();
  *(void *)(v2 + 16) = sub_191B3F1EC(a1);
  return v2;
}

uint64_t sub_191B3F618()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_191B3F650(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)a1 + 16) + 104))(*(void *)(*(void *)a2 + 16)) & 1;
}

BOOL sub_191B3F6A4(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(**(void **)(*(void *)a2 + 16) + 104))(*(void *)(*(void *)a1 + 16)) & 1) == 0;
}

BOOL sub_191B3F6FC(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(**(void **)(*(void *)a1 + 16) + 104))(*(void *)(*(void *)a2 + 16)) & 1) == 0;
}

uint64_t sub_191B3F754(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)a2 + 16) + 104))(*(void *)(*(void *)a1 + 16)) & 1;
}

uint64_t sub_191B3F7A8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)v0 + 16) + 80);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_191B3F818()
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)v0 + 16) + 112))();
}

uint64_t sub_191B3F860(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)a1 + 16) + 96))(*(void *)(*(void *)a2 + 16)) & 1;
}

void sub_191B3F8B4()
{
}

void sub_191B3F900()
{
}

void sub_191B3F94C()
{
}

void sub_191B3F998()
{
}

void sub_191B3F9E4()
{
}

void sub_191B3FA30()
{
}

uint64_t sub_191B3FA7C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t sub_191B3FAC0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

char *sub_191B3FB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (char *)swift_allocObject();
  uint64_t v7 = *(void *)v6;
  *((void *)v6 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v7 + 144) - 8) + 32))(&v6[*(void *)(v7 + 160)], a2);
  *(void *)&v6[*(void *)(*(void *)v6 + 168)] = a3;
  return v6;
}

uint64_t sub_191B3FBC4()
{
  return (*(uint64_t (**)(void))(**(void **)(*(void *)(v0 + *(void *)(*(void *)v0 + 168)) + 16) + 80))();
}

uint64_t sub_191B3FC20()
{
  sub_191CF53B8();
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + *(void *)(*(void *)v0 + 168)) + 16) + 96);
  uint64_t v2 = swift_retain();
  v1(v2);
  sub_191CF53B8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF6318();
  sub_191CF53B8();
  return 0;
}

uint64_t sub_191B3FD30()
{
  uint64_t v1 = sub_191CF53B8();
  (*(void (**)(uint64_t))(**(void **)(*(void *)(v0 + *(void *)(*(void *)v0 + 168)) + 16) + 96))(v1);
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF6318();
  sub_191CF53B8();
  return 0;
}

uint64_t sub_191B3FE28()
{
  return swift_retain();
}

uint64_t sub_191B3FE30(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v6 - v4, v1 + *(void *)(v2 + 160));
  return swift_setAtWritableKeyPath();
}

uint64_t sub_191B3FF1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + *(void *)(*(void *)v1 + 168));
  v9[3] = *(void *)(*(void *)v1 + 144);
  __swift_allocate_boxed_opaque_existential_1(v9);
  swift_getAtKeyPath();
  uint64_t v4 = (*(uint64_t (**)(uint64_t *))(**(void **)(v3 + 16) + 128))(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 96);
  swift_retain_n();
  swift_retain();
  char v7 = v6(v5);
  swift_release_n();
  swift_release_n();
  return v7 & 1;
}

uint64_t sub_191B40064()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 144) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 160));

  return swift_release();
}

uint64_t *sub_191B40108()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 144) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_191B401A4()
{
  sub_191B40108();

  return swift_deallocClassInstance();
}

uint64_t sub_191B401F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.Storage();
  *(void *)(v5 + 16) = sub_191B3FB04(a1, a2, a4);
  *(void *)(v5 + 24) = a3;
  return v5;
}

uint64_t sub_191B40280()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_191B402C0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)v0 + 16) + 96);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_191B40330()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(*(void *)v0 + 24) + 16) + 80);
  swift_retain();
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_191B403B4(uint64_t *a1, uint64_t *a2)
{
  return sub_191B4D960(*a1, *a2);
}

void *sub_191B403C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E34A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B4D874(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B404D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BC88);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B4FB34(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B405E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A1A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B51B9C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B406F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_191B41780(a1, a2, a3, a4, &qword_1EB449E00);
}

uint64_t sub_191B406FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB44C670, type metadata accessor for WidgetDescriptor, type metadata accessor for WidgetDescriptor);
}

uint64_t sub_191B40730(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_191CF5FB8();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_191B536A8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_191B409B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ACF0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B4D874(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_191B40AC0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, (uint64_t *)&unk_1EB44A490);
}

char *sub_191B40ACC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, (uint64_t *)&unk_1EB44C658);
}

char *sub_191B40AD8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, &qword_1E92E3460);
}

char *sub_191B40AE4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_191B52F64(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B40BDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, qword_1E92E24E0, (uint64_t (*)(void))type metadata accessor for ControlTemplateType, (uint64_t (*)(void))type metadata accessor for ControlTemplateType);
}

void *sub_191B40C10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3448);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_191B51FEC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B40D34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3450);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B520E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_191B40E44(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, &qword_1EB44AF10);
}

char *sub_191B40E50(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, &qword_1E92E23A8);
}

char *sub_191B40E5C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_191B40AE4(a1, a2, a3, a4, &qword_1EB448EF8);
}

void *sub_191B40E68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448EE8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B520E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B40F78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448DB0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B5304C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B41088(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB44AD70, MEMORY[0x1E4F3CD58], MEMORY[0x1E4F3CD58]);
}

uint64_t sub_191B410BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB448E68, MEMORY[0x1E4F3D5D8], MEMORY[0x1E4F3D5D8]);
}

uint64_t sub_191B410F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448E48);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_191CF5FB8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_191B53140(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_191B41360(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1E92E0760, MEMORY[0x1E4F3C708], MEMORY[0x1E4F3C708]);
}

uint64_t sub_191B41394(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, (uint64_t *)&unk_1EB448E58, MEMORY[0x1E4F3D548], MEMORY[0x1E4F3D548]);
}

uint64_t sub_191B413C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB448E40, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3C5D0]);
}

uint64_t sub_191B413FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1E92E3498, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection, (uint64_t (*)(void))type metadata accessor for ActivityViewCollection);
}

void *sub_191B41430(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1B00);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_191B535B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_191B41554(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E08E8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      unint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_191B52F64(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B41650(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7D8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_191B53368(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B41774(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_191B41780(a1, a2, a3, a4, &qword_1E92E0FB0);
}

void *sub_191B41780(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B4D874(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B4188C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB449E50, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata, (uint64_t (*)(void))type metadata accessor for WidgetViewMetadata);
}

void *sub_191B418C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E3488);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B53804(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_191B419D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_191B419F8(a1, a2, a3, a4, &qword_1E92E3430);
}

void *sub_191B419E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_191B419F8(a1, a2, a3, a4, &qword_1E92E1050);
}

void *sub_191B419F8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191B53A38(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B41B14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB44B6C8, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3CBF0]);
}

uint64_t sub_191B41B48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB44B6C0, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F27CA0]);
}

uint64_t sub_191B41B7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_191B40730(a1, a2, a3, a4, &qword_1EB44B6B8, MEMORY[0x1E4F27A78], MEMORY[0x1E4F27A78]);
}

uint64_t sub_191B41BB0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_191B41BD8(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  char v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_191CF5C08();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_191B41C90(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_191B4D7C4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_191B41CFC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_191B41CFC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_191CF62B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_191B4240C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v104 = result;
  unint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      id v93 = v11;
      uint64_t v103 = v8;
      if (v12 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v94) {
            goto LABEL_159;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v12 + 24];
          sub_191B424EC((char *)(v94 + 24 * v97), (char *)(v94 + 24 * *(void *)&v93[16 * v12 + 16]), v94 + 24 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_191B42AD8((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_149;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v12 > v100) {
            goto LABEL_150;
          }
          memmove(&v96[16 * v12 + 16], &v96[16 * v12 + 32], 16 * (v100 - v12));
          id v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v12 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_191CF55B8();
    *(void *)(v7 + 16) = v6;
    uint64_t v103 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v102 = *a1 + 16;
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v3;
  uint64_t v106 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = v10 + 24 * v9;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = v10 + 24 * v13;
    if (v15 == *(void *)(v17 + 8) && v16 == *(void *)(v17 + 16))
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_191CF6348();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v102 + 24 * v20);
    do
    {
      uint64_t v23 = v10 + 24 * v9;
      if (*(v21 - 1) == *(void *)(v23 + 8) && *v21 == *(void *)(v23 + 16))
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_191CF6348()))
      {
        goto LABEL_36;
      }
      uint64_t v22 = v20 + 1;
      v21 += 3;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 24 * v20;
        uint64_t v26 = 24 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v26;
            uint64_t v30 = v10 + v25;
            long long v31 = *(_OWORD *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 16);
            uint64_t v33 = *(void *)(v10 + v25 - 8);
            *(_OWORD *)uint64_t v29 = *(_OWORD *)(v10 + v25 - 24);
            *(void *)(v29 + 16) = v33;
            *(_OWORD *)(v30 - 24) = v31;
            *(void *)(v30 - 8) = v32;
          }
          ++v28;
          v25 -= 24;
          v26 += 24;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v104) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_191B427CC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v44 = *((void *)v11 + 2);
    unint64_t v43 = *((void *)v11 + 3);
    unint64_t v12 = v44 + 1;
    if (v44 >= v43 >> 1) {
      int64_t v11 = sub_191B427CC((char *)(v43 > 1), v44 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    BOOL v45 = v11 + 32;
    uint64_t v46 = &v11[16 * v44 + 32];
    *(void *)uint64_t v46 = v13;
    *((void *)v46 + 1) = v9;
    if (v44)
    {
      uint64_t v10 = v106;
      while (1)
      {
        unint64_t v47 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v52 = &v45[16 * v12];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_135;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_136;
          }
          unint64_t v59 = v12 - 2;
          uint64_t v60 = &v45[16 * v12 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_138;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_141;
          }
          if (v64 >= v55)
          {
            unint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_145;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v76 = *((void *)v11 + 4);
            uint64_t v77 = *((void *)v11 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_99;
          }
          uint64_t v49 = *((void *)v11 + 4);
          uint64_t v48 = *((void *)v11 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_137;
        }
        unint64_t v59 = v12 - 2;
        uint64_t v65 = &v45[16 * v12 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_140;
        }
        unint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_143;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_144;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_105:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v70) {
          goto LABEL_139;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_142;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v87 = v10;
        uint64_t v88 = &v45[16 * v86];
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = &v45[16 * v47];
        uint64_t v91 = *((void *)v90 + 1);
        sub_191B424EC((char *)(v87 + 24 * *(void *)v88), (char *)(v87 + 24 * *(void *)v90), v87 + 24 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v89) {
          goto LABEL_132;
        }
        if (v47 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v88 = v89;
        *(void *)&v45[16 * v86 + 8] = v91;
        unint64_t v92 = *((void *)v11 + 2);
        if (v47 >= v92) {
          goto LABEL_134;
        }
        unint64_t v12 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((void *)v11 + 2) = v92 - 1;
        BOOL v75 = v92 > 2;
        uint64_t v10 = v106;
        if (!v75) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v106;
LABEL_15:
    uint64_t v3 = v105;
    if (v9 >= v105)
    {
      uint64_t v8 = v103;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v104)) {
    goto LABEL_153;
  }
  if (v13 + v104 >= v3) {
    uint64_t v34 = v3;
  }
  else {
    uint64_t v34 = v13 + v104;
  }
  if (v34 >= v13)
  {
    if (v9 != v34)
    {
      uint64_t v35 = (uint64_t *)(v10 + 24 * v9);
      do
      {
        uint64_t v36 = v10 + 24 * v9;
        uint64_t v37 = *(void *)(v36 + 8);
        uint64_t v38 = *(void *)(v36 + 16);
        uint64_t v39 = v13;
        uint64_t v40 = v35;
        do
        {
          BOOL v41 = v37 == *(v40 - 2) && v38 == *(v40 - 1);
          if (v41 || (sub_191CF6348() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v42 = *v40;
          uint64_t v37 = v40[1];
          uint64_t v38 = v40[2];
          *(_OWORD *)uint64_t v40 = *(_OWORD *)(v40 - 3);
          v40[2] = *(v40 - 1);
          *(v40 - 2) = v37;
          *(v40 - 1) = v38;
          *(v40 - 3) = v42;
          v40 -= 3;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v35 += 3;
      }
      while (v9 != v34);
      uint64_t v9 = v34;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_191CF5FB8();
  __break(1u);
  return result;
}

uint64_t sub_191B4240C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3;
LABEL_5:
    uint64_t v9 = v7 + 24 * v4;
    uint64_t result = *(void *)(v9 + 8);
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_191CF6348(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = *v12;
      uint64_t result = v12[1];
      uint64_t v10 = v12[2];
      *(_OWORD *)unint64_t v12 = *(_OWORD *)(v12 - 3);
      void v12[2] = *(v12 - 1);
      *(v12 - 2) = result;
      *(v12 - 1) = v10;
      *(v12 - 3) = v14;
      v12 -= 3;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_191B424EC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v28 = __src;
  uint64_t v27 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      unint64_t v18 = &v4[24 * v11];
      uint64_t v26 = v18;
      uint64_t v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v19 = a3 - 24;
        do
        {
          uint64_t v20 = (char *)(v19 + 24);
          BOOL v21 = *((void *)v18 - 2) == *((void *)v6 - 2) && *((void *)v18 - 1) == *((void *)v6 - 1);
          if (v21 || (sub_191CF6348() & 1) == 0)
          {
            uint64_t v26 = v18 - 24;
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 16) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
            }
            uint64_t v22 = v6;
            v18 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v22 = v6 - 24;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v22;
              *(void *)(v19 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v19 = v23;
            }
            uint64_t v28 = v6 - 24;
            if (v22 <= v7) {
              break;
            }
          }
          v19 -= 24;
          uint64_t v6 = v22;
        }
        while (v18 > v4);
      }
LABEL_48:
      sub_191B428C8((void **)&v28, &v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    unint64_t v12 = &v4[24 * v9];
    uint64_t v26 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      BOOL v13 = v4;
      while (1)
      {
        BOOL v14 = *((void *)v6 + 1) == *((void *)v13 + 1) && *((void *)v6 + 2) == *((void *)v13 + 2);
        if (v14 || (sub_191CF6348() & 1) == 0)
        {
          uint64_t v4 = v13 + 24;
          uint64_t v16 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          uint64_t v15 = v6 + 24;
          uint64_t v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_22;
          }
        }
        long long v17 = *(_OWORD *)v16;
        *((void *)v7 + 2) = *((void *)v16 + 2);
        *(_OWORD *)uint64_t v7 = v17;
LABEL_22:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v27 = v4;
        uint64_t v28 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

char *sub_191B427CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E34A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_191B428C8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_191CF6078();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

uint64_t sub_191B42998(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for ViewableTimelineEntry();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_191CF6078();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_191B42AD8(uint64_t a1)
{
  return sub_191B427CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_191B42AEC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  BOOL v21 = a4;
  swift_bridgeObjectRetain();
  id v10 = a4;
  int64_t v11 = (void *)sub_191B4FF68(&v21, a5);
  unint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  BOOL v21 = v11;
  unint64_t v22 = v13;
  long long v23 = v15;
  if (!a2) {
    goto LABEL_19;
  }
  if (!a3) {
    goto LABEL_20;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if (!(v13 >> 62))
  {
    uint64_t v16 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16 >= 1) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_191CF6018();
  swift_bridgeObjectRelease();
  if (v16 < 1)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    a3 = 0;
    goto LABEL_20;
  }
LABEL_6:
  uint64_t v17 = 0;
  unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_191B3CC80(v16 - 1);
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      BOOL v21 = v18;
      swift_bridgeObjectRelease();
      unint64_t v22 = (unint64_t)v18;
      swift_bridgeObjectRelease();
      long long v23 = v18;
    }
    *(void *)(a2 + 8 * v17) = v13;
    unint64_t v13 = v22;
    if (a3 - 1 == v17) {
      break;
    }
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v16 = sub_191CF6018();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    ++v17;
    if (v16 <= 0)
    {
      swift_bridgeObjectRelease();
      int64_t v11 = v21;
      uint64_t v15 = v23;
      a3 = v17;
      goto LABEL_20;
    }
  }
  int64_t v11 = v21;
  uint64_t v15 = v23;
LABEL_20:
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v15;
  return a3;
}

uint64_t sub_191B42CD0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v56 = a2;
  uint64_t v45 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBB8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191CF4058();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v44 - v12;
  uint64_t v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *v3;
  type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  unint64_t v18 = (char *)v16 + *(int *)(v14 + 28);
  uint64_t v55 = v8;
  char v19 = *(void (**)(void))(v8 + 16);
  uint64_t v52 = v8 + 16;
  uint64_t v53 = v18;
  char v51 = v19;
  v19();
  id v20 = v17;
  uint64_t v21 = sub_191B4EA70(MEMORY[0x1E4FBC860]);
  uint64_t v57 = v20;
  id v22 = v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_191B4FF68(&v57, v21);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  *uint64_t v16 = v23;
  v16[1] = v25;
  uint64_t v28 = v56;
  v16[2] = v27;
  uint64_t result = sub_191B53970((uint64_t)v3, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  if (!v28)
  {
    uint64_t v30 = 0;
LABEL_27:
    sub_191B539D0((uint64_t)v16, v45, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    return v30;
  }
  if (!a3)
  {
LABEL_26:
    uint64_t v30 = a3;
    goto LABEL_27;
  }
  if (a3 < 0) {
    goto LABEL_29;
  }
  uint64_t v30 = 0;
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v46 = a3;
  unint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  while (1)
  {
    unint64_t v31 = v16[1];
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v43 = sub_191CF6018();
      swift_bridgeObjectRelease();
      unint64_t v33 = v43 - 1;
      if (v43 < 1)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t v40 = (uint64_t)v54;
        (*v49)(v54, 1, 1, v7);
LABEL_24:
        sub_191B01770(v40, (uint64_t *)&unk_1EB44BBB8);
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v33 = v32 - 1;
      if (v32 < 1) {
        goto LABEL_23;
      }
    }
    sub_191B3CC80(v33);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = MEMORY[0x1E4FBC860];
      *uint64_t v16 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      v16[1] = v35;
      swift_bridgeObjectRelease();
      v16[2] = v35;
    }
    uint64_t v56 = v28;
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v51)(v11, v53, v7);
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_191CF6018();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v36) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v36) {
        goto LABEL_19;
      }
    }
    if (v36 < 1) {
      break;
    }
    for (uint64_t i = 0; i != v36; ++i)
    {
      if ((v31 & 0xC000000000000001) != 0)
      {
        uint64_t v38 = MEMORY[0x192FE4B60](i, v31);
      }
      else
      {
        uint64_t v38 = *(void *)(v31 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(void **)(v38 + 16) + 112))(v11);
      swift_release();
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v39 = *v48;
    uint64_t v40 = (uint64_t)v54;
    (*v48)(v54, v11, v7);
    (*v49)((char *)v40, 0, 1, v7);
    if ((*v47)(v40, 1, v7) == 1) {
      goto LABEL_24;
    }
    ++v30;
    BOOL v41 = v50;
    v39(v50, (char *)v40, v7);
    uint64_t v42 = v56;
    v39(v56, v41, v7);
    a3 = v46;
    if (v30 == v46) {
      goto LABEL_26;
    }
    uint64_t v28 = &v42[*(void *)(v55 + 72)];
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_191B431E0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    char v19 = (void *)(*(void *)(a4 + 48) + 24 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    void *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    if (v12 == v9)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_191B43400(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_191CF5CE8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_191CF5C78();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_191CF5CD8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_191B43F80(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_191B445D0();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_191B456DC(a2, v17);
    *unint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_191CF5C78();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_191CF5268();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_191B45918(v15, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  while ((sub_191CF52F8() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_191B43698(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_191CF5CE8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for WidgetURLHandler();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_191CF5CD8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_191B44188(v7, result + 1);
    uint64_t v22 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_191B448AC();
      uint64_t v17 = v22;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_191B45788(a2, v17);
    *unint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_191CF6468();
    swift_bridgeObjectRetain();
    sub_191CF5B68();
    uint64_t v10 = sub_191CF64C8();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
      swift_retain();
      char v13 = sub_191CF5B58();
      swift_release();
      if (v13)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v14 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        swift_retain();
        char v15 = sub_191CF5B58();
        swift_release();
        if (v15) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v19 = swift_retain();
    sub_191B45AA4(v19, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_191B43980(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_191CF6468();
  swift_bridgeObjectRetain();
  sub_191CF5388();
  uint64_t v8 = sub_191CF64C8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_191CF6348() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_191CF6348() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_191B45C84(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_191B43B30(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_191CF6468();
  swift_bridgeObjectRetain();
  sub_191CF50D8();
  uint64_t v6 = sub_191CF64C8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_191B45E20(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  if ((sub_191CF50C8() & 1) == 0)
  {
    uint64_t v9 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((sub_191CF50C8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_191B43C7C(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_191CF5CE8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_191CF3898();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_191CF5CD8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_191B44390(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_191B45104();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_191B4582C(a2, v17);
    *unint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_191CF3898();
  sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_191CF5268();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_191B45F7C(v15, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_191B4FAC8(&qword_1E92E06B8, 255, MEMORY[0x1E4F1AB18]);
  while ((sub_191CF52F8() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_191B43F80(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E34B8);
    uint64_t v2 = sub_191CF5D68();
    uint64_t v14 = v2;
    sub_191CF5CC8();
    if (sub_191CF5CF8())
    {
      sub_191CF5C78();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_191B445D0();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_191CF5268();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_191CF5CF8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_191B44188(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3468);
    uint64_t v2 = sub_191CF5D68();
    uint64_t v14 = v2;
    sub_191CF5CC8();
    if (sub_191CF5CF8())
    {
      type metadata accessor for WidgetURLHandler();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_191B448AC();
          uint64_t v2 = v14;
        }
        sub_191CF6468();
        sub_191CF5B68();
        uint64_t result = sub_191CF64C8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_191CF5CF8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_191B44390(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0700);
    uint64_t v2 = sub_191CF5D68();
    uint64_t v14 = v2;
    sub_191CF5CC8();
    if (sub_191CF5CF8())
    {
      sub_191CF3898();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_191B45104();
          uint64_t v2 = v14;
        }
        sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
        uint64_t result = sub_191CF5268();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_191CF5CF8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_191B445D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E34B8);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_191CF5C78();
      uint64_t result = sub_191CF5268();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191B448AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3468);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_191CF6468();
      sub_191CF5B68();
      uint64_t result = sub_191CF64C8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191B44B68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ABC8);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_191CF6468();
      sub_191CF5388();
      uint64_t result = sub_191CF64C8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191B44E48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CB8);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_191CF6468();
      sub_191CF50D8();
      uint64_t result = sub_191CF64C8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191B45104()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0700);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_191CF3898();
      sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
      uint64_t result = sub_191CF5268();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191B45430()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449998);
  uint64_t result = sub_191CF5D58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_191CF6468();
      sub_191CF6478();
      uint64_t result = sub_191CF64C8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_191B456DC(uint64_t a1, uint64_t a2)
{
  sub_191CF5C78();
  sub_191CF5268();
  unint64_t result = sub_191CF5CB8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_191B45788(uint64_t a1, uint64_t a2)
{
  sub_191CF6468();
  sub_191CF5B68();
  sub_191CF64C8();
  unint64_t result = sub_191CF5CB8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_191B4582C(uint64_t a1, uint64_t a2)
{
  sub_191CF3898();
  sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
  sub_191CF5268();
  unint64_t result = sub_191CF5CB8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_191B45918(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191B445D0();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_191B46624(&qword_1E92E34B8);
      goto LABEL_12;
    }
    sub_191B4695C();
  }
  uint64_t v8 = *v3;
  sub_191CF5C78();
  unint64_t result = sub_191CF5268();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    do
    {
      unint64_t result = sub_191CF52F8();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_191CF63C8();
  __break(1u);
  return result;
}

uint64_t sub_191B45AA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_191B448AC();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_191B46624(&qword_1E92E3468);
      goto LABEL_14;
    }
    sub_191B46C24();
  }
  uint64_t v8 = *v3;
  sub_191CF6468();
  sub_191CF5B68();
  unint64_t result = sub_191CF64C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for WidgetURLHandler();
    sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
    swift_retain();
    char v10 = sub_191CF5B58();
    unint64_t result = swift_release();
    if (v10)
    {
LABEL_13:
      unint64_t result = sub_191CF63C8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        swift_retain();
        char v12 = sub_191CF5B58();
        unint64_t result = swift_release();
        if (v12) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v13 + 48) + 8 * a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_191B45C84(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_191B44B68();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_191B462CC();
      goto LABEL_22;
    }
    sub_191B46EB4();
  }
  uint64_t v11 = *v4;
  sub_191CF6468();
  sub_191CF5388();
  unint64_t result = sub_191CF64C8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    BOOL v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_191CF6348(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_191CF63C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        char v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_191CF6348();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_191B45E20(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_191B44E48();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_191B46480();
      goto LABEL_14;
    }
    sub_191B47164();
  }
  uint64_t v8 = *v3;
  sub_191CF6468();
  sub_191CF50D8();
  unint64_t result = sub_191CF64C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    unint64_t result = sub_191CF50C8();
    if (result)
    {
LABEL_13:
      unint64_t result = sub_191CF63C8();
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        unint64_t result = sub_191CF50C8();
        if (result) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v11 + 16) = v14;
  }
  return result;
}

uint64_t sub_191B45F7C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191B45104();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_191B46624((uint64_t *)&unk_1E92E0700);
      goto LABEL_12;
    }
    sub_191B473EC();
  }
  uint64_t v8 = *v3;
  sub_191CF3898();
  sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
  unint64_t result = sub_191CF5268();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_191B4FAC8(&qword_1E92E06B8, 255, MEMORY[0x1E4F1AB18]);
    do
    {
      unint64_t result = sub_191CF52F8();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_191CF63C8();
  __break(1u);
  return result;
}

uint64_t sub_191B46170(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_191B45430();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_191B467C8();
      goto LABEL_14;
    }
    sub_191B476F0();
  }
  uint64_t v8 = *v3;
  sub_191CF6468();
  sub_191CF6478();
  unint64_t result = sub_191CF64C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_191CF63C8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_191B462C0()
{
  return sub_191B46624(&qword_1E92E3468);
}

void *sub_191B462CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ABC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF5D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191B46480()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF5D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191B46618()
{
  return sub_191B46624((uint64_t *)&unk_1E92E0700);
}

void *sub_191B46624(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_191CF5D48();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191B467C8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449998);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF5D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191B4695C()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E34B8);
  uint64_t v2 = sub_191CF5D58();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v24 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v12);
    sub_191CF5C78();
    swift_retain();
    uint64_t result = sub_191CF5268();
    uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(void *)(*(void *)(v3 + 48) + 8 * v10) = v16;
    ++*(void *)(v3 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B46C24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3468);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_191CF6468();
    swift_retain();
    sub_191CF5B68();
    uint64_t result = sub_191CF64C8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B46EB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44ABC8);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_191CF6468();
    swift_bridgeObjectRetain();
    sub_191CF5388();
    uint64_t result = sub_191CF64C8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B47164()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0CB8);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_191CF6468();
    sub_191CF50D8();
    uint64_t result = sub_191CF64C8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B473EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0700);
  uint64_t v3 = sub_191CF5D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_191CF3898();
    sub_191B4FAC8(&qword_1E92E06B0, 255, MEMORY[0x1E4F1AB18]);
    swift_retain();
    uint64_t result = sub_191CF5268();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B476F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449998);
  uint64_t result = sub_191CF5D58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_191CF6468();
    sub_191CF6478();
    uint64_t result = sub_191CF64C8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191B4796C(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x192FE4B70](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t sub_191B47A2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C028);
    uint64_t v2 = sub_191CF6058();
    uint64_t v18 = v2;
    sub_191CF5F78();
    uint64_t v3 = sub_191CF5FA8();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_191CF5C78();
      do
      {
        swift_dynamicCast();
        type metadata accessor for WidgetEnvironment.AnyKey();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_191B48C50(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_191CF5268();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_191CF5FA8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_191B47C6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B510);
  char v36 = a2;
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v34) {
          goto LABEL_33;
        }
        unint64_t v22 = v35[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v22 = v35[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v36)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v22 = v35[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v20);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v31 = v28[2];
      uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((v36 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_191CF6468();
      swift_bridgeObjectRetain();
      sub_191CF5388();
      swift_bridgeObjectRelease();
      uint64_t result = sub_191CF64C8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 24 * v17);
      *uint64_t v18 = v30;
      v18[1] = v29;
      void v18[2] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B47F94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C018);
  char v37 = a2;
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v20);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v31 = v28[2];
      uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
      if ((v37 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        id v33 = v32;
      }
      sub_191CF6468();
      swift_bridgeObjectRetain();
      sub_191CF5388();
      swift_bridgeObjectRelease();
      uint64_t result = sub_191CF64C8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 24 * v17);
      *uint64_t v18 = v30;
      v18[1] = v29;
      void v18[2] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B482C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A278);
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_191B4F9C0(v24, v35);
      }
      else
      {
        sub_191B4F964((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_191CF6468();
      sub_191CF5388();
      uint64_t result = sub_191CF64C8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_191B4F9C0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B485C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E17E8);
  uint64_t result = sub_191CF6048();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v42 = a2;
    int64_t v8 = 0;
    uint64_t v44 = (uint64_t *)(v5 + 64);
    uint64_t v45 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v39 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v41 = v3;
    int64_t v43 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v44;
        if (v17 >= v43) {
          goto LABEL_31;
        }
        unint64_t v18 = v44[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v43) {
            goto LABEL_31;
          }
          unint64_t v18 = v44[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v43)
            {
LABEL_31:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v41;
                goto LABEL_38;
              }
              if (v40 >= 64) {
                bzero(v44, 8 * v43);
              }
              else {
                uint64_t *v44 = v39;
              }
              uint64_t v3 = v41;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v44[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v43) {
                  goto LABEL_31;
                }
                unint64_t v18 = v44[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 88 * v16;
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v49 = *(unsigned char *)(v20 + 81);
      char v50 = *(unsigned char *)(v20 + 82);
      char v48 = *(unsigned char *)(v20 + 80);
      uint64_t v46 = *(void *)(v20 + 64);
      uint64_t v47 = *(void *)(v20 + 72);
      char v22 = *(unsigned char *)(v20 + 61);
      char v23 = *(unsigned char *)(v20 + 60);
      uint64_t v24 = *(void *)(v20 + 52);
      uint64_t v25 = *(void *)(v20 + 44);
      char v26 = *(unsigned char *)(v20 + 40);
      uint64_t v28 = *(void *)(v20 + 24);
      uint64_t v27 = *(void *)(v20 + 32);
      uint64_t v30 = *(void *)(v20 + 8);
      uint64_t v29 = *(void *)(v20 + 16);
      uint64_t v31 = *(void *)v20;
      uint64_t result = sub_191CF6458();
      uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v12 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v13 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 88 * v13;
      *(void *)uint64_t v14 = v31;
      *(void *)(v14 + 8) = v30;
      *(void *)(v14 + 16) = v29;
      *(void *)(v14 + 24) = v28;
      *(void *)(v14 + 32) = v27;
      *(unsigned char *)(v14 + 40) = v26;
      *(void *)(v14 + 44) = v25;
      *(void *)(v14 + 52) = v24;
      *(unsigned char *)(v14 + 60) = v23;
      *(unsigned char *)(v14 + 61) = v22;
      uint64_t v5 = v45;
      *(void *)(v14 + 64) = v46;
      *(void *)(v14 + 72) = v47;
      *(unsigned char *)(v14 + 80) = v48;
      *(unsigned char *)(v14 + 81) = v49;
      *(unsigned char *)(v14 + 82) = v50;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B48910(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B930);
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    int64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    char v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_191B4F9C0(v23, v35);
    }
    else
    {
      sub_191B4F964((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_191CF6468();
    type metadata accessor for CFString(0);
    sub_191B4FAC8((unint64_t *)&unk_1EB44B910, 255, type metadata accessor for CFString);
    sub_191CF3538();
    uint64_t result = sub_191CF64C8();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_191B4F9C0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B48C50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C028);
  char v35 = a2;
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_191CF5C78();
    uint64_t result = sub_191CF5268();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B48F6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C020);
  char v36 = a2;
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_191CF6468();
    sub_191CF5388();
    uint64_t result = sub_191CF64C8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B49284(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B08);
  uint64_t result = sub_191CF6048();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v33) {
          goto LABEL_31;
        }
        unint64_t v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v33) {
            goto LABEL_31;
          }
          unint64_t v18 = v34[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_31:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v33) {
                  goto LABEL_31;
                }
                unint64_t v18 = v34[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v21 = *(void *)(v5 + 56) + 24 * v16;
      uint64_t v23 = *(void *)(v21 + 8);
      uint64_t v22 = *(void *)(v21 + 16);
      char v24 = *(unsigned char *)v21;
      sub_191CF6468();
      sub_191CF6478();
      uint64_t result = sub_191CF64C8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
      uint64_t v14 = *(void *)(v7 + 56) + 24 * v13;
      *(unsigned char *)uint64_t v14 = v24;
      *(void *)(v14 + 8) = v23;
      *(void *)(v14 + 16) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B4956C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB449580);
  char v38 = a2;
  uint64_t v6 = sub_191CF6048();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_191CF6468();
    sub_191CF5388();
    uint64_t result = sub_191CF64C8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191B4987C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4496C8);
  char v6 = a2;
  uint64_t v7 = sub_191CF6048();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = *(void *)(v5 + 48) + v30;
      char v32 = *(unsigned char *)v31;
      id v33 = *(void **)(v31 + 8);
      long long v38 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0) {
        id v34 = v33;
      }
      sub_191CF6468();
      sub_191CF6478();
      sub_191CF5B68();
      uint64_t result = sub_191CF64C8();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      uint64_t v20 = *(void *)(v8 + 48) + v19;
      *(unsigned char *)uint64_t v20 = v32;
      *(void *)(v20 + 8) = v33;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v38;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_191B49B88(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3478);
  int v35 = a2;
  uint64_t v9 = sub_191CF6048();
  uint64_t v10 = (void *)v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    char v32 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    uint64_t v30 = v2;
    int64_t v31 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v17 << 6);
      }
      else
      {
        int64_t v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        int64_t v23 = v32;
        if (v22 >= v31) {
          goto LABEL_24;
        }
        unint64_t v24 = v32[v22];
        ++v17;
        if (!v24)
        {
          int64_t v17 = v22 + 1;
          if (v22 + 1 >= v31) {
            goto LABEL_24;
          }
          unint64_t v24 = v32[v17];
          if (!v24)
          {
            int64_t v25 = v22 + 2;
            if (v25 >= v31)
            {
LABEL_24:
              swift_release();
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_31;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v8 + 32);
              if (v28 >= 64) {
                bzero(v23, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v23 = -1 << v28;
              }
              uint64_t v3 = v30;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v24 = v32[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v17 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_33;
                }
                if (v17 >= v31) {
                  goto LABEL_24;
                }
                unint64_t v24 = v32[v17];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v25;
          }
        }
LABEL_21:
        unint64_t v14 = (v24 - 1) & v24;
        unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
      }
      uint64_t v26 = *(void *)(v33 + 72);
      uint64_t v27 = *(void *)(v8 + 48) + v26 * v21;
      if (v35)
      {
        sub_191B539D0(v27, (uint64_t)v7, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
        uint64_t v18 = *(void *)(*(void *)(v8 + 56) + 8 * v21);
      }
      else
      {
        sub_191B1E76C(v27, (uint64_t)v7);
        uint64_t v18 = *(void *)(*(void *)(v8 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      sub_191CF6468();
      sub_191CF3178();
      sub_191B4FAC8(&qword_1E92E3480, 255, MEMORY[0x1E4F27928]);
      sub_191CF5278();
      WidgetEnvironment.Storage.hash.getter();
      sub_191CF6478();
      sub_191CF64C8();
      unint64_t v19 = sub_191CF5CB8();
      *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_191B539D0((uint64_t)v7, v10[6] + v26 * v19, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      *(void *)(v10[7] + 8 * v19) = v18;
      ++v10[2];
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_191B49F34(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_191CF5F68();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447168);
  int v45 = a2;
  uint64_t v9 = sub_191CF6048();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    long long v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    BOOL v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    int64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_191B4F9C0((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_191B4F964(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_191CF5268();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_191B4F9C0(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_191B4A330(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499A0);
  uint64_t result = sub_191CF6048();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_191CF6468();
      sub_191CF6478();
      uint64_t result = sub_191CF64C8();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_191B4A604(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_191CF5CA8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_191CF6468();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_191CF5388();
        uint64_t v9 = sub_191CF64C8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = v11 + 24 * v3;
          uint64_t v13 = (long long *)(v11 + 24 * v6);
          if (v3 != v6 || v12 >= (unint64_t)v13 + 24)
          {
            long long v14 = *v13;
            *(void *)(v12 + 16) = *((void *)v13 + 2);
            *(_OWORD *)unint64_t v12 = v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (void *)(v15 + 8 * v3);
          unint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *unint64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_191B4A804(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_191CF5CA8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_191CF6468();
        type metadata accessor for CFString(0);
        sub_191B4FAC8((unint64_t *)&unk_1EB44B910, 255, type metadata accessor for CFString);
        id v12 = v11;
        sub_191CF3538();
        uint64_t v13 = sub_191CF64C8();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = (void *)(v15 + 8 * v3);
          unint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            *unint64_t v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v19 = (_OWORD *)(v18 + 32 * v3);
          uint64_t v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 2))
          {
            long long v10 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_191B4AA2C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF5F68();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_191CF5CA8();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_191CF5268();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  uint64_t *v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_191B4ACE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_191B1E938(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_191B4BE2C();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_191B47C6C(result, a5 & 1);
  uint64_t result = sub_191B1E938(a3, a4);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_17:
    uint64_t result = sub_191CF63D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v22 = (void *)(v20[6] + 24 * v14);
  *uint64_t v22 = a2;
  v22[1] = a3;
  _OWORD v22[2] = a4;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v23 = v20[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v25;
  swift_retain();

  return swift_bridgeObjectRetain();
}

void sub_191B4AE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_191B1E938(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_191B4BFF0();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_191B47F94(v17, a5 & 1);
  unint64_t v22 = sub_191B1E938(a3, a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_191CF63D8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v24 = (void *)(v20[6] + 24 * v14);
  *BOOL v24 = a2;
  v24[1] = a3;
  v24[2] = a4;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v27;
  swift_retain();

  swift_bridgeObjectRetain();
}

_OWORD *sub_191B4AFF8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_191B1CB2C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_191B4C1C0();
      goto LABEL_7;
    }
    sub_191B482C0(v15, a4 & 1);
    unint64_t v21 = sub_191B1CB2C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_191CF63D8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_191B4F9C0(a1, v19);
  }
LABEL_13:
  sub_191B4BB40(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_191B4B14C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_191B1CBF4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_191B4C3A8();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 88 * v10;
      long long v18 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v17 + 48) = v18;
      *(_OWORD *)(v17 + 64) = *(_OWORD *)(a1 + 64);
      *(_DWORD *)(v17 + 79) = *(_DWORD *)(a1 + 79);
      long long v19 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v19;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    uint64_t v21 = v16[7] + 88 * v10;
    long long v22 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)a1;
    *(_OWORD *)(v21 + 16) = v22;
    *(_DWORD *)(v21 + 79) = *(_DWORD *)(a1 + 79);
    long long v23 = *(_OWORD *)(a1 + 64);
    long long v24 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v21 + 64) = v23;
    *(_OWORD *)(v21 + 32) = v24;
    uint64_t v25 = v16[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      v16[2] = v27;
      return result;
    }
    goto LABEL_14;
  }
  sub_191B485C0(result, a3 & 1);
  uint64_t result = sub_191B1CBF4(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_191CF63D8();
  __break(1u);
  return result;
}

_OWORD *sub_191B4B2C0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_191B1D9F0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_191B4C590();
      goto LABEL_7;
    }
    sub_191B48910(v12, a3 & 1);
    unint64_t v18 = sub_191B1D9F0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_191CF63D8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_191B4F9C0(a1, v16);
  }
LABEL_13:
  sub_191B4BBAC(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_191B4B404(char a1, uint64_t a2, char a3, double a4, double a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_191B1DAA4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      *(unsigned char *)uint64_t v21 = a1;
      *(double *)(v21 + 8) = a4;
      *(double *)(v21 + 16) = a5;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_191B4CABC();
    goto LABEL_7;
  }
  sub_191B49284(result, a3 & 1);
  uint64_t result = sub_191B1DAA4(a2);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_15:
    type metadata accessor for CHSWidgetFamily(0);
    uint64_t result = sub_191CF63D8();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_191B4BC14(v14, a2, a1, v20, a4, a5);
}

void sub_191B4B548(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_191B1CB2C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_191B4CC64();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_191B4956C(v15, a4 & 1);
  unint64_t v20 = sub_191B1CB2C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_191CF63D8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  *char v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

id sub_191B4B6B8(char a1, void *a2, char a3, double a4, double a5)
{
  unint64_t v6 = (void **)v5;
  char v11 = (void *)*v5;
  unint64_t v13 = sub_191B1DBE0(a1, (uint64_t)a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  id result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= (uint64_t)result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v6;
    if (v17)
    {
LABEL_8:
      unint64_t v20 = (double *)(v19[7] + 16 * v13);
      *unint64_t v20 = a4;
      v20[1] = a5;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = sub_191B4CE18();
    goto LABEL_7;
  }
  sub_191B4987C((uint64_t)result, a3 & 1);
  id result = (id)sub_191B1DBE0(a1, (uint64_t)a2);
  if ((v17 & 1) != (v21 & 1))
  {
LABEL_15:
    id result = (id)sub_191CF63D8();
    __break(1u);
    return result;
  }
  unint64_t v13 = (unint64_t)result;
  uint64_t v19 = *v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_191B4BC64(v13, a1, (uint64_t)a2, v19, a4, a5);

  return a2;
}

uint64_t sub_191B4B7FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_191B1DC60(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_191B4CFCC();
    goto LABEL_7;
  }
  sub_191B49B88(v16, a3 & 1);
  unint64_t v22 = sub_191B1DC60(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_191CF63D8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_191B1E76C(a2, (uint64_t)v10);
  return sub_191B4BCB8(v13, (uint64_t)v10, a1, v19);
}

_OWORD *sub_191B4B968(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_191CF5F68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_191B1DB7C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_191B4D240();
      goto LABEL_7;
    }
    sub_191B49F34(v17, a3 & 1);
    unint64_t v23 = sub_191B1DB7C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_191B4BD6C(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_191CF63D8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  char v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);

  return sub_191B4F9C0(a1, v21);
}

_OWORD *sub_191B4BB40(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_191B4F9C0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_191B4BBAC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_191B4F9C0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_191B4BC14(unint64_t result, uint64_t a2, char a3, void *a4, double a5, double a6)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v6 = a4[7] + 24 * result;
  *(unsigned char *)uint64_t v6 = a3;
  *(double *)(v6 + 8) = a5;
  *(double *)(v6 + 16) = a6;
  uint64_t v7 = a4[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a4[2] = v9;
  }
  return result;
}

unint64_t sub_191B4BC64(unint64_t result, char a2, uint64_t a3, void *a4, double a5, double a6)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a4[6] + 16 * result;
  *(unsigned char *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  uint64_t v7 = (double *)(a4[7] + 16 * result);
  *uint64_t v7 = a5;
  v7[1] = a6;
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_191B4BCB8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  uint64_t result = sub_191B539D0(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_191B4BD6C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_191CF5F68();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_191B4F9C0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_191B4BE2C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B510);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 24 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v18;
    v23[1] = v19;
    _OWORD v23[2] = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_191B4BFF0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C018);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 24 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void **)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = *v17;
    v22[1] = v18;
    _OWORD v22[2] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_191B4C1C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A278);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_191B4F964(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_191B4F9C0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_191B4C3A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E17E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = v3 + 64;
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || result >= v2 + 64 + 8 * v7) {
    unint64_t result = (unint64_t)memmove((void *)result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v34 = __clz(__rbit64(v32));
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = v34 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 88 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 32);
    char v21 = *(unsigned char *)(v19 + 40);
    char v22 = *(unsigned char *)(v19 + 60);
    unint64_t result = *(unsigned __int8 *)(v19 + 61);
    char v23 = *(unsigned char *)(v19 + 80);
    char v24 = *(unsigned char *)(v19 + 81);
    char v25 = *(unsigned char *)(v19 + 82);
    long long v26 = *(_OWORD *)(v19 + 64);
    long long v27 = *(_OWORD *)(v19 + 44);
    long long v28 = *(_OWORD *)v19;
    long long v29 = *(_OWORD *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v30 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v30 = v28;
    *(_OWORD *)(v30 + 16) = v29;
    *(void *)(v30 + 32) = v20;
    *(unsigned char *)(v30 + 40) = v21;
    *(_OWORD *)(v30 + 44) = v27;
    *(unsigned char *)(v30 + 60) = v22;
    *(unsigned char *)(v30 + 61) = result;
    *(_OWORD *)(v30 + 64) = v26;
    *(unsigned char *)(v30 + 80) = v23;
    *(unsigned char *)(v30 + 81) = v24;
    *(unsigned char *)(v30 + 82) = v25;
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_191B4C590()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B930);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_191B4F964(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_191B4F9C0(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_191B4C758()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44C028);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_191B4C904()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_191B4CABC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_191B4CC64()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB449580);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    char v20 = *(void **)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_191B4CE18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4496C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v21 = v18;
    *(void *)(v21 + 8) = v19;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    id result = v19;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_191B4CFCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3478);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_191CF6038();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_191B1E76C(*(void *)(v5 + 48) + v18, (uint64_t)v4);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_191B539D0((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_191B4D240()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191CF5F68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447168);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_191CF6038();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  unint64_t v22 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v23 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    sub_191B4F964(*(void *)(v6 + 56) + v18, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = sub_191B4F9C0(v26, (_OWORD *)(*(void *)(v8 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_191B4D4E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191CF6038();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_191B4D68C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_191B4D73C(v6, a2, a3);
  return sub_191B4D6F4;
}

void sub_191B4D6F4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_191B4D73C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x192FE4B60](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_191B4D7BC;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B4D7BC()
{
  return swift_release();
}

uint64_t sub_191B4D7C4(uint64_t a1)
{
  return sub_191AFBB5C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_191B4D7D8(void *a1)
{
  return sub_191AFC014(0, a1[2], 0, a1);
}

uint64_t sub_191B4D7EC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

char *sub_191B4D874(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  id result = (char *)sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B4D960(uint64_t a1, uint64_t a2)
{
  sub_191CF5C78();
  uint64_t v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 16) + 104))();
  uint64_t v5 = (*(uint64_t (**)(void))(**(void **)(a2 + 16) + 104))();
  char v6 = MEMORY[0x192FE49D0](v4, v5);
  swift_release();
  swift_release();
  if (v6) {
    return (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 24) + 16) + 96))(*(void *)(*(void *)(a2 + 24) + 16)) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_191B4DA60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_191B4DA94()
{
  if (qword_1EB44AA88 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB44CB38;
  uint64_t v0 = unk_1EB44CB40;
  uint64_t v2 = qword_1EB44CB48;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(1, v1, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44AA38 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB44CAD8;
  uint64_t v6 = unk_1EB44CAE0;
  uint64_t v7 = qword_1EB44CAE8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(2, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44AA48 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EB44CAF8;
  uint64_t v10 = unk_1EB44CB00;
  uint64_t v11 = qword_1EB44CB08;
  swift_retain();
  swift_bridgeObjectRetain();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(3, v9, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44AA78 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EB44CB18;
  uint64_t v14 = unk_1EB44CB20;
  uint64_t v15 = qword_1EB44CB28;
  swift_retain();
  swift_bridgeObjectRetain();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(4, v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A8F0 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EB44C9E0;
  uint64_t v18 = *(void *)algn_1EB44C9E8;
  uint64_t v19 = qword_1EB44C9F0;
  swift_retain();
  swift_bridgeObjectRetain();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(5, v17, v18, v19, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A9C0 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1EB44CA98;
  uint64_t v22 = unk_1EB44CAA0;
  uint64_t v23 = qword_1EB44CAA8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(6, v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A840 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1EB44CAB8;
  uint64_t v26 = unk_1EB44CAC0;
  uint64_t v27 = qword_1EB44CAC8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(7, v25, v26, v27, v28);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A950 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1EB44CA18;
  uint64_t v30 = *(void *)byte_1EB44CA20;
  uint64_t v31 = qword_1EB44CA28;
  swift_retain();
  swift_bridgeObjectRetain();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(8, v29, v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A960 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_1EB44CA38;
  uint64_t v34 = unk_1EB44CA40;
  uint64_t v35 = qword_1EB44CA48;
  swift_retain();
  swift_bridgeObjectRetain();
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(9, v33, v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44BCF0 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1EB44CC30;
  uint64_t v38 = *(void *)algn_1EB44CC38;
  uint64_t v39 = qword_1EB44CC40;
  swift_retain();
  swift_bridgeObjectRetain();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(10, v37, v38, v39, v40);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44BCC0 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EB44CC10;
  uint64_t v42 = *(void *)algn_1EB44CC18;
  uint64_t v43 = qword_1EB44CC20;
  swift_retain();
  swift_bridgeObjectRetain();
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(11, v41, v42, v43, v44);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44BD08 != -1) {
    swift_once();
  }
  uint64_t v45 = qword_1EB44CC70;
  uint64_t v46 = *(void *)algn_1EB44CC78;
  uint64_t v47 = qword_1EB44CC80;
  swift_retain();
  swift_bridgeObjectRetain();
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(12, v45, v46, v47, v48);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44BD00 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_1EB44CC50;
  uint64_t v50 = *(void *)algn_1EB44CC58;
  uint64_t v51 = qword_1EB44CC60;
  swift_retain();
  swift_bridgeObjectRetain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(13, v49, v50, v51, v52);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A9A8 != -1) {
    swift_once();
  }
  uint64_t v53 = qword_1EB44CA58;
  uint64_t v54 = unk_1EB44CA60;
  uint64_t v55 = qword_1EB44CA68;
  swift_retain();
  swift_bridgeObjectRetain();
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(14, v53, v54, v55, v56);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A940 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_1EB44CA00;
  uint64_t v58 = *(void *)algn_1EB44CA08;
  uint64_t v59 = qword_1EB44CA10;
  swift_retain();
  swift_bridgeObjectRetain();
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(16, v57, v58, v59, v60);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A9B0 != -1) {
    swift_once();
  }
  uint64_t v61 = qword_1EB44CA78;
  uint64_t v62 = unk_1EB44CA80;
  uint64_t v63 = qword_1EB44CA88;
  swift_retain();
  swift_bridgeObjectRetain();
  char v64 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(18, v61, v62, v63, v64);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A860 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_1EB44C9C0;
  uint64_t v66 = *(void *)algn_1EB44C9C8;
  uint64_t v67 = qword_1EB44C9D0;
  swift_retain();
  swift_bridgeObjectRetain();
  char v68 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(19, v65, v66, v67, v68);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A6A8 != -1) {
    swift_once();
  }
  uint64_t v69 = qword_1EB44C900;
  uint64_t v70 = *(void *)algn_1EB44C908;
  uint64_t v71 = qword_1EB44C910;
  swift_retain();
  swift_bridgeObjectRetain();
  char v72 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(20, v69, v70, v71, v72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A5E8 != -1) {
    swift_once();
  }
  uint64_t v73 = qword_1EB44C8A8;
  uint64_t v74 = unk_1EB44C8B0;
  uint64_t v75 = qword_1EB44C8B8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v76 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(21, v73, v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A6B0 != -1) {
    swift_once();
  }
  uint64_t v77 = qword_1EB44C920;
  uint64_t v78 = *(void *)algn_1EB44C928;
  uint64_t v79 = qword_1EB44C930;
  swift_retain();
  swift_bridgeObjectRetain();
  char v80 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(22, v77, v78, v79, v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A5F0 != -1) {
    swift_once();
  }
  uint64_t v81 = qword_1EB44C8C8;
  uint64_t v82 = unk_1EB44C8D0;
  uint64_t v83 = qword_1EB44C8D8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v84 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(23, v81, v82, v83, v84);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A720 != -1) {
    swift_once();
  }
  uint64_t v85 = qword_1EB44C998;
  uint64_t v86 = unk_1EB44C9A0;
  uint64_t v87 = qword_1EB44C9A8;
  swift_retain();
  swift_bridgeObjectRetain();
  char v88 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(24, v85, v86, v87, v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A710 != -1) {
    swift_once();
  }
  uint64_t v89 = qword_1EB44C978;
  uint64_t v90 = unk_1EB44C980;
  uint64_t v91 = qword_1EB44C988;
  swift_retain();
  swift_bridgeObjectRetain();
  char v92 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(25, v89, v90, v91, v92);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A6B8 != -1) {
    swift_once();
  }
  uint64_t v93 = qword_1EB44C940;
  uint64_t v94 = *(void *)algn_1EB44C948;
  uint64_t v95 = qword_1EB44C950;
  swift_retain();
  swift_bridgeObjectRetain();
  char v96 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(26, v93, v94, v95, v96);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A6C8 != -1) {
    swift_once();
  }
  uint64_t v97 = qword_1EB44C960;
  uint64_t v98 = *(void *)algn_1EB44C968;
  uint64_t v99 = qword_1EB44C970;
  swift_retain();
  swift_bridgeObjectRetain();
  char v100 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(27, v97, v98, v99, v100);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A128 != -1) {
    swift_once();
  }
  uint64_t v101 = qword_1EB44C868;
  uint64_t v102 = *(void *)byte_1EB44C870;
  uint64_t v103 = qword_1EB44C878;
  swift_retain();
  swift_bridgeObjectRetain();
  char v104 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(28, v101, v102, v103, v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1EB44A018 != -1) {
    swift_once();
  }
  uint64_t v105 = qword_1EB44C828;
  uint64_t v106 = unk_1EB44C830;
  uint64_t v107 = qword_1EB44C838;
  swift_retain();
  swift_bridgeObjectRetain();
  char v108 = swift_isUniquelyReferenced_nonNull_native();
  sub_191B4ACE4(29, v105, v106, v107, v108);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_191B4EA70(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_191CF6018();
    swift_bridgeObjectRelease();
  }
  sub_191CF5C78();
  uint64_t result = sub_191CF5708();
  uint64_t v4 = result;
  uint64_t v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_191CF6018();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      return v4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return v4;
    }
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x192FE4B60](i, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_191B43400(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_191B4EBAC(uint64_t a1)
{
  return sub_191B4ECBC(a1) & 1;
}

uint64_t sub_191B4EBC8@<X0>(void *a1@<X8>)
{
  sub_191B4EC44();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

void sub_191B4EC18(id *a1)
{
}

unint64_t sub_191B4EC44()
{
  unint64_t result = qword_1EB44A030;
  if (!qword_1EB44A030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A030);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.Storage()
{
  return self;
}

uint64_t sub_191B4ECBC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 8);
  v4[2] = *(void *)(v1 + 16);
  return sub_191B3B990((uint64_t (*)(uint64_t *))sub_191B53B44, (uint64_t)v4, v2) & 1;
}

uint64_t type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44BBD8);
}

uint64_t type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44BBC8);
}

uint64_t sub_191B4ED44(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191B4ED7C@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F520, a1);
}

uint64_t sub_191B4ED9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F520);
}

uint64_t sub_191B4EDBC@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F574, a1);
}

uint64_t sub_191B4EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F574);
}

uint64_t sub_191B4EDFC@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F4CC, a1);
}

uint64_t sub_191B4EE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F4CC);
}

uint64_t sub_191B4EE44@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F2C8();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B4EE94()
{
  return sub_191CF4078();
}

uint64_t sub_191B4EEF0@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F734, a1);
}

uint64_t sub_191B4EF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F734);
}

uint64_t sub_191B4EF30@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F788, a1);
}

uint64_t sub_191B4EF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F788);
}

uint64_t sub_191B4EF70@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_4Tm((void (*)(void))sub_191B4F31C, a1);
}

uint64_t sub_191B4EF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F31C);
}

uint64_t sub_191B4EFB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F68();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4EFE0()
{
  return sub_191CF3F78();
}

uint64_t sub_191B4F008@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3EE8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F038()
{
  return sub_191CF3EF8();
}

uint64_t sub_191B4F060@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F08();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F090()
{
  return sub_191CF3F18();
}

uint64_t sub_191B4F0B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F38();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F0E8()
{
  return sub_191CF3F48();
}

uint64_t sub_191B4F110()
{
  return sub_191CF3EA8();
}

uint64_t sub_191B4F134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3D548], MEMORY[0x1E4F3D128]);
}

uint64_t sub_191B4F174()
{
  return sub_191CF3D28();
}

uint64_t sub_191B4F198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3C5D0], MEMORY[0x1E4F3CF08]);
}

uint64_t sub_191B4F1D8()
{
  return sub_191CF3E08();
}

uint64_t sub_191B4F200()
{
  return sub_191CF3D88();
}

uint64_t sub_191B4F224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3D5D8], MEMORY[0x1E4F3CF98]);
}

uint64_t sub_191B4F264()
{
  return sub_191CF3E28();
}

uint64_t sub_191B4F288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3CD58], MEMORY[0x1E4F3D060]);
}

unint64_t sub_191B4F2C8()
{
  unint64_t result = qword_1EB44BB50;
  if (!qword_1EB44BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB50);
  }
  return result;
}

unint64_t sub_191B4F31C()
{
  unint64_t result = qword_1EB449D98;
  if (!qword_1EB449D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449D98);
  }
  return result;
}

unint64_t sub_191B4F378()
{
  unint64_t result = qword_1EB44BC48;
  if (!qword_1EB44BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BC48);
  }
  return result;
}

double sub_191B4F3CC@<D0>(_OWORD *a1@<X8>)
{
  sub_191B4F420();
  sub_191CF4068();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

unint64_t sub_191B4F420()
{
  unint64_t result = qword_1EB44BC58;
  if (!qword_1EB44BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BC58);
  }
  return result;
}

uint64_t sub_191B4F474@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3E78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F4A4()
{
  return sub_191CF3E88();
}

unint64_t sub_191B4F4CC()
{
  unint64_t result = qword_1EB44B1F0;
  if (!qword_1EB44B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B1F0);
  }
  return result;
}

unint64_t sub_191B4F520()
{
  unint64_t result = qword_1EB448F88;
  if (!qword_1EB448F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB448F88);
  }
  return result;
}

unint64_t sub_191B4F574()
{
  unint64_t result = qword_1EB448F90;
  if (!qword_1EB448F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB448F90);
  }
  return result;
}

uint64_t sub_191B4F5C8@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F638();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B4F618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, (void (*)(void))sub_191B4F638);
}

unint64_t sub_191B4F638()
{
  unint64_t result = qword_1EB44A000;
  if (!qword_1EB44A000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A000);
  }
  return result;
}

unint64_t sub_191B4F68C()
{
  unint64_t result = qword_1EB449DA0;
  if (!qword_1EB449DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449DA0);
  }
  return result;
}

unint64_t sub_191B4F6E0()
{
  unint64_t result = qword_1EB449DB0;
  if (!qword_1EB449DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449DB0);
  }
  return result;
}

unint64_t sub_191B4F734()
{
  unint64_t result = qword_1EB44A518;
  if (!qword_1EB44A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A518);
  }
  return result;
}

unint64_t sub_191B4F788()
{
  unint64_t result = qword_1EB44A510;
  if (!qword_1EB44A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A510);
  }
  return result;
}

uint64_t sub_191B4F7DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B4F814()
{
  return sub_191CF3E98();
}

uint64_t sub_191B4F838()
{
  return sub_191CF3D48();
}

uint64_t sub_191B4F85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191B37C0C(a1, a2, a3, a4, MEMORY[0x1E4F3C708], MEMORY[0x1E4F3CF70]);
}

uint64_t sub_191B4F8A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F58();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F8D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3EC8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F904@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3ED8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191CF3F28();
  *a1 = result & 1;
  return result;
}

uint64_t sub_191B4F964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_191B4F9C0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_191B4F9D0()
{
  unint64_t result = qword_1EB44BD70;
  if (!qword_1EB44BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BD70);
  }
  return result;
}

unint64_t sub_191B4FA24()
{
  unint64_t result = qword_1EB44BB78;
  if (!qword_1EB44BB78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44BB70);
    sub_191B4FAC8((unint64_t *)&unk_1EB44BB30, v1, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB78);
  }
  return result;
}

uint64_t sub_191B4FAC8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue()
{
  return self;
}

uint64_t sub_191B4FB34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BFF0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B4FC40(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  unint64_t v23 = a2 & 0xC000000000000001;
  uint64_t v24 = result + 32;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v5 = a2 + 56;
  unint64_t v20 = *(void *)(result + 16);
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v21 = v6;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v7 = *(void *)(v24 + 8 * v4);
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = sub_191CF6018();
        ++v4;
        if (!result)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
        ++v4;
        if (!v8) {
          goto LABEL_34;
        }
      }
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x192FE4B60](0, v7);
      }
      else
      {
        if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_39;
        }
        uint64_t v9 = *(void *)(v7 + 32);
        swift_retain();
      }
      uint64_t v10 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(**(void **)(v9 + 16) + 104))(v10);
      swift_release();
      if (!v23) {
        break;
      }
      swift_retain();
      char v11 = sub_191CF5D08();
      swift_release_n();
      if ((v11 & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      if (v4 == v2) {
        return v22;
      }
    }
    if (*(void *)(a2 + 16))
    {
      sub_191CF5C78();
      uint64_t v12 = sub_191CF5268();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if ((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        uint64_t v15 = ~v13;
        while ((sub_191CF52F8() & 1) == 0)
        {
          unint64_t v14 = (v14 + 1) & v15;
          if (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          {
            swift_release();
            unint64_t v2 = v20;
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        unint64_t v2 = v20;
        unint64_t v6 = v21;
        goto LABEL_23;
      }
    }
    swift_release();
LABEL_28:
    uint64_t v16 = v22;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_191AFB8E4(0, *(void *)(v22 + 16) + 1, 1);
      uint64_t v16 = v22;
    }
    unint64_t v18 = *(void *)(v16 + 16);
    unint64_t v17 = *(void *)(v16 + 24);
    uint64_t v19 = v16;
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_191AFB8E4(v17 > 1, v18 + 1, 1);
      uint64_t v19 = v22;
    }
    *(void *)(v19 + 16) = v18 + 1;
    uint64_t v22 = v19;
    *(void *)(v19 + 8 * v18 + 32) = v7;
  }
  while (v4 != v2);
  return v22;
}

uint64_t sub_191B4FF68(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  v13[2] = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_191B38120();

  if ((a2 & 0xC000000000000001) != 0)
  {
    if (!sub_191CF5CD8()) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a2 + 16))
  {
LABEL_3:
    uint64_t v5 = sub_191B4FC40((uint64_t)v4, a2);
    swift_bridgeObjectRelease();
    unint64_t v4 = (void *)v5;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  uint64_t v6 = v4[2];
  sub_191B3CB94(0, v6);
  sub_191B4796C(v6, 0);
  sub_191CF5558();
  unint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6)
  {
LABEL_12:
    sub_191BCC86C(v7);
    return (uint64_t)v4;
  }
  v13[0] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_191CF5EB8();
  unint64_t v8 = v4[4];
  if (v8 >> 62) {
    goto LABEL_29;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v9) {
    goto LABEL_30;
  }
LABEL_7:
  if ((v8 & 0xC000000000000001) != 0)
  {
    while (1)
    {
      MEMORY[0x192FE4B60](0, v8);
LABEL_10:
      swift_bridgeObjectRelease_n();
      sub_191CF5E88();
      sub_191CF5EC8();
      sub_191CF5ED8();
      unint64_t v8 = (unint64_t)v13;
      sub_191CF5E98();
      uint64_t v11 = v6 - 1;
      if (v6 == 1) {
        break;
      }
      uint64_t v12 = v4 + 5;
      while (v11)
      {
        unint64_t v8 = *v12;
        if (*v12 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v6 = sub_191CF6018();
          swift_bridgeObjectRelease();
          if (!v6) {
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v6 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v6) {
            goto LABEL_30;
          }
        }
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = MEMORY[0x192FE4B60](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_28;
          }
          uint64_t v6 = *(void *)(v8 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease_n();
        sub_191CF5E88();
        sub_191CF5EC8();
        sub_191CF5ED8();
        unint64_t v8 = (unint64_t)v13;
        sub_191CF5E98();
        ++v12;
        if (!--v11) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_191CF6018();
      if (result) {
        goto LABEL_7;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      __break(1u);
    }
LABEL_11:
    unint64_t v7 = v13[0];
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_191B50250()
{
  unint64_t result = qword_1E92E3390;
  if (!qword_1E92E3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3390);
  }
  return result;
}

unint64_t sub_191B502A8()
{
  unint64_t result = qword_1E92E1938;
  if (!qword_1E92E1938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1938);
  }
  return result;
}

uint64_t sub_191B502FC()
{
  return sub_191B4FAC8((unint64_t *)&unk_1E92E33A0, 255, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
}

uint64_t sub_191B50350()
{
  return 8;
}

void *sub_191B5035C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_191B50368(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_191B5037C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_191B503A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_191B503CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_191B503E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 80))();
}

uint64_t sub_191B503F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

ValueMetadata *type metadata accessor for WidgetEnvironment()
{
  return &type metadata for WidgetEnvironment;
}

unsigned char *storeEnumTagSinglePayload for WidgetEnvironment.DifferenceUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B504E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.DifferenceUsage()
{
  return &type metadata for WidgetEnvironment.DifferenceUsage;
}

uint64_t method lookup function for WidgetEnvironment.Storage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetEnvironment.Storage);
}

uint64_t dispatch thunk of WidgetEnvironment.Storage.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetEnvironment.Storage.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void **initializeBufferWithCopyOfBuffer for WidgetEnvironment.EnvironmentValuesEnumerator(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_191CF4058();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for WidgetEnvironment.EnvironmentValuesEnumerator(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_191CF4058();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **initializeWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **assignWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *initializeWithTake for WidgetEnvironment.EnvironmentValuesEnumerator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **assignWithTake for WidgetEnvironment.EnvironmentValuesEnumerator(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_191B50924()
{
  return sub_191B50F00();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_191CF4058();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_191CF4058();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_191CF4058();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_191CF4058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4058();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B50D80);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_191CF4058();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B50E48);
}

void *__swift_store_extra_inhabitant_indexTm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_191CF4058();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_191B50EF4()
{
  return sub_191B50F00();
}

uint64_t sub_191B50F00()
{
  uint64_t result = sub_191CF4058();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey()
{
  return self;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey.StorageBase()
{
  return self;
}

uint64_t sub_191B50FDC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey.Storage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue.StorageBase()
{
  return self;
}

uint64_t sub_191B51050()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue.Storage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple()
{
  return self;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.StorageBase()
{
  return self;
}

uint64_t sub_191B51144()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.Storage()
{
  return __swift_instantiateGenericMetadata();
}

void *initializeBufferWithCopyOfBuffer for WidgetEnvironment.CartesianProductEnumerator(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for WidgetEnvironment.CartesianProductEnumerator(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for WidgetEnvironment.CartesianProductEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for WidgetEnvironment.CartesianProductEnumerator(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment.CartesianProductEnumerator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.CartesianProductEnumerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CartesianProductEnumerator()
{
  return &type metadata for WidgetEnvironment.CartesianProductEnumerator;
}

uint64_t destroy for WidgetEnvironment.CartesianProductEnumerator.Iterator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9WidgetKit17WidgetEnvironmentV26CartesianProductEnumeratorV8IteratorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetEnvironment.CartesianProductEnumerator.Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetEnvironment.CartesianProductEnumerator.Iterator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CartesianProductEnumerator.Iterator()
{
  return &type metadata for WidgetEnvironment.CartesianProductEnumerator.Iterator;
}

uint64_t destroy for WidgetEnvironment.CodingKeys()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s9WidgetKit17WidgetEnvironmentV10CodingKeysVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetEnvironment.CodingKeys(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WidgetEnvironment.CodingKeys(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9WidgetKit17WidgetEnvironmentV10CodingKeysVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_191B516B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CodingKeys()
{
  return &type metadata for WidgetEnvironment.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.Storage.TupleValue()
{
  return &type metadata for WidgetEnvironment.Storage.TupleValue;
}

unint64_t sub_191B51714()
{
  unint64_t result = qword_1EB44BEB0;
  if (!qword_1EB44BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BEB0);
  }
  return result;
}

unint64_t sub_191B5176C()
{
  unint64_t result = qword_1EB44BD68;
  if (!qword_1EB44BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BD68);
  }
  return result;
}

unint64_t sub_191B517C4()
{
  unint64_t result = qword_1E92E3410;
  if (!qword_1E92E3410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3410);
  }
  return result;
}

uint64_t sub_191B51818()
{
  return sub_191B4FAC8(&qword_1E92E3418, 255, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue.StorageBase);
}

uint64_t sub_191B51864(uint64_t a1, uint64_t a2)
{
  return sub_191B4FAC8((unint64_t *)&unk_1E92E3420, a2, (void (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue);
}

unint64_t sub_191B518B0()
{
  unint64_t result = qword_1EB44BD88[0];
  if (!qword_1EB44BD88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB44BD88);
  }
  return result;
}

unint64_t sub_191B51908()
{
  unint64_t result = qword_1EB44BD80;
  if (!qword_1EB44BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BD80);
  }
  return result;
}

uint64_t sub_191B5195C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_191CF6018())
  {
    unint64_t v7 = v5 & 0xC000000000000001;
    uint64_t v24 = *(uint64_t (**)(void *))(**(void **)(a2 + 16) + 128);
    uint64_t v8 = 4;
    unint64_t v21 = v5;
    while (1)
    {
      id v9 = v7 ? (id)MEMORY[0x192FE4B60](v8 - 4, v5) : *(id *)(v5 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      v25[3] = sub_191B016E0(0, &qword_1EB449D38);
      v25[0] = v10;
      id v12 = v10;
      uint64_t v13 = v24(v25);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v14 = v13;
        unint64_t v15 = v7;
        uint64_t v16 = v6;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v17 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448EC8);
        unint64_t v18 = (void *)swift_allocObject();
        void v18[2] = a3;
        v18[3] = v12;
        v18[4] = a2;
        *(void *)(v17 + 16) = v18;
        *(void *)(v17 + 24) = v14;
        swift_retain();
        uint64_t v19 = swift_retain();
        MEMORY[0x192FE4280](v19);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v6 = v16;
        unint64_t v7 = v15;
        unint64_t v5 = v21;
      }
      ++v8;
      if (v11 == v6)
      {
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_191B51B9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B51C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    uint64_t v16 = a1;
    do
    {
      char v10 = *(unsigned char *)(a1 + v9 + 32);
      unint64_t v20 = &type metadata for WidgetBackgroundStyle;
      v19[0] = v10;
      uint64_t v11 = v8(v19);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v12 = v11;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v13 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448EC0);
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(unsigned char *)(v14 + 24) = v10;
        *(void *)(v14 + 32) = a2;
        *(void *)(v13 + 16) = v14;
        *(void *)(v13 + 24) = v12;
        swift_retain();
        uint64_t v15 = swift_retain();
        MEMORY[0x192FE4280](v15);
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        a1 = v16;
      }
      ++v9;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_191B51E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)(a1 + 40);
    do
    {
      char v10 = *((unsigned char *)v9 - 8);
      uint64_t v11 = *v9;
      v19[0] = v10;
      uint64_t v21 = &type metadata for WidgetRenderScheme;
      uint64_t v20 = v11;
      uint64_t v12 = v8(v19);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v13 = v12;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v14 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448EB0);
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = a3;
        *(unsigned char *)(v15 + 24) = v10;
        *(void *)(v15 + 32) = v11;
        *(void *)(v15 + 40) = a2;
        *(void *)(v14 + 16) = v15;
        *(void *)(v14 + 24) = v13;
        swift_retain();
        uint64_t v16 = swift_retain();
        MEMORY[0x192FE4280](v16);
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
      }
      v9 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

uint64_t sub_191B51FEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

char *sub_191B520E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B521D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v45 = a3;
  uint64_t v46 = a5;
  uint64_t v7 = a4(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  char v44 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)v35 - v12;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v49 = v11;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v42 = a2;
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v17 = *(uint64_t (**)(void))(*(void *)v16 + 128);
    uint64_t v18 = *(void *)v16 + 128;
    uint64_t v19 = *(void *)(v10 + 72);
    uint64_t v20 = (void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16);
    v35[1] = a1;
    char v36 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v21 = v19;
    swift_bridgeObjectRetain();
    char v40 = v17;
    uint64_t v41 = v16;
    uint64_t v38 = v21;
    uint64_t v39 = v18;
    uint64_t v37 = v20;
    do
    {
      uint64_t v22 = v49;
      v51[3] = v49;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v51);
      uint64_t v24 = *v20;
      (*v20)(boxed_opaque_existential_1, v15, v22);
      uint64_t v25 = v50;
      uint64_t v26 = v17(v51);
      if (v25)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        uint64_t v50 = 0;
      }
      else
      {
        uint64_t v50 = 0;
        uint64_t v48 = v26;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        uint64_t v27 = v43;
        v24((uint64_t *)v43, v15, v22);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v47 = swift_allocObject();
        char v28 = v44;
        v24((uint64_t *)v44, (uint64_t)v27, v22);
        __swift_instantiateConcreteTypeFromMangledName(v46);
        uint64_t v29 = (void *)swift_allocObject();
        void v29[2] = v45;
        v24((void *)((char *)v29 + *(void *)(*v29 + 160)), (uint64_t)v28, v22);
        *(void *)((char *)v29 + *(void *)(*v29 + 168)) = v42;
        uint64_t v30 = *v36;
        swift_retain();
        swift_retain();
        v30(v28, v22);
        uint64_t v31 = v22;
        uint64_t v32 = v47;
        uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v30)(v27, v31);
        uint64_t v34 = v48;
        *(void *)(v32 + 16) = v29;
        *(void *)(v32 + 24) = v34;
        MEMORY[0x192FE4280](v33);
        if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v17 = v40;
        uint64_t v21 = v38;
        uint64_t v20 = v37;
      }
      v15 += v21;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    return v52;
  }
  return result;
}

uint64_t sub_191B52510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v35 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (uint64_t)v27 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v33 = a2;
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v16 = *(uint64_t (**)(void))(*(void *)v15 + 128);
    uint64_t v17 = *(void *)v15 + 128;
    uint64_t v18 = *(void *)(v10 + 72);
    v27[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v31 = v15;
    uint64_t v32 = v7;
    uint64_t v29 = v17;
    uint64_t v30 = v16;
    uint64_t v28 = v18;
    do
    {
      v38[3] = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
      sub_191B01614(v14, (uint64_t)boxed_opaque_existential_1, &qword_1EB44A280);
      uint64_t v20 = v16(v38);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v37 = v20;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        uint64_t v21 = v34;
        sub_191B01614(v14, v34, &qword_1EB44A280);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v22 = swift_allocObject();
        uint64_t v23 = v35;
        sub_191B01614(v21, v35, &qword_1EB44A280);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448DD0);
        uint64_t v24 = (void *)swift_allocObject();
        v24[2] = v36;
        sub_191B01614(v23, (uint64_t)v24 + *(void *)(*v24 + 160), &qword_1EB44A280);
        *(void *)((char *)v24 + *(void *)(*v24 + 168)) = v33;
        swift_retain();
        swift_retain();
        sub_191B01770(v23, &qword_1EB44A280);
        uint64_t v25 = sub_191B01770(v21, &qword_1EB44A280);
        uint64_t v26 = v37;
        *(void *)(v22 + 16) = v24;
        *(void *)(v22 + 24) = v26;
        MEMORY[0x192FE4280](v25);
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v7 = v32;
        uint64_t v16 = v30;
        uint64_t v18 = v28;
      }
      v14 += v18;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    return v39;
  }
  return result;
}

uint64_t sub_191B52818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(uint64_t (**)(void *))(*(void *)v8 + 128);
    uint64_t v10 = *(void *)v8 + 128;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v21 = a1;
    do
    {
      uint64_t v12 = *(void *)(a1 + 8 * v11 + 32);
      v24[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BA68);
      v24[0] = v12;
      swift_retain_n();
      uint64_t v13 = v9(v24);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        swift_release();
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v14 = v13;
        uint64_t v15 = v7;
        uint64_t v16 = v10;
        uint64_t v17 = v9;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v18 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB448D70);
        uint64_t v19 = (void *)swift_allocObject();
        v19[2] = a3;
        v19[3] = v12;
        uint64_t v19[4] = a2;
        *(void *)(v18 + 16) = v19;
        *(void *)(v18 + 24) = v14;
        swift_retain();
        uint64_t v20 = swift_retain();
        MEMORY[0x192FE4280](v20);
        if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v9 = v17;
        uint64_t v10 = v16;
        uint64_t v7 = v15;
        a1 = v21;
      }
      ++v11;
    }
    while (v7 != v11);
    swift_bridgeObjectRelease();
    return v25;
  }
  return result;
}

uint64_t sub_191B529F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(uint64_t (**)(void *))(**(void **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    uint64_t v9 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      unint64_t v11 = *v9;
      v20[3] = MEMORY[0x1E4F277C0];
      v20[0] = v10;
      v20[1] = v11;
      sub_191B15F88(v10, v11);
      sub_191B15F88(v10, v11);
      uint64_t v12 = v8(v20);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        sub_191B1603C(v10, v11);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v13 = v12;
        uint64_t v14 = v8;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v15 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448D60);
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = a3;
        v16[3] = v10;
        void v16[4] = v11;
        v16[5] = a2;
        *(void *)(v15 + 16) = v16;
        *(void *)(v15 + 24) = v13;
        swift_retain();
        uint64_t v17 = swift_retain();
        MEMORY[0x192FE4280](v17);
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        uint64_t v8 = v14;
      }
      v9 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_191B52BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  size_t v6 = v5;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    unint64_t v11 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v20 = a1;
    do
    {
      char v13 = *(unsigned char *)(a1 + v12 + 32);
      uint64_t v25 = a4;
      v24[0] = v13;
      uint64_t v14 = v11(v24);
      if (v6)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        size_t v6 = 0;
      }
      else
      {
        uint64_t v15 = v14;
        uint64_t v16 = a4;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        uint64_t v17 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(a5);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = a3;
        *(unsigned char *)(v18 + 24) = v13;
        *(void *)(v18 + 32) = a2;
        *(void *)(v17 + 16) = v18;
        *(void *)(v17 + 24) = v15;
        swift_retain();
        uint64_t v19 = swift_retain();
        MEMORY[0x192FE4280](v19);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191CF5588();
        }
        sub_191CF55D8();
        sub_191CF5558();
        a4 = v16;
        a1 = v20;
      }
      ++v12;
    }
    while (v9 != v12);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

unint64_t sub_191B52D68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449B08);
    uint64_t v3 = (void *)sub_191CF6068();
    for (uint64_t i = (_OWORD *)(a1 + 48); ; i += 2)
    {
      uint64_t v5 = *((void *)i - 2);
      char v6 = *((unsigned char *)i - 8);
      long long v13 = *i;
      unint64_t result = sub_191B1DAA4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v9 = v3[7] + 24 * result;
      *(unsigned char *)uint64_t v9 = v6;
      *(_OWORD *)(v9 + 8) = v13;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_191B52E60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4499A0);
  uint64_t v3 = (void *)sub_191CF6068();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_191B1DB10(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_191B1DB10(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

char *sub_191B52F64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  unint64_t result = (char *)sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B5304C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B53140(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A280) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B5329C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_191B532D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_191CF5708();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_191B43980(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_191B53368(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B760);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B53478(uint64_t a1, uint64_t a2)
{
  if (qword_1EB44BCD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = off_1EB44BD40;
  if (!*((void *)off_1EB44BD40 + 2)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_191B1CB2C(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(v4[7] + 8 * v5);
  swift_endAccess();
  swift_retain();
  uint64_t v8 = swift_bridgeObjectRelease_n();
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(**(void **)(v7 + 16) + 80))(v8);
  swift_release();
  return v9;
}

uint64_t sub_191B535B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B536A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

uint64_t sub_191B53804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

unint64_t sub_191B538F8()
{
  unint64_t result = qword_1E92E3440;
  if (!qword_1E92E3440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3440);
  }
  return result;
}

uint64_t sub_191B5394C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_191B3DF78(a1, v3[4], v3[2], v3[3], a2, a3);
}

uint64_t sub_191B53970(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B539D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B53A38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191CF6078();
  __break(1u);
  return result;
}

void sub_191B53B28(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_191B38D0C(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_191B53B44(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(**(void **)(*(void *)a1 + 16) + 120))(*(void *)(*(void *)a1 + 24), *(void *)(v1 + 16)) & 1;
}

uint64_t sub_191B53B9C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191B38C0C(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for WidgetEnvironment.AnyValue.StorageBase.CodingKeys()
{
  return &type metadata for WidgetEnvironment.AnyValue.StorageBase.CodingKeys;
}

unint64_t sub_191B53BFC()
{
  unint64_t result = qword_1E92E34D0;
  if (!qword_1E92E34D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E34D0);
  }
  return result;
}

unint64_t sub_191B53C54()
{
  unint64_t result = qword_1E92E34D8;
  if (!qword_1E92E34D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E34D8);
  }
  return result;
}

uint64_t sub_191B53CB4(uint64_t a1, void *a2, void *a3, unsigned __int8 a4, uint64_t a5, double a6)
{
  uint64_t v12 = sub_191CF3478();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v38[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v38[-1] - v17;
  if (*(void *)(a5 + 16) && (unint64_t v19 = sub_191B1DAA4(a1), (v20 & 1) != 0))
  {
    uint64_t v21 = (double *)(*(void *)(a5 + 56) + 24 * v19);
    uint64_t result = *(unsigned __int8 *)v21;
    if (*(unsigned char *)v21)
    {
      double v23 = v21[1];
      if (result == 1)
      {
        sub_191CF3518();
        sub_191CF3508();
        __swift_project_boxed_opaque_existential_1(v38, v39);
        sub_191CF34F8();
        (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E4F58880], v12);
        char v24 = sub_191CF3468();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
        v25(v16, v12);
        v25(v18, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if (v24) {
          double v26 = 2048.0;
        }
        else {
          double v26 = 1290.0;
        }
      }
      else
      {
        objc_msgSend(a2, sel__rawEffectiveSize);
        double v35 = v34;
        objc_msgSend(a3, sel_scale);
        double v26 = v35 * v36;
        objc_msgSend(a3, sel_scale);
      }
      double v33 = fmax(v23 * v26, 80.0);
      return *(void *)&v33;
    }
  }
  else
  {
    if (a4)
    {
      if (a4 == 1)
      {
        sub_191CF3518();
        sub_191CF3508();
        __swift_project_boxed_opaque_existential_1(v38, v39);
        sub_191CF34F8();
        (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E4F58880], v12);
        char v27 = sub_191CF3468();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
        v28(v16, v12);
        v28(v18, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if (v27) {
          double v29 = 2048.0;
        }
        else {
          double v29 = 1290.0;
        }
      }
      else
      {
        objc_msgSend(a2, sel__rawEffectiveSize);
        double v31 = v30;
        objc_msgSend(a3, sel_scale);
        double v29 = v31 * v32;
        objc_msgSend(a3, sel_scale);
      }
      double v33 = fmax(v29 * a6, 80.0);
      return *(void *)&v33;
    }
    return a4;
  }
  return result;
}

double sub_191B54088()
{
  if (qword_1EB449B18 != -1) {
    swift_once();
  }
  if (dyld_program_sdk_at_least())
  {
    sub_191B52D68(MEMORY[0x1E4FBC860]);
    return 2.2;
  }
  else
  {
    if (qword_1EB44AC48 != -1) {
      swift_once();
    }
    int v1 = dyld_program_sdk_at_least();
    sub_191B52D68(MEMORY[0x1E4FBC860]);
    if (v1)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v0 = 1.2;
      sub_191B4B404(2, 12, isUniquelyReferenced_nonNull_native, 1.2, 2.0);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0.0;
    }
  }
  return v0;
}

uint64_t _s21ImageAttachmentPolicyVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s21ImageAttachmentPolicyVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21ImageAttachmentPolicyVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ImageAttachmentPolicyVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ImageAttachmentPolicyVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21ImageAttachmentPolicyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s21ImageAttachmentPolicyVMa()
{
  return &_s21ImageAttachmentPolicyVN;
}

uint64_t _s21ImageAttachmentPolicyV5EntryVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[24]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s21ImageAttachmentPolicyV5EntryVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *_s21ImageAttachmentPolicyV5EntryVMa()
{
  return &_s21ImageAttachmentPolicyV5EntryVN;
}

unsigned char *_s21ImageAttachmentPolicyV8BaseSizeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B544A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s21ImageAttachmentPolicyV8BaseSizeOMa()
{
  return &_s21ImageAttachmentPolicyV8BaseSizeON;
}

unint64_t sub_191B544E4()
{
  unint64_t result = qword_1E92E3540;
  if (!qword_1E92E3540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3540);
  }
  return result;
}

double sub_191B54538()
{
  qword_1E92F2540 = 0;
  double result = 0.0;
  xmmword_1E92F2520 = 0u;
  *(_OWORD *)algn_1E92F2530 = 0u;
  return result;
}

uint64_t sub_191B54550@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2BF8 != -1) {
    swift_once();
  }

  return sub_191B54E2C((uint64_t)&xmmword_1E92F2520, a1);
}

uint64_t sub_191B545BC(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v4 = sub_191B54D64(a1, (uint64_t)&v6);
  if (*((void *)&v7 + 1))
  {
    v9[0] = v6;
    v9[1] = v7;
    uint64_t v10 = v8;
  }
  else
  {
    a2(v9, v4);
    sub_191B54DCC((uint64_t)&v6);
  }
  return sub_191B54D64((uint64_t)v9, a1);
}

uint64_t sub_191B54640(uint64_t a1)
{
  unint64_t v2 = sub_191B54D10();

  return MEMORY[0x1F40F9710](a1, v2);
}

uint64_t sub_191B5467C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = qword_1E92F2560;
  *(void *)a1 = qword_1E92F2548;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)algn_1E92F2550;
  *(void *)(a1 + 24) = v1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_191B546D4(uint64_t *a1, void (*a2)(void *__return_ptr))
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_191CFA1E0;
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0;
  uint64_t v6 = a1[1];
  if (!v6)
  {
    uint64_t v7 = sub_191B5518C((void *)v4, a2);
    uint64_t v6 = v11;
    swift_bridgeObjectRelease();
    uint64_t v8 = a1[3];
    if (v8) {
      goto LABEL_3;
    }
LABEL_5:
    sub_191B5518C(v5, a2);
    uint64_t v9 = v12;
    uint64_t v8 = v13;
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v7 = *a1;
  uint64_t v8 = a1[3];
  if (!v8) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = a1[2];
  uint64_t result = swift_release();
LABEL_6:
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v8;
  return result;
}

uint64_t sub_191B547BC(uint64_t a1)
{
  unint64_t v2 = sub_191B550F0();

  return MEMORY[0x1F40F9710](a1, v2);
}

uint64_t sub_191B547F8()
{
  uint64_t v0 = sub_191CF45A8();
  uint64_t v1 = swift_conformsToProtocol2();
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  if (v1) {
    uint64_t v3 = v0;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3) {
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  sub_191CF5D88();
  swift_bridgeObjectRelease();
  sub_191CF45A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FB8);
  sub_191CF5368();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_191CF5FC8();
  __break(1u);
  return result;
}

uint64_t sub_191B5492C()
{
  return 2;
}

uint64_t sub_191B54964()
{
  return 2;
}

uint64_t sub_191B54988()
{
  return 1;
}

uint64_t sub_191B549C0()
{
  return 1;
}

uint64_t sub_191B549E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *initializeBufferWithCopyOfBuffer for ControlWidgetTypeMetadata(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for ControlWidgetTypeMetadata(uint64_t a1)
{
}

void *assignWithCopy for ControlWidgetTypeMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for ControlWidgetTypeMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ControlWidgetTypeMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlWidgetTypeMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlWidgetTypeMetadata()
{
  return &type metadata for ControlWidgetTypeMetadata;
}

uint64_t initializeWithCopy for ControlTemplateDescriptor(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for ControlTemplateDescriptor(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ControlTemplateDescriptor(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplateDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateDescriptor()
{
  return &type metadata for ControlTemplateDescriptor;
}

ValueMetadata *type metadata accessor for ControlTemplateDescriptor.Key()
{
  return &type metadata for ControlTemplateDescriptor.Key;
}

unint64_t sub_191B54CBC()
{
  unint64_t result = qword_1E92E2B88;
  if (!qword_1E92E2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2B88);
  }
  return result;
}

unint64_t sub_191B54D10()
{
  unint64_t result = qword_1E92E2050;
  if (!qword_1E92E2050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2050);
  }
  return result;
}

uint64_t sub_191B54D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E2058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B54DCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E2058);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191B54E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E92E2058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ControlViewMetadata()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlViewMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlViewMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ControlViewMetadata(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlViewMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlViewMetadata()
{
  return &type metadata for ControlViewMetadata;
}

ValueMetadata *type metadata accessor for ControlViewMetadata.Key()
{
  return &type metadata for ControlViewMetadata.Key;
}

unint64_t sub_191B5509C()
{
  unint64_t result = qword_1E92E2038;
  if (!qword_1E92E2038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2038);
  }
  return result;
}

unint64_t sub_191B550F0()
{
  unint64_t result = qword_1E92E2040;
  if (!qword_1E92E2040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2040);
  }
  return result;
}

uint64_t sub_191B55144()
{
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_191B5518C(void *a1, void (*a2)(void *__return_ptr))
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = v2;
  if (v3 == 1)
  {
    a2(v12);
    uint64_t v4 = v12[0];
    uint64_t v6 = v12[1];
    uint64_t v7 = v12[2];
    uint64_t v8 = v12[3];
    swift_beginAccess();
    uint64_t v9 = a1[2];
    uint64_t v11 = a1[3];
    a1[2] = v4;
    a1[3] = v6;
    a1[4] = v7;
    a1[5] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_191B55284(v9, v11);
  }
  sub_191B552CC(v2, v3);
  return v4;
}

uint64_t sub_191B55284(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_191B552CC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

float TimelineEntryRelevance.score.getter()
{
  return *(float *)v0;
}

void TimelineEntryRelevance.score.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*TimelineEntryRelevance.score.modify())()
{
  return nullsub_1;
}

double TimelineEntryRelevance.duration.getter()
{
  return *(double *)(v0 + 8);
}

void TimelineEntryRelevance.duration.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*TimelineEntryRelevance.duration.modify())()
{
  return nullsub_1;
}

WidgetKit::TimelineEntryRelevance __swiftcall TimelineEntryRelevance.init(score:duration:)(Swift::Float score, Swift::Double duration)
{
  *(Swift::Float *)uint64_t v2 = score;
  *(Swift::Double *)(v2 + 8) = duration;
  result.duration = duration;
  result.score = score;
  return result;
}

uint64_t TimelineEntryRelevance.hash(into:)()
{
  return sub_191CF64A8();
}

BOOL static TimelineEntryRelevance.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(float *)a1 == *(float *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_191B553FC()
{
  if (*v0) {
    return 0x6E6F697461727564;
  }
  else {
    return 0x65726F6373;
  }
}

uint64_t sub_191B55434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B55C78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B5545C(uint64_t a1)
{
  unint64_t v2 = sub_191B55640();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B55498(uint64_t a1)
{
  unint64_t v2 = sub_191B55640();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimelineEntryRelevance.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB448F78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B55640();
  sub_191CF6528();
  v8[15] = 0;
  sub_191CF6248();
  if (!v1)
  {
    v8[14] = 1;
    sub_191CF6238();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_191B55640()
{
  unint64_t result = qword_1EB449558;
  if (!qword_1EB449558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449558);
  }
  return result;
}

uint64_t TimelineEntryRelevance.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t TimelineEntryRelevance.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB447258);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B55640();
  sub_191CF6508();
  if (!v2)
  {
    char v16 = 0;
    sub_191CF6148();
    int v10 = v9;
    char v15 = 1;
    sub_191CF6138();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(void *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_191B558A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TimelineEntryRelevance.init(from:)(a1, a2);
}

uint64_t sub_191B558BC(void *a1)
{
  return TimelineEntryRelevance.encode(to:)(a1);
}

uint64_t sub_191B558D8()
{
  return sub_191CF64A8();
}

uint64_t sub_191B55924()
{
  return sub_191CF64C8();
}

BOOL sub_191B55988(uint64_t a1, uint64_t a2)
{
  return *(float *)a1 == *(float *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

void sub_191B559B4(uint64_t a1@<X8>)
{
}

void TimelineEntry.relevance.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
}

unint64_t sub_191B559E0()
{
  unint64_t result = qword_1E92E3548;
  if (!qword_1E92E3548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3548);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryRelevance()
{
  return &type metadata for TimelineEntryRelevance;
}

uint64_t dispatch thunk of TimelineEntry.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineEntry.relevance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unsigned char *storeEnumTagSinglePayload for TimelineEntryRelevance.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B55B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryRelevance.CodingKeys()
{
  return &type metadata for TimelineEntryRelevance.CodingKeys;
}

unint64_t sub_191B55B74()
{
  unint64_t result = qword_1E92E3550;
  if (!qword_1E92E3550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3550);
  }
  return result;
}

unint64_t sub_191B55BCC()
{
  unint64_t result = qword_1EB449568;
  if (!qword_1EB449568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449568);
  }
  return result;
}

unint64_t sub_191B55C24()
{
  unint64_t result = qword_1EB449560;
  if (!qword_1EB449560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB449560);
  }
  return result;
}

uint64_t sub_191B55C78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_191B55D64(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  double v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_191CF57A8();
  if (!v20) {
    return sub_191CF55A8();
  }
  uint64_t v21 = v20;
  char v27 = v15;
  uint64_t v43 = sub_191CF5228();
  uint64_t v35 = sub_191CF5F08();
  sub_191CF5EA8();
  uint64_t v41 = v19;
  uint64_t result = sub_191CF5788();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    double v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    char v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_191CF5868();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_191CF5EE8();
      sub_191CF57F8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t WidgetRelevance.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v10 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for WidgetRelevanceAttribute();
  uint64_t v4 = sub_191CF5618();
  uint64_t v5 = type metadata accessor for WidgetRelevanceEntry();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_191B55D64((void (*)(char *, char *))sub_191B56278, KeyPath, v4, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = WidgetRelevances.init(_:)(v8, &v10);
  *a2 = v10;
  return result;
}

uint64_t sub_191B56278()
{
  return swift_getAtKeyPath();
}

uint64_t sub_191B562A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

void *initializeBufferWithCopyOfBuffer for MetadataForegroundColorsModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MetadataForegroundColorsModifier()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for MetadataForegroundColorsModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for MetadataForegroundColorsModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAction(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for WidgetRelevance()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EnvironmentValues._preferredSystemWidgetBackgroundStyle.getter()
{
  sub_191B4F6E0();

  return sub_191CF4068();
}

uint64_t EnvironmentValues._preferredSystemWidgetBackgroundStyle.setter()
{
  return sub_191CF4078();
}

uint64_t sub_191B564B0()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C8C0 = result;
  return result;
}

uint64_t sub_191B564D8()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A600);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C8A8 = v0;
  unk_1EB44C8B0 = 0xD000000000000025;
  qword_1EB44C8B8 = 0x8000000191D0DDE0;
  return result;
}

uint64_t sub_191B56550()
{
  if (qword_1EB44A580 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191B565AC()
{
  if (qword_1EB44A5E8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C8A8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191B5662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191B5674C();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues._preferredSystemWidgetBackgroundStyle.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_191B4F6E0();
  sub_191CF4068();
  return sub_191B566FC;
}

uint64_t sub_191B566FC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

ValueMetadata *_s50WidgetPreferredSystemBackgroundStyleEnvironmentKeyVMa()
{
  return &_s50WidgetPreferredSystemBackgroundStyleEnvironmentKeyVN;
}

unint64_t sub_191B5674C()
{
  unint64_t result = qword_1EB44A6A0;
  if (!qword_1EB44A6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A6A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferredSystemWidgetBackgroundStyleKey()
{
  return &type metadata for PreferredSystemWidgetBackgroundStyleKey;
}

unint64_t sub_191B567B4()
{
  unint64_t result = qword_1EB44A698;
  if (!qword_1EB44A698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44A698);
  }
  return result;
}

unint64_t sub_191B5680C()
{
  unint64_t result = qword_1EB44B4B8;
  if (!qword_1EB44B4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4B8);
  }
  return result;
}

unint64_t sub_191B56864()
{
  unint64_t result = qword_1EB44B4A8;
  if (!qword_1EB44B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B4A8);
  }
  return result;
}

uint64_t sub_191B568C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3610);
  uint64_t v5 = MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  double v33 = (void *)((char *)v29 - v8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v29 - v9);
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_191AFB944(0, 0, 0);
  uint64_t v11 = v39;
  uint64_t v12 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v32 = v12;
  v29[1] = a1;
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v31 = type metadata accessor for ControlTemplatePicker.Option(0);
    uint64_t v14 = a1
        + ((*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80));
    uint64_t v30 = *(void *)(*(void *)(v31 - 8) + 72);
    do
    {
      uint64_t v15 = v35;
      uint64_t v16 = (uint64_t)&v34[*(int *)(v35 + 48)];
      sub_191B5A700(v14, v16, type metadata accessor for ControlTemplatePicker.Option);
      uint64_t v17 = (uint64_t)v33;
      uint64_t v18 = (uint64_t)v33 + *(int *)(v15 + 48);
      *double v33 = v13;
      sub_191B5A768(v16, v18);
      sub_191B5CCD8(v17, (uint64_t)v10);
      uint64_t v19 = *v10;
      uint64_t v20 = (char *)v10 + *(int *)(v15 + 48);
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_191CF5D88();
      swift_bridgeObjectRelease();
      uint64_t v36 = v19;
      uint64_t v37 = 91;
      unint64_t v38 = 0xE100000000000000;
      sub_191CF62C8();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      swift_bridgeObjectRetain();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      sub_191B01614((uint64_t)&v20[*(int *)(v31 + 20)], (uint64_t)v4, qword_1EB4496F8);
      uint64_t v21 = sub_191CF4868();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v4, 1, v21) == 1)
      {
        sub_191B01770((uint64_t)v4, qword_1EB4496F8);
      }
      else
      {
        sub_191CF47B8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v21);
      }
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      uint64_t v23 = v37;
      unint64_t v24 = v38;
      sub_191B01770((uint64_t)v10, &qword_1E92E3610);
      uint64_t v11 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFB944(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v39;
      }
      unint64_t v26 = *(void *)(v11 + 16);
      unint64_t v25 = *(void *)(v11 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_191AFB944(v25 > 1, v26 + 1, 1);
        uint64_t v11 = v39;
      }
      ++v13;
      *(void *)(v11 + 16) = v26 + 1;
      uint64_t v27 = v11 + 16 * v26;
      *(void *)(v27 + 32) = v23;
      *(void *)(v27 + 40) = v24;
      v14 += v30;
    }
    while (v32 != v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_191B56D4C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (int *)type metadata accessor for ControlTemplatePicker(0);
  __swift_allocate_value_buffer((uint64_t)v3, qword_1E92E3558);
  uint64_t v4 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_1E92E3558);
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v2, 1, 1, v5);
  uint64_t v7 = v4 + v3[7];
  v6((char *)v7, 1, 1, v5);
  uint64_t v8 = (void *)(v4 + v3[11]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(void *)uint64_t v4 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(unsigned char *)(v4 + v3[8]) = 0;
  sub_191B28FA4((uint64_t)v2, v7, (uint64_t *)&unk_1EB44BBA8);
  *(unsigned char *)(v4 + v3[9]) = 0;
  *(unsigned char *)(v4 + v3[10]) = 0;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(unsigned char *)(v4 + v3[12]) = 0;
  return result;
}

uint64_t ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v20 = (int *)type metadata accessor for ControlTemplatePicker(0);
  uint64_t v21 = (uint64_t)a9 + v20[7];
  uint64_t v22 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = (void *)((char *)a9 + v20[11]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  *((unsigned char *)a9 + v20[8]) = a6;
  sub_191B28FA4(a7, v21, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)a9 + v20[9]) = a8;
  *((unsigned char *)a9 + v20[10]) = a10;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v23 = a11;
  v23[1] = a12;
  *((unsigned char *)a9 + v20[12]) = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplatePicker(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B248);
}

uint64_t static ControlTemplatePicker.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2C00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplatePicker(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E3558);
  swift_beginAccess();
  return sub_191B5A700(v3, a1, type metadata accessor for ControlTemplatePicker);
}

uint64_t static ControlTemplatePicker.empty.setter(uint64_t a1)
{
  if (qword_1E92E2C00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplatePicker(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E3558);
  swift_beginAccess();
  sub_191B5717C(a1, v3);
  swift_endAccess();
  return sub_191B5A604(a1, type metadata accessor for ControlTemplatePicker);
}

uint64_t sub_191B5717C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplatePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplatePicker.empty.modify())()
{
  if (qword_1E92E2C00 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for ControlTemplatePicker(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92E3558);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlTemplatePicker.Option.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.value.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplatePicker.Option(0);
  return sub_191B01614(v1 + *(int *)(v3 + 20), a1, qword_1EB4496F8);
}

uint64_t type metadata accessor for ControlTemplatePicker.Option(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1E92E0F60);
}

uint64_t ControlTemplatePicker.Option.icon.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplatePicker.Option(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 20), qword_1EB4496F8);
}

uint64_t (*ControlTemplatePicker.Option.icon.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.tint.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 24));
}

uint64_t ControlTemplatePicker.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v8 = v3 + *(int *)(result + 24);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.tint.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.status.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.status.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.actionHint.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.actionHint.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.init(value:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = (int *)type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v18 = (uint64_t)a9 + v17[5];
  uint64_t v19 = sub_191CF4868();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (char *)a9 + v17[6];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v21 = (void *)((char *)a9 + v17[7]);
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v22 = (void *)((char *)a9 + v17[8]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_191B28FA4(a3, v18, qword_1EB4496F8);
  *(void *)uint64_t v20 = a4;
  *((void *)v20 + 1) = a5;
  v20[16] = a6 & 1;
  swift_bridgeObjectRelease();
  void *v21 = a7;
  v21[1] = a8;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v22 = a10;
  v22[1] = a11;
  return result;
}

uint64_t sub_191B57794()
{
  uint64_t result = 0x65756C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1852793705;
      break;
    case 2:
      uint64_t result = 1953393012;
      break;
    case 3:
      uint64_t result = 0x737574617473;
      break;
    case 4:
      uint64_t result = 0x69486E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B5782C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B5C704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B57854(uint64_t a1)
{
  unint64_t v2 = sub_191B5A55C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B57890(uint64_t a1)
{
  unint64_t v2 = sub_191B5A55C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplatePicker.Option.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3570);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B5A55C();
  sub_191CF6528();
  LOBYTE(v14) = 0;
  sub_191CF61E8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ControlTemplatePicker.Option(0);
    LOBYTE(v14) = 1;
    sub_191CF4868();
    sub_191B5A664(&qword_1E92E2460, MEMORY[0x1E4F3DE60]);
    sub_191CF6208();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 24));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 2;
    sub_191B5A5B0();
    sub_191CF6208();
    LOBYTE(v14) = 3;
    sub_191CF61E8();
    LOBYTE(v14) = 4;
    sub_191CF61E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplatePicker.Option.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3580);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v10 = 0;
  v10[1] = 0;
  char v11 = (char *)v10 + v8[7];
  uint64_t v12 = sub_191CF4868();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v43 = (uint64_t)v11;
  v13(v11, 1, 1, v12);
  long long v14 = (char *)v10 + v8[8];
  *(void *)long long v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  char v15 = (uint64_t *)((char *)v10 + v8[9]);
  uint64_t *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v8[10];
  uint64_t v50 = v10;
  uint64_t v17 = (uint64_t *)((char *)v10 + v16);
  uint64_t *v17 = 0;
  v17[1] = 0;
  uint64_t v18 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_191B5A55C();
  uint64_t v47 = v6;
  uint64_t v19 = v49;
  sub_191CF6508();
  if (v19)
  {
    unint64_t v38 = v50;
  }
  else
  {
    uint64_t v49 = v14;
    char v40 = v17;
    uint64_t v41 = v15;
    uint64_t v20 = (uint64_t)v45;
    uint64_t v21 = v46;
    uint64_t v23 = v43;
    uint64_t v22 = v44;
    LOBYTE(v51) = 0;
    uint64_t v24 = sub_191CF60E8();
    unint64_t v26 = v50;
    *uint64_t v50 = v24;
    v26[1] = v27;
    LOBYTE(v51) = 1;
    sub_191B5A664(&qword_1E92E2178, MEMORY[0x1E4F3DE60]);
    sub_191CF6108();
    sub_191B28FA4(v20, v23, qword_1EB4496F8);
    char v53 = 2;
    sub_191B5A6AC();
    sub_191CF6108();
    char v28 = v52;
    uint64_t v29 = v49;
    *uint64_t v49 = v51;
    *((unsigned char *)v29 + 16) = v28;
    LOBYTE(v51) = 3;
    uint64_t v30 = sub_191CF60E8();
    uint64_t v32 = v31;
    double v33 = v41;
    swift_bridgeObjectRelease();
    *double v33 = v30;
    v33[1] = v32;
    LOBYTE(v51) = 4;
    uint64_t v34 = sub_191CF60E8();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v21);
    uint64_t v37 = v40;
    swift_bridgeObjectRelease();
    *uint64_t v37 = v34;
    v37[1] = v36;
    unint64_t v38 = v50;
    sub_191B5A700((uint64_t)v50, v42, type metadata accessor for ControlTemplatePicker.Option);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return sub_191B5A604((uint64_t)v38, type metadata accessor for ControlTemplatePicker.Option);
}

uint64_t sub_191B57FA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplatePicker.Option.init(from:)(a1, a2);
}

uint64_t sub_191B57FB8(void *a1)
{
  return ControlTemplatePicker.Option.encode(to:)(a1);
}

uint64_t ControlTemplatePicker.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ControlTemplatePicker.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.options.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplatePicker(0);
  return sub_191B01614(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t ControlTemplatePicker.associatedURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplatePicker(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1EB44BBA8);
}

uint64_t (*ControlTemplatePicker.associatedURL.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.renderAsSlider.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 32));
}

uint64_t ControlTemplatePicker.renderAsSlider.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplatePicker(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.renderAsSlider.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.privacySensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 36));
}

uint64_t ControlTemplatePicker.privacySensitive.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplatePicker(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.privacySensitive.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.disabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 40));
}

uint64_t ControlTemplatePicker.disabled.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplatePicker(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.disabled.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.accessibilityIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.accessibilityIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.rasterizedImagesAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 48));
}

uint64_t ControlTemplatePicker.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplatePicker(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.rasterizedImagesAllowed.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.asPlaceholder()@<X0>(void *a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v61 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t v4 = *(void *)(v60 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v60);
  uint64_t v59 = (uint64_t *)((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v52 - v8;
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v52 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v12 - 8);
  char v53 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v1;
  uint64_t v14 = *v1;
  int64_t v15 = *(void *)(*v1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v66 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_191AFBA38(0, v15, 0);
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v52 = v14;
    unint64_t v57 = v17;
    uint64_t v58 = v11;
    uint64_t v18 = v14 + v17;
    uint64_t v56 = *(void *)(v4 + 72);
    uint64_t v19 = v59;
    do
    {
      int64_t v65 = v15;
      sub_191B5A700(v18, (uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
      if (qword_1E92E2CB8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v20 = qword_1E92E4A58;
      uint64_t v64 = qword_1E92E4A50;
      uint64_t v21 = (int *)v60;
      uint64_t v22 = v61;
      sub_191B01614((uint64_t)&v9[*(int *)(v60 + 20)], v61, qword_1EB4496F8);
      uint64_t v23 = v21[5];
      uint64_t v24 = &v9[v21[6]];
      uint64_t v25 = *(void *)v24;
      uint64_t v62 = *((void *)v24 + 1);
      LODWORD(v63) = v24[16];
      uint64_t v26 = (uint64_t)v19 + v23;
      uint64_t v27 = sub_191CF4868();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      char v28 = (char *)v19 + v21[6];
      *(void *)char v28 = 0;
      *((void *)v28 + 1) = 0;
      v28[16] = 1;
      uint64_t v29 = v9;
      uint64_t v30 = (uint64_t *)((char *)v19 + v21[7]);
      *uint64_t v30 = 0;
      v30[1] = 0;
      uint64_t v31 = (uint64_t *)((char *)v19 + v21[8]);
      *uint64_t v31 = 0;
      v31[1] = 0;
      *uint64_t v19 = v64;
      v19[1] = v20;
      swift_bridgeObjectRetain();
      sub_191B28FA4(v22, v26, qword_1EB4496F8);
      uint64_t v32 = v62;
      *(void *)char v28 = v25;
      *((void *)v28 + 1) = v32;
      v28[16] = v63;
      swift_bridgeObjectRelease();
      *uint64_t v30 = 0;
      v30[1] = 0;
      uint64_t v9 = v29;
      swift_bridgeObjectRelease();
      *uint64_t v31 = 0;
      v31[1] = 0;
      uint64_t v33 = (uint64_t)v58;
      sub_191B5A768((uint64_t)v19, (uint64_t)v58);
      sub_191B5A604((uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
      uint64_t v16 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFBA38(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v66;
      }
      int64_t v34 = v65;
      unint64_t v36 = *(void *)(v16 + 16);
      unint64_t v35 = *(void *)(v16 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_191AFBA38(v35 > 1, v36 + 1, 1);
        uint64_t v16 = v66;
      }
      *(void *)(v16 + 16) = v36 + 1;
      uint64_t v37 = v56;
      sub_191B5A768(v33, v16 + v57 + v36 * v56);
      v18 += v37;
      int64_t v15 = v34 - 1;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  if (qword_1E92E0F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v64 = qword_1E92E0F20;
  int64_t v65 = qword_1E92E0F28[0];
  uint64_t v38 = qword_1E92E0F50;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v39 = *(void *)algn_1E92E0F48;
  uint64_t v63 = qword_1E92E0F40;
  char v40 = (int *)type metadata accessor for ControlTemplatePicker(0);
  uint64_t v41 = v54;
  LODWORD(v62) = *((unsigned __int8 *)v54 + v40[8]);
  uint64_t v42 = sub_191CF3078();
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  uint64_t v44 = (uint64_t)v53;
  v43(v53, 1, 1, v42);
  char v45 = *((unsigned char *)v41 + v40[9]);
  LODWORD(v60) = *((unsigned __int8 *)v41 + v40[10]);
  LODWORD(v61) = *((unsigned __int8 *)v41 + v40[12]);
  uint64_t v46 = v55;
  uint64_t v47 = (uint64_t)v55 + v40[7];
  v43((char *)v47, 1, 1, v42);
  uint64_t v48 = (void *)((char *)v46 + v40[11]);
  *uint64_t v48 = 0;
  v48[1] = 0;
  uint64_t v49 = v64;
  *uint64_t v46 = v16;
  v46[1] = v49;
  uint64_t v50 = v63;
  v46[2] = v65;
  v46[3] = v50;
  v46[4] = v39;
  *((unsigned char *)v46 + v40[8]) = v62;
  swift_bridgeObjectRetain();
  sub_191B28FA4(v44, v47, (uint64_t *)&unk_1EB44BBA8);
  *((unsigned char *)v46 + v40[9]) = v45;
  *((unsigned char *)v46 + v40[10]) = v60;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v48 = 0;
  v48[1] = 0;
  *((unsigned char *)v46 + v40[12]) = v61;
  return result;
}

unint64_t sub_191B58B40(char a1)
{
  unint64_t result = 0x736E6F6974706FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x656C746974627573;
      break;
    case 3:
      unint64_t result = 0x746169636F737361;
      break;
    case 4:
      unint64_t result = 0x73417265646E6572;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x64656C6261736964;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191B58C74()
{
  return sub_191B58B40(*v0);
}

uint64_t sub_191B58C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B5C900(a1, a2);
  *a3 = result;
  return result;
}

void sub_191B58CA4(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_191B58CB0(uint64_t a1)
{
  unint64_t v2 = sub_191B5A7CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B58CEC(uint64_t a1)
{
  unint64_t v2 = sub_191B5A7CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplatePicker.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3588);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B5A7CC();
  sub_191CF6528();
  uint64_t v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3598);
  sub_191B5A820(&qword_1E92E35A0, &qword_1E92E35A8);
  sub_191CF6278();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_191CF61E8();
    LOBYTE(v11) = 2;
    sub_191CF61E8();
    type metadata accessor for ControlTemplatePicker(0);
    LOBYTE(v11) = 3;
    sub_191CF3078();
    sub_191B5A664(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
    sub_191CF6208();
    LOBYTE(v11) = 4;
    sub_191CF6228();
    LOBYTE(v11) = 5;
    sub_191CF6228();
    LOBYTE(v11) = 6;
    sub_191CF6228();
    LOBYTE(v11) = 7;
    sub_191CF61E8();
    LOBYTE(v11) = 8;
    sub_191CF6228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplatePicker.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E35B0);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for ControlTemplatePicker(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 8) = 0u;
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 28)];
  uint64_t v14 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = v9[11];
  uint64_t v41 = v12;
  uint64_t v42 = a1;
  uint64_t v16 = &v12[v15];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v39 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B5A7CC();
  uint64_t v38 = v8;
  unint64_t v17 = v40;
  sub_191CF6508();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_191B01770(v13, (uint64_t *)&unk_1EB44BBA8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = v5;
    uint64_t v18 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3598);
    char v43 = 0;
    sub_191B5A820(&qword_1E92E35B8, &qword_1E92E35C0);
    sub_191CF6178();
    uint64_t v19 = v41;
    *uint64_t v41 = v44;
    LOBYTE(v44) = 1;
    uint64_t v20 = sub_191CF60E8();
    uint64_t v21 = (uint64_t *)v39;
    v19[1] = v20;
    v19[2] = v22;
    LOBYTE(v44) = 2;
    uint64_t v23 = v18;
    v19[3] = sub_191CF60E8();
    uint64_t v19[4] = v24;
    LOBYTE(v44) = 3;
    sub_191B5A664(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    uint64_t v25 = (uint64_t)v40;
    sub_191CF6108();
    sub_191B28FA4(v25, v13, (uint64_t *)&unk_1EB44BBA8);
    LOBYTE(v44) = 4;
    *((unsigned char *)v19 + v9[8]) = sub_191CF6128() & 1;
    LOBYTE(v44) = 5;
    *((unsigned char *)v19 + v9[9]) = sub_191CF6128() & 1;
    LOBYTE(v44) = 6;
    *((unsigned char *)v19 + v9[10]) = sub_191CF6128() & 1;
    LOBYTE(v44) = 7;
    uint64_t v26 = sub_191CF60E8();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t *v21 = v26;
    v21[1] = v28;
    LOBYTE(v44) = 8;
    uint64_t v29 = v37;
    uint64_t v30 = v38;
    LOBYTE(v26) = sub_191CF6128();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v29);
    uint64_t v31 = (uint64_t)v41;
    uint64_t v32 = (uint64_t)v42;
    *((unsigned char *)v41 + v9[12]) = v26 & 1;
    sub_191B5A700(v31, v35, type metadata accessor for ControlTemplatePicker);
    __swift_destroy_boxed_opaque_existential_1(v32);
    return sub_191B5A604(v31, type metadata accessor for ControlTemplatePicker);
  }
}

uint64_t sub_191B5960C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B01614(v2 + *(int *)(a1 + 28), a2, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t sub_191B59638(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_191B59644(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_191B59650(void (*a1)(char *))
{
  return ControlTemplatePicker.validateIcon(_:)(a1);
}

uint64_t ControlTemplatePicker.validateIcon(_:)(void (*a1)(char *))
{
  uint64_t v24 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v23 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ControlTemplatePicker.Option(0);
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v15 = *(void *)(*v1 + 16);
  if (v15)
  {
    uint64_t v27 = v2;
    uint64_t v26 = &v13[*(int *)(result + 20)];
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v25 = *(void *)(v11 + 72);
    unint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v22 = (void (**)(char *, uint64_t))(v7 + 8);
    v20[1] = v14;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_191B5A700(v16, (uint64_t)v13, type metadata accessor for ControlTemplatePicker.Option);
      sub_191B01614((uint64_t)v26, (uint64_t)v5, qword_1EB4496F8);
      sub_191B5A604((uint64_t)v13, type metadata accessor for ControlTemplatePicker.Option);
      if ((*v17)(v5, 1, v6) == 1)
      {
        sub_191B01770((uint64_t)v5, qword_1EB4496F8);
      }
      else
      {
        uint64_t v18 = v23;
        (*v21)(v23, v5, v6);
        uint64_t v19 = v27;
        v24(v18);
        if (v19)
        {
          (*v22)(v18, v6);
          return swift_bridgeObjectRelease();
        }
        uint64_t v27 = 0;
        (*v22)(v18, v6);
      }
      v16 += v25;
      if (!--v15) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_191B59970(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_191B59980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplatePicker.init(from:)(a1, a2);
}

uint64_t sub_191B59998(void *a1)
{
  return ControlTemplatePicker.encode(to:)(a1);
}

uint64_t ControlTemplatePicker.debugDescription.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_191B568C0(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BFF8);
  sub_191B5A8B4();
  sub_191CF5288();
  swift_bridgeObjectRelease();
  sub_191CF5D88();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 0;
}

uint64_t _s9WidgetKit21ControlTemplatePickerV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v41 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v41 - v18;
  if ((sub_191B6C4D8(*a1, *a2) & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v20 = a1[2];
  uint64_t v21 = a2[2];
  if (!v20)
  {
    if (v21) {
      goto LABEL_26;
    }
    goto LABEL_9;
  }
  if (!v21) {
    goto LABEL_26;
  }
  if (a1[1] == a2[1] && v20 == v21 || (char v22 = sub_191CF6348(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_9:
    uint64_t v24 = a1[4];
    uint64_t v25 = a2[4];
    if (v24)
    {
      if (!v25) {
        goto LABEL_26;
      }
      if (a1[3] != a2[3] || v24 != v25)
      {
        char v26 = sub_191CF6348();
        char v23 = 0;
        if ((v26 & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v25)
    {
      goto LABEL_26;
    }
    uint64_t v27 = type metadata accessor for ControlTemplatePicker(0);
    uint64_t v44 = v5;
    uint64_t v28 = (int *)v27;
    sub_191B01614((uint64_t)a1 + *(int *)(v27 + 28), (uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v42 = v28;
    sub_191B01614((uint64_t)a2 + v28[7], (uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_191B01614((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v43 = v29;
    sub_191B01614((uint64_t)v17, v29, (uint64_t *)&unk_1EB44BBA8);
    uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    if (v30((uint64_t)v10, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
      sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
      if (v30(v43, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
LABEL_23:
        uint64_t v33 = v42;
        if (*((unsigned __int8 *)a1 + v42[8]) != *((unsigned __int8 *)a2 + v42[8])
          || *((unsigned __int8 *)a1 + v42[9]) != *((unsigned __int8 *)a2 + v42[9])
          || *((unsigned __int8 *)a1 + v42[10]) != *((unsigned __int8 *)a2 + v42[10]))
        {
          goto LABEL_26;
        }
        uint64_t v35 = v42[11];
        uint64_t v36 = (uint64_t *)((char *)a1 + v35);
        uint64_t v37 = *(uint64_t *)((char *)a1 + v35 + 8);
        uint64_t v38 = (uint64_t *)((char *)a2 + v35);
        uint64_t v39 = v38[1];
        if (v37)
        {
          if (v39)
          {
            if (*v36 != *v38 || v37 != v39)
            {
              char v40 = sub_191CF6348();
              char v23 = 0;
              if ((v40 & 1) == 0) {
                return v23 & 1;
              }
            }
LABEL_35:
            char v23 = *((unsigned char *)a1 + v33[12]) ^ *((unsigned char *)a2 + v33[12]) ^ 1;
            return v23 & 1;
          }
        }
        else if (!v39)
        {
          goto LABEL_35;
        }
LABEL_26:
        char v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_191B01614((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1EB44BBA8);
      if (v30(v43, 1, v4) != 1)
      {
        uint64_t v31 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v7, v43, v4);
        sub_191B5A664(&qword_1E92E3618, MEMORY[0x1E4F276F0]);
        LODWORD(v43) = sub_191CF52F8();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v31 + 8);
        v32(v7, v4);
        sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
        sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
        v32(v14, v4);
        sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1EB44BBA8);
        if ((v43 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_23;
      }
      sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
      sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v4);
    }
    sub_191B01770((uint64_t)v10, &qword_1E92E19C0);
    goto LABEL_26;
  }
  return v23 & 1;
}

uint64_t _s9WidgetKit21ControlTemplatePickerV6OptionV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF4868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_191CF6348(), uint64_t result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v48 = v7;
    uint64_t v24 = type metadata accessor for ControlTemplatePicker.Option(0);
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v50 = a1;
    sub_191B01614((uint64_t)a1 + v25, (uint64_t)v19, qword_1EB4496F8);
    uint64_t v49 = v24;
    uint64_t v26 = *(int *)(v24 + 20);
    long long v51 = a2;
    sub_191B01614((uint64_t)a2 + v26, (uint64_t)v17, qword_1EB4496F8);
    uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_191B01614((uint64_t)v19, (uint64_t)v10, qword_1EB4496F8);
    sub_191B01614((uint64_t)v17, v27, qword_1EB4496F8);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v10, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      if (v28(v27, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
LABEL_17:
        uint64_t v34 = v49;
        uint64_t v33 = v50;
        uint64_t v35 = *(int *)(v49 + 24);
        uint64_t v36 = v51;
        if (*((unsigned char *)v50 + v35 + 16))
        {
          if (!*((unsigned char *)v51 + v35 + 16)) {
            return 0;
          }
        }
        else if ((*((unsigned char *)v51 + v35 + 16) & 1) != 0 || (sub_191CF4DD8() & 1) == 0)
        {
          return 0;
        }
        uint64_t v37 = *(int *)(v34 + 28);
        uint64_t v38 = (void *)((char *)v33 + v37);
        uint64_t v39 = *(void *)((char *)v33 + v37 + 8);
        char v40 = (void *)((char *)v36 + v37);
        uint64_t v41 = v40[1];
        if (v39)
        {
          if (!v41) {
            return 0;
          }
          if (*v38 != *v40 || v39 != v41)
          {
            char v42 = sub_191CF6348();
            uint64_t result = 0;
            if ((v42 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v41)
        {
          return 0;
        }
        uint64_t v43 = *(int *)(v34 + 32);
        uint64_t v44 = (void *)((char *)v33 + v43);
        uint64_t v45 = *(void *)((char *)v33 + v43 + 8);
        uint64_t v46 = (void *)((char *)v36 + v43);
        uint64_t v47 = v46[1];
        if (v45)
        {
          if (v47 && (*v44 == *v46 && v45 == v47 || (sub_191CF6348() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v47)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_191B01614((uint64_t)v10, (uint64_t)v14, qword_1EB4496F8);
      if (v28(v27, 1, v4) != 1)
      {
        uint64_t v29 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v48, v27, v4);
        sub_191B5A664(&qword_1E92E3620, MEMORY[0x1E4F3DE60]);
        uint64_t v30 = v5;
        char v31 = sub_191CF52F8();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
        v32(v29, v4);
        sub_191B01770((uint64_t)v17, qword_1EB4496F8);
        sub_191B01770((uint64_t)v19, qword_1EB4496F8);
        v32(v14, v4);
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
        if ((v31 & 1) == 0) {
          return 0;
        }
        goto LABEL_17;
      }
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_191B01770((uint64_t)v10, &qword_1E92E19C8);
    return 0;
  }
  return result;
}

unint64_t sub_191B5A55C()
{
  unint64_t result = qword_1E92E3578;
  if (!qword_1E92E3578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3578);
  }
  return result;
}

unint64_t sub_191B5A5B0()
{
  unint64_t result = qword_1E92E2AF8;
  if (!qword_1E92E2AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2AF8);
  }
  return result;
}

uint64_t sub_191B5A604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B5A664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B5A6AC()
{
  unint64_t result = qword_1E92E2180;
  if (!qword_1E92E2180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2180);
  }
  return result;
}

uint64_t sub_191B5A700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B5A768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191B5A7CC()
{
  unint64_t result = qword_1E92E3590;
  if (!qword_1E92E3590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3590);
  }
  return result;
}

uint64_t sub_191B5A820(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92E3598);
    sub_191B5A664(a2, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker.Option);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B5A8B4()
{
  unint64_t result = qword_1E92E1980;
  if (!qword_1E92E1980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB44BFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1980);
  }
  return result;
}

uint64_t sub_191B5A910(void *a1)
{
  a1[1] = sub_191B5A664(&qword_1E92E35C8, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
  a1[2] = sub_191B5A664(&qword_1E92E35D0, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
  uint64_t result = sub_191B5A664(&qword_1E92E35D8, (void (*)(uint64_t))type metadata accessor for ControlTemplatePicker);
  a1[3] = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ControlTemplatePicker(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_191CF3078();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v15 = a3[9];
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v7 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[11];
    *((unsigned char *)v7 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    unint64_t v17 = (void *)((char *)v7 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    *((unsigned char *)v7 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ControlTemplatePicker(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_191CF3078();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplatePicker(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_191CF3078();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplatePicker(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for ControlTemplatePicker(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191CF3078();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

void *assignWithTake for ControlTemplatePicker(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF3078();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  uint64_t v18 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B5B3F0);
}

uint64_t sub_191B5B3F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B5B4B8);
}

void *sub_191B5B4B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191B5B564()
{
  sub_191B5C208(319, (unint64_t *)&qword_1EB44C548, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplatePicker.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_191CF4868();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    uint64_t v20 = (uint64_t *)((char *)v4 + v17);
    uint64_t v21 = (uint64_t *)((char *)a2 + v17);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplatePicker.Option(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_191CF4868();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplatePicker.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  uint64_t v18 = (void *)((char *)a1 + v15);
  uint64_t v19 = (void *)((char *)a2 + v15);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplatePicker.Option(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ControlTemplatePicker.Option(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ControlTemplatePicker.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  long long v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  uint64_t v20 = (void *)((char *)a1 + v17);
  uint64_t v21 = (void *)((char *)a2 + v17);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B5BFC8);
}

uint64_t sub_191B5BFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B5C09C);
}

uint64_t sub_191B5C09C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191B5C148()
{
  sub_191B5C208(319, &qword_1EB44B220, MEMORY[0x1E4F3DE60]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_191B5C208(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ControlTemplatePicker.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B5C3B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplatePicker.CodingKeys()
{
  return &type metadata for ControlTemplatePicker.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ControlTemplatePicker.Option.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B5C4BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplatePicker.Option.CodingKeys()
{
  return &type metadata for ControlTemplatePicker.Option.CodingKeys;
}

unint64_t sub_191B5C4F8()
{
  unint64_t result = qword_1E92E35E0;
  if (!qword_1E92E35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E35E0);
  }
  return result;
}

unint64_t sub_191B5C550()
{
  unint64_t result = qword_1E92E35E8;
  if (!qword_1E92E35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E35E8);
  }
  return result;
}

unint64_t sub_191B5C5A8()
{
  unint64_t result = qword_1E92E35F0;
  if (!qword_1E92E35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E35F0);
  }
  return result;
}

unint64_t sub_191B5C600()
{
  unint64_t result = qword_1E92E35F8;
  if (!qword_1E92E35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E35F8);
  }
  return result;
}

unint64_t sub_191B5C658()
{
  unint64_t result = qword_1E92E3600;
  if (!qword_1E92E3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3600);
  }
  return result;
}

unint64_t sub_191B5C6B0()
{
  unint64_t result = qword_1E92E3608;
  if (!qword_1E92E3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3608);
  }
  return result;
}

uint64_t sub_191B5C704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_191B5C900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73417265646E6572 && a2 == 0xEE00726564696C53 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000191D0E330 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E350 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E370)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_191B5CCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B5CD4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a5;
  a7[1] = a6;
  a7[2] = result;
  a7[3] = a2;
  a7[4] = a3;
  a7[5] = a4;
  return result;
}

uint64_t AppIntentConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v21 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v6);
  uint64_t v22 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v2[2];
  long long v9 = *v2;
  long long v28 = v2[1];
  long long v29 = v8;
  long long v27 = v9;
  long long v10 = v28;
  long long v11 = v8;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 32);
  v12[1] = *(_OWORD *)(a1 + 16);
  void v12[2] = v13;
  long long v14 = v2[1];
  v12[3] = *v2;
  void v12[4] = v14;
  v12[5] = v2[2];
  long long v15 = v27;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v15;
  *(_OWORD *)uint64_t v5 = v10;
  *((_OWORD *)v5 + 1) = v11;
  *((void *)v5 + 4) = sub_191B5D0F0;
  *((void *)v5 + 5) = v12;
  *((void *)v5 + 6) = sub_191B5D1D8;
  *((void *)v5 + 7) = v16;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_191B5D1E0((uint64_t)&v27);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v17 = v22;
  sub_191C92C0C((uint64_t)v5, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  unint64_t v18 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_191CF8410;
  sub_191B643F0(v17, v19 + v18, type metadata accessor for WidgetDescriptor);
  uint64_t v26 = v19;
  sub_191B5D22C();
  sub_191CF4418();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_191B5D280(v17);
}

uint64_t sub_191B5D028(void (**a1)(void *__return_ptr))
{
  (*a1)(v5);
  uint64_t v1 = v6;
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_191B5D0A8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B5D0F0()
{
  return sub_191B5D028((void (**)(void *__return_ptr))(v0 + 48));
}

uint64_t sub_191B5D100@<X0>(void (*a1)(void *__return_ptr)@<X0>, uint64_t *a2@<X8>)
{
  a1(v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
  a2[3] = v3;
  a2[4] = *(void *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_191B5D1A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B5D1D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_191B5D100(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_191B5D1E0(uint64_t a1)
{
  return a1;
}

unint64_t sub_191B5D22C()
{
  unint64_t result = qword_1EB44C678;
  if (!qword_1EB44C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44C678);
  }
  return result;
}

uint64_t sub_191B5D280(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppIntentRecommendation.init(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a6, a1, a5);
  uint64_t v13 = sub_191BDB080();
  uint64_t v15 = v14;
  sub_191B5D42C(a2, a3, a4 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, a5);
  uint64_t result = type metadata accessor for AppIntentRecommendation();
  uint64_t v17 = (uint64_t *)(a6 + *(int *)(result + 36));
  uint64_t *v17 = v13;
  v17[1] = v15;
  return result;
}

uint64_t sub_191B5D42C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for AppIntentRecommendation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AppIntentRecommendation.init(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a3, a1, a2);
  uint64_t v7 = sub_191CF4B78();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = sub_191BDB080();
  uint64_t v14 = v13;
  sub_191B5D42C(v7, v9, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  uint64_t result = type metadata accessor for AppIntentRecommendation();
  uint64_t v16 = (uint64_t *)(a3 + *(int *)(result + 36));
  *uint64_t v16 = v12;
  v16[1] = v14;
  return result;
}

uint64_t AppIntentRecommendation.init<A>(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v28 = a5;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a6);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t))(v14 + 16))(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a4);
  uint64_t v15 = sub_191CF4B88();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = sub_191BDB080();
  uint64_t v22 = v21;
  sub_191B5D42C(v15, v17, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, a4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, a3);
  uint64_t result = type metadata accessor for AppIntentRecommendation();
  uint64_t v24 = (uint64_t *)(v27 + *(int *)(result + 36));
  *uint64_t v24 = v20;
  v24[1] = v22;
  return result;
}

uint64_t AppIntentConfiguration.init<A>(kind:intent:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t (**a7)@<X0>(char **a1@<X8>)@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = sub_191B9846C(a5, a1);
  uint64_t v25 = v14;
  uint64_t v26 = v13;
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v19 = *(void *)(a8 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a5;
  *((void *)v22 + 3) = a6;
  *((void *)v22 + 4) = a8;
  *((void *)v22 + 5) = a9;
  *((void *)v22 + 6) = a10;
  *((void *)v22 + 7) = v26;
  *((void *)v22 + 8) = v16;
  *((void *)v22 + 9) = v25;
  *((void *)v22 + 10) = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v22[v20], a2, a8);
  uint64_t v23 = &v22[v21];
  *(void *)uint64_t v23 = a3;
  *((void *)v23 + 1) = a4;
  *a7 = sub_191B5DBC0;
  a7[1] = (uint64_t (*)@<X0>(char **@<X8>))v22;
  a7[2] = (uint64_t (*)@<X0>(char **@<X8>))v26;
  a7[3] = v16;
  a7[4] = v25;
  a7[5] = v18;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_191B5D964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char **a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v16 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](a1);
  char v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a10;
  uint64_t v28 = v19;
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  uint64_t v22 = type metadata accessor for AppIntentTimelineEntryProvider();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, a10);
  uint64_t v23 = sub_191B5E734(a1, a2, v25, a4, (uint64_t)v18, v26, a7);
  a8[3] = (char *)v22;
  a8[4] = (char *)swift_getWitnessTable();
  a8[5] = (char *)&off_1EE2A2FB8;
  *a8 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_191B5DAD4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B5DBC0@<X0>(char **a1@<X8>)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  unint64_t v3 = (uint64_t *)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_191B5D964(v1[7], v1[8], v1[9], v1[10], (uint64_t)v1 + v2, *v3, v3[1], a1, v1[3], v1[4]);
}

uint64_t sub_191B5DC60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191B5DCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_191B5DCAC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_191B5DCF0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_191B5DD48(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_191B5DDE4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyPathToggleBox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyPathToggleBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppIntentConfiguration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B5DEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_191B5DEF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191B5DF88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_191B5E08C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B5E0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191B5E184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191B5E218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_191B5E294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_191B5E320(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x191B5E46CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_191B5E480(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x191B5E660);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          char v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *char v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_191B5E688()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_191B5E734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (char *)swift_allocObject();
  uint64_t v15 = *(void *)v14;
  *((void *)v14 + 2) = a1;
  *((void *)v14 + 3) = a2;
  *((void *)v14 + 4) = a3;
  *((void *)v14 + 5) = a4;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v15 + 80) - 8) + 32))(&v14[*(void *)(v15 + 120)], a5);
  int v16 = &v14[*(void *)(*(void *)v14 + 128)];
  *(void *)int v16 = a6;
  *((void *)v16 + 1) = a7;
  return v14;
}

char *sub_191B5E81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = *(void *)v7;
  *((void *)v7 + 2) = a1;
  *((void *)v7 + 3) = a2;
  *((void *)v7 + 4) = a3;
  *((void *)v7 + 5) = a4;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v10 + 80) - 8) + 32))(&v7[*(void *)(v10 + 120)], a5);
  unsigned int v11 = &v7[*(void *)(*(void *)v7 + 128)];
  *(void *)unsigned int v11 = a6;
  *((void *)v11 + 1) = a7;
  return v7;
}

uint64_t sub_191B5E8CC()
{
  return 60;
}

uint64_t sub_191B5E9DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 80);
  v10[7] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v3, v2);
  v10[2] = v3;
  v10[3] = *(void *)(v1 + 88);
  v10[4] = v2;
  v10[5] = *(void *)(v1 + 104);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AppIntentRecommendation();
  uint64_t v4 = sub_191CF5618();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449550);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_191B55D64((void (*)(char *, char *))sub_191B64804, (uint64_t)v10, v4, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_191B5EB90(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_191CF5338();

    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_191CF2D18();
    sub_191CF2C98();
    id v6 = objc_allocWithZone(MEMORY[0x1E4F302B8]);
    uint64_t v7 = (void *)sub_191CF5318();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    uint64_t v8 = sub_191CF6328();
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    id v9 = objc_msgSend(v6, sel_initWithAppBundleIdentifier_linkAction_linkActionMetadata_, v7, v8, sub_191CF6328());
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    uint64_t v10 = (void *)(a1 + *(int *)(type metadata accessor for AppIntentRecommendation() + 36));
    uint64_t v11 = v10[1];
    v22[0] = *v10;
    v22[1] = v11;
    sub_191B64828();
    id v12 = v9;
    swift_bridgeObjectRetain_n();
    id v13 = v12;
    uint64_t v14 = sub_191CF4B88();
    uint64_t v16 = v15;
    LOBYTE(v8) = v17 & 1;
    uint64_t v18 = sub_191BDB080();
    uint64_t v20 = v19;
    sub_191B5D42C(v14, v16, v8);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    *a2 = v13;
    a2[1] = v18;
    a2[2] = v20;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_191B5EE2C(void *a1, uint64_t a2)
{
  id v33 = a1;
  id v4 = *(void **)v2;
  uint64_t v36 = type metadata accessor for TimelineReloadPolicy();
  uint64_t v5 = MEMORY[0x1F4188790](v36);
  uint64_t v37 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v4[11];
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v32 - v8;
  uint64_t v10 = v4[12];
  uint64_t v11 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v16 = *(void *)(a2 + 24);
  __int16 v17 = *(_WORD *)(a2 + 32);
  char v18 = *(unsigned char *)(a2 + 34);
  char v19 = *(unsigned char *)(a2 + 56);
  uint64_t v38 = *(void **)a2;
  uint64_t v15 = v38;
  long long v39 = *(_OWORD *)(a2 + 8);
  uint64_t v40 = v16;
  __int16 v41 = v17;
  char v42 = v18;
  long long v43 = *(_OWORD *)(a2 + 40);
  char v44 = v19;
  (*(void (**)(void **, uint64_t, uint64_t))(v10 + 48))(&v38, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v20 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
  (*(void (**)(char *))(v2 + *(void *)(*(void *)v2 + 128)))(v14);
  uint64_t v23 = v32;
  double v24 = sub_191CE2A38((uint64_t)v9, v32, v22 + v21);
  (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v23, v24);
  uint64_t v38 = v15;
  uint64_t v25 = qword_1EB44B1C0;
  id v26 = v33;
  id v27 = v15;
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB44B1D8);
  uint64_t v29 = v37;
  sub_191B643F0(v28, v37, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  uint64_t v30 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, (uint64_t *)&v38, (void *)v22, v29, 1);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
  return v30;
}

uint64_t sub_191B5F22C(uint64_t a1, uint64_t a2)
{
  v3[7] = a1;
  v3[8] = a2;
  uint64_t v4 = *v2;
  v3[9] = *(void *)(*v2 + 96);
  v3[10] = *(void *)(v4 + 80);
  v3[11] = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_191CF5BC8();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191B5F350, 0, 0);
}

uint64_t sub_191B5F350()
{
  id v1 = objc_msgSend(*(id *)(v0 + 64), sel_intentReference);
  if (v1
    && (uint64_t v2 = v1,
        id v3 = objc_msgSend(v1, sel_intent),
        v2,
        id v4 = objc_msgSend(v3, sel__asMigratedAppIntent),
        *(void *)(v0 + 128) = v4,
        v3,
        v4))
  {
    id v5 = objc_msgSend(v4, sel_linkAction);
    *(void *)(v0 + 136) = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      *(void *)(v0 + 40) = sub_191B647C4();
      *(void *)(v0 + 16) = v6;
      id v7 = v6;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v8;
      swift_getAssociatedConformanceWitness();
      *uint64_t v8 = v0;
      v8[1] = sub_191B5F644;
      uint64_t v9 = *(void *)(v0 + 112);
      return MEMORY[0x1F40D3CA8](v9, v0 + 16);
    }
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_191CF3858();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB44CCE0);
    id v12 = sub_191CF3838();
    os_log_type_t v13 = sub_191CF5928();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_191AF4000, v12, v13, "Error: Unable to get LNAction from intent", v14, 2u);
      MEMORY[0x192FE5F00](v14, -1, -1);
    }
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v16, 1, 1);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 88) - 8) + 56))(*(void *)(v0 + 56), 1, 1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_191B5F644()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_191B5F858;
  }
  else {
    uint64_t v2 = sub_191B5F758;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191B5F758()
{
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v4);
  (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 56), *(void *)(v0 + 120), *(void *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_191B5F858()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  if (qword_1EB44C750 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v0 + 152);
  uint64_t v4 = sub_191CF3858();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB44CCE0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_191CF3838();
  os_log_type_t v8 = sub_191CF5928();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void **)(v0 + 152);
  if (v9)
  {
    __int16 v17 = *(void **)(v0 + 128);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 48) = v14;
    sub_191CF5C08();
    *id v12 = v14;

    _os_log_impl(&dword_191AF4000, v7, v8, "Error getting AppIntent from LNAction: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E23C0);
    swift_arrayDestroy();
    MEMORY[0x192FE5F00](v12, -1, -1);
    MEMORY[0x192FE5F00](v11, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 56), *(void *)(v0 + 120), *(void *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_191B5FAE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v4;
  id v7 = (void *)*v4;
  *(void *)(v3 + 104) = *v4;
  *(void *)(v3 + 112) = type metadata accessor for TimelineReloadPolicy();
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = v7[11];
  *(void *)(v3 + 136) = swift_task_alloc();
  uint64_t v8 = sub_191CF3178();
  *(void *)(v3 + 144) = v8;
  *(void *)(v3 + 152) = *(void *)(v8 - 8);
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = v7[12];
  *(void *)(v3 + 176) = v7[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v3 + 184) = AssociatedTypeWitness;
  *(void *)(v3 + 192) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  *(void *)(v3 + 208) = v10;
  *(void *)(v3 + 216) = *(void *)(v10 - 8);
  *(void *)(v3 + 224) = swift_task_alloc();
  uint64_t v11 = sub_191CF5BC8();
  *(void *)(v3 + 232) = v11;
  *(void *)(v3 + 240) = *(void *)(v11 - 8);
  *(void *)(v3 + 248) = swift_task_alloc();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = *a2;
  *(void *)(v3 + 256) = v12;
  *(void *)(v3 + 264) = v13;
  *(_OWORD *)(v3 + 272) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 288) = a2[3];
  *(_WORD *)(v3 + 73) = *((_WORD *)a2 + 16);
  *(unsigned char *)(v3 + 75) = *((unsigned char *)a2 + 34);
  *(_OWORD *)(v3 + 296) = *(_OWORD *)(a2 + 5);
  *(unsigned char *)(v3 + 76) = *((unsigned char *)a2 + 56);
  *(void *)(v3 + 312) = sub_191CF5698();
  *(void *)(v3 + 320) = sub_191CF5688();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 328) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_191B5FE78;
  return sub_191B5F22C(v12, a1);
}

uint64_t sub_191B5FE78()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  *(void *)(v1 + 336) = v3;
  *(void *)(v1 + 344) = v2;
  return MEMORY[0x1F4188298](sub_191B5FFBC, v3, v2);
}

uint64_t sub_191B5FFBC()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 240) + 16))(v1, *(void *)(v0 + 256), *(void *)(v0 + 232));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v4 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 232);
    swift_release();
    id v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v4, v6);
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_191CF3858();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB44CCE0);
    BOOL v9 = sub_191CF3838();
    os_log_type_t v10 = sub_191CF5928();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 232);
    if (v11)
    {
      uint64_t v34 = *(void *)(v0 + 232);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v36 = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      *(void *)(v0 + 80) = sub_191C5C36C(0xD000000000000013, 0x8000000191D0E3D0, &v36);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v9, v10, "No AppIntent in %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v15, -1, -1);
      MEMORY[0x192FE5F00](v14, -1, -1);

      uint64_t v16 = v12;
      uint64_t v17 = v34;
    }
    else
    {

      uint64_t v16 = v12;
      uint64_t v17 = v13;
    }
    v7(v16, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31(0);
  }
  else
  {
    char v18 = *(unsigned char *)(v0 + 76);
    uint64_t v20 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 304);
    char v21 = *(unsigned char *)(v0 + 75);
    __int16 v22 = *(_WORD *)(v0 + 73);
    uint64_t v24 = *(void *)(v0 + 280);
    uint64_t v23 = *(void *)(v0 + 288);
    long long v32 = *(_OWORD *)(v0 + 264);
    uint64_t v35 = *(void *)(v0 + 168);
    (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 32))(*(void *)(v0 + 224), *(void *)(v0 + 248), *(void *)(v0 + 208));
    *(_OWORD *)(v0 + 16) = v32;
    *(void *)(v0 + 32) = v24;
    *(void *)(v0 + 40) = v23;
    *(_WORD *)(v0 + 48) = v22;
    *(unsigned char *)(v0 + 50) = v21;
    *(void *)(v0 + 56) = v20;
    *(void *)(v0 + 64) = v19;
    *(unsigned char *)(v0 + 72) = v18;
    id v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 + 56)
                                                                              + **(int **)(v35 + 56));
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_191B603D0;
    uint64_t v26 = *(void *)(v0 + 224);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v29 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 176);
    return v33(v27, v26, v0 + 16, v28, v29);
  }
}

uint64_t sub_191B603D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 344);
  uint64_t v3 = *(void *)(v1 + 336);
  return MEMORY[0x1F4188298](sub_191B604F0, v3, v2);
}

uint64_t sub_191B604F0()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[23];
  uint64_t v30 = v0[20];
  uint64_t v3 = v0[19];
  uint64_t v31 = v0[18];
  uint64_t v4 = v0[12];
  long long v32 = (void *)v0[11];
  uint64_t v34 = (void *)v0[33];
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v5 = (int *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_191CF8410;
  uint64_t v36 = (void *)v7;
  unint64_t v8 = v7 + v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v2, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))(v4 + *(void *)(*(void *)v4 + 128)))(v1);
  uint64_t v10 = sub_191CF5038();
  unint64_t v11 = v8 + v5[9];
  uint64_t v12 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v30, v31);
  *(void *)(v8 + v5[7]) = v10;
  unint64_t v13 = v8 + v5[8];
  *(void *)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 1;
  *(_OWORD *)(v8 + v5[10]) = xmmword_191CF8430;
  uint64_t v37 = v34;
  uint64_t v14 = qword_1EB44B1C0;
  id v15 = v32;
  id v16 = v34;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v17 = v0[30];
  uint64_t v33 = v0[29];
  uint64_t v35 = v0[32];
  uint64_t v18 = v0[27];
  uint64_t v19 = v0[28];
  uint64_t v21 = v0[25];
  uint64_t v20 = v0[26];
  uint64_t v23 = v0[23];
  uint64_t v22 = v0[24];
  uint64_t v24 = v0[15];
  uint64_t v25 = (void *)v0[11];
  uint64_t v26 = __swift_project_value_buffer(v0[14], (uint64_t)qword_1EB44B1D8);
  sub_191B643F0(v26, v24, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  uint64_t v27 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v25, (uint64_t *)&v37, v36, v24, 1);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v35, v33);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(uint64_t))v0[1];
  return v28(v27);
}

uint64_t sub_191B6089C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v3 + 104) = AssociatedTypeWitness;
  *(void *)(v3 + 112) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v8 = sub_191CF5BC8();
  *(void *)(v3 + 128) = v8;
  *(void *)(v3 + 136) = *(void *)(v8 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *a2;
  *(void *)(v3 + 152) = v9;
  *(void *)(v3 + 160) = v10;
  *(_OWORD *)(v3 + 168) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 184) = a2[3];
  *(_WORD *)(v3 + 73) = *((_WORD *)a2 + 16);
  *(unsigned char *)(v3 + 75) = *((unsigned char *)a2 + 34);
  *(_OWORD *)(v3 + 192) = *(_OWORD *)(a2 + 5);
  *(unsigned char *)(v3 + 76) = *((unsigned char *)a2 + 56);
  *(void *)(v3 + 208) = sub_191CF5698();
  *(void *)(v3 + 216) = sub_191CF5688();
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 224) = v11;
  *unint64_t v11 = v3;
  v11[1] = sub_191B60AB0;
  return sub_191B5F22C(v9, a1);
}

uint64_t sub_191B60AB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  *(void *)(v1 + 232) = v3;
  *(void *)(v1 + 240) = v2;
  return MEMORY[0x1F4188298](sub_191B60BF4, v3, v2);
}

uint64_t sub_191B60BF4()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 136) + 16))(v1, *(void *)(v0 + 152), *(void *)(v0 + 128));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 128);
    swift_release();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v4, v6);
    if (qword_1EB44C750 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_191CF3858();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB44CCE0);
    uint64_t v9 = sub_191CF3838();
    os_log_type_t v10 = sub_191CF5928();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 128);
    if (v11)
    {
      uint64_t v30 = *(void *)(v0 + 128);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v32 = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      *(void *)(v0 + 80) = sub_191C5C36C(0xD000000000000013, 0x8000000191D0E3B0, &v32);
      sub_191CF5C08();
      _os_log_impl(&dword_191AF4000, v9, v10, "No AppIntent in %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FE5F00](v15, -1, -1);
      MEMORY[0x192FE5F00](v14, -1, -1);

      uint64_t v16 = v12;
      uint64_t v17 = v30;
    }
    else
    {

      uint64_t v16 = v12;
      uint64_t v17 = v13;
    }
    v7(v16, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29(0);
  }
  else
  {
    char v18 = *(unsigned char *)(v0 + 76);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v19 = *(void *)(v0 + 200);
    char v21 = *(unsigned char *)(v0 + 75);
    __int16 v22 = *(_WORD *)(v0 + 73);
    uint64_t v24 = *(void *)(v0 + 176);
    uint64_t v23 = *(void *)(v0 + 184);
    long long v31 = *(_OWORD *)(v0 + 160);
    (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 144), *(void *)(v0 + 104));
    *(_OWORD *)(v0 + 16) = v31;
    *(void *)(v0 + 32) = v24;
    *(void *)(v0 + 40) = v23;
    *(_WORD *)(v0 + 48) = v22;
    *(unsigned char *)(v0 + 50) = v21;
    *(void *)(v0 + 56) = v20;
    *(void *)(v0 + 64) = v19;
    *(unsigned char *)(v0 + 72) = v18;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_191B60F54;
    uint64_t v26 = *(void *)(v0 + 120);
    uint64_t v27 = *(void *)(v0 + 88);
    return sub_191B63CC0(v27, (uint64_t *)(v0 + 16), v26);
  }
}

uint64_t sub_191B60F54(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  uint64_t v4 = *(void *)(v2 + 232);
  return MEMORY[0x1F4188298](sub_191B6107C, v4, v3);
}

uint64_t sub_191B6107C()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v1);
}

uint64_t sub_191B61158(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v39 = a7;
  uint64_t v40 = a4;
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  id v37 = a1;
  uint64_t v12 = (void *)*v7;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v17;
  long long v18 = a2[1];
  long long v41 = *a2;
  long long v42 = v18;
  v43[0] = a2[2];
  *(_OWORD *)((char *)v43 + 9) = *(long long *)((char *)a2 + 41);
  uint64_t v19 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_191CF5698();
  swift_retain();
  id v37 = v37;
  sub_191B64458((void **)&v41);
  swift_retain();
  uint64_t v20 = sub_191CF5688();
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = MEMORY[0x1E4FBCFD8];
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v12[10];
  uint64_t v26 = v34;
  *((void *)v24 + 5) = v12[11];
  *((void *)v24 + 6) = v26;
  *((void *)v24 + 7) = v12[12];
  *((void *)v24 + 8) = v12[13];
  *((void *)v24 + 9) = v39;
  (*(void (**)(char *, char *))(v13 + 32))(&v24[v21], v36);
  *(void *)&v24[v22] = v8;
  uint64_t v27 = (uint64_t)v38;
  *(void *)&v24[v23] = v37;
  uint64_t v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v29 = v42;
  *(_OWORD *)uint64_t v28 = v41;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v43[0];
  *(_OWORD *)(v28 + 41) = *(_OWORD *)((char *)v43 + 9);
  uint64_t v30 = &v24[(v23 + 79) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v31 = v35;
  *(void *)uint64_t v30 = v40;
  *((void *)v30 + 1) = v31;
  sub_191BC2CF8(v27, (uint64_t)&unk_1E92E3688, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_191B61460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[59] = v13;
  v8[60] = v14;
  v8[57] = a7;
  v8[58] = a8;
  v8[55] = a5;
  v8[56] = a6;
  v8[54] = a4;
  v8[61] = *a5;
  v8[62] = *(void *)(v14 - 8);
  v8[63] = swift_task_alloc();
  v8[64] = swift_task_alloc();
  sub_191CF5698();
  v8[65] = sub_191CF5688();
  uint64_t v10 = sub_191CF5648();
  v8[66] = v10;
  v8[67] = v9;
  return MEMORY[0x1F4188298](sub_191B61598, v10, v9);
}

uint64_t sub_191B61598()
{
  uint64_t v1 = *(void (**)(void, void, void))(*(void *)(v0 + 496) + 16);
  v1(*(void *)(v0 + 512), *(void *)(v0 + 432), *(void *)(v0 + 480));
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(long long **)(v0 + 456);
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 368);
    *(void *)(v0 + 544) = v4;
    char v5 = *(unsigned char *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 384);
    uint64_t v7 = *(void *)(v0 + 392);
    *(void *)(v0 + 552) = v7;
    long long v9 = v2[1];
    long long v8 = v2[2];
    long long v10 = *v2;
    *(_OWORD *)(v0 + 233) = *(long long *)((char *)v2 + 41);
    *(_OWORD *)(v0 + 208) = v9;
    *(_OWORD *)(v0 + 224) = v8;
    *(_OWORD *)(v0 + 192) = v10;
    *(void *)(v0 + 320) = v3;
    *(void *)(v0 + 328) = v4;
    *(unsigned char *)(v0 + 336) = v5;
    *(void *)(v0 + 344) = v6;
    *(void *)(v0 + 352) = v7;
    BOOL v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v11;
    *BOOL v11 = v0;
    v11[1] = sub_191B618D4;
    uint64_t v12 = *(void *)(v0 + 448);
    return sub_191B61E14(v12, (uint64_t *)(v0 + 192), v0 + 320);
  }
  else
  {
    uint64_t v14 = (_OWORD *)(v0 + 104);
    v1(*(void *)(v0 + 504), *(void *)(v0 + 432), *(void *)(v0 + 480));
    if (swift_dynamicCast())
    {
      uint64_t v15 = *(long long **)(v0 + 456);
      long long v16 = *(_OWORD *)(v0 + 152);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
      *(_OWORD *)(v0 + 64) = v16;
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
      *(void *)(v0 + 96) = *(void *)(v0 + 184);
      long long v17 = *(_OWORD *)(v0 + 120);
      *(_OWORD *)(v0 + 16) = *v14;
      *(_OWORD *)(v0 + 32) = v17;
      long long v19 = v15[1];
      long long v18 = v15[2];
      long long v20 = *v15;
      *(_OWORD *)(v0 + 297) = *(long long *)((char *)v15 + 41);
      *(_OWORD *)(v0 + 272) = v19;
      *(_OWORD *)(v0 + 288) = v18;
      *(_OWORD *)(v0 + 256) = v20;
      unint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v21;
      void *v21 = v0;
      v21[1] = sub_191B61AC4;
      uint64_t v22 = *(void *)(v0 + 448);
      return sub_191B62880(v22, (uint64_t *)(v0 + 256), v0 + 16);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 488);
      *uint64_t v14 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(void *)(v0 + 184) = 0;
      swift_release();
      sub_191B01770(v0 + 104, qword_1E92E3690);
      long long v24 = *(_OWORD *)(v23 + 96);
      *(_OWORD *)(v0 + 400) = *(_OWORD *)(v23 + 80);
      *(_OWORD *)(v0 + 416) = v24;
      type metadata accessor for AppIntentTimelineEntryProvider.Errors();
      swift_getWitnessTable();
      uint64_t v25 = (void *)swift_allocError();
      swift_willThrow();
      uint64_t v26 = *(void (**)(void *, uint64_t))(v0 + 464);
      id v27 = v25;
      v26(v25, 1);

      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
      return v28();
    }
  }
}

uint64_t sub_191B618D4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 568) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[67];
    uint64_t v6 = v4[66];
    uint64_t v7 = sub_191B61CA0;
  }
  else
  {
    v4[72] = a1;
    uint64_t v5 = v4[67];
    uint64_t v6 = v4[66];
    uint64_t v7 = sub_191B61A04;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_191B61A04()
{
  uint64_t v1 = *(void (**)(uint64_t, void))(v0 + 464);
  swift_release();
  uint64_t v2 = swift_retain();
  v1(v2, 0);
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_191B61AC4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[67];
    uint64_t v6 = v4[66];
    uint64_t v7 = sub_191B61D60;
  }
  else
  {
    v4[75] = a1;
    uint64_t v5 = v4[67];
    uint64_t v6 = v4[66];
    uint64_t v7 = sub_191B61BF4;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_191B61BF4()
{
  uint64_t v1 = *(void (**)(uint64_t, void))(v0 + 464);
  swift_release();
  uint64_t v2 = swift_retain();
  v1(v2, 0);
  swift_release_n();
  sub_191B64770(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_191B61CA0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)v0[71];
  uint64_t v2 = (void (*)(void *, uint64_t))v0[58];
  id v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191B61D60()
{
  swift_release();
  sub_191B64770((uint64_t)(v0 + 2));
  uint64_t v1 = (void *)v0[74];
  uint64_t v2 = (void (*)(void *, uint64_t))v0[58];
  id v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191B61E14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  *(void *)(v4 + 88) = swift_task_alloc();
  *(void *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 120) = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for Timeline();
  *(void *)(v4 + 128) = v7;
  *(void *)(v4 + 136) = *(void *)(v7 - 8);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a2;
  *(void *)(v4 + 152) = v8;
  *(void *)(v4 + 160) = v9;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 256) = *(unsigned char *)(a3 + 16);
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(a3 + 24);
  sub_191CF5698();
  *(void *)(v4 + 200) = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  *(void *)(v4 + 208) = v11;
  *(void *)(v4 + 216) = v10;
  return MEMORY[0x1F4188298](sub_191B62030, v11, v10);
}

uint64_t sub_191B62030()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  *(void *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  uint64_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview entries request being handled by AppIntentConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  char v5 = *(unsigned char *)(v0 + 256);
  long long v10 = *(_OWORD *)(v0 + 168);
  long long v11 = *(_OWORD *)(v0 + 184);

  *(_OWORD *)(v0 + 16) = v10;
  *(unsigned char *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v11;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_191B621B0;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(v7, v7, v8);
}

uint64_t sub_191B621B0(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[30] = a1;
  v3[31] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[26];
  uint64_t v5 = v3[27];
  if (v1) {
    uint64_t v6 = sub_191B625F4;
  }
  else {
    uint64_t v6 = sub_191B622C4;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191B622C4()
{
  uint64_t v29 = v0;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[30];
    uint64_t v4 = v0[14];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[7] = MEMORY[0x192FE4350](v3, v4);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v1, v2, "AppIntentConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1EB44B1C0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)v0[19];
  uint64_t v25 = (void *)v0[20];
  uint64_t v7 = v0[17];
  uint64_t v8 = (void *)v0[18];
  uint64_t v27 = v7;
  uint64_t v10 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[11];
  uint64_t v24 = v0[10];
  uint64_t v22 = v0[30];
  uint64_t v23 = v0[9];
  uint64_t v26 = (void *)v0[8];
  uint64_t v14 = __swift_project_value_buffer(v0[12], (uint64_t)qword_1EB44B1D8);
  sub_191B643F0(v14, v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v22, v11, v6);
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v8, v6, v9);
  uint64_t v15 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v8, (uint64_t)sub_191B643D4, v23, v15, v12, (uint64_t)&protocol witness table for ViewableTimelineEntry, v10, v13);
  uint64_t v28 = v25;
  long long v16 = (void *)*v13;
  sub_191B643F0((uint64_t)v13 + *(int *)(v24 + 36), v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v17 = v26;
  id v18 = v25;
  swift_bridgeObjectRetain();
  uint64_t v19 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v17, (uint64_t *)&v28, v16, v11, 0);
  sub_191B01770((uint64_t)v13, (uint64_t *)&unk_1EB44A2F0);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v6, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

uint64_t sub_191B625F4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_191B6268C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v5 = *a2;
  uint64_t v14 = *(void *)(*a2 + 88);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(void *)(*a2 + 128)))(a1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_191CE26B8((uint64_t)v10, (uint64_t)v7, AssociatedTypeWitness, v14, AssociatedConformanceWitness, *(void *)(v5 + 104), v15);
}

uint64_t sub_191B62880(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = v3;
  *(void *)(v4 + 80) = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 80);
  *(void *)(v4 + 104) = v7;
  *(void *)(v4 + 112) = *(void *)(v7 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = *(void *)(v6 + 96);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 136) = AssociatedTypeWitness;
  *(void *)(v4 + 144) = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *a2;
  *(void *)(v4 + 152) = v9;
  *(void *)(v4 + 160) = v10;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)(a2 + 1);
  *(void *)(v4 + 184) = a2[3];
  *(_WORD *)(v4 + 73) = *((_WORD *)a2 + 16);
  *(unsigned char *)(v4 + 75) = *((unsigned char *)a2 + 34);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(a2 + 5);
  *(unsigned char *)(v4 + 76) = *((unsigned char *)a2 + 56);
  sub_191CF5698();
  *(void *)(v4 + 208) = sub_191CF5688();
  uint64_t v12 = sub_191CF5648();
  *(void *)(v4 + 216) = v12;
  *(void *)(v4 + 224) = v11;
  return MEMORY[0x1F4188298](sub_191B62A54, v12, v11);
}

uint64_t sub_191B62A54()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  os_log_type_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview provider request being handled by AppIntentConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 104);

  TimelineProviderPreviewSource.unwrapContent<A>(for:)(v5, v6, v7, v7);
  char v8 = *(unsigned char *)(v0 + 76);
  char v9 = *(unsigned char *)(v0 + 75);
  __int16 v10 = *(_WORD *)(v0 + 73);
  uint64_t v11 = *(void *)(v0 + 184);
  *(void *)(v0 + 16) = *(void *)(v0 + 160);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 168);
  *(void *)(v0 + 40) = v11;
  *(_WORD *)(v0 + 48) = v10;
  *(unsigned char *)(v0 + 50) = v9;
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 192);
  *(unsigned char *)(v0 + 72) = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_191B62C8C;
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 80);
  return sub_191B63CC0(v14, (uint64_t *)(v0 + 16), v13);
}

uint64_t sub_191B62C8C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  return MEMORY[0x1F4188298](sub_191B62DB4, v4, v3);
}

uint64_t sub_191B62DB4()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v6 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[30];
  return v7(v8);
}

uint64_t sub_191B62E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_191CF5698();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_191CF5688();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_191BC2CF8((uint64_t)v8, (uint64_t)&unk_1E92E3670, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_191B62FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[2] = a5;
  v6[3] = a6;
  v6[4] = sub_191CF5698();
  v6[5] = sub_191CF5688();
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_191B63060;
  return sub_191B63224();
}

uint64_t sub_191B63060(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B631A4, v3, v2);
}

uint64_t sub_191B631A4()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void *))v0[2];
  swift_release();
  v2(v1);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_191B63224()
{
  uint64_t v2 = *v0;
  v1[7] = sub_191CF5698();
  v1[8] = sub_191CF5688();
  uint64_t v3 = *(void *)(v2 + 96);
  v1[9] = v3;
  uint64_t v4 = *(int **)(v3 + 96);
  uint64_t v5 = *(void *)(v2 + 80);
  v1[10] = v5;
  uint64_t v8 = (int *)((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[11] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_191B63394;
  return ((uint64_t (*)(void *, uint64_t, uint64_t))v8)(v1 + 6, v5, v3);
}

uint64_t sub_191B63394()
{
  swift_task_dealloc();
  uint64_t v1 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B634D0, v1, v0);
}

uint64_t sub_191B634D0()
{
  swift_release();
  if (v0[3].receiver)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v1 = type metadata accessor for WidgetRelevances();
    swift_getAssociatedConformanceWitness();
    unint64_t v2 = sub_191CEF3C4(v1);
    swift_bridgeObjectRelease();
    uint64_t v3 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v4 = objc_allocWithZone(v3);
    v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    uint64_t v5 = v4;
    uint64_t v6 = sub_191C2BF48(v2);
    swift_bridgeObjectRelease();
    *(void *)&v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v6;

    v0[2].receiver = v5;
    uint64_t v7 = v0 + 2;
  }
  else
  {
    uint64_t v3 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v8 = objc_allocWithZone(v3);
    v8[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    uint64_t v9 = v8;
    *(void *)&v9[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_191C2BF48(MEMORY[0x1E4FBC860]);

    v0[1].receiver = v9;
    uint64_t v7 = v0 + 1;
  }
  v7->super_class = v3;
  uint64_t v10 = [(objc_super *)v7 init];
  super_class = (uint64_t (*)(objc_super *))v0->super_class;
  return super_class(v10);
}

uint64_t sub_191B63688()
{
  return 1;
}

uint64_t sub_191B63690()
{
  return sub_191CF64C8();
}

uint64_t sub_191B636D4()
{
  return sub_191CF6478();
}

uint64_t sub_191B636FC()
{
  return sub_191CF64C8();
}

uint64_t *sub_191B6374C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  swift_release();
  return v0;
}

uint64_t sub_191B63800()
{
  sub_191B6374C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppIntentTimelineEntryProvider()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B63870()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191B638D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191B63978;
  return sub_191B5FAE4(a1, a2);
}

uint64_t sub_191B63978(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_191B63A74(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_191B649B0;
  return sub_191B6089C(a1, a2);
}

uint64_t sub_191B63B1C()
{
  return sub_191B5E9DC();
}

uint64_t sub_191B63B40(void *a1, uint64_t a2)
{
  return sub_191B5EE2C(a1, a2);
}

uint64_t sub_191B63B64(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_191B61158(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_191B63B88(uint64_t a1, uint64_t a2)
{
  return sub_191B62E7C(a1, a2);
}

uint64_t sub_191B63BAC()
{
  swift_getWitnessTable();

  return sub_191BDAE08();
}

uint64_t sub_191B63C00()
{
  return sub_191B5E8CC();
}

uint64_t sub_191B63C24(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_191B63C84(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191B63CC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = v3;
  *(void *)(v4 + 80) = a1;
  *(void *)(v4 + 88) = v5;
  uint64_t v7 = *v5;
  type metadata accessor for TimelineReloadPolicy();
  *(void *)(v4 + 96) = swift_task_alloc();
  *(void *)(v4 + 104) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v8 = *(void *)(v7 + 96);
  uint64_t v21 = *(void *)(v7 + 80);
  *(void *)(v4 + 120) = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 128) = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for Timeline();
  *(void *)(v4 + 136) = v9;
  *(void *)(v4 + 144) = *(void *)(v9 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v20 = swift_task_alloc();
  uint64_t v10 = *a2;
  *(void *)(v4 + 160) = v20;
  *(void *)(v4 + 168) = v10;
  long long v19 = *(_OWORD *)(a2 + 1);
  uint64_t v11 = a2[3];
  __int16 v12 = *((_WORD *)a2 + 16);
  LOBYTE(v7) = *((unsigned char *)a2 + 34);
  uint64_t v13 = a2[5];
  uint64_t v14 = a2[6];
  char v15 = *((unsigned char *)a2 + 56);
  *(void *)(v4 + 176) = sub_191CF5698();
  *(void *)(v4 + 184) = sub_191CF5688();
  *(void *)(v4 + 16) = v10;
  *(_OWORD *)(v4 + 24) = v19;
  *(void *)(v4 + 40) = v11;
  *(_WORD *)(v4 + 48) = v12;
  *(unsigned char *)(v4 + 50) = v7;
  *(void *)(v4 + 56) = v13;
  *(void *)(v4 + 64) = v14;
  *(unsigned char *)(v4 + 72) = v15;
  id v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 64) + **(int **)(v8 + 64));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v4 + 192) = v16;
  *uint64_t v16 = v4;
  v16[1] = sub_191B63FB0;
  return v18(v20, a3, v4 + 16, v21, v8);
}

uint64_t sub_191B63FB0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B640EC, v1, v0);
}

uint64_t sub_191B640EC()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = (void *)v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v7 = (uint64_t *)v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[13];
  uint64_t v17 = v0[12];
  id v18 = (void *)v0[21];
  uint64_t v9 = v0[11];
  long long v19 = (void *)v0[10];
  swift_release();
  (*(void (**)(void *, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v10 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v2, (uint64_t)sub_191B643D4, v9, v10, v6, (uint64_t)&protocol witness table for ViewableTimelineEntry, v5, v7);
  uint64_t v20 = v18;
  uint64_t v11 = (void *)*v7;
  sub_191B643F0((uint64_t)v7 + *(int *)(v8 + 36), v17, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v12 = v19;
  id v13 = v18;
  swift_bridgeObjectRetain();
  uint64_t v14 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v12, (uint64_t *)&v20, v11, v17, 1);
  sub_191B01770((uint64_t)v7, (uint64_t *)&unk_1EB44A2F0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_191B642C4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B6430C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191B62FB0(a1, v4, v5, v6, v7, v8);
}

double sub_191B643D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B6268C(a1, v2, a2);
}

uint64_t sub_191B643F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void **sub_191B64458(void **a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191B644A4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B645DC(uint64_t a1)
{
  uint64_t v3 = v1[6];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v3 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void **)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)((char *)v1 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_191B0A348;
  return sub_191B61460(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t type metadata accessor for AppIntentTimelineEntryProvider.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B64770(uint64_t a1)
{
  return a1;
}

unint64_t sub_191B647C4()
{
  unint64_t result = qword_1E92E23B0;
  if (!qword_1E92E23B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92E23B0);
  }
  return result;
}

void sub_191B64804(uint64_t a1@<X0>, void *a2@<X8>)
{
}

unint64_t sub_191B64828()
{
  unint64_t result = qword_1E92E0BB0;
  if (!qword_1E92E0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0BB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OptionalLocalizationsWrapper.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_191B648D0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191B6496CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B64994()
{
  return swift_getWitnessTable();
}

id WidgetInfo.configuration.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t WidgetInfo.widgetConfigurationIntent<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_191B64A78(v2 + 40, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FF8);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t sub_191B64A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void WidgetInfo.family.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t WidgetInfo.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void WidgetInfo.internalFamily.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t WidgetInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B64B34(v1, a1);
}

uint64_t sub_191B64B34(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL static WidgetInfo.== infix(_:_:)()
{
  sub_191CF6468();
  WidgetInfo.hash(into:)();
  uint64_t v0 = sub_191CF64C8();
  sub_191CF6468();
  WidgetInfo.hash(into:)();
  return v0 == sub_191CF64C8();
}

uint64_t WidgetInfo.hashValue.getter()
{
  return sub_191CF64C8();
}

void WidgetInfo.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if (*v0)
  {
    sub_191CF6488();
    id v3 = v2;
    sub_191CF5B68();
  }
  else
  {
    sub_191CF6488();
  }
  sub_191CF6478();
  sub_191CF6478();
  swift_bridgeObjectRetain();
  sub_191CF5388();
  swift_bridgeObjectRelease();
  sub_191B64A78((uint64_t)(v1 + 5), (uint64_t)v6);
  if (!v7)
  {
    sub_191B01770((uint64_t)v6, &qword_1E92E0FF8);
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(v6, v7);
  sub_191CF2D18();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!*((void *)&v9 + 1))
  {
LABEL_9:
    sub_191B01770((uint64_t)&v8, (uint64_t *)&unk_1EB44BC90);
    goto LABEL_10;
  }
  sub_191B016E0(0, (unint64_t *)&qword_1EB44B940);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (void *)v6[0];
    sub_191CF6488();
    id v5 = v4;
    sub_191CF5B68();

    return;
  }
LABEL_10:
  sub_191CF6488();
}

uint64_t sub_191B64DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_191B64B34(v1, a1);
}

uint64_t sub_191B64DC0()
{
  return sub_191CF64C8();
}

uint64_t sub_191B64E04()
{
  return sub_191CF64C8();
}

BOOL sub_191B64E40()
{
  sub_191CF6468();
  WidgetInfo.hash(into:)();
  uint64_t v0 = sub_191CF64C8();
  sub_191CF6468();
  WidgetInfo.hash(into:)();
  return v0 == sub_191CF64C8();
}

uint64_t WidgetInfo.debugDescription.getter()
{
  uint64_t v1 = v0;
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_191CF5D88();
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_191CF53B8();
  if (*v0)
  {
    id v2 = *v0;
    id v3 = objc_msgSend(v2, sel_description);
    sub_191CF5338();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191B64A78((uint64_t)(v1 + 5), (uint64_t)v6);
  uint64_t v4 = v7;
  sub_191B01770((uint64_t)v6, &qword_1E92E0FF8);
  if (v4)
  {
    sub_191B64A78((uint64_t)(v1 + 5), (uint64_t)v6);
    if (!v7)
    {
      __break(1u);
      goto LABEL_9;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3718);
    sub_191CF5368();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  switch(*((unsigned char *)v1 + 8))
  {
    case 4:
      break;
    default:
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      sub_191CF53B8();
      swift_bridgeObjectRetain();
      sub_191CF53B8();
      swift_bridgeObjectRelease();
      return v8;
  }
LABEL_9:
  sub_191CF6338();
  __break(1u);
  JUMPOUT(0x191B651C0);
}

uint64_t sub_191B651E4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return MEMORY[0x1F4188298](sub_191B65204, 0, 0);
}

uint64_t sub_191B65204()
{
  uint64_t v24 = v0;
  swift_unknownObjectRetain();
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClassUnconditional();
  *(void *)(v0 + 104) = v1;
  id v2 = objc_msgSend(v1, sel_intentReference);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_intent);
    *(void *)(v0 + 112) = v4;

    if (v4)
    {
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();
      if (v5)
      {
        unint64_t v6 = (_OWORD *)(v0 + 56);
        **(void **)(v0 + 88) = 0;
        id v7 = objc_msgSend(v5, sel_linkAction);
        if (v7)
        {
          id v8 = v7;
          *(void *)(v0 + 80) = sub_191B016E0(0, (unint64_t *)&qword_1E92E23B0);
          *(void *)(v0 + 56) = v8;
        }
        else
        {
          *unint64_t v6 = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
        }
        uint64_t v22 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v22;
        *uint64_t v22 = v0;
        v22[1] = sub_191B654F8;
        return MEMORY[0x1F40D3A38](v0 + 16, v6);
      }
    }
  }
  uint64_t v9 = *(void *)(v0 + 88);
  id v10 = objc_msgSend(v1, sel_intentReference);
  id v11 = objc_msgSend(v10, sel__typedIntent);

  *(void *)uint64_t v9 = v11;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(void *)(v9 + 72) = 0;
  uint64_t v12 = *(void *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v23);
  unsigned int v13 = v23;
  *(unsigned char *)(v12 + 32) = v23;
  if (v13 < 0xD && ((0x13BFu >> v13) & 1) != 0)
  {
    char v15 = *(void **)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 88);
    *(unsigned char *)(v16 + 8) = byte_191CFAF0C[(char)v13];
    id v17 = objc_msgSend(v15, sel_kind);
    uint64_t v18 = sub_191CF5338();
    uint64_t v20 = v19;
    swift_unknownObjectRelease();

    *(void *)(v16 + 16) = v18;
    *(void *)(v16 + 24) = v20;
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    return sub_191CF6338();
  }
}

uint64_t sub_191B654F8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    id v3 = sub_191B65774;
  }
  else
  {
    sub_191B01770(v2 + 56, (uint64_t *)&unk_1EB44BC90);
    id v3 = sub_191B65620;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191B65620()
{
  uint64_t v12 = v0;

  sub_191B65CFC(v0 + 16, *(void *)(v0 + 88) + 40);
  uint64_t v1 = *(void *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v11);
  unsigned int v2 = v11;
  *(unsigned char *)(v1 + 32) = v11;
  if (v2 < 0xD && ((0x13BFu >> v2) & 1) != 0)
  {
    id v4 = *(void **)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 88);
    *(unsigned char *)(v5 + 8) = byte_191CFAF0C[(char)v2];
    id v6 = objc_msgSend(v4, sel_kind);
    uint64_t v7 = sub_191CF5338();
    uint64_t v9 = v8;
    swift_unknownObjectRelease();

    *(void *)(v5 + 16) = v7;
    *(void *)(v5 + 24) = v9;
    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    return sub_191CF6338();
  }
}

uint64_t sub_191B65774()
{
  uint64_t v12 = v0;

  sub_191B01770(v0 + 56, (uint64_t *)&unk_1EB44BC90);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  sub_191B65CFC(v0 + 16, *(void *)(v0 + 88) + 40);
  uint64_t v1 = *(void *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v11);
  unsigned int v2 = v11;
  *(unsigned char *)(v1 + 32) = v11;
  if (v2 < 0xD && ((0x13BFu >> v2) & 1) != 0)
  {
    id v4 = *(void **)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 88);
    *(unsigned char *)(v5 + 8) = byte_191CFAF0C[(char)v2];
    id v6 = objc_msgSend(v4, sel_kind);
    uint64_t v7 = sub_191CF5338();
    uint64_t v9 = v8;
    swift_unknownObjectRelease();

    *(void *)(v5 + 16) = v7;
    *(void *)(v5 + 24) = v9;
    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    return sub_191CF6338();
  }
}

unint64_t sub_191B658EC()
{
  unint64_t result = qword_1E92E3720;
  if (!qword_1E92E3720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3720);
  }
  return result;
}

unint64_t sub_191B65944()
{
  unint64_t result = qword_1E92E3728;
  if (!qword_1E92E3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E92E3728);
  }
  return result;
}

uint64_t destroy for WidgetInfo(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  return result;
}

uint64_t initializeWithCopy for WidgetInfo(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a1 + 40;
  uint64_t v7 = a2 + 40;
  uint64_t v8 = *(void *)(a2 + 64);
  id v9 = v4;
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v11;
    *(void *)(v6 + 32) = *(void *)(v7 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetInfo(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 40);
    long long v9 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for WidgetInfo(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetInfo()
{
  return &type metadata for WidgetInfo;
}

uint64_t sub_191B65CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B65D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = sub_191CF5BC8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))((char *)&v14 - v11, 1, 1, a4);
  sub_191B65E50(a1, a2, a3, (uint64_t)v12, a5);
  swift_retain();
  return swift_retain();
}

uint64_t sub_191B65E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  long long v6 = (char *)a5 + *(int *)(type metadata accessor for DedupedSequence.DedupedIterator() + 32);
  uint64_t v7 = sub_191CF5BC8();
  long long v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t sub_191B65EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B678);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for ViewableTimelineEntry();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v21 - v15;
  sub_191B660E0(a1, (uint64_t)v9);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    uint64_t v18 = (uint64_t)v9;
  }
  else
  {
    sub_191B661A8((uint64_t)v9, (uint64_t)v16);
    sub_191B660E0(a2, (uint64_t)v7);
    if (v17(v7, 1, v10) != 1)
    {
      sub_191B661A8((uint64_t)v7, (uint64_t)v14);
      char v19 = sub_191CF3158();
      sub_191B6620C((uint64_t)v14);
      sub_191B6620C((uint64_t)v16);
      return v19 & 1;
    }
    sub_191B6620C((uint64_t)v16);
    uint64_t v18 = (uint64_t)v7;
  }
  sub_191B66148(v18);
  char v19 = 0;
  return v19 & 1;
}

uint64_t sub_191B660E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B66148(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B678);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191B661A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewableTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B6620C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewableTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191B6626C()
{
  swift_release();

  return swift_release();
}

uint64_t sub_191B662A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_191B662EC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_191B6634C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for DedupedSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191B663AC()
{
  uint64_t result = sub_191CF5BC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_191B66458(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 24) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  uint64_t v12 = *a2;
  *a1 = *a2;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    a1 = (uint64_t *)(v12 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)(((unint64_t)v15 + v8 + 16) & ~v8);
    char v19 = (const void *)(((unint64_t)v16 + v8 + 16) & ~v8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    swift_retain();
    if (v20(v19, 1, v4))
    {
      memcpy(v18, v19, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_191B665F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

void *sub_191B666CC(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  *unint64_t v6 = *(void *)(v4 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  uint64_t v12 = (const void *)((v10 + 16 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v13(v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84)) {
      size_t v14 = *(void *)(v9 + 64);
    }
    else {
      size_t v14 = *(void *)(v9 + 64) + 1;
    }
    memcpy(v11, v12, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  return a1;
}

void *sub_191B66810(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  *unint64_t v6 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)(((unint64_t)v6 + v11 + 16) & ~v11);
  uint64_t v13 = (void *)((v11 + 16 + v7) & ~v11);
  size_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v14(v12, 1, v9);
  int v15 = v14(v13, 1, v9);
  if (v7)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v12, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      return a1;
    }
    int v16 = *(_DWORD *)(v10 + 84);
    size_t v17 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v12, v13, v9);
      return a1;
    }
    char v19 = *(void (**)(void *, uint64_t))(v10 + 8);
    uint64_t v18 = v10 + 8;
    v19(v12, v9);
    int v16 = *(_DWORD *)(v18 + 76);
    size_t v17 = *(void *)(v18 + 56);
  }
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  memcpy(v12, v13, v20);
  return a1;
}

void *sub_191B669C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (void *)(((unint64_t)v4 + v8 + 16) & ~v8);
  uint64_t v10 = (const void *)(((unint64_t)v5 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_191B66AF4(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v6 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v6 = *(_OWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  size_t v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  uint64_t v12 = (void *)((v10 + 16 + v7) & ~v10);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  int v14 = v13(v12, 1, v8);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    uint64_t v18 = *(void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v17 = v9 + 8;
    v18(v11, v8);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

uint64_t sub_191B66C98(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 24) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v8
                                                                     + 16) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        return (v17 + 1);
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_191B66E7C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 24) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x191B67190);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v21 = (unsigned char *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v27 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11;
            v26(v27, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)uint64_t v21 = v23;
                  break;
                case 3:
                  *(_WORD *)uint64_t v21 = v23;
                  void v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v21 = v23;
                  break;
                default:
                  unsigned char *v21 = v23;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v20 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v20 = a2 - 1;
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DedupedSequence.DedupedIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191B671E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v27 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_191CF5BC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unsigned int v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (char *)&v22 - v11;
  uint64_t v12 = *(void *)(v5 - 8);
  size_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v14 = v12 + 56;
  uint64_t v26 = v5;
  v13(a2, 1, 1, v5);
  unsigned int v15 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v23 = v7;
  int v24 = (void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  unsigned int v16 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  unsigned int v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v14 - 8);
  int v18 = v25;
  do
  {
    uint64_t v19 = v26;
    sub_191CF5D38();
    uint64_t v20 = *v15;
    (*v15)(a2, v6);
    (*v24)(a2, v18, v6);
    (*v16)(v10, a2, v6);
    LODWORD(v19) = (*v17)(v10, 1, v19);
    v20((uint64_t)v10, v6);
  }
  while (v19 != 1
       && ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a2, v3 + *(int *)(v27 + 32)) & 1) != 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))(v3 + *(int *)(v27 + 32), a2, v6);
}

uint64_t sub_191B67418()
{
  return swift_getWitnessTable();
}

uint64_t sub_191B67434@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_191B65D64(*v2, v2[1], v2[2], *(void *)(a1 + 16), a2);
  swift_release();

  return swift_release();
}

uint64_t sub_191B67484()
{
  uint64_t v0 = sub_191B674CC();
  swift_release();
  swift_release();
  return v0;
}

uint64_t StaticConfiguration.body.getter()
{
  uint64_t v1 = type metadata accessor for ViewSource(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (void *)((char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for WidgetDescriptor(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  uint64_t v9 = v0[1];
  uint64_t v10 = v0[2];
  uint64_t v11 = v0[3];
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[5];
  *uint64_t v3 = v10;
  v3[1] = v11;
  v3[2] = v12;
  v3[3] = v13;
  v3[4] = 0;
  v3[5] = 0;
  v3[6] = v8;
  v3[7] = v9;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_191C92C0C((uint64_t)v3, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44C670);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_191CF8410;
  sub_191B643F0((uint64_t)v7, v15 + v14, type metadata accessor for WidgetDescriptor);
  v17[1] = v15;
  sub_191B5D22C();
  sub_191CF4418();
  swift_bridgeObjectRelease();
  return sub_191B5D280((uint64_t)v7);
}

uint64_t StaticConfiguration.init<A>(kind:provider:content:)@<X0>(uint64_t (*a1)@<X0>(char **a1@<X8>)@<X0>, uint64_t (*a2)@<X0>(char **a1@<X8>)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)@<X0>(char **a1@<X8>)@<X8>, uint64_t a10)
{
  uint64_t v15 = *(void *)(a7 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  int v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a6;
  *((void *)v18 + 3) = a7;
  *((void *)v18 + 4) = a8;
  *((void *)v18 + 5) = a10;
  *((void *)v18 + 6) = a1;
  *((void *)v18 + 7) = a2;
  *((void *)v18 + 8) = 0;
  *((void *)v18 + 9) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(&v18[v16], a3, a7);
  uint64_t v19 = &v18[v17];
  *(void *)uint64_t v19 = a4;
  *((void *)v19 + 1) = a5;
  *a9 = sub_191B67A70;
  a9[1] = (uint64_t (*)@<X0>(char **@<X8>))v18;
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = 0;
  a9[5] = 0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_191B6781C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char **a8@<X8>, uint64_t a9)
{
  uint64_t v24 = a3;
  uint64_t v25 = a6;
  uint64_t v15 = *(void *)(a9 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a9;
  uint64_t v27 = v18;
  uint64_t v28 = v20;
  uint64_t v29 = v19;
  uint64_t v21 = type metadata accessor for TimelineEntryProvider();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, a9);
  uint64_t v22 = sub_191B5E734(a1, a2, v24, a4, (uint64_t)v17, v25, a7);
  a8[3] = (char *)v21;
  a8[4] = (char *)swift_getWitnessTable();
  *a8 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_191B67984()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B67A70@<X0>(char **a1@<X8>)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80);
  unint64_t v3 = (uint64_t *)((char *)v1 + ((*(void *)(*(void *)(v1[3] - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_191B6781C(v1[6], v1[7], v1[8], v1[9], (uint64_t)v1 + v2, *v3, v3[1], a1, v1[3]);
}

uint64_t sub_191B67B0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for StaticConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191B67B68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_191B67C14()
{
  return 60;
}

uint64_t sub_191B67CDC(void *a1, uint64_t a2)
{
  id v33 = a1;
  uint64_t v4 = *(void **)v2;
  uint64_t v36 = type metadata accessor for TimelineReloadPolicy();
  uint64_t v5 = MEMORY[0x1F4188790](v36);
  uint64_t v37 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v4[11];
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = v4[12];
  uint64_t v11 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v14 = (char *)&v32 - v13;
  uint64_t v16 = *(void *)(a2 + 24);
  __int16 v17 = *(_WORD *)(a2 + 32);
  char v18 = *(unsigned char *)(a2 + 34);
  char v19 = *(unsigned char *)(a2 + 56);
  uint64_t v38 = *(void **)a2;
  uint64_t v15 = v38;
  long long v39 = *(_OWORD *)(a2 + 8);
  uint64_t v40 = v16;
  __int16 v41 = v17;
  char v42 = v18;
  long long v43 = *(_OWORD *)(a2 + 40);
  char v44 = v19;
  (*(void (**)(void **, uint64_t, uint64_t))(v10 + 24))(&v38, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  uint64_t v20 = *(void *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
  (*(void (**)(char *))(v2 + *(void *)(*(void *)v2 + 128)))(v14);
  uint64_t v23 = v32;
  double v24 = sub_191CE2A38((uint64_t)v9, v32, v22 + v21);
  (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v23, v24);
  uint64_t v38 = v15;
  uint64_t v25 = qword_1EB44B1C0;
  id v26 = v33;
  id v27 = v15;
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v36, (uint64_t)qword_1EB44B1D8);
  uint64_t v29 = v37;
  sub_191B643F0(v28, v37, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  uint64_t v30 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, (uint64_t *)&v38, (void *)v22, v29, 1);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
  return v30;
}

uint64_t sub_191B680DC(void *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  long long v10 = a2[1];
  v20[0] = *a2;
  v20[1] = v10;
  long long v11 = a2[1];
  v21[0] = a2[2];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)a2 + 41);
  v18[0] = *a2;
  v18[1] = v11;
  v19[0] = a2[2];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v4;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 40) = a1;
  long long v13 = a2[1];
  *(_OWORD *)(v12 + 48) = *a2;
  *(_OWORD *)(v12 + 64) = v13;
  *(_OWORD *)(v12 + 80) = a2[2];
  *(_OWORD *)(v12 + 89) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v14 = *(void *)(v9 + 96);
  uint64_t v15 = *(void (**)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, void, uint64_t))(v14 + 32);
  swift_retain();
  swift_retain();
  id v16 = a1;
  sub_191B64458((void **)v20);
  v15(v18, sub_191B6BA18, v12, *(void *)(v9 + 80), v14);
  return swift_release();
}

uint64_t sub_191B68238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _OWORD *a6)
{
  id v33 = a5;
  uint64_t v34 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v8 = *(void **)a2;
  uint64_t v30 = *(void *)(*(void *)a2 + 96);
  uint64_t v29 = v8[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v27 - v11;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v27 - v11, a1);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  __int16 v17 = (char *)swift_allocObject();
  uint64_t v18 = AssociatedTypeWitness;
  *((void *)v17 + 2) = v29;
  *((void *)v17 + 3) = v8[11];
  *((void *)v17 + 4) = v30;
  *((void *)v17 + 5) = v8[13];
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v13], v12, v18);
  *(void *)&v17[v14] = a2;
  char v19 = &v17[v15];
  uint64_t v20 = v32;
  *(void *)char v19 = v31;
  *((void *)v19 + 1) = v20;
  unint64_t v21 = v33;
  *(void *)&v17[v16] = v33;
  uint64_t v22 = &v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v23 = v34;
  long long v24 = v34[1];
  *(_OWORD *)uint64_t v22 = *v34;
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = v23[2];
  *(_OWORD *)(v22 + 41) = *(_OWORD *)((char *)v23 + 41);
  swift_retain();
  swift_retain();
  id v25 = v21;
  sub_191B64458((void **)v23);
  sub_191C2ADB8((uint64_t)sub_191B6BB64, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_191B68480(uint64_t a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void *a5, void **a6)
{
  uint64_t v35 = a6;
  id v36 = a5;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v31 = a1;
  uint64_t v7 = *a2;
  uint64_t v37 = type metadata accessor for TimelineReloadPolicy();
  uint64_t v8 = MEMORY[0x1F4188790](v37);
  uint64_t v38 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = *(void *)(v7 + 88);
  MEMORY[0x1F4188790](v8);
  v30[0] = (char *)v30 - v10;
  uint64_t v11 = sub_191CF3178();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B698);
  unint64_t v14 = (int *)(type metadata accessor for ViewableTimelineEntry() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_191CF8410;
  uint64_t v34 = (void *)v16;
  unint64_t v17 = v16 + v15;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v19 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v20 = swift_checkMetadataState();
  uint64_t v21 = v31;
  v19(v20, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(void *)(*a2 + 128)))(v21);
  uint64_t v22 = sub_191CF5038();
  unint64_t v23 = v17 + v14[9];
  uint64_t v24 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v17, v13, v33);
  *(void *)(v17 + v14[7]) = v22;
  unint64_t v25 = v17 + v14[8];
  *(void *)unint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 1;
  *(_OWORD *)(v17 + v14[10]) = xmmword_191CF8430;
  __int16 v41 = *v35;
  id v42 = v41;
  id v26 = v36;
  sub_191B6B980(&v42);
  if (qword_1EB44B1C0 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB44B1D8);
  uint64_t v28 = v38;
  sub_191B643F0(v27, v38, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, (uint64_t *)&v41, v34, v28, 1);
  v40();
  return swift_release();
}

uint64_t sub_191B688C8(void *a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  long long v10 = a3[1];
  v22[0] = *a3;
  v22[1] = v10;
  long long v12 = *a3;
  long long v11 = a3[1];
  v23[0] = a3[2];
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)((char *)a3 + 41);
  uint64_t v13 = *v5;
  v20[0] = v12;
  v20[1] = v11;
  v21[0] = a3[2];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)a3 + 41);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v5;
  *(void *)(v14 + 24) = a4;
  *(void *)(v14 + 32) = a5;
  *(void *)(v14 + 40) = a1;
  long long v15 = a3[1];
  *(_OWORD *)(v14 + 48) = *a3;
  *(_OWORD *)(v14 + 64) = v15;
  *(_OWORD *)(v14 + 80) = a3[2];
  *(_OWORD *)(v14 + 89) = *(_OWORD *)((char *)a3 + 41);
  uint64_t v16 = *(void *)(v13 + 96);
  unint64_t v17 = *(void (**)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, void, uint64_t))(v16 + 40);
  swift_retain();
  swift_retain();
  id v18 = a1;
  sub_191B64458((void **)v22);
  v17(v20, sub_191B6B658, v14, *(void *)(v13 + 80), v16);
  return swift_release();
}

uint64_t sub_191B68A10(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = *a2;
  uint64_t v29 = *(void *)(v30 + 96);
  uint64_t v28 = *(void *)(v30 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for Timeline();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  long long v12 = (char *)&v27 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v27 - v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v30;
  *((void *)v17 + 2) = v28;
  *((void *)v17 + 3) = *(void *)(v18 + 88);
  *((void *)v17 + 4) = v29;
  *((void *)v17 + 5) = *(void *)(v18 + 104);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v13], v12, v8);
  *(void *)&v17[v14] = a2;
  char v19 = &v17[v15];
  uint64_t v20 = v32;
  *(void *)char v19 = v31;
  *((void *)v19 + 1) = v20;
  uint64_t v22 = v33;
  uint64_t v21 = v34;
  *(void *)&v17[v16] = v33;
  unint64_t v23 = &v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v24 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)unint64_t v23 = *(_OWORD *)v21;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v23 + 41) = *(_OWORD *)(v21 + 41);
  swift_retain();
  swift_retain();
  id v25 = v22;
  sub_191B64458((void **)v21);
  sub_191C2ADB8((uint64_t)sub_191B6B860, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_191B68C9C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, id *a6)
{
  id v26 = a6;
  id v27 = a5;
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for Timeline();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (uint64_t *)((char *)&v25 - v15);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  uint64_t v21 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v16, (uint64_t)sub_191B6B30C, a2, v21, AssociatedTypeWitness, (uint64_t)&protocol witness table for ViewableTimelineEntry, AssociatedConformanceWitness, v20);
  uint64_t v31 = (uint64_t)*v26;
  uint64_t v30 = v31;
  uint64_t v22 = (void *)*v20;
  sub_191B643F0((uint64_t)v20 + *(int *)(v18 + 44), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v23 = v27;
  sub_191B6B980((id *)&v31);
  swift_bridgeObjectRetain();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v23, &v30, v22, (uint64_t)v10, 1);
  v29();
  swift_release();
  return sub_191B01770((uint64_t)v20, (uint64_t *)&unk_1EB44A2F0);
}

uint64_t sub_191B68F7C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a2[3];
  __int16 v9 = *((_WORD *)a2 + 16);
  char v10 = *((unsigned char *)a2 + 34);
  char v11 = *((unsigned char *)a2 + 56);
  uint64_t v12 = v4 + *(void *)(*(void *)v4 + 120);
  uint64_t v15 = *a2;
  long long v16 = *(_OWORD *)(a2 + 1);
  uint64_t v17 = v8;
  __int16 v18 = v9;
  char v19 = v10;
  long long v20 = *(_OWORD *)(a2 + 5);
  char v21 = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  swift_retain();
  sub_191B688C8(a1, v12, &v15, (uint64_t)sub_191B6B62C, v13);

  return swift_release();
}

uint64_t sub_191B6906C(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v39 = a7;
  uint64_t v40 = a4;
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  id v37 = a1;
  uint64_t v12 = (void *)*v7;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](a1);
  id v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v17;
  long long v18 = a2[1];
  long long v41 = *a2;
  long long v42 = v18;
  v43[0] = a2[2];
  *(_OWORD *)((char *)v43 + 9) = *(long long *)((char *)a2 + 41);
  uint64_t v19 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_191CF5698();
  swift_retain();
  id v37 = v37;
  sub_191B64458((void **)&v41);
  swift_retain();
  uint64_t v20 = sub_191CF5688();
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v24 = (char *)swift_allocObject();
  uint64_t v25 = MEMORY[0x1E4FBCFD8];
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v12[10];
  uint64_t v26 = v34;
  *((void *)v24 + 5) = v12[11];
  *((void *)v24 + 6) = v26;
  *((void *)v24 + 7) = v12[12];
  *((void *)v24 + 8) = v12[13];
  *((void *)v24 + 9) = v39;
  (*(void (**)(char *, char *))(v13 + 32))(&v24[v21], v36);
  *(void *)&v24[v22] = v8;
  uint64_t v27 = (uint64_t)v38;
  *(void *)&v24[v23] = v37;
  uint64_t v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  long long v29 = v42;
  *(_OWORD *)uint64_t v28 = v41;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v43[0];
  *(_OWORD *)(v28 + 41) = *(_OWORD *)((char *)v43 + 9);
  uint64_t v30 = &v24[(v23 + 79) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v31 = v35;
  *(void *)uint64_t v30 = v40;
  *((void *)v30 + 1) = v31;
  sub_191BC2CF8(v27, (uint64_t)&unk_1E92E37F0, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_191B69374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[59] = v13;
  v8[60] = v14;
  v8[57] = a7;
  v8[58] = a8;
  v8[55] = a5;
  v8[56] = a6;
  v8[54] = a4;
  v8[61] = *a5;
  v8[62] = *(void *)(v14 - 8);
  v8[63] = swift_task_alloc();
  v8[64] = swift_task_alloc();
  sub_191CF5698();
  v8[65] = sub_191CF5688();
  uint64_t v10 = sub_191CF5648();
  v8[66] = v10;
  v8[67] = v9;
  return MEMORY[0x1F4188298](sub_191B694AC, v10, v9);
}

uint64_t sub_191B694AC()
{
  unint64_t v1 = *(void (**)(void, void, void))(*(void *)(v0 + 496) + 16);
  v1(*(void *)(v0 + 512), *(void *)(v0 + 432), *(void *)(v0 + 480));
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(long long **)(v0 + 456);
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = *(void *)(v0 + 368);
    *(void *)(v0 + 544) = v4;
    char v5 = *(unsigned char *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 384);
    uint64_t v7 = *(void *)(v0 + 392);
    *(void *)(v0 + 552) = v7;
    long long v9 = v2[1];
    long long v8 = v2[2];
    long long v10 = *v2;
    *(_OWORD *)(v0 + 233) = *(long long *)((char *)v2 + 41);
    *(_OWORD *)(v0 + 208) = v9;
    *(_OWORD *)(v0 + 224) = v8;
    *(_OWORD *)(v0 + 192) = v10;
    *(void *)(v0 + 320) = v3;
    *(void *)(v0 + 328) = v4;
    *(unsigned char *)(v0 + 336) = v5;
    *(void *)(v0 + 344) = v6;
    *(void *)(v0 + 352) = v7;
    char v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v11;
    *char v11 = v0;
    v11[1] = sub_191B618D4;
    uint64_t v12 = *(void *)(v0 + 448);
    return sub_191B697E8(v12, (uint64_t *)(v0 + 192), v0 + 320);
  }
  else
  {
    uint64_t v14 = (_OWORD *)(v0 + 104);
    v1(*(void *)(v0 + 504), *(void *)(v0 + 432), *(void *)(v0 + 480));
    if (swift_dynamicCast())
    {
      uint64_t v15 = *(long long **)(v0 + 456);
      long long v16 = *(_OWORD *)(v0 + 152);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
      *(_OWORD *)(v0 + 64) = v16;
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
      *(void *)(v0 + 96) = *(void *)(v0 + 184);
      long long v17 = *(_OWORD *)(v0 + 120);
      *(_OWORD *)(v0 + 16) = *v14;
      *(_OWORD *)(v0 + 32) = v17;
      long long v19 = v15[1];
      long long v18 = v15[2];
      long long v20 = *v15;
      *(_OWORD *)(v0 + 297) = *(long long *)((char *)v15 + 41);
      *(_OWORD *)(v0 + 272) = v19;
      *(_OWORD *)(v0 + 288) = v18;
      *(_OWORD *)(v0 + 256) = v20;
      unint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v21;
      void *v21 = v0;
      v21[1] = sub_191B61AC4;
      uint64_t v22 = *(void *)(v0 + 448);
      return sub_191B6A1BC(v22, (_OWORD *)(v0 + 256), v0 + 16);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 488);
      *uint64_t v14 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(void *)(v0 + 184) = 0;
      swift_release();
      sub_191B01770(v0 + 104, qword_1E92E3690);
      long long v24 = *(_OWORD *)(v23 + 96);
      *(_OWORD *)(v0 + 400) = *(_OWORD *)(v23 + 80);
      *(_OWORD *)(v0 + 416) = v24;
      type metadata accessor for TimelineEntryProvider.Errors();
      swift_getWitnessTable();
      uint64_t v25 = (void *)swift_allocError();
      swift_willThrow();
      uint64_t v26 = *(void (**)(void *, uint64_t))(v0 + 464);
      id v27 = v25;
      v26(v25, 1);

      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
      return v28();
    }
  }
}

uint64_t sub_191B697E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44A2F0);
  *(void *)(v4 + 88) = swift_task_alloc();
  *(void *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_getAssociatedTypeWitness();
  *(void *)(v4 + 120) = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for Timeline();
  *(void *)(v4 + 128) = v7;
  *(void *)(v4 + 136) = *(void *)(v7 - 8);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a2;
  *(void *)(v4 + 152) = v8;
  *(void *)(v4 + 160) = v9;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 256) = *(unsigned char *)(a3 + 16);
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(a3 + 24);
  sub_191CF5698();
  *(void *)(v4 + 200) = sub_191CF5688();
  uint64_t v11 = sub_191CF5648();
  *(void *)(v4 + 208) = v11;
  *(void *)(v4 + 216) = v10;
  return MEMORY[0x1F4188298](sub_191B69A04, v11, v10);
}

uint64_t sub_191B69A04()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  *(void *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  uint64_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview entries request being handled by StaticConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  char v5 = *(unsigned char *)(v0 + 256);
  long long v10 = *(_OWORD *)(v0 + 168);
  long long v11 = *(_OWORD *)(v0 + 184);

  *(_OWORD *)(v0 + 16) = v10;
  *(unsigned char *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v11;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_191B69B84;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(v7, v7, v8);
}

uint64_t sub_191B69B84(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[30] = a1;
  v3[31] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[26];
  uint64_t v5 = v3[27];
  if (v1) {
    uint64_t v6 = sub_191B625F4;
  }
  else {
    uint64_t v6 = sub_191B69C98;
  }
  return MEMORY[0x1F4188298](v6, v4, v5);
}

uint64_t sub_191B69C98()
{
  uint64_t v29 = v0;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_191CF3838();
  os_log_type_t v2 = sub_191CF5948();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[30];
    uint64_t v4 = v0[14];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[7] = MEMORY[0x192FE4350](v3, v4);
    sub_191CF5C08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191AF4000, v1, v2, "StaticConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x192FE5F00](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1EB44B1C0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)v0[19];
  uint64_t v25 = (void *)v0[20];
  uint64_t v7 = v0[17];
  uint64_t v8 = (void *)v0[18];
  uint64_t v27 = v7;
  uint64_t v10 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  uint64_t v13 = (uint64_t *)v0[11];
  uint64_t v24 = v0[10];
  uint64_t v22 = v0[30];
  uint64_t v23 = v0[9];
  uint64_t v26 = (void *)v0[8];
  uint64_t v14 = __swift_project_value_buffer(v0[12], (uint64_t)qword_1EB44B1D8);
  sub_191B643F0(v14, v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v22, v11, v6);
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v8, v6, v9);
  uint64_t v15 = type metadata accessor for ViewableTimelineEntry();
  sub_191CC51B8(v8, (uint64_t)sub_191B6B30C, v23, v15, v12, (uint64_t)&protocol witness table for ViewableTimelineEntry, v10, v13);
  uint64_t v28 = v25;
  long long v16 = (void *)*v13;
  sub_191B643F0((uint64_t)v13 + *(int *)(v24 + 36), v11, (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  id v17 = v26;
  id v18 = v25;
  swift_bridgeObjectRetain();
  uint64_t v19 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v17, (uint64_t *)&v28, v16, v11, 0);
  sub_191B01770((uint64_t)v13, (uint64_t *)&unk_1EB44A2F0);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v6, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

double sub_191B69FC8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v5 = *a2;
  uint64_t v14 = *(void *)(*a2 + 88);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(void *)(*a2 + 128)))(a1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_191CE26B8((uint64_t)v10, (uint64_t)v7, AssociatedTypeWitness, v14, AssociatedConformanceWitness, *(void *)(v5 + 104), v15);
}

uint64_t sub_191B6A1BC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v4 + 96) = a3;
  *(void *)(v4 + 104) = v3;
  *(void *)(v4 + 88) = a1;
  uint64_t v6 = *v3;
  *(void *)(v4 + 112) = *v3;
  uint64_t v7 = *(void *)(v6 + 80);
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = *(void *)(v7 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  long long v8 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = a2[2];
  *(_OWORD *)(v4 + 57) = *(_OWORD *)((char *)a2 + 41);
  *(void *)(v4 + 144) = sub_191CF5698();
  *(void *)(v4 + 152) = sub_191CF5688();
  uint64_t v10 = sub_191CF5648();
  *(void *)(v4 + 160) = v10;
  *(void *)(v4 + 168) = v9;
  return MEMORY[0x1F4188298](sub_191B6A30C, v10, v9);
}

uint64_t sub_191B6A30C()
{
  if (qword_1EB44AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_191CF3858();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB44CB78);
  os_log_type_t v2 = sub_191CF3838();
  os_log_type_t v3 = sub_191CF5948();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_191AF4000, v2, v3, "Preview provider request being handled by StaticConfiguration", v4, 2u);
    MEMORY[0x192FE5F00](v4, -1, -1);
  }
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[15];

  TimelineProviderPreviewSource.unwrapContent<A>(for:)(v6, v5);
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  uint64_t v10 = sub_191CF5688();
  v0[22] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[23] = v11;
  v11[2] = v8;
  v11[3] = v9;
  v11[4] = v7;
  v11[5] = v0 + 2;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[24] = v12;
  uint64_t v13 = type metadata accessor for WidgetViewCollection();
  *uint64_t v12 = v0;
  v12[1] = sub_191B6A56C;
  uint64_t v14 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F41880D8](v0 + 10, v10, v14, 0xD000000000000029, 0x8000000191D0E4B0, sub_191B6B1F8, v11, v13);
}

uint64_t sub_191B6A56C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x1F4188298](sub_191B6A6CC, v3, v2);
}

uint64_t sub_191B6A6CC()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[10];
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_191B6A768(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E37E0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_191B688C8(a3, a4, a5, (uint64_t)sub_191B6B298, v13);
  return swift_release();
}

uint64_t sub_191B6A8C8()
{
  return sub_191CF5668();
}

uint64_t sub_191B6A910(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_191CF56B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_191CF5698();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_191CF5688();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_191BC2CF8((uint64_t)v8, (uint64_t)&unk_1E92E37D8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_191B6AA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[2] = a5;
  void v6[3] = a6;
  v6[4] = sub_191CF5698();
  v6[5] = sub_191CF5688();
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_191B63060;
  return sub_191B6AAF4();
}

uint64_t sub_191B6AAF4()
{
  uint64_t v2 = *v0;
  v1[7] = sub_191CF5698();
  v1[8] = sub_191CF5688();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3 + 56) + **(int **)(v3 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  v1[9] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_191B6AC58;
  return v7(v1 + 6, v4, v3);
}

uint64_t sub_191B6AC58()
{
  swift_task_dealloc();
  uint64_t v1 = sub_191CF5648();
  return MEMORY[0x1F4188298](sub_191B6AD94, v1, v0);
}

uint64_t sub_191B6AD94()
{
  swift_release();
  if (v0[3].receiver)
  {
    unint64_t v1 = sub_191CEF4B4();
    swift_bridgeObjectRelease();
    uint64_t v2 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v3 = objc_allocWithZone(v2);
    v3[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    uint64_t v4 = v3;
    uint64_t v5 = sub_191C2BF48(v1);
    swift_bridgeObjectRelease();
    *(void *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

    v0[2].receiver = v4;
    uint64_t v6 = v0 + 2;
  }
  else
  {
    uint64_t v2 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    uint64_t v7 = objc_allocWithZone(v2);
    v7[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    uint64_t v8 = v7;
    *(void *)&v8[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_191C2BF48(MEMORY[0x1E4FBC860]);

    v0[1].receiver = v8;
    uint64_t v6 = v0 + 1;
  }
  v6->super_class = v2;
  uint64_t v9 = [(objc_super *)v6 init];
  super_class = (uint64_t (*)(objc_super *))v0->super_class;
  return super_class(v9);
}

uint64_t type metadata accessor for TimelineEntryProvider()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B6AEFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_191B6AF5C(void *a1, uint64_t a2)
{
  return sub_191B67CDC(a1, a2);
}

uint64_t sub_191B6AF80(void *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_191B680DC(a1, a2, a3, a4);
}

uint64_t sub_191B6AFA4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_191B68F7C(a1, a2, a3, a4);
}

uint64_t sub_191B6AFC8(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_191B6906C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_191B6AFEC(uint64_t a1, uint64_t a2)
{
  return sub_191B6A910(a1, a2);
}

uint64_t sub_191B6B010()
{
  swift_getWitnessTable();

  return sub_191BDAE08();
}

uint64_t sub_191B6B064()
{
  return sub_191B67C14();
}

uint64_t sub_191B6B088(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_191B6B0E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B6B130(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_191B17A68;
  return sub_191B6AA44(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_191B6B1F8(uint64_t a1)
{
  return sub_191B6A768(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(_OWORD **)(v1 + 40));
}

uint64_t sub_191B6B204()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E37E0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_191B6B298()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E37E0);

  return sub_191B6A8C8();
}

double sub_191B6B30C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B69FC8(a1, v2, a2);
}

uint64_t sub_191B6B328()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B6B460(uint64_t a1)
{
  uint64_t v3 = v1[6];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v3 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void **)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)((char *)v1 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_191B0A348;
  return sub_191B69374(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t type metadata accessor for TimelineEntryProvider.Errors()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191B6B5F4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_191B6B62C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191B6B658(uint64_t a1)
{
  return sub_191B6BA30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void *))sub_191B68A10);
}

uint64_t sub_191B6B670()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = (int *)(type metadata accessor for Timeline() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[11];
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v7 = (((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B6B860()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void *)(type metadata accessor for Timeline() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + v3);
  unint64_t v7 = *(void (**)(void))(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void **)(v0 + v5);

  return sub_191B68C9C(v0 + v2, v6, v7, v8, v9, (id *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

id *sub_191B6B980(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B6BA18(uint64_t a1)
{
  return sub_191B6BA30(a1, (uint64_t (*)(uint64_t, void, void, void, void, void *))sub_191B68238);
}

uint64_t sub_191B6BA30(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void *))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2 + 6);
}

uint64_t sub_191B6BA48()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_191B6BB64()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(uint64_t **)(v0 + v3);
  unint64_t v7 = *(void (**)(void))(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void **)(v0 + v5);

  return sub_191B68480(v0 + v2, v6, v7, v8, v9, (void **)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

unsigned char *sub_191B6BC30(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191B6BCCCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B6BCF4()
{
  return swift_getWitnessTable();
}

uint64_t EnvironmentValues._localizations.getter()
{
  sub_191B4F378();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues._localizations.setter(uint64_t a1)
{
  uint64_t v3 = sub_191CF3B98();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v45 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v45 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (char *)&v45 - v10;
  uint64_t v11 = sub_191CF32D8();
  MEMORY[0x1F4188790](v11 - 8);
  long long v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BD28);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_191CF32C8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  long long v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v45 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v45 - v24;
  sub_191B4F378();
  uint64_t v53 = v1;
  uint64_t result = sub_191CF4068();
  uint64_t v27 = v54;
  if (a1)
  {
    uint64_t v50 = v3;
    if (v54)
    {
      uint64_t v28 = swift_retain_n();
      char v29 = _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(v28, v27);
      swift_release_n();
      swift_release();
      if (v29) {
        return swift_release();
      }
    }
  }
  else
  {
    if (!v54) {
      return result;
    }
    uint64_t v50 = v3;
    swift_release();
  }
  uint64_t v54 = a1;
  swift_retain();
  sub_191CF4078();
  if (a1)
  {
    swift_retain();
    uint64_t v30 = (void *)sub_191CF5528();
    uint64_t LikeCurrentWithBundleLocalizations = _CFLocaleCreateLikeCurrentWithBundleLocalizations();
    if (LikeCurrentWithBundleLocalizations)
    {
      uint64_t v32 = (void *)LikeCurrentWithBundleLocalizations;
      sub_191CF3238();

      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v33(v15, v23, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
      {
        v33(v25, v15, v16);
LABEL_16:
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v25, v16);
        sub_191CF3FB8();
        sub_191CF32B8();
        sub_191CF3FF8();
        sub_191CF3208();
        uint64_t v40 = sub_191CF3218();
        swift_bridgeObjectRelease();
        long long v41 = (unsigned int *)MEMORY[0x1E4F3CBE8];
        if (v40 != 2) {
          long long v41 = (unsigned int *)MEMORY[0x1E4F3CBD8];
        }
        uint64_t v42 = v52;
        char v44 = v49;
        uint64_t v43 = v50;
        (*(void (**)(char *, void, uint64_t))(v52 + 104))(v49, *v41, v50);
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v48, v44, v43);
        sub_191CF3DF8();

        swift_release_n();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v25, v16);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    }
    sub_191CF3268();
    sub_191B6C3B0((uint64_t)v15);
    goto LABEL_16;
  }
  sub_191CF3268();
  sub_191CF3FB8();
  sub_191CF3FA8();
  sub_191CF32B8();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
  v34(v23, v16);
  sub_191CF3FF8();
  sub_191CF3FA8();
  sub_191CF3208();
  v34(v20, v16);
  uint64_t v35 = sub_191CF3218();
  swift_bridgeObjectRelease();
  id v36 = (unsigned int *)MEMORY[0x1E4F3CBE8];
  if (v35 != 2) {
    id v36 = (unsigned int *)MEMORY[0x1E4F3CBD8];
  }
  uint64_t v37 = v52;
  uint64_t v38 = v47;
  uint64_t v39 = v50;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v47, *v36, v50);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v46, v38, v39);
  return sub_191CF3DF8();
}

uint64_t sub_191B6C3B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BD28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191B6C410(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_191CF6348(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_191CF6348() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_191B6C4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplatePicker.Option(0) - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_191B6D408(a1 + v12, (uint64_t)v10);
        sub_191B6D408(a2 + v12, (uint64_t)v7);
        char v15 = static ControlTemplatePicker.Option.== infix(_:_:)(v10, v7);
        sub_191B6D46C((uint64_t)v7);
        sub_191B6D46C((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_191B6C638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191B6CFF4();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t sub_191B6C69C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44CC68 = result;
  return result;
}

uint64_t sub_191B6C6C4()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44BE90);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44CC50 = v0;
  strcpy(algn_1EB44CC58, "localizations");
  HIWORD(qword_1EB44CC60) = -4864;
  return result;
}

uint64_t sub_191B6C744()
{
  if (qword_1EB44BCA8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_191B6C7A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 16);
  return swift_retain();
}

uint64_t sub_191B6C7C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for OptionalLocalizationsWrapper();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *a2 = v4;
  return swift_retain();
}

uint64_t sub_191B6C818()
{
  if (qword_1EB44BD00 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44CC50;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*EnvironmentValues._localizations.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  sub_191B4F378();
  sub_191CF4068();
  return sub_191B6C8F4;
}

uint64_t sub_191B6C8F4(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return EnvironmentValues._localizations.setter(*a1);
  }
  uint64_t v2 = swift_retain();
  EnvironmentValues._localizations.setter(v2);

  return swift_release();
}

uint64_t sub_191B6C94C()
{
  return 0x65756C6176;
}

uint64_t sub_191B6C960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_191CF6348();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_191B6C9F0(uint64_t a1)
{
  unint64_t v2 = sub_191B6D0A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B6CA2C(uint64_t a1)
{
  unint64_t v2 = sub_191B6D0A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191B6CA68(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A820);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B6D0A4();
  sub_191CF6528();
  v9[1] = *(void *)(v2 + 16);
  type metadata accessor for WidgetLocalizations();
  sub_191B6D3C0(&qword_1EB44BB48, 255, (void (*)(uint64_t))type metadata accessor for WidgetLocalizations);
  sub_191CF6208();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191B6CBEC(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AAA8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B6D0A4();
  sub_191CF6508();
  if (v2)
  {
    type metadata accessor for OptionalLocalizationsWrapper();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for WidgetLocalizations();
    sub_191B6D3C0(&qword_1EB44BF68, 255, (void (*)(uint64_t))type metadata accessor for WidgetLocalizations);
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 16) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_191B6CDC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OptionalLocalizationsWrapper();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_191B6CBEC(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_191B6CE20(void *a1)
{
  return sub_191B6CA68(a1);
}

uint64_t sub_191B6CE44(uint64_t *a1, uint64_t *a2)
{
  return sub_191B6D268(*a1, *a2);
}

uint64_t sub_191B6CE50()
{
  if (*(void *)(*(void *)v0 + 16)) {
    return sub_191C0A23C();
  }
  else {
    return 7104878;
  }
}

uint64_t sub_191B6CE8C(uint64_t *a1, uint64_t *a2)
{
  return sub_191B6D0F8(*a1, *a2);
}

uint64_t type metadata accessor for OptionalLocalizationsWrapper()
{
  return self;
}

ValueMetadata *type metadata accessor for LocalizationsKey()
{
  return &type metadata for LocalizationsKey;
}

uint64_t sub_191B6CED4(uint64_t a1, uint64_t a2)
{
  return sub_191B6D3C0(&qword_1EB44BFD8, a2, (void (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper);
}

uint64_t sub_191B6CF1C(uint64_t a1, uint64_t a2)
{
  return sub_191B6D3C0(&qword_1EB44BFD0, a2, (void (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper);
}

uint64_t sub_191B6CF64(uint64_t a1, uint64_t a2)
{
  return sub_191B6D3C0((unint64_t *)&unk_1EB44BFE0, a2, (void (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper);
}

uint64_t sub_191B6CFAC(uint64_t a1, uint64_t a2)
{
  return sub_191B6D3C0(&qword_1EB44BFC8, a2, (void (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper);
}

unint64_t sub_191B6CFF4()
{
  unint64_t result = qword_1E92E3878;
  if (!qword_1E92E3878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44BA68);
    sub_191B6D3C0((unint64_t *)&qword_1E92E45C0, 255, (void (*)(uint64_t))type metadata accessor for WidgetLocalizations);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3878);
  }
  return result;
}

unint64_t sub_191B6D0A4()
{
  unint64_t result = qword_1EB44AA58;
  if (!qword_1EB44AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA58);
  }
  return result;
}

uint64_t sub_191B6D0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = (v2 | v3) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
    sub_191B6D364();
    sub_191CF54C8();
    sub_191CF54C8();
    if (v12 == v10 && v13 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v6 = sub_191CF6348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        goto LABEL_11;
      }
    }
    if (sub_191B6C410(*(void **)(v2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations), *(void **)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations)))
    {
      char v7 = *(unsigned char *)(v2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      char v8 = *(unsigned char *)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      swift_release();
      swift_release();
      char v4 = v7 ^ v8 ^ 1;
      return v4 & 1;
    }
LABEL_11:
    swift_release();
    swift_release();
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_191B6D268(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    if (*(void *)(a2 + 16))
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EB44AB40);
      uint64_t v2 = sub_191CF34D8();
      uint64_t v4 = v3;
      if (v2 == sub_191CF34D8() && v4 == v5) {
        char v7 = 0;
      }
      else {
        char v7 = sub_191CF6348();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      char v7 = 1;
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

unint64_t sub_191B6D364()
{
  unint64_t result = qword_1E92E0770;
  if (!qword_1E92E0770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EB44AB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0770);
  }
  return result;
}

uint64_t sub_191B6D3C0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B6D408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191B6D46C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for OptionalLocalizationsWrapper.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x191B6D564);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalLocalizationsWrapper.CodingKeys()
{
  return &type metadata for OptionalLocalizationsWrapper.CodingKeys;
}

unint64_t sub_191B6D5A0()
{
  unint64_t result = qword_1E92E3880;
  if (!qword_1E92E3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3880);
  }
  return result;
}

unint64_t sub_191B6D5F8()
{
  unint64_t result = qword_1EB44AA68;
  if (!qword_1EB44AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA68);
  }
  return result;
}

unint64_t sub_191B6D650()
{
  unint64_t result = qword_1EB44AA60;
  if (!qword_1EB44AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AA60);
  }
  return result;
}

uint64_t *sub_191B6D6A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_191CF3178();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v41 = v10;
    uint64_t v39 = *(void (**)(char *, char *))(v11 + 16);
    v39(v8, v9);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_191CF3078();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = type metadata accessor for BundleStub();
    uint64_t v20 = *(int *)(v19 + 20);
    uint64_t v21 = *(void **)&v14[v20];
    *(void *)&v13[v20] = v21;
    uint64_t v22 = *(int *)(v19 + 24);
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = a3[7];
    uint64_t v27 = a3[8];
    uint64_t v28 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)v4 + v26) = (uint64_t)v28;
    char v29 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)v4 + v27) = (uint64_t)v29;
    uint64_t v30 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v30) = *(uint64_t *)((char *)a2 + v30);
    uint64_t v31 = a3[11];
    __dst = (char *)v4 + v31;
    uint64_t v32 = (char *)a2 + v31;
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    id v34 = v21;
    swift_bridgeObjectRetain();
    id v35 = v28;
    id v36 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v32, 1, v41))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
      memcpy(__dst, v32, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v39)(__dst, v32, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v41);
    }
  }
  return v4;
}

uint64_t sub_191B6D9AC(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_191CF3178();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v12(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_191CF3078();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[11];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v5);
  }
  return result;
}

void *sub_191B6DBA0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  uint64_t v37 = *(void (**)(char *, char *))(v10 + 16);
  v37(v7, v8);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_191CF3078();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = type metadata accessor for BundleStub();
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v19 = *(void **)&v13[v18];
  *(void *)&v12[v18] = v19;
  uint64_t v20 = *(int *)(v17 + 24);
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)((char *)a2 + v24);
  *(void *)((char *)a1 + v24) = v26;
  uint64_t v27 = *(void **)((char *)a2 + v25);
  *(void *)((char *)a1 + v25) = v27;
  uint64_t v28 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  uint64_t v29 = a3[11];
  __dst = (char *)a1 + v29;
  uint64_t v30 = (char *)a2 + v29;
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  id v32 = v19;
  swift_bridgeObjectRetain();
  id v33 = v26;
  id v34 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31(v30, 1, v39))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(__dst, v30, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v37)(__dst, v30, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v39);
  }
  return a1;
}

char *sub_191B6DE58(char *a1, _DWORD *a2, int *a3)
{
  *(_DWORD *)a1 = *a2;
  *((_DWORD *)a1 + 1) = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v43 = *(void (**)(char *, char *))(v44 + 24);
  v43(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = type metadata accessor for BundleStub();
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v21 = *(void **)&v12[v20];
  uint64_t v22 = *(void **)&v11[v20];
  *(void *)&v11[v20] = v21;
  id v23 = v21;

  uint64_t v24 = *(int *)(v19 + 24);
  uint64_t v25 = &v11[v24];
  uint64_t v26 = &v12[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[7];
  uint64_t v28 = *(void **)((char *)a2 + v27);
  uint64_t v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  uint64_t v31 = a3[8];
  id v32 = *(void **)((char *)a2 + v31);
  id v33 = *(void **)&a1[v31];
  *(void *)&a1[v31] = v32;
  id v34 = v32;

  *(void *)&a1[a3[9]] = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  id v36 = &a1[v35];
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v39 = v38(&a1[v35], 1, v45);
  int v40 = v38(v37, 1, v45);
  if (!v39)
  {
    if (!v40)
    {
      ((void (*)(char *, char *, uint64_t))v43)(v36, v37, v45);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v45);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v36, v37, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v45);
  return a1;
}

void *sub_191B6E210(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_191CF3078();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = type metadata accessor for BundleStub();
  *(void *)&v12[*(int *)(v17 + 20)] = *(void *)&v13[*(int *)(v17 + 20)];
  *(_OWORD *)&v12[*(int *)(v17 + 24)] = *(_OWORD *)&v13[*(int *)(v17 + 24)];
  uint64_t v18 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v22, 1, v9))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v25(v21, v22, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  return a1;
}

char *sub_191B6E490(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF3178();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  int v39 = *(void (**)(char *, char *))(v40 + 40);
  v39(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_191CF3078();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = type metadata accessor for BundleStub();
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v21 = *(void **)&v11[v20];
  *(void *)&v11[v20] = *(void *)&v12[v20];

  uint64_t v22 = *(int *)(v19 + 24);
  uint64_t v23 = &v11[v22];
  uint64_t v24 = &v12[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[7];
  uint64_t v28 = *(void **)&a1[v27];
  *(void *)&a1[v27] = *(void *)((char *)a2 + v27);

  uint64_t v29 = a3[8];
  id v30 = *(void **)&a1[v29];
  *(void *)&a1[v29] = *(void *)((char *)a2 + v29);

  *(void *)&a1[a3[9]] = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  id v32 = &a1[v31];
  id v33 = (char *)a2 + v31;
  id v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v35 = v34(&a1[v31], 1, v41);
  int v36 = v34(v33, 1, v41);
  if (!v35)
  {
    if (!v36)
    {
      ((void (*)(char *, char *, uint64_t))v39)(v32, v33, v41);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v41);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B520);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v32, v33, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v41);
  return a1;
}

uint64_t sub_191B6E814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B6E828);
}

uint64_t sub_191B6E828(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_191CF3178();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for BundleStub();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[7]);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = type metadata accessor for TimelineReloadPolicy();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[11];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_191B6E9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B6E9B8);
}

uint64_t sub_191B6E9B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_191CF3178();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t result = type metadata accessor for BundleStub();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = type metadata accessor for TimelineReloadPolicy();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[11];
    return v15(v17, a2, a2, v16);
  }
  return result;
}

uint64_t type metadata accessor for WidgetArchivableMetadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44AF28);
}

void sub_191B6EB54()
{
  sub_191CF3178();
  if (v0 <= 0x3F)
  {
    type metadata accessor for BundleStub();
    if (v1 <= 0x3F)
    {
      sub_191B6EC84();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_191B6EC84()
{
  if (!qword_1EB44B900)
  {
    sub_191CF3178();
    unint64_t v0 = sub_191CF5BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB44B900);
    }
  }
}

uint64_t sub_191B6ECDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  uint64_t v12 = a4 + *(int *)(v11 + 20);
  uint64_t v13 = a4 + *(int *)(v11 + 24);
  *(_OWORD *)uint64_t v13 = xmmword_191CF8430;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v22, a2, a3);
  char v14 = v23;
  *(_OWORD *)uint64_t v12 = v22;
  *(unsigned char *)(v12 + 16) = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB449FE8);
  if (swift_dynamicCast())
  {
    sub_191B004A8(v20, (uint64_t)&v22);
    uint64_t v15 = __swift_project_boxed_opaque_existential_1(&v22, v24);
    uint64_t v16 = (void *)((char *)v15 + *(int *)(type metadata accessor for ViewableTimelineEntry() + 32));
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    sub_191B169E8(*v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    sub_191B170C8(*(void *)v13, *(void *)(v13 + 8));
    *(void *)uint64_t v13 = v17;
    *(void *)(v13 + 8) = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    return sub_191B01770((uint64_t)v20, &qword_1E92E3888);
  }
}

uint64_t sub_191B6EEEC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AE40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B728F8();
  sub_191CF6528();
  LOBYTE(v15) = 0;
  sub_191CF3178();
  sub_191B7155C((unint64_t *)&unk_1EB44BA50, MEMORY[0x1E4F27928]);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 20));
    char v11 = *((unsigned char *)v10 + 16);
    long long v15 = *v10;
    char v16 = v11;
    char v14 = 1;
    sub_191B729A0();
    sub_191CF6208();
    long long v15 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    char v14 = 2;
    sub_191B718A4();
    sub_191CF6208();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191B6F10C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_191CF3178();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447240);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v12[*(int *)(v10 + 28)];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  unsigned char v13[16] = 1;
  uint64_t v24 = &v12[*(int *)(v10 + 32)];
  *(_OWORD *)uint64_t v24 = xmmword_191CF8430;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B728F8();
  sub_191CF6508();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191B170C8(*(void *)v24, *((void *)v24 + 1));
  }
  else
  {
    uint64_t v14 = v21;
    LOBYTE(v25) = 0;
    sub_191B7155C(&qword_1EB448DB8, MEMORY[0x1E4F27928]);
    sub_191CF6178();
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v23, v4);
    char v27 = 1;
    sub_191B7294C();
    sub_191CF6108();
    char v15 = v26;
    *(_OWORD *)uint64_t v13 = v25;
    unsigned char v13[16] = v15;
    char v27 = 2;
    sub_191B71714();
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v22);
    long long v16 = v25;
    uint64_t v17 = v24;
    sub_191B170C8(*(void *)v24, *((void *)v24 + 1));
    *(_OWORD *)uint64_t v17 = v16;
    sub_191B718F8((uint64_t)v12, v19, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191B71454((uint64_t)v12, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  }
}

uint64_t sub_191B6F508(char a1)
{
  uint64_t result = 0x6E6F697461657263;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 2:
      uint64_t result = 0x746567646977;
      break;
    case 3:
      uint64_t result = 0x74654D7972746E65;
      break;
    case 4:
      uint64_t result = 0x6174654D77656976;
      break;
    case 5:
      uint64_t result = 0x6F5064616F6C6572;
      break;
    case 6:
      uint64_t result = 0x5665766968637261;
      break;
    case 7:
      uint64_t result = 0x6F69736E65747865;
      break;
    case 8:
      uint64_t result = 0x65566D6574737973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B6F674()
{
  uint64_t v1 = 0x636E6176656C6572;
  if (*v0 != 1) {
    uint64_t v1 = 0x7461447972746E65;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_191B6F6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B72304(a1, a2);
  *a3 = result;
  return result;
}

void sub_191B6F6FC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_191B6F708(uint64_t a1)
{
  unint64_t v2 = sub_191B728F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B6F744(uint64_t a1)
{
  unint64_t v2 = sub_191B728F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191B6F780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_191CF3178();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

__n128 sub_191B6F7E8@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(v2 + *(int *)(a1 + 20));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_191B6F804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191B6F10C(a1, a2);
}

uint64_t sub_191B6F81C(void *a1)
{
  return sub_191B6EEEC(a1);
}

uint64_t sub_191B6F834()
{
  return sub_191B6F508(*v0);
}

uint64_t sub_191B6F83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B72460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B6F864(uint64_t a1)
{
  unint64_t v2 = sub_191B71400();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B6F8A0(uint64_t a1)
{
  unint64_t v2 = sub_191B71400();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_191B6F8DC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  char v92 = (char *)sub_191CF5E28();
  uint64_t v91 = *((void *)v92 - 1);
  MEMORY[0x1F4188790](v92);
  uint64_t v90 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1F4188790](v87);
  char v88 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191CF3178();
  uint64_t v97 = *(void *)(v5 - 8);
  uint64_t v98 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v89 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for BundleStub();
  MEMORY[0x1F4188790](v94);
  uint64_t v93 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_191CF5F68();
  uint64_t v95 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB447248);
  uint64_t v96 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for WidgetArchivableMetadata(0);
  MEMORY[0x1F4188790](v101);
  char v100 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v15 = sub_191B71400();
  long long v16 = v99;
  sub_191CF6508();
  if (v16)
  {
    int v17 = 0;
    unsigned int v18 = 0;
    uint64_t v19 = v100;
    uint64_t v20 = (int *)v101;
    goto LABEL_17;
  }
  uint64_t v84 = 0;
  unint64_t v83 = v15;
  uint64_t v99 = v13;
  uint64_t v85 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = sub_191CF64F8();
  if (qword_1EB4471A0 != -1) {
    swift_once();
  }
  uint64_t v22 = v8;
  uint64_t v23 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB44C758);
  uint64_t v24 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v10, v23, v8);
  uint64_t v25 = v85;
  if (*(void *)(v21 + 16) && (unint64_t v26 = sub_191B1DB7C((uint64_t)v10), (v27 & 1) != 0))
  {
    sub_191B4F964(*(void *)(v21 + 56) + 32 * v26, (uint64_t)&v108);
  }
  else
  {
    long long v108 = 0u;
    long long v109 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v22);
  if (*((void *)&v109 + 1))
  {
    int v28 = swift_dynamicCast();
    uint64_t v20 = (int *)v101;
    if (v28)
    {
      id v30 = v102;
      uint64_t v29 = (char *)v103;
      uint64_t v31 = v104;
      uint64_t v95 = v105;
      goto LABEL_14;
    }
  }
  else
  {
    sub_191B01770((uint64_t)&v108, (uint64_t *)&unk_1EB44BC90);
    uint64_t v20 = (int *)v101;
  }
  swift_beginAccess();
  id v30 = off_1EC244C98;
  uint64_t v29 = (char *)unk_1EC244CA0;
  uint64_t v31 = off_1EC244CA8;
  uint64_t v32 = unk_1EC244CB0;
  swift_retain();
  uint64_t v95 = v32;
  swift_retain();
LABEL_14:
  LOBYTE(v102) = 6;
  id v33 = v99;
  uint64_t v34 = v84;
  uint64_t v35 = sub_191CF6158();
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v96 + 8))(v33, v25);
    swift_release();
    swift_release();
LABEL_16:
    int v17 = 0;
    unsigned int v18 = 0;
    uint64_t v19 = v100;
    goto LABEL_17;
  }
  uint64_t v41 = v35;
  if (v35 < 1)
  {
    uint64_t v102 = 0;
    unint64_t v103 = 0xE000000000000000;
    sub_191CF5D88();
    sub_191CF53B8();
    v106[0] = v41;
    uint64_t v93 = v29;
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    v106[0] = 1;
    sub_191CF62C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    uint64_t v44 = v90;
    sub_191CF5E18();
    uint64_t v45 = sub_191CF5E38();
    swift_allocError();
    uint64_t v47 = v46;
    uint64_t v48 = (char *)v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00) + 48);
    *uint64_t v47 = v20;
    uint64_t v49 = v91;
    uint64_t v50 = (uint64_t)v92;
    (*(void (**)(char *, char *, char *))(v91 + 16))(v48, v44, v92);
    (*(void (**)(int **, void, uint64_t))(*(void *)(v45 - 8) + 104))(v47, *MEMORY[0x1E4FBBA70], v45);
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v50);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v85);
    goto LABEL_16;
  }
  LOBYTE(v102) = 7;
  sub_191B7155C(&qword_1EB448D98, (void (*)(uint64_t))type metadata accessor for BundleStub);
  uint64_t v42 = v93;
  sub_191CF6178();
  uint64_t v43 = (uint64_t)v42;
  uint64_t v19 = v100;
  char v92 = &v100[v20[6]];
  sub_191B716AC(v43, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for BundleStub);
  LOBYTE(v106[0]) = 8;
  sub_191B714B4();
  sub_191CF6178();
  uint64_t v93 = v29;
  unsigned int v51 = v102;
  unsigned int v52 = HIDWORD(v102);
  *(_DWORD *)uint64_t v19 = v102;
  *((_DWORD *)v19 + 1) = v52;
  uint64_t v53 = *(void *)&v92[*(int *)(v94 + 20)] + *MEMORY[0x1E4F58B70];
  swift_beginAccess();
  if (!*(void *)(v53 + 8)
    && (v106[0] = __PAIR64__(v52, v51), uint64_t v54 = ((uint64_t (*)(void *))v30)(v106), (v55 & 1) != 0))
  {
    unint64_t v62 = v54 | 0x8000000000000000;
    v106[0] = v54 | 0x8000000000000000;
    sub_191B71508();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v63 = v62;
    swift_release();
  }
  else
  {
    uint64_t v56 = ((uint64_t (*)(char *))v31)(v92);
    if ((v57 & 1) == 0)
    {
      LOBYTE(v106[0]) = 0;
      sub_191B7155C(&qword_1EB448DB8, MEMORY[0x1E4F27928]);
      uint64_t v58 = v89;
      uint64_t v59 = v98;
      sub_191CF6178();
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(&v19[v20[5]], v58, v59);
      char v107 = 1;
      sub_191B715A4();
      sub_191CF6178();
      v106[0] = v110;
      WidgetEnvironment.filterForArchiving()();
      *(void *)&v19[v20[7]] = v106[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF88);
      LOBYTE(v110) = 3;
      sub_191B71810(&qword_1EB447230, &qword_1EB447210);
      sub_191CF6178();
      *(void *)&v19[v20[9]] = v106[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A190);
      LOBYTE(v110) = 4;
      sub_191B71618(&qword_1EB447228, &qword_1EB447208);
      sub_191CF6178();
      *(void *)&v19[v20[10]] = v106[0];
      LOBYTE(v106[0]) = 5;
      sub_191B7155C(&qword_1EB447170, (void (*)(uint64_t))type metadata accessor for TimelineReloadPolicy);
      uint64_t v64 = (uint64_t)v88;
      sub_191CF6178();
      sub_191B716AC(v64, (uint64_t)&v19[v20[11]], (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
      LOBYTE(v110) = 2;
      sub_191B71714();
      sub_191CF6178();
      uint64_t v65 = v106[0];
      unint64_t v66 = v106[1];
      sub_191B016E0(0, &qword_1EB449A20);
      uint64_t v36 = sub_191B016E0(0, (unint64_t *)&qword_1EB44B4D0);
      uint64_t v94 = v65;
      uint64_t v67 = sub_191CF59A8();
      uint64_t v74 = v67;
      if (v67)
      {
        (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v85);
        sub_191B1603C(v94, v66);
        swift_release();
        swift_release();
        uint64_t v75 = (uint64_t)v100;
        *(void *)&v100[*(int *)(v101 + 32)] = v74;
        sub_191B718F8(v75, v86, type metadata accessor for WidgetArchivableMetadata);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        uint64_t v40 = type metadata accessor for WidgetArchivableMetadata;
        uint64_t v39 = v75;
        goto LABEL_28;
      }
      uint64_t v76 = sub_191CF5E38();
      uint64_t v77 = (void *)swift_allocError();
      uint64_t v79 = v78;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *uint64_t v79 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = xmmword_191CF8410;
      unint64_t v81 = v83;
      *(void *)(v80 + 56) = &type metadata for WidgetArchivableMetadata.CodingKeys;
      *(void *)(v80 + 64) = v81;
      *(unsigned char *)(v80 + 32) = 2;
      sub_191CF5E18();
      uint64_t v82 = *MEMORY[0x1E4FBBA80];
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 104))(v79, v82, v76);
      swift_willThrow();
      uint64_t v68 = sub_191CF5E38();
      swift_allocError();
      uint64_t v70 = v69;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E3F00);
      *uint64_t v70 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_191CF8410;
      unint64_t v72 = v83;
      *(void *)(v71 + 56) = &type metadata for WidgetArchivableMetadata.CodingKeys;
      *(void *)(v71 + 64) = v72;
      *(unsigned char *)(v71 + 32) = 2;
      id v73 = v77;
      sub_191CF5E18();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v70, v82, v68);
      swift_willThrow();
      sub_191B1603C(v94, v66);
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v85);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      LOBYTE(v36) = 1;
      int v37 = 1;
      int v38 = 1;
      int v17 = 1;
      uint64_t v19 = v100;
      uint64_t v20 = (int *)v101;
      (*(void (**)(char *, uint64_t))(v97 + 8))(&v100[*(int *)(v101 + 20)], v98);
      goto LABEL_23;
    }
    uint64_t v60 = v56;
    v106[0] = v56;
    sub_191B71508();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v61 = v60;
    swift_release();
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v85);
  int v17 = 0;
  unsigned int v18 = 4;
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LODWORD(v36) = (v18 >> 3) & 1;
  int v37 = (v18 >> 5) & 1;
  int v38 = (v18 >> 6) & 1;
  if ((v18 & 4) == 0)
  {
    if (v36) {
      goto LABEL_19;
    }
    goto LABEL_24;
  }
LABEL_23:
  sub_191B71454((uint64_t)&v19[v20[6]], (uint64_t (*)(void))type metadata accessor for BundleStub);
  if (v36)
  {
LABEL_19:

    if ((v37 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v37)
  {
LABEL_20:
    if (v38) {
      goto LABEL_21;
    }
LABEL_26:
    if (!v17) {
      return;
    }
    goto LABEL_27;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  if ((v38 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    return;
  }
LABEL_27:
  uint64_t v39 = (uint64_t)&v19[v20[11]];
  uint64_t v40 = (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy;
LABEL_28:
  sub_191B71454(v39, v40);
}

uint64_t sub_191B70AE0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v47 = a6;
  uint64_t v48 = a8;
  uint64_t v16 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a2;
  uint64_t v21 = *a7;
  uint64_t v22 = (int *)type metadata accessor for WidgetArchivableMetadata(0);
  *(void *)((char *)a9 + v22[8]) = a1;
  v49[0] = v20;
  id v23 = a1;
  WidgetEnvironment.filterForArchiving()();
  *(void *)((char *)a9 + v22[7]) = v49[0];
  uint64_t v45 = a3;
  uint64_t v46 = v22;
  sub_191B718F8(a3, (uint64_t)a9 + v22[6], (uint64_t (*)(void))type metadata accessor for BundleStub);
  int64_t v24 = *(void *)(a4 + 16);
  if (v24)
  {
    id v42 = v23;
    uint64_t v44 = a5;
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_191AFBA74(0, v24, 0);
    uint64_t v43 = a4;
    uint64_t v25 = a4 + 32;
    uint64_t v26 = v52;
    do
    {
      sub_191AFEE28(v25, (uint64_t)v49);
      uint64_t v27 = v50;
      uint64_t v28 = v51;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v49, v50);
      MEMORY[0x1F4188790](v29);
      uint64_t v31 = (char *)&v41 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v31);
      sub_191B6ECDC((uint64_t)v31, v27, v28, (uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191AFBA74(0, *(void *)(v26 + 16) + 1, 1);
        uint64_t v26 = v52;
      }
      unint64_t v34 = *(void *)(v26 + 16);
      unint64_t v33 = *(void *)(v26 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_191AFBA74(v33 > 1, v34 + 1, 1);
        uint64_t v26 = v52;
      }
      *(void *)(v26 + 16) = v34 + 1;
      sub_191B716AC((uint64_t)v19, v26+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v34, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
      v25 += 40;
      --v24;
    }
    while (v24);

    uint64_t v36 = v47;
    uint64_t v35 = v48;
    a5 = v44;
  }
  else
  {

    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v36 = v47;
    uint64_t v35 = v48;
  }
  sub_191B71454(v45, (uint64_t (*)(void))type metadata accessor for BundleStub);
  swift_bridgeObjectRelease();
  int v37 = v46;
  *(void *)((char *)a9 + v46[9]) = v26;
  sub_191B716AC(a5, (uint64_t)a9 + v37[11], (uint64_t (*)(void))type metadata accessor for TimelineReloadPolicy);
  int v38 = (char *)a9 + v37[5];
  uint64_t v39 = sub_191CF3178();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v38, v36, v39);
  *a9 = v21;
  *(void *)((char *)a9 + v37[10]) = v35;
  return result;
}

uint64_t sub_191B70E8C(void *a1)
{
  uint64_t v3 = v1;
  long long v20[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AE48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B71400();
  sub_191CF6528();
  LOBYTE(v20[0]) = 6;
  sub_191CF6258();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20[0] = *v3;
  HIBYTE(v19) = 8;
  sub_191B71768();
  sub_191CF6278();
  uint64_t v9 = (int *)type metadata accessor for WidgetArchivableMetadata(0);
  LOBYTE(v20[0]) = 7;
  type metadata accessor for BundleStub();
  sub_191B7155C(&qword_1EB44BA70, (void (*)(uint64_t))type metadata accessor for BundleStub);
  sub_191CF6278();
  v20[0] = *(id *)((char *)v3 + v9[7]);
  HIBYTE(v19) = 1;
  sub_191B717BC();
  sub_191CF6278();
  v20[0] = *(id *)((char *)v3 + v9[9]);
  HIBYTE(v19) = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44AF88);
  sub_191B71810(&qword_1EB44AE38, &qword_1EB44AE20);
  sub_191CF6278();
  v20[0] = *(id *)((char *)v3 + v9[10]);
  HIBYTE(v19) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A190);
  sub_191B71618(&qword_1EB449FF0, &qword_1EB449F80);
  sub_191CF6278();
  LOBYTE(v20[0]) = 5;
  type metadata accessor for TimelineReloadPolicy();
  sub_191B7155C((unint64_t *)&unk_1EB44B668, (void (*)(uint64_t))type metadata accessor for TimelineReloadPolicy);
  sub_191CF6278();
  LOBYTE(v20[0]) = 0;
  sub_191CF3178();
  sub_191B7155C((unint64_t *)&unk_1EB44BA50, MEMORY[0x1E4F27928]);
  sub_191CF6278();
  uint64_t v11 = self;
  uint64_t v12 = *(uint64_t *)((char *)v3 + v9[8]);
  v20[0] = 0;
  id v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 1, v20);
  id v14 = v20[0];
  if (!v13)
  {
    uint64_t v18 = v14;
    sub_191CF2FE8();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  unint64_t v15 = (void *)sub_191CF30C8();
  uint64_t v17 = v16;

  v20[0] = v15;
  v20[1] = v17;
  HIBYTE(v19) = 2;
  sub_191B718A4();
  sub_191CF6278();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_191B1603C((uint64_t)v15, (unint64_t)v17);
}

void sub_191B713D0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_191B713E8(void *a1)
{
  return sub_191B70E8C(a1);
}

unint64_t sub_191B71400()
{
  unint64_t result = qword_1EB44AF70;
  if (!qword_1EB44AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF70);
  }
  return result;
}

uint64_t sub_191B71454(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_191B714B4()
{
  unint64_t result = qword_1EB448DA0;
  if (!qword_1EB448DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB448DA0);
  }
  return result;
}

unint64_t sub_191B71508()
{
  unint64_t result = qword_1E92E1048;
  if (!qword_1E92E1048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1048);
  }
  return result;
}

uint64_t sub_191B7155C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B715A4()
{
  unint64_t result = qword_1EB448E10;
  if (!qword_1EB448E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB448E10);
  }
  return result;
}

uint64_t type metadata accessor for WidgetArchivableMetadata.EntryMetadata(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44AF60);
}

uint64_t sub_191B71618(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44A190);
    sub_191B7155C(a2, (void (*)(uint64_t))type metadata accessor for WidgetViewMetadata);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B716AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_191B71714()
{
  unint64_t result = qword_1EB44BD20;
  if (!qword_1EB44BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BD20);
  }
  return result;
}

unint64_t sub_191B71768()
{
  unint64_t result = qword_1EB44BA78;
  if (!qword_1EB44BA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BA78);
  }
  return result;
}

unint64_t sub_191B717BC()
{
  unint64_t result = qword_1EB44BB40;
  if (!qword_1EB44BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB40);
  }
  return result;
}

uint64_t sub_191B71810(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB44AF88);
    sub_191B7155C(a2, (void (*)(uint64_t))type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_191B718A4()
{
  unint64_t result = qword_1EB44BB10;
  if (!qword_1EB44BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB10);
  }
  return result;
}

uint64_t sub_191B718F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for WidgetArchivableMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B71A2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchivableMetadata.CodingKeys()
{
  return &type metadata for WidgetArchivableMetadata.CodingKeys;
}

uint64_t *sub_191B71A64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_191CF3178();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    uint64_t v12 = (char *)a1 + v9;
    id v13 = (uint64_t *)((char *)a2 + v9);
    unint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v16 = *v13;
      sub_191B15F88(*v13, v14);
      *(void *)uint64_t v12 = v16;
      *((void *)v12 + 1) = v14;
    }
  }
  return a1;
}

uint64_t sub_191B71B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF3178();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  unsigned int v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_191B1603C(v8, v7);
  }
  return result;
}

uint64_t sub_191B71C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = (uint64_t *)(a2 + v8);
  unint64_t v13 = *(void *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_191B15F88(*v12, v13);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = v13;
  }
  return a1;
}

uint64_t sub_191B71CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  long long v10 = *v9;
  *(unsigned char *)(v8 + 16) = *((unsigned char *)v9 + 16);
  *(_OWORD *)uint64_t v8 = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (uint64_t *)(a1 + v11);
  unint64_t v13 = (uint64_t *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  if (*(void *)(a1 + v11 + 8) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_191B15F88(v16, v14);
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      *uint64_t v12 = v16;
      v12[1] = v14;
      sub_191B1603C(v17, v18);
      return a1;
    }
    sub_191B71DDC((uint64_t)v12);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    return a1;
  }
  uint64_t v15 = *v13;
  sub_191B15F88(v15, v14);
  *uint64_t v12 = v15;
  v12[1] = v14;
  return a1;
}

uint64_t sub_191B71DDC(uint64_t a1)
{
  return a1;
}

uint64_t sub_191B71E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_191B71EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v11 = (uint64_t *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  unint64_t v13 = *(void *)(a1 + v8 + 8);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v11;
      *uint64_t v11 = *v12;
      v11[1] = v14;
      sub_191B1603C(v15, v13);
      return a1;
    }
    sub_191B71DDC((uint64_t)v11);
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  return a1;
}

uint64_t sub_191B71F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B71FB0);
}

uint64_t sub_191B71FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191CF3178();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    BOOL v11 = ((4 * v10) & 0xC) == 0;
    unsigned int v12 = ((4 * v10) & 0xC | (v10 >> 2)) ^ 0xF;
    if (v11) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_191B7207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B72090);
}

uint64_t sub_191B72090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_191CF3178();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    BOOL v11 = (void *)(a1 + *(int *)(a4 + 24));
    *BOOL v11 = 0;
    v11[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_191B7215C()
{
  uint64_t result = sub_191CF3178();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_191B72200()
{
  unint64_t result = qword_1E92E3890;
  if (!qword_1E92E3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3890);
  }
  return result;
}

unint64_t sub_191B72258()
{
  unint64_t result = qword_1EB44AF80;
  if (!qword_1EB44AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF80);
  }
  return result;
}

unint64_t sub_191B722B0()
{
  unint64_t result = qword_1EB44AF78;
  if (!qword_1EB44AF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF78);
  }
  return result;
}

uint64_t sub_191B72304(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xE900000000000065 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447972746E65 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_191B72460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746567646977 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74654D7972746E65 && a2 == 0xED00006174616461 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174654D77656976 && a2 == 0xEC00000061746164 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F5064616F6C6572 && a2 == 0xEC0000007963696CLL || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F69736E65747865 && a2 == 0xEF656C646E75426ELL || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_191B728F8()
{
  unint64_t result = qword_1EB44AF48;
  if (!qword_1EB44AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF48);
  }
  return result;
}

unint64_t sub_191B7294C()
{
  unint64_t result = qword_1EB447178;
  if (!qword_1EB447178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB447178);
  }
  return result;
}

unint64_t sub_191B729A0()
{
  unint64_t result = qword_1EB44B680;
  if (!qword_1EB44B680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44B680);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetArchivableMetadata.EntryMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B72AC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchivableMetadata.EntryMetadata.CodingKeys()
{
  return &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys;
}

unint64_t sub_191B72AFC()
{
  unint64_t result = qword_1E92E3898;
  if (!qword_1E92E3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3898);
  }
  return result;
}

unint64_t sub_191B72B54()
{
  unint64_t result = qword_1EB44AF58;
  if (!qword_1EB44AF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF58);
  }
  return result;
}

unint64_t sub_191B72BAC()
{
  unint64_t result = qword_1EB44AF50;
  if (!qword_1EB44AF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44AF50);
  }
  return result;
}

uint64_t sub_191B72C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a3;
  uint64_t v4 = sub_191CF43A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = a2;
  uint64_t v48 = v10;
  v10((char *)&v32 - v8, a2, v4);
  uint64_t v36 = v5;
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v11 = v43(v9, v4);
  int v12 = v11;
  int v13 = *MEMORY[0x1E4F3D588];
  int v14 = *MEMORY[0x1E4F3D5C0];
  int v42 = *MEMORY[0x1E4F3D5C0];
  BOOL v16 = v11 == v13 || v11 == v14;
  int v17 = *MEMORY[0x1E4F3D5C8];
  BOOL v40 = v16;
  int v41 = v17;
  if (v11 == v17) {
    BOOL v16 = 1;
  }
  int v18 = *MEMORY[0x1E4F3D5B8];
  int v19 = 1;
  BOOL v38 = v16;
  int v39 = v18;
  if (v16)
  {
    int v20 = 1;
    int v21 = 1;
    int v22 = 1;
    int v23 = 1;
    char v24 = 1;
    char v25 = 1;
    char v26 = 1;
  }
  else
  {
    int v20 = 1;
    int v21 = 1;
    int v22 = 1;
    int v23 = 1;
    char v24 = 1;
    char v25 = 1;
    char v26 = 1;
    if (v11 == v18) {
      goto LABEL_28;
    }
    if (v11 == *MEMORY[0x1E4F3D580]) {
      goto LABEL_26;
    }
    if (v11 == *MEMORY[0x1E4F3D590])
    {
LABEL_25:
      char v25 = 0;
LABEL_26:
      char v26 = 0;
      goto LABEL_28;
    }
    if (v11 == *MEMORY[0x1E4F3D560])
    {
LABEL_24:
      char v24 = 0;
      goto LABEL_25;
    }
    if (v11 == *MEMORY[0x1E4F3D5A0])
    {
LABEL_23:
      int v23 = 0;
      goto LABEL_24;
    }
    if (v11 == *MEMORY[0x1E4F3D598])
    {
LABEL_22:
      int v22 = 0;
      goto LABEL_23;
    }
    if (v11 == *MEMORY[0x1E4F3D5A8])
    {
LABEL_21:
      int v21 = 0;
      goto LABEL_22;
    }
    if (v11 == *MEMORY[0x1E4F3D570])
    {
LABEL_20:
      int v20 = 0;
      goto LABEL_21;
    }
    if (v11 == *MEMORY[0x1E4F3D578])
    {
      int v19 = 0;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v4);
    int v19 = 1;
    int v20 = 1;
    int v21 = 1;
    int v22 = 1;
    int v23 = 1;
  }
LABEL_28:
  int v37 = v23;
  int v34 = v21;
  int v35 = v22;
  int v32 = v19;
  int v33 = v20;
  uint64_t v27 = v47;
  uint64_t v28 = v44;
  v48(v47, v44, v4);
  int v29 = v43(v27, v4);
  if (v29 != v13)
  {
    uint64_t v30 = v46;
    if (v29 == v42)
    {
      if (v12 != v13) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v45, v30, v4);
      }
    }
    else if (v29 == v41)
    {
      if (!v40) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v45, v30, v4);
      }
    }
    else if (v29 == v39)
    {
      if (!v38) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D580])
    {
      if ((v26 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D590])
    {
      if ((v25 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D560])
    {
      if ((v24 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D5A0])
    {
      if ((v37 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D598])
    {
      if ((v35 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D5A8])
    {
      if ((v34 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D570])
    {
      if ((v33 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D578])
    {
      if ((v32 & 1) == 0) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v47, v4);
      if (!v38) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    uint64_t v30 = v28;
    return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
  }
  uint64_t v30 = v46;
  return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
}

__n128 MetricsRequest.width.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 MetricsRequest.width.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *unint64_t v1 = *a1;
  v1[1].n128_u8[0] = v2;
  return result;
}

uint64_t (*MetricsRequest.width.modify())()
{
  return nullsub_1;
}

__n128 MetricsRequest.height.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 MetricsRequest.height.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(unsigned char *)(v1 + 40) = v2;
  return result;
}

uint64_t (*MetricsRequest.height.modify())()
{
  return nullsub_1;
}

double MetricsRequest.cornerRadius.getter()
{
  return *(double *)(v0 + 48);
}

void MetricsRequest.cornerRadius.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t (*MetricsRequest.cornerRadius.modify())()
{
  return nullsub_1;
}

__n128 MetricsRequest.edgeInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 88);
  __n128 result = *(__n128 *)(v1 + 56);
  long long v4 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t MetricsRequest.edgeInsets.setter(uint64_t a1)
{
  return sub_191B7317C(a1, v1 + 56);
}

uint64_t sub_191B7317C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*MetricsRequest.edgeInsets.modify())()
{
  return nullsub_1;
}

double MetricsRequest.clipMargin.getter()
{
  return *(double *)(v0 + 96);
}

void MetricsRequest.clipMargin.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*MetricsRequest.clipMargin.modify())()
{
  return nullsub_1;
}

double MetricsRequest.scaleFactor.getter()
{
  return *(double *)(v0 + 104);
}

void MetricsRequest.scaleFactor.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*MetricsRequest.scaleFactor.modify())()
{
  return nullsub_1;
}

uint64_t MetricsRequest.watchDisplayVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MetricsRequest(0);
  return sub_191B01614(v1 + *(int *)(v3 + 40), a1, &qword_1E92E1F80);
}

uint64_t type metadata accessor for MetricsRequest(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B6E0);
}

uint64_t MetricsRequest.watchDisplayVariant.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MetricsRequest(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 40), &qword_1E92E1F80);
}

uint64_t (*MetricsRequest.watchDisplayVariant.modify())()
{
  return nullsub_1;
}

unint64_t sub_191B7334C(char a1)
{
  unint64_t result = 0x6874646977;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746867696568;
      break;
    case 2:
      unint64_t result = 0x615272656E726F63;
      break;
    case 3:
      unint64_t result = 0x706F547465736E69;
      break;
    case 4:
      unint64_t result = 0x61654C7465736E69;
      break;
    case 5:
      unint64_t result = 0x746F427465736E69;
      break;
    case 6:
      unint64_t result = 0x6172547465736E69;
      break;
    case 7:
      unint64_t result = 0x6772614D70696C63;
      break;
    case 8:
      unint64_t result = 0x636146656C616373;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191B734B8(char a1)
{
  unint64_t result = 0x6874646977;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746867696568;
      break;
    case 2:
      unint64_t result = 0x615272656E726F63;
      break;
    case 3:
      unint64_t result = 0x706F547465736E69;
      break;
    case 4:
      unint64_t result = 0x61654C7465736E69;
      break;
    case 5:
      unint64_t result = 0x746F427465736E69;
      break;
    case 6:
      unint64_t result = 0x6172547465736E69;
      break;
    case 7:
      unint64_t result = 0x6772614D70696C63;
      break;
    case 8:
      unint64_t result = 0x636146656C616373;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B73624(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_191B7334C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_191B7334C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_191CF6348();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_191B736B0()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191B7334C(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191B73714()
{
  sub_191B7334C(*v0);
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B73768()
{
  char v1 = *v0;
  sub_191CF6468();
  sub_191B7334C(v1);
  sub_191CF5388();
  swift_bridgeObjectRelease();
  return sub_191CF64C8();
}

uint64_t sub_191B737C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80E84();
  *a1 = result;
  return result;
}

unint64_t sub_191B737F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191B7334C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_191B73824()
{
  return sub_191B734B8(*v0);
}

uint64_t sub_191B7382C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80E84();
  *a1 = result;
  return result;
}

void sub_191B73854(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_191B73860(uint64_t a1)
{
  unint64_t v2 = sub_191B74090();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B7389C(uint64_t a1)
{
  unint64_t v2 = sub_191B74090();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:watchDisplayVariant:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  char v15 = *((unsigned char *)a1 + 16);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = a5 + 56;
  char v19 = *((unsigned char *)a2 + 16);
  uint64_t v20 = a5 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  uint64_t v21 = sub_191CF43F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)a5 = v13;
  *(void *)(a5 + 8) = v14;
  *(unsigned char *)(a5 + 16) = v15;
  *(void *)(a5 + 24) = v16;
  *(void *)(a5 + 32) = v17;
  *(unsigned char *)(a5 + 40) = v19;
  *(double *)(a5 + 48) = a6;
  sub_191B7317C(a3, v18);
  *(double *)(a5 + 96) = a7;
  *(double *)(a5 + 104) = a8;
  return sub_191B28FA4(a4, v20, &qword_1E92E1F80);
}

uint64_t MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  char v14 = *((unsigned char *)a1 + 16);
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v17 = a4 + 56;
  char v18 = *((unsigned char *)a2 + 16);
  uint64_t v19 = a4 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  uint64_t v20 = sub_191CF43F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(void *)a4 = v12;
  *(void *)(a4 + 8) = v13;
  *(unsigned char *)(a4 + 16) = v14;
  *(void *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = v16;
  *(unsigned char *)(a4 + 40) = v18;
  *(double *)(a4 + 48) = a5;
  uint64_t result = sub_191B7317C(a3, v17);
  *(double *)(a4 + 96) = a6;
  *(double *)(a4 + 104) = a7;
  return result;
}

uint64_t MetricsRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v3 - 8);
  int v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E17F8);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetricsRequest(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  int v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  v11[88] = 1;
  uint64_t v12 = (uint64_t)&v11[*(int *)(v9 + 48)];
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  uint64_t v45 = v12;
  v15(v12, 1, 1, v13);
  uint64_t v17 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_191B74090();
  uint64_t v18 = (uint64_t)v47;
  sub_191CF6508();
  if (v18)
  {
    uint64_t v19 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return sub_191B01770(v19, &qword_1E92E1F80);
  }
  else
  {
    uint64_t v40 = v16;
    int v41 = v15;
    uint64_t v47 = v11;
    uint64_t v21 = v43;
    uint64_t v20 = v44;
    char v50 = 0;
    sub_191B740E4();
    sub_191CF6178();
    char v23 = v49;
    uint64_t v24 = (uint64_t)v47;
    *(_OWORD *)uint64_t v47 = v48;
    *(unsigned char *)(v24 + 16) = v23;
    char v50 = 1;
    sub_191CF6178();
    char v25 = v49;
    *(_OWORD *)(v24 + 24) = v48;
    *(unsigned char *)(v24 + 40) = v25;
    LOBYTE(v48) = 2;
    sub_191CF6138();
    *(void *)(v24 + 48) = v26;
    LOBYTE(v48) = 7;
    sub_191CF6138();
    *(void *)(v24 + 96) = v27;
    LOBYTE(v48) = 8;
    sub_191CF6138();
    *(void *)(v24 + 104) = v28;
    LOBYTE(v48) = 9;
    if (sub_191CF61B8())
    {
      LOBYTE(v48) = 9;
      sub_191B7475C(&qword_1E92E38B8, MEMORY[0x1E4F3D6F0]);
      uint64_t v29 = (uint64_t)v42;
      sub_191CF6178();
      v41(v29, 0, 1, v13);
      sub_191B28FA4(v29, v45, &qword_1E92E1F80);
    }
    LOBYTE(v48) = 3;
    sub_191CF6138();
    uint64_t v31 = v30;
    LOBYTE(v48) = 4;
    sub_191CF6138();
    uint64_t v33 = v32;
    LOBYTE(v48) = 5;
    sub_191CF6138();
    uint64_t v35 = v34;
    LOBYTE(v48) = 6;
    sub_191CF6138();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
    uint64_t v38 = (uint64_t)v47;
    *((void *)v47 + 7) = v31;
    *(void *)(v38 + 64) = v33;
    *(void *)(v38 + 72) = v35;
    *(void *)(v38 + 80) = v37;
    *(unsigned char *)(v38 + 88) = 0;
    uint64_t v39 = (uint64_t)v47;
    sub_191B7A340((uint64_t)v47, v20, type metadata accessor for MetricsRequest);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return sub_191B7A3A8(v39, type metadata accessor for MetricsRequest);
  }
}

unint64_t sub_191B74090()
{
  unint64_t result = qword_1E92E1C10;
  if (!qword_1E92E1C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C10);
  }
  return result;
}

unint64_t sub_191B740E4()
{
  unint64_t result = qword_1E92E14F0;
  if (!qword_1E92E14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E14F0);
  }
  return result;
}

uint64_t MetricsRequest.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v25 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF43F8();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C48);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B74090();
  sub_191CF6528();
  char v13 = *((unsigned char *)v2 + 16);
  long long v29 = *v2;
  char v30 = v13;
  char v28 = 0;
  sub_191B746B4();
  uint64_t v14 = v27;
  sub_191CF6278();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v27 = v8;
  uint64_t v16 = v10;
  uint64_t v17 = v26;
  char v18 = *((unsigned char *)v2 + 40);
  long long v29 = *(long long *)((char *)v2 + 24);
  char v30 = v18;
  char v28 = 1;
  sub_191CF6278();
  *(void *)&long long v29 = *((void *)v2 + 6);
  char v28 = 2;
  sub_191B74708();
  sub_191CF6278();
  *(void *)&long long v29 = *((void *)v2 + 12);
  char v28 = 7;
  sub_191CF6278();
  *(void *)&long long v29 = *((void *)v2 + 13);
  char v28 = 8;
  sub_191CF6278();
  if ((*((unsigned char *)v2 + 88) & 1) == 0)
  {
    uint64_t v22 = *((void *)v2 + 9);
    uint64_t v21 = *((void *)v2 + 10);
    uint64_t v23 = *((void *)v2 + 8);
    *(void *)&long long v29 = *((void *)v2 + 7);
    char v28 = 3;
    sub_191CF6278();
    *(void *)&long long v29 = v23;
    char v28 = 4;
    sub_191CF6278();
    *(void *)&long long v29 = v22;
    char v28 = 5;
    sub_191CF6278();
    *(void *)&long long v29 = v21;
    char v28 = 6;
    sub_191CF6278();
  }
  uint64_t v19 = type metadata accessor for MetricsRequest(0);
  uint64_t v20 = v25;
  sub_191B01614((uint64_t)v2 + *(int *)(v19 + 40), v25, &qword_1E92E1F80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v20, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    return sub_191B01770(v20, &qword_1E92E1F80);
  }
  else
  {
    uint64_t v24 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v27, v20, v6);
    LOBYTE(v29) = 9;
    sub_191B7475C(&qword_1E92E38C0, MEMORY[0x1E4F3D6F0]);
    sub_191CF6278();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v9);
  }
}

unint64_t sub_191B746B4()
{
  unint64_t result = qword_1E92E0B20;
  if (!qword_1E92E0B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0B20);
  }
  return result;
}

unint64_t sub_191B74708()
{
  unint64_t result = qword_1EB44BB90;
  if (!qword_1EB44BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB44BB90);
  }
  return result;
}

uint64_t sub_191B7475C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MetricsRequest.hash(into:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v2) = *((unsigned char *)v0 + 16);
  long long v9 = *v0;
  char v10 = v2;
  DimensionRequest.hash(into:)();
  char v4 = *((unsigned char *)v0 + 40);
  long long v9 = *(long long *)((char *)v0 + 24);
  char v10 = v4;
  DimensionRequest.hash(into:)();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  sub_191CF64A8();
  uint64_t v5 = type metadata accessor for MetricsRequest(0);
  sub_191B01614((uint64_t)v0 + *(int *)(v5 + 40), (uint64_t)v3, &qword_1E92E1F80);
  uint64_t v6 = sub_191CF43F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_191B01770((uint64_t)v3, &qword_1E92E1F80);
  }
  else
  {
    sub_191CF43E8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  return sub_191CF6478();
}

uint64_t MetricsRequest.description.getter()
{
  uint64_t v1 = v0;
  sub_191CF5D88();
  sub_191CF53B8();
  DimensionRequest.description.getter();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  DimensionRequest.description.getter();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v2 = *(void *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_191CF8410;
  uint64_t v4 = MEMORY[0x1E4FBC958];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBC958];
  unint64_t v5 = sub_191B778A4();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = v2;
  sub_191CF5348();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v6 = *(void *)(v1 + 96);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_191CF8410;
  *(void *)(v7 + 56) = v4;
  *(void *)(v7 + 64) = v5;
  *(void *)(v7 + 32) = v6;
  sub_191CF5348();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_191CF8410;
  *(void *)(v9 + 56) = v4;
  *(void *)(v9 + 64) = v5;
  *(void *)(v9 + 32) = v8;
  sub_191CF5348();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  char v10 = *(unsigned char *)(v1 + 88);
  if (v10)
  {
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
  }
  else
  {
    sub_191CF56C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF56C8();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  if (v10)
  {
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
  }
  else
  {
    sub_191CF56C8();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    sub_191CF56C8();
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return 0;
}

BOOL MetricsRequest.isUnitScale.getter()
{
  return *(double *)(v0 + 104) == 1.0;
}

BOOL MetricsRequest.isActivityFullScreen.getter()
{
  return *(double *)(v0 + 104) != 1.0;
}

BOOL static DimensionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) != 0 && v2 == v3) {
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t MetricsRequest.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t sub_191B74EC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MetricsRequest.init(from:)(a1, a2);
}

uint64_t sub_191B74EE0(void *a1)
{
  return MetricsRequest.encode(to:)(a1);
}

uint64_t sub_191B74EF8()
{
  return sub_191CF64C8();
}

uint64_t sub_191B74F3C()
{
  return sub_191CF64C8();
}

double JindoMetricsDefinition.obstructionSize.getter()
{
  return *(double *)v0;
}

void JindoMetricsDefinition.obstructionSize.setter(double a1, double a2)
{
  *double v2 = a1;
  v2[1] = a2;
}

uint64_t (*JindoMetricsDefinition.obstructionSize.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactLeadingMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B74FF0(type metadata accessor for JindoMetricsDefinition, (uint64_t)type metadata accessor for MetricsRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191B7A340, a1);
}

uint64_t sub_191B74FF0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t JindoMetricsDefinition.compactLeadingMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 20);

  return sub_191B7A288(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactLeadingMetrics.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactTrailingMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_191B7A340(v1 + *(int *)(v3 + 24), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.compactTrailingMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 24);

  return sub_191B7A288(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactTrailingMetrics.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactMinimalMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_191B7A340(v1 + *(int *)(v3 + 28), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.compactMinimalMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 28);

  return sub_191B7A288(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactMinimalMetrics.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.expandedMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_191B7A340(v1 + *(int *)(v3 + 32), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.expandedMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 32);

  return sub_191B7A288(a1, v3);
}

uint64_t (*JindoMetricsDefinition.expandedMetrics.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.init(obstructionSize:compactLeadingMetrics:compactTrailingMetrics:compactMinimalMetrics:expandedMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *a5 = a6;
  a5[1] = a7;
  uint64_t v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  sub_191B7A47C(a1, (uint64_t)a5 + v12[5], type metadata accessor for MetricsRequest);
  sub_191B7A47C(a2, (uint64_t)a5 + v12[6], type metadata accessor for MetricsRequest);
  sub_191B7A47C(a3, (uint64_t)a5 + v12[7], type metadata accessor for MetricsRequest);
  return sub_191B7A47C(a4, (uint64_t)a5 + v12[8], type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.hash(into:)()
{
  return MetricsRequest.hash(into:)();
}

uint64_t JindoMetricsDefinition.metricsRequestForTag(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = qword_191CFC248[a1];
  uint64_t v5 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_191B7A340(v2 + *(int *)(v5 + 4 * v4), a2, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.description.getter()
{
  return 0;
}

unint64_t sub_191B756D8(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 2:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x6465646E61707865;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191B757A4(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 2:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x6465646E61707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B75870(unsigned __int8 *a1, char *a2)
{
  return sub_191CD5C1C(*a1, *a2);
}

uint64_t sub_191B7587C()
{
  return sub_191CD68B0();
}

uint64_t sub_191B75884()
{
  return sub_191CD6C2C();
}

uint64_t sub_191B7588C()
{
  return sub_191CD6DBC();
}

uint64_t sub_191B75894@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80ED0();
  *a1 = result;
  return result;
}

unint64_t sub_191B758C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_191B756D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_191B758F0()
{
  return sub_191B757A4(*v0);
}

uint64_t sub_191B758F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80ED0();
  *a1 = result;
  return result;
}

void sub_191B75920(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_191B7592C(uint64_t a1)
{
  unint64_t v2 = sub_191B7A2EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B75968(uint64_t a1)
{
  unint64_t v2 = sub_191B7A2EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t JindoMetricsDefinition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v40 = type metadata accessor for MetricsRequest(0);
  uint64_t v3 = MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v34 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  char v10 = (char *)v34 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1808);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for JindoMetricsDefinition(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_191B7A2EC();
  int v42 = v14;
  uint64_t v19 = v44;
  sub_191CF6508();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  uint64_t v20 = (uint64_t)v12;
  uint64_t v44 = v10;
  uint64_t v36 = v7;
  uint64_t v21 = v39;
  uint64_t v22 = v17;
  char v50 = 0;
  uint64_t v23 = v41;
  sub_191CF6138();
  uint64_t v25 = v24;
  char v49 = 1;
  sub_191CF6138();
  uint64_t v27 = v26;
  char v48 = 2;
  uint64_t v28 = sub_191B7475C(&qword_1E92E1430, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
  sub_191CF6178();
  uint64_t v35 = v15;
  sub_191B7A47C(v20, (uint64_t)v22 + *(int *)(v15 + 20), type metadata accessor for MetricsRequest);
  char v47 = 3;
  uint64_t v29 = (uint64_t)v44;
  v34[1] = v28;
  sub_191CF6178();
  uint64_t v30 = v35;
  sub_191B7A47C(v29, (uint64_t)v22 + *(int *)(v35 + 24), type metadata accessor for MetricsRequest);
  char v46 = 4;
  uint64_t v31 = (uint64_t)v36;
  sub_191CF6178();
  sub_191B7A47C(v31, (uint64_t)v22 + *(int *)(v30 + 28), type metadata accessor for MetricsRequest);
  char v45 = 5;
  uint64_t v32 = (uint64_t)v38;
  sub_191CF6178();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v42, v23);
  sub_191B7A47C(v32, (uint64_t)v22 + *(int *)(v30 + 32), type metadata accessor for MetricsRequest);
  *uint64_t v22 = v25;
  v22[1] = v27;
  sub_191B7A340((uint64_t)v22, v37, type metadata accessor for JindoMetricsDefinition);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_191B7A3A8((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
}

uint64_t JindoMetricsDefinition.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B7A2EC();
  sub_191CF6528();
  uint64_t v12 = *v3;
  char v11 = 0;
  sub_191B74708();
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    sub_191CF6278();
    type metadata accessor for JindoMetricsDefinition(0);
    LOBYTE(v12) = 2;
    type metadata accessor for MetricsRequest(0);
    sub_191B7475C(&qword_1E92E0B00, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
    sub_191CF6278();
    LOBYTE(v12) = 3;
    sub_191CF6278();
    LOBYTE(v12) = 4;
    sub_191CF6278();
    LOBYTE(v12) = 5;
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t JindoMetricsDefinition.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t sub_191B7629C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JindoMetricsDefinition.init(from:)(a1, a2);
}

uint64_t sub_191B762B4(void *a1)
{
  return JindoMetricsDefinition.encode(to:)(a1);
}

uint64_t sub_191B762D0()
{
  return MetricsRequest.hash(into:)();
}

uint64_t sub_191B76364()
{
  return sub_191CF64C8();
}

double DimensionRequest.resolveIfNecessary(intrinsicLength:)(double result)
{
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return *(double *)v1;
  }
  if (*(double *)(v1 + 8) < result) {
    uint64_t result = *(double *)(v1 + 8);
  }
  if (result <= *(double *)v1) {
    return *(double *)v1;
  }
  return result;
}

uint64_t sub_191B7644C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a3;
  uint64_t v4 = sub_191CF43A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v47 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = a2;
  char v48 = v10;
  v10((char *)&v32 - v8, a2, v4);
  uint64_t v36 = v5;
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v11 = v43(v9, v4);
  int v12 = v11;
  int v13 = *MEMORY[0x1E4F3D588];
  int v14 = *MEMORY[0x1E4F3D5C0];
  int v42 = *MEMORY[0x1E4F3D5C0];
  BOOL v16 = v11 == v13 || v11 == v14;
  int v17 = *MEMORY[0x1E4F3D5C8];
  BOOL v40 = v16;
  int v41 = v17;
  if (v11 == v17) {
    BOOL v16 = 1;
  }
  int v18 = *MEMORY[0x1E4F3D5B8];
  int v19 = 1;
  BOOL v38 = v16;
  int v39 = v18;
  if (v16)
  {
    int v20 = 1;
    int v21 = 1;
    int v22 = 1;
    int v23 = 1;
    char v24 = 1;
    char v25 = 1;
    char v26 = 1;
  }
  else
  {
    int v20 = 1;
    int v21 = 1;
    int v22 = 1;
    int v23 = 1;
    char v24 = 1;
    char v25 = 1;
    char v26 = 1;
    if (v11 != v18)
    {
      if (v11 != *MEMORY[0x1E4F3D580])
      {
        if (v11 != *MEMORY[0x1E4F3D590])
        {
          if (v11 != *MEMORY[0x1E4F3D560])
          {
            if (v11 != *MEMORY[0x1E4F3D5A0])
            {
              if (v11 != *MEMORY[0x1E4F3D598])
              {
                if (v11 != *MEMORY[0x1E4F3D5A8])
                {
                  if (v11 != *MEMORY[0x1E4F3D570])
                  {
                    if (v11 != *MEMORY[0x1E4F3D578])
                    {
                      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v4);
                      int v19 = 1;
                      int v20 = 1;
                      int v21 = 1;
                      int v22 = 1;
                      int v23 = 1;
                      goto LABEL_28;
                    }
                    int v19 = 0;
                  }
                  int v20 = 0;
                }
                int v21 = 0;
              }
              int v22 = 0;
            }
            int v23 = 0;
          }
          char v24 = 0;
        }
        char v25 = 0;
      }
      char v26 = 0;
    }
  }
LABEL_28:
  int v37 = v23;
  int v34 = v21;
  int v35 = v22;
  int v32 = v19;
  int v33 = v20;
  uint64_t v27 = v47;
  uint64_t v28 = v44;
  v48(v47, v44, v4);
  int v29 = v43(v27, v4);
  uint64_t v30 = v46;
  if (v29 == v13) {
    goto LABEL_31;
  }
  if (v29 != v42)
  {
    if (v29 == v41)
    {
      if (v40) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v45, v30, v4);
      }
    }
    else if (v29 == v39)
    {
      if (v38) {
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D580])
    {
      if (v26) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D590])
    {
      if (v25) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D560])
    {
      if (v24) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D5A0])
    {
      if (v37) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D598])
    {
      if (v35) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D5A8])
    {
      if (v34) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D570])
    {
      if (v33) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else if (v29 == *MEMORY[0x1E4F3D578])
    {
      if (v32) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v47, v4);
      if (v38) {
        return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
      }
    }
    goto LABEL_31;
  }
  if (v12 != v13) {
LABEL_31:
  }
    uint64_t v30 = v28;
  return ((uint64_t (*)(void, void, void))v48)(v45, v30, v4);
}

double DimensionRequest.minValue.getter()
{
  return *(double *)v0;
}

double DimensionRequest.maxValue.getter()
{
  uint64_t v1 = 8;
  if (!*(unsigned char *)(v0 + 16)) {
    uint64_t v1 = 0;
  }
  return *(double *)(v0 + v1);
}

uint64_t DimensionRequest.filePath.getter()
{
  uint64_t v1 = *v0;
  if (v0[2])
  {
    uint64_t v2 = v0[1];
    uint64_t v9 = 762214756;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_191CF8410;
    uint64_t v4 = MEMORY[0x1E4FBC958];
    *(void *)(v3 + 56) = MEMORY[0x1E4FBC958];
    unint64_t v5 = sub_191B778A4();
    *(void *)(v3 + 64) = v5;
    *(void *)(v3 + 32) = v1;
    sub_191CF5348();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_191CF8410;
    *(void *)(v6 + 56) = v4;
    *(void *)(v6 + 64) = v5;
    *(void *)(v6 + 32) = v2;
  }
  else
  {
    uint64_t v9 = 762866022;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_191CF8410;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBC958];
    *(void *)(v7 + 64) = sub_191B778A4();
    *(void *)(v7 + 32) = v1;
  }
  sub_191CF5348();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t DimensionRequest.description.getter()
{
  uint64_t v1 = *v0;
  if (v0[2])
  {
    uint64_t v2 = v0[1];
    uint64_t v9 = 0x3C63696D616E7944;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_191CF8410;
    uint64_t v4 = MEMORY[0x1E4FBC958];
    *(void *)(v3 + 56) = MEMORY[0x1E4FBC958];
    unint64_t v5 = sub_191B778A4();
    *(void *)(v3 + 64) = v5;
    *(void *)(v3 + 32) = v1;
    sub_191CF5348();
    sub_191CF53B8();
    swift_bridgeObjectRelease();
    sub_191CF53B8();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_191CF8410;
    *(void *)(v6 + 56) = v4;
    *(void *)(v6 + 64) = v5;
    *(void *)(v6 + 32) = v2;
  }
  else
  {
    uint64_t v9 = 0x3C6465786946;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44B7E8);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_191CF8410;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBC958];
    *(void *)(v7 + 64) = sub_191B778A4();
    *(void *)(v7 + 32) = v1;
  }
  sub_191CF5348();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v9;
}

uint64_t sub_191B76C3C(unsigned __int8 *a1, char *a2)
{
  return sub_191CD6290(*a1, *a2);
}

uint64_t sub_191B76C48()
{
  return sub_191CF64C8();
}

uint64_t sub_191B76D18()
{
  sub_191CF5388();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191B76DD0()
{
  return sub_191CF64C8();
}

uint64_t sub_191B76E9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80F1C();
  *a1 = result;
  return result;
}

void sub_191B76ECC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000657079;
  uint64_t v3 = 0x5474736575716572;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6465786966;
      goto LABEL_3;
    case 2:
      *a1 = 7235949;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 7889261;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_191B76F5C()
{
  uint64_t result = 0x5474736575716572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465786966;
      break;
    case 2:
      uint64_t result = 7235949;
      break;
    case 3:
      uint64_t result = 7889261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B76FE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_191B80F1C();
  *a1 = result;
  return result;
}

void sub_191B77008(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_191B77014(uint64_t a1)
{
  unint64_t v2 = sub_191B7A408();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B77050(uint64_t a1)
{
  unint64_t v2 = sub_191B7A408();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DimensionRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v8 = v1[1];
  int v9 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B7A408();
  sub_191CF6528();
  if (v9 == 1)
  {
    LOBYTE(v14) = 0;
    sub_191CF6218();
    if (!v2)
    {
      uint64_t v14 = v12;
      char v13 = 2;
      sub_191B74708();
      sub_191CF6278();
      uint64_t v14 = v8;
      char v13 = 3;
      goto LABEL_7;
    }
  }
  else
  {
    LOBYTE(v14) = 0;
    sub_191CF6218();
    if (!v2)
    {
      uint64_t v14 = v12;
      char v13 = 1;
      sub_191B74708();
LABEL_7:
      sub_191CF6278();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DimensionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_191CF5E28();
  uint64_t v34 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1800);
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v9 = sub_191B7A408();
  uint64_t v10 = v37;
  sub_191CF6508();
  if (!v10)
  {
    uint64_t v11 = v5;
    uint64_t v33 = v3;
    uint64_t v12 = v36;
    int v37 = a1;
    char v41 = 0;
    sub_191CF6118();
    uint64_t v15 = sub_191CF60B8();
    swift_bridgeObjectRelease();
    if (v15 == 1)
    {
      char v40 = 1;
      sub_191CF6138();
      uint64_t v17 = v21;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v6);
      char v20 = 0;
      uint64_t v19 = 0;
      goto LABEL_9;
    }
    if (!v15)
    {
      char v39 = 2;
      sub_191CF6138();
      uint64_t v17 = v16;
      char v38 = 3;
      sub_191CF6138();
      uint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v6);
      char v20 = 1;
LABEL_9:
      *(void *)uint64_t v12 = v17;
      *(void *)(v12 + 8) = v19;
      *(unsigned char *)(v12 + 16) = v20;
      uint64_t v13 = (uint64_t)v37;
      return __swift_destroy_boxed_opaque_existential_1(v13);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E44C0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_191CF8410;
    *(void *)(v22 + 56) = &type metadata for DimensionRequest.CodingKeys;
    *(void *)(v22 + 64) = v9;
    *(unsigned char *)(v22 + 32) = 0;
    int v23 = v11;
    sub_191CF5E18();
    uint64_t v24 = sub_191CF5E38();
    swift_allocError();
    char v25 = v8;
    uint64_t v27 = v26;
    uint64_t v28 = v34;
    uint64_t v29 = v26;
    uint64_t v30 = v11;
    uint64_t v31 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v29, v30, v33);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v27, *MEMORY[0x1E4FBBA78], v24);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v31);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v6);
    a1 = v37;
  }
  uint64_t v13 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t DimensionRequest.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_191CF6478();
    sub_191CF64A8();
  }
  else
  {
    sub_191CF6478();
  }
  return sub_191CF64A8();
}

uint64_t DimensionRequest.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_191CF6468();
  sub_191CF6478();
  if (v1) {
    sub_191CF64A8();
  }
  sub_191CF64A8();
  return sub_191CF64C8();
}

uint64_t sub_191B777DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DimensionRequest.init(from:)(a1, a2);
}

uint64_t sub_191B777F4(void *a1)
{
  return DimensionRequest.encode(to:)(a1);
}

uint64_t sub_191B77814()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_191CF6468();
  sub_191CF6478();
  if (v1) {
    sub_191CF64A8();
  }
  sub_191CF64A8();
  return sub_191CF64C8();
}

unint64_t sub_191B778A4()
{
  unint64_t result = qword_1E92E0AA0;
  if (!qword_1E92E0AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E0AA0);
  }
  return result;
}

BOOL sub_191B778F8(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) != 0 && v2 == v3) {
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_191B77958()
{
  uint64_t v0 = type metadata accessor for ActivityMetricsDefinition(0);
  __swift_allocate_value_buffer(v0, qword_1E92E38A0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E38A0);
  return sub_191B779A4(v1);
}

uint64_t sub_191B779A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ActivityMetricsDefinition(0);
  uint64_t v3 = v2 - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = (char *)&v22 + *(int *)(v13 + 48) - v14;
  uint64_t v17 = sub_191CF43F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_OWORD *)uint64_t v15 = xmmword_191CFB870;
  v15[16] = 0;
  *(_OWORD *)(v15 + 24) = xmmword_191CFB870;
  v15[40] = 0;
  *((void *)v15 + 6) = 0x4036000000000000;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  v15[88] = 1;
  *((_OWORD *)v15 + 6) = xmmword_191CFB880;
  sub_191B7A340((uint64_t)v15, (uint64_t)v12, type metadata accessor for MetricsRequest);
  uint64_t v18 = type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  uint64_t v20 = (uint64_t)&v5[*(int *)(v3 + 28)];
  v19((char *)v20, 1, 1, v18);
  sub_191B7A47C((uint64_t)v12, (uint64_t)v5, type metadata accessor for MetricsRequest);
  sub_191B28FA4((uint64_t)v8, v20, (uint64_t *)&unk_1E92E1BD8);
  sub_191B7A47C((uint64_t)v5, a1, type metadata accessor for ActivityMetricsDefinition);
  return sub_191B7A3A8((uint64_t)v15, type metadata accessor for MetricsRequest);
}

uint64_t ActivityMetricsDefinition.init(listItemMetrics:jindoMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a3 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  uint64_t v7 = type metadata accessor for JindoMetricsDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_191B7A47C(a1, a3, type metadata accessor for MetricsRequest);
  return sub_191B28FA4(a2, v6, (uint64_t *)&unk_1E92E1BD8);
}

uint64_t static ActivityMetricsDefinition.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E2C08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ActivityMetricsDefinition(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E38A0);
  return sub_191B7A340(v3, a1, type metadata accessor for ActivityMetricsDefinition);
}

uint64_t ActivityMetricsDefinition._rawJindoMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B74FF0(type metadata accessor for ActivityMetricsDefinition, (uint64_t)&unk_1E92E1BD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_191B01614, a1);
}

uint64_t ActivityMetricsDefinition._rawJindoMetrics.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActivityMetricsDefinition(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1E92E1BD8);
}

uint64_t (*ActivityMetricsDefinition._rawJindoMetrics.modify())()
{
  return nullsub_1;
}

uint64_t ActivityMetricsDefinition.listItemMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A288);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191CF43A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v31 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v19(v16, *MEMORY[0x1E4F3D5B8], v6);
  v19(v10, *MEMORY[0x1E4F3D578], v6);
  sub_191B7644C(v32, (uint64_t)v10, (uint64_t)v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v10, v6);
  uint64_t v21 = (uint64_t (*)(char *, uint64_t))v20;
  uint64_t v33 = v18;
  sub_191B72C00((uint64_t)v16, (uint64_t)v13, (uint64_t)v18);
  v20(v13, v6);
  v20(v16, v6);
  sub_191B7A340(v34, a2, type metadata accessor for MetricsRequest);
  double v22 = *(double *)(a2 + 24);
  double v23 = *(double *)(a2 + 32);
  LODWORD(v16) = *(unsigned __int8 *)(a2 + 40);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v18, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v24 = (void *)sub_191CF5A98();
  id v25 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v24);
  id v26 = objc_msgSend(self, sel_defaultMetrics);
  if (!v16) {
    double v23 = v22;
  }
  id v27 = v25;
  objc_msgSend(v26, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, v23);
  uint64_t v29 = v28;

  uint64_t result = v21(v33, v6);
  *(double *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v29;
  *(unsigned char *)(a2 + 40) = 1;
  return result;
}

uint64_t ActivityMetricsDefinition.jindoMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = (unsigned char *)a1;
  uint64_t v55 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A288);
  MEMORY[0x1F4188790](v2 - 8);
  char v49 = &v46[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v50 = (double *)&v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_191CF43A8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = &v46[-v17];
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = &v46[-v20];
  MEMORY[0x1F4188790](v19);
  double v23 = &v46[-v22];
  uint64_t v24 = *(void (**)(unsigned char *, void, uint64_t))(v12 + 104);
  v24(v21, *MEMORY[0x1E4F3D5B8], v11);
  v24(v15, *MEMORY[0x1E4F3D578], v11);
  sub_191B7644C((uint64_t)v52, (uint64_t)v15, (uint64_t)v18);
  id v25 = *(void (**)(unsigned char *, uint64_t))(v12 + 8);
  id v26 = v15;
  uint64_t v27 = v9;
  uint64_t v28 = v51;
  v25(v26, v11);
  sub_191B72C00((uint64_t)v21, (uint64_t)v18, (uint64_t)v23);
  v25(v18, v11);
  v25(v21, v11);
  uint64_t v29 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_191B01614((uint64_t)v53 + *(int *)(v29 + 20), (uint64_t)v8, (uint64_t *)&unk_1E92E1BD8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v27) == 1)
  {
    v25(v23, v11);
    sub_191B01770((uint64_t)v8, (uint64_t *)&unk_1E92E1BD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v55, 1, 1, v27);
  }
  else
  {
    uint64_t v53 = type metadata accessor for JindoMetricsDefinition;
    uint64_t v31 = v54;
    sub_191B7A47C((uint64_t)v8, (uint64_t)v54, type metadata accessor for JindoMetricsDefinition);
    uint64_t v52 = &v31[*(int *)(v27 + 32)];
    uint64_t v32 = v50;
    sub_191B7A340((uint64_t)v52, (uint64_t)v50, type metadata accessor for MetricsRequest);
    double v48 = v32[3];
    double v33 = v32[4];
    int v47 = *((unsigned __int8 *)v32 + 40);
    uint64_t v34 = v49;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v49, v23, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
    uint64_t v35 = sub_191CF5A98();
    char v49 = (unsigned char *)v27;
    uint64_t v36 = (void *)v35;
    id v37 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v35);
    id v38 = objc_msgSend(self, sel_defaultMetrics);
    double v39 = v48;
    if (!v47) {
      double v33 = v48;
    }
    id v40 = v37;
    objc_msgSend(v38, sel_scaledValueForValue_compatibleWithTraitCollection_, v40, v33);
    uint64_t v42 = v41;

    v25(v23, v11);
    v32[3] = v39;
    *((void *)v32 + 4) = v42;
    *((unsigned char *)v32 + 40) = 1;
    sub_191B7A288((uint64_t)v32, (uint64_t)v52);
    uint64_t v44 = v54;
    uint64_t v43 = v55;
    uint64_t v45 = v53;
    sub_191B7A340((uint64_t)v54, v55, v53);
    (*(void (**)(uint64_t, void, uint64_t, unsigned char *))(v28 + 56))(v43, 0, 1, v49);
    return sub_191B7A3A8((uint64_t)v44, v45);
  }
}

uint64_t ActivityMetricsDefinition.filePath.getter()
{
  return 14967;
}

uint64_t ActivityMetricsDefinition.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_191CF5D88();
  sub_191CF53B8();
  MetricsRequest.description.getter();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v4 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_191B01614(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t *)&unk_1E92E1BD8);
  uint64_t v5 = type metadata accessor for JindoMetricsDefinition(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_191B01770((uint64_t)v3, (uint64_t *)&unk_1E92E1BD8);
  }
  else
  {
    JindoMetricsDefinition.description.getter();
    sub_191B7A3A8((uint64_t)v3, type metadata accessor for JindoMetricsDefinition);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v7[0];
}

uint64_t ActivityMetricsDefinition.hash(into:)()
{
  return sub_191B792A0();
}

unint64_t sub_191B78A4C()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_191B78A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B80F68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B78AB4(uint64_t a1)
{
  unint64_t v2 = sub_191B7A4E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B78AF0(uint64_t a1)
{
  unint64_t v2 = sub_191B7A4E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityMetricsDefinition.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B7A4E4();
  sub_191CF6528();
  v8[15] = 0;
  type metadata accessor for MetricsRequest(0);
  sub_191B7475C(&qword_1E92E0B00, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
  sub_191CF6278();
  if (!v1)
  {
    type metadata accessor for ActivityMetricsDefinition(0);
    v8[14] = 1;
    type metadata accessor for JindoMetricsDefinition(0);
    sub_191B7475C((unint64_t *)&unk_1E92E0B58, (void (*)(uint64_t))type metadata accessor for JindoMetricsDefinition);
    sub_191CF6208();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ActivityMetricsDefinition.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ActivityMetricsDefinition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v23 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1810);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityMetricsDefinition(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 28)];
  uint64_t v15 = type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v26 = v14;
  v16(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B7A4E4();
  uint64_t v17 = v25;
  sub_191CF6508();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191B01770(v26, (uint64_t *)&unk_1E92E1BD8);
  }
  else
  {
    uint64_t v18 = v22;
    char v28 = 0;
    sub_191B7475C(&qword_1E92E1430, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
    sub_191CF6178();
    sub_191B7A47C(v23, (uint64_t)v13, type metadata accessor for MetricsRequest);
    char v27 = 1;
    sub_191B7475C(&qword_1E92E1648, (void (*)(uint64_t))type metadata accessor for JindoMetricsDefinition);
    uint64_t v19 = v24;
    sub_191CF6108();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
    sub_191B28FA4((uint64_t)v5, v26, (uint64_t *)&unk_1E92E1BD8);
    sub_191B7A340((uint64_t)v13, v21, type metadata accessor for ActivityMetricsDefinition);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_191B7A3A8((uint64_t)v13, type metadata accessor for ActivityMetricsDefinition);
  }
}

uint64_t sub_191B79174()
{
  return sub_191CF64C8();
}

uint64_t sub_191B791C8()
{
  return sub_191B792A0();
}

uint64_t sub_191B79208()
{
  return sub_191CF64C8();
}

uint64_t sub_191B79258@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityMetricsDefinition.init(from:)(a1, a2);
}

uint64_t sub_191B79270(void *a1)
{
  return ActivityMetricsDefinition.encode(to:)(a1);
}

uint64_t sub_191B792A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191B01614(v1, (uint64_t)v8, (uint64_t *)&unk_1E92E1BD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_191CF6488();
  }
  sub_191B7A47C((uint64_t)v8, (uint64_t)v5, type metadata accessor for JindoMetricsDefinition);
  sub_191CF6488();
  sub_191CF64A8();
  sub_191CF64A8();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return sub_191B7A3A8((uint64_t)v5, type metadata accessor for JindoMetricsDefinition);
}

BOOL sub_191B79484(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_191CF43A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a2, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = *MEMORY[0x1E4F3D588];
  if (v12 != *MEMORY[0x1E4F3D588])
  {
    if (v12 == *MEMORY[0x1E4F3D5C0])
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5C8])
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5B8]) {
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x1E4F3D580])
    {
      unint64_t v13 = 4;
    }
    else if (v12 == *MEMORY[0x1E4F3D590])
    {
      unint64_t v13 = 5;
    }
    else if (v12 == *MEMORY[0x1E4F3D560])
    {
      unint64_t v13 = 6;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A0])
    {
      unint64_t v13 = 7;
    }
    else if (v12 == *MEMORY[0x1E4F3D598])
    {
      unint64_t v13 = 8;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A8])
    {
      unint64_t v13 = 9;
    }
    else if (v12 == *MEMORY[0x1E4F3D570])
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != *MEMORY[0x1E4F3D578])
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C0])
  {
    unint64_t v16 = 1;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C8])
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != *MEMORY[0x1E4F3D5B8])
    {
      if (v15 == *MEMORY[0x1E4F3D580])
      {
        unint64_t v16 = 4;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D590])
      {
        unint64_t v16 = 5;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D560])
      {
        unint64_t v16 = 6;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A0])
      {
        unint64_t v16 = 7;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D598])
      {
        unint64_t v16 = 8;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A8])
      {
        unint64_t v16 = 9;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D570])
      {
        unint64_t v16 = 10;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D578])
      {
        unint64_t v16 = 11;
        return v13 >= v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 >= v16;
}

BOOL _s9WidgetKit25ActivityMetricsDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (double *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0F70);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  int v14 = (double *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v28 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v28 - v18;
  if ((_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v29 = v7;
  uint64_t v20 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_191B01614(a1 + *(int *)(v20 + 20), (uint64_t)v19, (uint64_t *)&unk_1E92E1BD8);
  sub_191B01614(a2 + *(int *)(v20 + 20), (uint64_t)v17, (uint64_t *)&unk_1E92E1BD8);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_191B01614((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1E92E1BD8);
  sub_191B01614((uint64_t)v17, v21, (uint64_t *)&unk_1E92E1BD8);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1E92E1BD8);
    sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1E92E1BD8);
    if (v22(v21, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1E92E1BD8);
      return 1;
    }
    uint64_t v24 = (uint64_t *)&unk_1E92E0F70;
    goto LABEL_20;
  }
  sub_191B01614((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1E92E1BD8);
  if (v22(v21, 1, v4) == 1)
  {
    uint64_t v24 = (uint64_t *)&unk_1E92E0F70;
LABEL_19:
    sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1E92E1BD8);
    sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1E92E1BD8);
    sub_191B7A3A8((uint64_t)v14, type metadata accessor for JindoMetricsDefinition);
LABEL_20:
    sub_191B01770((uint64_t)v10, v24);
    return 0;
  }
  uint64_t v25 = v29;
  sub_191B7A47C(v21, (uint64_t)v29, type metadata accessor for JindoMetricsDefinition);
  BOOL v26 = *v14 == *v25 && v14[1] == v25[1];
  if (!v26
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[5], (uint64_t)v25 + v4[5]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[6], (uint64_t)v25 + v4[6]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[7], (uint64_t)v25 + v4[7]) & 1) == 0)
  {
    sub_191B7A3A8((uint64_t)v25, type metadata accessor for JindoMetricsDefinition);
    uint64_t v24 = (uint64_t *)&unk_1E92E1BD8;
    goto LABEL_19;
  }
  char v27 = _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[8], (uint64_t)v25 + v4[8]);
  sub_191B7A3A8((uint64_t)v25, type metadata accessor for JindoMetricsDefinition);
  sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1E92E1BD8);
  sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1E92E1BD8);
  sub_191B7A3A8((uint64_t)v14, type metadata accessor for JindoMetricsDefinition);
  sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1E92E1BD8);
  return (v27 & 1) != 0;
}

uint64_t _s9WidgetKit22JindoMetricsDefinitionV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if ((_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[5], (uint64_t)a2 + v5[5]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[6], (uint64_t)a2 + v5[6]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[7], (uint64_t)a2 + v5[7]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = v5[8];

  return _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v6, (uint64_t)a2 + v6);
}

uint64_t _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191CF43F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E0F00);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  int v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v29 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v29 - v18;
  double v20 = *(double *)a1;
  double v21 = *(double *)a2;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) != 0 || v20 != v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if (v20 == v21 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
LABEL_8:
    double v23 = *(double *)(a1 + 24);
    double v24 = *(double *)(a2 + 24);
    if (*(unsigned char *)(a1 + 40))
    {
      if ((*(unsigned char *)(a2 + 40) & 1) == 0) {
        return 0;
      }
      uint64_t result = 0;
      if (v23 != v24 || *(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        return result;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 1) != 0 || v23 != v24)
    {
      return 0;
    }
    if (*(double *)(a1 + 48) == *(double *)(a2 + 48))
    {
      if (*(unsigned char *)(a1 + 88))
      {
        if (!*(unsigned char *)(a2 + 88)) {
          return 0;
        }
      }
      else if ((*(unsigned char *)(a2 + 88) & 1) != 0 || (sub_191CF3948() & 1) == 0)
      {
        return 0;
      }
      if (*(double *)(a1 + 96) != *(double *)(a2 + 96) || *(double *)(a1 + 104) != *(double *)(a2 + 104)) {
        return 0;
      }
      uint64_t v30 = type metadata accessor for MetricsRequest(0);
      sub_191B01614(a1 + *(int *)(v30 + 40), (uint64_t)v19, &qword_1E92E1F80);
      sub_191B01614(a2 + *(int *)(v30 + 40), (uint64_t)v17, &qword_1E92E1F80);
      uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_191B01614((uint64_t)v19, (uint64_t)v10, &qword_1E92E1F80);
      sub_191B01614((uint64_t)v17, v25, &qword_1E92E1F80);
      BOOL v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v26((uint64_t)v10, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v17, &qword_1E92E1F80);
        sub_191B01770((uint64_t)v19, &qword_1E92E1F80);
        if (v26(v25, 1, v4) == 1)
        {
          sub_191B01770((uint64_t)v10, &qword_1E92E1F80);
          return 1;
        }
        goto LABEL_28;
      }
      sub_191B01614((uint64_t)v10, (uint64_t)v14, &qword_1E92E1F80);
      if (v26(v25, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v17, &qword_1E92E1F80);
        sub_191B01770((uint64_t)v19, &qword_1E92E1F80);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_28:
        sub_191B01770((uint64_t)v10, (uint64_t *)&unk_1E92E0F00);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v25, v4);
      sub_191B7475C(&qword_1E92E3900, MEMORY[0x1E4F3D6F0]);
      char v27 = sub_191CF52F8();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v7, v4);
      sub_191B01770((uint64_t)v17, &qword_1E92E1F80);
      sub_191B01770((uint64_t)v19, &qword_1E92E1F80);
      v28(v14, v4);
      sub_191B01770((uint64_t)v10, &qword_1E92E1F80);
      if (v27) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for JindoMetricsDefinition(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B6F0);
}

uint64_t sub_191B7A288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_191B7A2EC()
{
  unint64_t result = qword_1E92E1D88;
  if (!qword_1E92E1D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1D88);
  }
  return result;
}

uint64_t sub_191B7A340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B7A3A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_191B7A408()
{
  unint64_t result = qword_1E92E1CA0;
  if (!qword_1E92E1CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CA0);
  }
  return result;
}

uint64_t type metadata accessor for ActivityMetricsDefinition(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44BAB8);
}

uint64_t sub_191B7A47C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_191B7A4E4()
{
  unint64_t result = qword_1E92E1DA0;
  if (!qword_1E92E1DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DA0);
  }
  return result;
}

uint64_t sub_191B7A538()
{
  return sub_191B7475C(&qword_1E92E38C8, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
}

uint64_t sub_191B7A580()
{
  return sub_191B7475C(&qword_1E92E38D0, (void (*)(uint64_t))type metadata accessor for JindoMetricsDefinition);
}

unint64_t sub_191B7A5CC()
{
  unint64_t result = qword_1E92E38D8;
  if (!qword_1E92E38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E38D8);
  }
  return result;
}

uint64_t sub_191B7A620()
{
  return sub_191B7475C(&qword_1E92E0B70, (void (*)(uint64_t))type metadata accessor for ActivityMetricsDefinition);
}

uint64_t sub_191B7A668()
{
  return sub_191B7475C((unint64_t *)&unk_1EB449DF0, MEMORY[0x1E4F3D5D8]);
}

void *initializeBufferWithCopyOfBuffer for MetricsRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v5 = *(int *)(a3 + 40);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    uint64_t v8 = sub_191CF43F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for MetricsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_191CF43F8();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v7 = sub_191CF43F8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for MetricsRequest(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  long long v5 = *(long long *)((char *)a2 + 24);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  long long v6 = *(long long *)((char *)a2 + 56);
  long long v7 = *(long long *)((char *)a2 + 72);
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF43F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(int *)(a3 + 40);
  long long v5 = (void *)(a1 + v4);
  long long v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v7 = sub_191CF43F8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(int *)(a3 + 40);
  long long v5 = (void *)(a1 + v4);
  long long v6 = (void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v7 = sub_191CF43F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B7AF5C);
}

uint64_t sub_191B7AF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B7B01C);
}

uint64_t sub_191B7B01C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191B7B0C4()
{
  sub_191B800C8(319, &qword_1EB44B6D8, MEMORY[0x1E4F3D6F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for JindoMetricsDefinition(_OWORD *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
    unsigned char v8[16] = *((unsigned char *)a2 + v7 + 16);
    v8[40] = *((unsigned char *)a2 + v7 + 40);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    *((void *)v8 + 6) = *(void *)((char *)a2 + v7 + 48);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)a2 + v7 + 72);
    v8[88] = *((unsigned char *)a2 + v7 + 88);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
    uint64_t v10 = type metadata accessor for MetricsRequest(0);
    uint64_t v11 = *(int *)(v10 + 40);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = sub_191CF43F8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v19 = a3[6];
    double v20 = (char *)v4 + v19;
    double v21 = (char *)a2 + v19;
    *(_OWORD *)double v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    v20[40] = v21[40];
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
    v20[88] = v21[88];
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    uint64_t v22 = *(int *)(v10 + 40);
    double v23 = &v20[v22];
    double v24 = &v21[v22];
    if (v16(&v21[v22], 1, v14))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v24, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    uint64_t v26 = a3[7];
    char v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
    v27[40] = v28[40];
    *((void *)v27 + 6) = *((void *)v28 + 6);
    *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
    *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
    v27[88] = v28[88];
    *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
    uint64_t v29 = *(int *)(v10 + 40);
    uint64_t v30 = &v27[v29];
    uint64_t v31 = &v28[v29];
    if (v16(&v28[v29], 1, v14))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v30, v31, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
    }
    uint64_t v33 = a3[8];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    v34[40] = v35[40];
    *((void *)v34 + 6) = *((void *)v35 + 6);
    *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    v34[88] = v35[88];
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    uint64_t v36 = *(int *)(v10 + 40);
    id v37 = &v34[v36];
    id v38 = &v35[v36];
    if (v16(&v35[v36], 1, v14))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v37, v38, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v37, 0, 1, v14);
    }
  }
  return v4;
}

uint64_t destroy for JindoMetricsDefinition(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for MetricsRequest(0);
  uint64_t v6 = *(int *)(v5 + 40);
  uint64_t v7 = v4 + v6;
  uint64_t v8 = sub_191CF43F8();
  uint64_t v15 = *(void *)(v8 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v9(v7, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v7, v8);
    uint64_t v6 = *(int *)(v5 + 40);
  }
  uint64_t v10 = a1 + v6 + a2[6];
  if (!v9(v10, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v8);
    uint64_t v6 = *(int *)(v5 + 40);
  }
  uint64_t v11 = a1 + v6 + a2[7];
  if (!v9(v11, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v8);
    uint64_t v6 = *(int *)(v5 + 40);
  }
  uint64_t v12 = a1 + v6 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v12, 1, v8);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v12, v8);
  }
  return result;
}

_OWORD *initializeWithCopy for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  unsigned char v7[40] = *((unsigned char *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((unsigned char *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
  uint64_t v9 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v9 + 40);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v19 + 24);
  v18[40] = v19[40];
  *((void *)v18 + 6) = *((void *)v19 + 6);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
  v18[88] = v19[88];
  *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
  uint64_t v20 = *(int *)(v9 + 40);
  double v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  if (v15(&v19[v20], 1, v13))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  v25[40] = v26[40];
  *((void *)v25 + 6) = *((void *)v26 + 6);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
  v25[88] = v26[88];
  *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
  uint64_t v27 = *(int *)(v9 + 40);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  if (v15(&v26[v27], 1, v13))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v28, v29, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  uint64_t v31 = a3[8];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
  v32[40] = v33[40];
  *((void *)v32 + 6) = *((void *)v33 + 6);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  v32[88] = v33[88];
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  uint64_t v34 = *(int *)(v9 + 40);
  uint64_t v35 = &v32[v34];
  uint64_t v36 = &v33[v34];
  if (v15(&v33[v34], 1, v13))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v35, v36, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  return a1;
}

void *assignWithCopy for JindoMetricsDefinition(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = v9;
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 24);
  unsigned char v7[40] = *((unsigned char *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = v10;
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 56);
  long long v12 = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((unsigned char *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((void *)v7 + 12) = *(void *)((char *)a2 + v6 + 96);
  *((void *)v7 + 13) = *(void *)((char *)a2 + v6 + 104);
  uint64_t v13 = type metadata accessor for MetricsRequest(0);
  uint64_t v14 = *(int *)(v13 + 40);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_191CF43F8();
  uint64_t v62 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  int v19 = v18(v15, 1, v17);
  int v20 = v18(v16, 1, v17);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v17);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v15, v16, v17);
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  long long v25 = *(_OWORD *)v24;
  v23[16] = v24[16];
  *(_OWORD *)uint64_t v23 = v25;
  long long v26 = *(_OWORD *)(v24 + 24);
  v23[40] = v24[40];
  *(_OWORD *)(v23 + 24) = v26;
  *((void *)v23 + 6) = *((void *)v24 + 6);
  long long v27 = *(_OWORD *)(v24 + 56);
  long long v28 = *(_OWORD *)(v24 + 72);
  v23[88] = v24[88];
  *(_OWORD *)(v23 + 72) = v28;
  *(_OWORD *)(v23 + 56) = v27;
  *((void *)v23 + 12) = *((void *)v24 + 12);
  *((void *)v23 + 13) = *((void *)v24 + 13);
  uint64_t v29 = *(int *)(v13 + 40);
  uint64_t v30 = &v23[v29];
  uint64_t v31 = &v24[v29];
  int v32 = v18(&v23[v29], 1, v17);
  int v33 = v18(v31, 1, v17);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v30, v31, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v30, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v17);
LABEL_12:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v30, v31, v17);
LABEL_13:
  uint64_t v35 = a3[7];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  long long v38 = *(_OWORD *)v37;
  v36[16] = v37[16];
  *(_OWORD *)uint64_t v36 = v38;
  long long v39 = *(_OWORD *)(v37 + 24);
  v36[40] = v37[40];
  *(_OWORD *)(v36 + 24) = v39;
  *((void *)v36 + 6) = *((void *)v37 + 6);
  long long v40 = *(_OWORD *)(v37 + 56);
  long long v41 = *(_OWORD *)(v37 + 72);
  v36[88] = v37[88];
  *(_OWORD *)(v36 + 72) = v41;
  *(_OWORD *)(v36 + 56) = v40;
  *((void *)v36 + 12) = *((void *)v37 + 12);
  *((void *)v36 + 13) = *((void *)v37 + 13);
  uint64_t v42 = *(int *)(v13 + 40);
  uint64_t v43 = &v36[v42];
  uint64_t v44 = &v37[v42];
  int v45 = v18(&v36[v42], 1, v17);
  int v46 = v18(v44, 1, v17);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v43, v44, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v43, 0, 1, v17);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v17);
LABEL_18:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v43, v44, v17);
LABEL_19:
  uint64_t v48 = a3[8];
  char v49 = (char *)a1 + v48;
  char v50 = (char *)a2 + v48;
  long long v51 = *(_OWORD *)v50;
  v49[16] = v50[16];
  *(_OWORD *)char v49 = v51;
  long long v52 = *(_OWORD *)(v50 + 24);
  v49[40] = v50[40];
  *(_OWORD *)(v49 + 24) = v52;
  *((void *)v49 + 6) = *((void *)v50 + 6);
  long long v53 = *(_OWORD *)(v50 + 56);
  long long v54 = *(_OWORD *)(v50 + 72);
  v49[88] = v50[88];
  *(_OWORD *)(v49 + 72) = v54;
  *(_OWORD *)(v49 + 56) = v53;
  *((void *)v49 + 12) = *((void *)v50 + 12);
  *((void *)v49 + 13) = *((void *)v50 + 13);
  uint64_t v55 = *(int *)(v13 + 40);
  uint64_t v56 = &v49[v55];
  char v57 = &v50[v55];
  int v58 = v18(&v49[v55], 1, v17);
  int v59 = v18(v57, 1, v17);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v56, v57, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v17);
    goto LABEL_24;
  }
  if (v59)
  {
LABEL_24:
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v56, v57, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v56, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  unsigned char v7[40] = *((unsigned char *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((unsigned char *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
  uint64_t v9 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v9 + 40);
  long long v11 = &v7[v10];
  long long v12 = &v8[v10];
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v19 + 24);
  v18[40] = v19[40];
  *((void *)v18 + 6) = *((void *)v19 + 6);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
  v18[88] = v19[88];
  *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
  uint64_t v20 = *(int *)(v9 + 40);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  if (v15(&v19[v20], 1, v13))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v22, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
  }
  uint64_t v24 = a3[7];
  long long v25 = (char *)a1 + v24;
  long long v26 = (char *)a2 + v24;
  *(_OWORD *)long long v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  v25[40] = v26[40];
  *((void *)v25 + 6) = *((void *)v26 + 6);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
  v25[88] = v26[88];
  *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
  uint64_t v27 = *(int *)(v9 + 40);
  long long v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  if (v15(&v26[v27], 1, v13))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v28, v29, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  uint64_t v31 = a3[8];
  int v32 = (char *)a1 + v31;
  int v33 = (char *)a2 + v31;
  *(_OWORD *)int v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
  v32[40] = v33[40];
  *((void *)v32 + 6) = *((void *)v33 + 6);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  v32[88] = v33[88];
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  uint64_t v34 = *(int *)(v9 + 40);
  uint64_t v35 = &v32[v34];
  uint64_t v36 = &v33[v34];
  if (v15(&v33[v34], 1, v13))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v35, v36, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  return a1;
}

_OWORD *assignWithTake for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)((char *)a2 + v5);
  v6[16] = *((unsigned char *)a2 + v5 + 16);
  v6[40] = *((unsigned char *)a2 + v5 + 40);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)((char *)a2 + v5 + 24);
  *((void *)v6 + 6) = *(void *)((char *)a2 + v5 + 48);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)((char *)a2 + v5 + 72);
  v6[88] = *((unsigned char *)a2 + v5 + 88);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)((char *)a2 + v5 + 56);
  *((_OWORD *)v6 + 6) = *(_OWORD *)((char *)a2 + v5 + 96);
  uint64_t v8 = type metadata accessor for MetricsRequest(0);
  uint64_t v9 = *(int *)(v8 + 40);
  uint64_t v10 = &v6[v9];
  long long v11 = &v7[v9];
  uint64_t v12 = sub_191CF43F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[6];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_OWORD *)int v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
  v19[40] = v20[40];
  *((void *)v19 + 6) = *((void *)v20 + 6);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  v19[88] = v20[88];
  *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
  uint64_t v21 = *(int *)(v8 + 40);
  uint64_t v22 = &v19[v21];
  uint64_t v23 = &v20[v21];
  int v24 = v14(&v19[v21], 1, v12);
  int v25 = v14(v23, 1, v12);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v22, v23, v12);
LABEL_13:
  uint64_t v27 = a3[7];
  long long v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(_OWORD *)long long v28 = *(_OWORD *)v29;
  v28[16] = v29[16];
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
  v28[40] = v29[40];
  *((void *)v28 + 6) = *((void *)v29 + 6);
  *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
  *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
  v28[88] = v29[88];
  *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
  uint64_t v30 = *(int *)(v8 + 40);
  uint64_t v31 = &v28[v30];
  int v32 = &v29[v30];
  int v33 = v14(&v28[v30], 1, v12);
  int v34 = v14(v32, 1, v12);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v31, v32, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v31, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v12);
LABEL_18:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v31, v32, v12);
LABEL_19:
  uint64_t v36 = a3[8];
  uint64_t v37 = (char *)a1 + v36;
  long long v38 = (char *)a2 + v36;
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
  v37[40] = v38[40];
  *((void *)v37 + 6) = *((void *)v38 + 6);
  *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
  *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
  v37[88] = v38[88];
  *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
  uint64_t v39 = *(int *)(v8 + 40);
  long long v40 = &v37[v39];
  long long v41 = &v38[v39];
  int v42 = v14(&v37[v39], 1, v12);
  int v43 = v14(v41, 1, v12);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v40, v41, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v12);
    goto LABEL_24;
  }
  if (v43)
  {
LABEL_24:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v40, v41, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v40, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B7CCFC);
}

uint64_t sub_191B7CCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 20);

  return v7(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JindoMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B7CD90);
}

uint64_t sub_191B7CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for MetricsRequest(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = v7;
  uint64_t v10 = a1 + *(int *)(a4 + 20);

  return v8(v10, a2, a2, v9);
}

uint64_t sub_191B7CE14()
{
  uint64_t result = type metadata accessor for MetricsRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DimensionRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DimensionRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_191B7CF50(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_191B7CF58(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DimensionRequest()
{
  return &type metadata for DimensionRequest;
}

void *initializeBufferWithCopyOfBuffer for ActivityMetricsDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    uint64_t v7 = type metadata accessor for MetricsRequest(0);
    uint64_t v8 = *(int *)(v7 + 40);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_191CF43F8();
    uint64_t v12 = *(void *)(v11 - 8);
    long long v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v51(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    int v16 = (_OWORD *)((char *)v4 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    uint64_t v18 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v50 = v19;
      *int v16 = *v17;
      uint64_t v21 = v18[5];
      uint64_t v22 = (char *)v16 + v21;
      uint64_t v23 = (char *)v17 + v21;
      v22[16] = v23[16];
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      v22[40] = v23[40];
      *((void *)v22 + 6) = *((void *)v23 + 6);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      v22[88] = v23[88];
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      uint64_t v24 = *(int *)(v7 + 40);
      int v25 = &v22[v24];
      uint64_t v26 = &v23[v24];
      if (v51(&v23[v24], 1, v11))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      }
      uint64_t v28 = v18[6];
      uint64_t v29 = (char *)v16 + v28;
      uint64_t v30 = (char *)v17 + v28;
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      v29[16] = v30[16];
      *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
      v29[40] = v30[40];
      *((void *)v29 + 6) = *((void *)v30 + 6);
      *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
      v29[88] = v30[88];
      *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
      uint64_t v31 = *(int *)(v7 + 40);
      int v32 = &v29[v31];
      int v33 = &v30[v31];
      if (v51(&v30[v31], 1, v11))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v33, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
      }
      uint64_t v35 = v18[7];
      uint64_t v36 = (char *)v16 + v35;
      uint64_t v37 = (char *)v17 + v35;
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
      v36[40] = v37[40];
      *((void *)v36 + 6) = *((void *)v37 + 6);
      *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
      *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
      v36[88] = v37[88];
      *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
      uint64_t v38 = *(int *)(v7 + 40);
      uint64_t v39 = &v36[v38];
      long long v40 = &v37[v38];
      if (v51(&v37[v38], 1, v11))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v39, v40, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
      }
      uint64_t v42 = v18[8];
      int v43 = (char *)v16 + v42;
      uint64_t v44 = (char *)v17 + v42;
      *(_OWORD *)int v43 = *(_OWORD *)v44;
      v43[16] = v44[16];
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      v43[40] = v44[40];
      *((void *)v43 + 6) = *((void *)v44 + 6);
      *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
      v43[88] = v44[88];
      *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
      uint64_t v45 = *(int *)(v7 + 40);
      int v46 = &v43[v45];
      uint64_t v47 = &v44[v45];
      if (v51(&v44[v45], 1, v11))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v46, v47, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v46, 0, 1, v11);
      }
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v50 + 56))(v16, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t destroy for ActivityMetricsDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsRequest(0);
  uint64_t v5 = a1 + *(int *)(v4 + 40);
  uint64_t v6 = sub_191CF43F8();
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(int *)(v4 + 40);
    uint64_t v12 = v8 + v9[5] + v11;
    if (!v7(v12, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v12, v6);
      uint64_t v11 = *(int *)(v4 + 40);
    }
    uint64_t v13 = v8 + v9[6] + v11;
    if (!v7(v13, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v6);
      uint64_t v11 = *(int *)(v4 + 40);
    }
    uint64_t v14 = v8 + v9[7] + v11;
    if (!v7(v14, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v6);
      uint64_t v11 = *(int *)(v4 + 40);
    }
    uint64_t v15 = v8 + v9[8] + v11;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v15, 1, v6);
    if (!result)
    {
      int v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      return v16(v15, v6);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = *(int *)(v6 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_191CF43F8();
  uint64_t v11 = *(void *)(v10 - 8);
  char v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v49(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  int v16 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v48 = v17;
    *uint64_t v14 = *v15;
    uint64_t v19 = v16[5];
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    v20[16] = v21[16];
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    v20[40] = v21[40];
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
    v20[88] = v21[88];
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    uint64_t v22 = *(int *)(v6 + 40);
    uint64_t v23 = &v20[v22];
    uint64_t v24 = &v21[v22];
    if (v49(&v21[v22], 1, v10))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v23, v24, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
    }
    uint64_t v26 = v16[6];
    uint64_t v27 = (char *)v14 + v26;
    uint64_t v28 = (char *)v15 + v26;
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
    v27[40] = v28[40];
    *((void *)v27 + 6) = *((void *)v28 + 6);
    *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
    *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
    v27[88] = v28[88];
    *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
    uint64_t v29 = *(int *)(v6 + 40);
    uint64_t v30 = &v27[v29];
    uint64_t v31 = &v28[v29];
    if (v49(&v28[v29], 1, v10))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = v16[7];
    uint64_t v34 = (char *)v14 + v33;
    uint64_t v35 = (char *)v15 + v33;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    v34[40] = v35[40];
    *((void *)v34 + 6) = *((void *)v35 + 6);
    *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    v34[88] = v35[88];
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    uint64_t v36 = *(int *)(v6 + 40);
    uint64_t v37 = &v34[v36];
    uint64_t v38 = &v35[v36];
    if (v49(&v35[v36], 1, v10))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0, 1, v10);
    }
    uint64_t v40 = v16[8];
    uint64_t v41 = (char *)v14 + v40;
    uint64_t v42 = (char *)v15 + v40;
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    v41[16] = v42[16];
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    v41[40] = v42[40];
    *((void *)v41 + 6) = *((void *)v42 + 6);
    *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
    v41[88] = v42[88];
    *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
    uint64_t v43 = *(int *)(v6 + 40);
    uint64_t v44 = &v41[v43];
    uint64_t v45 = &v42[v43];
    if (v49(&v42[v43], 1, v10))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v45, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v48 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithCopy for ActivityMetricsDefinition(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v6;
  long long v7 = *(long long *)((char *)a2 + 24);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  long long v8 = *(long long *)((char *)a2 + 56);
  long long v9 = *(long long *)((char *)a2 + 72);
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  uint64_t v127 = type metadata accessor for MetricsRequest(0);
  uint64_t v10 = *(int *)(v127 + 40);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_191CF43F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  uint64_t v128 = (uint64_t (*)(char *, uint64_t, uint64_t))v15;
  int v17 = v15(v12, 1, v13);
  uint64_t v126 = v14;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_191B7A3A8((uint64_t)v20, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    uint64_t v41 = v22[5];
    uint64_t v42 = &v20[v41];
    uint64_t v43 = &v21[v41];
    long long v44 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *(_OWORD *)uint64_t v42 = v44;
    long long v45 = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *(_OWORD *)(v42 + 24) = v45;
    *((void *)v42 + 6) = *((void *)v43 + 6);
    long long v46 = *(_OWORD *)(v43 + 56);
    long long v47 = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *(_OWORD *)(v42 + 72) = v47;
    *(_OWORD *)(v42 + 56) = v46;
    *((void *)v42 + 12) = *((void *)v43 + 12);
    *((void *)v42 + 13) = *((void *)v43 + 13);
    uint64_t v48 = *(int *)(v127 + 40);
    char v49 = &v42[v48];
    uint64_t v50 = &v43[v48];
    int v51 = v128(&v42[v48], 1, v13);
    int v52 = v128(v50, 1, v13);
    if (v51)
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v49, v50, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v49, 0, 1, v13);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v49, v50, v13);
LABEL_34:
        uint64_t v88 = v22[6];
        uint64_t v89 = &v20[v88];
        uint64_t v90 = &v21[v88];
        long long v91 = *(_OWORD *)v90;
        v89[16] = v90[16];
        *(_OWORD *)uint64_t v89 = v91;
        long long v92 = *(_OWORD *)(v90 + 24);
        v89[40] = v90[40];
        *(_OWORD *)(v89 + 24) = v92;
        *((void *)v89 + 6) = *((void *)v90 + 6);
        long long v93 = *(_OWORD *)(v90 + 56);
        long long v94 = *(_OWORD *)(v90 + 72);
        v89[88] = v90[88];
        *(_OWORD *)(v89 + 72) = v94;
        *(_OWORD *)(v89 + 56) = v93;
        *((void *)v89 + 12) = *((void *)v90 + 12);
        *((void *)v89 + 13) = *((void *)v90 + 13);
        uint64_t v95 = *(int *)(v127 + 40);
        uint64_t v96 = &v89[v95];
        uint64_t v97 = &v90[v95];
        int v98 = v128(&v89[v95], 1, v13);
        int v99 = v128(v97, 1, v13);
        if (v98)
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v96, v97, v13);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v96, 0, 1, v13);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v99)
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v96, v97, v13);
LABEL_40:
            uint64_t v101 = v22[7];
            uint64_t v102 = &v20[v101];
            unint64_t v103 = &v21[v101];
            long long v104 = *(_OWORD *)v103;
            v102[16] = v103[16];
            *(_OWORD *)uint64_t v102 = v104;
            long long v105 = *(_OWORD *)(v103 + 24);
            v102[40] = v103[40];
            *(_OWORD *)(v102 + 24) = v105;
            *((void *)v102 + 6) = *((void *)v103 + 6);
            long long v106 = *(_OWORD *)(v103 + 56);
            long long v107 = *(_OWORD *)(v103 + 72);
            v102[88] = v103[88];
            *(_OWORD *)(v102 + 72) = v107;
            *(_OWORD *)(v102 + 56) = v106;
            *((void *)v102 + 12) = *((void *)v103 + 12);
            *((void *)v102 + 13) = *((void *)v103 + 13);
            uint64_t v108 = *(int *)(v127 + 40);
            long long v109 = &v102[v108];
            uint64_t v110 = &v103[v108];
            int v111 = v128(&v102[v108], 1, v13);
            int v112 = v128(v110, 1, v13);
            if (v111)
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v109, v110, v13);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v109, 0, 1, v13);
LABEL_46:
                uint64_t v114 = v22[8];
                uint64_t v115 = &v20[v114];
                uint64_t v116 = &v21[v114];
                long long v117 = *(_OWORD *)v116;
                v115[16] = v116[16];
                *(_OWORD *)uint64_t v115 = v117;
                long long v118 = *(_OWORD *)(v116 + 24);
                v115[40] = v116[40];
                *(_OWORD *)(v115 + 24) = v118;
                *((void *)v115 + 6) = *((void *)v116 + 6);
                long long v119 = *(_OWORD *)(v116 + 56);
                long long v120 = *(_OWORD *)(v116 + 72);
                v115[88] = v116[88];
                *(_OWORD *)(v115 + 72) = v120;
                *(_OWORD *)(v115 + 56) = v119;
                *((void *)v115 + 12) = *((void *)v116 + 12);
                *((void *)v115 + 13) = *((void *)v116 + 13);
                uint64_t v121 = *(int *)(v127 + 40);
                id v122 = &v115[v121];
                uint64_t v123 = &v116[v121];
                int v124 = v128(&v115[v121], 1, v13);
                int v125 = v128(v123, 1, v13);
                if (v124)
                {
                  if (!v125)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v122, v123, v13);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v122, 0, 1, v13);
                    return a1;
                  }
                }
                else
                {
                  if (!v125)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v126 + 24))(v122, v123, v13);
                    return a1;
                  }
                  (*(void (**)(char *, uint64_t))(v126 + 8))(v122, v13);
                }
                size_t v38 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80) - 8)
                                + 64);
                uint64_t v39 = v122;
                uint64_t v40 = v123;
                goto LABEL_14;
              }
            }
            else
            {
              if (!v112)
              {
                (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v109, v110, v13);
                goto LABEL_46;
              }
              (*(void (**)(char *, uint64_t))(v14 + 8))(v109, v13);
            }
            uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v14 + 8))(v96, v13);
        }
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
    }
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v49, v50, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_34;
  }
  if (v26)
  {
LABEL_13:
    size_t v38 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8) - 8) + 64);
    uint64_t v39 = v20;
    uint64_t v40 = v21;
LABEL_14:
    memcpy(v39, v40, v38);
    return a1;
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  uint64_t v27 = v22[5];
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &v21[v27];
  long long v30 = *(_OWORD *)v29;
  v28[16] = v29[16];
  *(_OWORD *)uint64_t v28 = v30;
  long long v31 = *(_OWORD *)(v29 + 24);
  v28[40] = v29[40];
  *(_OWORD *)(v28 + 24) = v31;
  *((void *)v28 + 6) = *((void *)v29 + 6);
  long long v32 = *(_OWORD *)(v29 + 56);
  long long v33 = *(_OWORD *)(v29 + 72);
  v28[88] = v29[88];
  *(_OWORD *)(v28 + 72) = v33;
  *(_OWORD *)(v28 + 56) = v32;
  *((void *)v28 + 12) = *((void *)v29 + 12);
  *((void *)v28 + 13) = *((void *)v29 + 13);
  uint64_t v34 = *(int *)(v127 + 40);
  uint64_t v35 = &v28[v34];
  uint64_t v36 = &v29[v34];
  if (v128(&v29[v34], 1, v13))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v35, v36, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  uint64_t v53 = v22[6];
  long long v54 = &v20[v53];
  uint64_t v55 = &v21[v53];
  long long v56 = *(_OWORD *)v55;
  v54[16] = v55[16];
  *(_OWORD *)long long v54 = v56;
  long long v57 = *(_OWORD *)(v55 + 24);
  v54[40] = v55[40];
  *(_OWORD *)(v54 + 24) = v57;
  *((void *)v54 + 6) = *((void *)v55 + 6);
  long long v58 = *(_OWORD *)(v55 + 56);
  long long v59 = *(_OWORD *)(v55 + 72);
  v54[88] = v55[88];
  *(_OWORD *)(v54 + 72) = v59;
  *(_OWORD *)(v54 + 56) = v58;
  *((void *)v54 + 12) = *((void *)v55 + 12);
  *((void *)v54 + 13) = *((void *)v55 + 13);
  uint64_t v60 = *(int *)(v127 + 40);
  uint64_t v61 = &v54[v60];
  uint64_t v62 = &v55[v60];
  if (v128(&v55[v60], 1, v13))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v61, v62, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v61, 0, 1, v13);
  }
  uint64_t v64 = v22[7];
  uint64_t v65 = &v20[v64];
  unint64_t v66 = &v21[v64];
  long long v67 = *(_OWORD *)v66;
  v65[16] = v66[16];
  *(_OWORD *)uint64_t v65 = v67;
  long long v68 = *(_OWORD *)(v66 + 24);
  v65[40] = v66[40];
  *(_OWORD *)(v65 + 24) = v68;
  *((void *)v65 + 6) = *((void *)v66 + 6);
  long long v69 = *(_OWORD *)(v66 + 56);
  long long v70 = *(_OWORD *)(v66 + 72);
  v65[88] = v66[88];
  *(_OWORD *)(v65 + 72) = v70;
  *(_OWORD *)(v65 + 56) = v69;
  *((void *)v65 + 12) = *((void *)v66 + 12);
  *((void *)v65 + 13) = *((void *)v66 + 13);
  uint64_t v71 = *(int *)(v127 + 40);
  unint64_t v72 = &v65[v71];
  id v73 = &v66[v71];
  if (v128(&v66[v71], 1, v13))
  {
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v72, v73, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v72, 0, 1, v13);
  }
  uint64_t v75 = v22[8];
  uint64_t v76 = &v20[v75];
  uint64_t v77 = &v21[v75];
  long long v78 = *(_OWORD *)v77;
  v76[16] = v77[16];
  *(_OWORD *)uint64_t v76 = v78;
  long long v79 = *(_OWORD *)(v77 + 24);
  v76[40] = v77[40];
  *(_OWORD *)(v76 + 24) = v79;
  *((void *)v76 + 6) = *((void *)v77 + 6);
  long long v80 = *(_OWORD *)(v77 + 56);
  long long v81 = *(_OWORD *)(v77 + 72);
  v76[88] = v77[88];
  *(_OWORD *)(v76 + 72) = v81;
  *(_OWORD *)(v76 + 56) = v80;
  *((void *)v76 + 12) = *((void *)v77 + 12);
  *((void *)v76 + 13) = *((void *)v77 + 13);
  uint64_t v82 = *(int *)(v127 + 40);
  unint64_t v83 = &v76[v82];
  uint64_t v84 = &v77[v82];
  if (v128(&v77[v82], 1, v13))
  {
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v83, v84, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v83, 0, 1, v13);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = *(int *)(v6 + 40);
  long long v8 = (void *)(a1 + v7);
  long long v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_191CF43F8();
  uint64_t v11 = *(void *)(v10 - 8);
  char v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v49(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  int v16 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v48 = v17;
    *uint64_t v14 = *v15;
    uint64_t v19 = v16[5];
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    v20[16] = v21[16];
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    v20[40] = v21[40];
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
    v20[88] = v21[88];
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    uint64_t v22 = *(int *)(v6 + 40);
    uint64_t v23 = &v20[v22];
    uint64_t v24 = &v21[v22];
    if (v49(&v21[v22], 1, v10))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v23, v24, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
    }
    uint64_t v26 = v16[6];
    uint64_t v27 = (char *)v14 + v26;
    uint64_t v28 = (char *)v15 + v26;
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
    v27[40] = v28[40];
    *((void *)v27 + 6) = *((void *)v28 + 6);
    *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
    *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
    v27[88] = v28[88];
    *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
    uint64_t v29 = *(int *)(v6 + 40);
    long long v30 = &v27[v29];
    long long v31 = &v28[v29];
    if (v49(&v28[v29], 1, v10))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = v16[7];
    uint64_t v34 = (char *)v14 + v33;
    uint64_t v35 = (char *)v15 + v33;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    v34[40] = v35[40];
    *((void *)v34 + 6) = *((void *)v35 + 6);
    *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    v34[88] = v35[88];
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    uint64_t v36 = *(int *)(v6 + 40);
    uint64_t v37 = &v34[v36];
    size_t v38 = &v35[v36];
    if (v49(&v35[v36], 1, v10))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0, 1, v10);
    }
    uint64_t v40 = v16[8];
    uint64_t v41 = (char *)v14 + v40;
    uint64_t v42 = (char *)v15 + v40;
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    v41[16] = v42[16];
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    v41[40] = v42[40];
    *((void *)v41 + 6) = *((void *)v42 + 6);
    *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
    *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
    v41[88] = v42[88];
    *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
    uint64_t v43 = *(int *)(v6 + 40);
    long long v44 = &v41[v43];
    long long v45 = &v42[v43];
    if (v49(&v42[v43], 1, v10))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v44, v45, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v48 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v91 = type metadata accessor for MetricsRequest(0);
  uint64_t v6 = *(int *)(v91 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_191CF43F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  long long v92 = (uint64_t (*)(char *, uint64_t, uint64_t))v11;
  int v13 = v11(v8, 1, v9);
  uint64_t v90 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  int v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_191B7A3A8((uint64_t)v16, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(_OWORD *)int v16 = *(_OWORD *)v17;
    uint64_t v33 = v18[5];
    uint64_t v34 = &v16[v33];
    uint64_t v35 = &v17[v33];
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    v34[40] = v35[40];
    *((void *)v34 + 6) = *((void *)v35 + 6);
    *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    v34[88] = v35[88];
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    uint64_t v36 = *(int *)(v91 + 40);
    uint64_t v37 = &v34[v36];
    size_t v38 = &v35[v36];
    int v39 = v92(&v34[v36], 1, v9);
    int v40 = v92(v38, 1, v9);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v37, v38, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v37, v38, v9);
LABEL_34:
        uint64_t v64 = v18[6];
        uint64_t v65 = &v16[v64];
        unint64_t v66 = &v17[v64];
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        v65[16] = v66[16];
        *(_OWORD *)(v65 + 24) = *(_OWORD *)(v66 + 24);
        v65[40] = v66[40];
        *((void *)v65 + 6) = *((void *)v66 + 6);
        *(_OWORD *)(v65 + 56) = *(_OWORD *)(v66 + 56);
        *(_OWORD *)(v65 + 72) = *(_OWORD *)(v66 + 72);
        v65[88] = v66[88];
        *((_OWORD *)v65 + 6) = *((_OWORD *)v66 + 6);
        uint64_t v67 = *(int *)(v91 + 40);
        long long v68 = &v65[v67];
        long long v69 = &v66[v67];
        int v70 = v92(&v65[v67], 1, v9);
        int v71 = v92(v69, 1, v9);
        if (v70)
        {
          if (!v71)
          {
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v68, v69, v9);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v68, 0, 1, v9);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v71)
          {
            (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v68, v69, v9);
LABEL_40:
            uint64_t v73 = v18[7];
            uint64_t v74 = &v16[v73];
            uint64_t v75 = &v17[v73];
            *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
            v74[16] = v75[16];
            *(_OWORD *)(v74 + 24) = *(_OWORD *)(v75 + 24);
            v74[40] = v75[40];
            *((void *)v74 + 6) = *((void *)v75 + 6);
            *(_OWORD *)(v74 + 56) = *(_OWORD *)(v75 + 56);
            *(_OWORD *)(v74 + 72) = *(_OWORD *)(v75 + 72);
            v74[88] = v75[88];
            *((_OWORD *)v74 + 6) = *((_OWORD *)v75 + 6);
            uint64_t v76 = *(int *)(v91 + 40);
            uint64_t v77 = &v74[v76];
            long long v78 = &v75[v76];
            int v79 = v92(&v74[v76], 1, v9);
            int v80 = v92(v78, 1, v9);
            if (v79)
            {
              if (!v80)
              {
                (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
LABEL_46:
                uint64_t v82 = v18[8];
                unint64_t v83 = &v16[v82];
                uint64_t v84 = &v17[v82];
                *(_OWORD *)unint64_t v83 = *(_OWORD *)v84;
                v83[16] = v84[16];
                *(_OWORD *)(v83 + 24) = *(_OWORD *)(v84 + 24);
                v83[40] = v84[40];
                *((void *)v83 + 6) = *((void *)v84 + 6);
                *(_OWORD *)(v83 + 56) = *(_OWORD *)(v84 + 56);
                *(_OWORD *)(v83 + 72) = *(_OWORD *)(v84 + 72);
                v83[88] = v84[88];
                *((_OWORD *)v83 + 6) = *((_OWORD *)v84 + 6);
                uint64_t v85 = *(int *)(v91 + 40);
                uint64_t v86 = &v83[v85];
                uint64_t v87 = &v84[v85];
                int v88 = v92(&v83[v85], 1, v9);
                int v89 = v92(v87, 1, v9);
                if (v88)
                {
                  if (!v89)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v86, v87, v9);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v86, 0, 1, v9);
                    return a1;
                  }
                }
                else
                {
                  if (!v89)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v86, v87, v9);
                    return a1;
                  }
                  (*(void (**)(char *, uint64_t))(v90 + 8))(v86, v9);
                }
                size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80) - 8)
                                + 64);
                long long v31 = v86;
                uint64_t v32 = v87;
                goto LABEL_14;
              }
            }
            else
            {
              if (!v80)
              {
                (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
                goto LABEL_46;
              }
              (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
            }
            uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
            memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v68, v9);
        }
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
        memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
    }
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v37, v38, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_34;
  }
  if (v22)
  {
LABEL_13:
    size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8) - 8) + 64);
    long long v31 = v16;
    uint64_t v32 = v17;
LABEL_14:
    memcpy(v31, v32, v30);
    return a1;
  }
  *(_OWORD *)int v16 = *(_OWORD *)v17;
  uint64_t v23 = v18[5];
  uint64_t v24 = &v16[v23];
  uint64_t v25 = &v17[v23];
  v24[16] = v25[16];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
  v24[40] = v25[40];
  *((void *)v24 + 6) = *((void *)v25 + 6);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
  *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
  v24[88] = v25[88];
  *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
  uint64_t v26 = *(int *)(v91 + 40);
  uint64_t v27 = &v24[v26];
  uint64_t v28 = &v25[v26];
  if (v92(&v25[v26], 1, v9))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v41 = v18[6];
  uint64_t v42 = &v16[v41];
  uint64_t v43 = &v17[v41];
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  v42[16] = v43[16];
  *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
  v42[40] = v43[40];
  *((void *)v42 + 6) = *((void *)v43 + 6);
  *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
  *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
  v42[88] = v43[88];
  *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
  uint64_t v44 = *(int *)(v91 + 40);
  long long v45 = &v42[v44];
  uint64_t v46 = &v43[v44];
  if (v92(&v43[v44], 1, v9))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v45, v46, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v45, 0, 1, v9);
  }
  uint64_t v48 = v18[7];
  char v49 = &v16[v48];
  uint64_t v50 = &v17[v48];
  *(_OWORD *)char v49 = *(_OWORD *)v50;
  v49[16] = v50[16];
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 24);
  v49[40] = v50[40];
  *((void *)v49 + 6) = *((void *)v50 + 6);
  *(_OWORD *)(v49 + 56) = *(_OWORD *)(v50 + 56);
  *(_OWORD *)(v49 + 72) = *(_OWORD *)(v50 + 72);
  v49[88] = v50[88];
  *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
  uint64_t v51 = *(int *)(v91 + 40);
  int v52 = &v49[v51];
  uint64_t v53 = &v50[v51];
  if (v92(&v50[v51], 1, v9))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
  }
  uint64_t v55 = v18[8];
  long long v56 = &v16[v55];
  long long v57 = &v17[v55];
  *(_OWORD *)long long v56 = *(_OWORD *)v57;
  v56[16] = v57[16];
  *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 24);
  v56[40] = v57[40];
  *((void *)v56 + 6) = *((void *)v57 + 6);
  *(_OWORD *)(v56 + 56) = *(_OWORD *)(v57 + 56);
  *(_OWORD *)(v56 + 72) = *(_OWORD *)(v57 + 72);
  v56[88] = v57[88];
  *((_OWORD *)v56 + 6) = *((_OWORD *)v57 + 6);
  uint64_t v58 = *(int *)(v91 + 40);
  long long v59 = &v56[v58];
  uint64_t v60 = &v57[v58];
  if (v92(&v57[v58], 1, v9))
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1F80);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v59, 0, 1, v9);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B7FDCC);
}

uint64_t sub_191B7FDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MetricsRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B7FEDC);
}

uint64_t sub_191B7FEDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MetricsRequest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E1BD8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_191B7FFE4()
{
  type metadata accessor for MetricsRequest(319);
  if (v0 <= 0x3F)
  {
    sub_191B800C8(319, &qword_1EB44B700, (void (*)(uint64_t))type metadata accessor for JindoMetricsDefinition);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_191B800C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191CF5BC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ActivityMetricsDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B801E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityMetricsDefinition.CodingKeys()
{
  return &type metadata for ActivityMetricsDefinition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DataProtectionLevel(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DimensionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B8037CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DimensionRequest.CodingKeys()
{
  return &type metadata for DimensionRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for JindoMetricsDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B80480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoMetricsDefinition.CodingKeys()
{
  return &type metadata for JindoMetricsDefinition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MetricsRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B80614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsRequest.CodingKeys()
{
  return &type metadata for MetricsRequest.CodingKeys;
}

unint64_t sub_191B80650()
{
  unint64_t result = qword_1E92E38E0;
  if (!qword_1E92E38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E38E0);
  }
  return result;
}

unint64_t sub_191B806A8()
{
  unint64_t result = qword_1E92E38E8;
  if (!qword_1E92E38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E38E8);
  }
  return result;
}

unint64_t sub_191B80700()
{
  unint64_t result = qword_1E92E38F0;
  if (!qword_1E92E38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E38F0);
  }
  return result;
}

unint64_t sub_191B80758()
{
  unint64_t result = qword_1E92E38F8;
  if (!qword_1E92E38F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E38F8);
  }
  return result;
}

unint64_t sub_191B807B0()
{
  unint64_t result = qword_1E92E1DB0;
  if (!qword_1E92E1DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DB0);
  }
  return result;
}

unint64_t sub_191B80808()
{
  unint64_t result = qword_1E92E1DA8;
  if (!qword_1E92E1DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1DA8);
  }
  return result;
}

unint64_t sub_191B80860()
{
  unint64_t result = qword_1E92E1CB0;
  if (!qword_1E92E1CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CB0);
  }
  return result;
}

unint64_t sub_191B808B8()
{
  unint64_t result = qword_1E92E1CA8;
  if (!qword_1E92E1CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CA8);
  }
  return result;
}

unint64_t sub_191B80910()
{
  unint64_t result = qword_1E92E1D98;
  if (!qword_1E92E1D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1D98);
  }
  return result;
}

unint64_t sub_191B80968()
{
  unint64_t result = qword_1E92E1D90;
  if (!qword_1E92E1D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1D90);
  }
  return result;
}

unint64_t sub_191B809C0()
{
  unint64_t result = qword_1E92E1C20;
  if (!qword_1E92E1C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C20);
  }
  return result;
}

unint64_t sub_191B80A18()
{
  unint64_t result = qword_1E92E1C18;
  if (!qword_1E92E1C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1C18);
  }
  return result;
}

BOOL sub_191B80A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_191CF43A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = *MEMORY[0x1E4F3D588];
  if (v12 != *MEMORY[0x1E4F3D588])
  {
    if (v12 == *MEMORY[0x1E4F3D5C0])
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5C8])
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x1E4F3D5B8]) {
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x1E4F3D580])
    {
      unint64_t v13 = 4;
    }
    else if (v12 == *MEMORY[0x1E4F3D590])
    {
      unint64_t v13 = 5;
    }
    else if (v12 == *MEMORY[0x1E4F3D560])
    {
      unint64_t v13 = 6;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A0])
    {
      unint64_t v13 = 7;
    }
    else if (v12 == *MEMORY[0x1E4F3D598])
    {
      unint64_t v13 = 8;
    }
    else if (v12 == *MEMORY[0x1E4F3D5A8])
    {
      unint64_t v13 = 9;
    }
    else if (v12 == *MEMORY[0x1E4F3D570])
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != *MEMORY[0x1E4F3D578])
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C0])
  {
    unint64_t v16 = 1;
  }
  else if (v15 == *MEMORY[0x1E4F3D5C8])
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != *MEMORY[0x1E4F3D5B8])
    {
      if (v15 == *MEMORY[0x1E4F3D580])
      {
        unint64_t v16 = 4;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D590])
      {
        unint64_t v16 = 5;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D560])
      {
        unint64_t v16 = 6;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A0])
      {
        unint64_t v16 = 7;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D598])
      {
        unint64_t v16 = 8;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D5A8])
      {
        unint64_t v16 = 9;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D570])
      {
        unint64_t v16 = 10;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x1E4F3D578])
      {
        unint64_t v16 = 11;
        return v13 >= v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 >= v16;
}

uint64_t sub_191B80E84()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_191B80ED0()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_191B80F1C()
{
  unint64_t v0 = sub_191CF60B8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_191B80F68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000191D0E700 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000191D0E720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_191B81054()
{
  uint64_t v0 = type metadata accessor for ControlTemplateButton(0);
  __swift_allocate_value_buffer(v0, qword_1E92E19D0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92E19D0);
  return sub_191B810A0(v1);
}

uint64_t sub_191B810A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for ControlTemplateButton(0) - 8;
  MEMORY[0x1F4188790](v46);
  long long v45 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v44 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v42 = (uint64_t)&v41 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v15 = (_OWORD *)((char *)&v41 - v14);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = sub_191CF4868();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  uint64_t v20 = (uint64_t)&v17[v8[8]];
  v19((char *)v20, 1, 1, v18);
  uint64_t v21 = v8[9];
  int v22 = v17;
  uint64_t v48 = v17;
  uint64_t v23 = &v17[v21];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = (void *)((char *)v22 + v8[10]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (void *)((char *)v22 + v8[11]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  *int v22 = 0u;
  v22[1] = 0u;
  sub_191B28FA4((uint64_t)v6, v20, qword_1EB4496F8);
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  swift_bridgeObjectRelease();
  *uint64_t v24 = 0;
  v24[1] = 0;
  swift_bridgeObjectRelease();
  *uint64_t v25 = 0;
  v25[1] = 0;
  v19(v6, 1, 1, v18);
  uint64_t v26 = (uint64_t)v15 + v8[8];
  v19((char *)v26, 1, 1, v18);
  uint64_t v27 = (char *)v15 + v8[9];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  uint64_t v28 = (void *)((char *)v15 + v8[10]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (void *)((char *)v15 + v8[11]);
  void *v29 = 0;
  v29[1] = 0;
  _OWORD *v15 = 0u;
  v15[1] = 0u;
  uint64_t v41 = v15;
  sub_191B28FA4((uint64_t)v6, v26, qword_1EB4496F8);
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  swift_bridgeObjectRelease();
  *uint64_t v28 = 0;
  v28[1] = 0;
  swift_bridgeObjectRelease();
  void *v29 = 0;
  v29[1] = 0;
  uint64_t v30 = v42;
  sub_191B85134((uint64_t)v48, v42, type metadata accessor for ControlTemplateButton.Option);
  uint64_t v31 = (uint64_t)v15;
  uint64_t v32 = v43;
  sub_191B85134(v31, v43, type metadata accessor for ControlTemplateButton.Option);
  uint64_t v33 = sub_191CF3078();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v35 = (uint64_t)v44;
  v34(v44, 1, 1, v33);
  uint64_t v37 = (uint64_t)v45;
  uint64_t v36 = (int *)v46;
  uint64_t v38 = (uint64_t)&v45[*(int *)(v46 + 36)];
  v34((char *)v38, 1, 1, v33);
  int v39 = (void *)(v37 + v36[12]);
  *int v39 = 0;
  v39[1] = 0;
  sub_191B88724(v30, v37, type metadata accessor for ControlTemplateButton.Option);
  sub_191B88724(v32, v37 + v36[7], type metadata accessor for ControlTemplateButton.Option);
  *(void *)(v37 + v36[8]) = 0;
  sub_191B28FA4(v35, v38, (uint64_t *)&unk_1EB44BBA8);
  *(unsigned char *)(v37 + v36[10]) = 0;
  *(unsigned char *)(v37 + v36[11]) = 1;
  swift_bridgeObjectRelease();
  *int v39 = 0;
  v39[1] = 0;
  *(unsigned char *)(v37 + v36[13]) = 0;
  sub_191B88724(v37, v47, type metadata accessor for ControlTemplateButton);
  sub_191B8508C((uint64_t)v41, type metadata accessor for ControlTemplateButton.Option);
  return sub_191B8508C((uint64_t)v48, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.Option.init(title:subtitle:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v20 = (uint64_t)a9 + v19[6];
  uint64_t v21 = sub_191CF4868();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  int v22 = (char *)a9 + v19[7];
  *(void *)int v22 = 0;
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  uint64_t v23 = (void *)((char *)a9 + v19[8]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = (void *)((char *)a9 + v19[9]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_191B28FA4(a5, v20, qword_1EB4496F8);
  *(void *)int v22 = a6;
  *((void *)v22 + 1) = a7;
  v22[16] = a8 & 1;
  swift_bridgeObjectRelease();
  *uint64_t v23 = a10;
  v23[1] = a11;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v24 = a12;
  v24[1] = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplateButton.Option(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B210);
}

uint64_t ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v15 = *a3;
  uint64_t v16 = (int *)type metadata accessor for ControlTemplateButton(0);
  uint64_t v17 = a9 + v16[7];
  uint64_t v18 = sub_191CF3078();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (void *)(a9 + v16[10]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  sub_191B88724(a1, a9, type metadata accessor for ControlTemplateButton.Option);
  sub_191B88724(a2, a9 + v16[5], type metadata accessor for ControlTemplateButton.Option);
  *(void *)(a9 + v16[6]) = v15;
  sub_191B28FA4(a4, v17, (uint64_t *)&unk_1EB44BBA8);
  *(unsigned char *)(a9 + v16[8]) = a5;
  *(unsigned char *)(a9 + v16[9]) = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v19 = a7;
  v19[1] = a8;
  *(unsigned char *)(a9 + v16[11]) = a10;
  return result;
}

uint64_t type metadata accessor for ControlTemplateButton(uint64_t a1)
{
  return sub_191B4ED44(a1, (uint64_t *)&unk_1EB44B238);
}

uint64_t static ControlTemplateButton.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E92E19F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplateButton(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E19D0);
  swift_beginAccess();
  return sub_191B85134(v3, a1, type metadata accessor for ControlTemplateButton);
}

uint64_t static ControlTemplateButton.empty.setter(uint64_t a1)
{
  if (qword_1E92E19F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ControlTemplateButton(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92E19D0);
  swift_beginAccess();
  sub_191B819B8(a1, v3);
  swift_endAccess();
  return sub_191B8508C(a1, type metadata accessor for ControlTemplateButton);
}

uint64_t sub_191B819B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplateButton.empty.modify())()
{
  if (qword_1E92E19F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for ControlTemplateButton(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92E19D0);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlTemplateButton.Option.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplateButton.Option(0);
  return sub_191B01614(v1 + *(int *)(v3 + 24), a1, qword_1EB4496F8);
}

uint64_t ControlTemplateButton.Option.icon.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplateButton.Option(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 24), qword_1EB4496F8);
}

uint64_t (*ControlTemplateButton.Option.icon.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.tint.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 28));
}

uint64_t ControlTemplateButton.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = v3 + *(int *)(result + 28);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplateButton.Option.tint.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.status.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.status.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.actionHint.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.actionHint.modify())()
{
  return nullsub_1;
}

uint64_t sub_191B81EEC()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 1953393012;
      break;
    case 4:
      uint64_t result = 0x737574617473;
      break;
    case 5:
      uint64_t result = 0x69486E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_191B81FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B8813C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B81FC8(uint64_t a1)
{
  unint64_t v2 = sub_191B85038();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B82004(uint64_t a1)
{
  unint64_t v2 = sub_191B85038();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplateButton.Option.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92E2360);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B85038();
  sub_191CF6528();
  LOBYTE(v14) = 0;
  sub_191CF61E8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_191CF61E8();
    uint64_t v9 = type metadata accessor for ControlTemplateButton.Option(0);
    LOBYTE(v14) = 2;
    sub_191CF4868();
    sub_191B850EC(&qword_1E92E2460, MEMORY[0x1E4F3DE60]);
    sub_191CF6208();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 28));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 3;
    sub_191B5A5B0();
    sub_191CF6208();
    LOBYTE(v14) = 4;
    sub_191CF61E8();
    LOBYTE(v14) = 5;
    sub_191CF61E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateButton.Option.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v3 - 8);
  int v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2240);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  uint64_t v11 = (uint64_t)v10 + v8[8];
  uint64_t v12 = sub_191CF4868();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v38 = v11;
  v13(v11, 1, 1, v12);
  long long v14 = (char *)v10 + v8[9];
  *(void *)long long v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  char v15 = (uint64_t *)((char *)v10 + v8[10]);
  uint64_t *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v8[11];
  uint64_t v43 = a1;
  uint64_t v44 = v10;
  uint64_t v17 = (uint64_t *)((char *)v10 + v16);
  uint64_t *v17 = 0;
  v17[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B85038();
  uint64_t v42 = v6;
  uint64_t v18 = v45;
  sub_191CF6508();
  if (v18)
  {
    uint64_t v24 = v44;
  }
  else
  {
    uint64_t v36 = v15;
    long long v45 = v14;
    uint64_t v20 = v39;
    uint64_t v19 = (uint64_t)v40;
    LOBYTE(v46) = 0;
    uint64_t v21 = v41;
    uint64_t v22 = sub_191CF60E8();
    uint64_t v24 = v44;
    uint64_t *v44 = v22;
    v24[1] = v25;
    LOBYTE(v46) = 1;
    v24[2] = sub_191CF60E8();
    v24[3] = v26;
    LOBYTE(v46) = 2;
    sub_191B850EC(&qword_1E92E2178, MEMORY[0x1E4F3DE60]);
    sub_191CF6108();
    sub_191B28FA4(v19, v38, qword_1EB4496F8);
    char v48 = 3;
    sub_191B5A6AC();
    sub_191CF6108();
    char v27 = v47;
    uint64_t v28 = v45;
    *long long v45 = v46;
    *((unsigned char *)v28 + 16) = v27;
    LOBYTE(v46) = 4;
    uint64_t v29 = sub_191CF60E8();
    uint64_t v31 = v30;
    uint64_t v32 = v36;
    swift_bridgeObjectRelease();
    uint64_t *v32 = v29;
    v32[1] = v31;
    LOBYTE(v46) = 5;
    uint64_t v33 = sub_191CF60E8();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v42, v21);
    swift_bridgeObjectRelease();
    uint64_t *v17 = v33;
    v17[1] = v35;
    sub_191B85134((uint64_t)v24, v37, type metadata accessor for ControlTemplateButton.Option);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return sub_191B8508C((uint64_t)v24, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t sub_191B82754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateButton.Option.init(from:)(a1, a2);
}

uint64_t sub_191B8276C(void *a1)
{
  return ControlTemplateButton.Option.encode(to:)(a1);
}

uint64_t ControlTemplateButton.inactive.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191B85134(v1, a1, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.inactive.setter(uint64_t a1)
{
  return sub_191B8519C(a1, v1);
}

uint64_t (*ControlTemplateButton.inactive.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.active.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_191B85134(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.active.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 20);

  return sub_191B8519C(a1, v3);
}

uint64_t (*ControlTemplateButton.active.modify())()
{
  return nullsub_1;
}

id ControlTemplateButton.action.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 24));
  *a1 = v3;

  return v3;
}

void ControlTemplateButton.action.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for ControlTemplateButton(0) + 24);

  *(void *)(v1 + v3) = v2;
}

uint64_t (*ControlTemplateButton.action.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_191B01614(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1EB44BBA8);
}

uint64_t ControlTemplateButton.associatedURL.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_191B28FA4(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1EB44BBA8);
}

uint64_t (*ControlTemplateButton.associatedURL.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.privacySensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 32));
}

uint64_t ControlTemplateButton.privacySensitive.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateButton(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.privacySensitive.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.disabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 36));
}

uint64_t ControlTemplateButton.disabled.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateButton(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.disabled.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.accessibilityIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.accessibilityIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.rasterizedImagesAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 44));
}

uint64_t ControlTemplateButton.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t result = type metadata accessor for ControlTemplateButton(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.rasterizedImagesAllowed.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.asPlaceholder()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v2 - 8);
  long long v59 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v58 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v49 - v10);
  if (qword_1E92E0F38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v56 = qword_1E92E0F20;
  uint64_t v57 = qword_1E92E0F28[0];
  uint64_t v12 = qword_1E92E0F50;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = qword_1E92E0F40;
  uint64_t v55 = qword_1E92E0F40;
  uint64_t v61 = *(void *)algn_1E92E0F48;
  sub_191B01614(v1 + v7[6], (uint64_t)v6, qword_1EB4496F8);
  uint64_t v14 = v7[6];
  char v15 = (uint64_t *)(v1 + v7[7]);
  uint64_t v16 = v15[1];
  uint64_t v50 = *v15;
  uint64_t v51 = v16;
  LODWORD(v52) = *((unsigned __int8 *)v15 + 16);
  uint64_t v17 = (uint64_t)v11 + v14;
  uint64_t v18 = sub_191CF4868();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v54 = v19 + 56;
  v53(v17, 1, 1, v18);
  uint64_t v20 = (uint64_t)v6;
  uint64_t v21 = (char *)v11 + v7[7];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v22 = (uint64_t *)((char *)v11 + v7[8]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (uint64_t *)((char *)v11 + v7[9]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = v57;
  *uint64_t v11 = v56;
  v11[1] = v24;
  uint64_t v25 = v61;
  v11[2] = v13;
  v11[3] = v25;
  swift_bridgeObjectRetain();
  uint64_t v49 = v20;
  sub_191B28FA4(v20, v17, qword_1EB4496F8);
  uint64_t v26 = v51;
  *(void *)uint64_t v21 = v50;
  *((void *)v21 + 1) = v26;
  v21[16] = v52;
  swift_bridgeObjectRelease();
  *uint64_t v22 = 0;
  v22[1] = 0;
  swift_bridgeObjectRelease();
  char v27 = (int *)type metadata accessor for ControlTemplateButton(0);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v28 = v1 + v27[5];
  uint64_t v29 = qword_1E92E0F28[0];
  uint64_t v51 = qword_1E92E0F20;
  sub_191B01614(v28 + v7[6], v20, qword_1EB4496F8);
  uint64_t v30 = v7[6];
  uint64_t v31 = (uint64_t *)(v28 + v7[7]);
  uint64_t v52 = *v31;
  uint64_t v56 = v31[1];
  LODWORD(v57) = *((unsigned __int8 *)v31 + 16);
  uint64_t v32 = v58;
  uint64_t v33 = (uint64_t)v58 + v30;
  v53((uint64_t)v58 + v30, 1, 1, v18);
  uint64_t v34 = (char *)v32 + v7[7];
  *(void *)uint64_t v34 = 0;
  *((void *)v34 + 1) = 0;
  v34[16] = 1;
  uint64_t v35 = (uint64_t *)((char *)v32 + v7[8]);
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v36 = (uint64_t *)((char *)v32 + v7[9]);
  *uint64_t v36 = 0;
  v36[1] = 0;
  uint64_t *v32 = v51;
  v32[1] = v29;
  uint64_t v37 = v61;
  v32[2] = v55;
  v32[3] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191B28FA4(v49, v33, qword_1EB4496F8);
  uint64_t v38 = v56;
  *(void *)uint64_t v34 = v52;
  *((void *)v34 + 1) = v38;
  v34[16] = v57;
  swift_bridgeObjectRelease();
  *uint64_t v35 = 0;
  v35[1] = 0;
  swift_bridgeObjectRelease();
  *uint64_t v36 = 0;
  v36[1] = 0;
  uint64_t v39 = *(void **)(v1 + v27[6]);
  uint64_t v40 = sub_191CF3078();
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  uint64_t v42 = (uint64_t)v59;
  v41(v59, 1, 1, v40);
  uint64_t v43 = v27[7];
  LODWORD(v56) = *(unsigned __int8 *)(v1 + v27[8]);
  LODWORD(v57) = *(unsigned __int8 *)(v1 + v27[9]);
  LODWORD(v61) = *(unsigned __int8 *)(v1 + v27[11]);
  uint64_t v44 = v60;
  uint64_t v45 = v60 + v43;
  v41((char *)(v60 + v43), 1, 1, v40);
  long long v46 = (void *)(v44 + v27[10]);
  *long long v46 = 0;
  v46[1] = 0;
  sub_191B88724((uint64_t)v11, v44, type metadata accessor for ControlTemplateButton.Option);
  sub_191B88724((uint64_t)v32, v44 + v27[5], type metadata accessor for ControlTemplateButton.Option);
  *(void *)(v44 + v27[6]) = v39;
  id v47 = v39;
  sub_191B28FA4(v42, v45, (uint64_t *)&unk_1EB44BBA8);
  *(unsigned char *)(v44 + v27[8]) = v56;
  *(unsigned char *)(v44 + v27[9]) = v57;
  uint64_t result = swift_bridgeObjectRelease();
  *long long v46 = 0;
  v46[1] = 0;
  *(unsigned char *)(v44 + v27[11]) = v61;
  return result;
}

unint64_t sub_191B83238(char a1)
{
  unint64_t result = 0x6576697463616E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657669746361;
      break;
    case 2:
      unint64_t result = 0x6E6F69746361;
      break;
    case 3:
      unint64_t result = 0x746169636F737361;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x64656C6261736964;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_191B8333C()
{
  return sub_191B83238(*v0);
}

uint64_t sub_191B83344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B8839C(a1, a2);
  *a3 = result;
  return result;
}

void sub_191B8336C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_191B83378(uint64_t a1)
{
  unint64_t v2 = sub_191B85200();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B833B4(uint64_t a1)
{
  unint64_t v2 = sub_191B85200();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ControlTemplateButton.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2358);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B85200();
  sub_191CF6528();
  LOBYTE(v12) = 0;
  type metadata accessor for ControlTemplateButton.Option(0);
  sub_191B850EC(&qword_1E92E2340, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton.Option);
  sub_191CF6278();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ControlTemplateButton(0);
    LOBYTE(v12) = 1;
    sub_191CF6278();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    sub_191B85254();
    sub_191CF6278();
    LOBYTE(v12) = 3;
    sub_191CF3078();
    sub_191B850EC(&qword_1EB44BAC8, MEMORY[0x1E4F276F0]);
    sub_191CF6208();
    LOBYTE(v12) = 4;
    sub_191CF6228();
    LOBYTE(v12) = 5;
    sub_191CF6228();
    LOBYTE(v12) = 6;
    sub_191CF61E8();
    LOBYTE(v12) = 7;
    sub_191CF6228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateButton.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v6 = MEMORY[0x1F4188790](v37);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)&v33 - v9;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E2238);
  uint64_t v35 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for ControlTemplateButton(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 28)];
  uint64_t v17 = sub_191CF3078();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v42 = v16;
  v18(v16, 1, 1, v17);
  uint64_t v19 = (uint64_t)v15;
  uint64_t v20 = &v15[v12[10]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v40 = a1;
  uint64_t v41 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B85200();
  uint64_t v38 = v11;
  uint64_t v21 = v43;
  sub_191CF6508();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    sub_191B01770(v42, (uint64_t *)&unk_1EB44BBA8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v17;
    uint64_t v43 = v5;
    uint64_t v22 = v35;
    LOBYTE(v45) = 0;
    sub_191B850EC(&qword_1E92E21A0, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton.Option);
    uint64_t v23 = (uint64_t)v36;
    sub_191CF6178();
    sub_191B88724(v23, v19, type metadata accessor for ControlTemplateButton.Option);
    LOBYTE(v45) = 1;
    sub_191CF6178();
    uint64_t v24 = v12;
    sub_191B88724((uint64_t)v8, v19 + v12[5], type metadata accessor for ControlTemplateButton.Option);
    char v44 = 2;
    sub_191B852A8();
    sub_191CF6178();
    *(void *)(v19 + v12[6]) = v45;
    LOBYTE(v45) = 3;
    sub_191B850EC(&qword_1EB448D58, MEMORY[0x1E4F276F0]);
    uint64_t v25 = (uint64_t)v43;
    sub_191CF6108();
    uint64_t v26 = (uint64_t)v40;
    sub_191B28FA4(v25, v42, (uint64_t *)&unk_1EB44BBA8);
    LOBYTE(v45) = 4;
    char v27 = sub_191CF6128();
    uint64_t v28 = (uint64_t *)v41;
    *(unsigned char *)(v19 + v24[8]) = v27 & 1;
    LOBYTE(v45) = 5;
    *(unsigned char *)(v19 + v24[9]) = sub_191CF6128() & 1;
    LOBYTE(v45) = 6;
    uint64_t v29 = sub_191CF60E8();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *uint64_t v28 = v29;
    v28[1] = v31;
    LOBYTE(v45) = 7;
    LOBYTE(v29) = sub_191CF6128();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v39);
    *(unsigned char *)(v19 + v24[11]) = v29 & 1;
    sub_191B85134(v19, v34, type metadata accessor for ControlTemplateButton);
    __swift_destroy_boxed_opaque_existential_1(v26);
    return sub_191B8508C(v19, type metadata accessor for ControlTemplateButton);
  }
}

uint64_t sub_191B83DE4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_191B83DF0(void (*a1)(char *), uint64_t a2)
{
  return ControlTemplateButton.validateIcon(_:)(a1, a2);
}

uint64_t ControlTemplateButton.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v23 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(int *)(type metadata accessor for ControlTemplateButton(0) + 20);
  uint64_t v24 = v2;
  uint64_t v16 = v2 + v15;
  uint64_t v17 = type metadata accessor for ControlTemplateButton.Option(0);
  sub_191B01614(v16 + *(int *)(v17 + 24), (uint64_t)v8, qword_1EB4496F8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v18(v8, 1, v9) == 1)
  {
    sub_191B01770((uint64_t)v8, qword_1EB4496F8);
  }
  else
  {
    uint64_t v22 = v6;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
    uint64_t v19 = v26;
    v25(v14);
    if (v19) {
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    uint64_t v6 = v22;
  }
  sub_191B01614(v24 + *(int *)(v17 + 24), (uint64_t)v6, qword_1EB4496F8);
  if (v18(v6, 1, v9) == 1) {
    return sub_191B01770((uint64_t)v6, qword_1EB4496F8);
  }
  uint64_t v14 = v23;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v6, v9);
  v25(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

uint64_t sub_191B840E4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_191B840F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateButton.init(from:)(a1, a2);
}

uint64_t sub_191B8410C(void *a1)
{
  return ControlTemplateButton.encode(to:)(a1);
}

uint64_t ControlTemplateButton.debugDescription.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_191CF5D88();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v4 = type metadata accessor for ControlTemplateButton(0);
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  uint64_t v5 = type metadata accessor for ControlTemplateButton.Option(0);
  sub_191B01614(v0 + *(int *)(v5 + 24), (uint64_t)v3, qword_1EB4496F8);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_191B01770((uint64_t)v3, qword_1EB4496F8);
  }
  else
  {
    sub_191CF47B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  v9[1] = *(void *)(v0 + *(int *)(v4 + 24));
  sub_191CF5F38();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  swift_bridgeObjectRetain();
  sub_191CF53B8();
  swift_bridgeObjectRelease();
  sub_191CF53B8();
  return v10;
}

uint64_t _s9WidgetKit21ControlTemplateButtonV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF3078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v49[-v16];
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v49[-v18];
  if ((_s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v55 = v10;
  uint64_t v20 = (int *)type metadata accessor for ControlTemplateButton(0);
  if ((_s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0((void *)((char *)a1 + v20[5]), (void *)((char *)a2 + v20[5])) & 1) == 0)goto LABEL_17; {
  uint64_t v53 = a1;
  }
  uint64_t v54 = v5;
  uint64_t v52 = v4;
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void **)((char *)a1 + v21);
  uint64_t v23 = *(void **)((char *)a2 + v21);
  if (v22)
  {
    if (!v23) {
      goto LABEL_17;
    }
    sub_191B886E4();
    id v24 = v22;
    id v25 = v23;
    id v26 = v24;
    id v27 = v25;
    id v28 = v26;
    uint64_t v51 = a2;
    id v29 = v28;
    id v30 = v27;
    LOBYTE(v26) = sub_191CF5B58();

    a2 = v51;
    if ((v26 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else if (v23)
  {
    goto LABEL_17;
  }
  sub_191B01614((uint64_t)v53 + v20[7], (uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
  uint64_t v31 = v20;
  uint64_t v32 = v20[7];
  uint64_t v51 = a2;
  sub_191B01614((uint64_t)a2 + v32, (uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
  uint64_t v33 = (uint64_t)v55;
  uint64_t v34 = (uint64_t)&v55[*(int *)(v8 + 48)];
  sub_191B01614((uint64_t)v19, (uint64_t)v55, (uint64_t *)&unk_1EB44BBA8);
  sub_191B01614((uint64_t)v17, v34, (uint64_t *)&unk_1EB44BBA8);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  uint64_t v36 = v52;
  if (v35(v33, 1, v52) == 1)
  {
    sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
    if (v35(v34, 1, v36) == 1)
    {
      sub_191B01770(v33, (uint64_t *)&unk_1EB44BBA8);
      goto LABEL_15;
    }
LABEL_13:
    sub_191B01770(v33, &qword_1E92E19C0);
    goto LABEL_17;
  }
  sub_191B01614(v33, (uint64_t)v14, (uint64_t *)&unk_1EB44BBA8);
  if (v35(v34, 1, v36) == 1)
  {
    sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
    sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v14, v36);
    goto LABEL_13;
  }
  uint64_t v37 = v54;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 32))(v7, v34, v36);
  sub_191B850EC(&qword_1E92E3618, MEMORY[0x1E4F276F0]);
  int v50 = sub_191CF52F8();
  uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
  v38(v7, v36);
  sub_191B01770((uint64_t)v17, (uint64_t *)&unk_1EB44BBA8);
  sub_191B01770((uint64_t)v19, (uint64_t *)&unk_1EB44BBA8);
  v38(v14, v36);
  sub_191B01770(v33, (uint64_t *)&unk_1EB44BBA8);
  if ((v50 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_15:
  uint64_t v39 = v51;
  if (*((unsigned __int8 *)v53 + v31[8]) != *((unsigned __int8 *)v51 + v31[8])) {
    goto LABEL_17;
  }
  uint64_t v40 = v31;
  if (*((unsigned __int8 *)v53 + v31[9]) != *((unsigned __int8 *)v51 + v31[9])) {
    goto LABEL_17;
  }
  uint64_t v43 = v31[10];
  char v44 = (void *)((char *)v53 + v43);
  uint64_t v45 = *(void *)((char *)v53 + v43 + 8);
  long long v46 = (void *)((char *)v51 + v43);
  uint64_t v47 = v46[1];
  if (!v45)
  {
    if (!v47)
    {
LABEL_26:
      char v41 = *((unsigned char *)v53 + v40[11]) ^ *((unsigned char *)v39 + v40[11]) ^ 1;
      return v41 & 1;
    }
LABEL_17:
    char v41 = 0;
    return v41 & 1;
  }
  if (!v47) {
    goto LABEL_17;
  }
  if (*v44 == *v46 && v45 == v47) {
    goto LABEL_26;
  }
  char v48 = sub_191CF6348();
  uint64_t v40 = v31;
  char v41 = 0;
  if (v48) {
    goto LABEL_26;
  }
  return v41 & 1;
}

uint64_t _s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_191CF4868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E19C8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v60 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v60 - v18;
  uint64_t v20 = a1;
  uint64_t v21 = a1[1];
  uint64_t v22 = a2[1];
  if (!v21)
  {
    uint64_t v23 = a2;
    if (v22) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v22) {
    return 0;
  }
  uint64_t v23 = a2;
  if (*v20 == *a2 && v21 == v22
    || (v24 = v20, v25 = sub_191CF6348(), v20 = v24, v26 = v25, uint64_t result = 0, (v26 & 1) != 0))
  {
LABEL_8:
    uint64_t v28 = v20[3];
    uint64_t v29 = v23[3];
    if (v28)
    {
      if (!v29) {
        return 0;
      }
      uint64_t v30 = v20[2];
      uint64_t v63 = v23;
      if (v30 != v23[2] || v28 != v29)
      {
        uint64_t v31 = v20;
        char v32 = sub_191CF6348();
        uint64_t v20 = v31;
        char v33 = v32;
        uint64_t result = 0;
        if ((v33 & 1) == 0) {
          return result;
        }
      }
    }
    else
    {
      uint64_t v63 = v23;
      if (v29) {
        return 0;
      }
    }
    uint64_t v34 = v20;
    uint64_t v35 = type metadata accessor for ControlTemplateButton.Option(0);
    uint64_t v36 = *(int *)(v35 + 24);
    uint64_t v62 = v34;
    sub_191B01614((uint64_t)v34 + v36, (uint64_t)v19, qword_1EB4496F8);
    uint64_t v61 = v35;
    sub_191B01614((uint64_t)v63 + *(int *)(v35 + 24), (uint64_t)v17, qword_1EB4496F8);
    uint64_t v37 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_191B01614((uint64_t)v19, (uint64_t)v10, qword_1EB4496F8);
    uint64_t v38 = v37;
    sub_191B01614((uint64_t)v17, v37, qword_1EB4496F8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v39((uint64_t)v10, 1, v4) == 1)
    {
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      if (v39(v38, 1, v4) == 1)
      {
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
LABEL_24:
        uint64_t v43 = v62;
        uint64_t v44 = v61;
        uint64_t v45 = *(int *)(v61 + 28);
        long long v46 = v63;
        if (*((unsigned char *)v62 + v45 + 16))
        {
          if (!*((unsigned char *)v63 + v45 + 16)) {
            return 0;
          }
        }
        else
        {
          if (*((unsigned char *)v63 + v45 + 16)) {
            return 0;
          }
          char v47 = sub_191CF4DD8();
          uint64_t v43 = v62;
          if ((v47 & 1) == 0) {
            return 0;
          }
        }
        uint64_t v48 = *(int *)(v44 + 32);
        uint64_t v49 = (void *)((char *)v43 + v48);
        uint64_t v50 = *(void *)((char *)v43 + v48 + 8);
        uint64_t v51 = (void *)((char *)v46 + v48);
        uint64_t v52 = v51[1];
        if (v50)
        {
          if (!v52) {
            return 0;
          }
          if (*v49 != *v51 || v50 != v52)
          {
            char v53 = sub_191CF6348();
            uint64_t v43 = v62;
            char v54 = v53;
            uint64_t result = 0;
            if ((v54 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v52)
        {
          return 0;
        }
        uint64_t v55 = *(int *)(v44 + 36);
        uint64_t v56 = (void *)((char *)v43 + v55);
        uint64_t v57 = *(void *)((char *)v43 + v55 + 8);
        uint64_t v58 = (void *)((char *)v46 + v55);
        uint64_t v59 = v58[1];
        if (v57)
        {
          if (v59 && (*v56 == *v58 && v57 == v59 || (sub_191CF6348() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v59)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      uint64_t v60 = v5;
      sub_191B01614((uint64_t)v10, (uint64_t)v14, qword_1EB4496F8);
      if (v39(v38, 1, v4) != 1)
      {
        uint64_t v40 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v7, v38, v4);
        sub_191B850EC(&qword_1E92E3620, MEMORY[0x1E4F3DE60]);
        char v41 = sub_191CF52F8();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v40 + 8);
        v42(v7, v4);
        sub_191B01770((uint64_t)v17, qword_1EB4496F8);
        sub_191B01770((uint64_t)v19, qword_1EB4496F8);
        v42(v14, v4);
        sub_191B01770((uint64_t)v10, qword_1EB4496F8);
        if ((v41 & 1) == 0) {
          return 0;
        }
        goto LABEL_24;
      }
      sub_191B01770((uint64_t)v17, qword_1EB4496F8);
      sub_191B01770((uint64_t)v19, qword_1EB4496F8);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v4);
    }
    sub_191B01770((uint64_t)v10, &qword_1E92E19C8);
    return 0;
  }
  return result;
}

unint64_t sub_191B85038()
{
  unint64_t result = qword_1E92E27B0;
  if (!qword_1E92E27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27B0);
  }
  return result;
}

uint64_t sub_191B8508C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191B850EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191B85134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191B8519C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_191B85200()
{
  unint64_t result = qword_1E92E2798;
  if (!qword_1E92E2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2798);
  }
  return result;
}

unint64_t sub_191B85254()
{
  unint64_t result = qword_1E92E2468;
  if (!qword_1E92E2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2468);
  }
  return result;
}

unint64_t sub_191B852A8()
{
  unint64_t result = qword_1E92E2188;
  if (!qword_1E92E2188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E2188);
  }
  return result;
}

uint64_t sub_191B852FC(void *a1)
{
  a1[1] = sub_191B850EC(&qword_1E92E27D8, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
  a1[2] = sub_191B850EC(&qword_1E92E27C8, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
  uint64_t result = sub_191B850EC(&qword_1E92E27D0, (void (*)(uint64_t))type metadata accessor for ControlTemplateButton);
  a1[3] = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ControlTemplateButton(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
    uint64_t v9 = v8[6];
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_191CF4868();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v64 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = v12;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v11;
    uint64_t v17 = v8[7];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    uint64_t v20 = v8[8];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v8[9];
    char v25 = (void *)((char *)v4 + v24);
    char v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *char v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[5];
    uint64_t v29 = (void *)((char *)v4 + v28);
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)((char *)a2 + v28 + 8);
    void *v29 = *(void *)((char *)a2 + v28);
    v29[1] = v31;
    uint64_t v32 = *(void *)((char *)a2 + v28 + 24);
    void v29[2] = *(void *)((char *)a2 + v28 + 16);
    v29[3] = v32;
    uint64_t v33 = v8[6];
    __dsta = (char *)v29 + v33;
    uint64_t v34 = &v30[v33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64(v34, 1, v16))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dsta, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(__dsta, v34, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v16);
    }
    uint64_t v36 = v8[7];
    uint64_t v37 = (char *)v29 + v36;
    uint64_t v38 = &v30[v36];
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    uint64_t v39 = v8[8];
    uint64_t v40 = (void *)((char *)v29 + v39);
    char v41 = &v30[v39];
    uint64_t v42 = *((void *)v41 + 1);
    *uint64_t v40 = *(void *)v41;
    v40[1] = v42;
    uint64_t v43 = v8[9];
    uint64_t v44 = (void *)((char *)v29 + v43);
    uint64_t v45 = &v30[v43];
    uint64_t v46 = *((void *)v45 + 1);
    void *v44 = *(void *)v45;
    v44[1] = v46;
    uint64_t v47 = a3[6];
    uint64_t v48 = a3[7];
    uint64_t v49 = *(void **)((char *)a2 + v47);
    *(void *)((char *)v4 + v47) = v49;
    uint64_t v67 = (char *)v4 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = sub_191CF3078();
    uint64_t v52 = *(void *)(v51 - 8);
    char v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v54 = v49;
    if (v53(v50, 1, v51))
    {
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
      memcpy(v67, v50, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v67, v50, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v67, 0, 1, v51);
    }
    uint64_t v56 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v56) = *((unsigned char *)a2 + v56);
    uint64_t v57 = a3[10];
    uint64_t v58 = a3[11];
    uint64_t v59 = (void *)((char *)v4 + v57);
    uint64_t v60 = (void *)((char *)a2 + v57);
    uint64_t v61 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v61;
    *((unsigned char *)v4 + v58) = *((unsigned char *)a2 + v58);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateButton(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = sub_191CF4868();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + *(int *)(v4 + 24);
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = sub_191CF3078();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplateButton(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = v12;
  uint64_t v60 = v11;
  uint64_t v61 = v10;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = v7[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[5];
  char v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25 + 8);
  *char v26 = *(void *)((char *)a2 + v25);
  v26[1] = v28;
  uint64_t v29 = *(void *)((char *)a2 + v25 + 24);
  _OWORD v26[2] = *(void *)((char *)a2 + v25 + 16);
  v26[3] = v29;
  uint64_t v30 = v7[6];
  __dsta = (char *)v26 + v30;
  uint64_t v31 = &v27[v30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v64(v31, 1, v61))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(__dsta, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dsta, v31, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v61);
  }
  uint64_t v33 = v7[7];
  uint64_t v34 = (char *)v26 + v33;
  uint64_t v35 = &v27[v33];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  uint64_t v36 = v7[8];
  uint64_t v37 = (void *)((char *)v26 + v36);
  uint64_t v38 = &v27[v36];
  uint64_t v39 = *((void *)v38 + 1);
  *uint64_t v37 = *(void *)v38;
  v37[1] = v39;
  uint64_t v40 = v7[9];
  char v41 = (void *)((char *)v26 + v40);
  uint64_t v42 = &v27[v40];
  uint64_t v43 = *((void *)v42 + 1);
  *char v41 = *(void *)v42;
  v41[1] = v43;
  uint64_t v44 = a3[6];
  uint64_t v45 = a3[7];
  uint64_t v46 = *(void **)((char *)a2 + v44);
  *(void *)((char *)a1 + v44) = v46;
  uint64_t v65 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_191CF3078();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v51 = v46;
  if (v50(v47, 1, v48))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v65, v47, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v65, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v65, 0, 1, v48);
  }
  uint64_t v53 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v53) = *((unsigned char *)a2 + v53);
  uint64_t v54 = a3[10];
  uint64_t v55 = a3[11];
  uint64_t v56 = (void *)((char *)a1 + v54);
  uint64_t v57 = (void *)((char *)a2 + v54);
  uint64_t v58 = v57[1];
  *uint64_t v56 = *v57;
  v56[1] = v58;
  *((unsigned char *)a1 + v55) = *((unsigned char *)a2 + v55);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplateButton(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  uint64_t v62 = v11;
  int v13 = v11(v8, 1, v9);
  uint64_t v61 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)uint64_t v16 = v18;
  uint64_t v19 = v5[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[5];
  char v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)char v26 = *(void *)((char *)a2 + v25);
  *((void *)v26 + 1) = *(void *)((char *)a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v26 + 2) = *((void *)v27 + 2);
  *((void *)v26 + 3) = *((void *)v27 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v5[6];
  uint64_t v29 = &v26[v28];
  uint64_t v30 = &v27[v28];
  int v31 = v62(&v26[v28], 1, v9);
  int v32 = v62(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v29, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v9);
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v29, v30, v9);
LABEL_13:
  uint64_t v34 = v5[7];
  uint64_t v35 = &v26[v34];
  uint64_t v36 = &v27[v34];
  long long v37 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)uint64_t v35 = v37;
  uint64_t v38 = v5[8];
  uint64_t v39 = &v26[v38];
  uint64_t v40 = &v27[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v5[9];
  uint64_t v42 = &v26[v41];
  uint64_t v43 = &v27[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[6];
  uint64_t v45 = *(void **)((char *)a1 + v44);
  uint64_t v46 = *(void **)((char *)a2 + v44);
  *(void *)((char *)a1 + v44) = v46;
  id v47 = v46;

  uint64_t v48 = a3[7];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = sub_191CF3078();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v49, v50, v51);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v51);
    goto LABEL_18;
  }
  if (v55)
  {
LABEL_18:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_19:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v57 = a3[10];
  uint64_t v58 = (void *)((char *)a1 + v57);
  uint64_t v59 = (void *)((char *)a2 + v57);
  *uint64_t v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v37(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = v7[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
  *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
  uint64_t v38 = a3;
  uint64_t v17 = a3[5];
  long long v18 = (_OWORD *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  long long v20 = *(_OWORD *)((char *)a2 + v17 + 16);
  *long long v18 = *(_OWORD *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = v7[6];
  uint64_t v22 = (char *)v18 + v21;
  uint64_t v23 = &v19[v21];
  if (v37(&v19[v21], 1, v11))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  uint64_t v25 = v7[7];
  char v26 = (char *)v18 + v25;
  uint64_t v27 = &v19[v25];
  *(_OWORD *)char v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)((char *)v18 + v7[8]) = *(_OWORD *)&v19[v7[8]];
  *(_OWORD *)((char *)v18 + v7[9]) = *(_OWORD *)&v19[v7[9]];
  uint64_t v28 = v38[7];
  *(void *)((char *)a1 + v38[6]) = *(void *)((char *)a2 + v38[6]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_191CF3078();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  uint64_t v34 = v38[9];
  *((unsigned char *)a1 + v38[8]) = *((unsigned char *)a2 + v38[8]);
  *((unsigned char *)a1 + v34) = *((unsigned char *)a2 + v34);
  uint64_t v35 = v38[11];
  *(_OWORD *)((char *)a1 + v38[10]) = *(_OWORD *)((char *)a2 + v38[10]);
  *((unsigned char *)a1 + v35) = *((unsigned char *)a2 + v35);
  return a1;
}

void *assignWithTake for ControlTemplateButton(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  uint64_t v73 = v13;
  int v15 = v13(v10, 1, v11);
  uint64_t v72 = v12;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  long long v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  uint64_t v20 = v7[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = v7[9];
  char v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *char v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[5];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)((char *)a2 + v30 + 8);
  *(void *)uint64_t v31 = *(void *)((char *)a2 + v30);
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v32 + 3);
  *((void *)v31 + 2) = *((void *)v32 + 2);
  *((void *)v31 + 3) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = v7[6];
  uint64_t v36 = &v31[v35];
  long long v37 = &v32[v35];
  int v38 = v73(&v31[v35], 1, v11);
  int v39 = v73(v37, 1, v11);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v36, v37, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v36, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v36, v11);
LABEL_12:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v36, v37, v11);
LABEL_13:
  uint64_t v41 = v7[7];
  uint64_t v42 = &v31[v41];
  uint64_t v43 = &v32[v41];
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  v42[16] = v43[16];
  uint64_t v44 = v7[8];
  uint64_t v45 = &v31[v44];
  uint64_t v46 = &v32[v44];
  uint64_t v48 = *(void *)v46;
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)uint64_t v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v7[9];
  uint64_t v50 = &v31[v49];
  uint64_t v51 = &v32[v49];
  uint64_t v53 = *(void *)v51;
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = v53;
  *((void *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[6];
  int v55 = *(void **)((char *)a1 + v54);
  *(void *)((char *)a1 + v54) = *(void *)((char *)a2 + v54);

  uint64_t v56 = a3[7];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = sub_191CF3078();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 40))(v57, v58, v59);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v59);
    goto LABEL_18;
  }
  if (v63)
  {
LABEL_18:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    memcpy(v57, v58, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
LABEL_19:
  uint64_t v65 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v65) = *((unsigned char *)a2 + v65);
  uint64_t v66 = a3[10];
  uint64_t v67 = (void *)((char *)a1 + v66);
  long long v68 = (void *)((char *)a2 + v66);
  uint64_t v70 = *v68;
  uint64_t v69 = v68[1];
  *uint64_t v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B86CC4);
}

uint64_t sub_191B86CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B86E14);
}

uint64_t sub_191B86E14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ControlTemplateButton.Option(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BBA8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_191B86F44()
{
  type metadata accessor for ControlTemplateButton.Option(319);
  if (v0 <= 0x3F)
  {
    sub_191B5C208(319, (unint64_t *)&qword_1EB44C548, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplateButton.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    unint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_191CF4868();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    long long v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_OWORD *)long long v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    uint64_t v20 = (uint64_t *)((char *)v4 + v17);
    uint64_t v21 = (uint64_t *)((char *)a2 + v17);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = (uint64_t *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateButton.Option(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_191CF4868();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ControlTemplateButton.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  long long v18 = (void *)((char *)a1 + v15);
  uint64_t v19 = (void *)((char *)a2 + v15);
  uint64_t v20 = v19[1];
  *long long v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ControlTemplateButton.Option(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191CF4868();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateButton.Option(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191CF4868();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithTake for ControlTemplateButton.Option(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191CF4868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v21 = (void *)((char *)a1 + v18);
  uint64_t v22 = (void *)((char *)a2 + v18);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateButton.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191B87A54);
}

uint64_t sub_191B87A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191B87B28);
}

uint64_t sub_191B87B28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB4496F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191B87BD4()
{
  sub_191B5C208(319, &qword_1EB44B220, MEMORY[0x1E4F3DE60]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for WidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ControlTemplateButton.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B87DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateButton.CodingKeys()
{
  return &type metadata for ControlTemplateButton.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ControlTemplateButton.Option.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B87EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateButton.Option.CodingKeys()
{
  return &type metadata for ControlTemplateButton.Option.CodingKeys;
}

unint64_t sub_191B87F30()
{
  unint64_t result = qword_1E92E3908;
  if (!qword_1E92E3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3908);
  }
  return result;
}

unint64_t sub_191B87F88()
{
  unint64_t result = qword_1E92E3910;
  if (!qword_1E92E3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E3910);
  }
  return result;
}

unint64_t sub_191B87FE0()
{
  unint64_t result = qword_1E92E27A8;
  if (!qword_1E92E27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27A8);
  }
  return result;
}

unint64_t sub_191B88038()
{
  unint64_t result = qword_1E92E27A0;
  if (!qword_1E92E27A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27A0);
  }
  return result;
}

unint64_t sub_191B88090()
{
  unint64_t result = qword_1E92E27C0;
  if (!qword_1E92E27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27C0);
  }
  return result;
}

unint64_t sub_191B880E8()
{
  unint64_t result = qword_1E92E27B8;
  if (!qword_1E92E27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E27B8);
  }
  return result;
}

uint64_t sub_191B8813C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_191B8839C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6576697463616E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000191D0E330 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E350 || (sub_191CF6348() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000191D0E370)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_191CF6348();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_191B886E4()
{
  unint64_t result = qword_1EB44B940;
  if (!qword_1EB44B940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB44B940);
  }
  return result;
}

uint64_t sub_191B88724(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t WidgetRelevanceRequest.kind.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetRelevanceRequest.archiveFileHandle.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle);
}

id WidgetRelevanceRequest.__allocating_init(kind:archiveFileHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = (char *)objc_allocWithZone(v3);
  int v8 = &v7[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(void *)int v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id WidgetRelevanceRequest.init(kind:archiveFileHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = &v3[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(void *)unsigned int v4 = a1;
  *((void *)v4 + 1) = a2;
  *(void *)&v3[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for WidgetRelevanceRequest();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for WidgetRelevanceRequest()
{
  return self;
}

void sub_191B888BC(void *a1)
{
  int v3 = (void *)sub_191CF5318();
  unsigned int v4 = (void *)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle);
  id v6 = (id)sub_191CF5318();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
}

uint64_t static WidgetRelevanceRequest.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetRelevanceRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WidgetRelevanceRequest.init(coder:)(a1);
}

id WidgetRelevanceRequest.init(coder:)(void *a1)
{
  BOOL v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44B040);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_191CF8410;
  *(void *)(v4 + 32) = sub_191B016E0(0, (unint64_t *)&qword_1EB44BBA0);
  id v5 = v2;
  sub_191CF5AD8();
  swift_bridgeObjectRelease();
  if (v21)
  {
    int v6 = swift_dynamicCast();
    if (v6) {
      BOOL v7 = v17;
    }
    else {
      BOOL v7 = 0;
    }
    if (v6) {
      uint64_t v8 = v18;
    }
    else {
      uint64_t v8 = 0;
    }
  }
  else
  {
    sub_191B88CAC((uint64_t)v20);
    BOOL v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_191CF8410;
  *(void *)(v9 + 32) = sub_191B016E0(0, &qword_1EB44C380);
  sub_191CF5AD8();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_191B88CAC((uint64_t)v20);
    if (v8) {
      goto LABEL_17;
    }
    objc_super v10 = 0;
LABEL_19:

    goto LABEL_20;
  }
  if (swift_dynamicCast()) {
    objc_super v10 = v17;
  }
  else {
    objc_super v10 = 0;
  }
  if (!v8) {
    goto LABEL_19;
  }
  if (!v10)
  {
LABEL_17:
    swift_bridgeObjectRelease();

    objc_super v10 = v5;
LABEL_20:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v11 = v10;

  uint64_t v12 = (objc_class *)type metadata accessor for WidgetRelevanceRequest();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  int v14 = &v13[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(void *)int v14 = v7;
  *((void *)v14 + 1) = v8;
  *(void *)&v13[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = v11;
  v19.receiver = v13;
  v19.super_class = v12;
  id v15 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

uint64_t sub_191B88CAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB44BC90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id WidgetRelevanceRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void WidgetRelevanceRequest.init()()
{
}

id WidgetRelevanceRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetRelevanceRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for WidgetRelevanceRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WidgetRelevanceRequest);
}

uint64_t dispatch thunk of WidgetRelevanceRequest.__allocating_init(kind:archiveFileHandle:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetRelevanceRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of WidgetRelevanceRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t WidgetRelevances.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WidgetRelevances()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191B88EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

void *sub_191B88EE8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_191B88F24(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAction.Storage(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ControlAction.Storage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_191B88FFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_191B89014(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for WidgetRelevances.Storage()
{
  return __swift_instantiateGenericMetadata();
}

void sub_191B89050()
{
  uint64_t v0 = sub_191CF3318();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  sub_191CF3308();
  id v5 = (void *)sub_191CF32F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_1E92E39B0 = (uint64_t)v4;
}

uint64_t static WidgetRelevanceGroup.named(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

void static WidgetRelevanceGroup.ungrouped.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

double static WidgetRelevanceGroup.automatic.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_191CFA1E0;
  return result;
}

unint64_t destroy for WidgetRelevanceGroup(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s9WidgetKit20WidgetRelevanceGroupVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 2)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for WidgetRelevanceGroup(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_191B89278((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_191B89278(uint64_t a1)
{
  return a1;
}

void *assignWithTake for WidgetRelevanceGroup(void *a1, void *a2)
{
  if (a1[1] >= 2uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_191B89278((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceGroup(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceGroup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = a2 - 2147483646;
    *(void *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceGroup()
{
  return &type metadata for WidgetRelevanceGroup;
}

unint64_t destroy for WidgetRelevanceGroup.Storage(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9WidgetKit20WidgetRelevanceGroupV7StorageOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for WidgetRelevanceGroup.Storage(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetRelevanceGroup.Storage(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceGroup.Storage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceGroup.Storage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_191B89604(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_191B8961C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceGroup.Storage()
{
  return &type metadata for WidgetRelevanceGroup.Storage;
}

uint64_t EnvironmentValues.activityUpdateAvailability.getter()
{
  sub_191B4F638();

  return sub_191CF4068();
}

uint64_t EnvironmentValues.activityUpdateAvailability.setter()
{
  return sub_191CF4078();
}

uint64_t EnvironmentValues.isActivityUpdateReduced.getter()
{
  sub_191B4F638();
  sub_191CF4068();
  return v1;
}

uint64_t EnvironmentValues.isActivityUpdateReduced.setter()
{
  return sub_191CF4078();
}

uint64_t (*EnvironmentValues.isActivityUpdateReduced.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_191B4F638();
  sub_191CF4068();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_191B897C0;
}

uint64_t sub_191B897C0(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_191CF4078();
}

WidgetKit::ActivityUpdateAvailability_optional __swiftcall ActivityUpdateAvailability.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (WidgetKit::ActivityUpdateAvailability_optional)rawValue;
}

uint64_t ActivityUpdateAvailability.rawValue.getter()
{
  return *v0;
}

uint64_t ActivityUpdateAvailability.description.getter()
{
  if (*v0) {
    return 0x64656375646572;
  }
  else {
    return 1819047270;
  }
}

uint64_t sub_191B89850()
{
  return sub_191CF5508();
}

uint64_t sub_191B898B0()
{
  return sub_191CF54E8();
}

void *sub_191B89900@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_191B89920(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_191B8992C()
{
  if (*v0) {
    return 0x64656375646572;
  }
  else {
    return 1819047270;
  }
}

uint64_t (*EnvironmentValues.activityUpdateAvailability.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_191B4F638();
  sub_191CF4068();
  return sub_191B897C0;
}

unint64_t sub_191B899D0()
{
  unint64_t result = qword_1E92E39B8;
  if (!qword_1E92E39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39B8);
  }
  return result;
}

uint64_t sub_191B89A24()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_191B89A30()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_191B89A3C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_191B89A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_191B899D0();

  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t sub_191B89AAC()
{
  uint64_t result = swift_getKeyPath();
  qword_1EB44C820 = result;
  return result;
}

uint64_t sub_191B89AD4()
{
  type metadata accessor for WidgetEnvironment.AnyKey();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB44A008);
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 16) = result;
  qword_1EB44C828 = v0;
  unk_1EB44C830 = 0xD00000000000001ALL;
  qword_1EB44C838 = 0x8000000191D0DE70;
  return result;
}

uint64_t sub_191B89B4C()
{
  if (qword_1EB44A010 != -1) {
    swift_once();
  }

  return swift_retain();
}

void *sub_191B89BA8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1)
  {
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
    if (*result)
    {
      *a2 = 0;
      return result;
    }
  }
  *a2 = v2;
  return result;
}

unsigned __int8 *sub_191B89BD8@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_191B89BE4()
{
  if (qword_1EB44A018 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB44C828;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191B89C64@<X0>(unsigned char *a1@<X8>)
{
  sub_191B4F638();
  uint64_t result = sub_191CF4068();
  *a1 = v3;
  return result;
}

uint64_t sub_191B89CB4()
{
  return sub_191CF4078();
}

unsigned char *storeEnumTagSinglePayload for ActivityUpdateAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B89DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityUpdateAvailability()
{
  return &type metadata for ActivityUpdateAvailability;
}

ValueMetadata *type metadata accessor for ActivityUpdateAvailabilityEnvironmentKey()
{
  return &type metadata for ActivityUpdateAvailabilityEnvironmentKey;
}

unint64_t sub_191B89E24()
{
  unint64_t result = qword_1E92E39C0;
  if (!qword_1E92E39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39C0);
  }
  return result;
}

uint64_t sub_191B89E78(void *a1, unsigned __int8 a2, void *a3)
{
  id v6 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  if (v6)
  {
    uint64_t v7 = (uint64_t)v6;
    uint64_t v8 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_191B4B548(v7, 0xD000000000000011, 0x8000000191D0E860, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(a1, sel_kind);
    uint64_t v11 = sub_191CF5338();
    unint64_t v13 = v12;

    sub_191B116C8(6, v11, v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_191CF5BD8();
    swift_bridgeObjectRelease();
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_191B4B548(v14, 0x694B746567646977, 0xEA0000000000646ELL, v15);
    swift_bridgeObjectRelease();
    if (a2 < 0xDu && ((0x13BFu >> a2) & 1) != 0)
    {
      uint64_t v16 = sub_191CF5718();
      char v17 = swift_isUniquelyReferenced_nonNull_native();
      sub_191B4B548(v16, 0x796C696D6166, 0xE600000000000000, v17);
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_size);
      uint64_t v18 = sub_191CF3428();
      char v19 = swift_isUniquelyReferenced_nonNull_native();
      sub_191B4B548(v18, 0x746867696568, 0xE600000000000000, v19);
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_size);
      uint64_t v20 = sub_191CF3428();
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_191B4B548(v20, 0x6874646977, 0xE500000000000000, v21);
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_191CF6338();
  __break(1u);
  return result;
}

uint64_t sub_191B8A110(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for Analytics()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ActivityWidgetError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191B8A228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetError()
{
  return &type metadata for ActivityWidgetError;
}

unint64_t sub_191B8A264()
{
  unint64_t result = qword_1E92E39C8;
  if (!qword_1E92E39C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39C8);
  }
  return result;
}

uint64_t sub_191B8A2B8()
{
  uint64_t result = sub_191CF5338();
  qword_1E92F2568 = result;
  unk_1E92F2570 = v1;
  return result;
}

uint64_t sub_191B8A2E8()
{
  return sub_191CF64C8();
}

uint64_t sub_191B8A33C()
{
  return sub_191CF6478();
}

uint64_t sub_191B8A378()
{
  return sub_191CF64C8();
}

void *sub_191B8A3C8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 4003) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 4001) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_191B8A3E8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 4001;
  if (*v1) {
    uint64_t v2 = 4003;
  }
  *a1 = v2;
}

uint64_t sub_191B8A404()
{
  if (qword_1E92E2C20 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E92F2568;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_191B8A46C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_191B8A658();
  unint64_t v5 = sub_191B8A6AC();

  return MEMORY[0x1F40E3628](a1, a2, v4, v5);
}

unint64_t sub_191B8A4CC()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000042;
  }
}

unint64_t sub_191B8A518()
{
  unint64_t result = qword_1E92E39D0;
  if (!qword_1E92E39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39D0);
  }
  return result;
}

uint64_t sub_191B8A56C(uint64_t a1)
{
  unint64_t v2 = sub_191B8A604();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_191B8A5A8(uint64_t a1)
{
  unint64_t v2 = sub_191B8A604();
  unint64_t v3 = sub_191B8A658();
  unint64_t v4 = sub_191B8A6AC();

  return MEMORY[0x1F40E6DF8](a1, v2, v3, v4);
}

unint64_t sub_191B8A604()
{
  unint64_t result = qword_1E92E39D8;
  if (!qword_1E92E39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39D8);
  }
  return result;
}

unint64_t sub_191B8A658()
{
  unint64_t result = qword_1E92E39E0;
  if (!qword_1E92E39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E39E0);
  }
  return result;
}

unint64_t sub_191B8A6AC()
{
  unint64_t result = qword_1E92E39E8[0];
  if (!qword_1E92E39E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E92E39E8);
  }
  return result;
}

uint64_t sub_191B8A700(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_191B8A714(long long *a1, uint64_t a2, uint64_t a3)
{
  char v3 = *((unsigned char *)a1 + 16);
  char v4 = *((unsigned char *)a1 + 17);
  char v5 = *((unsigned char *)a1 + 40);
  unsigned int v6 = *(uint64_t (**)(long long *))(a3 + 32);
  long long v8 = *a1;
  char v9 = v3;
  char v10 = v4;
  long long v11 = *(long long *)((char *)a1 + 24);
  char v12 = v5;
  return v6(&v8);
}

uint64_t sub_191B8A770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_191B8A784(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_191B8A874;
  return v7(a1, a2);
}

uint64_t sub_191B8A874(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_191B8A970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_191B0A348;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191B8AA80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191B8AA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *unint64_t v13 = v6;
  v13[1] = sub_191B17A68;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_191B8ABBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_191B8B028;
  return v9(a1, a2, a3);
}

uint64_t sub_191B8ACC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_191B17A68;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_191B8ADCC()
{
  sub_191B163D4();
  sub_191CF4068();
  return v1;
}

uint64_t destroy for ControlTemplateProviderContext()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ControlTemplateProviderContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ControlTemplateProviderContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ControlTemplateProviderContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateProviderContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplateProviderContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateProviderContext()
{
  return &type metadata for ControlTemplateProviderContext;
}

double ActivityViewMetrics.bounds.getter()
{
  return *(double *)v0;
}

void ActivityViewMetrics.bounds.setter(double a1, double a2, double a3, double a4)
{
  *uint64_t v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ActivityViewMetrics.bounds.modify())()
{
  return nullsub_1;
}

double ActivityViewMetrics.cornerRadius.getter()
{
  return *(double *)(v0 + 32);
}

void ActivityViewMetrics.cornerRadius.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*ActivityViewMetrics.cornerRadius.modify())()
{
  return nullsub_1;
}

void ActivityViewMetrics.init(bounds:cornerRadius:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
}

uint64_t static ActivityViewMetrics.from(request:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(result + 16))
  {
    double v2 = *(double *)result;
    if (*(double *)(result + 8) > *(double *)result) {
      double v2 = *(double *)(result + 8);
    }
  }
  else
  {
    double v2 = *(double *)result;
  }
  if (*(unsigned char *)(result + 40))
  {
    double v3 = *(double *)(result + 24);
    if (*(double *)(result + 32) > v3) {
      double v3 = *(double *)(result + 32);
    }
  }
  else
  {
    double v3 = *(double *)(result + 24);
  }
  uint64_t v4 = *(void *)(result + 48);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(double *)(a2 + 16) = v2;
  *(double *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  return result;
}

uint64_t ActivityViewMetrics.hash(into:)()
{
  return sub_191CF64A8();
}

uint64_t sub_191B8B180()
{
  return sub_191CF64A8();
}

uint64_t ActivityViewMetrics.description.getter()
{
  return 0;
}

uint64_t static ActivityViewMetrics.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  double x = a1[1].origin.x;
  double v3 = a2[1].origin.x;
  LODWORD(result) = CGRectEqualToRect(*a1, *a2);
  if (x == v3) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t sub_191B8B348()
{
  if (*v0) {
    return 0x615272656E726F63;
  }
  else {
    return 0x73646E756F62;
  }
}

uint64_t sub_191B8B388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191B8BE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191B8B3B0(uint64_t a1)
{
  unint64_t v2 = sub_191B8B5F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191B8B3EC(uint64_t a1)
{
  unint64_t v2 = sub_191B8B5F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityViewMetrics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E1840);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B8B5F8();
  sub_191CF6528();
  long long v13 = v12;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  char v16 = 0;
  type metadata accessor for CGRect(0);
  sub_191B8BA78((unint64_t *)&unk_1EB44AD50);
  sub_191CF6278();
  if (!v2)
  {
    *(void *)&long long v13 = v10;
    char v16 = 1;
    sub_191B74708();
    sub_191CF6278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_191B8B5F8()
{
  unint64_t result = qword_1E92E1CF0;
  if (!qword_1E92E1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92E1CF0);
  }
  return result;
}

uint64_t ActivityViewMetrics.hashValue.getter()
{
  return sub_191CF64C8();
}

uint64_t ActivityViewMetrics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92E0C28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_191B8B5F8();
  sub_191CF6508();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    char v16 = 0;
    sub_191B8BA78((unint64_t *)&unk_1EB44AD00);
    sub_191CF6178();
    uint64_t v9 = v15[0];
    uint64_t v10 = v15[1];
    uint64_t v11 = v15[2];
    uint64_t v12 = v15[3];
    char v16 = 1;
    sub_191B8BABC();
    sub_191CF6178();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15[0];
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}