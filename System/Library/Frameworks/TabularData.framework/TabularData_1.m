uint64_t sub_22087A290@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v28;

  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    v5 = a4;
    v8 = result;
    v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v10 = 0;
    v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      v12 = a2;
    }
    else {
      v12 = v10;
    }
    v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      v10 = v13 + 1;
      v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        v26 = v5;
        result = swift_isUniquelyReferenced_nonNull_native();
        v15 = a3;
        if ((result & 1) == 0) {
          result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        v17 = *(void *)(v11 + 16);
        v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        v5 = v26;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    v18 = *(void *)(v11 + 16);
    if (v18)
    {
      v28 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v18, 0);
      v19 = 0;
      v20 = v28;
      v21 = *(void *)(v28 + 16);
      do
      {
        v22 = *(void *)(v8 + 8 * *(void *)(v11 + 8 * v19 + 32));
        v23 = *(void *)(v28 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826EF8((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v28 + 16) = v21 + 1;
        *(void *)(v28 + 8 * v21++ + 32) = v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      v20 = MEMORY[0x263F8EE78];
    }
    sub_22092E564(v20, a2 - v18, a5, v24, v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22087A4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F78);
  sub_22093F380();
  uint64_t result = sub_22087C32C(a2);
  v6 = (void *)(v4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = v32;
LABEL_2:
  if (v8 <= v33) {
    uint64_t v9 = v33;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v8;
  while (v33 != v10)
  {
    if (v33 < v32)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v8 < v32) {
      goto LABEL_30;
    }
    if (v9 == v10) {
      goto LABEL_31;
    }
    uint64_t result = swift_beginAccess();
    if (!*v6) {
      goto LABEL_34;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    int v14 = *(unsigned __int8 *)(*v6 + v10 / 8 + 64);
    int v15 = 1 << v13;
    if (v13 < 0) {
      int v15 = 0;
    }
    ++v10;
    if ((v15 & v14) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v7 + 16) + 1, 1);
      }
      unint64_t v17 = *(void *)(v7 + 16);
      unint64_t v16 = *(void *)(v7 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v7 + 16) = v17 + 1;
      *(void *)(v7 + 8 * v17 + 32) = v12 - 1;
      uint64_t v8 = v12;
      goto LABEL_2;
    }
  }
  sub_22087C2F8(a2);
  uint64_t result = sub_22093F380();
  uint64_t v18 = v33 - v32;
  if (__OFSUB__(v33, v32)) {
    goto LABEL_32;
  }
  int64_t v19 = *(void *)(v7 + 16);
  uint64_t v20 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  if (v19)
  {
    v31 = (float32x4_t *)MEMORY[0x263F8EE78];
    sub_220826F18(0, v19, 0);
    uint64_t v21 = 0;
    v22 = v31;
    unint64_t v23 = v31[1].u64[0];
    uint64_t v24 = a3;
    uint64_t v25 = a1;
    do
    {
      __int32 v26 = *(_DWORD *)(v25 + 4 * *(void *)(v7 + 8 * v21 + 32));
      unint64_t v27 = v31[1].u64[1];
      if (v23 >= v27 >> 1)
      {
        sub_220826F18((char *)(v27 > 1), v23 + 1, 1);
        uint64_t v25 = a1;
      }
      ++v21;
      v31[1].i64[0] = v23 + 1;
      v31[2].i32[v23++] = v26;
    }
    while (v19 != v21);
    swift_release();
  }
  else
  {
    swift_release();
    v22 = (float32x4_t *)MEMORY[0x263F8EE78];
    uint64_t v24 = a3;
  }
  sub_22092E84C(v22, v20, v24, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087A7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F70);
  sub_22093F380();
  uint64_t result = sub_22087C32C(a2);
  v6 = (void *)(v4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = v33;
LABEL_2:
  if (v8 <= v34) {
    uint64_t v9 = v34;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v8;
  while (v34 != v10)
  {
    if (v34 < v33)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v8 < v33) {
      goto LABEL_30;
    }
    if (v9 == v10) {
      goto LABEL_31;
    }
    uint64_t result = swift_beginAccess();
    if (!*v6) {
      goto LABEL_34;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    int v14 = *(unsigned __int8 *)(*v6 + v10 / 8 + 64);
    int v15 = 1 << v13;
    if (v13 < 0) {
      int v15 = 0;
    }
    ++v10;
    if ((v15 & v14) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v7 + 16) + 1, 1);
      }
      unint64_t v17 = *(void *)(v7 + 16);
      unint64_t v16 = *(void *)(v7 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v7 + 16) = v17 + 1;
      *(void *)(v7 + 8 * v17 + 32) = v12 - 1;
      uint64_t v8 = v12;
      goto LABEL_2;
    }
  }
  sub_22087C2F8(a2);
  uint64_t result = sub_22093F380();
  uint64_t v18 = v34 - v33;
  if (__OFSUB__(v34, v33)) {
    goto LABEL_32;
  }
  int64_t v19 = *(void *)(v7 + 16);
  uint64_t v20 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  if (v19)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v19, 0);
    uint64_t v21 = 0;
    uint64_t v22 = v32;
    unint64_t v23 = *(void *)(v32 + 16);
    uint64_t v24 = a3;
    uint64_t v25 = a1;
    do
    {
      uint64_t v26 = *(void *)(v25 + 8 * *(void *)(v7 + 8 * v21 + 32));
      unint64_t v27 = *(void *)(v32 + 24);
      if (v23 >= v27 >> 1)
      {
        sub_220826EF8((char *)(v27 > 1), v23 + 1, 1);
        uint64_t v25 = a1;
      }
      ++v21;
      *(void *)(v32 + 16) = v23 + 1;
      *(void *)(v32 + 8 * v23++ + 32) = v26;
    }
    while (v19 != v21);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v24 = a3;
  }
  sub_22092E564(v22, v20, v24, v28, v29);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087AA78@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = (uint64_t)a2;
  unsigned long long v4 = *(_OWORD *)((char *)a2 + 25);
  long long v5 = a2[1];
  long long v60 = *a2;
  *(_OWORD *)v61 = v5;
  *(_OWORD *)&v61[9] = v4;
  uint64_t v6 = sub_2208EE720(*(uint64_t *)&v61[8], v4 >> 56, HIBYTE(v4));
  unint64_t v7 = *(void *)(v6 + 16);
  sub_22084312C(v3);
  unint64_t v8 = 0;
  uint64_t v9 = (void *)(*(void *)v61 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v8 <= v7) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = v8;
  }
  while (v7 != v8)
  {
    if (v11 == v8)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v8 + 32);
    swift_beginAccess();
    if (!*v9) {
      goto LABEL_58;
    }
    uint64_t v14 = v12 - (v13 & 0xFFFFFFFFFFFFFFF8);
    ++v8;
    int v15 = 1 << v14;
    if (v14 < 0) {
      LOBYTE(v15) = 0;
    }
    if ((v15 & *(unsigned char *)(*v9 + v12 / 8 + 64)) != 0)
    {
      v52[0] = v10;
      uint64_t v50 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C98(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v52[0];
      }
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v10 = v52[0];
      }
      *(void *)(v10 + 16) = v18;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      uint64_t v3 = v50;
      goto LABEL_2;
    }
  }
  sub_220843060(v3);
  uint64_t v19 = swift_bridgeObjectRelease();
  sub_220883520(v52, v19);
  uint64_t v20 = v57;
  uint64_t v21 = v59;
  if (v59 < v57) {
    goto LABEL_56;
  }
  uint64_t v22 = v53;
  uint64_t v49 = v54;
  int v23 = v55;
  uint64_t v24 = v58;
  unint64_t v25 = v56;
  if (v57 != v59 || v56 != v58)
  {
    uint64_t v27 = 0;
    uint64_t v28 = v53 + 32;
    v48 = (void *)(v52[2] + 16);
    while (1)
    {
      uint64_t v26 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        goto LABEL_51;
      }
      if (__OFADD__(v20++, 1)) {
        goto LABEL_52;
      }
      if (v23)
      {
        if (v23 != 1) {
          goto LABEL_60;
        }
        if ((v25 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v25 >= *(void *)(v22 + 16)) {
          goto LABEL_55;
        }
        v31 = (uint64_t *)(v28 + 16 * v25);
        uint64_t v32 = *v31;
        uint64_t v30 = v31[1];
        if (v20 < v32) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v30 = v49;
        if (v25) {
          goto LABEL_53;
        }
        if (v20 < v22) {
          goto LABEL_32;
        }
      }
      if (v20 < v30) {
        goto LABEL_39;
      }
LABEL_32:
      if (!v23)
      {
        unint64_t v33 = 1;
LABEL_36:
        unint64_t v51 = v33;
        uint64_t v35 = v24;
        uint64_t v36 = v21;
        swift_beginAccess();
        if (!*v48) {
          goto LABEL_59;
        }
        uint64_t v34 = (uint64_t *)(*v48 + 8);
        uint64_t v21 = v36;
        uint64_t v24 = v35;
        unint64_t v25 = v51;
        goto LABEL_38;
      }
      unint64_t v33 = *(void *)(v22 + 16);
      if (v25 + 1 >= v33) {
        goto LABEL_36;
      }
      uint64_t v34 = (uint64_t *)(v28 + 16 * ++v25);
LABEL_38:
      uint64_t v20 = *v34;
LABEL_39:
      ++v27;
      if (v25 == v24 && v20 == v21) {
        goto LABEL_41;
      }
    }
  }
  uint64_t v26 = 0;
LABEL_41:
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v22, v49, v23);
  int64_t v37 = *(void *)(v10 + 16);
  uint64_t v38 = v26 - v37;
  if (__OFSUB__(v26, v37)) {
    goto LABEL_57;
  }
  if (v37)
  {
    v52[0] = MEMORY[0x263F8EE78];
    sub_220826F18(0, v37, 0);
    uint64_t v39 = 0;
    v40 = (float32x4_t *)v52[0];
    unint64_t v41 = *(void *)(v52[0] + 16);
    do
    {
      __int32 v42 = *(_DWORD *)(a1 + 4 * *(void *)(v10 + 8 * v39 + 32));
      v52[0] = v40;
      unint64_t v43 = v40[1].u64[1];
      if (v41 >= v43 >> 1)
      {
        sub_220826F18((char *)(v43 > 1), v41 + 1, 1);
        v40 = (float32x4_t *)v52[0];
      }
      ++v39;
      v40[1].i64[0] = v41 + 1;
      v40[2].i32[v41++] = v42;
    }
    while (v37 != v39);
    swift_release();
  }
  else
  {
    swift_release();
    v40 = (float32x4_t *)MEMORY[0x263F8EE78];
  }
  sub_22092E84C(v40, v38, a3, v44);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087AEC0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = (uint64_t)a2;
  unsigned long long v4 = *(_OWORD *)((char *)a2 + 25);
  long long v5 = a2[1];
  long long v61 = *a2;
  *(_OWORD *)v62 = v5;
  *(_OWORD *)&v62[9] = v4;
  uint64_t v6 = sub_2208EE720(*(uint64_t *)&v62[8], v4 >> 56, HIBYTE(v4));
  unint64_t v7 = *(void *)(v6 + 16);
  sub_22084312C(v3);
  unint64_t v8 = 0;
  uint64_t v9 = (void *)(*(void *)v62 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v8 <= v7) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = v8;
  }
  while (v7 != v8)
  {
    if (v11 == v8)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v8 + 32);
    swift_beginAccess();
    if (!*v9) {
      goto LABEL_58;
    }
    uint64_t v14 = v12 - (v13 & 0xFFFFFFFFFFFFFFF8);
    ++v8;
    int v15 = 1 << v14;
    if (v14 < 0) {
      LOBYTE(v15) = 0;
    }
    if ((v15 & *(unsigned char *)(*v9 + v12 / 8 + 64)) != 0)
    {
      v53[0] = v10;
      uint64_t v51 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C98(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v53[0];
      }
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v10 = v53[0];
      }
      *(void *)(v10 + 16) = v18;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      uint64_t v3 = v51;
      goto LABEL_2;
    }
  }
  sub_220843060(v3);
  uint64_t v19 = swift_bridgeObjectRelease();
  sub_220883520(v53, v19);
  uint64_t v20 = v58;
  uint64_t v21 = v60;
  if (v60 < v58) {
    goto LABEL_56;
  }
  uint64_t v22 = v54;
  uint64_t v50 = v55;
  int v23 = v56;
  uint64_t v24 = v59;
  unint64_t v25 = v57;
  if (v58 != v60 || v57 != v59)
  {
    uint64_t v27 = 0;
    uint64_t v28 = v54 + 32;
    uint64_t v49 = (void *)(v53[2] + 16);
    while (1)
    {
      uint64_t v26 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        goto LABEL_51;
      }
      if (__OFADD__(v20++, 1)) {
        goto LABEL_52;
      }
      if (v23)
      {
        if (v23 != 1) {
          goto LABEL_60;
        }
        if ((v25 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v25 >= *(void *)(v22 + 16)) {
          goto LABEL_55;
        }
        v31 = (uint64_t *)(v28 + 16 * v25);
        uint64_t v32 = *v31;
        uint64_t v30 = v31[1];
        if (v20 < v32) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v30 = v50;
        if (v25) {
          goto LABEL_53;
        }
        if (v20 < v22) {
          goto LABEL_32;
        }
      }
      if (v20 < v30) {
        goto LABEL_39;
      }
LABEL_32:
      if (!v23)
      {
        unint64_t v33 = 1;
LABEL_36:
        unint64_t v52 = v33;
        uint64_t v35 = v24;
        uint64_t v36 = v21;
        swift_beginAccess();
        if (!*v49) {
          goto LABEL_59;
        }
        uint64_t v34 = (uint64_t *)(*v49 + 8);
        uint64_t v21 = v36;
        uint64_t v24 = v35;
        unint64_t v25 = v52;
        goto LABEL_38;
      }
      unint64_t v33 = *(void *)(v22 + 16);
      if (v25 + 1 >= v33) {
        goto LABEL_36;
      }
      uint64_t v34 = (uint64_t *)(v28 + 16 * ++v25);
LABEL_38:
      uint64_t v20 = *v34;
LABEL_39:
      ++v27;
      if (v25 == v24 && v20 == v21) {
        goto LABEL_41;
      }
    }
  }
  uint64_t v26 = 0;
LABEL_41:
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v22, v50, v23);
  int64_t v37 = *(void *)(v10 + 16);
  uint64_t v38 = v26 - v37;
  if (__OFSUB__(v26, v37)) {
    goto LABEL_57;
  }
  if (v37)
  {
    v53[0] = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v37, 0);
    uint64_t v39 = 0;
    uint64_t v40 = v53[0];
    unint64_t v41 = *(void *)(v53[0] + 16);
    do
    {
      uint64_t v42 = *(void *)(a1 + 8 * *(void *)(v10 + 8 * v39 + 32));
      v53[0] = v40;
      unint64_t v43 = *(void *)(v40 + 24);
      if (v41 >= v43 >> 1)
      {
        sub_220826EF8((char *)(v43 > 1), v41 + 1, 1);
        uint64_t v40 = v53[0];
      }
      ++v39;
      *(void *)(v40 + 16) = v41 + 1;
      *(void *)(v40 + 8 * v41++ + 32) = v42;
    }
    while (v37 != v39);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v40 = MEMORY[0x263F8EE78];
  }
  sub_22092E564(v40, v38, a3, v44, v45);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087B308@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  if (a2 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v8 = result;
    uint64_t v9 = (void *)(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_3:
    if (v10 <= a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = v10;
    }
    unint64_t v13 = v10;
    while (a2 != v13)
    {
      if (v12 == v13)
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t result = swift_beginAccess();
      if (!*v9) {
        goto LABEL_26;
      }
      uint64_t v10 = v13 + 1;
      int v14 = *(unsigned __int8 *)(*v9 + (v13 >> 3) + 64) >> (v13 & 7);
      ++v13;
      if (v14)
      {
        uint64_t v26 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = a3;
        if ((result & 1) == 0) {
          uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v11 + 16) + 1, 1);
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        }
        *(void *)(v11 + 16) = v17 + 1;
        *(void *)(v11 + 8 * v17 + 32) = v10 - 1;
        a3 = v15;
        uint64_t v5 = v26;
        goto LABEL_3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    int64_t v18 = *(void *)(v11 + 16);
    if (v18)
    {
      uint64_t v28 = MEMORY[0x263F8EE78];
      sub_220826EF8(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v28;
      unint64_t v21 = *(void *)(v28 + 16);
      do
      {
        uint64_t v22 = *(void *)(v8 + 8 * *(void *)(v11 + 8 * v19 + 32));
        unint64_t v23 = *(void *)(v28 + 24);
        if (v21 >= v23 >> 1) {
          sub_220826EF8((char *)(v23 > 1), v21 + 1, 1);
        }
        ++v19;
        *(void *)(v28 + 16) = v21 + 1;
        *(double *)(v28 + 8 * v21++ + 32) = (double)v22;
      }
      while (v18 != v19);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    sub_22092E564(v20, a2 - v18, a5, v24, v25);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22087B544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F80);
  sub_22093F380();
  uint64_t result = sub_22087C32C(a2);
  uint64_t v6 = (void *)(v4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = v32;
LABEL_2:
  if (v8 <= v33) {
    uint64_t v9 = v33;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v8;
  while (v33 != v10)
  {
    if (v33 < v32)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v8 < v32) {
      goto LABEL_30;
    }
    if (v9 == v10) {
      goto LABEL_31;
    }
    uint64_t result = swift_beginAccess();
    if (!*v6) {
      goto LABEL_34;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    int v14 = *(unsigned __int8 *)(*v6 + v10 / 8 + 64);
    int v15 = 1 << v13;
    if (v13 < 0) {
      int v15 = 0;
    }
    ++v10;
    if ((v15 & v14) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v7 + 16) + 1, 1);
      }
      unint64_t v17 = *(void *)(v7 + 16);
      unint64_t v16 = *(void *)(v7 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t result = (uint64_t)sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v7 + 16) = v17 + 1;
      *(void *)(v7 + 8 * v17 + 32) = v12 - 1;
      uint64_t v8 = v12;
      goto LABEL_2;
    }
  }
  sub_22087C2F8(a2);
  uint64_t result = sub_22093F380();
  uint64_t v18 = v33 - v32;
  if (__OFSUB__(v33, v32)) {
    goto LABEL_32;
  }
  int64_t v19 = *(void *)(v7 + 16);
  uint64_t v20 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  if (v19)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v19, 0);
    uint64_t v21 = 0;
    uint64_t v22 = v31;
    unint64_t v23 = *(void *)(v31 + 16);
    uint64_t v24 = a1;
    do
    {
      uint64_t v25 = *(void *)(v24 + 8 * *(void *)(v7 + 8 * v21 + 32));
      unint64_t v26 = *(void *)(v31 + 24);
      if (v23 >= v26 >> 1)
      {
        sub_220826EF8((char *)(v26 > 1), v23 + 1, 1);
        uint64_t v24 = a1;
      }
      ++v21;
      *(void *)(v31 + 16) = v23 + 1;
      *(double *)(v31 + 8 * v23++ + 32) = (double)v25;
    }
    while (v19 != v21);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  sub_22092E564(v22, v20, a3, v27, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087B810@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = (uint64_t)a2;
  unsigned long long v4 = *(_OWORD *)((char *)a2 + 25);
  long long v5 = a2[1];
  long long v59 = *a2;
  *(_OWORD *)uint64_t v60 = v5;
  *(_OWORD *)&v60[9] = v4;
  uint64_t v6 = sub_2208EE720(*(uint64_t *)&v60[8], v4 >> 56, HIBYTE(v4));
  unint64_t v7 = *(void *)(v6 + 16);
  sub_22084312C(v3);
  unint64_t v8 = 0;
  uint64_t v9 = (void *)(*(void *)v60 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v8 <= v7) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = v8;
  }
  while (v7 != v8)
  {
    if (v11 == v8)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v8 + 32);
    swift_beginAccess();
    if (!*v9) {
      goto LABEL_58;
    }
    uint64_t v14 = v12 - (v13 & 0xFFFFFFFFFFFFFFF8);
    ++v8;
    int v15 = 1 << v14;
    if (v14 < 0) {
      LOBYTE(v15) = 0;
    }
    if ((v15 & *(unsigned char *)(*v9 + v12 / 8 + 64)) != 0)
    {
      v51[0] = v10;
      uint64_t v61 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C98(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v51[0];
      }
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_220826C98((char *)(v16 > 1), v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v10 = v51[0];
      }
      *(void *)(v10 + 16) = v18;
      *(void *)(v10 + 8 * v17 + 32) = v12;
      uint64_t v3 = v61;
      goto LABEL_2;
    }
  }
  sub_220843060(v3);
  uint64_t v19 = swift_bridgeObjectRelease();
  sub_220883520(v51, v19);
  uint64_t v20 = v56;
  uint64_t v21 = v58;
  if (v58 < v56) {
    goto LABEL_56;
  }
  uint64_t v22 = v52;
  uint64_t v50 = v53;
  int v23 = v54;
  uint64_t v24 = v57;
  unint64_t v25 = v55;
  if (v56 != v58 || v55 != v57)
  {
    uint64_t v27 = 0;
    uint64_t v28 = v52 + 32;
    uint64_t v49 = (void *)(v51[2] + 16);
    while (1)
    {
      uint64_t v26 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        goto LABEL_51;
      }
      if (__OFADD__(v20++, 1)) {
        goto LABEL_52;
      }
      if (v23)
      {
        if (v23 != 1) {
          goto LABEL_60;
        }
        if ((v25 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v25 >= *(void *)(v22 + 16)) {
          goto LABEL_55;
        }
        uint64_t v31 = (uint64_t *)(v28 + 16 * v25);
        uint64_t v32 = *v31;
        uint64_t v30 = v31[1];
        if (v20 < v32) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v30 = v50;
        if (v25) {
          goto LABEL_53;
        }
        if (v20 < v22) {
          goto LABEL_32;
        }
      }
      if (v20 < v30) {
        goto LABEL_39;
      }
LABEL_32:
      if (!v23)
      {
        unint64_t v33 = 1;
LABEL_36:
        uint64_t v61 = v33;
        uint64_t v35 = v24;
        uint64_t v36 = v21;
        swift_beginAccess();
        if (!*v49) {
          goto LABEL_59;
        }
        uint64_t v34 = (uint64_t *)(*v49 + 8);
        uint64_t v21 = v36;
        uint64_t v24 = v35;
        unint64_t v25 = v61;
        goto LABEL_38;
      }
      unint64_t v33 = *(void *)(v22 + 16);
      if (v25 + 1 >= v33) {
        goto LABEL_36;
      }
      uint64_t v34 = (uint64_t *)(v28 + 16 * ++v25);
LABEL_38:
      uint64_t v20 = *v34;
LABEL_39:
      ++v27;
      if (v25 == v24 && v20 == v21) {
        goto LABEL_41;
      }
    }
  }
  uint64_t v26 = 0;
LABEL_41:
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v22, v50, v23);
  int64_t v37 = *(void *)(v10 + 16);
  uint64_t v38 = v26 - v37;
  if (__OFSUB__(v26, v37)) {
    goto LABEL_57;
  }
  if (v37)
  {
    v51[0] = MEMORY[0x263F8EE78];
    sub_220826EF8(0, v37, 0);
    uint64_t v39 = 0;
    uint64_t v40 = v51[0];
    unint64_t v41 = *(void *)(v51[0] + 16);
    do
    {
      uint64_t v42 = *(void *)(a1 + 8 * *(void *)(v10 + 8 * v39 + 32));
      v51[0] = v40;
      unint64_t v43 = *(void *)(v40 + 24);
      if (v41 >= v43 >> 1)
      {
        sub_220826EF8((char *)(v43 > 1), v41 + 1, 1);
        uint64_t v40 = v51[0];
      }
      ++v39;
      *(void *)(v40 + 16) = v41 + 1;
      *(double *)(v40 + 8 * v41++ + 32) = (double)v42;
    }
    while (v37 != v39);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v40 = MEMORY[0x263F8EE78];
  }
  sub_22092E564(v40, v38, a3, v44, v45);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22087BC54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_220826C98(0, v1, 0);
    uint64_t v2 = v11;
    unsigned long long v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_22080BA90(v5, v6);
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_220826C98((char *)(v8 > 1), v9 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22087BD68(uint64_t a1, long long *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_220826C98(0, v2, 0);
    uint64_t v3 = v13;
    long long v14 = *a2;
    uint64_t v15 = *((void *)a2 + 2);
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      sub_22087C23C((uint64_t)&v14);
      uint64_t v9 = sub_22080BA90(v7, v8);
      sub_22087C284((uint64_t)&v14);
      swift_bridgeObjectRelease();
      unint64_t v11 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      if (v11 >= v10 >> 1) {
        sub_220826C98((char *)(v10 > 1), v11 + 1, 1);
      }
      v6 += 2;
      *(void *)(v13 + 16) = v11 + 1;
      *(void *)(v13 + 8 * v11 + 32) = v9;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_22087BE90(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)sub_220826CD8(0, v2, 0);
  uint64_t v3 = v18;
  uint64_t v7 = (unint64_t *)(a1 + 32);
  unint64_t v8 = *(void *)(a2 + 16);
  while (1)
  {
    unint64_t v10 = *v7++;
    unint64_t v9 = v10;
    if (v10 >= v8) {
      break;
    }
    uint64_t result = sub_22080B5B8(a2 + 32 + 40 * v9, (uint64_t)v16);
    uint64_t v18 = v3;
    unint64_t v12 = *(void *)(v3 + 16);
    unint64_t v11 = *(void *)(v3 + 24);
    if (v12 >= v11 >> 1)
    {
      uint64_t result = (uint64_t)sub_220826CD8((char *)(v11 > 1), v12 + 1, 1);
      uint64_t v3 = v18;
    }
    *(void *)(v3 + 16) = v12 + 1;
    uint64_t v13 = v3 + 40 * v12;
    long long v14 = v16[0];
    long long v15 = v16[1];
    *(void *)(v13 + 64) = v17;
    *(_OWORD *)(v13 + 32) = v14;
    *(_OWORD *)(v13 + 48) = v15;
    if (!--v2) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22087BF9C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)sub_220826C58(0, v2, 0);
  uint64_t v7 = 0;
  uint64_t v8 = v39;
  uint64_t v32 = a2;
  uint64_t v33 = a1 + 32;
  uint64_t v40 = *(void *)a2;
  int64_t v9 = *(void *)(v40 + 16);
  __n128 v29 = (void *)(v40 + 32);
  int64_t v30 = v9;
  int64_t v31 = v2;
  while (1)
  {
    unint64_t v10 = *(void *)(v33 + 8 * v7);
    if (v9) {
      break;
    }
    uint64_t v11 = v3;
    if ((v10 & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_13:
    if (v10 >= *(void *)(v11 + 16)) {
      goto LABEL_21;
    }
    sub_220833C28(v11 + 40 * v10 + 32, (uint64_t)&v36);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v39 = v8;
    unint64_t v25 = *(void *)(v8 + 16);
    unint64_t v24 = *(void *)(v8 + 24);
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_220826C58((char *)(v24 > 1), v25 + 1, 1);
      uint64_t v8 = v39;
    }
    ++v7;
    *(void *)(v8 + 16) = v25 + 1;
    uint64_t v26 = v8 + 40 * v25;
    long long v27 = v36;
    long long v28 = v37;
    *(void *)(v26 + 64) = v38;
    *(_OWORD *)(v26 + 32) = v27;
    *(_OWORD *)(v26 + 48) = v28;
    if (v7 == v2) {
      return v8;
    }
  }
  unint64_t v34 = *(void *)(v33 + 8 * v7);
  uint64_t v35 = v8;
  sub_220833B58(a2);
  sub_220838C74((uint64_t)&v40);
  sub_220826C58(0, v9, 0);
  uint64_t v11 = v3;
  int64_t v12 = v9;
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  long long v15 = v29;
  uint64_t v16 = *(unsigned __int8 *)(a2 + 40);
  do
  {
    uint64_t v18 = v15[3];
    uint64_t v17 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v18);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 160))(&v36, v13, v14, v16, v18);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_220826C58(0, *(void *)(v11 + 16) + 1, 1);
    }
    unint64_t v20 = *(void *)(v11 + 16);
    unint64_t v19 = *(void *)(v11 + 24);
    if (v20 >= v19 >> 1) {
      sub_220826C58((char *)(v19 > 1), v20 + 1, 1);
    }
    *(void *)(v11 + 16) = v20 + 1;
    uint64_t v21 = v11 + 40 * v20;
    long long v22 = v36;
    long long v23 = v37;
    *(void *)(v21 + 64) = v38;
    *(_OWORD *)(v21 + 32) = v22;
    *(_OWORD *)(v21 + 48) = v23;
    v15 += 5;
    --v12;
  }
  while (v12);
  a2 = v32;
  sub_220833BC0(v32);
  uint64_t result = sub_220838B94((uint64_t)&v40);
  uint64_t v3 = MEMORY[0x263F8EE78];
  int64_t v9 = v30;
  int64_t v2 = v31;
  uint64_t v8 = v35;
  unint64_t v10 = v34;
  if ((v34 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_22087C23C(uint64_t a1)
{
  return a1;
}

uint64_t sub_22087C284(uint64_t a1)
{
  return a1;
}

uint64_t sub_22087C2CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_22087C2F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_22087C32C(uint64_t a1)
{
  return a1;
}

uint64_t DataFrame.combineColumns<A, B, C>(_:_:into:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v75 = a7;
  uint64_t v76 = a8;
  uint64_t v77 = a5;
  uint64_t v78 = a6;
  uint64_t v70 = sub_22093ED30();
  v67 = *(void (***)(uint64_t, uint64_t))(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v60 = (char *)&v56 - v16;
  uint64_t v69 = sub_22093ED30();
  uint64_t v57 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  long long v59 = (char *)&v56 - v17;
  uint64_t v84 = a11;
  uint64_t v68 = sub_22093ED30();
  uint64_t v56 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v58 = (char *)&v56 - v18;
  uint64_t v20 = *v11;
  uint64_t v19 = v11[1];
  v65 = v11;
  uint64_t v21 = v11[2];
  uint64_t v92 = v20;
  uint64_t v93 = v19;
  uint64_t v94 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  uint64_t v73 = a9;
  uint64_t v22 = v20;
  DataFrame.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v72 = v86;
  uint64_t v82 = v88;
  uint64_t v83 = v87;
  uint64_t v92 = v20;
  uint64_t v93 = v19;
  uint64_t v94 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v74 = a10;
  DataFrame.subscript.getter(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = v86;
  uint64_t v80 = v88;
  uint64_t v81 = v87;
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v85 = v19;
  if (v23)
  {
    sub_22080B5B8(v20 + 32, (uint64_t)&v86);
    uint64_t v24 = v89;
    uint64_t v25 = v90;
    __swift_project_boxed_opaque_existential_1(&v86, v89);
    uint64_t v26 = *(void *)(v25 + 8);
    long long v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = v78;
    swift_bridgeObjectRetain();
    uint64_t v29 = v27(v24, v26);
    uint64_t result = sub_22080B0D8((uint64_t)&v86);
    if (v29 < 0)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v31 = v28;
    if (v29)
    {
      char v32 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v78;
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = 0;
  char v32 = 2;
LABEL_7:
  uint64_t v33 = v77;
  Swift::Int v34 = sub_2208EE804(0, v29, v32);
  swift_bridgeObjectRelease();
  uint64_t v35 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v29, v32);
  Column.init(name:capacity:)(v33, v31, v34, v84, &v92);
  if (!*(void *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = v35;
    uint64_t v41 = v21;
    goto LABEL_12;
  }
  sub_22080B5B8(v22 + 32, (uint64_t)&v86);
  uint64_t v36 = v89;
  uint64_t v37 = v90;
  __swift_project_boxed_opaque_existential_1(&v86, v89);
  uint64_t v38 = *(void *)(v37 + 8);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v39(v36, v38);
  uint64_t result = sub_22080B0D8((uint64_t)&v86);
  if (v40 < 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v41 = v21;
  uint64_t v42 = v85;
  if (!v40)
  {
LABEL_12:
    uint64_t v40 = 0;
    int v43 = 2;
    goto LABEL_13;
  }
  int v43 = 0;
LABEL_13:
  sub_220883950(0, v40, v43);
  uint64_t v78 = v40;
  uint64_t v79 = v22;
  LODWORD(v77) = v43;
  if ((v45 & 1) != 0 || (uint64_t v46 = v44) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v78, v77);
    uint64_t v86 = v92;
    uint64_t v87 = v93;
    uint64_t v88 = v94;
    swift_bridgeObjectRetain();
    swift_retain();
    DataFrame.replaceColumn<A>(_:with:)(v61, v62);
    swift_release();
    swift_bridgeObjectRelease();
    DataFrame.removeColumn(_:)(v63, v64, (uint64_t)&v86);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)&v86);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Int v47 = 0;
    v66 = v67 + 1;
    v67 = (void (**)(uint64_t, uint64_t))(v57 + 8);
    v48 = (void (**)(uint64_t, uint64_t))(v56 + 8);
    uint64_t v49 = (uint64_t)v60;
    uint64_t v50 = (uint64_t)v59;
    uint64_t v51 = (uint64_t)v58;
    while (1)
    {
      uint64_t v86 = v79;
      uint64_t v87 = v42;
      uint64_t v52 = v41;
      uint64_t v88 = v41;
      uint64_t v89 = 0;
      uint64_t v90 = v78;
      char v91 = v77;
      Swift::Int v53 = DataFrame.Rows.index(after:)(v47);
      uint64_t v86 = v72;
      uint64_t v87 = v83;
      uint64_t v88 = v82;
      type metadata accessor for Column();
      Column.subscript.getter(v47, v50);
      uint64_t v86 = v71;
      uint64_t v87 = v81;
      uint64_t v88 = v80;
      type metadata accessor for Column();
      Column.subscript.getter(v47, v49);
      uint64_t v54 = v95;
      v75(v50, v49);
      if (v54) {
        break;
      }
      uint64_t v95 = 0;
      (*v66)(v49, v70);
      (*v67)(v50, v69);
      type metadata accessor for Column();
      Column.append(_:)(v51);
      (*v48)(v51, v68);
      Swift::Int v47 = v53;
      BOOL v55 = v53 == v46;
      uint64_t v42 = v85;
      uint64_t v41 = v52;
      if (v55) {
        goto LABEL_19;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*v66)(v49, v70);
    (*v67)(v50, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v78, v77);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t DataFrame.combineColumns<A, B, C>(_:_:into:transform:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v73 = a6;
  uint64_t v72 = a5;
  uint64_t v76 = a3;
  uint64_t v69 = sub_22093ED30();
  v66 = *(void (***)(uint64_t, uint64_t))(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v58 = (char *)&v55 - v15;
  uint64_t v68 = sub_22093ED30();
  uint64_t v57 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v56 = (char *)&v55 - v16;
  uint64_t v83 = a9;
  uint64_t v67 = sub_22093ED30();
  uint64_t v55 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  long long v59 = (char *)&v55 - v17;
  uint64_t v18 = *a1;
  uint64_t v19 = a1[1];
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  uint64_t v22 = *v9;
  uint64_t v23 = v9[1];
  uint64_t v64 = v9;
  uint64_t v24 = v9[2];
  uint64_t v93 = v22;
  uint64_t v94 = v23;
  uint64_t v95 = v24;
  uint64_t v61 = v18;
  uint64_t v91 = v18;
  uint64_t v92 = v19;
  uint64_t v60 = v19;
  uint64_t v74 = a7;
  DataFrame.subscript.getter(&v91);
  uint64_t v71 = v85;
  uint64_t v82 = v86;
  uint64_t v80 = v87;
  uint64_t v93 = v22;
  uint64_t v94 = v23;
  uint64_t v95 = v24;
  uint64_t v63 = v20;
  uint64_t v91 = v20;
  uint64_t v92 = v21;
  uint64_t v62 = v21;
  uint64_t v75 = a8;
  DataFrame.subscript.getter(&v91);
  uint64_t v70 = v85;
  uint64_t v81 = v86;
  uint64_t v79 = v87;
  uint64_t v25 = *(void *)(v22 + 16);
  uint64_t v84 = v23;
  if (v25)
  {
    sub_22080B5B8(v22 + 32, (uint64_t)&v85);
    uint64_t v27 = v88;
    uint64_t v26 = v89;
    __swift_project_boxed_opaque_existential_1(&v85, v88);
    uint64_t v28 = *(void *)(v26 + 8);
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = v29(v27, v28);
    uint64_t result = sub_22080B0D8((uint64_t)&v85);
    if (v30 < 0)
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v30)
    {
      char v32 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = 0;
  char v32 = 2;
LABEL_7:
  uint64_t v33 = v76;
  Swift::Int v34 = sub_2208EE804(0, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v35 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v30, v32);
  Column.init(name:capacity:)(v33, a4, v34, v83, &v93);
  if (!*(void *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = v35;
    goto LABEL_12;
  }
  sub_22080B5B8(v22 + 32, (uint64_t)&v85);
  uint64_t v37 = v88;
  uint64_t v36 = v89;
  __swift_project_boxed_opaque_existential_1(&v85, v88);
  uint64_t v38 = *(void *)(v36 + 8);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v39(v37, v38);
  uint64_t result = sub_22080B0D8((uint64_t)&v85);
  if (v40 < 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v41 = v84;
  if (!v40)
  {
LABEL_12:
    uint64_t v40 = 0;
    int v42 = 2;
    goto LABEL_13;
  }
  int v42 = 0;
LABEL_13:
  sub_220883950(0, v40, v42);
  uint64_t v77 = v24;
  uint64_t v78 = v22;
  LODWORD(v76) = v42;
  if ((v44 & 1) != 0 || (uint64_t v45 = v43) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v40, v76);
    uint64_t v91 = v61;
    uint64_t v92 = v60;
    uint64_t v85 = v93;
    uint64_t v86 = v94;
    uint64_t v87 = v95;
    DataFrame.replaceColumn<A, B>(_:with:)(&v91);
    uint64_t v91 = v63;
    uint64_t v92 = v62;
    DataFrame.removeColumn<A>(_:)(&v91);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = (uint64_t)v58;
    uint64_t v47 = (uint64_t)v56;
    Swift::Int v48 = 0;
    v65 = v66 + 1;
    v66 = (void (**)(uint64_t, uint64_t))(v57 + 8);
    uint64_t v49 = (void (**)(uint64_t, uint64_t))(v55 + 8);
    uint64_t v50 = (uint64_t)v59;
    while (1)
    {
      uint64_t v85 = v78;
      uint64_t v86 = v41;
      uint64_t v87 = v77;
      uint64_t v88 = 0;
      uint64_t v51 = v40;
      uint64_t v89 = v40;
      char v90 = v76;
      Swift::Int v52 = DataFrame.Rows.index(after:)(v48);
      uint64_t v85 = v71;
      uint64_t v86 = v82;
      uint64_t v87 = v80;
      type metadata accessor for Column();
      Column.subscript.getter(v48, v47);
      uint64_t v85 = v70;
      uint64_t v86 = v81;
      uint64_t v87 = v79;
      type metadata accessor for Column();
      Column.subscript.getter(v48, v46);
      uint64_t v53 = v96;
      v72(v47, v46);
      if (v53) {
        break;
      }
      uint64_t v96 = 0;
      (*v65)(v46, v69);
      (*v66)(v47, v68);
      type metadata accessor for Column();
      Column.append(_:)(v50);
      (*v49)(v50, v67);
      Swift::Int v48 = v52;
      BOOL v54 = v52 == v45;
      uint64_t v41 = v84;
      uint64_t v40 = v51;
      if (v54) {
        goto LABEL_19;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*v65)(v46, v69);
    (*v66)(v47, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v51, v76);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t DataFrame.combineColumns<A, B, C, D>(_:_:_:into:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t), uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v68 = a8;
  uint64_t v67 = a7;
  uint64_t v61 = a6;
  uint64_t v60 = a5;
  uint64_t v59 = a4;
  uint64_t v58 = a3;
  uint64_t v72 = sub_22093ED30();
  v66 = *(void (***)(char *, uint64_t))(v72 - 8);
  MEMORY[0x270FA5388](v72);
  BOOL v54 = (char *)&v51 - v17;
  uint64_t v71 = sub_22093ED30();
  v65 = *(void (***)(char *, uint64_t))(v71 - 8);
  MEMORY[0x270FA5388](v71);
  char v90 = (char *)&v51 - v18;
  uint64_t v70 = sub_22093ED30();
  uint64_t v62 = *(void (***)(uint64_t, uint64_t))(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v88 = a14;
  uint64_t v89 = (char *)&v51 - v19;
  uint64_t v69 = sub_22093ED30();
  uint64_t v52 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v53 = (char *)&v51 - v20;
  uint64_t v21 = *v14;
  uint64_t v22 = v14[1];
  uint64_t v57 = v14;
  uint64_t v23 = v14[2];
  uint64_t v97 = v21;
  uint64_t v98 = v22;
  uint64_t v99 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v76 = a11;
  DataFrame.subscript.getter(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = v91;
  uint64_t v86 = v93;
  uint64_t v87 = v92;
  uint64_t v97 = v21;
  uint64_t v98 = v22;
  uint64_t v99 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v77 = a12;
  DataFrame.subscript.getter(v58, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v74 = v91;
  uint64_t v84 = v93;
  uint64_t v85 = v92;
  uint64_t v97 = v21;
  uint64_t v98 = v22;
  uint64_t v99 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v78 = a13;
  DataFrame.subscript.getter(v60, v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = v91;
  uint64_t v82 = v93;
  uint64_t v83 = v92;
  if (*(void *)(v21 + 16))
  {
    sub_22080B5B8(v21 + 32, (uint64_t)&v91);
    uint64_t v25 = v94;
    uint64_t v24 = v95;
    __swift_project_boxed_opaque_existential_1(&v91, v94);
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = v68;
    swift_bridgeObjectRetain();
    uint64_t v29 = v27(v25, v26);
    uint64_t result = sub_22080B0D8((uint64_t)&v91);
    if (v29 < 0)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v31 = v28;
    if (v29)
    {
      char v32 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v68;
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = 0;
  char v32 = 2;
LABEL_7:
  uint64_t v33 = (uint64_t)v67;
  Swift::Int v34 = sub_2208EE804(0, v29, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v29, v32);
  Column.init(name:capacity:)(v33, v31, v34, v88, &v97);
  if (!*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  sub_22080B5B8(v21 + 32, (uint64_t)&v91);
  uint64_t v36 = v94;
  uint64_t v35 = v95;
  __swift_project_boxed_opaque_existential_1(&v91, v94);
  uint64_t v37 = *(void *)(v35 + 8);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = v38(v36, v37);
  uint64_t result = sub_22080B0D8((uint64_t)&v91);
  if (v39 < 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  if (!v39)
  {
LABEL_12:
    uint64_t v39 = 0;
    LODWORD(v40) = 2;
    goto LABEL_13;
  }
  LODWORD(v40) = 0;
LABEL_13:
  sub_220883950(0, v39, v40);
  uint64_t v80 = v22;
  uint64_t v81 = v21;
  uint64_t v79 = v23;
  if ((v42 & 1) != 0 || !v41)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v39, v40);
    uint64_t v91 = v97;
    uint64_t v92 = v98;
    uint64_t v93 = v99;
    swift_bridgeObjectRetain();
    swift_retain();
    DataFrame.replaceColumn<A>(_:with:)(v55, v56);
    swift_release();
    swift_bridgeObjectRelease();
    DataFrame.removeColumn(_:)(v58, v59, (uint64_t)&v91);
    sub_22080B0D8((uint64_t)&v91);
    DataFrame.removeColumn(_:)(v60, v61, (uint64_t)&v91);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)&v91);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Int v43 = 0;
    uint64_t v68 = a10;
    uint64_t v67 = a9;
    uint64_t v64 = (void (**)(uint64_t, uint64_t))(v66 + 1);
    ++v65;
    v66 = (void (**)(char *, uint64_t))(v62 + 1);
    uint64_t v62 = (void (**)(uint64_t, uint64_t))(v52 + 8);
    uint64_t v44 = (uint64_t)v54;
    uint64_t v45 = (uint64_t)v53;
    int v63 = v40;
    uint64_t v47 = (uint64_t)v89;
    uint64_t v46 = (uint64_t)v90;
    while (1)
    {
      uint64_t v48 = v41;
      uint64_t v91 = v81;
      uint64_t v92 = v80;
      uint64_t v93 = v79;
      uint64_t v94 = 0;
      uint64_t v95 = v39;
      char v96 = v40;
      Swift::Int v40 = DataFrame.Rows.index(after:)(v43);
      uint64_t v91 = v75;
      uint64_t v92 = v87;
      uint64_t v93 = v86;
      type metadata accessor for Column();
      Column.subscript.getter(v43, v47);
      uint64_t v91 = v74;
      uint64_t v92 = v85;
      uint64_t v93 = v84;
      type metadata accessor for Column();
      Column.subscript.getter(v43, v46);
      uint64_t v91 = v73;
      uint64_t v92 = v83;
      uint64_t v93 = v82;
      type metadata accessor for Column();
      Column.subscript.getter(v43, v44);
      uint64_t v49 = v100;
      v67(v47, v46, v44);
      if (v49) {
        break;
      }
      uint64_t v100 = 0;
      (*v64)(v44, v72);
      (*v65)(v90, v71);
      (*v66)(v89, v70);
      type metadata accessor for Column();
      Column.append(_:)(v45);
      (*v62)(v45, v69);
      Swift::Int v43 = v40;
      uint64_t v41 = v48;
      BOOL v50 = v40 == v48;
      LOBYTE(v40) = v63;
      if (v50) {
        goto LABEL_19;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*v64)(v44, v72);
    (*v65)(v90, v71);
    (*v66)(v89, v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v39, v63);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t DataFrame.combineColumns<A, B, C, D>(_:_:_:into:transform:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (**a4)(uint64_t, uint64_t), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v87 = a7;
  uint64_t v86 = a6;
  uint64_t v90 = a5;
  uint64_t v78 = a4;
  uint64_t v101 = a10;
  uint64_t v82 = sub_22093ED30();
  uint64_t v77 = *(void (***)(uint64_t, uint64_t))(v82 - 8);
  MEMORY[0x270FA5388](v82);
  v65 = (char *)&v62 - v16;
  uint64_t v81 = sub_22093ED30();
  uint64_t v75 = *(void (***)(uint64_t, uint64_t))(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v67 = (char *)&v62 - v17;
  uint64_t v80 = sub_22093ED30();
  uint64_t v63 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  v66 = (char *)&v62 - v18;
  uint64_t v100 = a11;
  uint64_t v79 = sub_22093ED30();
  uint64_t v62 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v64 = (char *)&v62 - v19;
  uint64_t v20 = *a1;
  uint64_t v21 = a1[1];
  uint64_t v23 = *a2;
  uint64_t v22 = a2[1];
  uint64_t v24 = *a3;
  uint64_t v25 = a3[1];
  uint64_t v27 = *v11;
  uint64_t v26 = v11[1];
  uint64_t v74 = v11;
  uint64_t v28 = v11[2];
  uint64_t v110 = v27;
  uint64_t v111 = v26;
  uint64_t v112 = v28;
  uint64_t v69 = v20;
  uint64_t v108 = v20;
  uint64_t v109 = v21;
  uint64_t v68 = v21;
  uint64_t v88 = a8;
  uint64_t v29 = v26;
  DataFrame.subscript.getter(&v108);
  uint64_t v85 = v102;
  uint64_t v98 = v103;
  uint64_t v95 = v104;
  uint64_t v110 = v27;
  uint64_t v111 = v29;
  uint64_t v112 = v28;
  uint64_t v71 = v23;
  uint64_t v108 = v23;
  uint64_t v109 = v22;
  uint64_t v70 = v22;
  uint64_t v89 = a9;
  DataFrame.subscript.getter(&v108);
  uint64_t v84 = v102;
  uint64_t v97 = v103;
  uint64_t v94 = v104;
  uint64_t v110 = v27;
  uint64_t v111 = v29;
  uint64_t v112 = v28;
  uint64_t v108 = v24;
  uint64_t v109 = v25;
  uint64_t v72 = v25;
  DataFrame.subscript.getter(&v108);
  uint64_t v83 = v102;
  uint64_t v96 = v103;
  uint64_t v93 = v104;
  uint64_t v30 = *(void *)(v27 + 16);
  uint64_t v99 = v28;
  uint64_t v73 = v24;
  if (v30)
  {
    sub_22080B5B8(v27 + 32, (uint64_t)&v102);
    uint64_t v32 = v105;
    uint64_t v31 = v106;
    __swift_project_boxed_opaque_existential_1(&v102, v105);
    uint64_t v33 = *(void *)(v31 + 8);
    Swift::Int v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 48);
    uint64_t v35 = v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = v34(v32, v33);
    uint64_t result = sub_22080B0D8((uint64_t)&v102);
    if (v36 < 0)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v38 = v35;
    if (v36)
    {
      char v39 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v38 = v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = 0;
  char v39 = 2;
LABEL_7:
  uint64_t v40 = (uint64_t)v78;
  Swift::Int v41 = sub_2208EE804(0, v36, v39);
  uint64_t v42 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v36, v39);
  Column.init(name:capacity:)(v40, v38, v41, v100, &v110);
  if (!*(void *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = v42;
    goto LABEL_12;
  }
  sub_22080B5B8(v27 + 32, (uint64_t)&v102);
  uint64_t v44 = v105;
  uint64_t v43 = v106;
  __swift_project_boxed_opaque_existential_1(&v102, v105);
  uint64_t v45 = *(void *)(v43 + 8);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v47 = v46(v44, v45);
  uint64_t result = sub_22080B0D8((uint64_t)&v102);
  if (v47 < 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v48 = v42;
  if (!v47)
  {
LABEL_12:
    uint64_t v47 = 0;
    int v49 = 2;
    goto LABEL_13;
  }
  int v49 = 0;
LABEL_13:
  sub_220883950(0, v47, v49);
  uint64_t v92 = v27;
  uint64_t v91 = v29;
  LODWORD(v90) = v49;
  if ((v51 & 1) != 0 || !v50)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v47, v90);
    uint64_t v108 = v69;
    uint64_t v109 = v68;
    uint64_t v102 = v110;
    uint64_t v103 = v111;
    uint64_t v104 = v112;
    DataFrame.replaceColumn<A, B>(_:with:)(&v108);
    uint64_t v108 = v71;
    uint64_t v109 = v70;
    DataFrame.removeColumn<A>(_:)(&v108);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v108 = v73;
    uint64_t v109 = v72;
    DataFrame.removeColumn<A>(_:)(&v108);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Int v52 = 0;
    uint64_t v76 = v77 + 1;
    uint64_t v77 = v75 + 1;
    uint64_t v78 = (void (**)(uint64_t, uint64_t))(v63 + 8);
    uint64_t v75 = (void (**)(uint64_t, uint64_t))(v62 + 8);
    uint64_t v53 = (uint64_t)v65;
    uint64_t v54 = (uint64_t)v67;
    uint64_t v55 = (uint64_t)v66;
    uint64_t v56 = (uint64_t)v64;
    while (1)
    {
      uint64_t v57 = v50;
      uint64_t v102 = v92;
      uint64_t v103 = v91;
      uint64_t v104 = v48;
      uint64_t v105 = 0;
      uint64_t v58 = v47;
      uint64_t v106 = v47;
      char v107 = v90;
      Swift::Int v59 = DataFrame.Rows.index(after:)(v52);
      uint64_t v102 = v85;
      uint64_t v103 = v98;
      uint64_t v104 = v95;
      type metadata accessor for Column();
      Column.subscript.getter(v52, v55);
      uint64_t v102 = v84;
      uint64_t v103 = v97;
      uint64_t v104 = v94;
      type metadata accessor for Column();
      Column.subscript.getter(v52, v54);
      uint64_t v102 = v83;
      uint64_t v103 = v96;
      uint64_t v104 = v93;
      type metadata accessor for Column();
      Column.subscript.getter(v52, v53);
      uint64_t v60 = v113;
      v86(v55, v54, v53);
      if (v60) {
        break;
      }
      uint64_t v113 = 0;
      (*v76)(v53, v82);
      (*v77)(v54, v81);
      (*v78)(v55, v80);
      type metadata accessor for Column();
      Column.append(_:)(v56);
      (*v75)(v56, v79);
      Swift::Int v52 = v59;
      uint64_t v50 = v57;
      BOOL v61 = v59 == v57;
      uint64_t v48 = v99;
      uint64_t v47 = v58;
      if (v61) {
        goto LABEL_19;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*v76)(v53, v82);
    (*v77)(v54, v81);
    (*v78)(v55, v80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v58, v90);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

unint64_t SFrameReadingError.description.getter()
{
  unint64_t result = 0xD000000000000037;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000001CLL;
      goto LABEL_6;
    case 2:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000017;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 3:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000019;
      goto LABEL_6;
    case 4:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_10;
    case 5:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001ALL;
      sub_22093E6C0();
      goto LABEL_10;
    case 6:
      return result;
    default:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000014;
LABEL_6:
      unint64_t v3 = v2;
LABEL_10:
      sub_22093E6C0();
      return v3;
  }
}

unint64_t SFrameReadingError.errorDescription.getter()
{
  return SFrameReadingError.description.getter();
}

unint64_t sub_22087EA34()
{
  return SFrameReadingError.description.getter();
}

uint64_t sub_22087EA80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u && a3 != 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SFrameReadingError(uint64_t a1)
{
  return sub_22087EAAC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_22087EAAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u && a3 != 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11TabularData18SFrameReadingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22087EA80(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SFrameReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22087EA80(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_22087EAAC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SFrameReadingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_22087EAAC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SFrameReadingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SFrameReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22087EC54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_22087EC6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)__n128 result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SFrameReadingError()
{
  return &type metadata for SFrameReadingError;
}

unint64_t sub_22087EC94(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!a1) {
    return 0;
  }
  uint64_t v3 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v5 = a2 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t result = sub_22093E690();
  if (v7)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  if (result >> 14 == 4 * v5)
  {
    uint64_t v8 = sub_22093E770();
    uint64_t v3 = MEMORY[0x223C69D50](v8);
    swift_bridgeObjectRelease();
    return v3;
  }
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t result = sub_22093E690();
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = sub_22093E770();
      uint64_t v3 = MEMORY[0x223C69D50](v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22087EE08(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7 >= v3) {
    uint64_t v8 = a2 - result;
  }
  else {
    uint64_t v8 = *(void *)(a3 + 16);
  }
  uint64_t v33 = MEMORY[0x263F8EE78];
  unint64_t result = (uint64_t)sub_220826FB8(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0) {
    goto LABEL_42;
  }
  uint64_t v27 = a3;
  unint64_t v28 = v7;
  uint64_t v30 = v6;
  unint64_t v26 = v8;
  if (v8)
  {
    unint64_t result = swift_bridgeObjectRetain();
    if (v5 < v6)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v8 < (unint64_t)v3) {
      uint64_t v3 = v8;
    }
    char v9 = (uint64_t *)(a3 + 40);
    uint64_t v10 = v6;
    uint64_t v31 = v5;
    while (v5 != v10)
    {
      if (!v3) {
        goto LABEL_37;
      }
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      unint64_t v14 = *(void *)(v33 + 16);
      unint64_t v13 = *(void *)(v33 + 24);
      unint64_t result = swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        unint64_t result = (uint64_t)sub_220826FB8((char *)(v13 > 1), v14 + 1, 1);
      }
      *(void *)(v33 + 16) = v14 + 1;
      uint64_t v15 = v33 + 32 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      *(void *)(v15 + 48) = v10;
      *(unsigned char *)(v15 + 56) = 7;
      --v3;
      v9 += 2;
      ++v10;
      --v8;
      uint64_t v5 = v31;
      if (!v8) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = v6;
LABEL_18:
  if (v10 == v5)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v33;
  }
  if (v5 >= v30)
  {
    uint64_t v16 = 0;
    if (v10 <= v5) {
      uint64_t v17 = v5;
    }
    else {
      uint64_t v17 = v10;
    }
    uint64_t v32 = v17 - v10;
    unint64_t v18 = v28 - v26;
    if (v28 >= v26) {
      unint64_t v19 = v28 - v26;
    }
    else {
      unint64_t v19 = 0;
    }
    unint64_t v29 = v19;
    uint64_t v20 = (uint64_t *)(v27 + 16 * v26 + 40);
    while (v10 >= v30)
    {
      if (v32 == v16) {
        goto LABEL_39;
      }
      if (v18 != v16)
      {
        if (v29 == v16) {
          goto LABEL_40;
        }
        uint64_t v21 = *(v20 - 1);
        uint64_t v22 = *v20;
        unint64_t v23 = *(void *)(v33 + 16);
        unint64_t v24 = *(void *)(v33 + 24);
        unint64_t result = swift_bridgeObjectRetain();
        if (v23 >= v24 >> 1) {
          unint64_t result = (uint64_t)sub_220826FB8((char *)(v24 > 1), v23 + 1, 1);
        }
        *(void *)(v33 + 16) = v23 + 1;
        uint64_t v25 = v33 + 32 * v23;
        *(void *)(v25 + 32) = v21;
        *(void *)(v25 + 40) = v22;
        *(void *)(v25 + 48) = v10 + v16;
        *(unsigned char *)(v25 + 56) = 7;
        ++v16;
        v20 += 2;
        if (v10 - v5 + v16) {
          continue;
        }
      }
      goto LABEL_19;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t DataFrame.init(contentsOfCSVFile:columns:rows:types:options:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v45 = a6;
  char v11 = *a7;
  uint64_t v30 = *((void *)a7 + 1);
  uint64_t v12 = *((void *)a7 + 3);
  uint64_t v29 = *((void *)a7 + 2);
  char v13 = a7[32];
  uint64_t v14 = *((void *)a7 + 5);
  char v25 = a7[48];
  char v15 = a7[49];
  char v16 = a7[51];
  char v23 = a7[52];
  char v24 = a7[50];
  uint64_t v17 = sub_22093DFB0();
  if (v8)
  {
    uint64_t v19 = sub_22093DFA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v32[0] = v11;
    uint64_t v33 = v30;
    uint64_t v34 = v29;
    uint64_t v35 = v12;
    char v36 = v13;
    uint64_t v37 = v14;
    char v38 = v25;
    char v39 = v15;
    char v40 = v24;
    char v41 = v16;
    char v42 = v23;
    DataFrame.init(csvData:columns:rows:types:options:)(v17, v18, a2, a3, a4, a5 & 1, v45, (uint64_t)v32, (uint64_t)&v43);
    uint64_t v21 = sub_22093DFA0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
    uint64_t v22 = v44;
    *(_OWORD *)a8 = v43;
    *(void *)(a8 + 16) = v22;
  }
  return result;
}

uint64_t DataFrame.init(csvData:columns:rows:types:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v109 = a7;
  uint64_t v11 = *(void *)(a8 + 8);
  uint64_t v12 = *(void *)(a8 + 16);
  uint64_t v13 = *(void *)(a8 + 24);
  char v14 = *(unsigned char *)(a8 + 32);
  uint64_t v15 = *(void *)(a8 + 40);
  char v16 = *(unsigned char *)(a8 + 48);
  char v17 = *(unsigned char *)(a8 + 49);
  char v18 = *(unsigned char *)(a8 + 50);
  char v19 = *(unsigned char *)(a8 + 51);
  char v20 = *(unsigned char *)(a8 + 52);
  char v75 = *(unsigned char *)a8;
  LOBYTE(v83) = *(unsigned char *)a8;
  *((void *)&v83 + 1) = v11;
  uint64_t v84 = v12;
  uint64_t v85 = v13;
  char v69 = v16;
  char v70 = v14;
  char v86 = v14;
  uint64_t v87 = v15;
  char v88 = v16;
  char v68 = v17;
  char v89 = v17;
  char v90 = v18;
  char v91 = v19;
  char v92 = v20;
  sub_22080B7F4(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22084C8DC(a1, a2, (char *)&v83, &v93);
  if (v79)
  {
    sub_22080B88C(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v56 = v20;
    char v57 = v19;
    char v58 = v18;
    uint64_t v64 = v12;
    uint64_t v65 = v11;
    uint64_t v66 = v13;
    uint64_t v61 = a1;
    unint64_t v59 = a2;
    unint64_t v21 = v93.n128_u64[0];
    char v54 = v100;
    unsigned __int8 v55 = v93.n128_u8[8];
    uint64_t v62 = v95;
    uint64_t v63 = v94;
    uint64_t v60 = v96;
    char v73 = v97;
    char v74 = v99;
    char v53 = v101;
    uint64_t v45 = v107;
    uint64_t v46 = v106;
    uint64_t v47 = v105;
    uint64_t v48 = v104;
    char v49 = v103;
    char v50 = v102;
    uint64_t v51 = v108;
    uint64_t v52 = v98;
    uint64_t v25 = v15;
    uint64_t v24 = v12;
    uint64_t v22 = sub_220880D10((uint64_t)&v93, v75);
    uint64_t v26 = sub_2208810B0(v22, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v27 = v21;
    uint64_t v80 = *(void *)(v26 + 16);
    if (v80)
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0;
      uint64_t result = v109;
      char v30 = a6;
      char v31 = v73;
      char v32 = v74;
      while (v29 < *(void *)(v26 + 16))
      {
        if (*(void *)(result + 16))
        {
          uint64_t v33 = v26;
          uint64_t v34 = result;
          uint64_t v35 = v25;
          uint64_t v37 = *(void *)(v33 + v28 + 32);
          uint64_t v36 = *(void *)(v33 + v28 + 40);
          uint64_t v38 = *(void *)(v33 + v28 + 48);
          swift_bridgeObjectRetain_n();
          uint64_t v39 = sub_22081D290(v37, v36);
          if (v40)
          {
            char v78 = *(unsigned char *)(*(void *)(v34 + 56) + v39);
            swift_bridgeObjectRelease();
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v26 = v33;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_22080ABAC(v33);
              uint64_t v26 = result;
            }
            char v32 = v74;
            if (v29 >= *(void *)(v26 + 16)) {
              goto LABEL_19;
            }
            uint64_t v41 = v26 + v28;
            *(void *)(v41 + 32) = v37;
            *(void *)(v41 + 40) = v36;
            *(void *)(v41 + 48) = v38;
            *(unsigned char *)(v41 + 56) = v78;
            uint64_t v25 = v35;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v25 = v35;
            uint64_t v26 = v33;
            char v32 = v74;
          }
          swift_bridgeObjectRelease();
          uint64_t result = v109;
          char v30 = a6;
          char v31 = v73;
        }
        ++v29;
        v28 += 32;
        if (v80 == v29)
        {
          uint64_t v42 = v26;
          swift_bridgeObjectRelease();
          uint64_t v24 = v64;
          uint64_t v43 = v65;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
    else
    {
      uint64_t v42 = v26;
      swift_bridgeObjectRelease();
      uint64_t v43 = v65;
      char v30 = a6;
      char v31 = v73;
      char v32 = v74;
LABEL_17:
      v93.n128_u64[0] = v27;
      v93.n128_u8[8] = v55;
      uint64_t v94 = v63;
      uint64_t v95 = v62;
      uint64_t v96 = v60;
      char v97 = v31;
      uint64_t v98 = v52;
      char v99 = v32;
      char v100 = v54;
      char v101 = v53;
      char v102 = v50;
      char v103 = v49;
      uint64_t v104 = v48;
      uint64_t v105 = v47;
      uint64_t v106 = v46;
      uint64_t v107 = v45;
      uint64_t v108 = v51;
      LOBYTE(v83) = v75;
      *((void *)&v83 + 1) = v43;
      uint64_t v84 = v24;
      uint64_t v85 = v66;
      char v86 = v70;
      uint64_t v87 = v25;
      char v88 = v69;
      char v89 = v68;
      char v90 = v58;
      char v91 = v57;
      char v92 = v56;
      swift_bridgeObjectRetain();
      sub_22087F894((uint64_t)&v93, a4, a5, v30 & 1, v42, &v83, (uint64_t)&v81);
      sub_22080B88C(v61, v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v44 = v82;
      *(_OWORD *)a9 = v81;
      *(void *)(a9 + 16) = v44;
    }
  }
  return result;
}

uint64_t sub_22087F894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, long long *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v62 = a7;
  uint64_t v63 = (void *)a5;
  char v12 = a4 & 1;
  uint64_t v13 = sub_22093DE10();
  char v58 = *(char **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(_OWORD *)(a1 + 80);
  v74[4] = *(_OWORD *)(a1 + 64);
  long long v75 = v16;
  uint64_t v76 = *(void *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 16);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v74[2] = *(_OWORD *)(a1 + 32);
  v74[3] = v18;
  long long v20 = a6[1];
  long long v19 = a6[2];
  long long v21 = *a6;
  *(void *)&v78[13] = *(void *)((char *)a6 + 45);
  v77[1] = v20;
  *(_OWORD *)char v78 = v19;
  v77[0] = v21;
  uint64_t result = sub_220881348(a2, a3, v12, v75, v21);
  if (!v7)
  {
    uint64_t v24 = result;
    uint64_t v25 = v23;
    uint64_t v26 = v58;
    uint64_t v59 = v13;
    sub_2208813FC((uint64_t)v74);
    sub_220881470((uint64_t)v77);
    unint64_t v27 = (void *)sub_220880BEC((uint64_t)v63, (uint64_t)v74, (uint64_t)v77, v24, v25);
    sub_2208814C4((uint64_t)v77);
    sub_220881518((uint64_t)v74);
    sub_220909EF8(MEMORY[0x263F8EE88], 46, 0xE100000000000000, v73);
    uint64_t v28 = (char *)v27[2];
    uint64_t v61 = 0;
    if (v28)
    {
      uint64_t v60 = v28;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_4:
        unint64_t v29 = v26;
        uint64_t v26 = 0;
        uint64_t v30 = (uint64_t)(v27 + 4);
        uint64_t v57 = v24;
        char v58 = v29 + 8;
        uint64_t v56 = v25;
        uint64_t v54 = v25 - v24;
        BOOL v31 = __OFSUB__(v25, v24);
        BOOL v55 = v31;
        uint64_t v63 = v27;
        char v32 = v60;
        while (1)
        {
          if (v32 == v26) {
            goto LABEL_39;
          }
          if ((unint64_t)v26 >= v27[2]) {
            goto LABEL_40;
          }
          sub_22083B5D0(v30, (uint64_t)&v69);
          uint64_t v33 = v71;
          uint64_t v34 = v72;
          __swift_project_boxed_opaque_existential_1(&v69, v71);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 24))(v66, v33, v34);
          uint64_t v36 = v67;
          uint64_t v35 = v68;
          __swift_project_boxed_opaque_existential_1(v66, v67);
          uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)(v35 + 8) + 8))(v36);
          uint64_t v24 = v38;
          sub_22080B0D8((uint64_t)v66);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
          uint64_t v69 = v37;
          unint64_t v70 = v24;
          sub_22093DE00();
          sub_220859C80();
          uint64_t v39 = sub_22093ED80();
          unint64_t v41 = v40;
          (*(void (**)(char *, uint64_t))v58)(v15, v59);
          swift_bridgeObjectRelease();
          uint64_t v42 = HIBYTE(v41) & 0xF;
          if ((v41 & 0x2000000000000000) == 0) {
            uint64_t v42 = v39 & 0xFFFFFFFFFFFFLL;
          }
          if (v42)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = v37;
            uint64_t v25 = v24;
          }
          else
          {
            uint64_t v69 = 0x206E6D756C6F43;
            unint64_t v70 = 0xE700000000000000;
            v66[0] = v26;
            sub_22093F1A0();
            sub_22093E6C0();
            swift_bridgeObjectRelease();
            uint64_t v43 = v69;
            uint64_t v25 = v70;
          }
          unint64_t v27 = (void *)sub_220909CF0(v43, v25);
          uint64_t v45 = v44;
          swift_bridgeObjectRelease();
          BOOL v46 = v27 == (void *)v37 && v45 == v24;
          if (v46)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v25 = sub_22093F250();
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0)
            {
              uint64_t v47 = v57;
              if ((unint64_t)v26 >= v63[2]) {
                goto LABEL_43;
              }
              uint64_t v24 = *(void *)(v30 + 24);
              uint64_t v25 = *(void *)(v30 + 32);
              __swift_mutable_project_boxed_opaque_existential_1(v30, v24);
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v25 + 40))(v27, v45, v24, v25);
              unint64_t v27 = v63;
              goto LABEL_26;
            }
            swift_bridgeObjectRelease();
          }
          unint64_t v27 = v63;
          uint64_t v47 = v57;
LABEL_26:
          BOOL v46 = v47 == v56;
          uint64_t v48 = v62;
          if (!v46)
          {
            if (v55) {
              goto LABEL_41;
            }
            if ((unint64_t)v26 >= v27[2]) {
              goto LABEL_42;
            }
            uint64_t v24 = *(void *)(v30 + 24);
            uint64_t v25 = *(void *)(v30 + 32);
            __swift_mutable_project_boxed_opaque_existential_1(v30, v24);
            uint64_t v49 = v61;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 80))(v54, v24, v25);
            uint64_t v61 = v49;
            if (v49)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
          }
          char v32 = v60;
          ++v26;
          v30 += 40;
          if (v60 == v26) {
            goto LABEL_32;
          }
        }
      }
LABEL_44:
      unint64_t v27 = sub_22080AB98(v27);
      goto LABEL_4;
    }
    uint64_t v48 = v62;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v50 = MEMORY[0x263F8EE78];
    unint64_t v51 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *(void *)&long long v64 = v50;
    *((void *)&v64 + 1) = v50;
    unint64_t v65 = v51;
    uint64_t v26 = (char *)v27[2];
    if (v26)
    {
      uint64_t v15 = 0;
      uint64_t v52 = (uint64_t)(v27 + 4);
      while ((unint64_t)v15 < v27[2])
      {
        ++v15;
        sub_22083B5D0(v52, (uint64_t)&v69);
        uint64_t v24 = v71;
        uint64_t v25 = v72;
        __swift_project_boxed_opaque_existential_1(&v69, v71);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 24))(v66, v24, v25);
        DataFrame.append(column:)((uint64_t)v66);
        sub_22080B0D8((uint64_t)v66);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
        v52 += 40;
        if (v26 == v15) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_36:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v53 = v65;
    *(_OWORD *)uint64_t v48 = v64;
    *(void *)(v48 + 16) = v53;
  }
  return result;
}

double sub_22087FE5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  char v125 = *(unsigned char *)(a1 + 8);
  char v126 = *(unsigned char *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v127 = *(unsigned char *)(a1 + 56);
  char v128 = *(unsigned char *)(a1 + 57);
  char v129 = *(unsigned char *)(a1 + 58);
  char v12 = *(unsigned char *)(a1 + 59);
  char v13 = *(unsigned char *)(a1 + 60);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 96);
  char v19 = *(unsigned char *)a2;
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v137 = *(void *)(a2 + 24);
  char v22 = *(unsigned char *)(a2 + 32);
  uint64_t v23 = *(void *)(a2 + 40);
  char v24 = *(unsigned char *)(a2 + 48);
  char v25 = *(unsigned char *)(a2 + 49);
  char v26 = *(unsigned char *)(a2 + 50);
  char v27 = *(unsigned char *)(a2 + 51);
  char v28 = *(unsigned char *)(a2 + 52);
  uint64_t v124 = *(void *)v5;
  uint64_t v29 = *(void *)(v5 + 16);
  double v131 = *(double *)(v5 + 8);
  switch(*(unsigned char *)(v5 + 24))
  {
    case 1:
      char v86 = *(unsigned char *)(a1 + 60);
      uint64_t v89 = *(void *)(a1 + 64);
      uint64_t v92 = *(void *)(a1 + 72);
      uint64_t v95 = *(void *)(a1 + 80);
      uint64_t v98 = *(void *)(a1 + 88);
      char v101 = *(unsigned char *)a2;
      char v104 = *(unsigned char *)(a2 + 32);
      char v107 = *(unsigned char *)(a2 + 48);
      char v110 = *(unsigned char *)(a2 + 49);
      char v113 = *(unsigned char *)(a2 + 50);
      char v116 = *(unsigned char *)(a2 + 51);
      char v119 = *(unsigned char *)(a2 + 52);
      uint64_t v122 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for BooleanColumnProcessor;
      a5[4] = (uint64_t)&off_26D222C08;
      uint64_t v135 = v21;
      uint64_t v39 = v20;
      uint64_t v40 = v11;
      uint64_t v41 = v10;
      uint64_t v42 = swift_allocObject();
      *a5 = v42;
      swift_bridgeObjectRetain();
      uint64_t v77 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_2208BAF40(v135);
      swift_bridgeObjectRelease();
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v73 = sub_2208BAF40(v43);
      swift_bridgeObjectRelease();
      uint64_t v44 = swift_bridgeObjectRetain();
      uint64_t v72 = sub_2208BAF40(v44);
      swift_bridgeObjectRelease();
      if (__OFSUB__(a4, a3)) {
        goto LABEL_20;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v45 = MEMORY[0x263F8EE78];
      sub_220832810(MEMORY[0x263F8EE78]);
      *((void *)&v150 + 1) = v46;
      sub_2208F1904(a4 - a3);
      *(void *)(v42 + 16) = v7;
      *(unsigned char *)(v42 + 24) = v125;
      *(void *)(v42 + 32) = v77;
      *(void *)(v42 + 40) = v9;
      *(void *)(v42 + 48) = v41;
      *(unsigned char *)(v42 + 56) = v126;
      uint64_t v47 = v149;
      long long v48 = v150;
      *(void *)(v42 + 64) = v40;
      *(unsigned char *)(v42 + 72) = v127;
      *(unsigned char *)(v42 + 73) = v128;
      *(unsigned char *)(v42 + 74) = v129;
      *(unsigned char *)(v42 + 75) = v12;
      *(unsigned char *)(v42 + 76) = v86;
      *(void *)(v42 + 80) = v89;
      *(void *)(v42 + 88) = v92;
      *(void *)(v42 + 96) = v95;
      *(void *)(v42 + 104) = v98;
      *(void *)(v42 + 112) = v18;
      *(void *)(v42 + 120) = v74;
      *(void *)(v42 + 128) = v73;
      *(void *)(v42 + 136) = v72;
      *(void *)(v42 + 144) = v45;
      *(unsigned char *)(v42 + 152) = v101;
      *(void *)(v42 + 160) = v135;
      *(void *)(v42 + 168) = v39;
      *(void *)(v42 + 176) = v137;
      *(unsigned char *)(v42 + 184) = v104;
      *(void *)(v42 + 192) = v23;
      *(unsigned char *)(v42 + 200) = v107;
      *(unsigned char *)(v42 + 201) = v110;
      *(unsigned char *)(v42 + 202) = v113;
      *(unsigned char *)(v42 + 203) = v116;
      *(unsigned char *)(v42 + 204) = v119;
      *(void *)(v42 + 208) = v122;
      *(void *)(v42 + 216) = a3;
      *(void *)(v42 + 224) = a4;
      *(void *)(v42 + 232) = 0;
      *(void *)(v42 + 240) = v47;
      *(_OWORD *)(v42 + 248) = v48;
      return *(double *)&v48;
    case 2:
      char v84 = *(unsigned char *)(a1 + 59);
      char v85 = *(unsigned char *)(a1 + 60);
      uint64_t v88 = *(void *)(a1 + 64);
      uint64_t v91 = *(void *)(a1 + 72);
      uint64_t v94 = *(void *)(a1 + 80);
      uint64_t v97 = *(void *)(a1 + 88);
      char v100 = *(unsigned char *)a2;
      char v103 = *(unsigned char *)(a2 + 32);
      char v106 = *(unsigned char *)(a2 + 48);
      char v109 = *(unsigned char *)(a2 + 49);
      char v112 = *(unsigned char *)(a2 + 50);
      char v115 = *(unsigned char *)(a2 + 51);
      char v118 = *(unsigned char *)(a2 + 52);
      uint64_t v121 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for FloatColumnProcessor;
      a5[4] = (uint64_t)&off_26D224D70;
      uint64_t v134 = v23;
      uint64_t v49 = v20;
      uint64_t v50 = v11;
      uint64_t v51 = v10;
      uint64_t v33 = swift_allocObject();
      *a5 = v33;
      uint64_t v80 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v51;
      swift_bridgeObjectRetain();
      uint64_t v82 = v50;
      swift_bridgeObjectRetain();
      uint64_t v83 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v49;
      swift_bridgeObjectRetain();
      uint64_t v34 = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_2208BAF40(v21);
      swift_bridgeObjectRelease();
      uint64_t v36 = a4;
      uint64_t v35 = a3;
      if (__OFSUB__(a4, a3)) {
        goto LABEL_21;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_220832AC8(MEMORY[0x263F8EE78]);
      *((void *)&v150 + 1) = v52;
      sub_2208F1B30(a4 - a3);
      goto LABEL_16;
    case 3:
      char v84 = *(unsigned char *)(a1 + 59);
      char v85 = *(unsigned char *)(a1 + 60);
      uint64_t v88 = *(void *)(a1 + 64);
      uint64_t v91 = *(void *)(a1 + 72);
      uint64_t v94 = *(void *)(a1 + 80);
      uint64_t v97 = *(void *)(a1 + 88);
      char v100 = *(unsigned char *)a2;
      char v103 = *(unsigned char *)(a2 + 32);
      char v106 = *(unsigned char *)(a2 + 48);
      char v109 = *(unsigned char *)(a2 + 49);
      char v112 = *(unsigned char *)(a2 + 50);
      char v115 = *(unsigned char *)(a2 + 51);
      char v118 = *(unsigned char *)(a2 + 52);
      uint64_t v121 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for DoubleColumnProcessor;
      a5[4] = (uint64_t)&off_26D224DD0;
      uint64_t v134 = v23;
      uint64_t v53 = v20;
      uint64_t v54 = v11;
      uint64_t v55 = v10;
      uint64_t v33 = swift_allocObject();
      *a5 = v33;
      uint64_t v80 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v55;
      swift_bridgeObjectRetain();
      uint64_t v82 = v54;
      swift_bridgeObjectRetain();
      uint64_t v83 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v53;
      swift_bridgeObjectRetain();
      uint64_t v34 = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_2208BAF40(v21);
      swift_bridgeObjectRelease();
      uint64_t v36 = a4;
      uint64_t v35 = a3;
      if (__OFSUB__(a4, a3)) {
        goto LABEL_22;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_220832520(MEMORY[0x263F8EE78]);
      *((void *)&v150 + 1) = v56;
      sub_2208F1888(a4 - a3);
      goto LABEL_16;
    case 4:
      char v87 = *(unsigned char *)(a1 + 60);
      uint64_t v90 = *(void *)(a1 + 64);
      uint64_t v93 = *(void *)(a1 + 72);
      uint64_t v96 = *(void *)(a1 + 80);
      uint64_t v99 = *(void *)(a1 + 88);
      char v102 = *(unsigned char *)a2;
      char v105 = *(unsigned char *)(a2 + 32);
      char v108 = *(unsigned char *)(a2 + 48);
      char v111 = *(unsigned char *)(a2 + 49);
      char v114 = *(unsigned char *)(a2 + 50);
      char v117 = *(unsigned char *)(a2 + 51);
      char v120 = *(unsigned char *)(a2 + 52);
      uint64_t v123 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for DateColumnProcessor;
      a5[4] = (uint64_t)&off_26D223DA0;
      uint64_t v136 = v21;
      uint64_t v57 = v23;
      uint64_t v58 = v11;
      uint64_t v59 = v10;
      uint64_t v60 = swift_allocObject();
      *a5 = v60;
      swift_bridgeObjectRetain();
      uint64_t v78 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_2208BAF40(v136);
      swift_bridgeObjectRelease();
      if (__OFSUB__(a4, a3)) {
        goto LABEL_23;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      swift_bridgeObjectRetain();
      uint64_t v61 = MEMORY[0x263F8EE78];
      *((void *)&v150 + 1) = sub_220832D70(MEMORY[0x263F8EE78]);
      sub_2208F1938(a4 - a3);
      *(void *)(v60 + 16) = v7;
      *(unsigned char *)(v60 + 24) = v125;
      *(void *)(v60 + 32) = v78;
      *(void *)(v60 + 40) = v9;
      uint64_t v62 = v149;
      LOBYTE(v149) = 1;
      long long v48 = v150;
      *(void *)(v60 + 48) = v59;
      *(unsigned char *)(v60 + 56) = v126;
      *(void *)(v60 + 64) = v58;
      *(unsigned char *)(v60 + 72) = v127;
      *(unsigned char *)(v60 + 73) = v128;
      *(unsigned char *)(v60 + 74) = v129;
      *(unsigned char *)(v60 + 75) = v12;
      *(unsigned char *)(v60 + 76) = v87;
      *(void *)(v60 + 80) = v90;
      *(void *)(v60 + 88) = v93;
      *(void *)(v60 + 96) = v96;
      *(void *)(v60 + 104) = v99;
      *(void *)(v60 + 112) = v18;
      *(void *)(v60 + 120) = v75;
      *(void *)(v60 + 128) = v61;
      *(unsigned char *)(v60 + 136) = v102;
      *(void *)(v60 + 144) = v136;
      *(void *)(v60 + 152) = v20;
      *(void *)(v60 + 160) = v137;
      *(unsigned char *)(v60 + 168) = v105;
      *(void *)(v60 + 176) = v57;
      *(unsigned char *)(v60 + 184) = v108;
      *(unsigned char *)(v60 + 185) = v111;
      *(unsigned char *)(v60 + 186) = v114;
      *(unsigned char *)(v60 + 187) = v117;
      *(unsigned char *)(v60 + 188) = v120;
      *(void *)(v60 + 192) = v57;
      *(void *)(v60 + 200) = 0;
      *(unsigned char *)(v60 + 208) = v149;
      *(void *)(v60 + 216) = v123;
      *(void *)(v60 + 224) = a3;
      *(void *)(v60 + 232) = a4;
      *(void *)(v60 + 240) = 0;
      *(void *)(v60 + 248) = v62;
      *(_OWORD *)(v60 + 256) = v48;
      return *(double *)&v48;
    case 5:
      char v84 = *(unsigned char *)(a1 + 59);
      char v85 = *(unsigned char *)(a1 + 60);
      uint64_t v88 = *(void *)(a1 + 64);
      uint64_t v91 = *(void *)(a1 + 72);
      uint64_t v94 = *(void *)(a1 + 80);
      uint64_t v97 = *(void *)(a1 + 88);
      char v100 = *(unsigned char *)a2;
      char v103 = *(unsigned char *)(a2 + 32);
      char v106 = *(unsigned char *)(a2 + 48);
      char v109 = *(unsigned char *)(a2 + 49);
      char v112 = *(unsigned char *)(a2 + 50);
      char v115 = *(unsigned char *)(a2 + 51);
      char v118 = *(unsigned char *)(a2 + 52);
      uint64_t v121 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for StringColumnProcessor;
      a5[4] = (uint64_t)&off_26D222C68;
      uint64_t v134 = v23;
      uint64_t v63 = v20;
      uint64_t v64 = v11;
      uint64_t v65 = v10;
      uint64_t v33 = swift_allocObject();
      *a5 = v33;
      uint64_t v80 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v65;
      swift_bridgeObjectRetain();
      uint64_t v82 = v64;
      swift_bridgeObjectRetain();
      uint64_t v83 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v63;
      swift_bridgeObjectRetain();
      uint64_t v34 = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_2208BAF40(v21);
      swift_bridgeObjectRelease();
      uint64_t v36 = a4;
      uint64_t v35 = a3;
      if (__OFSUB__(a4, a3)) {
        goto LABEL_24;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v37 = MEMORY[0x263F8EE78];
      *((void *)&v150 + 1) = sub_2208322FC(MEMORY[0x263F8EE78]);
      sub_2208F18BC(a4 - a3);
      goto LABEL_16;
    case 6:
      char v84 = *(unsigned char *)(a1 + 59);
      char v85 = *(unsigned char *)(a1 + 60);
      uint64_t v88 = *(void *)(a1 + 64);
      uint64_t v91 = *(void *)(a1 + 72);
      uint64_t v94 = *(void *)(a1 + 80);
      uint64_t v97 = *(void *)(a1 + 88);
      char v100 = *(unsigned char *)a2;
      char v103 = *(unsigned char *)(a2 + 32);
      char v106 = *(unsigned char *)(a2 + 48);
      char v109 = *(unsigned char *)(a2 + 49);
      char v112 = *(unsigned char *)(a2 + 50);
      char v115 = *(unsigned char *)(a2 + 51);
      char v118 = *(unsigned char *)(a2 + 52);
      uint64_t v121 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for BinaryColumnProcessor;
      a5[4] = (uint64_t)&off_26D222CC8;
      uint64_t v134 = v23;
      uint64_t v66 = v20;
      uint64_t v67 = v11;
      uint64_t v68 = v10;
      uint64_t v33 = swift_allocObject();
      *a5 = v33;
      uint64_t v80 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v68;
      swift_bridgeObjectRetain();
      uint64_t v82 = v67;
      swift_bridgeObjectRetain();
      uint64_t v83 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v66;
      swift_bridgeObjectRetain();
      uint64_t v34 = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_2208BAF40(v21);
      swift_bridgeObjectRelease();
      uint64_t v36 = a4;
      uint64_t v35 = a3;
      if (__OFSUB__(a4, a3)) {
        goto LABEL_25;
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v37 = MEMORY[0x263F8EE78];
      *((void *)&v150 + 1) = sub_2208331B0(MEMORY[0x263F8EE78]);
      sub_2208F1C7C(a4 - a3);
      goto LABEL_16;
    case 7:
      uint64_t v149 = *(void *)a1;
      LOBYTE(v150) = v125;
      *((void *)&v150 + 1) = v8;
      uint64_t v151 = v9;
      uint64_t v152 = v10;
      char v153 = v126;
      uint64_t v154 = v11;
      char v155 = v127;
      char v156 = v128;
      char v157 = v129;
      char v158 = v12;
      char v159 = v13;
      uint64_t v160 = v15;
      uint64_t v161 = v14;
      uint64_t v162 = v17;
      uint64_t v163 = v16;
      uint64_t v164 = v18;
      v138[0] = v19;
      uint64_t v139 = v21;
      uint64_t v140 = v20;
      uint64_t v141 = v137;
      char v142 = v22;
      uint64_t v143 = v23;
      char v144 = v24;
      char v145 = v25;
      char v146 = v26;
      char v147 = v27;
      char v148 = v28;
      a5[3] = (uint64_t)&type metadata for InferringColumnProcessor;
      a5[4] = (uint64_t)&off_26D2221E8;
      uint64_t v70 = swift_allocObject();
      uint64_t v130 = v70 + 16;
      *a5 = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(double *)&long long v48 = sub_2208539D4(&v149, v138, v124, v131, v29, a3, a4, v130);
      return *(double *)&v48;
    default:
      char v84 = *(unsigned char *)(a1 + 59);
      char v85 = *(unsigned char *)(a1 + 60);
      uint64_t v88 = *(void *)(a1 + 64);
      uint64_t v91 = *(void *)(a1 + 72);
      uint64_t v94 = *(void *)(a1 + 80);
      uint64_t v97 = *(void *)(a1 + 88);
      char v100 = *(unsigned char *)a2;
      char v103 = *(unsigned char *)(a2 + 32);
      char v106 = *(unsigned char *)(a2 + 48);
      char v109 = *(unsigned char *)(a2 + 49);
      char v112 = *(unsigned char *)(a2 + 50);
      char v115 = *(unsigned char *)(a2 + 51);
      char v118 = *(unsigned char *)(a2 + 52);
      uint64_t v121 = *(void *)(v5 + 16);
      a5[3] = (uint64_t)&type metadata for IntegerColumnProcessor;
      a5[4] = (uint64_t)&off_26D222BA8;
      uint64_t v134 = v23;
      uint64_t v30 = v20;
      uint64_t v31 = v11;
      uint64_t v32 = v10;
      uint64_t v33 = swift_allocObject();
      *a5 = v33;
      uint64_t v80 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v32;
      swift_bridgeObjectRetain();
      uint64_t v82 = v31;
      swift_bridgeObjectRetain();
      uint64_t v83 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v30;
      swift_bridgeObjectRetain();
      uint64_t v34 = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_2208BAF40(v21);
      swift_bridgeObjectRelease();
      uint64_t v36 = a4;
      uint64_t v35 = a3;
      if (__OFSUB__(a4, a3))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x220880BCCLL);
      }
      uint64_t v149 = v124;
      *(double *)&long long v150 = v131;
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_220831BD0(MEMORY[0x263F8EE78]);
      *((void *)&v150 + 1) = v38;
      sub_2208F180C(a4 - a3);
LABEL_16:
      *(void *)(v33 + 16) = v80;
      *(unsigned char *)(v33 + 24) = v125;
      *(void *)(v33 + 32) = v8;
      *(void *)(v33 + 40) = v9;
      uint64_t v69 = v149;
      long long v48 = v150;
      *(void *)(v33 + 48) = v81;
      *(unsigned char *)(v33 + 56) = v126;
      *(void *)(v33 + 64) = v82;
      *(unsigned char *)(v33 + 72) = v127;
      *(unsigned char *)(v33 + 73) = v128;
      *(unsigned char *)(v33 + 74) = v129;
      *(unsigned char *)(v33 + 75) = v84;
      *(unsigned char *)(v33 + 76) = v85;
      *(void *)(v33 + 80) = v88;
      *(void *)(v33 + 88) = v91;
      *(void *)(v33 + 96) = v94;
      *(void *)(v33 + 104) = v97;
      *(void *)(v33 + 112) = v83;
      *(void *)(v33 + 120) = v76;
      *(void *)(v33 + 128) = v37;
      *(unsigned char *)(v33 + 136) = v100;
      *(void *)(v33 + 144) = v21;
      *(void *)(v33 + 152) = v79;
      *(void *)(v33 + 160) = v34;
      *(unsigned char *)(v33 + 168) = v103;
      *(void *)(v33 + 176) = v134;
      *(unsigned char *)(v33 + 184) = v106;
      *(unsigned char *)(v33 + 185) = v109;
      *(unsigned char *)(v33 + 186) = v112;
      *(unsigned char *)(v33 + 187) = v115;
      *(unsigned char *)(v33 + 188) = v118;
      *(void *)(v33 + 192) = v121;
      *(void *)(v33 + 200) = v35;
      *(void *)(v33 + 208) = v36;
      *(void *)(v33 + 216) = 0;
      *(void *)(v33 + 224) = v69;
      *(_OWORD *)(v33 + 232) = v48;
      return *(double *)&v48;
  }
}

uint64_t sub_220880BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_220826FD8(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v11 = a1 + 56;
    do
    {
      sub_22087FE5C(a2, a3, a4, a5, (uint64_t *)v16);
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826FD8((void *)(v12 > 1), v13 + 1, 1);
        uint64_t v6 = v17;
      }
      v11 += 32;
      *(void *)(v6 + 16) = v13 + 1;
      sub_2208343B8(v16, v6 + 40 * v13 + 32);
      --v5;
    }
    while (v5);
  }
  return v6;
}

char *sub_220880D10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = *(char **)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 57);
  char v14 = *(unsigned char *)(a1 + 58);
  char v15 = *(unsigned char *)(a1 + 59);
  char v16 = *(unsigned char *)(a1 + 60);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  if ((a2 & 1) != 0 && v19 >= 1)
  {
    uint64_t v49 = (char *)MEMORY[0x263F8EE78];
    char v50 = v6;
    uint64_t v51 = v7;
    uint64_t v52 = v9;
    uint64_t v53 = v8;
    char v54 = v10;
    uint64_t v55 = v11;
    char v56 = v12;
    char v57 = v13;
    char v58 = v14;
    char v59 = v15;
    char v60 = v16;
    uint64_t v61 = (char *)MEMORY[0x263F8EE78];
    uint64_t v32 = v5;
    LOBYTE(v33) = v6;
    uint64_t v34 = v7;
    uint64_t v35 = v9;
    uint64_t v36 = v8;
    char v37 = v10;
    uint64_t v38 = v11;
    char v39 = v12;
    char v40 = v13;
    char v41 = v14;
    char v42 = v15;
    char v43 = v16;
    uint64_t v44 = v18;
    uint64_t v45 = v17;
    uint64_t v46 = v19;
    uint64_t v47 = v20;
    uint64_t v48 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22084CBCC(0, &v32, &v49, 0, (uint64_t *)&v61);
    char v22 = v61;
    if (!v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    goto LABEL_7;
  }
  char v22 = (char *)MEMORY[0x263F8EE78];
  if (v19 >= 1)
  {
    uint64_t v49 = (char *)MEMORY[0x263F8EE78];
    char v50 = v6;
    uint64_t v51 = v7;
    uint64_t v52 = v9;
    uint64_t v53 = v8;
    char v54 = v10;
    uint64_t v55 = v11;
    char v56 = v12;
    char v57 = v13;
    char v58 = v14;
    char v59 = v15;
    char v60 = v16;
    uint64_t v61 = (char *)MEMORY[0x263F8EE78];
    uint64_t v32 = v5;
    LOBYTE(v33) = v6;
    uint64_t v34 = v7;
    uint64_t v35 = v9;
    uint64_t v36 = v8;
    char v37 = v10;
    uint64_t v38 = v11;
    char v39 = v12;
    char v40 = v13;
    char v41 = v14;
    char v42 = v15;
    char v43 = v16;
    uint64_t v44 = v18;
    uint64_t v45 = v17;
    uint64_t v46 = v19;
    uint64_t v47 = v20;
    uint64_t v48 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22084CBCC(0, &v32, &v49, 0, (uint64_t *)&v61);
    if (v3)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      char v22 = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    uint64_t v23 = (uint64_t)v61;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v24 = *(void *)(v23 + 16);
    swift_bridgeObjectRelease();
    char v22 = (char *)MEMORY[0x263F8EE78];
    if (v24)
    {
      uint64_t v49 = (char *)MEMORY[0x263F8EE78];
      sub_220826C78(0, v24, 0);
      uint64_t v25 = 0;
      char v22 = v49;
      do
      {
        uint64_t v32 = 0x206E6D756C6F43;
        unint64_t v33 = 0xE700000000000000;
        uint64_t v61 = (char *)v25;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        uint64_t v27 = v32;
        unint64_t v26 = v33;
        uint64_t v49 = v22;
        unint64_t v29 = *((void *)v22 + 2);
        unint64_t v28 = *((void *)v22 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_220826C78((char *)(v28 > 1), v29 + 1, 1);
          char v22 = v49;
        }
        ++v25;
        *((void *)v22 + 2) = v29 + 1;
        uint64_t v30 = &v22[16 * v29];
        *((void *)v30 + 4) = v27;
        *((void *)v30 + 5) = v26;
      }
      while (v24 != v25);
    }
  }
  return v22;
}

uint64_t sub_2208810B0(void *a1, void *a2)
{
  if (!a2)
  {
    uint64_t v20 = a1[2];
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22087EE08(0, v20, (uint64_t)a1);
    swift_bridgeObjectRelease();
    return v5;
  }
  int64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t)sub_22081C7C4(0, v4, 0, MEMORY[0x263F8EE78]);
  int64_t v27 = v4;
  if (!v4)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v6 = a2[4];
  unint64_t v26 = a2 + 4;
  uint64_t v7 = a2[5];
  uint64_t v25 = a1[2];
  if (!v25)
  {
    swift_bridgeObjectRetain();
    goto LABEL_30;
  }
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v23 = a1 + 9;
  int64_t v24 = a1;
  for (uint64_t i = 1; ; ++i)
  {
    swift_bridgeObjectRetain();
    if (v8 == v6 && v9 == v7 || (sub_22093F250() & 1) != 0)
    {
      uint64_t v11 = 0;
      goto LABEL_9;
    }
    if (v25 == 1) {
      goto LABEL_30;
    }
    if ((v24[6] != v6 || v24[7] != v7) && (sub_22093F250() & 1) == 0) {
      break;
    }
    uint64_t v11 = 1;
LABEL_9:
    unint64_t v13 = *(void *)(v5 + 16);
    unint64_t v12 = *(void *)(v5 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t v5 = (uint64_t)sub_22081C7C4((char *)(v12 > 1), v13 + 1, 1, (char *)v5);
    }
    *(void *)(v5 + 16) = v13 + 1;
    uint64_t v14 = v5 + 32 * v13;
    *(void *)(v14 + 32) = v6;
    *(void *)(v14 + 40) = v7;
    *(void *)(v14 + 48) = v11;
    *(unsigned char *)(v14 + 56) = 7;
    if (i == v27) {
      goto LABEL_27;
    }
    char v15 = &v26[2 * i];
    uint64_t v6 = *v15;
    uint64_t v7 = v15[1];
  }
  char v16 = v23;
  uint64_t v17 = 2;
  while (1)
  {
    uint64_t v11 = v17;
    if (v25 == v17) {
      break;
    }
    if (*(v16 - 1) != v6 || *v16 != v7)
    {
      char v19 = sub_22093F250();
      uint64_t v17 = v11 + 1;
      v16 += 2;
      if ((v19 & 1) == 0) {
        continue;
      }
    }
    goto LABEL_9;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2208501D0();
  swift_allocError();
  *(void *)uint64_t v21 = v6;
  *(void *)(v21 + 8) = v7;
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  *(void *)(v21 + 32) = 0x1000000000000000;
  *(unsigned char *)(v21 + 40) = 1;
  swift_willThrow();
  return v5;
}

uint64_t sub_220881348(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = a5 & 1;
  if (a3) {
    return a5 & 1;
  }
  uint64_t v7 = result + v6;
  if (__OFADD__(result, v6))
  {
    __break(1u);
  }
  else
  {
    BOOL v8 = __OFADD__(a2, v6);
    uint64_t v9 = a2 + v6;
    if (!v8)
    {
      if (v9 >= a4) {
        uint64_t v10 = a4;
      }
      else {
        uint64_t v10 = v9;
      }
      if (v10 < v7)
      {
        sub_2208501D0();
        swift_allocError();
        *(void *)uint64_t v11 = v7;
        *(void *)(v11 + 8) = a4;
        *(void *)(v11 + 16) = 0;
        *(void *)(v11 + 24) = 0;
        *(void *)(v11 + 32) = 0x2000000000000000;
        *(unsigned char *)(v11 + 40) = 1;
        swift_willThrow();
      }
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208813FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_220881470(uint64_t a1)
{
  return a1;
}

uint64_t sub_2208814C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_220881518(uint64_t a1)
{
  return a1;
}

uint64_t sub_220881590()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 272, 7);
}

uint64_t sub_220881644()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 264, 7);
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 248, 7);
}

uint64_t sub_220881798()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 304);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 360, 7);
}

uint64_t initializeWithCopy for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CSVColumnDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVColumnDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVColumnDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVColumnDescriptor()
{
  return &type metadata for CSVColumnDescriptor;
}

void *sub_2208819F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_2208819FC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_220881A10@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_220881A24@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_220881A38(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_220881A68@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_220881A94@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_220881AB8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_220881ACC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_220881AE0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_220881AF4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_220881B08(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_220881B1C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_220881B30(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_220881B44()
{
  return *v0 == 0;
}

uint64_t sub_220881B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_220881B6C(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_220881B80@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_220881B90(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_220881B9C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_220881BB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2208820F4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_220881BF0()
{
  return sub_22093F490();
}

uint64_t sub_220881C38()
{
  return sub_22093F460();
}

uint64_t sub_220881C64()
{
  return sub_22093F490();
}

uint64_t sub_220881CA8@<X0>(unsigned __int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_220881CE0(*a1);
  *a2 = result;
  return result;
}

void sub_220881CD4(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_220881CE0(uint64_t result)
{
  if ((unsigned __int16)result >= 0xAu) {
    return 10;
  }
  else {
    return (unsigned __int16)result;
  }
}

uint64_t getEnumTagSinglePayload for BlockInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  BOOL v4 = v3 >= 0xA;
  int v5 = v3 - 10;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = a2 + 9;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockInfo()
{
  return &type metadata for BlockInfo;
}

uint64_t getEnumTagSinglePayload for BlockInfo.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BlockInfo.ContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x220881EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockInfo.ContentType()
{
  return &type metadata for BlockInfo.ContentType;
}

ValueMetadata *type metadata accessor for BlockInfo.Flags()
{
  return &type metadata for BlockInfo.Flags;
}

unint64_t sub_220881F40()
{
  unint64_t result = qword_267F18F88;
  if (!qword_267F18F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18F88);
  }
  return result;
}

unint64_t sub_220881F98()
{
  unint64_t result = qword_267F18F90;
  if (!qword_267F18F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18F90);
  }
  return result;
}

unint64_t sub_220881FF0()
{
  unint64_t result = qword_267F18F98;
  if (!qword_267F18F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18F98);
  }
  return result;
}

unint64_t sub_220882048()
{
  unint64_t result = qword_267F18FA0;
  if (!qword_267F18FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18FA0);
  }
  return result;
}

unint64_t sub_2208820A0()
{
  unint64_t result = qword_267F18FA8;
  if (!qword_267F18FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18FA8);
  }
  return result;
}

uint64_t sub_2208820F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_220882130()
{
  if (!*(void *)(*(void *)v0 + 16)) {
    return 0;
  }
  sub_22080B5B8(*(void *)v0 + 32, (uint64_t)v5);
  uint64_t v1 = v6;
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 48))(v1);
  uint64_t result = sub_22080B0D8((uint64_t)v5);
  if ((v3 & 0x8000000000000000) == 0) {
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t DataFrame.base.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_220882218@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220882424(a1, a2, *v3, v3[1], v3[2], a3);
}

uint64_t sub_220882224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1 == a2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = a1;
  }
  if (a1 == a2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a2;
  }
  unsigned __int8 v6 = 2 * (a1 == a2);
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v11 = v3[4];
  char v12 = *((unsigned char *)v3 + 40);
  sub_220831F30(v10, v11, v12);
  sub_220831F30(v10, v11, v12);
  sub_22080B6B4(v10, v11, v12);
  sub_220831F30(v4, v5, v6);
  sub_220883C28(v10, v11, v12);
  sub_22080B6B4(v10, v11, v12);
  sub_22080B6B4(v4, v5, v6);
  int v13 = v6;
  if (v6 != 1) {
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  sub_22080B6B4(v4, v5, 1);
  if (v14)
  {
    do
    {
      sub_22093F090();
      __break(1u);
LABEL_10:
      ;
    }
    while (v13 != 2);
  }
  sub_220831F30(v10, v11, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v10, v11, v12);
  sub_22080B6B4(v10, v11, v12);
  char v15 = sub_22081A46C((char *)v4, v5, v6, v10, v11, v12);
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t result = sub_22080B6B4(v4, v5, v6);
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = v17;
  *(unsigned char *)(a3 + 40) = v19;
  return result;
}

uint64_t sub_220882424@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  BOOL v10 = a1 == a2;
  if (a1 == a2) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = a1;
  }
  if (a1 == a2) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = (uint64_t)a2;
  }
  uint64_t v34 = *(void *)(a3 + 16);
  uint64_t v35 = v12;
  if (v34)
  {
    BOOL v33 = a1 == a2;
    sub_22080B5B8(a3 + 32, (uint64_t)&v36);
    uint64_t v13 = v39;
    uint64_t v14 = v40;
    __swift_project_boxed_opaque_existential_1(&v36, v39);
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = v16(v13, v15);
    uint64_t result = sub_22080B0D8((uint64_t)&v36);
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_25;
    }
    BOOL v10 = v33;
    if (v17)
    {
      char v19 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = 0;
  char v19 = 2;
LABEL_13:
  char v20 = 2 * v10;
  sub_220831F30(0, v17, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v17, v19);
  uint64_t v36 = v11;
  uint64_t v37 = v35;
  char v38 = 2 * v10;
  sub_220831F30((uint64_t)v11, v35, 2 * v10);
  sub_220883C28(0, v17, v19);
  sub_22080B6B4(0, v17, v19);
  sub_22080B6B4((uint64_t)v11, v35, 2 * v10);
  if (v38 == 1)
  {
    uint64_t v21 = *((void *)v36 + 2);
    sub_22080B6B4((uint64_t)v36, v37, 1);
    if (!v21) {
      goto LABEL_15;
    }
LABEL_20:
    sub_22093F090();
    __break(1u);
    goto LABEL_21;
  }
  if (v38 != 2) {
    goto LABEL_20;
  }
LABEL_15:
  if (!v34)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_22;
  }
  sub_22080B5B8(a3 + 32, (uint64_t)&v36);
  uint64_t v23 = v39;
  uint64_t v22 = v40;
  __swift_project_boxed_opaque_existential_1(&v36, v39);
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = v25(v23, v24);
  uint64_t result = sub_22080B0D8((uint64_t)&v36);
  if ((v26 & 0x8000000000000000) == 0)
  {
    if (v26)
    {
      char v27 = 0;
LABEL_23:
      sub_220831F30(0, v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v26, v27);
      unint64_t v28 = sub_22081A46C(v11, v35, v20, 0, v26, v27);
      uint64_t v30 = v29;
      char v32 = v31;
      uint64_t result = sub_22080B6B4((uint64_t)v11, v35, v20);
      *(void *)a6 = a3;
      *(void *)(a6 + 8) = a4;
      *(void *)(a6 + 16) = a5;
      *(void *)(a6 + 24) = v28;
      *(void *)(a6 + 32) = v30;
      *(unsigned char *)(a6 + 40) = v32;
      return result;
    }
LABEL_22:
    uint64_t v26 = 0;
    char v27 = 2;
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

double DataFrameProtocol.subscript.getter@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v24)(uint64_t *__return_ptr, uint64_t, uint64_t);
  long long v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  if (a1 == (char *)a2) {
    unsigned __int8 v6 = 0;
  }
  else {
    unsigned __int8 v6 = a1;
  }
  if (a1 == (char *)a2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a2;
  }
  unsigned __int8 v8 = 2 * (a1 == (char *)a2);
  uint64_t v24 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32);
  v24(&v29, a3, a4);
  uint64_t v9 = v30;
  uint64_t v10 = v31;
  char v11 = v32;
  sub_220831F30(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v9, v10, v11);
  *(void *)&char v27 = v6;
  *((void *)&v27 + 1) = v7;
  LOBYTE(v28) = v8;
  sub_220831F30((uint64_t)v6, v7, v8);
  sub_220883C28(v9, v10, v11);
  sub_22080B6B4(v9, v10, v11);
  sub_22080B6B4((uint64_t)v6, v7, v8);
  int v12 = v8;
  if (v8 != 1) {
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v27 + 16);
  sub_22080B6B4(v27, *((uint64_t *)&v27 + 1), 1);
  if (v13)
  {
    do
    {
      sub_22093F090();
      __break(1u);
LABEL_10:
      ;
    }
    while (v12 != 2);
  }
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v27, a3, a4);
  uint64_t v14 = v28;
  v24(&v29, a3, a4);
  uint64_t v15 = v30;
  uint64_t v16 = v31;
  char v17 = v32;
  sub_220831F30(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v15, v16, v17);
  char v18 = sub_22081A46C(v6, v7, v8, v15, v16, v17);
  uint64_t v20 = v19;
  char v22 = v21;
  sub_22080B6B4((uint64_t)v6, v7, v8);
  double result = *(double *)&v27;
  *(_OWORD *)a5 = v27;
  *(void *)(a5 + 16) = v14;
  *(void *)(a5 + 24) = v18;
  *(void *)(a5 + 32) = v20;
  *(unsigned char *)(a5 + 40) = v22;
  return result;
}

uint64_t sub_220882A00(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  long long v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  sub_2208846B0((uint64_t)&v5, a2, a3);
  return sub_220833BC0((uint64_t)&v5);
}

uint64_t DataFrameProtocol.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v60 = *a1;
  uint64_t v57 = a1[2];
  uint64_t v50 = a1[3];
  uint64_t v47 = a1[1];
  uint64_t v48 = a1[4];
  int v49 = *((unsigned __int8 *)a1 + 40);
  BOOL v5 = a2 == a3;
  if (a2 == a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a2;
  }
  if (a2 == a3) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a3;
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 32))(v68, a4, a5);
  uint64_t v8 = v69;
  uint64_t v9 = v70;
  char v10 = v71;
  sub_220831F30(v69, v70, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v8, v9, v10);
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  char v63 = 2 * v5;
  sub_220831F30(v6, v7, 2 * v5);
  sub_220883C28(v8, v9, v10);
  sub_22080B6B4(v8, v9, v10);
  sub_22080B6B4(v6, v7, 2 * v5);
  if ((2 * v5) == 1)
  {
    uint64_t v11 = *(void *)(v61 + 16);
    sub_22080B6B4(v61, v62, 1);
    if (v11) {
      goto LABEL_55;
    }
  }
  else if ((2 * v5) != 2)
  {
    goto LABEL_55;
  }
  uint64_t v12 = v50;
  char v13 = v49;
  uint64_t v15 = v47;
  uint64_t v14 = v48;
  uint64_t v16 = v57;
  if (__OFSUB__(a3, a2))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v17 = sub_2208EE804(v50, v48, v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v50, v48, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v50, v48, v49);
  if (a3 - a2 != v17)
  {
LABEL_55:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  Swift::Int v18 = v50;
  if (v49)
  {
    if (v49 == 1 && *(void *)(v50 + 16))
    {
      Swift::Int v18 = *(void *)(v50 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v50, v48, v49);
      if (v20)
      {
        sub_220831F30(v50, v48, v49);
        Swift::Int v18 = 0;
      }
      else
      {
        Swift::Int v18 = v19;
        sub_220831F30(v50, v48, v49);
      }
    }
  }
  sub_220883950(v50, v48, v49);
  if (v22) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = v21;
  }
  uint64_t v54 = v23;
  char v67 = 0;
  if (a2 == a3) {
    goto LABEL_27;
  }
  if (a3 < a2) {
    goto LABEL_53;
  }
  if (a2 >= a3)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v18 != v23)
  {
    uint64_t v46 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a5 + 48);
    unint64_t v25 = *(void *)(v60 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v59 = a2;
    while (1)
    {
      v68[0] = v60;
      v68[1] = v15;
      v68[2] = v16;
      uint64_t v69 = v12;
      uint64_t v70 = v14;
      char v71 = v13;
      Swift::Int v26 = DataFrame.Rows.index(after:)(v18);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_220831F30(v12, v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v12, v14, v13);
      uint64_t v27 = v46(v66, a4, a5);
      uint64_t v29 = *v28;
      if (v25 != *((void *)*v28 + 2)) {
        goto LABEL_55;
      }
      char v58 = (void (*)(unsigned char *, void))v27;
      if (v25)
      {
        if (v25 <= *(void *)(v60 + 16))
        {
          uint64_t v30 = v28;
          Swift::Int v51 = v26;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v30 = v29;
          Swift::Int v32 = v18;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v29 = sub_22080AB34((uint64_t)v29);
          }
          uint64_t v33 = 0;
          unint64_t v34 = 0;
          *uint64_t v30 = v29;
          while (1)
          {
            sub_22080B5B8(v60 + v33 + 32, (uint64_t)v68);
            char v35 = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v30 = v29;
            if ((v35 & 1) == 0)
            {
              uint64_t v29 = sub_22080AB34((uint64_t)v29);
              *uint64_t v30 = v29;
            }
            if (v34 >= *((void *)v29 + 2)) {
              break;
            }
            ++v34;
            uint64_t v36 = v69;
            uint64_t v37 = v70;
            unint64_t v38 = v25;
            uint64_t v39 = __swift_project_boxed_opaque_existential_1(v68, v69);
            uint64_t v64 = v36;
            uint64_t v65 = *(void *)(v37 + 8);
            uint64_t v40 = __swift_allocate_boxed_opaque_existential_1(&v61);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v40, v39, v36);
            uint64_t v41 = *(void *)&v29[v33 + 56];
            uint64_t v42 = *(void *)&v29[v33 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29[v33 + 32], v41);
            char v43 = *(void (**)(uint64_t, Swift::Int, uint64_t *, uint64_t, uint64_t))(v42 + 72);
            uint64_t v44 = v42;
            unint64_t v25 = v38;
            v43(v59, v32, &v61, v41, v44);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v61);
            sub_22080B0D8((uint64_t)v68);
            uint64_t v29 = *v30;
            v33 += 40;
            if (v38 == v34)
            {
              uint64_t v16 = v57;
              swift_bridgeObjectRelease();
              uint64_t v15 = v47;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v45 = v67;
              uint64_t v12 = v50;
              Swift::Int v26 = v51;
              char v13 = v49;
              uint64_t v14 = v48;
              goto LABEL_42;
            }
          }
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        __break(1u);
        goto LABEL_52;
      }
      uint64_t v16 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v45 = 0;
LABEL_42:
      v58(v66, 0);
      if ((v45 & 1) != 0 || v59 + 1 == a3) {
        goto LABEL_28;
      }
      if (v59 + 1 < a2) {
        goto LABEL_49;
      }
      if (v59 == a3 - 1) {
        goto LABEL_50;
      }
      ++v59;
      Swift::Int v18 = v26;
      if (v26 == v54) {
        goto LABEL_28;
      }
    }
  }
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v12, v14, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_22080B6B4(v12, v14, v13);
}

void (*sub_220883144(void *a1, char *a2, char *a3))(char **a1, char a2)
{
  uint64_t v7 = malloc(0xA8uLL);
  *a1 = v7;
  v7[19] = a3;
  v7[20] = v3;
  v7[18] = a2;
  sub_220882424(a2, a3, *v3, v3[1], v3[2], (uint64_t)(v7 + 12));
  return sub_2208831C8;
}

void sub_2208831C8(char **a1, char a2)
{
  uint64_t v2 = *a1;
  long long v3 = *a1 + 96;
  uint64_t v4 = *((void *)*a1 + 19);
  uint64_t v5 = *((void *)*a1 + 18);
  long long v6 = *((_OWORD *)*a1 + 7);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *v3;
    *((_OWORD *)v2 + 1) = v6;
    *(_OWORD *)(v2 + 25) = *(_OWORD *)((char *)v3 + 25);
    sub_220833B58((uint64_t)v2);
    sub_2208846B0((uint64_t)v2, v5, v4);
    sub_220833BC0((uint64_t)v2);
    uint64_t v7 = *((void *)v2 + 15);
    uint64_t v8 = *((void *)v2 + 16);
    char v9 = v2[136];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v7, v8, v9);
  }
  else
  {
    *((_OWORD *)v2 + 3) = *v3;
    *((_OWORD *)v2 + 4) = v6;
    *(_OWORD *)(v2 + 73) = *(_OWORD *)((char *)v3 + 25);
    sub_2208846B0((uint64_t)(v2 + 48), v5, v4);
    sub_220833BC0((uint64_t)(v2 + 48));
  }

  free(v2);
}

void (*DataFrameProtocol.subscript.modify(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x58uLL);
  *a1 = v11;
  v11[9] = a5;
  v11[10] = v5;
  v11[7] = a3;
  v11[8] = a4;
  v11[6] = a2;
  DataFrameProtocol.subscript.getter(a2, a3, a4, a5, (uint64_t)v11);
  return sub_220883348;
}

void sub_220883348(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v4 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  char v7 = *((unsigned char *)*a1 + 40);
  uint64_t v8 = (*a1)[9];
  uint64_t v10 = (*a1)[7];
  uint64_t v9 = (*a1)[8];
  uint64_t v11 = (*a1)[6];
  v16[0] = **a1;
  v16[1] = v3;
  long long v16[2] = v5;
  v16[3] = v4;
  v16[4] = v6;
  char v17 = v7;
  if (a2)
  {
    uint64_t v12 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v4, v6, v7);
    DataFrameProtocol.subscript.setter(v16, v11, v10, v9, v12);
    uint64_t v13 = v2[3];
    uint64_t v14 = v2[4];
    char v15 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v13, v14, v15);
  }
  else
  {
    DataFrameProtocol.subscript.setter(v16, v11, v10, v9, v8);
  }

  free(v2);
}

uint64_t sub_220883478@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v7 = v4;
  if (*(unsigned char *)(v1 + 40))
  {
    if (v6 == 1 && *(void *)(v4 + 16))
    {
      uint64_t v7 = *(void *)(v4 + 32);
    }
    else
    {
      sub_220883950(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
      if (v9) {
        uint64_t v7 = 0;
      }
      else {
        uint64_t v7 = v8;
      }
    }
  }
  *(void *)(a1 + 48) = v7;
  sub_220883950(v4, v5, v6);
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v10;
  }
  *(void *)(a1 + 56) = v12;
  return sub_220833B58(v1);
}

uint64_t sub_220883524@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  uint64_t v4 = *(void *)(v1 + 24);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  if (!*(unsigned char *)(v1 + 40))
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = v4;
    uint64_t v10 = 1;
    goto LABEL_9;
  }
  if (v5 == 1 && *(void *)(v4 + 16))
  {
    uint64_t v6 = *(void *)(v4 + 32);
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = v6;
LABEL_7:
    uint64_t v10 = *(void *)(v4 + 16);
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *(void *)(v9 + 8);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v11;
  if (v5 != 2) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(v13 + 8);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v14;
    return sub_22084312C(v1);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_220883614@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(v1 + 25);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    if (*(unsigned char *)(v1 + 40) == 1 && *(void *)(v4 + 16))
    {
      uint64_t v6 = (uint64_t *)(v4 + 32);
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v8 = *(void *)(v5 + 16);
      if (!v8) {
        goto LABEL_11;
      }
      uint64_t v6 = (uint64_t *)(v8 + 8);
    }
    uint64_t v4 = *v6;
  }
  *(void *)(a1 + 48) = v4;
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v5 + 16);
  if (v9)
  {
    *(void *)(a1 + 56) = *(void *)(v9 + 8);
    return sub_22084312C(v1);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

BOOL sub_2208836D4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v4 = v1;
  if (v3)
  {
    if (v3 == 1 && *(void *)(v1 + 16))
    {
      uint64_t v4 = *(void *)(v1 + 32);
    }
    else
    {
      sub_220883950(v1, v2, v3);
      if (v6) {
        uint64_t v4 = 0;
      }
      else {
        uint64_t v4 = v5;
      }
    }
  }
  sub_220883950(v1, v2, v3);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7;
  }
  return v4 == v9;
}

uint64_t sub_220883758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_220882224(a1, a2, a3);
}

uint64_t sub_220883794(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1[1];
  long long v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  sub_220884E54((uint64_t)&v5, a2, a3);
  return sub_220833BC0((uint64_t)&v5);
}

void (*sub_2208837D0(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (char *)malloc(0xD8uLL);
  *a1 = v7;
  *((void *)v7 + 25) = a3;
  *((void *)v7 + 26) = v3;
  *((void *)v7 + 24) = a2;
  long long v8 = v3[1];
  *(_OWORD *)uint64_t v7 = *v3;
  *((_OWORD *)v7 + 1) = v8;
  *(_OWORD *)(v7 + 25) = *(_OWORD *)((char *)v3 + 25);
  sub_220882224(a2, a3, (uint64_t)(v7 + 144));
  return sub_220883864;
}

void sub_220883864(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  long long v3 = (_OWORD *)(*a1 + 144);
  uint64_t v4 = *(void *)(*a1 + 200);
  uint64_t v5 = *(void *)(*a1 + 192);
  long long v6 = *(_OWORD *)(*a1 + 160);
  if (a2)
  {
    *(_OWORD *)(v2 + 48) = *v3;
    *(_OWORD *)(v2 + 64) = v6;
    *(_OWORD *)(v2 + 73) = *(_OWORD *)((char *)v3 + 25);
    sub_220833B58(v2 + 48);
    sub_220884E54(v2 + 48, v5, v4);
    sub_220833BC0(v2 + 48);
    uint64_t v7 = *(void *)(v2 + 168);
    uint64_t v8 = *(void *)(v2 + 176);
    char v9 = *(unsigned char *)(v2 + 184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v7, v8, v9);
  }
  else
  {
    *(_OWORD *)(v2 + 96) = *v3;
    *(_OWORD *)(v2 + 112) = v6;
    *(_OWORD *)(v2 + 121) = *(_OWORD *)((char *)v3 + 25);
    sub_220884E54(v2 + 96, v5, v4);
    sub_220833BC0(v2 + 96);
  }

  free((void *)v2);
}

uint64_t sub_220883950(uint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1 && (uint64_t v3 = *(void *)(result + 16)) != 0) {
      return *(void *)(result + 16 * v3 + 16);
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_220883990(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return result;
  }
  uint64_t v3 = v2;
  uint64_t v5 = result;
  uint64_t v6 = *(void *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  int v8 = *(unsigned __int8 *)(v3 + 16);
  if (*(unsigned char *)(v3 + 16))
  {
    if (v8 != 1 || !*(void *)(v6 + 16)) {
      return result;
    }
  }
  uint64_t result = sub_220883950(*(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  if (v10)
  {
LABEL_68:
    __break(1u);
    return result;
  }
  if (v9 <= v5) {
    return result;
  }
  uint64_t v11 = v6;
  if (v8)
  {
    if (!*(void *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_52;
    }
    uint64_t v11 = *(void *)(v6 + 32);
  }
  if (v11 > a2) {
    return result;
  }
  uint64_t result = sub_220869A20(v5, a2, v6, v7, v8);
  if (result == v12) {
    return result;
  }
  if (v8)
  {
    if ((result & 0x8000000000000000) != 0)
    {
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    unint64_t v13 = *(void *)(v6 + 16);
    if (result >= v13)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    unint64_t v14 = v12 - 1;
    if (!__OFSUB__(v12, 1))
    {
      if ((v14 & 0x8000000000000000) == 0)
      {
        if (v14 < v13)
        {
          uint64_t v15 = *(void *)(v6 + 32 + 16 * v14 + 8);
          if (*(void *)(v6 + 32 + 16 * result) < v5)
          {
            unint64_t v16 = *(void *)(v6 + 16);
            if (v15 > a2)
            {
              if (result >= v16)
              {
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
              uint64_t v17 = v6 + 32;
              uint64_t v6 = *(void *)(v6 + 32 + 16 * result);
              if (v6 > v5)
              {
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              if (v14 >= v16)
              {
LABEL_64:
                __break(1u);
                goto LABEL_65;
              }
              uint64_t v7 = *(void *)(v17 + 16 * v14 + 8);
              goto LABEL_31;
            }
            if (result >= v16)
            {
LABEL_66:
              __break(1u);
              goto LABEL_67;
            }
            uint64_t v6 = *(void *)(v6 + 16 * result + 32);
LABEL_43:
            if (v6 > v5)
            {
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
            uint64_t v18 = v6;
            uint64_t v19 = v5;
            goto LABEL_45;
          }
          if (v15 > a2)
          {
            if (v14 >= *(void *)(v6 + 16))
            {
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
            uint64_t v7 = *(void *)(v6 + 16 * v14 + 40);
            goto LABEL_39;
          }
          uint64_t result = sub_220831AC8(result, v12);
          *(void *)uint64_t v3 = v6;
          *(void *)(v3 + 8) = 0;
          char v20 = 1;
LABEL_50:
          *(unsigned char *)(v3 + 16) = v20;
          return result;
        }
        goto LABEL_56;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (result)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (__OFSUB__(v12, 1)) {
    goto LABEL_52;
  }
  if (v12 != 1)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v6 < v5)
  {
    if (v7 > a2)
    {
      if (v6 > v5)
      {
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
LABEL_31:
      if (v7 >= a2)
      {
        return sub_220869C30(result, v12, v6, v5, a2, v7);
      }
      goto LABEL_59;
    }
    goto LABEL_43;
  }
  if (v7 <= a2)
  {
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    char v20 = 2;
    goto LABEL_50;
  }
LABEL_39:
  if (v7 < a2)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v18 = a2;
  uint64_t v19 = v7;
LABEL_45:

  return sub_220869DC4(result, v12, v18, v19);
}

uint64_t sub_220883C28(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = (void *)result;
  if (a3)
  {
    if (a3 == 1 && *(void *)(result + 16))
    {
      uint64_t result = sub_220831F30(result, a2, 1);
      if (!v4[2])
      {
LABEL_16:
        __break(1u);
        return result;
      }
      uint64_t result = sub_220883990(v4[4], v4[5]);
      if (v4[2] != 1)
      {
        uint64_t v5 = v4 + 7;
        unint64_t v6 = 1;
        while (v6 < v4[2])
        {
          ++v6;
          uint64_t result = sub_220883990(*(v5 - 1), *v5);
          v5 += 2;
          if (v6 == v4[2]) {
            goto LABEL_9;
          }
        }
        goto LABEL_16;
      }
LABEL_9:
      return sub_22080B6B4((uint64_t)v4, a2, 1);
    }
  }
  else
  {
    return sub_220883990(result, a2);
  }
  return result;
}

void (*sub_220883D38(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5))(void *a1)
{
  char v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = DataFrameProtocol.subscript.modify(v10, a2, a3, a4, a5);
  return sub_220816854;
}

uint64_t DataFrameProtocol.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  int v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v9 + 24))(&v30, v6);
  uint64_t v10 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (v11)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 32))(v26, a1, a2);
    v25[1] = v26[1];
    v25[2] = v26[0];
    uint64_t v12 = v27;
    uint64_t v13 = v28;
    char v14 = v29;
    uint64_t v15 = v27;
    if (v29)
    {
      if (v29 == 1 && *(void *)(v27 + 16))
      {
        uint64_t v15 = *(void *)(v27 + 32);
      }
      else
      {
        sub_220883950(v27, v28, v29);
        if (v18) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = v17;
        }
      }
    }
    sub_220883950(v12, v13, v14);
    uint64_t v20 = v19;
    char v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v12, v13, v14);
    if (v22) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = v20;
    }
    BOOL v16 = v15 == v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return 1;
  }
  return v16;
}

double sub_220883FD0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  DataFrameProtocol.subscript.getter(*(char **)a1, *(void *)(a1 + 8), *(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), (uint64_t)&v7);
  uint64_t v4 = v8;
  char v5 = v10;
  *(_OWORD *)a3 = v7;
  *(void *)(a3 + 16) = v4;
  double result = *(double *)&v9;
  *(_OWORD *)(a3 + 24) = v9;
  *(unsigned char *)(a3 + 40) = v5;
  return result;
}

uint64_t sub_220884030(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *(uint64_t *)((char *)a3 + a4 - 16);
  uint64_t v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  v14[0] = *(void *)a1;
  v14[1] = v8;
  v14[2] = v9;
  v14[3] = v10;
  v14[4] = v11;
  char v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v10, v11, v12);
  return DataFrameProtocol.subscript.setter(v14, v6, v7, v4, v5);
}

uint64_t DataFrameProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v10, a2, a4);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  char v8 = v13;
  if (v13 && (v13 != 1 || !*(void *)(v11 + 16))) {
    sub_220883950(v11, v12, v13);
  }
  sub_220883950(v6, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  sub_220884654();
  sub_22093E820();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v6, v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 72))(v14, v15, a2, a4);
}

double sub_220884258@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  DataFrameProtocol.subscript.getter(a1, *(void *)(a2 + a1 - 32), *(void *)(a2 + a1 - 24), *(void *)(a2 + a1 - 16));
  *(_OWORD *)a3 = v5;
  *(void *)(a3 + 16) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 40) = v8;
  return result;
}

uint64_t sub_2208842C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 32);
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = *(void *)(a4 + a3 - 16);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)&long long v14 = *(void *)a1;
  *((void *)&v14 + 1) = v8;
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  char v18 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v10, v11, v12);
  return sub_220885794(&v14, a3, v5, v6, v7);
}

uint64_t DataFrameProtocol.subscript.setter(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_220885794(a1, a2, a3, a4, a5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8);

  return v7(a2, a4);
}

void (*DataFrameProtocol.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(long long **a1, char a2)
{
  char v13 = malloc(0x68uLL);
  *a1 = v13;
  v13[9] = a6;
  v13[10] = v6;
  v13[7] = a4;
  v13[8] = a5;
  v13[6] = a3;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = v14;
  v13[11] = v14;
  v13[12] = malloc(*(void *)(v14 + 64));
  (*(void (**)(void))(v15 + 16))();
  DataFrameProtocol.subscript.getter(a2, a3, a4, a5);
  return sub_2208844F8;
}

void sub_2208844F8(long long **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *((void *)*a1 + 11);
  uint64_t v3 = (void *)*((void *)*a1 + 12);
  uint64_t v6 = *((void *)*a1 + 7);
  uint64_t v5 = *((void *)*a1 + 8);
  uint64_t v7 = *((void *)*a1 + 6);
  if (a2)
  {
    uint64_t v8 = *((void *)v2 + 1);
    uint64_t v9 = *((void *)v2 + 2);
    uint64_t v10 = *((void *)v2 + 3);
    uint64_t v11 = *((void *)v2 + 4);
    *(void *)&long long v16 = *(void *)v2;
    *((void *)&v16 + 1) = v8;
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    uint64_t v19 = v11;
    char v20 = *((unsigned char *)v2 + 40);
    uint64_t v15 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v10, v11, v20);
    sub_220885794(&v16, (uint64_t)v3, v7, v6, v15);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v12 = *((void *)v2 + 3);
    uint64_t v13 = *((void *)v2 + 4);
    char v14 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v12, v13, v14);
  }
  else
  {
    sub_220885794(*a1, (uint64_t)v3, v7, v6, v5);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
  }
  free(v3);

  free(v2);
}

unint64_t sub_220884654()
{
  unint64_t result = qword_267F18FB0;
  if (!qword_267F18FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18FB0);
  }
  return result;
}

uint64_t sub_2208846B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a2 == a3;
  if (a2 == a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a2;
  }
  if (a2 == a3) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a3;
  }
  uint64_t v8 = *v3;
  uint64_t v66 = v3[2];
  char v67 = v3[1];
  if (!*((void *)*v3 + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v13 = 0;
    char v14 = 2;
    goto LABEL_13;
  }
  uint64_t v72 = v6;
  sub_22080B5B8((uint64_t)(v8 + 32), (uint64_t)&v75);
  uint64_t v9 = v78;
  uint64_t v10 = v79;
  __swift_project_boxed_opaque_existential_1(&v75, v78);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v9, v11);
  sub_22080B0D8((uint64_t)&v75);
  if (v13 < 0) {
    goto LABEL_60;
  }
  uint64_t v6 = v72;
  if (!v13) {
    goto LABEL_12;
  }
  char v14 = 0;
LABEL_13:
  char v15 = 2 * v5;
  sub_220831F30(0, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v13, v14);
  uint64_t v75 = v6;
  uint64_t v76 = v7;
  LOBYTE(v77) = v15;
  sub_220831F30(v6, v7, v15);
  sub_220883C28(0, v13, v14);
  sub_22080B6B4(0, v13, v14);
  sub_22080B6B4(v6, v7, v15);
  if (v77 == 1)
  {
    uint64_t v16 = *(void *)(v75 + 16);
    sub_22080B6B4(v75, v76, 1);
    uint64_t v18 = a3;
    uint64_t v17 = a2;
    if (v16) {
      goto LABEL_64;
    }
  }
  else
  {
    uint64_t v18 = a3;
    uint64_t v17 = a2;
    if (v77 != 2) {
      goto LABEL_64;
    }
  }
  BOOL v19 = __OFSUB__(v18, v17);
  uint64_t v20 = v18 - v17;
  if (v19) {
    goto LABEL_61;
  }
  uint64_t v22 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 32);
  int v26 = *(unsigned __int8 *)(a1 + 40);
  char v27 = *(unsigned char *)(a1 + 40);
  uint64_t v28 = v20;
  uint64_t v29 = sub_2208EE804(v24, v25, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v24, v25, v26);
  uint64_t v68 = v23;
  swift_bridgeObjectRelease();
  uint64_t v69 = v21;
  swift_bridgeObjectRelease();
  uint64_t v70 = v22;
  swift_bridgeObjectRelease();
  sub_22080B6B4(v24, v25, v26);
  if (v28 != v29) {
    goto LABEL_64;
  }
  Swift::Int v30 = v24;
  if (v26)
  {
    if (v26 == 1 && *(void *)(v24 + 16))
    {
      Swift::Int v30 = *(void *)(v24 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v24, v25, v26);
      if (v32)
      {
        sub_220831F30(v24, v25, v26);
        Swift::Int v30 = 0;
      }
      else
      {
        Swift::Int v30 = v31;
        sub_220831F30(v24, v25, v26);
      }
    }
  }
  sub_220883950(v24, v25, v26);
  if (v34) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = v33;
  }
  uint64_t v59 = v35;
  uint64_t v60 = v24;
  char v81 = 0;
  if (a2 != v18)
  {
    if (v18 < a2) {
      goto LABEL_62;
    }
    if (a2 >= v18)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    if (v30 != v35)
    {
      uint64_t v71 = v22 + 32;
      uint64_t v73 = *(void *)(v22 + 16);
      uint64_t v55 = v18 - 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = a2;
      uint64_t v58 = v25;
      char v57 = v26;
      while (1)
      {
        uint64_t v75 = v70;
        uint64_t v76 = v69;
        uint64_t v77 = v68;
        uint64_t v78 = v60;
        uint64_t v79 = v25;
        char v80 = v26;
        Swift::Int v61 = DataFrame.Rows.index(after:)(v30);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_220831F30(v60, v25, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22080B6B4(v60, v25, v26);
        if (*((void *)v8 + 2))
        {
          sub_22080B5B8((uint64_t)(v8 + 32), (uint64_t)&v75);
          uint64_t v39 = v78;
          uint64_t v38 = v79;
          __swift_project_boxed_opaque_existential_1(&v75, v78);
          uint64_t v40 = *(void *)(v38 + 8);
          uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v42 = v41(v39, v40);
          sub_22080B0D8((uint64_t)&v75);
          if (v42 < 0) {
            goto LABEL_57;
          }
          char v43 = v67;
          uint64_t v25 = v58;
          LOBYTE(v26) = v57;
          if (v42)
          {
            char v44 = 0;
            goto LABEL_42;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          char v43 = v67;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v42 = 0;
        char v44 = 2;
LABEL_42:
        uint64_t v45 = a3;
        uint64_t v46 = a2;
        if (v73 != *((void *)v8 + 2)) {
          goto LABEL_64;
        }
        char v62 = v44;
        uint64_t v63 = v42;
        if (v73)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_22080AB34((uint64_t)v8);
          }
          uint64_t v47 = 0;
          unint64_t v48 = 0;
          while (1)
          {
            sub_22080B5B8(v71 + v47, (uint64_t)&v75);
            if (v48 >= *((void *)v8 + 2)) {
              break;
            }
            ++v48;
            uint64_t v50 = v78;
            uint64_t v49 = v79;
            Swift::Int v51 = __swift_project_boxed_opaque_existential_1(&v75, v78);
            v74[3] = v50;
            v74[4] = *(void *)(v49 + 8);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v74);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(boxed_opaque_existential_1, v51, v50);
            uint64_t v53 = *(void *)&v8[v47 + 56];
            uint64_t v54 = *(void *)&v8[v47 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v8[v47 + 32], v53);
            (*(void (**)(uint64_t, Swift::Int, uint64_t *, uint64_t, uint64_t))(v54 + 72))(v37, v30, v74, v53, v54);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
            sub_22080B0D8((uint64_t)&v75);
            v47 += 40;
            if (v73 == v48)
            {
              uint64_t v45 = a3;
              uint64_t v46 = a2;
              char v43 = v67;
              uint64_t v25 = v58;
              LOBYTE(v26) = v57;
              goto LABEL_50;
            }
          }
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22080B6B4(0, v63, v62);
        *char v56 = v8;
        v56[1] = v43;
        v56[2] = v66;
        if ((v81 & 1) != 0 || v37 + 1 == v45) {
          goto LABEL_34;
        }
        if (v37 + 1 < v46) {
          goto LABEL_58;
        }
        if (v37 == v55) {
          goto LABEL_59;
        }
        ++v37;
        Swift::Int v30 = v61;
        if (v61 == v59) {
          goto LABEL_34;
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_34:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_22080B6B4(v60, v25, v26);
}

uint64_t sub_220884E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = a2 == a3;
  if (a2 == a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a2;
  }
  if (a2 == a3) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a3;
  }
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  char v10 = *(unsigned char *)(v3 + 40);
  sub_220831F30(v8, v9, v10);
  sub_220831F30(v8, v9, v10);
  sub_22080B6B4(v8, v9, v10);
  uint64_t v90 = v6;
  uint64_t v91 = v7;
  LOBYTE(v92) = 2 * v5;
  sub_220831F30(v6, v7, 2 * v5);
  sub_220883C28(v8, v9, v10);
  sub_22080B6B4(v8, v9, v10);
  sub_22080B6B4(v6, v7, 2 * v5);
  if ((2 * v5) == 1)
  {
    uint64_t v11 = *(void *)(v90 + 16);
    sub_22080B6B4(v90, v91, 1);
    if (v11) {
      goto LABEL_74;
    }
  }
  else if ((2 * v5) != 2)
  {
    goto LABEL_74;
  }
  if (__OFSUB__(a3, a2)) {
    goto LABEL_69;
  }
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  int v17 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v18 = sub_2208EE804(v15, v16, *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v15, v16, v17);
  uint64_t v74 = v14;
  swift_bridgeObjectRelease();
  uint64_t v75 = v13;
  swift_bridgeObjectRelease();
  uint64_t v76 = v12;
  swift_bridgeObjectRelease();
  uint64_t v73 = v16;
  sub_22080B6B4(v15, v16, v17);
  if (a3 - a2 != v18)
  {
    while (1)
    {
LABEL_74:
      sub_22093F090();
      __break(1u);
    }
  }
  uint64_t v19 = v15;
  if (v17)
  {
    if (v17 == 1 && *(void *)(v15 + 16))
    {
      uint64_t v15 = *(void *)(v15 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_220883950(v15, v16, v17);
      if (v21)
      {
        sub_220831F30(v15, v16, v17);
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v15 = v20;
        sub_220831F30(v19, v16, v17);
      }
    }
  }
  uint64_t v67 = v19;
  char v66 = v17;
  sub_220883950(v19, v16, v17);
  if (v23) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v22;
  }
  char v96 = 0;
  uint64_t v25 = a3;
  if (a2 == a3) {
    goto LABEL_27;
  }
  if (a3 < a2) {
    goto LABEL_72;
  }
  if (a2 >= a3)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v15 != v24)
  {
    uint64_t v63 = v24;
    uint64_t v27 = *(void *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v83 = a2;
    uint64_t v64 = v27;
    while (1)
    {
      uint64_t v28 = v25;
      uint64_t v90 = v76;
      uint64_t v91 = v75;
      uint64_t v92 = v74;
      uint64_t v93 = v67;
      uint64_t v94 = v16;
      char v95 = v66;
      Swift::Int v65 = DataFrame.Rows.index(after:)(v15);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_220831F30(v67, v16, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v67, v16, v66);
      uint64_t v29 = v80;
      Swift::Int v30 = *(char **)v80;
      if (v64 != *(void *)(*(void *)v80 + 16)) {
        goto LABEL_74;
      }
      uint64_t v31 = *(void *)(v80 + 24);
      uint64_t v32 = *(void *)(v80 + 32);
      char v33 = *(unsigned char *)(v80 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = v32;
      uint64_t v70 = v31;
      char v68 = v33;
      sub_220831F30(v31, v32, v33);
      if (v64)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::Int v30 = sub_22080AB34((uint64_t)v30);
        }
        uint64_t v34 = 0;
        unint64_t v35 = 0;
        do
        {
          sub_22080B5B8(v76 + 32 + v34, (uint64_t)&v90);
          if (v35 >= *((void *)v30 + 2)) {
            goto LABEL_66;
          }
          ++v35;
          uint64_t v36 = v93;
          uint64_t v37 = v94;
          uint64_t v38 = __swift_project_boxed_opaque_existential_1(&v90, v93);
          uint64_t v88 = v36;
          uint64_t v89 = *(void *)(v37 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v87);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(boxed_opaque_existential_1, v38, v36);
          uint64_t v40 = *(void *)&v30[v34 + 56];
          uint64_t v41 = *(void *)&v30[v34 + 64];
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30[v34 + 32], v40);
          (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v41 + 72))(v83, v15, v87, v40, v41);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          sub_22080B0D8((uint64_t)&v90);
          v34 += 40;
        }
        while (v64 != v35);
        uint64_t v29 = v80;
        uint64_t v25 = a3;
      }
      else
      {
        uint64_t v25 = v28;
      }
      uint64_t v42 = a2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_2208EE720(v70, v69, v68);
      uint64_t v79 = *(void *)(v43 + 16);
      uint64_t v77 = v30;
      if (!v79)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      uint64_t v44 = 0;
      uint64_t v45 = v29;
      unint64_t v46 = *((void *)v30 + 2);
      uint64_t v78 = v43 + 32;
      char v86 = v30 + 32;
      uint64_t v47 = *(char **)v45;
      uint64_t v85 = *(void *)(v45 + 8);
      uint64_t v84 = *(void *)(v45 + 16);
LABEL_42:
      uint64_t v48 = *(void *)(v78 + 8 * v44);
      if (!*((void *)v47 + 2)) {
        break;
      }
      sub_22080B5B8((uint64_t)(v47 + 32), (uint64_t)&v90);
      uint64_t v49 = v93;
      uint64_t v50 = v94;
      __swift_project_boxed_opaque_existential_1(&v90, v93);
      uint64_t v51 = *(void *)(v50 + 8);
      uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = v52(v49, v51);
      sub_22080B0D8((uint64_t)&v90);
      if (v53 < 0) {
        goto LABEL_67;
      }
      if (!v53) {
        goto LABEL_47;
      }
      char v54 = 0;
LABEL_48:
      if (v46 != *((void *)v47 + 2)) {
        goto LABEL_74;
      }
      if (!v46) {
        goto LABEL_41;
      }
      if (v46 > *((void *)v30 + 2)) {
        goto LABEL_68;
      }
      char v81 = v54;
      uint64_t v82 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v47 = sub_22080AB34((uint64_t)v47);
      }
      uint64_t v55 = 0;
      unint64_t v56 = 0;
      do
      {
        sub_22080B5B8((uint64_t)&v86[v55], (uint64_t)&v90);
        if (v56 >= *((void *)v47 + 2))
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        ++v56;
        uint64_t v58 = v93;
        uint64_t v57 = v94;
        uint64_t v59 = __swift_project_boxed_opaque_existential_1(&v90, v93);
        uint64_t v88 = v58;
        uint64_t v89 = *(void *)(v57 + 8);
        uint64_t v60 = __swift_allocate_boxed_opaque_existential_1(v87);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v60, v59, v58);
        uint64_t v61 = *(void *)&v47[v55 + 56];
        uint64_t v62 = *(void *)&v47[v55 + 64];
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v47[v55 + 32], v61);
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v62 + 72))(v48, v48, v87, v61, v62);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
        sub_22080B0D8((uint64_t)&v90);
        v55 += 40;
      }
      while (v46 != v56);
      Swift::Int v30 = v77;
      uint64_t v53 = v82;
      char v54 = v81;
LABEL_41:
      ++v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v53, v54);
      *(void *)uint64_t v80 = v47;
      *(void *)(v80 + 8) = v85;
      *(void *)(v80 + 16) = v84;
      if (v44 != v79) {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = a2;
      uint64_t v25 = a3;
LABEL_59:
      sub_22080B6B4(v70, v69, v68);
      uint64_t v16 = v73;
      if ((v96 & 1) != 0 || v83 + 1 == v25) {
        goto LABEL_28;
      }
      if (v83 + 1 < v42) {
        goto LABEL_70;
      }
      if (v83 == a3 - 1) {
        goto LABEL_71;
      }
      ++v83;
      uint64_t v15 = v65;
      if (v65 == v63) {
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_47:
    uint64_t v53 = 0;
    char v54 = 2;
    goto LABEL_48;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_22080B6B4(v67, v16, v66);
}

uint64_t sub_220885794(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a5 + 32))(&v25, a3, a5);
  long long v8 = v27;
  char v9 = v28;
  long long v19 = v25;
  uint64_t v20 = v26;
  long long v21 = v27;
  uint64_t v10 = v27;
  char v22 = v28;
  if (v28)
  {
    if (v28 == 1 && *(void *)(v27 + 16))
    {
      uint64_t v10 = *(void *)(v27 + 32);
    }
    else
    {
      sub_220883950(v27, *((uint64_t *)&v27 + 1), v28);
      if (v12) {
        uint64_t v10 = 0;
      }
      else {
        uint64_t v10 = v11;
      }
    }
  }
  uint64_t v23 = v10;
  sub_220883950(v8, *((uint64_t *)&v8 + 1), v9);
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v13;
  }
  uint64_t v24 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  sub_220884654();
  sub_22093E820();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v8, *((uint64_t *)&v8 + 1), v9);
  uint64_t v16 = *((void *)a1 + 2);
  char v17 = *((unsigned char *)a1 + 40);
  long long v19 = *a1;
  uint64_t v20 = v16;
  long long v21 = *(long long *)((char *)a1 + 24);
  char v22 = v17;
  return (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 80))(&v19, v29, v30, a3, a5);
}

uint64_t sub_220885930()
{
  return 16;
}

__n128 sub_22088593C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_220885950()
{
  return 32;
}

__n128 sub_22088595C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of DataFrameProtocol.base.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DataFrameProtocol.rows.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DataFrameProtocol.columns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DataFrameProtocol.shape.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DataFrameProtocol.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

__n128 AnyCategoricalSummary.init<A>(_:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 v8 = *a1;
  unint64_t v5 = a1[1].n128_u64[0];
  uint64_t v6 = sub_22093F020();
  swift_bridgeObjectRelease();
  __n128 result = v8;
  *a3 = v8;
  a3[1].n128_u64[0] = v5;
  a3[1].n128_u64[1] = v6;
  a3[2].n128_u64[0] = a2;
  return result;
}

__n128 AnyCategoricalSummary.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v6 = *a1;
  unint64_t v3 = a1[1].n128_u64[0];
  uint64_t v4 = sub_220885C24(a1[1].n128_i64[1]);
  swift_bridgeObjectRelease();
  __n128 result = v6;
  *a2 = v6;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u64[0] = MEMORY[0x263F8DB68];
  return result;
}

uint64_t AnyCategoricalSummary.someCount.getter()
{
  return *(void *)v0;
}

uint64_t AnyCategoricalSummary.someCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.someCount.modify())(void)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.noneCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AnyCategoricalSummary.noneCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.noneCount.modify())(void)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.totalCount.getter()
{
  uint64_t v1 = v0[1];
  uint64_t result = *v0 + v1;
  if (__OFADD__(*v0, v1)) {
    __break(1u);
  }
  return result;
}

uint64_t AnyCategoricalSummary.uniqueCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AnyCategoricalSummary.uniqueCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.uniqueCount.modify())(void)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.mode.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnyCategoricalSummary.mode.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*AnyCategoricalSummary.mode.modify())(void)
{
  return nullsub_5;
}

uint64_t AnyCategoricalSummary.modeType.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t AnyCategoricalSummary.modeType.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*AnyCategoricalSummary.modeType.modify())(void)
{
  return nullsub_5;
}

uint64_t sub_220885C24(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v10;
    do
    {
      sub_220834DA0(v4, (uint64_t)&v8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v9, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220885D4C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      sub_22080B7F4(*(v4 - 1), *v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 2;
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220885E74(uint64_t a1)
{
  uint64_t v2 = sub_22093E100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v6, 0);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v15 = v9;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v11 = *(void *)(v8 + 56);
    do
    {
      v15(v5, v10, v2);
      swift_dynamicCast();
      uint64_t v7 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v17;
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220826E78((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v17;
      }
      *(void *)(v7 + 16) = v13 + 1;
      sub_220835340(&v16, (_OWORD *)(v7 + 32 * v13 + 32));
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_220886044(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22088616C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220886290(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2208863B4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2208864D8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2208865FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_220826E78(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      v4 += 8;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826E78(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_220826E78((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_220835340(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22088671C(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18720);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_220827078(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_220835280(v11, (uint64_t)v4, &qword_267F18720);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220827078(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_220827078(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_2208874A0((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_220886958(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2208270B8(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (char *)(a1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v7 = *v4;
      sub_220834CD4(*((void *)v4 - 4), *((void *)v4 - 3));
      sub_220831F30(v5, v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18710);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FE0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2208270B8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_2208270B8((void *)(v8 > 1), v9 + 1, 1);
        uint64_t v2 = v17;
      }
      v4 += 40;
      *(void *)(v2 + 16) = v9 + 1;
      uint64_t v10 = v2 + 40 * v9;
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 40) = v13;
      *(void *)(v10 + 48) = v14;
      *(void *)(v10 + 56) = v15;
      *(unsigned char *)(v10 + 64) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220886AC0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_2208270F8(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (char *)(a1 + 56);
    do
    {
      char v5 = *v4;
      uint64_t v10 = *((void *)v4 - 2);
      uint64_t v11 = *((void *)v4 - 1);
      sub_220831F30(v10, v11, *v4);
      sub_220831F30(v10, v11, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F186F8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FD8);
      swift_dynamicCast();
      sub_22080B6B4(v10, v11, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2208270F8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v16;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_2208270F8((void *)(v6 > 1), v7 + 1, 1);
        uint64_t v2 = v16;
      }
      *(void *)(v2 + 16) = v7 + 1;
      uint64_t v8 = v2 + 32 * v7;
      *(unsigned char *)(v8 + 32) = v12;
      v4 += 32;
      *(void *)(v8 + 40) = v13;
      *(void *)(v8 + 48) = v14;
      *(unsigned char *)(v8 + 56) = v15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220886C40(uint64_t a1)
{
  return sub_220886FD4(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_220827138, &qword_267F186E0, &qword_267F18FD0);
}

uint64_t sub_220886C68(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_220827178(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (char *)(a1 + 56);
    do
    {
      char v5 = *v4;
      uint64_t v10 = *((void *)v4 - 2);
      uint64_t v11 = *((void *)v4 - 1);
      sub_220831F30(v10, v11, *v4);
      sub_220831F30(v10, v11, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F186C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FC8);
      swift_dynamicCast();
      sub_22080B6B4(v10, v11, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220827178(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_220827178((void *)(v6 > 1), v7 + 1, 1);
        uint64_t v2 = v17;
      }
      *(void *)(v2 + 16) = v7 + 1;
      uint64_t v8 = v2 + 32 * v7;
      *(_DWORD *)(v8 + 32) = v12;
      v4 += 32;
      *(unsigned char *)(v8 + 36) = v13;
      *(void *)(v8 + 40) = v14;
      *(void *)(v8 + 48) = v15;
      *(unsigned char *)(v8 + 56) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220886E00(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2208271B8(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (char *)(a1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v7 = *v4;
      swift_bridgeObjectRetain();
      sub_220831F30(v5, v6, v7);
      swift_bridgeObjectRetain();
      sub_220831F30(v5, v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F186B0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FC0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v5, v6, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2208271B8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_2208271B8((void *)(v8 > 1), v9 + 1, 1);
        uint64_t v2 = v17;
      }
      v4 += 40;
      *(void *)(v2 + 16) = v9 + 1;
      uint64_t v10 = v2 + 40 * v9;
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 40) = v13;
      *(void *)(v10 + 48) = v14;
      *(void *)(v10 + 56) = v15;
      *(unsigned char *)(v10 + 64) = v16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_220886FAC(uint64_t a1)
{
  return sub_220886FD4(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2208271F8, &qword_267F18698, &qword_267F18FB8);
}

uint64_t sub_220886FD4(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    a2(0, v4, 0);
    uint64_t v5 = v23;
    char v7 = (char *)(a1 + 64);
    do
    {
      char v8 = *v7;
      uint64_t v16 = *((void *)v7 - 2);
      uint64_t v17 = *((void *)v7 - 1);
      sub_220831F30(v16, v17, *v7);
      sub_220831F30(v16, v17, v8);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      __swift_instantiateConcreteTypeFromMangledName(a4);
      swift_dynamicCast();
      sub_22080B6B4(v16, v17, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v23;
      }
      unint64_t v10 = *(void *)(v5 + 16);
      unint64_t v9 = *(void *)(v5 + 24);
      if (v10 >= v9 >> 1)
      {
        a2(v9 > 1, v10 + 1, 1);
        uint64_t v5 = v23;
      }
      *(void *)(v5 + 16) = v10 + 1;
      uint64_t v11 = v5 + 40 * v10;
      *(void *)(v11 + 32) = v18;
      v7 += 40;
      *(unsigned char *)(v11 + 40) = v19;
      *(void *)(v11 + 48) = v20;
      *(void *)(v11 + 56) = v21;
      *(unsigned char *)(v11 + 64) = v22;
      --v4;
    }
    while (v4);
  }
  return v5;
}

BOOL _s11TabularData21AnyCategoricalSummaryV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a1[4];
  uint64_t v22 = a1[3];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
  }
  uint64_t v19 = v4;
  swift_bridgeObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
  }
  sub_220835280((uint64_t)v20, (uint64_t)v12, &qword_267F18658);
  sub_220835280((uint64_t)v17, (uint64_t)&v14, &qword_267F18658);
  if (v13)
  {
    sub_220835280((uint64_t)v12, (uint64_t)v11, &qword_267F18658);
    if (*((void *)&v15 + 1))
    {
      v9[0] = v14;
      v9[1] = v15;
      uint64_t v10 = v16;
      char v7 = MEMORY[0x223C6A560](v11, v9);
      sub_220834CE8((uint64_t)v9);
      sub_220834CE8((uint64_t)v11);
      sub_2208352E4((uint64_t)v12, &qword_267F18658);
      sub_2208352E4((uint64_t)v17, &qword_267F18658);
      sub_2208352E4((uint64_t)v20, &qword_267F18658);
      if ((v7 & 1) == 0) {
        return 0;
      }
      return v6 == v5;
    }
    sub_220834CE8((uint64_t)v11);
  }
  else if (!*((void *)&v15 + 1))
  {
    sub_2208352E4((uint64_t)v12, &qword_267F18658);
    sub_2208352E4((uint64_t)v17, &qword_267F18658);
    sub_2208352E4((uint64_t)v20, &qword_267F18658);
    return v6 == v5;
  }
  sub_2208352E4((uint64_t)v12, &qword_267F18660);
  sub_2208352E4((uint64_t)v17, &qword_267F18658);
  sub_2208352E4((uint64_t)v20, &qword_267F18658);
  return 0;
}

uint64_t destroy for AnyCategoricalSummary()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyCategoricalSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AnyCategoricalSummary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for AnyCategoricalSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AnyCategoricalSummary()
{
  return &type metadata for AnyCategoricalSummary;
}

uint64_t sub_2208874A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Column.decoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  uint64_t v83 = a6;
  uint64_t v82 = a5;
  uint64_t v81 = a4;
  uint64_t v80 = a1;
  char v68 = a7;
  uint64_t v67 = sub_22093EF20();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v67);
  uint64_t v63 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v64 = (char *)&v60 - v13;
  MEMORY[0x270FA5388](v12);
  char v66 = (char *)&v60 - v14;
  uint64_t v79 = sub_22093ED30();
  uint64_t v72 = *(void (***)(uint64_t, uint64_t))(v79 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)&v60 - v16;
  uint64_t v73 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = sub_22093ED30();
  uint64_t v74 = *(void (***)(char *, uint64_t))(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  char v87 = (char *)&v60 - v21;
  uint64_t v88 = v18;
  uint64_t v76 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v84 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_22093ED30();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v60 - v25);
  uint64_t v27 = v7[1];
  unint64_t v29 = v7[2];
  uint64_t v102 = *v7;
  uint64_t v28 = v102;
  uint64_t v103 = v27;
  unint64_t v104 = v29;
  swift_bridgeObjectRetain();
  Swift::Int v30 = Column.count.getter(a2);
  Column.init(name:capacity:)(v28, v27, v30, a3, &v105);
  *(void *)&long long v99 = v28;
  *((void *)&v99 + 1) = v27;
  unint64_t v100 = v29;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v98 = v92;
  uint64_t v61 = v28;
  *(void *)&long long v95 = v28;
  uint64_t v31 = TupleTypeMetadata2;
  uint64_t v62 = v27;
  *((void *)&v95 + 1) = v27;
  unint64_t v96 = v29;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  unint64_t v33 = sub_220887EF8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  long long v95 = v99;
  unint64_t v96 = v100;
  long long v97 = v101;
  *(void *)&long long v92 = v32;
  uint64_t v91 = a2;
  *((void *)&v92 + 1) = a2;
  uint64_t v35 = v32;
  unint64_t v93 = v33;
  uint64_t v90 = WitnessTable;
  uint64_t v94 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v89 = v31 - 8;
  char v86 = (void (**)(char *, char *, uint64_t))(v74 + 4);
  uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 6);
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v76 + 4);
  uint64_t v70 = (void (**)(uint64_t, uint64_t))(v73 + 1);
  ++v76;
  ++v74;
  v73 += 7;
  ++v72;
  uint64_t v71 = v26;
  uint64_t v36 = v88;
  while (1)
  {
    while (1)
    {
      *(void *)&long long v99 = v35;
      *((void *)&v99 + 1) = v91;
      unint64_t v100 = v33;
      *(void *)&long long v101 = v90;
      sub_22093EED0();
      sub_22093EEC0();
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v26, 1, v31) == 1)
      {
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v49 = v68;
        *char v68 = v105;
        *(_OWORD *)(v49 + 1) = v106;
        return result;
      }
      uint64_t v38 = *v26;
      uint64_t v39 = v87;
      (*v86)(v87, (char *)v26 + *(int *)(v31 + 48), v19);
      if ((*v85)(v39, 1, v36) != 1) {
        break;
      }
      (*v74)(v39, v19);
      uint64_t v37 = (uint64_t)v78;
      (*v73)(v78, 1, 1, a3);
      type metadata accessor for Column();
      Column.append(_:)(v37);
      (*v72)(v37, v79);
    }
    uint64_t v69 = v38;
    unint64_t v40 = v33;
    uint64_t v41 = v35;
    uint64_t v42 = v31;
    uint64_t v43 = v19;
    uint64_t v44 = v84;
    (*v75)(v84, v39, v36);
    uint64_t v45 = (uint64_t)v77;
    uint64_t v46 = v107;
    sub_22093E200();
    uint64_t v107 = v46;
    if (v46) {
      break;
    }
    uint64_t v47 = type metadata accessor for Column();
    Column.append(_:)(v45, v47);
    (*v70)(v45, a3);
    (*v76)(v44, v36);
    uint64_t v19 = v43;
    uint64_t v31 = v42;
    uint64_t v35 = v41;
    unint64_t v33 = v40;
    uint64_t v26 = v71;
  }
  uint64_t v50 = v107;
  *(void *)&long long v99 = v107;
  MEMORY[0x223C6AF70](v107);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  uint64_t v51 = v66;
  uint64_t v52 = v67;
  if (swift_dynamicCast())
  {
    MEMORY[0x223C6AF60](v50);
    uint64_t v53 = v65;
    char v54 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    uint64_t v55 = v64;
    v54(v64, v51, v52);
    unint64_t v56 = v63;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v63, v55, v52);
    uint64_t v57 = type metadata accessor for ColumnDecodingError();
    sub_220887FC0();
    swift_allocError();
    uint64_t v58 = v62;
    *uint64_t v59 = v61;
    v59[1] = v58;
    v59[2] = v69;
    v54((char *)v59 + *(int *)(v57 + 24), v56, v52);
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
  }
  (*v76)(v84, v88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x223C6AF60](v99);
}

unint64_t sub_220887EF8()
{
  unint64_t result = qword_267F18D28;
  if (!qword_267F18D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18D20);
    sub_220832008();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18D28);
  }
  return result;
}

uint64_t type metadata accessor for ColumnDecodingError()
{
  uint64_t result = qword_267F19010;
  if (!qword_267F19010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_220887FC0()
{
  unint64_t result = qword_267F18FF8;
  if (!qword_267F18FF8)
  {
    type metadata accessor for ColumnDecodingError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18FF8);
  }
  return result;
}

uint64_t ColumnDecodingError.init(columnName:rowIndex:decodingError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v6 = (char *)a5 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  uint64_t v7 = sub_22093EF20();
  char v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t AnyColumn.decoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v13 = v6[3];
  uint64_t v14 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 80))(v13);
  if (v15 == swift_getAssociatedTypeWitness())
  {
    sub_22083B5D0((uint64_t)v7, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v16 = type metadata accessor for Column();
    swift_dynamicCast();
    uint64_t v17 = v28;
    Column.decoded<A, B>(_:using:)(a1, v16, a2, a3, a4, a5, &v22);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v17)
    {
      v25[0] = v22;
      v25[1] = v23;
      v25[2] = v24;
      type metadata accessor for Column();
      Column.eraseToAnyColumn()(a6);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_22080B5B8((uint64_t)v7, (uint64_t)v25);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v20 = v26;
    uint64_t v19 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(uint64_t))(*(void *)(v19 + 8) + 80))(v20);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumn.decode<A, B>(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = v6[3];
  uint64_t v12 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v13);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v13);
  if (v14 == swift_getAssociatedTypeWitness())
  {
    sub_22083B5D0((uint64_t)v7, (uint64_t)v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v15 = type metadata accessor for Column();
    swift_dynamicCast();
    uint64_t v23 = type metadata accessor for Column();
    uint64_t v24 = &off_26D2223C0;
    uint64_t v16 = v25;
    Column.decoded<A, B>(_:using:)(a2, v15, a3, a4, a5, a6, &v22);
    swift_release();
    swift_bridgeObjectRelease();
    if (v16)
    {
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v22);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
      return sub_2208343B8(&v22, (uint64_t)v7);
    }
  }
  else
  {
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v19 = v7[3];
    uint64_t v18 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v19);
    (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 80))(v19);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.decode<A, B>(_:inColumn:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9 = v8;
  uint64_t v15 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_22080BA90(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_22080AB34(v15);
  uint64_t v15 = result;
  if ((v16 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v16 < *(void *)(v15 + 16))
  {
    uint64_t result = AnyColumn.decode<A, B>(_:using:)(result, a4, a5, a6, a7, a8);
    *unint64_t v9 = v15;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DataFrame.decode<A, B>(_:inColumn:using:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v8 = v7;
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v14 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_22080BA90(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v15 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_22080AB34(v14);
  uint64_t v14 = result;
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v15 < *(void *)(v14 + 16))
  {
    uint64_t result = AnyColumn.decode<A, B>(_:using:)(result, a3, a4, a5, a6, a7);
    *char v8 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ColumnDecodingError.columnName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ColumnDecodingError.columnName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ColumnDecodingError.columnName.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnDecodingError.rowIndex.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ColumnDecodingError.rowIndex.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*ColumnDecodingError.rowIndex.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnDecodingError.decodingError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  uint64_t v4 = sub_22093EF20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ColumnDecodingError.decodingError.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColumnDecodingError() + 24);
  uint64_t v4 = sub_22093EF20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ColumnDecodingError.decodingError.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnDecodingError.debugDescription.getter()
{
  uint64_t v1 = sub_22093EF20();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22093EF10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColumnDecodingError();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v9 + 24), v1);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v10 == *MEMORY[0x263F8DCB0] || v10 == *MEMORY[0x263F8DCC0])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v11 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267F19000) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  }
  else if (v10 == *MEMORY[0x263F8DCA8])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19008);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v14 + 48)], v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    if (v10 != *MEMORY[0x263F8DCB8])
    {
      uint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t v16 = *(void *)(v0 + 16);
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093F030();
      uint64_t v12 = v17;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v12;
    }
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0x6D756C6F63206E49;
  unint64_t v18 = 0xEB0000000027206ELL;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t v16 = *(void *)(v0 + 16);
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093EF00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t *initializeBufferWithCopyOfBuffer for ColumnDecodingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22093EF20();
    int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ColumnDecodingError(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22093EF20();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ColumnDecodingError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22093EF20();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ColumnDecodingError(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22093EF20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ColumnDecodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22093EF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ColumnDecodingError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22093EF20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnDecodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_220889294);
}

uint64_t sub_220889294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22093EF20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ColumnDecodingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_220889358);
}

uint64_t sub_220889358(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22093EF20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_220889400()
{
  uint64_t result = sub_22093EF20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of GroupSummaries.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GroupSummaries.description(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2208894CC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_220889510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_22088956C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2208895E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t sub_22088963C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_220889684(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for _GroupSummaries()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208896E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_70;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10)
  {
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11)) {
    goto LABEL_65;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12) {
        sub_220893B64(v12, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
      }
LABEL_15:
      unint64_t v18 = *(void **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18) {
        goto LABEL_67;
      }
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v22 = v18[1];
        if (v19 == v22)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v22) {
          goto LABEL_74;
        }
        int v23 = *((unsigned __int8 *)v18 + (v19 >> 3) + 64) & (1 << (v19 & 7));
        if (v23)
        {
          uint64_t v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
          if (v24 < 0) {
            uint64_t v24 = *v18 + 14;
          }
          uint64_t v25 = v24 >> 3;
          uint64_t v27 = v25 - 1;
          BOOL v26 = v25 < 1;
          uint64_t v28 = v25 + 62;
          if (!v26) {
            uint64_t v28 = v27;
          }
          uint64_t v29 = *(void *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFFFC0));
        }
        else
        {
          uint64_t v29 = 0;
        }
        uint64_t v30 = *v4;
        swift_beginAccess();
        uint64_t v31 = *(uint64_t **)(v30 + 16);
        if (!v31) {
          goto LABEL_68;
        }
        uint64_t v32 = *v31;
        uint64_t v33 = v31[1];
        if (v33 >= *v31)
        {
          BOOL v44 = __OFADD__(v33, 1);
          uint64_t v46 = v33 + 1;
          if (v44) {
            goto LABEL_59;
          }
          if (v32 < v46)
          {
            if (v32 + 0x4000000000000000 < 0) {
              goto LABEL_63;
            }
            if (2 * v32 <= v46) {
              uint64_t v32 = v46;
            }
            else {
              v32 *= 2;
            }
          }
          sub_22088F714((uint64_t)v31, v32, v51);
          uint64_t v47 = *(void *)(v30 + 16);
          if (!v47) {
            goto LABEL_69;
          }
          if ((*(void *)(v47 + 8) & 0x8000000000000000) != 0) {
            goto LABEL_61;
          }
          MEMORY[0x223C6B140]();
          uint64_t v20 = (void *)v51[0];
          uint64_t v21 = v51[1];
          *(void *)(v30 + 16) = v51[0];
          *(void *)(v30 + 24) = v21;
          sub_220890BC8(v29, v23 == 0, v20);
        }
        else
        {
          if (v23)
          {
            uint64_t v34 = v32 + 7;
            if (__OFADD__(v32, 7)) {
              goto LABEL_62;
            }
            uint64_t v35 = v31 + 8;
            if (v34 < 0) {
              uint64_t v34 = v32 + 14;
            }
            uint64_t v36 = v34 >> 3;
            uint64_t v37 = v36 - 1;
            BOOL v26 = v36 < 1;
            uint64_t v38 = v36 + 62;
            if (!v26) {
              uint64_t v38 = v37;
            }
            *(uint64_t *)((char *)&v35[v33 + 8] + (v38 & 0xFFFFFFFFFFFFFFC0)) = v29;
            uint64_t v39 = v31[1];
            uint64_t v40 = v39 + 7;
            if (v39 >= 0) {
              uint64_t v40 = v31[1];
            }
            uint64_t v41 = v39 - (v40 & 0xFFFFFFFFFFFFFFF8);
            if (v41 >= 0) {
              char v42 = 1 << v41;
            }
            else {
              char v42 = 0;
            }
            *((unsigned char *)v35 + (v40 >> 3)) |= v42;
            uint64_t v43 = v31[1];
            BOOL v44 = __OFADD__(v43, 1);
            uint64_t v45 = v43 + 1;
            if (v44) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v48 = v31[2];
            BOOL v44 = __OFADD__(v48, 1);
            uint64_t v49 = v48 + 1;
            if (v44) {
              goto LABEL_64;
            }
            v31[2] = v49;
            BOOL v44 = __OFADD__(v33, 1);
            uint64_t v45 = v33 + 1;
            if (v44) {
              goto LABEL_60;
            }
          }
          v31[1] = v45;
        }
        unint64_t v18 = (void *)*v9;
        ++v19;
        if (!*v9) {
          goto LABEL_67;
        }
      }
    }
    goto LABEL_72;
  }
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (v15)
  {
    uint64_t v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0) {
        goto LABEL_66;
      }
      if (2 * v16 <= v12) {
        uint64_t v16 = v12;
      }
      else {
        v16 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
    uint64_t v17 = swift_allocObject();
    sub_22088E6B0((uint64_t)v15, v16, (uint64_t *)&v52);
    *(_OWORD *)(v17 + 16) = v52;
    swift_release();
    *uint64_t v4 = v17;
    goto LABEL_15;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220889AD4(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  unint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(void *)v9)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if ((v7 & 0x8000000000000000) != 0 || (uint64_t v10 = *(void *)(*(void *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8) {
    goto LABEL_76;
  }
  uint64_t v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    uint64_t v16 = *v13;
    if (!v16) {
      goto LABEL_86;
    }
    uint64_t v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      if (2 * v17 <= v11) {
        uint64_t v17 = v6 + v8 - v7;
      }
      else {
        v17 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
    uint64_t v18 = swift_allocObject();
    sub_22088E6B0((uint64_t)v16, v17, (uint64_t *)&v52);
    *(_OWORD *)(v18 + 16) = v52;
    uint64_t result = swift_release();
    *uint64_t v2 = v18;
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11) {
      uint64_t result = sub_220893B64(v11, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
    }
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
LABEL_21:
    if (v15)
    {
      uint64_t v50 = (uint64_t)a1;
      sub_22087C32C((uint64_t)a1);
      unint64_t v19 = v8 - 1;
      unint64_t v20 = v7;
      while (1)
      {
        uint64_t v21 = *(void **)v9;
        if (!*(void *)v9) {
          goto LABEL_80;
        }
        if ((int64_t)v20 >= v21[1]) {
          goto LABEL_87;
        }
        int v22 = *((unsigned __int8 *)v21 + (v20 >> 3) + 64) & (1 << (v20 & 7));
        if (v22)
        {
          uint64_t v23 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
            goto LABEL_75;
          }
          if (v23 < 0) {
            uint64_t v23 = *v21 + 14;
          }
          uint64_t v24 = v23 >> 3;
          uint64_t v25 = v24 - 1;
          BOOL v15 = v24 < 1;
          uint64_t v26 = v24 + 62;
          if (!v15) {
            uint64_t v26 = v25;
          }
          uint64_t v27 = *(void *)((char *)&v21[v20 + 16] + (v26 & 0xFFFFFFFFFFFFFFC0));
        }
        else
        {
          uint64_t v27 = 0;
        }
        uint64_t v28 = *v2;
        swift_beginAccess();
        uint64_t v29 = *(uint64_t **)(v28 + 16);
        if (!v29) {
          goto LABEL_81;
        }
        uint64_t v30 = *v29;
        uint64_t v31 = v29[1];
        if (v31 >= *v29)
        {
          BOOL v42 = __OFADD__(v31, 1);
          uint64_t v44 = v31 + 1;
          if (v42) {
            goto LABEL_69;
          }
          if (v30 < v44)
          {
            if (v30 + 0x4000000000000000 < 0) {
              goto LABEL_73;
            }
            if (2 * v30 <= v44) {
              uint64_t v30 = v44;
            }
            else {
              v30 *= 2;
            }
          }
          sub_22088F714((uint64_t)v29, v30, v51);
          uint64_t v45 = *(void *)(v28 + 16);
          if (!v45) {
            goto LABEL_82;
          }
          if ((*(void *)(v45 + 8) & 0x8000000000000000) != 0) {
            goto LABEL_71;
          }
          MEMORY[0x223C6B140]();
          uint64_t v46 = (void *)v51[0];
          uint64_t v47 = v51[1];
          *(void *)(v28 + 16) = v51[0];
          *(void *)(v28 + 24) = v47;
          sub_220890BC8(v27, v22 == 0, v46);
          if (v19 == v20) {
            return sub_22087C2F8(v50);
          }
        }
        else
        {
          if (v22)
          {
            uint64_t v32 = v30 + 7;
            if (__OFADD__(v30, 7)) {
              goto LABEL_72;
            }
            uint64_t v33 = v29 + 8;
            if (v32 < 0) {
              uint64_t v32 = v30 + 14;
            }
            uint64_t v34 = v32 >> 3;
            uint64_t v35 = v34 - 1;
            BOOL v15 = v34 < 1;
            uint64_t v36 = v34 + 62;
            if (!v15) {
              uint64_t v36 = v35;
            }
            *(uint64_t *)((char *)&v33[v31 + 8] + (v36 & 0xFFFFFFFFFFFFFFC0)) = v27;
            uint64_t v37 = v29[1];
            uint64_t v38 = v37 + 7;
            if (v37 >= 0) {
              uint64_t v38 = v29[1];
            }
            uint64_t v39 = v37 - (v38 & 0xFFFFFFFFFFFFFFF8);
            if (v39 >= 0) {
              char v40 = 1 << v39;
            }
            else {
              char v40 = 0;
            }
            *((unsigned char *)v33 + (v38 >> 3)) |= v40;
            uint64_t v41 = v29[1];
            BOOL v42 = __OFADD__(v41, 1);
            uint64_t v43 = v41 + 1;
            if (v42) {
              goto LABEL_70;
            }
          }
          else
          {
            uint64_t v48 = v29[2];
            BOOL v42 = __OFADD__(v48, 1);
            uint64_t v49 = v48 + 1;
            if (v42) {
              goto LABEL_74;
            }
            v29[2] = v49;
            BOOL v42 = __OFADD__(v31, 1);
            uint64_t v43 = v31 + 1;
            if (v42) {
              goto LABEL_70;
            }
          }
          v29[1] = v43;
          if (v19 == v20) {
            return sub_22087C2F8(v50);
          }
        }
        if (v7 != 0x7FFFFFFFFFFFFFFFLL && (uint64_t)++v20 < (uint64_t)v8) {
          continue;
        }
        __break(1u);
        return sub_22087C2F8(v50);
      }
    }
    goto LABEL_78;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220889F10(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)&long long v77 = *(void *)a1;
  *((void *)&v77 + 1) = v3;
  uint64_t v82 = *(void *)(a1 + 16);
  uint64_t v5 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v79 = *(void *)(a1 + 32);
  uint64_t v80 = v4;
  int v78 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *v1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_109;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  long long v86 = *(_OWORD *)v5;
  unsigned __int8 v87 = *(unsigned char *)(v5 + 16);
  int v9 = v87;
  uint64_t v10 = *((void *)&v86 + 1);
  uint64_t v11 = v86;
  if (v87)
  {
    if (v87 != 1 || !*(void *)(v86 + 16))
    {
      uint64_t v16 = 0;
      goto LABEL_26;
    }
    uint64_t v75 = v2;
    uint64_t v76 = (unint64_t *)(v86 + 16);
    uint64_t v74 = v8;
    swift_bridgeObjectRetain();
    char v12 = 0;
    uint64_t v15 = *(void *)(v86 + 32);
    uint64_t v13 = *(void *)(v86 + 40);
    uint64_t v14 = v86 + 32;
  }
  else
  {
    uint64_t v74 = v8;
    uint64_t v75 = v2;
    uint64_t v76 = (unint64_t *)(v86 + 16);
    uint64_t v14 = v86 + 32;
    char v12 = 1;
    uint64_t v13 = *((void *)&v86 + 1);
    uint64_t v15 = v86;
  }
  uint64_t v17 = v82 + 16;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v82 + 16);
  if (!v18)
  {
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v15 < 0 || (uint64_t v19 = *(void *)(v18 + 8), v19 < v15))
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v13 < 0 || v19 < v13) {
    goto LABEL_99;
  }
  uint64_t v16 = v13 - v15;
  if ((v12 & 1) == 0)
  {
    unint64_t v20 = v76;
    if (*v76 != 1)
    {
      uint64_t v21 = (uint64_t *)(v14 + 24);
      unint64_t v22 = 1;
      while (v22 < *v20)
      {
        uint64_t v23 = *(v21 - 1);
        uint64_t v24 = *v21;
        swift_beginAccess();
        if (!*(void *)v17) {
          goto LABEL_108;
        }
        if (v23 < 0) {
          goto LABEL_98;
        }
        uint64_t v25 = *(void *)(*(void *)v17 + 8);
        if (v25 < v23) {
          goto LABEL_98;
        }
        if (v24 < 0 || v25 < v24) {
          goto LABEL_99;
        }
        BOOL v26 = __OFADD__(v16, v24 - v23);
        v16 += v24 - v23;
        if (v26) {
          goto LABEL_101;
        }
        ++v22;
        unint64_t v20 = v76;
        v21 += 2;
        if (v22 == *v76) {
          goto LABEL_24;
        }
      }
      goto LABEL_100;
    }
LABEL_24:
    sub_220894638((uint64_t)&v86);
  }
  uint64_t v8 = v74;
  uint64_t v2 = v75;
LABEL_26:
  uint64_t v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = (uint64_t **)(*v81 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v31 = *v29;
    if (!*v29)
    {
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      int v73 = 0;
      uint64_t v72 = 128;
      goto LABEL_118;
    }
    uint64_t v32 = *v31;
    if (*v31 < v27)
    {
      if (v32 + 0x4000000000000000 < 0)
      {
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
      if (2 * v32 <= v27) {
        uint64_t v32 = v27;
      }
      else {
        v32 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
    uint64_t v33 = swift_allocObject();
    sub_22088E6B0((uint64_t)v31, v32, (uint64_t *)&v88);
    *(_OWORD *)(v33 + 16) = v88;
    swift_release();
    *uint64_t v81 = v33;
    uint64_t v30 = v11;
    if (!v9) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
  swift_beginAccess();
  if (!*v29)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if (**v29 < v27) {
    sub_220893B64(v27, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
  }
  uint64_t v30 = v11;
  if (v9)
  {
LABEL_40:
    if (v9 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v35 = *(void *)(v82 + 16);
      if (!v35) {
        goto LABEL_112;
      }
      uint64_t v34 = (uint64_t *)(v35 + 8);
    }
    uint64_t v30 = *v34;
  }
LABEL_46:
  sub_22084312C(v2);
  uint64_t v36 = (void **)(v82 + 16);
  uint64_t v37 = swift_beginAccess();
  uint64_t v38 = *(void *)(v82 + 16);
  if (!v38)
  {
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  while (1)
  {
    if (v30 == *(void *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_22080B6B4(v80, v79, v78);
    }
    uint64_t v84 = v30;
    MEMORY[0x270FA5388](v37);
    uint64_t v72 = (uint64_t)&v84;
    sub_220831F30(v11, v10, v9);
    sub_220831F30(v11, v10, v9);
    unint64_t v40 = sub_2208FD268((uint64_t (*)(long long *))sub_22089466C, (uint64_t)&v71, v11, v10, v9);
    sub_22080B6B4(v11, v10, v9);
    if ((_BYTE)v9) {
      break;
    }
    if (v40)
    {
      if (v40 != 1)
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      goto LABEL_117;
    }
LABEL_59:
    if (v84 < v11) {
      goto LABEL_117;
    }
    if (v30 < 0) {
      goto LABEL_113;
    }
    uint64_t v43 = *v36;
    if (!*v36) {
      goto LABEL_105;
    }
    uint64_t v44 = v43[1];
    if (v30 >= v44) {
      goto LABEL_113;
    }
    uint64_t v45 = sub_2208915A0(v30, v43, v44);
    char v47 = v46;
    long long v88 = v77;
    uint64_t v89 = v82;
    uint64_t v90 = v80;
    uint64_t v91 = v79;
    char v92 = v78;
    uint64_t v30 = sub_2208937D8(v30);
    uint64_t v48 = *v81;
    swift_beginAccess();
    uint64_t v49 = *(uint64_t **)(v48 + 16);
    if (!v49) {
      goto LABEL_106;
    }
    int v50 = v47 & 1;
    uint64_t v51 = v89;
    uint64_t v11 = v90;
    uint64_t v10 = v91;
    LOBYTE(v9) = v92;
    uint64_t v52 = *v49;
    uint64_t v53 = v49[1];
    if (v53 >= *v49)
    {
      BOOL v26 = __OFADD__(v53, 1);
      uint64_t v64 = v53 + 1;
      if (v26) {
        goto LABEL_92;
      }
      if (v52 < v64)
      {
        if (v52 + 0x4000000000000000 < 0) {
          goto LABEL_97;
        }
        if (2 * v52 <= v64) {
          uint64_t v52 = v64;
        }
        else {
          v52 *= 2;
        }
      }
      sub_22088F714((uint64_t)v49, v52, &v84);
      uint64_t v65 = *(void *)(v48 + 16);
      if (!v65) {
        goto LABEL_107;
      }
      if ((*(void *)(v65 + 8) & 0x8000000000000000) != 0) {
        goto LABEL_94;
      }
      MEMORY[0x223C6B140]();
      char v66 = (void *)v84;
      unint64_t v67 = v85;
      *(void *)(v48 + 16) = v84;
      *(void *)(v48 + 24) = v67;
      sub_220890BC8(v45, v50, v66);
    }
    else
    {
      if (v50)
      {
        uint64_t v68 = v49[2];
        BOOL v26 = __OFADD__(v68, 1);
        uint64_t v69 = v68 + 1;
        if (v26) {
          goto LABEL_96;
        }
        v49[2] = v69;
      }
      else
      {
        uint64_t v54 = v52 + 7;
        if (__OFADD__(v52, 7)) {
          goto LABEL_95;
        }
        uint64_t v55 = v49 + 8;
        if (v54 < 0) {
          uint64_t v54 = v52 + 14;
        }
        uint64_t v56 = v54 >> 3;
        uint64_t v58 = v56 - 1;
        BOOL v57 = v56 < 1;
        uint64_t v59 = v56 + 62;
        if (!v57) {
          uint64_t v59 = v58;
        }
        *(uint64_t *)((char *)&v55[v53 + 8] + (v59 & 0xFFFFFFFFFFFFFFC0)) = v45;
        uint64_t v60 = v49[1];
        uint64_t v61 = v60 + 7;
        if (v60 >= 0) {
          uint64_t v61 = v49[1];
        }
        uint64_t v62 = v60 - (v61 & 0xFFFFFFFFFFFFFFF8);
        if (v62 >= 0) {
          char v63 = 1 << v62;
        }
        else {
          char v63 = 0;
        }
        *((unsigned char *)v55 + (v61 >> 3)) |= v63;
        uint64_t v53 = v49[1];
      }
      BOOL v26 = __OFADD__(v53, 1);
      uint64_t v39 = v53 + 1;
      if (v26) {
        goto LABEL_93;
      }
      v49[1] = v39;
    }
    uint64_t v36 = (void **)(v51 + 16);
    uint64_t v37 = swift_beginAccess();
    uint64_t v38 = *(void *)(v51 + 16);
    if (!v38) {
      goto LABEL_104;
    }
  }
  if (v9 == 1)
  {
    unint64_t v41 = *(void *)(v11 + 16);
    if (v40 == v41)
    {
      sub_22080B6B4(v11, v10, 1);
      goto LABEL_117;
    }
    if (v40 >= v41) {
      goto LABEL_91;
    }
    uint64_t v42 = *(void *)(v11 + 16 * v40 + 32);
    sub_22080B6B4(v11, v10, 1);
    uint64_t v11 = v42;
    goto LABEL_59;
  }
  if (v40)
  {
    int v73 = 0;
    uint64_t v72 = 91;
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v84 = 0x6E6F697469736F70;
  unint64_t v85 = 0xE900000000000020;
  uint64_t v83 = v30;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v73 = 0;
  uint64_t v72 = 169;
LABEL_118:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088A714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_64;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  int v9 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11)) {
    goto LABEL_60;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12) {
        sub_220893C64(v12, 1, &qword_267F18FF0);
      }
LABEL_15:
      uint64_t v18 = *(void **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18) {
        goto LABEL_62;
      }
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v23 = v18[1];
        if (v19 == v23)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v23) {
          goto LABEL_68;
        }
        if ((*((unsigned __int8 *)v18 + (v19 >> 3) + 64) >> (v19 & 7)))
        {
          uint64_t v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v24 < 0) {
            uint64_t v24 = *v18 + 14;
          }
          uint64_t v25 = v24 >> 3;
          uint64_t v27 = v25 - 1;
          BOOL v26 = v25 < 1;
          uint64_t v28 = v25 + 62;
          if (!v26) {
            uint64_t v28 = v27;
          }
          uint64_t v29 = *(void *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFFFC0));
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v29 = 0;
        }
        uint64_t v30 = *v4;
        swift_beginAccess();
        uint64_t v31 = *(uint64_t **)(v30 + 16);
        if (!v31) {
          goto LABEL_63;
        }
        uint64_t v20 = *v31;
        uint64_t v32 = v31[1];
        if (v32 >= *v31)
        {
          BOOL v42 = __OFADD__(v32, 1);
          uint64_t v44 = v32 + 1;
          if (v42) {
            goto LABEL_55;
          }
          if (v20 < v44)
          {
            if (v20 + 0x4000000000000000 < 0) {
              goto LABEL_58;
            }
            if (2 * v20 <= v44) {
              uint64_t v20 = v44;
            }
            else {
              v20 *= 2;
            }
          }
          sub_22088F714((uint64_t)v31, v20, v48);
          sub_2208909EC(*(void **)(v30 + 16), *(void *)(v30 + 24), &qword_267F18FF0);
          uint64_t v21 = (void *)v48[0];
          uint64_t v22 = v48[1];
          *(void *)(v30 + 16) = v48[0];
          *(void *)(v30 + 24) = v22;
          sub_220891394(v29, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v29)
          {
            uint64_t v33 = v20 + 7;
            if (__OFADD__(v20, 7)) {
              goto LABEL_57;
            }
            uint64_t v34 = v31 + 8;
            if (v33 < 0) {
              uint64_t v33 = v20 + 14;
            }
            uint64_t v35 = v33 >> 3;
            uint64_t v36 = v35 - 1;
            BOOL v26 = v35 < 1;
            uint64_t v37 = v35 + 62;
            if (!v26) {
              uint64_t v37 = v36;
            }
            *(void *)((char *)&v34[v32 + 8] + (v37 & 0xFFFFFFFFFFFFFFC0)) = v29;
            uint64_t v38 = v32 / 8;
            uint64_t v39 = v32 - (v37 & 0xFFFFFFFFFFFFFFF8);
            if (v39 >= 0) {
              char v40 = 1 << v39;
            }
            else {
              char v40 = 0;
            }
            *((unsigned char *)v34 + v38) |= v40;
            uint64_t v41 = v31[1];
            BOOL v42 = __OFADD__(v41, 1);
            uint64_t v43 = v41 + 1;
            if (v42) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v45 = v31[2];
            BOOL v42 = __OFADD__(v45, 1);
            uint64_t v46 = v45 + 1;
            if (v42) {
              goto LABEL_59;
            }
            v31[2] = v46;
            BOOL v42 = __OFADD__(v32, 1);
            uint64_t v43 = v32 + 1;
            if (v42) {
              goto LABEL_56;
            }
          }
          v31[1] = v43;
        }
        uint64_t v18 = (void *)*v9;
        ++v19;
        if (!*v9) {
          goto LABEL_62;
        }
      }
    }
    goto LABEL_66;
  }
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (v15)
  {
    uint64_t v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0) {
        goto LABEL_61;
      }
      if (2 * v16 <= v12) {
        uint64_t v16 = v12;
      }
      else {
        v16 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185E0);
    uint64_t v17 = swift_allocObject();
    sub_22088F0BC((uint64_t)v15, v16, (uint64_t *)&v49);
    *(_OWORD *)(v17 + 16) = v49;
    swift_release();
    *uint64_t v4 = v17;
    goto LABEL_15;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088AAE4(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  unint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  uint64_t v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(void *)v9)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if ((v8 & 0x8000000000000000) != 0 || (uint64_t v10 = *(void *)(*(void *)v9 + 8), v10 < (uint64_t)v8))
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if ((v7 & 0x8000000000000000) != 0 || v10 < (uint64_t)v7) {
    goto LABEL_71;
  }
  uint64_t v11 = v6 + v7 - v8;
  if (__OFADD__(v6, v7 - v8))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    uint64_t v16 = *v13;
    if (!v16) {
      goto LABEL_80;
    }
    uint64_t v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (2 * v17 <= v11) {
        uint64_t v17 = v6 + v7 - v8;
      }
      else {
        v17 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185E0);
    uint64_t v18 = swift_allocObject();
    sub_22088F0BC((uint64_t)v16, v17, (uint64_t *)&v49);
    *(_OWORD *)(v18 + 16) = v49;
    uint64_t result = swift_release();
    *uint64_t v2 = v18;
    BOOL v15 = v7 > v8;
    if (v7 == v8) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11) {
      uint64_t result = sub_220893C64(v11, 1, &qword_267F18FF0);
    }
    BOOL v15 = v7 > v8;
    if (v7 == v8) {
      return result;
    }
LABEL_21:
    if (v15)
    {
      sub_22087C32C((uint64_t)a1);
      unint64_t v19 = v7 - 1;
      unint64_t v20 = v8;
      while (1)
      {
        uint64_t v21 = *(void **)v9;
        if (!*(void *)v9) {
          goto LABEL_75;
        }
        if ((int64_t)v20 >= v21[1]) {
          goto LABEL_81;
        }
        if ((*((unsigned __int8 *)v21 + (v20 >> 3) + 64) >> (v20 & 7)))
        {
          uint64_t v22 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if (v22 < 0) {
            uint64_t v22 = *v21 + 14;
          }
          uint64_t v23 = v22 >> 3;
          uint64_t v24 = v23 - 1;
          BOOL v15 = v23 < 1;
          uint64_t v25 = v23 + 62;
          if (!v15) {
            uint64_t v25 = v24;
          }
          uint64_t v26 = *(void *)((char *)&v21[v20 + 16] + (v25 & 0xFFFFFFFFFFFFFFC0));
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v26 = 0;
        }
        uint64_t v27 = *v2;
        swift_beginAccess();
        uint64_t v28 = *(uint64_t **)(v27 + 16);
        if (!v28) {
          goto LABEL_76;
        }
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        if (v30 >= *v28)
        {
          BOOL v40 = __OFADD__(v30, 1);
          uint64_t v42 = v30 + 1;
          if (v40) {
            goto LABEL_65;
          }
          if (v29 < v42)
          {
            if (v29 + 0x4000000000000000 < 0) {
              goto LABEL_68;
            }
            if (2 * v29 <= v42) {
              uint64_t v29 = v42;
            }
            else {
              v29 *= 2;
            }
          }
          sub_22088F714((uint64_t)v28, v29, v48);
          sub_2208909EC(*(void **)(v27 + 16), *(void *)(v27 + 24), &qword_267F18FF0);
          uint64_t v43 = (void *)v48[0];
          uint64_t v44 = v48[1];
          *(void *)(v27 + 16) = v48[0];
          *(void *)(v27 + 24) = v44;
          sub_220891394(v26, v43);
          swift_bridgeObjectRelease();
          if (v19 == v20) {
            return sub_22087C2F8((uint64_t)a1);
          }
        }
        else
        {
          if (v26)
          {
            uint64_t v31 = v29 + 7;
            if (__OFADD__(v29, 7)) {
              goto LABEL_67;
            }
            uint64_t v32 = v28 + 8;
            if (v31 < 0) {
              uint64_t v31 = v29 + 14;
            }
            uint64_t v33 = v31 >> 3;
            uint64_t v34 = v33 - 1;
            BOOL v15 = v33 < 1;
            uint64_t v35 = v33 + 62;
            if (!v15) {
              uint64_t v35 = v34;
            }
            *(uint64_t *)((char *)&v32[v30 + 8] + (v35 & 0xFFFFFFFFFFFFFFC0)) = v26;
            uint64_t v36 = v30 / 8;
            uint64_t v37 = v30 - (v35 & 0xFFFFFFFFFFFFFFF8);
            if (v37 >= 0) {
              char v38 = 1 << v37;
            }
            else {
              char v38 = 0;
            }
            *((unsigned char *)v32 + v36) |= v38;
            uint64_t v39 = v28[1];
            BOOL v40 = __OFADD__(v39, 1);
            uint64_t v41 = v39 + 1;
            if (v40) {
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t v45 = v28[2];
            BOOL v40 = __OFADD__(v45, 1);
            uint64_t v46 = v45 + 1;
            if (v40) {
              goto LABEL_69;
            }
            v28[2] = v46;
            BOOL v40 = __OFADD__(v30, 1);
            uint64_t v41 = v30 + 1;
            if (v40) {
              goto LABEL_66;
            }
          }
          v28[1] = v41;
          if (v19 == v20) {
            return sub_22087C2F8((uint64_t)a1);
          }
        }
        uint64_t v47 = v20 + 1;
        if ((uint64_t)(v20 + 1) >= (uint64_t)v8)
        {
          ++v20;
          if (v47 < (uint64_t)v7) {
            continue;
          }
        }
        __break(1u);
        return sub_22087C2F8((uint64_t)a1);
      }
    }
    goto LABEL_73;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088AEFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)&long long v73 = *(void *)a1;
  *((void *)&v73 + 1) = v3;
  uint64_t v78 = *(void *)(a1 + 16);
  uint64_t v5 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v75 = *(void *)(a1 + 32);
  uint64_t v76 = v4;
  int v74 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *v1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_104;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  long long v82 = *(_OWORD *)v5;
  unsigned __int8 v83 = *(unsigned char *)(v5 + 16);
  int v9 = v83;
  uint64_t v10 = *((void *)&v82 + 1);
  uint64_t v11 = v82;
  uint64_t v71 = a1;
  if (!v83)
  {
    uint64_t v70 = v8;
    uint64_t v72 = (unint64_t *)(v82 + 16);
    uint64_t v15 = v82 + 32;
    char v12 = 1;
    uint64_t v13 = *((void *)&v82 + 1);
    uint64_t v14 = v82;
LABEL_8:
    uint64_t v17 = v78 + 16;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v78 + 16);
    if (!v18)
    {
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    if (v14 < 0 || (uint64_t v19 = *(void *)(v18 + 8), v19 < v14))
    {
LABEL_94:
      __break(1u);
    }
    else if ((v13 & 0x8000000000000000) == 0 && v19 >= v13)
    {
      uint64_t v16 = v13 - v14;
      if ((v12 & 1) == 0)
      {
        unint64_t v20 = v72;
        if (*v72 != 1)
        {
          uint64_t v21 = (uint64_t *)(v15 + 24);
          unint64_t v22 = 1;
          while (v22 < *v20)
          {
            uint64_t v24 = *(v21 - 1);
            uint64_t v23 = *v21;
            swift_beginAccess();
            if (!*(void *)v17) {
              goto LABEL_103;
            }
            if (v24 < 0) {
              goto LABEL_94;
            }
            uint64_t v25 = *(void *)(*(void *)v17 + 8);
            if (v25 < v24) {
              goto LABEL_94;
            }
            if (v23 < 0 || v25 < v23) {
              goto LABEL_95;
            }
            BOOL v26 = __OFADD__(v16, v23 - v24);
            v16 += v23 - v24;
            if (v26) {
              goto LABEL_97;
            }
            ++v22;
            unint64_t v20 = v72;
            v21 += 2;
            if (v22 == *v72) {
              goto LABEL_24;
            }
          }
          goto LABEL_96;
        }
LABEL_24:
        sub_220894638((uint64_t)&v82);
      }
      uint64_t v8 = v70;
      goto LABEL_26;
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v83 == 1 && *(void *)(v82 + 16))
  {
    uint64_t v72 = (unint64_t *)(v82 + 16);
    uint64_t v70 = v8;
    swift_bridgeObjectRetain();
    char v12 = 0;
    uint64_t v14 = *(void *)(v82 + 32);
    uint64_t v13 = *(void *)(v82 + 40);
    uint64_t v15 = v82 + 32;
    goto LABEL_8;
  }
  uint64_t v16 = 0;
LABEL_26:
  uint64_t v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = (uint64_t **)(*v77 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (!*v29)
    {
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (**v29 < v27) {
      sub_220893C64(v27, 1, &qword_267F18FF0);
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v30 = *v29;
    if (!*v29)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      int v69 = 0;
      uint64_t v68 = 128;
      goto LABEL_113;
    }
    uint64_t v31 = *v30;
    if (*v30 < v27)
    {
      if (v31 + 0x4000000000000000 < 0)
      {
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      if (2 * v31 <= v27) {
        uint64_t v31 = v27;
      }
      else {
        v31 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185E0);
    uint64_t v32 = swift_allocObject();
    sub_22088F0BC((uint64_t)v30, v31, (uint64_t *)&v84);
    *(_OWORD *)(v32 + 16) = v84;
    swift_release();
    *long long v77 = v32;
  }
  uint64_t v33 = v11;
  if (v9)
  {
    if (v9 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v35 = *(void *)(v78 + 16);
      if (!v35) {
        goto LABEL_107;
      }
      uint64_t v34 = (uint64_t *)(v35 + 8);
    }
    uint64_t v33 = *v34;
  }
  sub_22084312C(v71);
  uint64_t v36 = (void **)(v78 + 16);
  uint64_t v37 = swift_beginAccess();
  uint64_t v38 = *(void *)(v78 + 16);
  if (!v38) {
    goto LABEL_100;
  }
  while (1)
  {
    if (v33 == *(void *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_22080B6B4(v76, v75, v74);
    }
    uint64_t v80 = v33;
    MEMORY[0x270FA5388](v37);
    uint64_t v68 = (uint64_t)&v80;
    sub_220831F30(v11, v10, v9);
    sub_220831F30(v11, v10, v9);
    unint64_t v42 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v67, v11, v10, v9);
    sub_22080B6B4(v11, v10, v9);
    if ((_BYTE)v9) {
      break;
    }
    if (v42)
    {
      if (v42 != 1)
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      goto LABEL_112;
    }
LABEL_60:
    if (v80 < v11) {
      goto LABEL_112;
    }
    if (v33 < 0) {
      goto LABEL_108;
    }
    uint64_t v45 = *v36;
    if (!*v36) {
      goto LABEL_101;
    }
    uint64_t v46 = v45[1];
    if (v33 >= v46) {
      goto LABEL_108;
    }
    uint64_t v47 = sub_220891634(v33, v45, v46);
    long long v84 = v73;
    uint64_t v85 = v78;
    uint64_t v86 = v76;
    uint64_t v87 = v75;
    char v88 = v74;
    uint64_t v33 = sub_2208937D8(v33);
    uint64_t v48 = *v77;
    swift_beginAccess();
    long long v49 = *(uint64_t **)(v48 + 16);
    if (!v49) {
      goto LABEL_102;
    }
    uint64_t v50 = v85;
    uint64_t v11 = v86;
    uint64_t v10 = v87;
    LOBYTE(v9) = v88;
    uint64_t v39 = *v49;
    uint64_t v51 = v49[1];
    if (v51 >= *v49)
    {
      BOOL v26 = __OFADD__(v51, 1);
      uint64_t v63 = v51 + 1;
      if (v26) {
        goto LABEL_89;
      }
      if (v39 < v63)
      {
        if (v39 + 0x4000000000000000 < 0) {
          goto LABEL_92;
        }
        if (2 * v39 <= v63) {
          uint64_t v39 = v63;
        }
        else {
          v39 *= 2;
        }
      }
      sub_22088F714((uint64_t)v49, v39, &v80);
      sub_2208909EC(*(void **)(v48 + 16), *(void *)(v48 + 24), &qword_267F18FF0);
      BOOL v40 = (void *)v80;
      unint64_t v41 = v81;
      *(void *)(v48 + 16) = v80;
      *(void *)(v48 + 24) = v41;
      sub_220891394(v47, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v47)
      {
        uint64_t v52 = v39 + 7;
        if (__OFADD__(v39, 7)) {
          goto LABEL_91;
        }
        uint64_t v53 = v49 + 8;
        if (v52 < 0) {
          uint64_t v52 = v39 + 14;
        }
        uint64_t v54 = v52 >> 3;
        uint64_t v56 = v54 - 1;
        BOOL v55 = v54 < 1;
        uint64_t v57 = v54 + 62;
        if (!v55) {
          uint64_t v57 = v56;
        }
        *(void *)((char *)&v53[v51 + 8] + (v57 & 0xFFFFFFFFFFFFFFC0)) = v47;
        uint64_t v58 = v51 / 8;
        uint64_t v59 = v51 - (v57 & 0xFFFFFFFFFFFFFFF8);
        if (v59 >= 0) {
          char v60 = 1 << v59;
        }
        else {
          char v60 = 0;
        }
        *((unsigned char *)v53 + v58) |= v60;
        uint64_t v61 = v49[1];
        BOOL v26 = __OFADD__(v61, 1);
        uint64_t v62 = v61 + 1;
        if (v26) {
          goto LABEL_90;
        }
      }
      else
      {
        uint64_t v64 = v49[2];
        BOOL v26 = __OFADD__(v64, 1);
        uint64_t v65 = v64 + 1;
        if (v26) {
          goto LABEL_93;
        }
        v49[2] = v65;
        BOOL v26 = __OFADD__(v51, 1);
        uint64_t v62 = v51 + 1;
        if (v26) {
          goto LABEL_90;
        }
      }
      v49[1] = v62;
    }
    uint64_t v36 = (void **)(v50 + 16);
    uint64_t v37 = swift_beginAccess();
    uint64_t v38 = *(void *)(v50 + 16);
    if (!v38) {
      goto LABEL_100;
    }
  }
  if (v9 == 1)
  {
    unint64_t v43 = *(void *)(v11 + 16);
    if (v42 == v43)
    {
      sub_22080B6B4(v11, v10, 1);
      goto LABEL_112;
    }
    if (v42 >= v43) {
      goto LABEL_88;
    }
    uint64_t v44 = *(void *)(v11 + 16 * v42 + 32);
    sub_22080B6B4(v11, v10, 1);
    uint64_t v11 = v44;
    goto LABEL_60;
  }
  if (v42)
  {
    int v69 = 0;
    uint64_t v68 = 91;
    goto LABEL_113;
  }
LABEL_112:
  uint64_t v80 = 0;
  unint64_t v81 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v80 = 0x6E6F697469736F70;
  unint64_t v81 = 0xE900000000000020;
  uint64_t v79 = v33;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v69 = 0;
  uint64_t v68 = 169;
LABEL_113:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088B6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_68;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  int v9 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11)) {
    goto LABEL_63;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = (uint64_t **)(*v4 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12) {
        sub_220893B64(v12, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
      }
LABEL_15:
      uint64_t v18 = *(void **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18) {
        goto LABEL_65;
      }
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v22 = v18[1];
        if (v19 == v22)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v19 >= v22) {
          goto LABEL_72;
        }
        int v23 = *((unsigned __int8 *)v18 + (v19 >> 3) + 64) & (1 << (v19 & 7));
        if (v23)
        {
          uint64_t v24 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          if (v24 < 0) {
            uint64_t v24 = *v18 + 14;
          }
          uint64_t v25 = v24 >> 3;
          uint64_t v27 = v25 - 1;
          BOOL v26 = v25 < 1;
          uint64_t v28 = v25 + 62;
          if (!v26) {
            uint64_t v28 = v27;
          }
          uint64_t v29 = *(void *)((char *)&v18[v19 + 16] + (v28 & 0xFFFFFFFFFFFFFFC0));
        }
        else
        {
          uint64_t v29 = 0;
        }
        uint64_t v30 = *v4;
        swift_beginAccess();
        uint64_t v31 = *(uint64_t **)(v30 + 16);
        if (!v31) {
          goto LABEL_66;
        }
        uint64_t v32 = *v31;
        uint64_t v33 = v31[1];
        if (v33 >= *v31)
        {
          BOOL v43 = __OFADD__(v33, 1);
          uint64_t v45 = v33 + 1;
          if (v43) {
            goto LABEL_57;
          }
          if (v32 < v45)
          {
            if (v32 + 0x4000000000000000 < 0) {
              goto LABEL_61;
            }
            if (2 * v32 <= v45) {
              uint64_t v32 = v45;
            }
            else {
              v32 *= 2;
            }
          }
          sub_22088F714((uint64_t)v31, v32, v50);
          uint64_t v46 = *(void *)(v30 + 16);
          if (!v46) {
            goto LABEL_67;
          }
          if ((*(void *)(v46 + 8) & 0x8000000000000000) != 0) {
            goto LABEL_59;
          }
          MEMORY[0x223C6B140]();
          unint64_t v20 = (void *)v50[0];
          uint64_t v21 = v50[1];
          *(void *)(v30 + 16) = v50[0];
          *(void *)(v30 + 24) = v21;
          sub_220890C8C(v29, v23 == 0, v20);
        }
        else
        {
          if (v23)
          {
            uint64_t v34 = v32 + 7;
            if (__OFADD__(v32, 7)) {
              goto LABEL_60;
            }
            uint64_t v35 = v31 + 8;
            if (v34 < 0) {
              uint64_t v34 = v32 + 14;
            }
            uint64_t v36 = v34 >> 3;
            uint64_t v37 = v36 - 1;
            BOOL v26 = v36 < 1;
            uint64_t v38 = v36 + 62;
            if (!v26) {
              uint64_t v38 = v37;
            }
            *(uint64_t *)((char *)&v35[v33 + 8] + (v38 & 0xFFFFFFFFFFFFFFC0)) = v29;
            uint64_t v39 = v33 / 8;
            uint64_t v40 = v33 - (v38 & 0xFFFFFFFFFFFFFFF8);
            if (v40 >= 0) {
              char v41 = 1 << v40;
            }
            else {
              char v41 = 0;
            }
            *((unsigned char *)v35 + v39) |= v41;
            uint64_t v42 = v31[1];
            BOOL v43 = __OFADD__(v42, 1);
            uint64_t v44 = v42 + 1;
            if (v43) {
              goto LABEL_58;
            }
          }
          else
          {
            uint64_t v47 = v31[2];
            BOOL v43 = __OFADD__(v47, 1);
            uint64_t v48 = v47 + 1;
            if (v43) {
              goto LABEL_62;
            }
            v31[2] = v48;
            BOOL v43 = __OFADD__(v33, 1);
            uint64_t v44 = v33 + 1;
            if (v43) {
              goto LABEL_58;
            }
          }
          v31[1] = v44;
        }
        uint64_t v18 = (void *)*v9;
        ++v19;
        if (!*v9) {
          goto LABEL_65;
        }
      }
    }
    goto LABEL_70;
  }
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (v15)
  {
    uint64_t v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0) {
        goto LABEL_64;
      }
      if (2 * v16 <= v12) {
        uint64_t v16 = v12;
      }
      else {
        v16 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
    uint64_t v17 = swift_allocObject();
    sub_22088E844((uint64_t)v15, v16, (uint64_t *)&v51);
    *(_OWORD *)(v17 + 16) = v51;
    swift_release();
    *uint64_t v4 = v17;
    goto LABEL_15;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088BACC(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  unint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(void *)v9)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if ((v7 & 0x8000000000000000) != 0 || (uint64_t v10 = *(void *)(*(void *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8) {
    goto LABEL_74;
  }
  uint64_t v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    uint64_t v16 = *v13;
    if (!v16) {
      goto LABEL_84;
    }
    uint64_t v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      if (2 * v17 <= v11) {
        uint64_t v17 = v6 + v8 - v7;
      }
      else {
        v17 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
    uint64_t v18 = swift_allocObject();
    sub_22088E844((uint64_t)v16, v17, (uint64_t *)&v51);
    *(_OWORD *)(v18 + 16) = v51;
    uint64_t result = swift_release();
    *uint64_t v2 = v18;
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11) {
      uint64_t result = sub_220893B64(v11, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
    }
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
LABEL_21:
    if (v15)
    {
      uint64_t v49 = (uint64_t)a1;
      sub_22087C32C((uint64_t)a1);
      unint64_t v19 = v8 - 1;
      unint64_t v20 = v7;
      while (1)
      {
        uint64_t v21 = *(void **)v9;
        if (!*(void *)v9) {
          goto LABEL_78;
        }
        if ((int64_t)v20 >= v21[1]) {
          goto LABEL_85;
        }
        int v22 = *((unsigned __int8 *)v21 + (v20 >> 3) + 64) & (1 << (v20 & 7));
        if (v22)
        {
          uint64_t v23 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          if (v23 < 0) {
            uint64_t v23 = *v21 + 14;
          }
          uint64_t v24 = v23 >> 3;
          uint64_t v25 = v24 - 1;
          BOOL v15 = v24 < 1;
          uint64_t v26 = v24 + 62;
          if (!v15) {
            uint64_t v26 = v25;
          }
          uint64_t v27 = *(void *)((char *)&v21[v20 + 16] + (v26 & 0xFFFFFFFFFFFFFFC0));
        }
        else
        {
          uint64_t v27 = 0;
        }
        uint64_t v28 = *v2;
        swift_beginAccess();
        uint64_t v29 = *(uint64_t **)(v28 + 16);
        if (!v29) {
          goto LABEL_79;
        }
        uint64_t v30 = *v29;
        uint64_t v31 = v29[1];
        if (v31 >= *v29)
        {
          BOOL v41 = __OFADD__(v31, 1);
          uint64_t v43 = v31 + 1;
          if (v41) {
            goto LABEL_67;
          }
          if (v30 < v43)
          {
            if (v30 + 0x4000000000000000 < 0) {
              goto LABEL_71;
            }
            if (2 * v30 <= v43) {
              uint64_t v30 = v43;
            }
            else {
              v30 *= 2;
            }
          }
          sub_22088F714((uint64_t)v29, v30, v50);
          uint64_t v44 = *(void *)(v28 + 16);
          if (!v44) {
            goto LABEL_80;
          }
          if ((*(void *)(v44 + 8) & 0x8000000000000000) != 0) {
            goto LABEL_69;
          }
          MEMORY[0x223C6B140]();
          uint64_t v45 = (void *)v50[0];
          uint64_t v46 = v50[1];
          *(void *)(v28 + 16) = v50[0];
          *(void *)(v28 + 24) = v46;
          sub_220890C8C(v27, v22 == 0, v45);
          if (v19 == v20) {
            return sub_22087C2F8(v49);
          }
        }
        else
        {
          if (v22)
          {
            uint64_t v32 = v30 + 7;
            if (__OFADD__(v30, 7)) {
              goto LABEL_70;
            }
            uint64_t v33 = v29 + 8;
            if (v32 < 0) {
              uint64_t v32 = v30 + 14;
            }
            uint64_t v34 = v32 >> 3;
            uint64_t v35 = v34 - 1;
            BOOL v15 = v34 < 1;
            uint64_t v36 = v34 + 62;
            if (!v15) {
              uint64_t v36 = v35;
            }
            *(uint64_t *)((char *)&v33[v31 + 8] + (v36 & 0xFFFFFFFFFFFFFFC0)) = v27;
            uint64_t v37 = v31 / 8;
            uint64_t v38 = v31 - (v36 & 0xFFFFFFFFFFFFFFF8);
            if (v38 >= 0) {
              char v39 = 1 << v38;
            }
            else {
              char v39 = 0;
            }
            *((unsigned char *)v33 + v37) |= v39;
            uint64_t v40 = v29[1];
            BOOL v41 = __OFADD__(v40, 1);
            uint64_t v42 = v40 + 1;
            if (v41) {
              goto LABEL_68;
            }
          }
          else
          {
            uint64_t v47 = v29[2];
            BOOL v41 = __OFADD__(v47, 1);
            uint64_t v48 = v47 + 1;
            if (v41) {
              goto LABEL_72;
            }
            v29[2] = v48;
            BOOL v41 = __OFADD__(v31, 1);
            uint64_t v42 = v31 + 1;
            if (v41) {
              goto LABEL_68;
            }
          }
          v29[1] = v42;
          if (v19 == v20) {
            return sub_22087C2F8(v49);
          }
        }
        if (v7 != 0x7FFFFFFFFFFFFFFFLL && (uint64_t)++v20 < (uint64_t)v8) {
          continue;
        }
        __break(1u);
        return sub_22087C2F8(v49);
      }
    }
    goto LABEL_76;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088BF04(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)&long long v76 = *(void *)a1;
  *((void *)&v76 + 1) = v3;
  uint64_t v81 = *(void *)(a1 + 16);
  uint64_t v5 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v78 = *(void *)(a1 + 32);
  uint64_t v79 = v4;
  int v77 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *v1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_107;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  long long v85 = *(_OWORD *)v5;
  unsigned __int8 v86 = *(unsigned char *)(v5 + 16);
  int v9 = v86;
  uint64_t v10 = *((void *)&v85 + 1);
  uint64_t v11 = v85;
  if (v86)
  {
    if (v86 != 1 || !*(void *)(v85 + 16))
    {
      uint64_t v16 = 0;
      goto LABEL_26;
    }
    uint64_t v74 = v2;
    uint64_t v75 = (unint64_t *)(v85 + 16);
    uint64_t v73 = v8;
    swift_bridgeObjectRetain();
    char v12 = 0;
    uint64_t v15 = *(void *)(v85 + 32);
    uint64_t v13 = *(void *)(v85 + 40);
    uint64_t v14 = v85 + 32;
  }
  else
  {
    uint64_t v73 = v8;
    uint64_t v74 = v2;
    uint64_t v75 = (unint64_t *)(v85 + 16);
    uint64_t v14 = v85 + 32;
    char v12 = 1;
    uint64_t v13 = *((void *)&v85 + 1);
    uint64_t v15 = v85;
  }
  uint64_t v17 = v81 + 16;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v81 + 16);
  if (!v18)
  {
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (v15 < 0 || (uint64_t v19 = *(void *)(v18 + 8), v19 < v15))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v13 < 0 || v19 < v13) {
    goto LABEL_97;
  }
  uint64_t v16 = v13 - v15;
  if ((v12 & 1) == 0)
  {
    unint64_t v20 = v75;
    if (*v75 != 1)
    {
      uint64_t v21 = (uint64_t *)(v14 + 24);
      unint64_t v22 = 1;
      while (v22 < *v20)
      {
        uint64_t v23 = *(v21 - 1);
        uint64_t v24 = *v21;
        swift_beginAccess();
        if (!*(void *)v17) {
          goto LABEL_106;
        }
        if (v23 < 0) {
          goto LABEL_96;
        }
        uint64_t v25 = *(void *)(*(void *)v17 + 8);
        if (v25 < v23) {
          goto LABEL_96;
        }
        if (v24 < 0 || v25 < v24) {
          goto LABEL_97;
        }
        BOOL v26 = __OFADD__(v16, v24 - v23);
        v16 += v24 - v23;
        if (v26) {
          goto LABEL_99;
        }
        ++v22;
        unint64_t v20 = v75;
        v21 += 2;
        if (v22 == *v75) {
          goto LABEL_24;
        }
      }
      goto LABEL_98;
    }
LABEL_24:
    sub_220894638((uint64_t)&v85);
  }
  uint64_t v8 = v73;
  uint64_t v2 = v74;
LABEL_26:
  uint64_t v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = (uint64_t **)(*v80 + 16);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v31 = *v29;
    if (!*v29)
    {
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      int v72 = 0;
      uint64_t v71 = 128;
      goto LABEL_116;
    }
    uint64_t v32 = *v31;
    if (*v31 < v27)
    {
      if (v32 + 0x4000000000000000 < 0)
      {
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      if (2 * v32 <= v27) {
        uint64_t v32 = v27;
      }
      else {
        v32 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
    uint64_t v33 = swift_allocObject();
    sub_22088E844((uint64_t)v31, v32, (uint64_t *)&v87);
    *(_OWORD *)(v33 + 16) = v87;
    swift_release();
    *uint64_t v80 = v33;
    uint64_t v30 = v11;
    if (!v9) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
  swift_beginAccess();
  if (!*v29)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  if (**v29 < v27) {
    sub_220893B64(v27, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
  }
  uint64_t v30 = v11;
  if (v9)
  {
LABEL_40:
    if (v9 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v35 = *(void *)(v81 + 16);
      if (!v35) {
        goto LABEL_110;
      }
      uint64_t v34 = (uint64_t *)(v35 + 8);
    }
    uint64_t v30 = *v34;
  }
LABEL_46:
  sub_22084312C(v2);
  uint64_t v36 = (void **)(v81 + 16);
  uint64_t v37 = swift_beginAccess();
  uint64_t v38 = *(void *)(v81 + 16);
  if (!v38)
  {
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  while (1)
  {
    if (v30 == *(void *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_22080B6B4(v79, v78, v77);
    }
    uint64_t v83 = v30;
    MEMORY[0x270FA5388](v37);
    uint64_t v71 = (uint64_t)&v83;
    sub_220831F30(v11, v10, v9);
    sub_220831F30(v11, v10, v9);
    unint64_t v40 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v70, v11, v10, v9);
    sub_22080B6B4(v11, v10, v9);
    if ((_BYTE)v9) {
      break;
    }
    if (v40)
    {
      if (v40 != 1)
      {
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      goto LABEL_115;
    }
LABEL_59:
    if (v83 < v11) {
      goto LABEL_115;
    }
    if (v30 < 0) {
      goto LABEL_111;
    }
    uint64_t v43 = *v36;
    if (!*v36) {
      goto LABEL_103;
    }
    uint64_t v44 = v43[1];
    if (v30 >= v44) {
      goto LABEL_111;
    }
    uint64_t v45 = sub_2208915A0(v30, v43, v44);
    char v47 = v46;
    long long v87 = v76;
    uint64_t v88 = v81;
    uint64_t v89 = v79;
    uint64_t v90 = v78;
    char v91 = v77;
    uint64_t v30 = sub_2208937D8(v30);
    uint64_t v48 = *v80;
    swift_beginAccess();
    uint64_t v49 = *(uint64_t **)(v48 + 16);
    if (!v49) {
      goto LABEL_104;
    }
    int v50 = v47 & 1;
    uint64_t v51 = v88;
    uint64_t v11 = v89;
    uint64_t v10 = v90;
    LOBYTE(v9) = v91;
    uint64_t v52 = *v49;
    uint64_t v53 = v49[1];
    if (v53 >= *v49)
    {
      BOOL v26 = __OFADD__(v53, 1);
      uint64_t v63 = v53 + 1;
      if (v26) {
        goto LABEL_90;
      }
      if (v52 < v63)
      {
        if (v52 + 0x4000000000000000 < 0) {
          goto LABEL_95;
        }
        if (2 * v52 <= v63) {
          uint64_t v52 = v63;
        }
        else {
          v52 *= 2;
        }
      }
      sub_22088F714((uint64_t)v49, v52, &v83);
      uint64_t v64 = *(void *)(v48 + 16);
      if (!v64) {
        goto LABEL_105;
      }
      if ((*(void *)(v64 + 8) & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      MEMORY[0x223C6B140]();
      uint64_t v65 = (void *)v83;
      unint64_t v66 = v84;
      *(void *)(v48 + 16) = v83;
      *(void *)(v48 + 24) = v66;
      sub_220890C8C(v45, v50, v65);
    }
    else
    {
      if (v50)
      {
        uint64_t v67 = v49[2];
        BOOL v26 = __OFADD__(v67, 1);
        uint64_t v68 = v67 + 1;
        if (v26) {
          goto LABEL_94;
        }
        v49[2] = v68;
      }
      else
      {
        uint64_t v54 = v52 + 7;
        if (__OFADD__(v52, 7)) {
          goto LABEL_93;
        }
        BOOL v55 = v49 + 8;
        if (v54 < 0) {
          uint64_t v54 = v52 + 14;
        }
        uint64_t v56 = v54 >> 3;
        uint64_t v58 = v56 - 1;
        BOOL v57 = v56 < 1;
        uint64_t v59 = v56 + 62;
        if (!v57) {
          uint64_t v59 = v58;
        }
        *(uint64_t *)((char *)&v55[v53 + 8] + (v59 & 0xFFFFFFFFFFFFFFC0)) = v45;
        uint64_t v60 = v53 / 8;
        uint64_t v61 = v53 - (v59 & 0xFFFFFFFFFFFFFFF8);
        if (v61 >= 0) {
          char v62 = 1 << v61;
        }
        else {
          char v62 = 0;
        }
        *((unsigned char *)v55 + v60) |= v62;
        uint64_t v53 = v49[1];
      }
      BOOL v26 = __OFADD__(v53, 1);
      uint64_t v39 = v53 + 1;
      if (v26) {
        goto LABEL_91;
      }
      v49[1] = v39;
    }
    uint64_t v36 = (void **)(v51 + 16);
    uint64_t v37 = swift_beginAccess();
    uint64_t v38 = *(void *)(v51 + 16);
    if (!v38) {
      goto LABEL_102;
    }
  }
  if (v9 == 1)
  {
    unint64_t v41 = *(void *)(v11 + 16);
    if (v40 == v41)
    {
      sub_22080B6B4(v11, v10, 1);
      goto LABEL_115;
    }
    if (v40 >= v41) {
      goto LABEL_89;
    }
    uint64_t v42 = *(void *)(v11 + 16 * v40 + 32);
    sub_22080B6B4(v11, v10, 1);
    uint64_t v11 = v42;
    goto LABEL_59;
  }
  if (v40)
  {
    int v72 = 0;
    uint64_t v71 = 91;
    goto LABEL_116;
  }
LABEL_115:
  uint64_t v83 = 0;
  unint64_t v84 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v83 = 0x6E6F697469736F70;
  unint64_t v84 = 0xE900000000000020;
  uint64_t v82 = v30;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v72 = 0;
  uint64_t v71 = 169;
LABEL_116:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088C704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_66;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  int v9 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11)) {
    goto LABEL_62;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = (uint64_t **)(*v3 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (*v14)
    {
      if (**v14 < v12) {
        sub_2208939F4(v12, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508);
      }
LABEL_15:
      uint64_t v18 = *(void **)(a3 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v18) {
        goto LABEL_64;
      }
      uint64_t v19 = 0;
      unint64_t v20 = 0;
      while (1)
      {
        uint64_t v24 = v18[1];
        if (v20 == v24)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        if ((uint64_t)v20 >= v24) {
          goto LABEL_70;
        }
        if ((*((unsigned __int8 *)v18 + (v20 >> 3) + 64) >> (v20 & 7)))
        {
          uint64_t v25 = *v18 + 7;
          if (__OFADD__(*v18, 7))
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
          if (v25 < 0) {
            uint64_t v25 = *v18 + 14;
          }
          uint64_t v26 = v25 >> 3;
          uint64_t v28 = v26 - 1;
          BOOL v27 = v26 < 1;
          uint64_t v29 = v26 + 62;
          if (!v27) {
            uint64_t v29 = v28;
          }
          unint64_t v30 = (unint64_t)&v18[v19] + (v29 & 0xFFFFFFFFFFFFFFC0);
          uint64_t v32 = *(void *)(v30 + 128);
          uint64_t v31 = *(void *)(v30 + 136);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v32 = 0;
          uint64_t v31 = 0;
        }
        uint64_t v33 = *v4;
        swift_beginAccess();
        uint64_t v34 = *(uint64_t **)(v33 + 16);
        if (!v34) {
          goto LABEL_65;
        }
        uint64_t v21 = *v34;
        uint64_t v35 = v34[1];
        if (v35 >= *v34)
        {
          BOOL v47 = __OFADD__(v35, 1);
          uint64_t v49 = v35 + 1;
          if (v47) {
            goto LABEL_57;
          }
          if (v21 < v49)
          {
            if (v21 + 0x4000000000000000 < 0) {
              goto LABEL_60;
            }
            if (2 * v21 <= v49) {
              uint64_t v21 = v49;
            }
            else {
              v21 *= 2;
            }
          }
          sub_22088F904((uint64_t)v34, v21, v53);
          sub_220890508(*(void **)(v33 + 16));
          unint64_t v22 = (void *)v53[0];
          uint64_t v23 = v53[1];
          *(void *)(v33 + 16) = v53[0];
          *(void *)(v33 + 24) = v23;
          sub_220890D48(v32, v31, v22);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v31)
          {
            uint64_t v36 = v21 + 7;
            if (__OFADD__(v21, 7)) {
              goto LABEL_59;
            }
            uint64_t v37 = v34 + 8;
            if (v36 < 0) {
              uint64_t v36 = v21 + 14;
            }
            uint64_t v38 = v36 >> 3;
            uint64_t v39 = v38 - 1;
            BOOL v27 = v38 < 1;
            uint64_t v40 = v38 + 62;
            if (!v27) {
              uint64_t v40 = v39;
            }
            unint64_t v41 = (unint64_t)&v37[2 * v35] + (v40 & 0xFFFFFFFFFFFFFFC0);
            *(void *)(v41 + 64) = v32;
            *(void *)(v41 + 72) = v31;
            uint64_t v42 = v34[1];
            uint64_t v43 = v42 + 7;
            if (v42 >= 0) {
              uint64_t v43 = v34[1];
            }
            uint64_t v44 = v42 - (v43 & 0xFFFFFFFFFFFFFFF8);
            if (v44 >= 0) {
              char v45 = 1 << v44;
            }
            else {
              char v45 = 0;
            }
            *((unsigned char *)v37 + (v43 >> 3)) |= v45;
            uint64_t v46 = v34[1];
            BOOL v47 = __OFADD__(v46, 1);
            uint64_t v48 = v46 + 1;
            if (v47) {
              goto LABEL_58;
            }
          }
          else
          {
            uint64_t v50 = v34[2];
            BOOL v47 = __OFADD__(v50, 1);
            uint64_t v51 = v50 + 1;
            if (v47) {
              goto LABEL_61;
            }
            v34[2] = v51;
            BOOL v47 = __OFADD__(v35, 1);
            uint64_t v48 = v35 + 1;
            if (v47) {
              goto LABEL_58;
            }
          }
          v34[1] = v48;
        }
        uint64_t v18 = (void *)*v9;
        v19 += 2;
        ++v20;
        if (!*v9) {
          goto LABEL_64;
        }
      }
    }
    goto LABEL_68;
  }
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (v15)
  {
    uint64_t v16 = *v15;
    if (*v15 < v12)
    {
      if (v16 + 0x4000000000000000 < 0) {
        goto LABEL_63;
      }
      if (2 * v16 <= v12) {
        uint64_t v16 = v12;
      }
      else {
        v16 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
    uint64_t v17 = swift_allocObject();
    sub_22088E9D4((uint64_t)v15, v16, (uint64_t *)&v54);
    *(_OWORD *)(v17 + 16) = v54;
    swift_release();
    *uint64_t v3 = v17;
    goto LABEL_15;
  }
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088CB00(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  unint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = a1[4] + 16;
  swift_beginAccess();
  if (!*(void *)v9)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((v7 & 0x8000000000000000) != 0 || (uint64_t v10 = *(void *)(*(void *)v9 + 8), v10 < (uint64_t)v7))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if ((v8 & 0x8000000000000000) != 0 || v10 < (uint64_t)v8) {
    goto LABEL_73;
  }
  uint64_t v11 = v6 + v8 - v7;
  if (__OFADD__(v6, v8 - v7))
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    uint64_t v16 = *v13;
    if (!v16) {
      goto LABEL_82;
    }
    uint64_t v17 = *v16;
    if (*v16 < v11)
    {
      if (v17 + 0x4000000000000000 < 0)
      {
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if (2 * v17 <= v11) {
        uint64_t v17 = v6 + v8 - v7;
      }
      else {
        v17 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
    uint64_t v18 = swift_allocObject();
    sub_22088E9D4((uint64_t)v16, v17, (uint64_t *)&v52);
    *(_OWORD *)(v18 + 16) = v52;
    uint64_t result = swift_release();
    *uint64_t v2 = v18;
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_beginAccess();
  if (*v13)
  {
    if (**v13 < v11) {
      uint64_t result = sub_2208939F4(v11, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508);
    }
    BOOL v15 = v8 > v7;
    if (v8 == v7) {
      return result;
    }
LABEL_21:
    if (v15)
    {
      sub_22087C32C((uint64_t)a1);
      uint64_t v19 = v7 + 1;
      uint64_t v20 = 2 * v7;
      while (1)
      {
        uint64_t v21 = *(void **)v9;
        if (!*(void *)v9) {
          goto LABEL_77;
        }
        if (v19 - 1 >= v21[1]) {
          goto LABEL_83;
        }
        if ((*((unsigned __int8 *)v21 + ((unint64_t)(v19 - 1) >> 3) + 64) >> ((v19 - 1) & 7)))
        {
          uint64_t v22 = *v21 + 7;
          if (__OFADD__(*v21, 7))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
          if (v22 < 0) {
            uint64_t v22 = *v21 + 14;
          }
          uint64_t v23 = v22 >> 3;
          uint64_t v24 = v23 - 1;
          BOOL v15 = v23 < 1;
          uint64_t v25 = v23 + 62;
          if (!v15) {
            uint64_t v25 = v24;
          }
          unint64_t v26 = (unint64_t)&v21[v20] + (v25 & 0xFFFFFFFFFFFFFFC0);
          uint64_t v28 = *(void *)(v26 + 128);
          uint64_t v27 = *(void *)(v26 + 136);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v28 = 0;
          uint64_t v27 = 0;
        }
        uint64_t v29 = *v2;
        swift_beginAccess();
        unint64_t v30 = *(uint64_t **)(v29 + 16);
        if (!v30) {
          goto LABEL_78;
        }
        uint64_t v31 = *v30;
        uint64_t v32 = v30[1];
        if (v32 >= *v30)
        {
          BOOL v44 = __OFADD__(v32, 1);
          uint64_t v46 = v32 + 1;
          if (v44) {
            goto LABEL_67;
          }
          if (v31 < v46)
          {
            if (v31 + 0x4000000000000000 < 0) {
              goto LABEL_70;
            }
            if (2 * v31 <= v46) {
              uint64_t v31 = v46;
            }
            else {
              v31 *= 2;
            }
          }
          sub_22088F904((uint64_t)v30, v31, v51);
          sub_220890508(*(void **)(v29 + 16));
          BOOL v47 = (void *)v51[0];
          uint64_t v48 = v51[1];
          *(void *)(v29 + 16) = v51[0];
          *(void *)(v29 + 24) = v48;
          sub_220890D48(v28, v27, v47);
          swift_bridgeObjectRelease();
          if (v8 == v19) {
            return sub_22087C2F8((uint64_t)a1);
          }
        }
        else
        {
          if (v27)
          {
            uint64_t v33 = v31 + 7;
            if (__OFADD__(v31, 7)) {
              goto LABEL_69;
            }
            uint64_t v34 = v30 + 8;
            if (v33 < 0) {
              uint64_t v33 = v31 + 14;
            }
            uint64_t v35 = v33 >> 3;
            uint64_t v36 = v35 - 1;
            BOOL v15 = v35 < 1;
            uint64_t v37 = v35 + 62;
            if (!v15) {
              uint64_t v37 = v36;
            }
            unint64_t v38 = (unint64_t)&v34[2 * v32] + (v37 & 0xFFFFFFFFFFFFFFC0);
            *(void *)(v38 + 64) = v28;
            *(void *)(v38 + 72) = v27;
            uint64_t v39 = v30[1];
            uint64_t v40 = v39 + 7;
            if (v39 >= 0) {
              uint64_t v40 = v30[1];
            }
            uint64_t v41 = v39 - (v40 & 0xFFFFFFFFFFFFFFF8);
            if (v41 >= 0) {
              char v42 = 1 << v41;
            }
            else {
              char v42 = 0;
            }
            *((unsigned char *)v34 + (v40 >> 3)) |= v42;
            uint64_t v43 = v30[1];
            BOOL v44 = __OFADD__(v43, 1);
            uint64_t v45 = v43 + 1;
            if (v44) {
              goto LABEL_68;
            }
          }
          else
          {
            uint64_t v49 = v30[2];
            BOOL v44 = __OFADD__(v49, 1);
            uint64_t v50 = v49 + 1;
            if (v44) {
              goto LABEL_71;
            }
            v30[2] = v50;
            BOOL v44 = __OFADD__(v32, 1);
            uint64_t v45 = v32 + 1;
            if (v44) {
              goto LABEL_68;
            }
          }
          v30[1] = v45;
          if (v8 == v19) {
            return sub_22087C2F8((uint64_t)a1);
          }
        }
        if (v19 >= (uint64_t)v7)
        {
          v20 += 2;
          BOOL v15 = v19++ < (uint64_t)v8;
          if (v15) {
            continue;
          }
        }
        __break(1u);
        return sub_22087C2F8((uint64_t)a1);
      }
    }
    goto LABEL_75;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_22088CF40(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)&long long v77 = *(void *)a1;
  *((void *)&v77 + 1) = v3;
  uint64_t v82 = *(void *)(a1 + 16);
  uint64_t v5 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v79 = *(void *)(a1 + 32);
  uint64_t v80 = v4;
  int v78 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *v1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_106;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  long long v86 = *(_OWORD *)v5;
  unsigned __int8 v87 = *(unsigned char *)(v5 + 16);
  int v9 = v87;
  uint64_t v10 = *((void *)&v86 + 1);
  uint64_t v11 = v86;
  uint64_t v75 = a1;
  if (!v87)
  {
    uint64_t v74 = v8;
    long long v76 = (unint64_t *)(v86 + 16);
    uint64_t v15 = v86 + 32;
    char v12 = 1;
    uint64_t v13 = *((void *)&v86 + 1);
    uint64_t v14 = v86;
LABEL_8:
    uint64_t v17 = v82 + 16;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v82 + 16);
    if (!v18)
    {
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    if (v14 < 0 || (uint64_t v19 = *(void *)(v18 + 8), v19 < v14))
    {
LABEL_96:
      __break(1u);
    }
    else if ((v13 & 0x8000000000000000) == 0 && v19 >= v13)
    {
      uint64_t v16 = v13 - v14;
      if ((v12 & 1) == 0)
      {
        uint64_t v20 = v76;
        if (*v76 != 1)
        {
          uint64_t v21 = (uint64_t *)(v15 + 24);
          unint64_t v22 = 1;
          while (v22 < *v20)
          {
            uint64_t v23 = *(v21 - 1);
            uint64_t v24 = *v21;
            swift_beginAccess();
            if (!*(void *)v17) {
              goto LABEL_105;
            }
            if (v23 < 0) {
              goto LABEL_96;
            }
            uint64_t v25 = *(void *)(*(void *)v17 + 8);
            if (v25 < v23) {
              goto LABEL_96;
            }
            if (v24 < 0 || v25 < v24) {
              goto LABEL_97;
            }
            BOOL v26 = __OFADD__(v16, v24 - v23);
            v16 += v24 - v23;
            if (v26) {
              goto LABEL_99;
            }
            ++v22;
            uint64_t v20 = v76;
            v21 += 2;
            if (v22 == *v76) {
              goto LABEL_24;
            }
          }
          goto LABEL_98;
        }
LABEL_24:
        sub_220894638((uint64_t)&v86);
      }
      uint64_t v8 = v74;
      goto LABEL_26;
    }
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v87 == 1 && *(void *)(v86 + 16))
  {
    long long v76 = (unint64_t *)(v86 + 16);
    uint64_t v74 = v8;
    swift_bridgeObjectRetain();
    char v12 = 0;
    uint64_t v14 = *(void *)(v86 + 32);
    uint64_t v13 = *(void *)(v86 + 40);
    uint64_t v15 = v86 + 32;
    goto LABEL_8;
  }
  uint64_t v16 = 0;
LABEL_26:
  uint64_t v27 = v8 + v16;
  if (__OFADD__(v8, v16))
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = (uint64_t **)(*v81 + 16);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_beginAccess();
    if (!*v29)
    {
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (**v29 < v27) {
      sub_2208939F4(v27, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508);
    }
  }
  else
  {
    swift_beginAccess();
    unint64_t v30 = *v29;
    if (!v30)
    {
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      int v73 = 0;
      uint64_t v72 = 128;
      goto LABEL_115;
    }
    uint64_t v31 = *v30;
    if (*v30 < v27)
    {
      if (v31 + 0x4000000000000000 < 0)
      {
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      if (2 * v31 <= v27) {
        uint64_t v31 = v27;
      }
      else {
        v31 *= 2;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
    uint64_t v32 = swift_allocObject();
    sub_22088E9D4((uint64_t)v30, v31, (uint64_t *)&v88);
    *(_OWORD *)(v32 + 16) = v88;
    swift_release();
    *uint64_t v81 = v32;
  }
  uint64_t v33 = v11;
  if (v9)
  {
    if (v9 == 1 && *(void *)(v11 + 16))
    {
      uint64_t v34 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v35 = *(void *)(v82 + 16);
      if (!v35) {
        goto LABEL_109;
      }
      uint64_t v34 = (uint64_t *)(v35 + 8);
    }
    uint64_t v33 = *v34;
  }
  sub_22084312C(v75);
  uint64_t v36 = (void **)(v82 + 16);
  uint64_t v37 = swift_beginAccess();
  uint64_t v38 = *(void *)(v82 + 16);
  if (!v38) {
    goto LABEL_102;
  }
  while (1)
  {
    if (v33 == *(void *)(v38 + 8))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_22080B6B4(v80, v79, v78);
    }
    uint64_t v84 = v33;
    MEMORY[0x270FA5388](v37);
    uint64_t v72 = (uint64_t)&v84;
    sub_220831F30(v11, v10, v9);
    sub_220831F30(v11, v10, v9);
    unint64_t v42 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v71, v11, v10, v9);
    sub_22080B6B4(v11, v10, v9);
    if ((_BYTE)v9) {
      break;
    }
    if (v42)
    {
      if (v42 != 1)
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      goto LABEL_114;
    }
LABEL_60:
    if (v84 < v11) {
      goto LABEL_114;
    }
    if (v33 < 0) {
      goto LABEL_110;
    }
    uint64_t v45 = *v36;
    if (!*v36) {
      goto LABEL_103;
    }
    uint64_t v46 = v45[1];
    if (v33 >= v46) {
      goto LABEL_110;
    }
    uint64_t v47 = sub_2208916D4(v33, v45, v46);
    uint64_t v49 = v48;
    long long v88 = v77;
    uint64_t v89 = v82;
    uint64_t v90 = v80;
    uint64_t v91 = v79;
    char v92 = v78;
    uint64_t v33 = sub_2208937D8(v33);
    uint64_t v50 = *v81;
    swift_beginAccess();
    uint64_t v51 = *(uint64_t **)(v50 + 16);
    if (!v51) {
      goto LABEL_104;
    }
    uint64_t v52 = v89;
    uint64_t v11 = v90;
    uint64_t v10 = v91;
    LOBYTE(v9) = v92;
    uint64_t v39 = *v51;
    uint64_t v53 = v51[1];
    if (v53 >= *v51)
    {
      BOOL v26 = __OFADD__(v53, 1);
      uint64_t v67 = v53 + 1;
      if (v26) {
        goto LABEL_91;
      }
      if (v39 < v67)
      {
        if (v39 + 0x4000000000000000 < 0) {
          goto LABEL_94;
        }
        if (2 * v39 <= v67) {
          uint64_t v39 = v67;
        }
        else {
          v39 *= 2;
        }
      }
      sub_22088F904((uint64_t)v51, v39, &v84);
      sub_220890508(*(void **)(v50 + 16));
      uint64_t v40 = (void *)v84;
      unint64_t v41 = v85;
      *(void *)(v50 + 16) = v84;
      *(void *)(v50 + 24) = v41;
      sub_220890D48(v47, v49, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v49)
      {
        uint64_t v54 = v39 + 7;
        if (__OFADD__(v39, 7)) {
          goto LABEL_93;
        }
        BOOL v55 = v51 + 8;
        if (v54 < 0) {
          uint64_t v54 = v39 + 14;
        }
        uint64_t v56 = v54 >> 3;
        uint64_t v58 = v56 - 1;
        BOOL v57 = v56 < 1;
        uint64_t v59 = v56 + 62;
        if (!v57) {
          uint64_t v59 = v58;
        }
        unint64_t v60 = (unint64_t)&v55[2 * v53] + (v59 & 0xFFFFFFFFFFFFFFC0);
        *(void *)(v60 + 64) = v47;
        *(void *)(v60 + 72) = v49;
        uint64_t v61 = v51[1];
        uint64_t v62 = v61 + 7;
        if (v61 >= 0) {
          uint64_t v62 = v51[1];
        }
        uint64_t v63 = v61 - (v62 & 0xFFFFFFFFFFFFFFF8);
        if (v63 >= 0) {
          char v64 = 1 << v63;
        }
        else {
          char v64 = 0;
        }
        *((unsigned char *)v55 + (v62 >> 3)) |= v64;
        uint64_t v65 = v51[1];
        BOOL v26 = __OFADD__(v65, 1);
        uint64_t v66 = v65 + 1;
        if (v26) {
          goto LABEL_92;
        }
      }
      else
      {
        uint64_t v68 = v51[2];
        BOOL v26 = __OFADD__(v68, 1);
        uint64_t v69 = v68 + 1;
        if (v26) {
          goto LABEL_95;
        }
        uint64_t v51[2] = v69;
        BOOL v26 = __OFADD__(v53, 1);
        uint64_t v66 = v53 + 1;
        if (v26) {
          goto LABEL_92;
        }
      }
      v51[1] = v66;
    }
    uint64_t v36 = (void **)(v52 + 16);
    uint64_t v37 = swift_beginAccess();
    uint64_t v38 = *(void *)(v52 + 16);
    if (!v38) {
      goto LABEL_102;
    }
  }
  if (v9 == 1)
  {
    unint64_t v43 = *(void *)(v11 + 16);
    if (v42 == v43)
    {
      sub_22080B6B4(v11, v10, 1);
      goto LABEL_114;
    }
    if (v42 >= v43) {
      goto LABEL_90;
    }
    uint64_t v44 = *(void *)(v11 + 16 * v42 + 32);
    sub_22080B6B4(v11, v10, 1);
    uint64_t v11 = v44;
    goto LABEL_60;
  }
  if (v42)
  {
    int v73 = 0;
    uint64_t v72 = 91;
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v84 = 0x6E6F697469736F70;
  unint64_t v85 = 0xE900000000000020;
  uint64_t v83 = v33;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v73 = 0;
  uint64_t v72 = 169;
LABEL_115:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t *sub_22088D748(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = (uint64_t *)swift_beginAccess();
    char v12 = *v11;
    if (!v12)
    {
LABEL_59:
      __break(1u);
      return result;
    }
    uint64_t v13 = *v12;
    if (*v12 >= v9) {
      goto LABEL_15;
    }
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9) {
        uint64_t v13 = v9;
      }
      else {
        v13 *= 2;
      }
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
      uint64_t v14 = swift_allocObject();
      sub_22088E6B0((uint64_t)v12, v13, (uint64_t *)&v39);
      *(_OWORD *)(v14 + 16) = v39;
      uint64_t result = (uint64_t *)swift_release();
      *uint64_t v2 = v14;
      if (!v8) {
        return result;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      for (uint64_t i = (char *)(a1 + 40); ; i += 16)
      {
        uint64_t v18 = *((void *)i - 1);
        char v19 = *i;
        uint64_t v20 = *v2;
        swift_beginAccess();
        uint64_t result = *(uint64_t **)(v20 + 16);
        if (!result) {
          break;
        }
        uint64_t v21 = *result;
        uint64_t v22 = result[1];
        if (v22 >= *result)
        {
          BOOL v16 = __OFADD__(v22, 1);
          uint64_t v25 = v22 + 1;
          if (v16)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
          if (v21 < v25)
          {
            if (v21 + 0x4000000000000000 < 0) {
              goto LABEL_52;
            }
            if (2 * v21 <= v25) {
              uint64_t v21 = v25;
            }
            else {
              v21 *= 2;
            }
          }
          sub_22088F714((uint64_t)result, v21, v38);
          uint64_t result = *(uint64_t **)(v20 + 16);
          if (!result) {
            goto LABEL_56;
          }
          if (result[1] < 0) {
            goto LABEL_49;
          }
          MEMORY[0x223C6B140]();
          BOOL v26 = (void *)v38[0];
          uint64_t v27 = v38[1];
          *(void *)(v20 + 16) = v38[0];
          *(void *)(v20 + 24) = v27;
          sub_220890BC8(v18, v19, v26);
        }
        else
        {
          if (v19)
          {
            uint64_t v23 = result[2];
            BOOL v16 = __OFADD__(v23, 1);
            uint64_t v24 = v23 + 1;
            if (v16) {
              goto LABEL_50;
            }
            result[2] = v24;
          }
          else
          {
            uint64_t v28 = v21 + 7;
            if (__OFADD__(v21, 7)) {
              goto LABEL_51;
            }
            uint64_t v29 = result + 8;
            if (v28 < 0) {
              uint64_t v28 = v21 + 14;
            }
            uint64_t v30 = v28 >> 3;
            uint64_t v32 = v30 - 1;
            BOOL v31 = v30 < 1;
            uint64_t v33 = v30 + 62;
            if (!v31) {
              uint64_t v33 = v32;
            }
            *(uint64_t *)((char *)&v29[v22 + 8] + (v33 & 0xFFFFFFFFFFFFFFC0)) = v18;
            uint64_t v34 = result[1];
            uint64_t v35 = v34 + 7;
            if (v34 >= 0) {
              uint64_t v35 = result[1];
            }
            uint64_t v36 = v34 - (v35 & 0xFFFFFFFFFFFFFFF8);
            if (v36 >= 0) {
              char v37 = 1 << v36;
            }
            else {
              char v37 = 0;
            }
            *((unsigned char *)v29 + (v35 >> 3)) |= v37;
            uint64_t v22 = result[1];
          }
          BOOL v16 = __OFADD__(v22, 1);
          uint64_t v17 = v22 + 1;
          if (v16) {
            goto LABEL_48;
          }
          result[1] = v17;
        }
        if (!--v8) {
          return (uint64_t *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_55;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t result = (uint64_t *)swift_beginAccess();
  if (!*v11)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (**v11 < v9) {
    uint64_t result = (uint64_t *)sub_220893B64(v9, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
  }
  if (v8) {
    goto LABEL_16;
  }
  return result;
}

uint64_t *sub_22088DA3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (uint64_t **)(*v2 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = (uint64_t *)swift_beginAccess();
    char v12 = *v11;
    if (!v12)
    {
LABEL_57:
      __break(1u);
      return result;
    }
    uint64_t v13 = *v12;
    if (*v12 >= v9) {
      goto LABEL_15;
    }
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9) {
        uint64_t v13 = v9;
      }
      else {
        v13 *= 2;
      }
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
      uint64_t v14 = swift_allocObject();
      sub_22088E844((uint64_t)v12, v13, (uint64_t *)&v38);
      *(_OWORD *)(v14 + 16) = v38;
      uint64_t result = (uint64_t *)swift_release();
      *uint64_t v2 = v14;
      if (!v8) {
        return result;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      for (uint64_t i = (char *)(a1 + 40); ; i += 16)
      {
        uint64_t v18 = *((void *)i - 1);
        char v19 = *i;
        uint64_t v20 = *v2;
        swift_beginAccess();
        uint64_t result = *(uint64_t **)(v20 + 16);
        if (!result) {
          break;
        }
        uint64_t v21 = *result;
        uint64_t v22 = result[1];
        if (v22 >= *result)
        {
          BOOL v16 = __OFADD__(v22, 1);
          uint64_t v25 = v22 + 1;
          if (v16)
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v21 < v25)
          {
            if (v21 + 0x4000000000000000 < 0) {
              goto LABEL_50;
            }
            if (2 * v21 <= v25) {
              uint64_t v21 = v25;
            }
            else {
              v21 *= 2;
            }
          }
          sub_22088F714((uint64_t)result, v21, v37);
          uint64_t result = *(uint64_t **)(v20 + 16);
          if (!result) {
            goto LABEL_54;
          }
          if (result[1] < 0) {
            goto LABEL_47;
          }
          MEMORY[0x223C6B140]();
          BOOL v26 = (void *)v37[0];
          uint64_t v27 = v37[1];
          *(void *)(v20 + 16) = v37[0];
          *(void *)(v20 + 24) = v27;
          sub_220890C8C(v18, v19, v26);
        }
        else
        {
          if (v19)
          {
            uint64_t v23 = result[2];
            BOOL v16 = __OFADD__(v23, 1);
            uint64_t v24 = v23 + 1;
            if (v16) {
              goto LABEL_48;
            }
            result[2] = v24;
          }
          else
          {
            uint64_t v28 = v21 + 7;
            if (__OFADD__(v21, 7)) {
              goto LABEL_49;
            }
            uint64_t v29 = result + 8;
            if (v28 < 0) {
              uint64_t v28 = v21 + 14;
            }
            uint64_t v30 = v28 >> 3;
            uint64_t v32 = v30 - 1;
            BOOL v31 = v30 < 1;
            uint64_t v33 = v30 + 62;
            if (!v31) {
              uint64_t v33 = v32;
            }
            *(uint64_t *)((char *)&v29[v22 + 8] + (v33 & 0xFFFFFFFFFFFFFFC0)) = v18;
            uint64_t v34 = v22 / 8;
            uint64_t v35 = v22 - (v33 & 0xFFFFFFFFFFFFFFF8);
            if (v35 >= 0) {
              char v36 = 1 << v35;
            }
            else {
              char v36 = 0;
            }
            *((unsigned char *)v29 + v34) |= v36;
            uint64_t v22 = result[1];
          }
          BOOL v16 = __OFADD__(v22, 1);
          uint64_t v17 = v22 + 1;
          if (v16) {
            goto LABEL_46;
          }
          result[1] = v17;
        }
        if (!--v8) {
          return (uint64_t *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t result = (uint64_t *)swift_beginAccess();
  if (!*v11)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (**v11 < v9) {
    uint64_t result = (uint64_t *)sub_220893B64(v9, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
  }
  if (v8) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_22088DD2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6) {
    goto LABEL_54;
  }
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (uint64_t **)(*v1 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    char v12 = *v11;
    if (!v12)
    {
LABEL_56:
      __break(1u);
      return result;
    }
    uint64_t v13 = *v12;
    if (*v12 >= v9) {
      goto LABEL_15;
    }
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9) {
        uint64_t v13 = v9;
      }
      else {
        v13 *= 2;
      }
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
      uint64_t v14 = swift_allocObject();
      sub_22088E9D4((uint64_t)v12, v13, (uint64_t *)&v42);
      *(_OWORD *)(v14 + 16) = v42;
      uint64_t result = swift_release();
      *unint64_t v1 = v14;
      if (!v8) {
        return result;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
      {
        uint64_t v19 = *(i - 1);
        uint64_t v18 = *i;
        uint64_t v20 = *v2;
        uint64_t result = swift_beginAccess();
        uint64_t v21 = *(uint64_t **)(v20 + 16);
        if (!v21) {
          break;
        }
        uint64_t v23 = *v21;
        uint64_t v22 = v21[1];
        if (v22 >= *v21)
        {
          BOOL v36 = __OFADD__(v22, 1);
          uint64_t v38 = v22 + 1;
          if (v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v23 < v38)
          {
            if (v23 + 0x4000000000000000 < 0) {
              goto LABEL_49;
            }
            if (2 * v23 <= v38) {
              uint64_t v23 = v38;
            }
            else {
              v23 *= 2;
            }
          }
          swift_bridgeObjectRetain();
          sub_22088F904((uint64_t)v21, v23, v41);
          sub_220890508(*(void **)(v20 + 16));
          BOOL v16 = (void *)v41[0];
          uint64_t v17 = v41[1];
          *(void *)(v20 + 16) = v41[0];
          *(void *)(v20 + 24) = v17;
          sub_220890D48(v19, v18, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v18)
          {
            uint64_t v24 = v23 + 7;
            if (__OFADD__(v23, 7)) {
              goto LABEL_48;
            }
            uint64_t v25 = v21 + 8;
            if (v24 < 0) {
              uint64_t v24 = v23 + 14;
            }
            uint64_t v26 = v24 >> 3;
            uint64_t v28 = v26 - 1;
            BOOL v27 = v26 < 1;
            uint64_t v29 = v26 + 62;
            if (!v27) {
              uint64_t v29 = v28;
            }
            unint64_t v30 = (unint64_t)&v25[2 * v22] + (v29 & 0xFFFFFFFFFFFFFFC0);
            *(void *)(v30 + 64) = v19;
            *(void *)(v30 + 72) = v18;
            uint64_t v31 = v21[1];
            uint64_t v32 = v31 + 7;
            if (v31 >= 0) {
              uint64_t v32 = v21[1];
            }
            uint64_t v33 = v31 - (v32 & 0xFFFFFFFFFFFFFFF8);
            if (v33 >= 0) {
              char v34 = 1 << v33;
            }
            else {
              char v34 = 0;
            }
            *((unsigned char *)v25 + (v32 >> 3)) |= v34;
            uint64_t v35 = v21[1];
            BOOL v36 = __OFADD__(v35, 1);
            uint64_t v37 = v35 + 1;
            if (v36) {
              goto LABEL_47;
            }
          }
          else
          {
            uint64_t v39 = v21[2];
            BOOL v36 = __OFADD__(v39, 1);
            uint64_t v40 = v39 + 1;
            if (v36) {
              goto LABEL_50;
            }
            v21[2] = v40;
            BOOL v36 = __OFADD__(v22, 1);
            uint64_t v37 = v22 + 1;
            if (v36) {
              goto LABEL_47;
            }
          }
          v21[1] = v37;
          swift_bridgeObjectRetain();
        }
        if (!--v8) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t result = swift_beginAccess();
  if (!*v11)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (**v11 < v9) {
    uint64_t result = sub_2208939F4(v9, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508);
  }
  if (v8) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_22088E044(uint64_t a1)
{
  return sub_22088E3BC(a1, &qword_267F18778, &qword_267F18770);
}

uint64_t sub_22088E058(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6) {
    goto LABEL_52;
  }
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (uint64_t **)(*v1 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    char v12 = *v11;
    if (!v12)
    {
LABEL_54:
      __break(1u);
      return result;
    }
    uint64_t v13 = *v12;
    if (*v12 >= v9) {
      goto LABEL_15;
    }
    if (v13 + 0x4000000000000000 >= 0)
    {
      if (2 * v13 <= v9) {
        uint64_t v13 = v9;
      }
      else {
        v13 *= 2;
      }
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18790);
      uint64_t v14 = swift_allocObject();
      sub_22088EEF0((uint64_t)v12, v13, (uint64_t *)&v42);
      *(_OWORD *)(v14 + 16) = v42;
      uint64_t result = swift_release();
      *unint64_t v1 = v14;
      if (!v8) {
        return result;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
      {
        uint64_t v19 = *(i - 2);
        uint64_t v18 = *(i - 1);
        uint64_t v20 = *i;
        uint64_t v21 = *v2;
        uint64_t result = swift_beginAccess();
        uint64_t v22 = *(uint64_t **)(v21 + 16);
        if (!v22) {
          break;
        }
        uint64_t v24 = *v22;
        uint64_t v23 = v22[1];
        if (v23 >= *v22)
        {
          BOOL v36 = __OFADD__(v23, 1);
          uint64_t v38 = v23 + 1;
          if (v36)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
          if (v24 < v38)
          {
            if (v24 + 0x4000000000000000 < 0) {
              goto LABEL_47;
            }
            if (2 * v24 <= v38) {
              uint64_t v24 = v38;
            }
            else {
              v24 *= 2;
            }
          }
          sub_220834DFC(v19);
          sub_220890120((uint64_t)v22, v24, v41);
          sub_2208908F0(*(void **)(v21 + 16));
          BOOL v16 = (void *)v41[0];
          uint64_t v17 = v41[1];
          *(void *)(v21 + 16) = v41[0];
          *(void *)(v21 + 24) = v17;
          sub_2208912D0(v19, v18, v20, v16);
          sub_220834E48(v19);
        }
        else
        {
          if (v19)
          {
            uint64_t v25 = v24 + 7;
            if (__OFADD__(v24, 7)) {
              goto LABEL_46;
            }
            uint64_t v26 = v22 + 8;
            if (v25 < 0) {
              uint64_t v25 = v24 + 14;
            }
            uint64_t v27 = v25 >> 3;
            uint64_t v29 = v27 - 1;
            BOOL v28 = v27 < 1;
            uint64_t v30 = v27 + 62;
            if (!v28) {
              uint64_t v30 = v29;
            }
            unint64_t v31 = (unint64_t)&v26[3 * v23] + (v30 & 0xFFFFFFFFFFFFFFC0);
            *(void *)(v31 + 64) = v19;
            *(void *)(v31 + 72) = v18;
            *(void *)(v31 + 80) = v20;
            uint64_t v32 = v23 / 8;
            uint64_t v33 = v23 - (v31 & 0xFFFFFFFFFFFFFFF8);
            if (v33 >= 0) {
              char v34 = 1 << v33;
            }
            else {
              char v34 = 0;
            }
            *((unsigned char *)v26 + v32) |= v34;
            uint64_t v35 = v22[1];
            BOOL v36 = __OFADD__(v35, 1);
            uint64_t v37 = v35 + 1;
            if (v36) {
              goto LABEL_45;
            }
          }
          else
          {
            uint64_t v39 = v22[2];
            BOOL v36 = __OFADD__(v39, 1);
            uint64_t v40 = v39 + 1;
            if (v36) {
              goto LABEL_48;
            }
            v22[2] = v40;
            BOOL v36 = __OFADD__(v23, 1);
            uint64_t v37 = v23 + 1;
            if (v36) {
              goto LABEL_45;
            }
          }
          v22[1] = v37;
          sub_220834DFC(v19);
        }
        if (!--v8) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_51;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t result = swift_beginAccess();
  if (!*v11)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (**v11 < v9) {
    uint64_t result = sub_2208939F4(v9, 1, (void (*)(void *__return_ptr, void, void, uint64_t))sub_220890120, (void (*)(void, void))sub_2208908F0);
  }
  if (v8) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_22088E394(uint64_t a1)
{
  return sub_22088E3BC(a1, &qword_267F187A8, &qword_267F18C08);
}

uint64_t sub_22088E3A8(uint64_t a1)
{
  return sub_22088E3BC(a1, &qword_267F187B0, &qword_267F18C00);
}

uint64_t sub_22088E3BC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = v3;
  uint64_t v8 = *v3;
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *(void *)(v8 + 16);
  if (!v10) {
    goto LABEL_52;
  }
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = (uint64_t **)(*v6 + 16);
  if (!isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = swift_beginAccess();
    BOOL v16 = *v15;
    if (!v16)
    {
LABEL_54:
      __break(1u);
      return result;
    }
    uint64_t v17 = *v16;
    if (*v16 >= v13) {
      goto LABEL_15;
    }
    if (v17 + 0x4000000000000000 >= 0)
    {
      if (2 * v17 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        v17 *= 2;
      }
LABEL_15:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      uint64_t v18 = swift_allocObject();
      sub_22088F0BC((uint64_t)v16, v17, (uint64_t *)&v43);
      *(_OWORD *)(v18 + 16) = v43;
      uint64_t result = swift_release();
      uint64_t *v6 = v18;
      if (!v12) {
        return result;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v19 = 0;
      while (1)
      {
        uint64_t v22 = *(void *)(a1 + 8 * v19 + 32);
        uint64_t v23 = *v6;
        uint64_t result = swift_beginAccess();
        uint64_t v24 = *(uint64_t **)(v23 + 16);
        if (!v24) {
          goto LABEL_51;
        }
        uint64_t v26 = *v24;
        uint64_t v25 = v24[1];
        if (v25 >= *v24)
        {
          BOOL v37 = __OFADD__(v25, 1);
          uint64_t v39 = v25 + 1;
          if (v37)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
          if (v26 < v39)
          {
            if (v26 + 0x4000000000000000 < 0) {
              goto LABEL_47;
            }
            if (2 * v26 <= v39) {
              uint64_t v26 = v39;
            }
            else {
              v26 *= 2;
            }
          }
          swift_bridgeObjectRetain();
          sub_22088F714((uint64_t)v24, v26, v42);
          sub_2208909EC(*(void **)(v23 + 16), *(void *)(v23 + 24), a3);
          uint64_t v20 = (void *)v42[0];
          uint64_t v21 = v42[1];
          *(void *)(v23 + 16) = v42[0];
          *(void *)(v23 + 24) = v21;
          sub_220891394(v22, v20);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v22)
          {
            uint64_t v27 = v26 + 7;
            if (__OFADD__(v26, 7)) {
              goto LABEL_46;
            }
            BOOL v28 = v24 + 8;
            if (v27 < 0) {
              uint64_t v27 = v26 + 14;
            }
            uint64_t v29 = v27 >> 3;
            uint64_t v31 = v29 - 1;
            BOOL v30 = v29 < 1;
            uint64_t v32 = v29 + 62;
            if (!v30) {
              uint64_t v32 = v31;
            }
            *(uint64_t *)((char *)&v28[v25 + 8] + (v32 & 0xFFFFFFFFFFFFFFC0)) = v22;
            uint64_t v33 = v25 / 8;
            uint64_t v34 = v25 - (v32 & 0xFFFFFFFFFFFFFFF8);
            if (v34 >= 0) {
              char v35 = 1 << v34;
            }
            else {
              char v35 = 0;
            }
            *((unsigned char *)v28 + v33) |= v35;
            uint64_t v36 = v24[1];
            BOOL v37 = __OFADD__(v36, 1);
            uint64_t v38 = v36 + 1;
            if (v37) {
              goto LABEL_45;
            }
          }
          else
          {
            uint64_t v40 = v24[2];
            BOOL v37 = __OFADD__(v40, 1);
            uint64_t v41 = v40 + 1;
            if (v37) {
              goto LABEL_48;
            }
            v24[2] = v41;
            BOOL v37 = __OFADD__(v25, 1);
            uint64_t v38 = v25 + 1;
            if (v37) {
              goto LABEL_45;
            }
          }
          v24[1] = v38;
          swift_bridgeObjectRetain();
        }
        if (v12 == ++v19) {
          return swift_bridgeObjectRelease();
        }
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t result = swift_beginAccess();
  if (!*v15)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (**v15 < v13) {
    uint64_t result = sub_220893C64(v13, 1, a3);
  }
  if (v12) {
    goto LABEL_16;
  }
  return result;
}

void sub_22088E6B0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (char *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    for (unint64_t i = 0; i != v25; ++i)
    {
      if ((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7))) {
        *(void *)(v17 + v12 + 8 * i) = *(void *)&v19[8 * i + v24];
      }
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088E844(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (char *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    for (unint64_t i = 0; i != v25; ++i)
    {
      if ((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7))) {
        *(void *)(v17 + v12 + 8 * i) = *(void *)&v19[8 * i + v24];
      }
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088E9D4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_32;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15) {
    goto LABEL_27;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  if (v16 < 0) {
    uint64_t v16 = *(void *)a1 + 14;
  }
  uint64_t v19 = v16 >> 3;
  uint64_t v20 = v19 - 1;
  uint64_t v21 = v19 + 62;
  if (v20 >= 0) {
    uint64_t v21 = v20;
  }
  unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFC0;
  size_t v23 = (v21 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v23);
  if ((uint64_t)(v11 - v22) < 0) {
    goto LABEL_30;
  }
  if (v11 != v22) {
    bzero((void *)(v18 + v23), v11 - v22);
  }
  uint64_t v24 = *(void *)(v17 + 8);
  if (v24 < 0) {
    goto LABEL_31;
  }
  if (v24)
  {
    unint64_t v25 = 0;
    uint64_t v26 = (uint64_t *)(v22 + a1 + 136);
    uint64_t v27 = (void *)(v11 + v17 + 136);
    do
    {
      if ((*(unsigned __int8 *)(v18 + (v25 >> 3)) >> (v25 & 7)))
      {
        uint64_t v28 = *v26;
        *(v27 - 1) = *(v26 - 1);
        *uint64_t v27 = v28;
        swift_bridgeObjectRetain();
      }
      ++v25;
      v26 += 2;
      v27 += 2;
    }
    while (v24 != v25);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088EB70(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_31;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (v8) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v9;
  }
  uint64_t v12 = sub_22093E100();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = v14 * a2;
  if ((unsigned __int128)(v14 * (__int128)a2) >> 64 != (v14 * a2) >> 63) {
    goto LABEL_26;
  }
  unint64_t v16 = v11 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v17 = (v11 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v19 = v12;
  uint64_t v20 = swift_slowAlloc();
  long long v21 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v20 = a2;
  *(_OWORD *)(v20 + 8) = v21;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v22 = v20;
  uint64_t v34 = v13;
  uint64_t v23 = v20 + 64;
  uint64_t v24 = (*(void *)a1 + 7) / 8;
  uint64_t v25 = v24 - 1;
  uint64_t v26 = v24 + 62;
  if (v25 >= 0) {
    uint64_t v26 = v25;
  }
  unint64_t v27 = v26 & 0xFFFFFFFFFFFFFFC0;
  size_t v28 = (v26 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v20 + 64), (const void *)(a1 + 64), v28);
  if ((uint64_t)(v16 - v27) < 0) {
    goto LABEL_29;
  }
  char v35 = a3;
  if (v16 != v27) {
    bzero((void *)(v23 + v28), v16 - v27);
  }
  uint64_t v29 = *(void *)(v22 + 8);
  if (v29 < 0) {
    goto LABEL_30;
  }
  if (v29)
  {
    unint64_t v30 = 0;
    uint64_t v31 = a1 + v27;
    unint64_t v32 = v22 + v16;
    uint64_t v33 = 128;
    do
    {
      if ((*(unsigned __int8 *)(v23 + (v30 >> 3)) >> (v30 & 7))) {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 16))(v32 + v33, v31 + v33, v19);
      }
      ++v30;
      v33 += v14;
    }
    while (v29 != v30);
  }
  *char v35 = v22;
  v35[1] = v22 + v18;
}

void sub_22088ED7C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_28;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  uint64_t v13 = v12 + a2;
  if (__OFADD__(v12, a2)) {
    goto LABEL_24;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (const void *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_26;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_27;
  }
  if (v25)
  {
    for (unint64_t i = 0; i != v25; ++i)
    {
      if ((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7))) {
        *(unsigned char *)(v17 + v12 + i) = *((unsigned char *)v19 + v24 + i);
      }
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088EEF0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_32;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = 24 * a2;
  if ((unsigned __int128)(a2 * (__int128)24) >> 64 != (24 * a2) >> 63) {
    goto LABEL_27;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v13 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v15 = swift_slowAlloc();
  long long v16 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v15 = a2;
  *(_OWORD *)(v15 + 8) = v16;
  uint64_t v17 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v18 = v15;
  uint64_t v19 = v15 + 64;
  if (v17 < 0) {
    uint64_t v17 = *(void *)a1 + 14;
  }
  uint64_t v20 = v17 >> 3;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v15 + 64), (const void *)(a1 + 64), v24);
  if ((uint64_t)(v12 - v23) < 0) {
    goto LABEL_30;
  }
  if (v12 != v23) {
    bzero((void *)(v19 + v24), v12 - v23);
  }
  uint64_t v25 = *(void *)(v18 + 8);
  if (v25 < 0) {
    goto LABEL_31;
  }
  if (v25)
  {
    unint64_t v26 = 0;
    unint64_t v27 = (void *)(v12 + v18 + 144);
    size_t v28 = (void *)(v23 + a1 + 144);
    do
    {
      if ((*(unsigned __int8 *)(v19 + (v26 >> 3)) >> (v26 & 7)))
      {
        uint64_t v29 = *v28;
        *((_OWORD *)v27 - 1) = *((_OWORD *)v28 - 1);
        *unint64_t v27 = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      ++v26;
      v27 += 3;
      v28 += 3;
    }
    while (v25 != v26);
  }
  *a3 = v18;
  a3[1] = v18 + v14;
}

void sub_22088F0BC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (char *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    unint64_t v26 = 0;
    unint64_t v27 = v17 + v12;
    size_t v28 = &v19[v24];
    do
    {
      if ((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7)))
      {
        *(void *)(v27 + 8 * v26) = *(void *)&v28[8 * v26];
        swift_bridgeObjectRetain();
      }
      ++v26;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088F250(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 4 * a2;
  if (__OFADD__(v12, 4 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (char *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    for (unint64_t i = 0; i != v25; ++i)
    {
      if ((*(unsigned __int8 *)(v18 + (i >> 3)) >> (i & 7))) {
        *(_DWORD *)(v17 + v12 + 4 * i) = *(_DWORD *)&v19[4 * i + v24];
      }
    }
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088F3E0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (char *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    unint64_t v26 = 0;
    unint64_t v27 = v17 + v12;
    size_t v28 = &v19[v24];
    do
    {
      if ((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7)))
      {
        long long v29 = *(_OWORD *)&v28[16 * v26];
        *(_OWORD *)(v27 + 16 * v26) = v29;
        sub_22080B7F4(v29, *((unint64_t *)&v29 + 1));
      }
      ++v26;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088F57C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_30;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 != 31) {
    goto LABEL_25;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 32 * a2;
  if (__OFADD__(v12, 32 * a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = (const void *)(a1 + 64);
  uint64_t v20 = v16 / 8;
  uint64_t v21 = v20 - 1;
  uint64_t v22 = v20 + 62;
  if (v21 >= 0) {
    uint64_t v22 = v21;
  }
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFC0;
  size_t v24 = (v22 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), v19, v24);
  if ((uint64_t)(v11 - v23) < 0) {
    goto LABEL_28;
  }
  if (v11 != v23) {
    bzero((void *)(v18 + v24), v11 - v23);
  }
  uint64_t v25 = *(void *)(v17 + 8);
  if (v25 < 0) {
    goto LABEL_29;
  }
  if (v25)
  {
    unint64_t v26 = 0;
    uint64_t v27 = v17 + v12;
    uint64_t v28 = (uint64_t)v19 + v24;
    do
    {
      if ((*(unsigned __int8 *)(v18 + (v26 >> 3)) >> (v26 & 7))) {
        sub_220835350(v28, v27);
      }
      ++v26;
      v28 += 32;
      v27 += 32;
    }
    while (v25 != v26);
  }
  *a3 = v17;
  a3[1] = v17 + v13;
}

void sub_22088F714(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_37;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_31;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 8 * a2;
  if (__OFADD__(v12, 8 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = v14;
  uint64_t v27 = a3;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0) {
    uint64_t v19 = v16 / 8 - 1;
  }
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  size_t v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0) {
    goto LABEL_34;
  }
  if (v11 != v20) {
    bzero((void *)(v18 + v21), v11 - v20);
  }
  uint64_t v22 = *(void *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
      unint64_t v25 = v17 + v12;
      uint64_t v26 = a1 + v20;
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v25 != a1 + 64 + v21 || v25 + v23 >= v26 + v23 + 136))
        {
          *(void *)(v25 + 8 * v24) = *(void *)(v26 + 8 * v24 + 128);
        }
        ++v24;
        v23 += 8;
      }
      while (v22 != v24);
    }
    if (!v21) {
      goto LABEL_28;
    }
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(void *)(a1 + 16) = *(void *)(v17 + 8);
      *uint64_t v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_22088F904(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_37;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15) {
    goto LABEL_31;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 16 * a2;
  if (__OFADD__(v12, 16 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = v14;
  uint64_t v26 = a3;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0) {
    uint64_t v19 = v16 / 8 - 1;
  }
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  size_t v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0) {
    goto LABEL_34;
  }
  if (v11 != v20) {
    bzero((void *)(v18 + v21), v11 - v20);
  }
  uint64_t v22 = *(void *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      unint64_t v23 = 0;
      unint64_t v24 = v20 + a1 + 144;
      unint64_t v25 = (_OWORD *)(v17 + v12);
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)) & 1) != 0
          && (v17 + v12 != a1 + 64 + v21 || (unint64_t)v25 >= v24))
        {
          *unint64_t v25 = *(_OWORD *)(v24 - 16);
        }
        ++v23;
        v24 += 16;
        ++v25;
      }
      while (v22 != v23);
    }
    if (!v21) {
      goto LABEL_28;
    }
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(void *)(a1 + 16) = *(void *)(v17 + 8);
      *uint64_t v26 = v17;
      v26[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_22088FAF0(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_50;
  }
  if (*a1 > a2)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (v8) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v9;
  }
  uint64_t v12 = *(void *)(*(void *)(sub_22093E100() - 8) + 72);
  uint64_t v13 = v12 * a2;
  if ((unsigned __int128)(v12 * (__int128)a2) >> 64 != (v12 * a2) >> 63) {
    goto LABEL_44;
  }
  unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFC0;
  if (!__OFADD__(v14 + 128, v13))
  {
    unint64_t v36 = v14 + 128 + v13;
    BOOL v37 = a3;
    uint64_t v15 = swift_slowAlloc();
    long long v16 = *(_OWORD *)(a1 + 1);
    *(void *)uint64_t v15 = a2;
    *(_OWORD *)(v15 + 8) = v16;
    uint64_t v17 = *a1 + 7;
    BOOL v18 = __OFADD__(*a1, 7);
    if (__OFADD__(*a1, 7)) {
      goto LABEL_46;
    }
    uint64_t v19 = v15;
    unint64_t v20 = v14 + 128;
    uint64_t v21 = v15 + 64;
    uint64_t v38 = a1;
    uint64_t v22 = (char *)(a1 + 8);
    uint64_t v23 = v17 / 8 + 62;
    if (v17 / 8 - 1 >= 0) {
      uint64_t v23 = v17 / 8 - 1;
    }
    unint64_t v24 = v23 & 0xFFFFFFFFFFFFFFC0;
    size_t v25 = (v23 & 0xFFFFFFFFFFFFFFC0) + 64;
    uint64_t v39 = v22;
    memcpy((void *)(v15 + 64), v22, v25);
    if ((uint64_t)(v14 - v24) < 0) {
      goto LABEL_47;
    }
    if (v14 != v24) {
      bzero((void *)(v21 + v25), v14 - v24);
    }
    uint64_t v26 = *(void *)(v19 + 8);
    if (v26 < 0) {
      goto LABEL_48;
    }
    if (v26)
    {
      unint64_t v27 = 0;
      uint64_t v28 = (char *)(v19 + v20);
      long long v29 = &v39[v25];
      unint64_t v30 = v28;
      uint64_t v31 = v29;
      do
      {
        if ((*(unsigned __int8 *)(v21 + (v27 >> 3)) >> (v27 & 7)))
        {
          if (v28 < v29 || v30 >= &v31[v12])
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v28 != v29)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ++v27;
        v31 += v12;
        v30 += v12;
      }
      while (v26 != v27);
      unint64_t v32 = v38;
      uint64_t v17 = *v38 + 7;
      if (!__OFADD__(*v38, 7)) {
        goto LABEL_34;
      }
    }
    else
    {
      unint64_t v32 = v38;
      if (!v18)
      {
LABEL_34:
        uint64_t v34 = v17 / 8 + 62;
        if (v17 / 8 >= 1) {
          uint64_t v34 = v17 / 8 - 1;
        }
        unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFC0;
        if (v35 == -64) {
          goto LABEL_39;
        }
        if (v17 >= -503)
        {
          bzero(v39, v35 + 64);
LABEL_39:
          v32[2] = *(void *)(v19 + 8);
          *BOOL v37 = v19;
          v37[1] = v19 + v36;
          return;
        }
        goto LABEL_49;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_22088FD6C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_35;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  uint64_t v13 = v12 + a2;
  if (__OFADD__(v12, a2)) {
    goto LABEL_30;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v17 = v14;
  unint64_t v27 = a3;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0) {
    uint64_t v19 = v16 / 8 - 1;
  }
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  size_t v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0) {
    goto LABEL_32;
  }
  if (v11 != v20) {
    bzero((void *)(v18 + v21), v11 - v20);
  }
  uint64_t v22 = *(void *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      unint64_t v23 = 0;
      unint64_t v24 = v17 + v12;
      do
      {
        if ((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)))
        {
          size_t v25 = (unsigned char *)(v24 + v23);
          unint64_t v26 = a1 + v20 + v23;
          if (v24 != a1 + 64 + v21 || (unint64_t)v25 >= v26 + 129) {
            *size_t v25 = *(unsigned char *)(v26 + 128);
          }
        }
        ++v23;
      }
      while (v22 != v23);
    }
    if (!v21) {
      goto LABEL_27;
    }
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_27:
      *(void *)(a1 + 16) = *(void *)(v17 + 8);
      *unint64_t v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_22088FF34(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_37;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_31;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 4 * a2;
  if (__OFADD__(v12, 4 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = v14;
  unint64_t v27 = a3;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0) {
    uint64_t v19 = v16 / 8 - 1;
  }
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  size_t v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0) {
    goto LABEL_34;
  }
  if (v11 != v20) {
    bzero((void *)(v18 + v21), v11 - v20);
  }
  uint64_t v22 = *(void *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
      unint64_t v25 = v17 + v12;
      uint64_t v26 = a1 + v20;
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v25 != a1 + 64 + v21 || v25 + v23 >= v26 + v23 + 132))
        {
          *(_DWORD *)(v25 + 4 * v24) = *(_DWORD *)(v26 + 4 * v24 + 128);
        }
        ++v24;
        v23 += 4;
      }
      while (v22 != v24);
    }
    if (!v21) {
      goto LABEL_28;
    }
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(void *)(a1 + 16) = *(void *)(v17 + 8);
      *unint64_t v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_220890120(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_37;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  uint64_t v11 = 24 * a2;
  if ((unsigned __int128)(a2 * (__int128)24) >> 64 != (24 * a2) >> 63) {
    goto LABEL_31;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v13 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v15 = swift_slowAlloc();
  long long v16 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v15 = a2;
  *(_OWORD *)(v15 + 8) = v16;
  uint64_t v17 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v18 = v15;
  uint64_t v28 = a3;
  uint64_t v19 = v15 + 64;
  uint64_t v20 = v17 / 8 + 62;
  if (v17 / 8 - 1 >= 0) {
    uint64_t v20 = v17 / 8 - 1;
  }
  unint64_t v21 = v20 & 0xFFFFFFFFFFFFFFC0;
  size_t v22 = (v20 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v15 + 64), (const void *)(a1 + 64), v22);
  if ((uint64_t)(v12 - v21) < 0) {
    goto LABEL_34;
  }
  if (v12 != v21) {
    bzero((void *)(v19 + v22), v12 - v21);
  }
  uint64_t v23 = *(void *)(v18 + 8);
  if ((v23 & 0x8000000000000000) == 0)
  {
    if (v23)
    {
      unint64_t v24 = 0;
      unint64_t v25 = v21 + a1 + 152;
      unint64_t v26 = v18 + v13;
      do
      {
        if (((*(unsigned __int8 *)(v19 + (v24 >> 3)) >> (v24 & 7)) & 1) != 0
          && (v18 + v13 != a1 + 64 + v22 || v26 >= v25))
        {
          long long v27 = *(_OWORD *)(v25 - 24);
          *(void *)(v26 + 16) = *(void *)(v25 - 8);
          *(_OWORD *)unint64_t v26 = v27;
        }
        ++v24;
        v25 += 24;
        v26 += 24;
      }
      while (v23 != v24);
    }
    if (!v22) {
      goto LABEL_28;
    }
    if (v17 >= -503)
    {
      bzero((void *)(a1 + 64), v22);
LABEL_28:
      *(void *)(a1 + 16) = *(void *)(v18 + 8);
      *uint64_t v28 = v18;
      v28[1] = v18 + v14;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_220890314(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!a1) {
    goto LABEL_37;
  }
  if (*(void *)a1 > a2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v6 < 0) {
    uint64_t v6 = a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 != 31) {
    goto LABEL_31;
  }
  unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFC0;
  unint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFC0) + 128;
  unint64_t v13 = v12 + 32 * a2;
  if (__OFADD__(v12, 32 * a2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = swift_slowAlloc();
  long long v15 = *(_OWORD *)(a1 + 8);
  *(void *)uint64_t v14 = a2;
  *(_OWORD *)(v14 + 8) = v15;
  uint64_t v16 = *(void *)a1 + 7;
  if (__OFADD__(*(void *)a1, 7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = v14;
  long long v27 = a3;
  uint64_t v18 = v14 + 64;
  uint64_t v19 = v16 / 8 + 62;
  if (v16 / 8 - 1 >= 0) {
    uint64_t v19 = v16 / 8 - 1;
  }
  unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFC0;
  size_t v21 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
  memcpy((void *)(v14 + 64), (const void *)(a1 + 64), v21);
  if ((uint64_t)(v11 - v20) < 0) {
    goto LABEL_34;
  }
  if (v11 != v20) {
    bzero((void *)(v18 + v21), v11 - v20);
  }
  uint64_t v22 = *(void *)(v17 + 8);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (v22)
    {
      unint64_t v23 = 0;
      unint64_t v24 = v20 + a1 + 160;
      unint64_t v25 = (_OWORD *)(v17 + v12);
      do
      {
        if (((*(unsigned __int8 *)(v18 + (v23 >> 3)) >> (v23 & 7)) & 1) != 0
          && (v17 + v12 != a1 + 64 + v21 || (unint64_t)v25 >= v24))
        {
          long long v26 = *(_OWORD *)(v24 - 16);
          *unint64_t v25 = *(_OWORD *)(v24 - 32);
          v25[1] = v26;
        }
        ++v23;
        v24 += 32;
        v25 += 2;
      }
      while (v22 != v23);
    }
    if (!v21) {
      goto LABEL_28;
    }
    if (v16 >= -503)
    {
      bzero((void *)(a1 + 64), v21);
LABEL_28:
      *(void *)(a1 + 16) = *(void *)(v17 + 8);
      *long long v27 = v17;
      v27[1] = v17 + v13;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2208904FC(void *a1, uint64_t a2)
{
}

void sub_220890508(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    uint64_t v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0) {
        uint64_t v2 = *a1 + 14;
      }
      uint64_t v3 = v2 >> 3;
      uint64_t v5 = v3 - 1;
      BOOL v4 = v3 < 1;
      uint64_t v6 = v3 + 62;
      if (!v4) {
        uint64_t v6 = v5;
      }
      uint64_t v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          unint64_t v8 = 0;
          unint64_t v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7))) {
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 16;
          }
          while (v7 != v8);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

void sub_2208905F0(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    uint64_t v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0) {
        uint64_t v2 = *a1 + 14;
      }
      uint64_t v3 = v2 >> 3;
      uint64_t v5 = v3 - 1;
      BOOL v4 = v3 < 1;
      uint64_t v6 = v3 + 62;
      if (!v4) {
        uint64_t v6 = v5;
      }
      uint64_t v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          unint64_t v8 = 0;
          unint64_t v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7))) {
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 32;
          }
          while (v7 != v8);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

void sub_2208906DC(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      uint64_t v2 = a1[1];
      if ((v2 & 0x8000000000000000) == 0)
      {
        if (v2)
        {
          for (unint64_t i = 0; i != v2; ++i)
          {
            if ((*((unsigned __int8 *)v1 + (i >> 3)) >> (i & 7)))
            {
              sub_22093E100();
              swift_arrayDestroy();
            }
          }
        }
LABEL_15:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_15;
}

void sub_2208907D8(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    uint64_t v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0) {
        uint64_t v2 = *a1 + 14;
      }
      uint64_t v3 = v2 >> 3;
      uint64_t v5 = v3 - 1;
      BOOL v4 = v3 < 1;
      uint64_t v6 = v3 + 62;
      if (!v4) {
        uint64_t v6 = v5;
      }
      uint64_t v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          unint64_t v8 = 0;
          unint64_t v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7))) {
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 16;
          }
          while (v7 != v8);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

void sub_2208908C0(void *a1, uint64_t a2)
{
}

void sub_2208908CC(void *a1, uint64_t a2)
{
}

void sub_2208908D8(void *a1, uint64_t a2)
{
}

void sub_2208908E4(void *a1, uint64_t a2)
{
}

void sub_2208908F0(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    uint64_t v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0) {
        uint64_t v2 = *a1 + 14;
      }
      uint64_t v3 = v2 >> 3;
      uint64_t v5 = v3 - 1;
      BOOL v4 = v3 < 1;
      uint64_t v6 = v3 + 62;
      if (!v4) {
        uint64_t v6 = v5;
      }
      uint64_t v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          unint64_t v8 = 0;
          unint64_t v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F18788);
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 24;
          }
          while (v7 != v8);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

void sub_2208909E0(void *a1, uint64_t a2)
{
}

void sub_2208909EC(void *a1, uint64_t a2, uint64_t *a3)
{
  if (a1)
  {
    uint64_t v3 = a1 + 8;
    uint64_t v4 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v4 < 0) {
        uint64_t v4 = *a1 + 14;
      }
      uint64_t v5 = v4 >> 3;
      uint64_t v7 = v5 - 1;
      BOOL v6 = v5 < 1;
      uint64_t v8 = v5 + 62;
      if (!v6) {
        uint64_t v8 = v7;
      }
      uint64_t v9 = a1[1];
      if ((v9 & 0x8000000000000000) == 0)
      {
        if (v9)
        {
          unint64_t v11 = 0;
          unint64_t v12 = (unint64_t)v3 + (v8 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v3 + (v11 >> 3)) >> (v11 & 7)))
            {
              __swift_instantiateConcreteTypeFromMangledName(a3);
              swift_arrayDestroy();
            }
            ++v11;
            v12 += 8;
          }
          while (v9 != v11);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

void sub_220890AD8(void *a1)
{
  if (a1)
  {
    unint64_t v1 = a1 + 8;
    uint64_t v2 = *a1 + 7;
    if (__OFADD__(*a1, 7))
    {
      __break(1u);
    }
    else
    {
      if (v2 < 0) {
        uint64_t v2 = *a1 + 14;
      }
      uint64_t v3 = v2 >> 3;
      uint64_t v5 = v3 - 1;
      BOOL v4 = v3 < 1;
      uint64_t v6 = v3 + 62;
      if (!v4) {
        uint64_t v6 = v5;
      }
      uint64_t v7 = a1[1];
      if ((v7 & 0x8000000000000000) == 0)
      {
        if (v7)
        {
          unint64_t v8 = 0;
          unint64_t v9 = (unint64_t)v1 + (v6 & 0xFFFFFFFFFFFFFFC0) + 64;
          do
          {
            if ((*((unsigned __int8 *)v1 + (v8 >> 3)) >> (v8 & 7)))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
              swift_arrayDestroy();
            }
            ++v8;
            v9 += 32;
          }
          while (v7 != v8);
        }
LABEL_19:
        JUMPOUT(0x223C6B140);
      }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

uint64_t sub_220890BC8(uint64_t result, char a2, void *a3)
{
  if ((a2 & 1) == 0)
  {
    if (!a3)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v3 = *a3 + 7;
    if (__OFADD__(*a3, 7)) {
      goto LABEL_20;
    }
    BOOL v4 = a3 + 8;
    if (v3 < 0) {
      uint64_t v3 = *a3 + 14;
    }
    uint64_t v5 = v3 >> 3;
    uint64_t v7 = v5 - 1;
    BOOL v6 = v5 < 1;
    uint64_t v8 = v5 + 62;
    if (!v6) {
      uint64_t v8 = v7;
    }
    *(void *)((char *)&v4[a3[1] + 8] + (v8 & 0xFFFFFFFFFFFFFFC0)) = result;
    uint64_t v9 = a3[1];
    uint64_t v10 = v9 + 7;
    if (v9 >= 0) {
      uint64_t v10 = a3[1];
    }
    uint64_t v11 = v9 - (v10 & 0xFFFFFFFFFFFFFFF8);
    if (v11 >= 0) {
      char v12 = 1 << v11;
    }
    else {
      char v12 = 0;
    }
    *((unsigned char *)v4 + (v10 >> 3)) |= v12;
LABEL_17:
    uint64_t v16 = a3[1];
    BOOL v14 = __OFADD__(v16, 1);
    uint64_t v17 = v16 + 1;
    if (!v14)
    {
      a3[1] = v17;
      return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a3)
  {
    uint64_t v13 = a3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a3[2] = v15;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_220890C8C(uint64_t result, char a2, void *a3)
{
  if ((a2 & 1) == 0)
  {
    if (!a3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v3 = *a3 + 7;
    if (__OFADD__(*a3, 7)) {
      goto LABEL_18;
    }
    BOOL v4 = a3 + 8;
    if (v3 < 0) {
      uint64_t v3 = *a3 + 14;
    }
    uint64_t v5 = v3 >> 3;
    uint64_t v7 = v5 - 1;
    BOOL v6 = v5 < 1;
    uint64_t v8 = v5 + 62;
    if (!v6) {
      uint64_t v8 = v7;
    }
    uint64_t v9 = a3[1];
    *(void *)((char *)&v4[v9 + 8] + (v8 & 0xFFFFFFFFFFFFFFC0)) = result;
    uint64_t v10 = v9 - (v8 & 0xFFFFFFFFFFFFFFF8);
    if (v10 >= 0) {
      char v11 = 1 << v10;
    }
    else {
      char v11 = 0;
    }
    *((unsigned char *)v4 + v9 / 8) |= v11;
LABEL_15:
    uint64_t v15 = a3[1];
    BOOL v13 = __OFADD__(v15, 1);
    uint64_t v16 = v15 + 1;
    if (!v13)
    {
      a3[1] = v16;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a3)
  {
    uint64_t v12 = a3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a3[2] = v14;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_220890D48(uint64_t result, uint64_t a2, void *a3)
{
  if (a2)
  {
    if (!a3)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v3 = *a3 + 7;
    if (__OFADD__(*a3, 7)) {
      goto LABEL_20;
    }
    BOOL v4 = a3 + 8;
    if (v3 < 0) {
      uint64_t v3 = *a3 + 14;
    }
    uint64_t v5 = v3 >> 3;
    uint64_t v7 = v5 - 1;
    BOOL v6 = v5 < 1;
    uint64_t v8 = v5 + 62;
    if (!v6) {
      uint64_t v8 = v7;
    }
    unint64_t v9 = (unint64_t)&v4[2 * a3[1]] + (v8 & 0xFFFFFFFFFFFFFFC0);
    *(void *)(v9 + 64) = result;
    *(void *)(v9 + 72) = a2;
    uint64_t v10 = a3[1];
    uint64_t v11 = v10 + 7;
    if (v10 >= 0) {
      uint64_t v11 = a3[1];
    }
    uint64_t v12 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0) {
      char v13 = 1 << v12;
    }
    else {
      char v13 = 0;
    }
    *((unsigned char *)v4 + (v11 >> 3)) |= v13;
LABEL_17:
    uint64_t v17 = a3[1];
    BOOL v15 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (!v15)
    {
      a3[1] = v18;
      return swift_bridgeObjectRetain();
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a3)
  {
    uint64_t v14 = a3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a3[2] = v16;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_220890E0C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_220891470(a1, a2, a3, qword_26AD40FF8, (uint64_t (*)(void *, unsigned char *))sub_220835340);
}

uint64_t sub_220890E2C(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22093E100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_220835280(a1, (uint64_t)v6, qword_26AD411B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_2208352E4((uint64_t)v6, qword_26AD411B8);
    if (!a2)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v12 = a2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_19;
    }
    a2[2] = v14;
LABEL_16:
    uint64_t v26 = a2[1];
    BOOL v13 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (!v13)
    {
      a2[1] = v27;
      return result;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (a2)
  {
    uint64_t v15 = *a2 + 7;
    if (__OFADD__(*a2, 7))
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v16 = a2 + 8;
    if (v15 < 0) {
      uint64_t v15 = *a2 + 14;
    }
    uint64_t v17 = v15 >> 3;
    uint64_t v19 = v17 - 1;
    BOOL v18 = v17 < 1;
    uint64_t v20 = v17 + 62;
    if (!v18) {
      uint64_t v20 = v19;
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))((unint64_t)v16 + (v20 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v8 + 72) * a2[1] + 64, v10, v7);
    uint64_t v21 = a2[1];
    uint64_t v22 = v21 + 7;
    if (v21 >= 0) {
      uint64_t v22 = a2[1];
    }
    uint64_t v23 = v22 >> 3;
    uint64_t v24 = v21 - (v22 & 0xFFFFFFFFFFFFFFF8);
    int v25 = 1 << v24;
    if (v24 < 0) {
      LOBYTE(v25) = 0;
    }
    *((unsigned char *)v16 + v23) |= v25;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_16;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_220891088(uint64_t a1, unint64_t a2, void *a3)
{
  if (a2 >> 60 == 15)
  {
    if (!a3)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v3 = a3[2];
    BOOL v4 = __OFADD__(v3, 1);
    uint64_t v5 = v3 + 1;
    if (v4) {
      goto LABEL_18;
    }
    a3[2] = v5;
LABEL_15:
    uint64_t v16 = a3[1];
    BOOL v4 = __OFADD__(v16, 1);
    uint64_t v17 = v16 + 1;
    if (!v4)
    {
      a3[1] = v17;
      return sub_220834CD4(a1, a2);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a3)
  {
    uint64_t v6 = *a3 + 7;
    if (__OFADD__(*a3, 7))
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v7 = a3 + 8;
    if (v6 < 0) {
      uint64_t v6 = *a3 + 14;
    }
    uint64_t v8 = v6 >> 3;
    uint64_t v10 = v8 - 1;
    BOOL v9 = v8 < 1;
    uint64_t v11 = v8 + 62;
    if (!v9) {
      uint64_t v11 = v10;
    }
    uint64_t v12 = a3[1];
    unint64_t v13 = (unint64_t)&v7[2 * v12] + (v11 & 0xFFFFFFFFFFFFFFC0);
    *(void *)(v13 + 64) = a1;
    *(void *)(v13 + 72) = a2;
    uint64_t v14 = v12 - (v13 & 0xFFFFFFFFFFFFFFF8);
    if (v14 >= 0) {
      char v15 = 1 << v14;
    }
    else {
      char v15 = 0;
    }
    *((unsigned char *)v7 + v12 / 8) |= v15;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return a1;
}

uint64_t sub_22089114C(uint64_t result, void *a2)
{
  if (result == 2)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v2 = a2[2];
    BOOL v3 = __OFADD__(v2, 1);
    uint64_t v4 = v2 + 1;
    if (v3) {
      goto LABEL_18;
    }
    a2[2] = v4;
LABEL_15:
    uint64_t v14 = a2[1];
    BOOL v3 = __OFADD__(v14, 1);
    uint64_t v15 = v14 + 1;
    if (!v3)
    {
      a2[1] = v15;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    uint64_t v5 = *a2 + 7;
    if (__OFADD__(*a2, 7))
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v6 = a2 + 8;
    if (v5 < 0) {
      uint64_t v5 = *a2 + 14;
    }
    uint64_t v7 = v5 >> 3;
    uint64_t v9 = v7 - 1;
    BOOL v8 = v7 < 1;
    uint64_t v10 = v7 + 62;
    if (!v8) {
      uint64_t v10 = v9;
    }
    uint64_t v11 = a2[1];
    *((unsigned char *)v6 + v11 + (v10 & 0xFFFFFFFFFFFFFFC0) + 64) = result & 1;
    uint64_t v12 = v11 - (v10 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0) {
      char v13 = 1 << v12;
    }
    else {
      char v13 = 0;
    }
    *((unsigned char *)v6 + v11 / 8) |= v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_220891214(uint64_t result, void *a2)
{
  if ((result & 0x100000000) == 0)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v2 = *a2 + 7;
    if (__OFADD__(*a2, 7)) {
      goto LABEL_18;
    }
    BOOL v3 = a2 + 8;
    if (v2 < 0) {
      uint64_t v2 = *a2 + 14;
    }
    uint64_t v4 = v2 >> 3;
    uint64_t v6 = v4 - 1;
    BOOL v5 = v4 < 1;
    uint64_t v7 = v4 + 62;
    if (!v5) {
      uint64_t v7 = v6;
    }
    uint64_t v8 = a2[1];
    *(_DWORD *)((char *)v3 + 4 * v8 + (v7 & 0xFFFFFFFFFFFFFFC0) + 64) = result;
    uint64_t v9 = v8 - (v7 & 0xFFFFFFFFFFFFFFF8);
    if (v9 >= 0) {
      char v10 = 1 << v9;
    }
    else {
      char v10 = 0;
    }
    *((unsigned char *)v3 + v8 / 8) |= v10;
LABEL_15:
    uint64_t v14 = a2[1];
    BOOL v12 = __OFADD__(v14, 1);
    uint64_t v15 = v14 + 1;
    if (!v12)
    {
      a2[1] = v15;
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    uint64_t v11 = a2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a2[2] = v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2208912D0(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result)
  {
    if (!a4)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v4 = *a4 + 7;
    if (__OFADD__(*a4, 7)) {
      goto LABEL_18;
    }
    BOOL v5 = a4 + 8;
    if (v4 < 0) {
      uint64_t v4 = *a4 + 14;
    }
    uint64_t v6 = v4 >> 3;
    uint64_t v8 = v6 - 1;
    BOOL v7 = v6 < 1;
    uint64_t v9 = v6 + 62;
    if (!v7) {
      uint64_t v9 = v8;
    }
    uint64_t v10 = a4[1];
    unint64_t v11 = (unint64_t)&v5[3 * v10] + (v9 & 0xFFFFFFFFFFFFFFC0);
    *(void *)(v11 + 64) = result;
    *(void *)(v11 + 72) = a2;
    *(void *)(v11 + 80) = a3;
    uint64_t v12 = v10 - (v11 & 0xFFFFFFFFFFFFFFF8);
    if (v12 >= 0) {
      char v13 = 1 << v12;
    }
    else {
      char v13 = 0;
    }
    *((unsigned char *)v5 + v10 / 8) |= v13;
LABEL_15:
    uint64_t v17 = a4[1];
    BOOL v15 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (!v15)
    {
      a4[1] = v18;
      return sub_220834DFC(result);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a4)
  {
    uint64_t v14 = a4[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a4[2] = v16;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_220891394(uint64_t result, void *a2)
{
  if (result)
  {
    if (!a2)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v2 = *a2 + 7;
    if (__OFADD__(*a2, 7)) {
      goto LABEL_18;
    }
    BOOL v3 = a2 + 8;
    if (v2 < 0) {
      uint64_t v2 = *a2 + 14;
    }
    uint64_t v4 = v2 >> 3;
    uint64_t v6 = v4 - 1;
    BOOL v5 = v4 < 1;
    uint64_t v7 = v4 + 62;
    if (!v5) {
      uint64_t v7 = v6;
    }
    uint64_t v8 = a2[1];
    *(void *)((char *)&v3[v8 + 8] + (v7 & 0xFFFFFFFFFFFFFFC0)) = result;
    uint64_t v9 = v8 - (v7 & 0xFFFFFFFFFFFFFFF8);
    if (v9 >= 0) {
      char v10 = 1 << v9;
    }
    else {
      char v10 = 0;
    }
    *((unsigned char *)v3 + v8 / 8) |= v10;
LABEL_15:
    uint64_t v14 = a2[1];
    BOOL v12 = __OFADD__(v14, 1);
    uint64_t v15 = v14 + 1;
    if (!v12)
    {
      a2[1] = v15;
      return swift_bridgeObjectRetain();
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    uint64_t v11 = a2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    a2[2] = v13;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_220891450(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_220891470(a1, a2, a3, &qword_267F188D8, (uint64_t (*)(void *, unsigned char *))sub_220835340);
}

uint64_t sub_220891470(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void *, unsigned char *))
{
  sub_220835280(a1, (uint64_t)v24, a4);
  if (v24[3])
  {
    uint64_t result = a5(v24, v25);
    if (!a2)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v9 = *a2 + 7;
    if (__OFADD__(*a2, 7)) {
      goto LABEL_20;
    }
    char v10 = a2 + 8;
    if (v9 < 0) {
      uint64_t v9 = *a2 + 14;
    }
    uint64_t v11 = v9 >> 3;
    uint64_t v13 = v11 - 1;
    BOOL v12 = v11 < 1;
    uint64_t v14 = v11 + 62;
    if (!v12) {
      uint64_t v14 = v13;
    }
    sub_220835350((uint64_t)v25, (uint64_t)&v10[4 * a2[1] + 8] + (v14 & 0xFFFFFFFFFFFFFFC0));
    uint64_t v15 = a2[1];
    uint64_t v16 = v15 + 7;
    if (v15 >= 0) {
      uint64_t v16 = a2[1];
    }
    uint64_t v17 = v15 - (v16 & 0xFFFFFFFFFFFFFFF8);
    if (v17 >= 0) {
      char v18 = 1 << v17;
    }
    else {
      char v18 = 0;
    }
    *((unsigned char *)v10 + (v16 >> 3)) |= v18;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
LABEL_17:
    uint64_t v22 = a2[1];
    BOOL v20 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (!v20)
    {
      a2[1] = v23;
      return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t result = sub_2208352E4((uint64_t)v24, a4);
  if (a2)
  {
    uint64_t v19 = a2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    a2[2] = v21;
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2208915A0@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
  if (v3 >= 0) {
    int v4 = 1 << v3;
  }
  else {
    LOBYTE(v4) = 0;
  }
  if ((*((unsigned char *)a2 + result / 8 + 64) & v4) == 0) {
    return 0;
  }
  uint64_t v5 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v5 < 0) {
    uint64_t v5 = *a2 + 14;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  return *(void *)((char *)&a2[result + 16] + (v9 & 0xFFFFFFFFFFFFFFC0));
}

uint64_t sub_220891634@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0) {
      int v4 = 1 << v3;
    }
    else {
      LOBYTE(v4) = 0;
    }
    if ((v4 & *((unsigned char *)a2 + result / 8 + 64)) == 0) {
      return 0;
    }
    if (!__OFADD__(*a2, 7)) {
      return swift_bridgeObjectRetain();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2208916D4@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0) {
      int v4 = 1 << v3;
    }
    else {
      LOBYTE(v4) = 0;
    }
    if ((v4 & *((unsigned char *)a2 + result / 8 + 64)) == 0) {
      return 0;
    }
    uint64_t v5 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v5 < 0) {
        uint64_t v5 = *a2 + 14;
      }
      uint64_t v6 = v5 >> 3;
      uint64_t v8 = v6 - 1;
      BOOL v7 = v6 < 1;
      uint64_t v9 = v6 + 62;
      if (!v7) {
        uint64_t v9 = v8;
      }
      uint64_t v10 = *(void *)((char *)&a2[2 * result + 16] + (v9 & 0xFFFFFFFFFFFFFFC0));
      swift_bridgeObjectRetain();
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_220891788@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
  if (v3 >= 0) {
    int v4 = 1 << v3;
  }
  else {
    LOBYTE(v4) = 0;
  }
  if ((v4 & *((unsigned char *)a2 + result / 8 + 64)) == 0) {
    return 2;
  }
  uint64_t v5 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v5 < 0) {
    uint64_t v5 = *a2 + 14;
  }
  uint64_t v6 = v5 >> 3;
  uint64_t v8 = v6 - 1;
  BOOL v7 = v6 < 1;
  uint64_t v9 = v6 + 62;
  if (!v7) {
    uint64_t v9 = v8;
  }
  return *((unsigned __int8 *)a2 + result + (v9 & 0xFFFFFFFFFFFFFFC0) + 128);
}

uint64_t sub_220891810@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2) {
    goto LABEL_17;
  }
  uint64_t v3 = result;
  uint64_t v5 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
  if (v5 >= 0) {
    int v6 = 1 << v5;
  }
  else {
    LOBYTE(v6) = 0;
  }
  if ((v6 & *((unsigned char *)a2 + result / 8 + 64)) != 0)
  {
    uint64_t v7 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v7 < 0) {
        uint64_t v7 = *a2 + 14;
      }
      uint64_t v8 = v7 >> 3;
      uint64_t v10 = v8 - 1;
      BOOL v9 = v8 < 1;
      uint64_t v11 = v8 + 62;
      if (!v9) {
        uint64_t v11 = v10;
      }
      unint64_t v12 = (unint64_t)a2 + (v11 & 0xFFFFFFFFFFFFFFC0) + 64;
      uint64_t v13 = sub_22093E100();
      uint64_t v19 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(a3, v12 + *(void *)(v19 + 72) * v3 + 64, v13);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
      uint64_t v15 = a3;
      uint64_t v16 = 0;
      uint64_t v17 = v13;
      goto LABEL_13;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v18 = sub_22093E100();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v17 = v18;
  uint64_t v15 = a3;
  uint64_t v16 = 1;
LABEL_13:

  return v14(v15, v16, 1, v17);
}

uint64_t sub_2208919A4@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v4 = result - (v3 & 0xFFFFFFFFFFFFFFF8);
  if (v4 >= 0) {
    int v5 = 1 << v4;
  }
  else {
    LOBYTE(v5) = 0;
  }
  if ((v5 & *((unsigned char *)a2 + result / 8 + 64)) == 0)
  {
    *(_OWORD *)a3 = xmmword_220944E00;
    return result;
  }
  uint64_t v6 = *a2 + 7;
  if (__OFADD__(*a2, 7))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (v6 < 0) {
    uint64_t v6 = *a2 + 14;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v9 = v7 - 1;
  BOOL v8 = v7 < 1;
  uint64_t v10 = v7 + 62;
  if (!v8) {
    uint64_t v10 = v9;
  }
  unint64_t v11 = (unint64_t)&a2[2 * result + 8] + (v10 & 0xFFFFFFFFFFFFFFC0);
  uint64_t v12 = *(void *)(v11 + 64);
  unint64_t v13 = *(void *)(v11 + 72);
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v13;
  return sub_22080B7F4(v12, v13);
}

int64_t sub_220891A38@<X0>(int64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0) {
      int v4 = 1 << v3;
    }
    else {
      LOBYTE(v4) = 0;
    }
    char v5 = *((unsigned char *)a2 + result / 8 + 64) & v4;
    if (!v5)
    {
      uint64_t v11 = 0;
      return v11 | ((unint64_t)(v5 == 0) << 32);
    }
    uint64_t v6 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v6 < 0) {
        uint64_t v6 = *a2 + 14;
      }
      uint64_t v7 = v6 >> 3;
      uint64_t v9 = v7 - 1;
      BOOL v8 = v7 < 1;
      uint64_t v10 = v7 + 62;
      if (!v8) {
        uint64_t v10 = v9;
      }
      uint64_t v11 = *(unsigned int *)((char *)a2 + 4 * result + (v10 & 0xFFFFFFFFFFFFFFC0) + 128);
      return v11 | ((unint64_t)(v5 == 0) << 32);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_220891AE0@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v3 = result - (a3 & 0xFFFFFFFFFFFFFFF8);
    if (v3 >= 0) {
      int v4 = 1 << v3;
    }
    else {
      LOBYTE(v4) = 0;
    }
    char v5 = *((unsigned char *)a2 + result / 8 + 64) & v4;
    if (!v5)
    {
      int v11 = 0;
      return v11 | ((v5 == 0) << 16);
    }
    uint64_t v6 = *a2 + 7;
    if (!__OFADD__(*a2, 7))
    {
      if (v6 < 0) {
        uint64_t v6 = *a2 + 14;
      }
      uint64_t v7 = v6 >> 3;
      uint64_t v9 = v7 - 1;
      BOOL v8 = v7 < 1;
      uint64_t v10 = v7 + 62;
      if (!v8) {
        uint64_t v10 = v9;
      }
      int v11 = *(unsigned __int16 *)((char *)a2 + 2 * result + (v10 & 0xFFFFFFFFFFFFFFC0) + 128);
      return v11 | ((v5 == 0) << 16);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_220891B80@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a5;
  a6[1] = result;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  return result;
}

uint64_t sub_220891B90@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v29 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)&long long v28 = swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_22093ED30();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v30 = (char *)&v26 - v8;
  uint64_t v9 = sub_22093ED30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(_OWORD *))v3[3])(v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    long long v29 = a3;
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v6);
    uint64_t v31 = *v3;
    MEMORY[0x270FA5388](v18);
    *(&v26 - 6) = v6;
    *(_OWORD *)(&v26 - 5) = *(_OWORD *)(a2 + 24);
    *(&v26 - 3) = *(void *)(a2 + 40);
    *(&v26 - 2) = (uint64_t)v16;
    uint64_t v19 = v28;
    sub_22093E900();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    BOOL v20 = v30;
    sub_22093E7D0();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(uint64_t (**)(void))(v14 + 8);
    ((void (*)(char *, uint64_t))v21)(v16, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v20, 1, v19) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v30, v27);
      uint64_t v22 = 0;
      long long v23 = 0uLL;
    }
    else
    {
      uint64_t v24 = &v30[*(int *)(v19 + 48)];
      long long v28 = *(_OWORD *)v24;
      uint64_t v22 = *((void *)v24 + 2);
      uint64_t result = v21();
      long long v23 = v28;
    }
    int v25 = v29;
    *long long v29 = v23;
    *((void *)v25 + 2) = v22;
  }
  return result;
}

uint64_t sub_220891F58(unint64_t a1, void *a2)
{
  sub_2208920BC(a2, &v5);
  uint64_t v3 = sub_2208B0224(a1, v5, *((uint64_t *)&v5 + 1), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_220891FE4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_220892020(void *a1)
{
  uint64_t v2 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v2 - 8);
  int v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormattingOptions.init()((uint64_t)v4);
  uint64_t v5 = sub_220891F58((unint64_t)v4, a1);
  sub_2208946CC((uint64_t)v4);
  return v5;
}

unint64_t sub_2208920BC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v80 = a2;
  uint64_t v89 = *(void *)(a1[2] - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v94 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v78 = *(void *)(v8 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v91 = (char *)&v77 - v10;
  uint64_t v81 = a1[3];
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v93 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22093ED30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v77 - v14;
  unint64_t v88 = *v2;
  unint64_t v99 = v88;
  sub_22093E900();
  swift_getWitnessTable();
  sub_22093EB30();
  uint64_t v86 = v8;
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, TupleTypeMetadata2);
  uint64_t v87 = TupleTypeMetadata2;
  if (v16 == 1)
  {
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v18 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
    if (!*(void *)(*(void *)v18 + 16)) {
      goto LABEL_7;
    }
    sub_22080B5B8(*(void *)v18 + 32, (uint64_t)&v99);
    uint64_t v20 = v102;
    uint64_t v19 = v103;
    __swift_project_boxed_opaque_existential_1(&v99, v102);
    uint64_t v21 = (*((uint64_t (**)(uint64_t))v19[1] + 6))(v20);
    unint64_t result = sub_22080B0D8((uint64_t)&v99);
    if (v21 < 0) {
      goto LABEL_81;
    }
    if (v21)
    {
      char v23 = 0;
    }
    else
    {
LABEL_7:
      uint64_t v21 = 0;
      char v23 = 2;
    }
    uint64_t v17 = sub_2208EE804(0, v21, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v21, v23);
    uint64_t v13 = v89;
    uint64_t v12 = v90;
    TupleTypeMetadata2 = v87;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t result = MEMORY[0x223C69FE0](v88, TupleTypeMetadata2);
  unint64_t v24 = result * v17;
  if ((unsigned __int128)((uint64_t)result * (__int128)v17) >> 64 != (uint64_t)(result * v17) >> 63) {
    goto LABEL_80;
  }
  uint64_t v25 = MEMORY[0x263F8EE78];
  unint64_t v26 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  *(void *)&long long v141 = v25;
  *((void *)&v141 + 1) = v25;
  unint64_t v142 = v26;
  ((void (*)(void))v3[1])();
  uint64_t v27 = a1[5];
  uint64_t v28 = v81;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 24))(v24, v81, v27);
  uint64_t v138 = 0x6E6D756C6F63;
  unint64_t v139 = 0xE600000000000000;
  uint64_t v140 = sub_2208322FC(v25);
  sub_2208F18BC(v17);
  uint64_t v135 = 1851876717;
  unint64_t v136 = 0xE400000000000000;
  uint64_t v29 = v87;
  sub_220832520(v25);
  uint64_t v137 = v30;
  sub_2208F1888(v17);
  uint64_t v132 = 6583411;
  unint64_t v133 = 0xE300000000000000;
  sub_220832520(v25);
  uint64_t v134 = v31;
  sub_2208F1888(v17);
  uint64_t v129 = 7235949;
  unint64_t v130 = 0xE300000000000000;
  sub_220832520(v25);
  uint64_t v131 = v32;
  sub_2208F1888(v17);
  uint64_t v126 = 7889261;
  unint64_t v127 = 0xE300000000000000;
  sub_220832520(v25);
  uint64_t v128 = v33;
  sub_2208F1888(v17);
  uint64_t v123 = 0x6E616964656DLL;
  unint64_t v124 = 0xE600000000000000;
  sub_220832520(v25);
  uint64_t v125 = v34;
  sub_2208F1888(v17);
  uint64_t v120 = 12625;
  unint64_t v121 = 0xE200000000000000;
  sub_220832520(v25);
  uint64_t v122 = v35;
  sub_2208F1888(v17);
  uint64_t v117 = 13137;
  unint64_t v118 = 0xE200000000000000;
  sub_220832520(v25);
  uint64_t v119 = v36;
  sub_2208F1888(v17);
  uint64_t v114 = 1701080941;
  unint64_t v115 = 0xE400000000000000;
  uint64_t v116 = sub_2208327C8(v25);
  sub_2208F1840(v17);
  uint64_t v111 = 0x6F43657571696E75;
  unint64_t v112 = 0xEB00000000746E75;
  sub_220831BD0(v25);
  uint64_t v113 = v37;
  sub_2208F180C(v17);
  uint64_t v108 = 0x6E756F43656E6F6ELL;
  unint64_t v109 = 0xE900000000000074;
  sub_220831BD0(v25);
  uint64_t v110 = v38;
  sub_2208F180C(v17);
  uint64_t v105 = 0x6E756F43656D6F73;
  unint64_t v106 = 0xE900000000000074;
  unint64_t v39 = v88;
  sub_220831BD0(v25);
  uint64_t v107 = v40;
  sub_2208F180C(v17);
  uint64_t v41 = swift_bridgeObjectRetain();
  if (!MEMORY[0x223C6A010](v41, v29)) {
    goto LABEL_55;
  }
  uint64_t v42 = 0;
  uint64_t v84 = &v91[*(int *)(v29 + 48)];
  unint64_t v85 = (void (**)(char *, unint64_t *, uint64_t))(v86 + 16);
  uint64_t v92 = v27 + 32;
  uint64_t v82 = (void (**)(char *, uint64_t))(v89 + 8);
  uint64_t v83 = (void (**)(char *, char *, uint64_t))(v89 + 32);
LABEL_12:
  char v43 = sub_22093E8B0();
  sub_22093E860();
  if (v43)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v91, v39+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v42, v29);
    BOOL v44 = __OFADD__(v42, 1);
    uint64_t v45 = v42 + 1;
    if (v44) {
      goto LABEL_54;
    }
  }
  else
  {
    unint64_t result = sub_22093EEF0();
    if (v78 != 8) {
      goto LABEL_82;
    }
    unint64_t v99 = result;
    (*v85)(v91, &v99, v29);
    swift_unknownObjectRelease();
    BOOL v44 = __OFADD__(v42, 1);
    uint64_t v45 = v42 + 1;
    if (v44)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
  }
  uint64_t v89 = v45;
  unint64_t v46 = *(void *)v84;
  unint64_t v47 = *((void *)v84 + 1);
  uint64_t v48 = *((void *)v84 + 2);
  (*v83)(v94, v91, v90);
  if (!*(void *)(v46 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    goto LABEL_18;
  }
  sub_22080B5B8(v46 + 32, (uint64_t)&v99);
  uint64_t v49 = v102;
  uint64_t v50 = v103;
  __swift_project_boxed_opaque_existential_1(&v99, v102);
  uint64_t v51 = v50[1];
  uint64_t v52 = (uint64_t (*)(uint64_t, void *))v51[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v53 = v52(v49, v51);
  uint64_t v28 = v81;
  uint64_t v54 = v53;
  unint64_t result = sub_22080B0D8((uint64_t)&v99);
  if ((v54 & 0x8000000000000000) == 0)
  {
LABEL_18:
    Swift::Int v55 = 0;
    while (1)
    {
      if (v54)
      {
        if (v55 == v54)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v56 = v54;
          char v57 = 0;
          goto LABEL_25;
        }
      }
      else if (!v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = 0;
        char v57 = 2;
LABEL_25:
        sub_22080B6B4(0, v56, v57);
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(0x6E6D756C6F63, 0xE600000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_57;
        }
        unint64_t v58 = v46 + 32;
        sub_22080B5B8(v46 + 32 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893D48(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(1851876717, 0xE400000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_58;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_59;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(6583411, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_61;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(7235949, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_63;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(7889261, 0xE300000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_64;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_65;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(0x6E616964656DLL, 0xE600000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_66;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_67;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(12625, 0xE200000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_68;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_69;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(13137, 0xE200000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_70;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_71;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_220893F84(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(1701080941, 0xE400000000000000);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_72;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_73;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F68);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2208941C0(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(0x6F43657571696E75, 0xEB00000000746E75);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_74;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_75;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2208943FC(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t result = sub_22080BA90(0x6E756F43656E6F6ELL, 0xE900000000000074);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_76;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_77;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2208943FC(v96, v97, v98);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v99 = v46;
        unint64_t v100 = v47;
        uint64_t v101 = v48;
        unint64_t result = sub_22080BA90(0x6E756F43656D6F73, 0xE900000000000074);
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_78;
        }
        if (result >= *(void *)(v46 + 16)) {
          goto LABEL_79;
        }
        sub_22080B5B8(v58 + 40 * result, (uint64_t)v95);
        sub_2208343B8(v95, (uint64_t)&v99);
        swift_dynamicCast();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2208943FC(v96, v97, v98);
        (*v82)(v94, v90);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v29 = v87;
        unint64_t v39 = v88;
        uint64_t v59 = MEMORY[0x223C6A010](v88, v87);
        uint64_t v42 = v89;
        if (v89 == v59)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          (*(void (**)(long long *, void, uint64_t, uint64_t))(v27 + 40))(&v141, 0, v28, v27);
          uint64_t v60 = v138;
          unint64_t v61 = v139;
          uint64_t v62 = v140;
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v60;
          unint64_t v100 = v61;
          uint64_t v101 = v62;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v63 = v135;
          unint64_t v64 = v136;
          uint64_t v65 = v137;
          uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v63;
          unint64_t v100 = v64;
          uint64_t v101 = v65;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v132;
          unint64_t v100 = v133;
          uint64_t v101 = v134;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v129;
          unint64_t v100 = v130;
          uint64_t v101 = v131;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v126;
          unint64_t v100 = v127;
          uint64_t v101 = v128;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v123;
          unint64_t v100 = v124;
          uint64_t v101 = v125;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v120;
          unint64_t v100 = v121;
          uint64_t v101 = v122;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v67 = v119;
          uint64_t v102 = v66;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v117;
          unint64_t v100 = v118;
          uint64_t v101 = v119;
          uint64_t v94 = (char *)v118;
          swift_bridgeObjectRetain_n();
          uint64_t v92 = v67;
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v68 = v114;
          uint64_t v69 = (char *)v115;
          uint64_t v70 = v116;
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F68);
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v68;
          unint64_t v100 = (unint64_t)v69;
          uint64_t v101 = v70;
          uint64_t v91 = v69;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v71 = v111;
          unint64_t v72 = v112;
          uint64_t v73 = v113;
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
          uint64_t v102 = v74;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v71;
          unint64_t v100 = v72;
          uint64_t v101 = v73;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v74;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v108;
          unint64_t v100 = v109;
          uint64_t v101 = v110;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v102 = v74;
          uint64_t v103 = &off_26D2223C0;
          unint64_t v99 = v105;
          unint64_t v100 = v106;
          uint64_t v101 = v107;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          DataFrame.append(column:)((uint64_t)&v99);
          sub_22080B0D8((uint64_t)&v99);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v93, v81);
          unint64_t v75 = v142;
          long long v76 = v80;
          *uint64_t v80 = v141;
          *((void *)v76 + 2) = v75;
          return result;
        }
        goto LABEL_12;
      }
      unint64_t v99 = v46;
      unint64_t v100 = v47;
      uint64_t v101 = v48;
      uint64_t v102 = 0;
      uint64_t v103 = (_UNKNOWN **)v54;
      char v104 = 2 * (v54 == 0);
      Swift::Int v55 = DataFrame.Rows.index(after:)(v55);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v94, v28, v27);
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_2208937D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 40);
  sub_220831F30(v3, v5, v6);
  unint64_t v7 = sub_2208BE604(a1, v3, v5, v6);
  char v9 = v8;
  sub_22080B6B4(v3, v5, v6);
  if (v9) {
    goto LABEL_26;
  }
  uint64_t result = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v6)
  {
    if (!v7)
    {
      if (result < v3 || result >= v5)
      {
LABEL_17:
        swift_beginAccess();
        uint64_t v16 = *(void *)(v4 + 16);
        if (v16)
        {
          uint64_t v15 = v16 + 8;
          return *(void *)v15;
        }
        goto LABEL_25;
      }
      return result;
    }
    goto LABEL_22;
  }
  if (v6 != 1)
  {
LABEL_26:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  if (v7 >= *(void *)(v3 + 16))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v11 = v3 + 16 * v7;
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v12 = *(void *)(v11 + 40);
  if (result < v13 || result >= v12)
  {
    if (v7 + 1 < *(void *)(v3 + 16))
    {
      uint64_t v15 = v3 + 16 * (v7 + 1) + 32;
      return *(void *)v15;
    }
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_2208939A4(uint64_t a1, char a2)
{
  return sub_220893B64(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F714);
}

uint64_t sub_2208939BC(uint64_t a1, char a2)
{
  return sub_220893C64(a1, a2, &qword_267F18FF0);
}

uint64_t sub_2208939C8(uint64_t a1, char a2)
{
  return sub_2208939F4(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_220890508);
}

uint64_t sub_2208939F4(uint64_t a1, char a2, void (*a3)(void *__return_ptr, void, void, uint64_t), void (*a4)(void, void))
{
  if ((a2 & 1) == 0)
  {
    uint64_t v10 = a1;
    goto LABEL_9;
  }
  uint64_t result = swift_beginAccess();
  char v9 = *(uint64_t **)(v4 + 16);
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v10 = *v9;
  if (*v9 >= a1)
  {
LABEL_9:
    swift_beginAccess();
    a3(v13, *(void *)(v4 + 16), *(void *)(v4 + 24), v10);
    a4(*(void *)(v4 + 16), *(void *)(v4 + 24));
    uint64_t v11 = v13[0];
    uint64_t v12 = v13[1];
    uint64_t result = swift_beginAccess();
    *(void *)(v4 + 16) = v11;
    *(void *)(v4 + 24) = v12;
    return result;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    if (2 * v10 <= a1) {
      uint64_t v10 = a1;
    }
    else {
      v10 *= 2;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_220893ADC(uint64_t a1, char a2)
{
  return sub_2208939F4(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FAF0, (void (*)(void, void))sub_2208906DC);
}

uint64_t sub_220893B08(uint64_t a1, char a2)
{
  return sub_2208939F4(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088F904, (void (*)(void, void))sub_2208907D8);
}

uint64_t sub_220893B34(uint64_t a1, char a2)
{
  return sub_220893B64(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FD6C);
}

uint64_t sub_220893B4C(uint64_t a1, char a2)
{
  return sub_220893B64(a1, a2, (void (*)(void *__return_ptr, void, void, uint64_t))sub_22088FF34);
}

uint64_t sub_220893B64(uint64_t a1, char a2, void (*a3)(void *__return_ptr, void, void, uint64_t))
{
  if ((a2 & 1) == 0)
  {
    uint64_t v8 = a1;
    goto LABEL_9;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(uint64_t **)(v3 + 16);
  if (v7)
  {
    uint64_t v8 = *v7;
    if (*v7 < a1)
    {
      if (v8 + 0x4000000000000000 < 0) {
        goto LABEL_13;
      }
      if (2 * v8 <= a1) {
        uint64_t v8 = a1;
      }
      else {
        v8 *= 2;
      }
    }
LABEL_9:
    swift_beginAccess();
    a3(v11, *(void *)(v3 + 16), *(void *)(v3 + 24), v8);
    uint64_t result = *(void *)(v3 + 16);
    if (!result)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if ((*(void *)(result + 8) & 0x8000000000000000) == 0)
    {
      MEMORY[0x223C6B140]();
      uint64_t v9 = v11[0];
      uint64_t v10 = v11[1];
      uint64_t result = swift_beginAccess();
      *(void *)(v3 + 16) = v9;
      *(void *)(v3 + 24) = v10;
      return result;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_220893C58(uint64_t a1, char a2)
{
  return sub_220893C64(a1, a2, &qword_267F18B58);
}

uint64_t sub_220893C64(uint64_t a1, char a2, uint64_t *a3)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v8 = a1;
    goto LABEL_9;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(uint64_t **)(v3 + 16);
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = *v7;
  if (*v7 >= a1)
  {
LABEL_9:
    swift_beginAccess();
    sub_22088F714(*(void *)(v3 + 16), v8, v11);
    sub_2208909EC(*(void **)(v3 + 16), *(void *)(v3 + 24), a3);
    uint64_t v9 = v11[0];
    uint64_t v10 = v11[1];
    uint64_t result = swift_beginAccess();
    *(void *)(v3 + 16) = v9;
    *(void *)(v3 + 24) = v10;
    return result;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    if (2 * v8 <= a1) {
      uint64_t v8 = a1;
    }
    else {
      v8 *= 2;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_220893D3C(uint64_t a1, char a2)
{
  return sub_220893C64(a1, a2, &qword_267F18B38);
}

uint64_t sub_220893D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
  v10[4] = &off_26D222418;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_22083B5D0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22088C704(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AE8);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(void *)&v12[16] = *(void *)&v8[16];
    sub_22088CB00((unint64_t *)&v11);
    sub_22087C2F8((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AF0);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_22088CF40((uint64_t)&v11);
    sub_220843060((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_22083B5D0((uint64_t)v10, (uint64_t)&v11);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220893F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
  v10[4] = &off_26D222418;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_22083B5D0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22088B6E0(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC8);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(void *)&v12[16] = *(void *)&v8[16];
    sub_22088BACC((unint64_t *)&v11);
    sub_22087C2F8((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD0);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_22088BF04((uint64_t)&v11);
    sub_220843060((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_22083B5D0((uint64_t)v10, (uint64_t)&v11);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208941C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18F68);
  v10[4] = &off_26D222418;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_22083B5D0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_22088A714(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F190A0);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(void *)&v12[16] = *(void *)&v8[16];
    sub_22088AAE4((unint64_t *)&v11);
    sub_22087C2F8((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F190A8);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_22088AEFC((uint64_t)&v11);
    sub_220843060((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_22083B5D0((uint64_t)v10, (uint64_t)&v11);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208943FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
  v10[4] = &off_26D222418;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  sub_22083B5D0((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41130);
  if (swift_dynamicCast())
  {
    sub_2208896E4(v11, *((uint64_t *)&v11 + 1), *(uint64_t *)v12);
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A98);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(void *)&v12[16] = *(void *)&v8[16];
    sub_220889AD4((unint64_t *)&v11);
    sub_22087C2F8((uint64_t)&v11);
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA0);
  if (swift_dynamicCast())
  {
    long long v11 = v7;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v8;
    *(_OWORD *)&v12[9] = *(_OWORD *)&v8[9];
    sub_220889F10((uint64_t)&v11);
    sub_220843060((uint64_t)&v11);
    goto LABEL_7;
  }
  sub_22083B5D0((uint64_t)v10, (uint64_t)&v11);
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v11, *(uint64_t *)&v12[8]);
  swift_getDynamicType();
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220894638(uint64_t a1)
{
  return a1;
}

BOOL sub_22089466C(uint64_t a1)
{
  return sub_220900C44(a1, *(void **)(v1 + 16));
}

uint64_t sub_22089468C()
{
  return sub_22093E520() & 1;
}

uint64_t sub_2208946CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormattingOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_220894728(uint64_t a1)
{
  return sub_22089466C(a1);
}

uint64_t sub_220894744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v24[0] = a4;
  v24[1] = a5;
  v24[2] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_22080BA90(a1, a2);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= *(void *)(a4 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v15 = a3 & 1;
  sub_22080B5B8(a4 + 40 * v14 + 32, (uint64_t)v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t))(*(void *)(v16 + 8) + 80))(v17);
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_26AD413F0;
    uint64_t v19 = (char *)sub_22089EB9C;
LABEL_13:
    sub_220894EE4(a1, a2, v15, a4, a5, a6, v18, v19, a7);
    return sub_22080B0D8((uint64_t)v24);
  }
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_267F19178;
    uint64_t v19 = (char *)sub_22089FDFC;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_267F185D0;
    uint64_t v19 = (char *)sub_2208A1058;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_26AD413E8;
    uint64_t v19 = (char *)sub_2208A22B4;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_26AD413E0;
    uint64_t v19 = (char *)sub_2208A30C8;
    goto LABEL_13;
  }
  if (swift_dynamicCastMetatype())
  {
    swift_bridgeObjectRetain();
    if (v15) {
      uint64_t v21 = sub_2208A5644;
    }
    else {
      uint64_t v21 = sub_2208A4410;
    }
    sub_22089604C(a1, a2, a4, a5, a6, &qword_26AD41140, (uint64_t)v21, (void (*)(long long *, char *, void, void, uint64_t))sub_2208A61A0, a7);
    swift_bridgeObjectRelease();
    return sub_22080B0D8((uint64_t)v24);
  }
  sub_22093E100();
  if (swift_dynamicCastMetatype())
  {
    uint64_t v18 = &qword_26AD41138;
    uint64_t v19 = (char *)sub_2208A6888;
    goto LABEL_13;
  }
LABEL_24:
  sub_22093EEA0();
  sub_22093E6C0();
  uint64_t v22 = v25;
  uint64_t v23 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t))(*(void *)(v23 + 8) + 80))(v22);
  sub_22093F530();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

TabularData::DataFrame __swiftcall DataFrameProtocol.sorted(on:order:)(Swift::String on, TabularData::Order order)
{
  uint64_t v5 = v3;
  uint64_t v6 = v2;
  object = on._object;
  countAndFlagsBits = (char *)on._countAndFlagsBits;
  uint64_t v23 = v4;
  unsigned __int8 v9 = *(unsigned char *)order;
  (*(void (**)(char **__return_ptr))(v3 + 24))(&v25);
  uint64_t v10 = v25;
  v28[0] = v25;
  v28[1] = v26;
  v28[2] = v27;
  unint64_t v11 = sub_22080BA90((uint64_t)countAndFlagsBits, (uint64_t)object);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= *((void *)v10 + 2))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_22080B5B8((uint64_t)&v10[40 * v11 + 32], (uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v29;
  uint64_t v12 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 80))(v13);
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      unsigned __int8 v24 = v9;
      unint64_t v14 = MEMORY[0x263F8EA08];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      unsigned __int8 v24 = v9;
      unint64_t v14 = MEMORY[0x263F8D5F0];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      unsigned __int8 v24 = v9;
      unint64_t v14 = MEMORY[0x263F8D560];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      unsigned __int8 v24 = v9;
      unint64_t v14 = MEMORY[0x263F8D330];
      goto LABEL_13;
    }
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      swift_bridgeObjectRetain();
      if (v9) {
        uint64_t v20 = sub_2208972BC;
      }
      else {
        uint64_t v20 = sub_220896038;
      }
      DataFrameProtocol.sorted<A>(on:by:)(&v25, (uint64_t)v20, 0, v6, MEMORY[0x263F8D4F8], v5, v23);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_22093E100();
    if (swift_dynamicCastMetatype())
    {
      uint64_t v25 = countAndFlagsBits;
      unint64_t v26 = (unint64_t)object;
      unsigned __int8 v24 = v9;
      unint64_t v14 = sub_220895FE0();
      int v15 = v23;
      uint64_t v16 = v6;
      goto LABEL_14;
    }
LABEL_25:
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v21 = v29;
    uint64_t v22 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    (*(void (**)(uint64_t))(*(void *)(v22 + 8) + 80))(v21);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v17 = (void *)sub_22093F090();
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v25 = countAndFlagsBits;
  unint64_t v26 = (unint64_t)object;
  unsigned __int8 v24 = v9;
  unint64_t v14 = MEMORY[0x263F8D6E0];
LABEL_13:
  int v15 = v23;
  uint64_t v16 = v6;
LABEL_14:
  DataFrameProtocol.sorted<A>(on:order:)((uint64_t *)&v25, &v24, v16, v5, v14, v15);
LABEL_15:
  uint64_t v17 = (void *)sub_22080B0D8((uint64_t)v28);
LABEL_26:
  result.columnIndicesByName._rawValue = v19;
  result.aliases._rawValue = v18;
  result.columns._rawValue = v17;
  return result;
}

uint64_t sub_220894EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v85 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v68 = a6;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_22080BA90(a1, a2);
  if ((v19 & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
  unint64_t v9 = *(void *)(a4 + 16);
  if (v19 >= v9)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v69 = a8;
  uint64_t v65 = a9;
  sub_22080B5B8(a4 + 32 + 40 * v19, (uint64_t)&v80);
  sub_2208343B8(&v80, (uint64_t)&v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  __swift_instantiateConcreteTypeFromMangledName(a7);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a4 + 32, (uint64_t)&v83);
  a8 = v86;
  uint64_t v20 = v87;
  __swift_project_boxed_opaque_existential_1(&v83, (uint64_t)v86);
  uint64_t v21 = *(void *)(v20 + 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v22(a8, v21);
  sub_22080B0D8((uint64_t)&v83);
  if (v23 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  char v24 = a3 & 1;
  if (v23)
  {
    uint64_t v25 = 0;
    char v26 = 0;
  }
  else
  {
    char v26 = 2;
    sub_220883950(0, 0, 2);
    if (v28) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = v27;
    }
  }
  sub_220883950(0, v23, v26);
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  if (v30) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v29;
  }
  uint64_t v85 = v68;
  uint64_t v86 = 0;
  uint64_t v87 = v23;
  char v88 = v26;
  uint64_t v89 = v25;
  uint64_t v90 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(0, v23, v26);
  Swift::Int v32 = sub_220837AB0((uint64_t)&v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v23, v26);
  *(void *)&long long v80 = v32;
  sub_2208A7BE8((char **)&v80, v76[0], v76[1], v76[2], v24, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v23, v26);
  uint64_t v66 = v80;
  uint64_t v79 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_220826CD8(0, v9, 0);
  uint64_t v33 = v79;
  uint64_t v34 = a4 + 32;
  unint64_t v35 = v9;
  do
  {
    sub_22080B5B8(v34, (uint64_t)v76);
    uint64_t v36 = v77;
    uint64_t v37 = v78;
    __swift_project_boxed_opaque_existential_1(v76, v77);
    (*(void (**)(char **__return_ptr, uint64_t))(*(void *)(v37 + 8) + 88))(&v72, v36);
    uint64_t v38 = v74;
    uint64_t v39 = v75;
    __swift_project_boxed_opaque_existential_1(&v72, v74);
    uint64_t v41 = v77;
    uint64_t v40 = v78;
    __swift_project_boxed_opaque_existential_1(v76, v77);
    uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 8) + 48))(v41);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v80, v42, v38, v39);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
    sub_22080B0D8((uint64_t)v76);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_220826CD8(0, *(void *)(v33 + 16) + 1, 1);
      uint64_t v33 = v79;
    }
    unint64_t v44 = *(void *)(v33 + 16);
    unint64_t v43 = *(void *)(v33 + 24);
    if (v44 >= v43 >> 1)
    {
      sub_220826CD8((char *)(v43 > 1), v44 + 1, 1);
      uint64_t v33 = v79;
    }
    *(void *)(v33 + 16) = v44 + 1;
    uint64_t v45 = v33 + 40 * v44;
    long long v46 = v80;
    long long v47 = v81;
    *(void *)(v45 + 64) = v82;
    *(_OWORD *)(v45 + 32) = v46;
    *(_OWORD *)(v45 + 48) = v47;
    v34 += 40;
    --v35;
  }
  while (v35);
  swift_bridgeObjectRelease();
  sub_22080D5BC(v33, &v72);
  uint64_t v67 = *(void *)(v66 + 16);
  if (!v67)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    a8 = v72;
LABEL_30:
    *(void *)uint64_t v65 = a8;
    *(_OWORD *)(v65 + 8) = v73;
    return result;
  }
  uint64_t v48 = 0;
  while (2)
  {
    uint64_t v70 = v48;
    uint64_t v49 = *(void *)(v66 + 32 + 8 * v48);
    sub_22080B5B8(a4 + 32, (uint64_t)&v80);
    uint64_t v50 = *((void *)&v81 + 1);
    uint64_t v51 = v82;
    __swift_project_boxed_opaque_existential_1(&v80, *((uint64_t *)&v81 + 1));
    a8 = *(char **)(v51 + 8);
    uint64_t v52 = (uint64_t (*)(uint64_t, char *))*((void *)a8 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v53 = v52(v50, a8);
    sub_22080B0D8((uint64_t)&v80);
    if (v53 < 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    sub_22080B6B4(0, v53, 2 * (v53 == 0));
    a8 = v72;
    if (v9 == *((void *)v72 + 2))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a8 = sub_22080AB34((uint64_t)a8);
      }
      uint64_t v54 = 0;
      unint64_t v55 = 0;
      uint64_t v71 = v70 + 1;
      do
      {
        sub_22080B5B8(a4 + v54 + 32, (uint64_t)&v80);
        unint64_t v72 = a8;
        if (v55 >= *((void *)a8 + 2))
        {
          __break(1u);
          goto LABEL_32;
        }
        ++v55;
        uint64_t v56 = &a8[v54];
        uint64_t v57 = (uint64_t)&a8[v54 + 32];
        uint64_t v58 = *((void *)&v81 + 1);
        uint64_t v59 = v82;
        uint64_t v60 = __swift_project_boxed_opaque_existential_1(&v80, *((uint64_t *)&v81 + 1));
        uint64_t v77 = v58;
        uint64_t v78 = *(void *)(v59 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(boxed_opaque_existential_1, v60, v58);
        uint64_t v63 = *((void *)v56 + 7);
        uint64_t v62 = *((void *)v56 + 8);
        __swift_mutable_project_boxed_opaque_existential_1(v57, v63);
        (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v62 + 56))(v49, v76, v63, v62);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
        sub_22080B0D8((uint64_t)&v80);
        a8 = v72;
        v54 += 40;
      }
      while (v9 != v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v71;
      if (v71 != v67) {
        continue;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      goto LABEL_30;
    }
    break;
  }
LABEL_36:
  *(void *)&long long v80 = 0;
  *((void *)&v80 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  sub_22093E6C0();
  v76[0] = v9;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  v76[0] = *((void *)a8 + 2);
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093F090();
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t DataFrameProtocol.sorted<A>(on:order:)@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, char **a6@<X8>)
{
  void (*v11)(long long *__return_ptr, uint64_t, uint64_t);
  long long v12;
  long long v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  char *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  long long v41;
  long long v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char **v46;
  long long v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  char **v61;
  char **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char ***v68;
  char *v69;
  void (*v70)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;
  long long v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  long long v85;
  long long v86;
  long long v87;
  uint64_t v88;
  char v89;
  long long v90;
  long long v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;

  long long v73 = a5;
  uint64_t v62 = a6;
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  LODWORD(v69) = *a2;
  uint64_t v75 = *(char **)(a4 + 24);
  uint64_t v74 = a4 + 24;
  ((void (*)(long long *__return_ptr, uint64_t, uint64_t))v75)(&v90, a3, a4);
  uint64_t v79 = v90;
  long long v80 = v91;
  v76[0] = v9;
  v76[1] = v10;
  DataFrame.subscript.getter(v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = *((void *)&v86 + 1);
  uint64_t v63 = v86;
  unint64_t v64 = v87;
  unint64_t v11 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 32);
  unint64_t v72 = v6;
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v71 = a4 + 32;
  uint64_t v70 = v11;
  v11(&v86, a3, a4);
  uint64_t v12 = v86;
  uint64_t v13 = v87;
  unint64_t v14 = v88;
  int v15 = v89;
  uint64_t v16 = *((void *)&v87 + 1);
  if (v89)
  {
    if (v89 == 1 && *(void *)(*((void *)&v87 + 1) + 16))
    {
      uint64_t v16 = *(void *)(*((void *)&v87 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v87 + 1), v88, v89);
      if (v18) {
        uint64_t v16 = 0;
      }
      else {
        uint64_t v16 = v17;
      }
    }
  }
  unint64_t v19 = sub_220883950(*((uint64_t *)&v13 + 1), v14, v15);
  uint64_t v68 = &v62;
  uint64_t v90 = v12;
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v20;
  }
  uint64_t v91 = v13;
  uint64_t v92 = v14;
  unint64_t v93 = v15;
  uint64_t v94 = v16;
  long long v95 = v22;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = v66;
  char v24 = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(*((uint64_t *)&v13 + 1), v14, v15);
  uint64_t v25 = sub_220837AB0((uint64_t)&v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v13 + 1), v14, v15);
  *(void *)&uint64_t v79 = v25;
  sub_22089D5D8(sub_22089B268);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v13 + 1), v14, v15);
  uint64_t v63 = v79;
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v75)(&v84, v23, v24);
  char v26 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v26 + 2);
  if (v27)
  {
    uint64_t v83 = MEMORY[0x263F8EE78];
    sub_220826CD8(0, v27, 0);
    uint64_t v75 = v26;
    char v28 = (uint64_t)(v26 + 32);
    uint64_t v29 = v83;
    char v30 = v63;
    do
    {
      sub_22080B5B8(v28, (uint64_t)&v79);
      Swift::Int v32 = v81;
      uint64_t v31 = v82;
      __swift_project_boxed_opaque_existential_1(&v79, v81);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v31 + 8) + 88))(v76, v32);
      uint64_t v33 = v77;
      uint64_t v34 = v78;
      __swift_project_boxed_opaque_existential_1(v76, v77);
      uint64_t v36 = v81;
      unint64_t v35 = v82;
      __swift_project_boxed_opaque_existential_1(&v79, v81);
      uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)(v35 + 8) + 48))(v36);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v34 + 32))(&v86, v37, v33, v34);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      sub_22080B0D8((uint64_t)&v79);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v83;
      }
      uint64_t v39 = *(void *)(v29 + 16);
      uint64_t v38 = *(void *)(v29 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_220826CD8((char *)(v38 > 1), v39 + 1, 1);
        uint64_t v29 = v83;
      }
      *(void *)(v29 + 16) = v39 + 1;
      uint64_t v40 = v29 + 40 * v39;
      uint64_t v41 = v86;
      uint64_t v42 = v87;
      *(void *)(v40 + 64) = v88;
      *(_OWORD *)(v40 + 32) = v41;
      *(_OWORD *)(v40 + 48) = v42;
      v28 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    unint64_t v43 = v67;
    uint64_t v23 = v66;
  }
  else
  {
    unint64_t v43 = v24;
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
    char v30 = v63;
  }
  sub_22080D5BC(v29, &v84);
  uint64_t v69 = *(char **)(v30 + 16);
  if (v69)
  {
    unint64_t v44 = 0;
    uint64_t v68 = (char ***)(v30 + 32);
    uint64_t v45 = v84;
    while (1)
    {
      long long v46 = v68[(void)v44];
      v70(&v86, v23, v43);
      long long v47 = v86;
      uint64_t v48 = v87;
      sub_22080B6B4(*((uint64_t *)&v87 + 1), v88, v89);
      uint64_t v49 = *(void *)(v47 + 16);
      if (v49 != *((void *)v45 + 2)) {
        break;
      }
      if (v49)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v75 = v44;
        uint64_t v74 = *((void *)&v47 + 1);
        long long v73 = v48;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v45 = sub_22080AB34((uint64_t)v45);
        }
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        while (1)
        {
          sub_22080B5B8(v47 + v51 + 32, (uint64_t)&v79);
          uint64_t v84 = v45;
          if (v52 >= *((void *)v45 + 2)) {
            break;
          }
          ++v52;
          uint64_t v53 = &v45[v51];
          uint64_t v54 = v81;
          unint64_t v55 = v82;
          uint64_t v56 = __swift_project_boxed_opaque_existential_1(&v79, v81);
          uint64_t v77 = v54;
          uint64_t v78 = *(void *)(v55 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(boxed_opaque_existential_1, v56, v54);
          uint64_t v58 = *((void *)v53 + 7);
          uint64_t v59 = *((void *)v53 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v53 + 32), v58);
          (*(void (**)(char **, uint64_t *, uint64_t, uint64_t))(v59 + 56))(v46, v76, v58, v59);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
          sub_22080B0D8((uint64_t)&v79);
          uint64_t v45 = v84;
          v51 += 40;
          if (v49 == v52)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v43 = v67;
            uint64_t v23 = v66;
            unint64_t v44 = v75;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      if (++v44 == v69)
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        goto LABEL_34;
      }
    }
    *(void *)&uint64_t v79 = 0;
    *((void *)&v79 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    v76[0] = v49;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    v76[0] = *((void *)v45 + 2);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F090();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v45 = v84;
LABEL_34:
    unint64_t v61 = v62;
    *uint64_t v62 = v45;
    *(_OWORD *)(v61 + 1) = v85;
  }
  return result;
}

unint64_t sub_220895FE0()
{
  unint64_t result = qword_267F190B0;
  if (!qword_267F190B0)
  {
    sub_22093E100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F190B0);
  }
  return result;
}

uint64_t sub_220896038(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_22089604C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, void (*a8)(long long *, char *, void, void, uint64_t)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13 = v9;
  *(void *)&long long v81 = a3;
  *((void *)&v81 + 1) = a4;
  *(void *)&long long v82 = a5;
  swift_bridgeObjectRetain();
  uint64_t v70 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_22080BA90(a1, a2);
  if ((v20 & 0x8000000000000000) != 0) {
    goto LABEL_36;
  }
  unint64_t v73 = *(void *)(a3 + 16);
  if (v20 >= v73)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v68 = v13;
  uint64_t v66 = a9;
  sub_22080B5B8(a3 + 32 + 40 * v20, (uint64_t)&v78);
  sub_2208343B8(&v78, (uint64_t)&v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
  __swift_instantiateConcreteTypeFromMangledName(a6);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B5B8(a3 + 32, (uint64_t)&v81);
  uint64_t v13 = (char *)*((void *)&v82 + 1);
  uint64_t v21 = v83;
  __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = v23(v13, v22);
  sub_22080B0D8((uint64_t)&v81);
  if (v24 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v67 = a8;
  if (v24)
  {
    uint64_t v25 = 0;
    char v26 = 0;
  }
  else
  {
    char v26 = 2;
    sub_220883950(0, 0, 2);
    if (v28) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = v27;
    }
  }
  sub_220883950(0, v24, v26);
  v84[0] = a3;
  v84[1] = v70;
  if (v30) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v29;
  }
  v84[2] = a5;
  v84[3] = 0;
  v84[4] = v24;
  char v85 = v26;
  uint64_t v86 = v25;
  uint64_t v87 = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(0, v24, v26);
  Swift::Int v32 = sub_220837AB0((uint64_t)v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v24, v26);
  *(void *)&long long v81 = v32;
  v67(&v81, v74, v75, *((void *)&v75 + 1), a7);
  if (v68)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22080B6B4(0, v24, v26);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v24, v26);
  uint64_t v65 = v81;
  uint64_t v88 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  unint64_t v34 = v73;
  sub_220826CD8(0, v73, 0);
  uint64_t v35 = v88;
  uint64_t v36 = a3 + 32;
  do
  {
    sub_22080B5B8(v36, (uint64_t)&v78);
    uint64_t v38 = v79;
    uint64_t v37 = v80;
    __swift_project_boxed_opaque_existential_1(&v78, v79);
    (*(void (**)(char **__return_ptr, uint64_t))(*(void *)(v37 + 8) + 88))(&v74, v38);
    uint64_t v40 = v76;
    uint64_t v39 = v77;
    __swift_project_boxed_opaque_existential_1(&v74, v76);
    uint64_t v42 = v79;
    uint64_t v41 = v80;
    __swift_project_boxed_opaque_existential_1(&v78, v79);
    uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)(v41 + 8) + 48))(v42);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v81, v43, v40, v39);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
    sub_22080B0D8((uint64_t)&v78);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_220826CD8(0, *(void *)(v35 + 16) + 1, 1);
      uint64_t v35 = v88;
    }
    unint64_t v45 = *(void *)(v35 + 16);
    unint64_t v44 = *(void *)(v35 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_220826CD8((char *)(v44 > 1), v45 + 1, 1);
      uint64_t v35 = v88;
    }
    *(void *)(v35 + 16) = v45 + 1;
    uint64_t v46 = v35 + 40 * v45;
    long long v47 = v81;
    long long v48 = v82;
    *(void *)(v46 + 64) = v83;
    *(_OWORD *)(v46 + 32) = v47;
    *(_OWORD *)(v46 + 48) = v48;
    v36 += 40;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
  sub_22080D5BC(v35, &v74);
  uint64_t v69 = *(void *)(v65 + 16);
  if (!v69)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v13 = v74;
LABEL_32:
    *(void *)uint64_t v66 = v13;
    *(_OWORD *)(v66 + 8) = v75;
    return result;
  }
  uint64_t v49 = 0;
  while (2)
  {
    uint64_t v71 = v49;
    uint64_t v50 = *(void *)(v65 + 32 + 8 * v49);
    sub_22080B5B8(a3 + 32, (uint64_t)&v81);
    uint64_t v13 = (char *)*((void *)&v82 + 1);
    uint64_t v51 = v83;
    __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
    uint64_t v52 = *(void *)(v51 + 8);
    uint64_t v53 = *(uint64_t (**)(char *, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v54 = v53(v13, v52);
    sub_22080B0D8((uint64_t)&v81);
    if (v54 < 0)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_22080B6B4(0, v54, 2 * (v54 == 0));
    uint64_t v13 = v74;
    if (v73 == *((void *)v74 + 2))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_22080AB34((uint64_t)v13);
      }
      uint64_t v55 = 0;
      unint64_t v56 = 0;
      uint64_t v72 = v71 + 1;
      do
      {
        sub_22080B5B8(a3 + v55 + 32, (uint64_t)&v81);
        uint64_t v74 = v13;
        if (v56 >= *((void *)v13 + 2))
        {
          __break(1u);
          goto LABEL_34;
        }
        ++v56;
        uint64_t v57 = &v13[v55];
        uint64_t v58 = (uint64_t)&v13[v55 + 32];
        uint64_t v60 = *((void *)&v82 + 1);
        uint64_t v59 = v83;
        unint64_t v61 = __swift_project_boxed_opaque_existential_1(&v81, *((uint64_t *)&v82 + 1));
        uint64_t v79 = v60;
        uint64_t v80 = *(void *)(v59 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v78);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(boxed_opaque_existential_1, v61, v60);
        uint64_t v63 = *((void *)v57 + 7);
        uint64_t v64 = *((void *)v57 + 8);
        __swift_mutable_project_boxed_opaque_existential_1(v58, v63);
        (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v64 + 56))(v50, &v78, v63, v64);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
        sub_22080B0D8((uint64_t)&v81);
        uint64_t v13 = v74;
        v55 += 40;
      }
      while (v73 != v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v72;
      if (v72 != v69) {
        continue;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      goto LABEL_32;
    }
    break;
  }
LABEL_38:
  *(void *)&long long v81 = 0;
  *((void *)&v81 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  sub_22093E6C0();
  *(void *)&long long v78 = v73;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  *(void *)&long long v78 = *((void *)v13 + 2);
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_220896884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_22089604C(a1, a2, a3, a4, a5, &qword_26AD413F0, (uint64_t)sub_2208A83A8, (void (*)(long long *, char *, void, void, uint64_t))sub_2208AA10C, a6);
}

uint64_t sub_2208968CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_22089604C(a1, a2, a3, a4, a5, &qword_26AD413F0, (uint64_t)sub_2208A95BC, (void (*)(long long *, char *, void, void, uint64_t))sub_2208AA10C, a6);
}

uint64_t DataFrameProtocol.sorted<A>(on:by:)@<X0>(char **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  void (*v12)(char **__return_ptr, uint64_t, uint64_t);
  void (*v13)(long long *__return_ptr, uint64_t, uint64_t);
  long long v14;
  long long v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  Swift::Int v25;
  char *v26;
  uint64_t result;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  long long v45;
  long long v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  Swift::Int v62;
  char **v63;
  void (*v64)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  long long v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::Int v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  long long v89;
  long long v90;
  long long v91;
  uint64_t v92;
  char v93;
  _OWORD v94[2];
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  uint64_t v76 = a3;
  long long v75 = a2;
  uint64_t v63 = a7;
  unint64_t v11 = a1[1];
  uint64_t v77 = *a1;
  uint64_t v12 = *(void (**)(char **__return_ptr, uint64_t, uint64_t))(a6 + 24);
  uint64_t v65 = a6 + 24;
  uint64_t v64 = v12;
  v12((char **)&v90, a4, a6);
  uint64_t v79 = v90;
  uint64_t v80 = v91;
  uint64_t v88 = v77;
  *(void *)&uint64_t v89 = v11;
  uint64_t v68 = a5;
  DataFrame.subscript.getter((uint64_t *)&v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v83;
  uint64_t v71 = v84;
  uint64_t v66 = v85;
  uint64_t v13 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a6 + 32);
  uint64_t v74 = v7;
  uint64_t v69 = a4;
  uint64_t v70 = a6;
  unint64_t v73 = a6 + 32;
  uint64_t v72 = v13;
  v13(&v90, a4, a6);
  unint64_t v14 = v90;
  int v15 = v91;
  uint64_t v16 = v92;
  uint64_t v17 = v93;
  uint64_t v18 = *((void *)&v91 + 1);
  if (v93)
  {
    if (v93 == 1 && *(void *)(*((void *)&v91 + 1) + 16))
    {
      uint64_t v18 = *(void *)(*((void *)&v91 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v91 + 1), v92, v93);
      if (v20) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = v19;
      }
    }
  }
  uint64_t v21 = sub_220883950(*((uint64_t *)&v15 + 1), v16, v17);
  uint64_t v77 = (char *)&v61;
  v94[0] = v14;
  if (v23) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v22;
  }
  v94[1] = v15;
  long long v95 = v16;
  uint64_t v96 = v17;
  uint64_t v97 = v18;
  uint64_t v98 = v24;
  MEMORY[0x270FA5388](v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(*((uint64_t *)&v15 + 1), v16, v17);
  uint64_t v25 = sub_220837AB0((uint64_t)v94);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v15 + 1), v16, v17);
  uint64_t v83 = v25;
  char v26 = v78;
  sub_22089D5D8(sub_22089D65C);
  if (v26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22080B6B4(*((uint64_t *)&v15 + 1), v16, v17);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v61 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(*((uint64_t *)&v15 + 1), v16, v17);
    char v28 = v83;
    uint64_t v29 = v69;
    char v30 = v70;
    v64(&v88, v69, v70);
    uint64_t v31 = v88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::Int v32 = *((void *)v31 + 2);
    uint64_t v62 = v28;
    if (v32)
    {
      unint64_t v99 = MEMORY[0x263F8EE78];
      sub_220826CD8(0, v32, 0);
      long long v78 = v31;
      uint64_t v33 = (uint64_t)(v31 + 32);
      unint64_t v34 = v99;
      do
      {
        sub_22080B5B8(v33, (uint64_t)&v83);
        uint64_t v36 = v86;
        uint64_t v35 = v87;
        __swift_project_boxed_opaque_existential_1(&v83, v86);
        (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v35 + 8) + 88))(&v79, v36);
        uint64_t v37 = v81;
        uint64_t v38 = v82;
        __swift_project_boxed_opaque_existential_1(&v79, v81);
        uint64_t v40 = v86;
        uint64_t v39 = v87;
        __swift_project_boxed_opaque_existential_1(&v83, v86);
        uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)(v39 + 8) + 48))(v40);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v38 + 32))(&v90, v41, v37, v38);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v79);
        sub_22080B0D8((uint64_t)&v83);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_220826CD8(0, *(void *)(v34 + 16) + 1, 1);
          unint64_t v34 = v99;
        }
        uint64_t v43 = *(void *)(v34 + 16);
        uint64_t v42 = *(void *)(v34 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_220826CD8((char *)(v42 > 1), v43 + 1, 1);
          unint64_t v34 = v99;
        }
        *(void *)(v34 + 16) = v43 + 1;
        unint64_t v44 = v34 + 40 * v43;
        unint64_t v45 = v90;
        uint64_t v46 = v91;
        *(void *)(v44 + 64) = v92;
        *(_OWORD *)(v44 + 32) = v45;
        *(_OWORD *)(v44 + 48) = v46;
        v33 += 40;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      char v30 = v70;
      uint64_t v29 = v69;
      char v28 = v62;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v34 = MEMORY[0x263F8EE78];
    }
    sub_22080D5BC(v34, &v88);
    uint64_t v68 = *(void *)(v28 + 16);
    if (v68)
    {
      long long v47 = 0;
      uint64_t v67 = v28 + 32;
      long long v48 = v88;
      while (1)
      {
        long long v78 = *(char **)(v67 + 8 * v47);
        v72(&v90, v29, v30);
        uint64_t v77 = (char *)*((void *)&v90 + 1);
        uint64_t v49 = v90;
        uint64_t v76 = v91;
        sub_22080B6B4(*((uint64_t *)&v91 + 1), v92, v93);
        uint64_t v50 = *(void *)(v49 + 16);
        if (v50 != *((void *)v48 + 2)) {
          break;
        }
        if (v50)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          long long v75 = v47;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            long long v48 = sub_22080AB34((uint64_t)v48);
          }
          uint64_t v52 = 0;
          uint64_t v53 = 0;
          while (1)
          {
            sub_22080B5B8(v49 + v52 + 32, (uint64_t)&v83);
            uint64_t v88 = v48;
            if (v53 >= *((void *)v48 + 2)) {
              break;
            }
            ++v53;
            uint64_t v54 = v86;
            uint64_t v55 = v87;
            unint64_t v56 = __swift_project_boxed_opaque_existential_1(&v83, v86);
            long long v81 = v54;
            long long v82 = *(void *)(v55 + 8);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v79);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(boxed_opaque_existential_1, v56, v54);
            uint64_t v58 = *(void *)&v48[v52 + 56];
            uint64_t v59 = *(void *)&v48[v52 + 64];
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v48[v52 + 32], v58);
            (*(void (**)(char *, long long *, uint64_t, uint64_t))(v59 + 56))(v78, &v79, v58, v59);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v79);
            sub_22080B0D8((uint64_t)&v83);
            long long v48 = v88;
            v52 += 40;
            if (v50 == v53)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v30 = v70;
              uint64_t v29 = v69;
              long long v47 = v75;
              goto LABEL_25;
            }
          }
          __break(1u);
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_25:
        if (++v47 == v68)
        {
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t result = swift_release();
          goto LABEL_36;
        }
      }
      uint64_t v83 = 0;
      uint64_t v84 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      *(void *)&uint64_t v79 = v50;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      *(void *)&uint64_t v79 = *((void *)v48 + 2);
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t result = sub_22093F090();
      __break(1u);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      long long v48 = v88;
LABEL_36:
      uint64_t v60 = v63;
      *uint64_t v63 = v48;
      *(_OWORD *)(v60 + 1) = v89;
    }
  }
  return result;
}

uint64_t sub_2208972BC(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t DataFrameProtocol.sorted<A>(on:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, char **a7@<X8>)
{
  unsigned __int8 v11 = *a3;
  ColumnID.init(_:_:)(a1, a2, v15);
  v14[0] = v15[0];
  v14[1] = v15[1];
  unsigned __int8 v13 = v11;
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:order:)(v14, &v13, a4, a5, a6, a7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_220897384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v38 = a6;
  uint64_t v9 = sub_22093E100();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v40 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = &v37[-v12];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v13);
  int v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  unint64_t v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = &v37[-v20];
  if (a1 < 0) {
    goto LABEL_20;
  }
  uint64_t v22 = (void **)(a5 + 16);
  swift_beginAccess();
  uint64_t v23 = *(void **)(a5 + 16);
  if (!v23)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v23[1] <= a1) {
    goto LABEL_20;
  }
  sub_220891810(a1, v23, (uint64_t)v21);
  if (a2 < 0) {
    goto LABEL_20;
  }
  uint64_t v24 = *v22;
  if (!*v22) {
    goto LABEL_19;
  }
  if (v24[1] <= a2)
  {
LABEL_20:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  sub_220891810(a2, v24, (uint64_t)v19);
  uint64_t v25 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_22080B550((uint64_t)v21, (uint64_t)v15);
  sub_22080B550((uint64_t)v19, v25);
  uint64_t v26 = v41;
  uint64_t v27 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v41 + 48);
  int v28 = v27(v15, 1, v9);
  int v29 = v27((unsigned char *)v25, 1, v9);
  if (v28 == 1)
  {
    if (v29 != 1) {
      sub_2208573C0(v25);
    }
    char v30 = 0;
  }
  else if (v29 == 1)
  {
    sub_2208573C0((uint64_t)v15);
    char v30 = 1;
  }
  else
  {
    uint64_t v31 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32);
    Swift::Int v32 = v39;
    v31(v39, v15, v9);
    uint64_t v33 = v40;
    v31(v40, (unsigned char *)v25, v9);
    sub_220895FE0();
    if (v38) {
      char v34 = sub_22093E450();
    }
    else {
      char v34 = sub_22093E460();
    }
    char v30 = v34;
    uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
    v35(v33, v9);
    v35(v32, v9);
  }
  sub_2208573C0((uint64_t)v19);
  sub_2208573C0((uint64_t)v21);
  return v30 & 1;
}

uint64_t sub_22089774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    swift_beginAccess();
    uint64_t v10 = *(void **)(a5 + 16);
    if (v10)
    {
      uint64_t v11 = v10[1];
      if (v11 > a1)
      {
        uint64_t v12 = sub_2208916D4(a1, *(void **)(a5 + 16), v11);
        if ((a2 & 0x8000000000000000) == 0)
        {
          uint64_t v14 = v10[1];
          if (v14 > a2)
          {
            uint64_t v15 = v12;
            uint64_t v16 = v13;
            uint64_t v17 = sub_2208916D4(a2, v10, v14);
            if (v16)
            {
              if (!v18)
              {
                char v19 = 1;
LABEL_20:
                swift_bridgeObjectRelease();
                return v19 & 1;
              }
              if (a6)
              {
                if (v17 != v15 || v18 != v16) {
                  goto LABEL_19;
                }
              }
              else if (v15 != v17 || v16 != v18)
              {
LABEL_19:
                char v19 = sub_22093F250();
                swift_bridgeObjectRelease();
                goto LABEL_20;
              }
              swift_bridgeObjectRelease();
            }
            else if (!v18)
            {
              char v19 = 0;
              return v19 & 1;
            }
            char v19 = 0;
            goto LABEL_20;
          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208978F4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v33 = a6;
  uint64_t v30 = a8;
  uint64_t v31 = a5;
  uint64_t v35 = a10;
  uint64_t v36 = a7;
  uint64_t v34 = a9;
  uint64_t v32 = sub_22093ED30();
  uint64_t v14 = *(void *)(v32 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v32);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v28 - v18;
  uint64_t v20 = *a1;
  uint64_t v29 = *a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v21 = v31;
  uint64_t v39 = v31;
  type metadata accessor for Column();
  Column.subscript.getter(v20, (uint64_t)v19);
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = v21;
  Column.subscript.getter(v29, (uint64_t)v17);
  LOBYTE(a2) = v33 & 1;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v30;
  *(void *)(v22 + 16) = v36;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = v35;
  *(void *)(v22 + 32) = v34;
  *(void *)(v22 + 40) = v24;
  *(unsigned char *)(v22 + 48) = (_BYTE)a2;
  uint64_t v25 = v32;
  LOBYTE(a2) = sub_220897B08((uint64_t)v17, (uint64_t (*)(char *, char *))sub_2208AA364, v22, v32);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v17, v25);
  v26(v19, v25);
  swift_release();
  return a2 & 1;
}

uint64_t sub_220897B08(uint64_t a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  v28[1] = a3;
  uint64_t v29 = a2;
  uint64_t v32 = a1;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v31 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)v28 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = (char *)v28 + *(int *)(v12 + 56) - v13;
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17((char *)v28 - v13, v4, a4);
  v17(v15, v32, a4);
  uint64_t v18 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  int v19 = v18(v14, 1, v6);
  int v20 = v18(v15, 1, v6);
  BOOL v21 = v19 == 1;
  char v22 = v19 != 1;
  if (!v21)
  {
    uint64_t v23 = v31;
    if (v20 != 1)
    {
      uint64_t v24 = (void (*)(char *, char *, uint64_t))v7[4];
      uint64_t v25 = v30;
      v24(v30, v14, v6);
      v24(v23, v15, v6);
      char v22 = v29(v25, v23);
      uint64_t v26 = (void (*)(char *, uint64_t))v7[1];
      v26(v23, v6);
      v26(v25, v6);
      return v22 & 1;
    }
    uint64_t v15 = v14;
    goto LABEL_6;
  }
  if (v20 != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, a4);
    return v22 & 1;
  }
  char v22 = 0;
  return v22 & 1;
}

uint64_t DataFrameProtocol.sorted<A, B>(on:_:order:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  void (*v13)(void *__return_ptr, void, void);
  uint64_t v14;
  void (*v15)(long long *__return_ptr, uint64_t, uint64_t);
  void (*v16)(void *__return_ptr, void, void);
  long long v17;
  long long v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  long long v46;
  long long v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  long long v52;
  void (*v53)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  void v66[4];
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(void *__return_ptr, void, void);
  uint64_t v78;
  void (*v79)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void *__return_ptr, void, void);
  uint64_t v84;
  uint64_t v85;
  long long v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  long long v92;
  long long v93;
  long long v94;
  uint64_t v95;
  char v96;
  long long v97;
  long long v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;

  uint64_t v76 = a8;
  long long v81 = a6;
  v66[0] = a9;
  uint64_t v68 = a10;
  uint64_t v13 = (void (*)(void *__return_ptr, void, void))a1[1];
  uint64_t v80 = *a1;
  long long v78 = *a2;
  uint64_t v77 = (void (*)(void *__return_ptr, void, void))a2[1];
  uint64_t v67 = *a3;
  uint64_t v14 = a7 + 24;
  uint64_t v15 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a7 + 24);
  v15(&v97, a4, a7);
  uint64_t v86 = v97;
  uint64_t v87 = v98;
  long long v82 = v80;
  uint64_t v83 = v13;
  long long v75 = a5;
  DataFrame.subscript.getter(&v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v72 = *((void *)&v93 + 1);
  void v66[3] = v93;
  uint64_t v71 = v94;
  uint64_t v80 = v14;
  uint64_t v79 = (void (*)(char **__return_ptr, uint64_t, uint64_t))v15;
  v15(&v97, a4, a7);
  uint64_t v86 = v97;
  uint64_t v87 = v98;
  long long v82 = v78;
  uint64_t v83 = v77;
  DataFrame.subscript.getter(&v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v70 = *((void *)&v93 + 1);
  v66[1] = v93;
  uint64_t v69 = v94;
  uint64_t v16 = *(void (**)(void *__return_ptr, void, void))(a7 + 32);
  unint64_t v73 = a4;
  uint64_t v74 = a7;
  long long v78 = a7 + 32;
  uint64_t v77 = v16;
  v16(&v93, a4, a7);
  uint64_t v17 = v93;
  uint64_t v18 = v94;
  int v19 = v95;
  int v20 = v96;
  BOOL v21 = *((void *)&v94 + 1);
  if (v96)
  {
    if (v96 == 1 && *(void *)(*((void *)&v94 + 1) + 16))
    {
      BOOL v21 = *(void *)(*((void *)&v94 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v94 + 1), v95, v96);
      if (v23) {
        BOOL v21 = 0;
      }
      else {
        BOOL v21 = v22;
      }
    }
  }
  uint64_t v24 = sub_220883950(*((uint64_t *)&v18 + 1), v19, v20);
  v66[2] = v66;
  uint64_t v97 = v17;
  if (v26) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = v25;
  }
  uint64_t v98 = v18;
  unint64_t v99 = v19;
  unint64_t v100 = v20;
  uint64_t v101 = v21;
  uint64_t v102 = v27;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = v73;
  uint64_t v29 = v74;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(*((uint64_t *)&v18 + 1), v19, v20);
  uint64_t v30 = sub_220837AB0((uint64_t)&v97);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v18 + 1), v19, v20);
  *(void *)&uint64_t v86 = v30;
  sub_22089D5D8(sub_22089D694);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v18 + 1), v19, v20);
  uint64_t v31 = v86;
  v79(&v91, v28, v29);
  uint64_t v32 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v33 = *((void *)v32 + 2);
  uint64_t v68 = v31;
  if (v33)
  {
    uint64_t v90 = MEMORY[0x263F8EE78];
    sub_220826CD8(0, v33, 0);
    uint64_t v34 = (uint64_t)(v32 + 32);
    uint64_t v35 = v90;
    do
    {
      sub_22080B5B8(v34, (uint64_t)&v86);
      uint64_t v37 = v88;
      uint64_t v36 = v89;
      __swift_project_boxed_opaque_existential_1(&v86, v88);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v36 + 8) + 88))(&v82, v37);
      uint64_t v38 = v84;
      uint64_t v39 = v85;
      __swift_project_boxed_opaque_existential_1(&v82, v84);
      uint64_t v41 = v88;
      uint64_t v40 = v89;
      __swift_project_boxed_opaque_existential_1(&v86, v88);
      uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 8) + 48))(v41);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v39 + 32))(&v93, v42, v38, v39);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v82);
      sub_22080B0D8((uint64_t)&v86);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v35 + 16) + 1, 1);
        uint64_t v35 = v90;
      }
      unint64_t v44 = *(void *)(v35 + 16);
      uint64_t v43 = *(void *)(v35 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_220826CD8((char *)(v43 > 1), v44 + 1, 1);
        uint64_t v35 = v90;
      }
      *(void *)(v35 + 16) = v44 + 1;
      unint64_t v45 = v35 + 40 * v44;
      uint64_t v46 = v93;
      long long v47 = v94;
      *(void *)(v45 + 64) = v95;
      *(_OWORD *)(v45 + 32) = v46;
      *(_OWORD *)(v45 + 48) = v47;
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    long long v48 = v74;
    uint64_t v28 = v73;
    uint64_t v31 = v68;
  }
  else
  {
    long long v48 = v29;
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x263F8EE78];
  }
  sub_22080D5BC(v35, &v91);
  uint64_t v76 = *(void *)(v31 + 16);
  if (v76)
  {
    uint64_t v49 = 0;
    long long v75 = v31 + 32;
    uint64_t v50 = v91;
    while (1)
    {
      uint64_t v51 = *(void *)(v75 + 8 * v49);
      v77(&v93, v28, v48);
      uint64_t v52 = v93;
      uint64_t v53 = (void (*)(char **__return_ptr, uint64_t, uint64_t))v94;
      sub_22080B6B4(*((uint64_t *)&v94 + 1), v95, v96);
      uint64_t v54 = *(void *)(v52 + 16);
      if (v54 != *((void *)v50 + 2)) {
        break;
      }
      if (v54)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v81 = v49;
        uint64_t v80 = *((void *)&v52 + 1);
        uint64_t v79 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v50 = sub_22080AB34((uint64_t)v50);
        }
        unint64_t v56 = 0;
        uint64_t v57 = 0;
        while (1)
        {
          sub_22080B5B8(v52 + v56 + 32, (uint64_t)&v86);
          uint64_t v91 = v50;
          if (v57 >= *((void *)v50 + 2)) {
            break;
          }
          ++v57;
          uint64_t v58 = v88;
          uint64_t v59 = v89;
          uint64_t v60 = __swift_project_boxed_opaque_existential_1(&v86, v88);
          uint64_t v84 = v58;
          char v85 = *(void *)(v59 + 8);
          unint64_t v61 = __swift_allocate_boxed_opaque_existential_1(&v82);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v61, v60, v58);
          uint64_t v62 = *(void *)&v50[v56 + 56];
          uint64_t v63 = *(void *)&v50[v56 + 64];
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v50[v56 + 32], v62);
          (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v63 + 56))(v51, &v82, v62, v63);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v82);
          sub_22080B0D8((uint64_t)&v86);
          uint64_t v50 = v91;
          v56 += 40;
          if (v54 == v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v48 = v74;
            uint64_t v28 = v73;
            uint64_t v49 = v81;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      if (++v49 == v76)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_34;
      }
    }
    *(void *)&uint64_t v86 = 0;
    *((void *)&v86 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    long long v82 = v54;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    long long v82 = *((void *)v50 + 2);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F090();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v50 = v91;
LABEL_34:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v65 = v66[0];
    *(void *)v66[0] = v50;
    *(_OWORD *)(v65 + 8) = v92;
  }
  return result;
}

uint64_t sub_22089881C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v90 = a8;
  uint64_t v89 = a7;
  int v106 = a6;
  uint64_t v116 = a5;
  uint64_t v111 = a14;
  uint64_t v109 = a13;
  uint64_t v110 = a15;
  uint64_t v107 = a10;
  uint64_t v108 = a12;
  uint64_t v94 = sub_22093ED30();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v94);
  uint64_t v92 = (uint64_t)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v91 = (uint64_t)&v86 - v22;
  uint64_t v113 = *(void *)(a11 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v88 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = a11;
  uint64_t v24 = sub_22093ED30();
  uint64_t v114 = v24;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v96 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v120 = (char *)&v86 - v26;
  uint64_t v115 = *(void *)(v24 - 8);
  uint64_t v103 = v115;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v99 = (uint64_t)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v98 = (uint64_t)&v86 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  long long v95 = (char *)&v86 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v86 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v86 - v36;
  uint64_t v38 = *a1;
  uint64_t v39 = *a2;
  uint64_t v40 = a3;
  uint64_t v117 = a3;
  uint64_t v118 = a4;
  uint64_t v41 = a4;
  uint64_t v42 = v116;
  uint64_t v119 = v116;
  uint64_t v43 = type metadata accessor for Column();
  uint64_t v104 = v38;
  Column.subscript.getter(v38, (uint64_t)v37);
  uint64_t v100 = v40;
  uint64_t v101 = v41;
  uint64_t v117 = v40;
  uint64_t v118 = v41;
  uint64_t v44 = v42;
  uint64_t v45 = v114;
  uint64_t v119 = v44;
  uint64_t v105 = v39;
  uint64_t v97 = v43;
  Column.subscript.getter(v39, (uint64_t)v35);
  uint64_t v46 = v120;
  long long v47 = &v120[*(int *)(TupleTypeMetadata2 + 48)];
  long long v48 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  v48(v120, v37, v45);
  v48(v47, v35, v45);
  uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v113 + 48);
  uint64_t v50 = v46;
  uint64_t v51 = v102;
  if (((unsigned int (*)(char *, uint64_t))v49)(v50, 1) != 1)
  {
    uint64_t v86 = v35;
    uint64_t v87 = v37;
    unint64_t v56 = v95;
    v48(v95, v120, v45);
    int v57 = v49(v47, 1, v51);
    uint64_t v54 = v51;
    uint64_t v58 = v45;
    if (v57 != 1)
    {
      uint64_t v59 = v113;
      uint64_t v60 = v88;
      (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v88, v47, v51);
      char v61 = sub_22093E520();
      uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
      v62(v60, v51);
      uint64_t v52 = *(void (**)(char *, uint64_t))(v103 + 8);
      v52(v86, v58);
      v52(v87, v58);
      v62(v56, v51);
      v52(v120, v58);
      uint64_t v55 = v111;
      if (v61) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v76 = v100;
      uint64_t v75 = v101;
      uint64_t v117 = v100;
      uint64_t v118 = v101;
      uint64_t v77 = v116;
      uint64_t v119 = v116;
      uint64_t v78 = v98;
      Column.subscript.getter(v104, v98);
      uint64_t v117 = v76;
      uint64_t v118 = v75;
      uint64_t v119 = v77;
      uint64_t v79 = v99;
      Column.subscript.getter(v105, v99);
      char v80 = v106 & 1;
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v107;
      *(void *)(v81 + 24) = v54;
      uint64_t v82 = v109;
      *(void *)(v81 + 32) = v108;
      *(void *)(v81 + 40) = v82;
      uint64_t v83 = v110;
      *(void *)(v81 + 48) = v55;
      *(void *)(v81 + 56) = v83;
      *(unsigned char *)(v81 + 64) = v80;
      uint64_t v84 = v114;
      char v73 = sub_220897B08(v79, (uint64_t (*)(char *, char *))sub_2208AA314, v81, v114);
      v52((char *)v79, v84);
      v52((char *)v78, v84);
      goto LABEL_10;
    }
    uint64_t v52 = *(void (**)(char *, uint64_t))(v103 + 8);
    v52(v86, v45);
    v52(v87, v45);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v56, v51);
LABEL_6:
    uint64_t v55 = v111;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v120, TupleTypeMetadata2);
    goto LABEL_9;
  }
  uint64_t v52 = *(void (**)(char *, uint64_t))(v103 + 8);
  v52(v35, v45);
  v52(v37, v45);
  int v53 = v49(v47, 1, v51);
  uint64_t v54 = v51;
  if (v53 != 1) {
    goto LABEL_6;
  }
  v52(v120, v45);
  uint64_t v55 = v111;
LABEL_8:
  uint64_t v63 = v89;
  uint64_t v64 = v90;
  uint64_t v117 = v89;
  uint64_t v118 = v90;
  uint64_t v119 = a9;
  uint64_t v65 = v108;
  type metadata accessor for Column();
  uint64_t v66 = v91;
  Column.subscript.getter(v104, v91);
  uint64_t v117 = v63;
  uint64_t v118 = v64;
  uint64_t v119 = a9;
  uint64_t v67 = v92;
  Column.subscript.getter(v105, v92);
  char v68 = v106 & 1;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v107;
  *(void *)(v69 + 24) = v54;
  uint64_t v70 = v109;
  *(void *)(v69 + 32) = v65;
  *(void *)(v69 + 40) = v70;
  uint64_t v71 = v110;
  *(void *)(v69 + 48) = v55;
  *(void *)(v69 + 56) = v71;
  *(unsigned char *)(v69 + 64) = v68;
  uint64_t v72 = v94;
  char v73 = sub_220897B08(v67, (uint64_t (*)(char *, char *))sub_2208AA2C4, v69, v94);
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  v74(v67, v72);
  v74(v66, v72);
LABEL_10:
  swift_release();
  return v73 & 1;
}

uint64_t DataFrameProtocol.sorted<A, B, C>(on:_:_:order:)@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X1>, unsigned __int8 *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char **a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void (*v15)(long long *__return_ptr, uint64_t, uint64_t);
  void (*v16)(long long *__return_ptr, uint64_t, uint64_t);
  long long v17;
  long long v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  long long v45;
  long long v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  long long v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  char **v65;
  uint64_t v66;
  char **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  void (*v86)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  long long v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  long long v101;
  long long v102;
  long long v103;
  uint64_t v104;
  char v105;
  long long v106;
  long long v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;

  uint64_t v84 = a7;
  char v68 = a6;
  uint64_t v83 = a4;
  uint64_t v67 = a8;
  uint64_t v74 = a12;
  char v73 = a11;
  uint64_t v72 = a10;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v90 = *a2;
  uint64_t v89 = a2[1];
  uint64_t v71 = *a3;
  uint64_t v15 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a9 + 24);
  v15(&v106, a4, a9);
  long long v95 = v106;
  uint64_t v96 = v107;
  uint64_t v91 = (void *)v13;
  uint64_t v92 = v14;
  uint64_t v75 = a5;
  DataFrame.subscript.getter((uint64_t *)&v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = *((void *)&v102 + 1);
  uint64_t v70 = v102;
  uint64_t v79 = v103;
  v15(&v106, v83, a9);
  long long v95 = v106;
  uint64_t v96 = v107;
  uint64_t v91 = v90;
  uint64_t v92 = (uint64_t)v89;
  DataFrame.subscript.getter((uint64_t *)&v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v80 = *((void *)&v102 + 1);
  uint64_t v69 = v102;
  uint64_t v78 = v103;
  uint64_t v88 = a9 + 24;
  char v85 = (uint64_t *)v15;
  v15(&v106, v83, a9);
  long long v95 = v106;
  uint64_t v96 = v107;
  uint64_t v91 = v90;
  uint64_t v92 = (uint64_t)v89;
  DataFrame.subscript.getter((uint64_t *)&v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = *((void *)&v102 + 1);
  uint64_t v89 = (uint64_t *)v102;
  uint64_t v76 = v103;
  uint64_t v16 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a9 + 32);
  uint64_t v82 = a9;
  uint64_t v87 = a9 + 32;
  uint64_t v86 = v16;
  v16(&v102, v83, a9);
  uint64_t v17 = v102;
  uint64_t v18 = v103;
  uint64_t v19 = v104;
  uint64_t v20 = v105;
  uint64_t v21 = *((void *)&v103 + 1);
  if (v105)
  {
    if (v105 == 1 && *(void *)(*((void *)&v103 + 1) + 16))
    {
      uint64_t v21 = *(void *)(*((void *)&v103 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v103 + 1), v104, v105);
      if (v23) {
        uint64_t v21 = 0;
      }
      else {
        uint64_t v21 = v22;
      }
    }
  }
  uint64_t v24 = sub_220883950(*((uint64_t *)&v18 + 1), v19, v20);
  uint64_t v90 = &v66;
  int v106 = v17;
  if (v26) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = v25;
  }
  uint64_t v107 = v18;
  uint64_t v108 = v19;
  uint64_t v109 = v20;
  uint64_t v110 = v21;
  uint64_t v111 = v27;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = v83;
  uint64_t v29 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(*((uint64_t *)&v18 + 1), v19, v20);
  uint64_t v30 = sub_220837AB0((uint64_t)&v106);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v18 + 1), v19, v20);
  *(void *)&long long v95 = v30;
  sub_22089D5D8(sub_22089D6E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v18 + 1), v19, v20);
  uint64_t v75 = v95;
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v85)(&v100, v28, v29);
  uint64_t v31 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = *((void *)v31 + 2);
  if (v32)
  {
    uint64_t v99 = MEMORY[0x263F8EE78];
    sub_220826CD8(0, v32, 0);
    uint64_t v33 = (uint64_t)(v31 + 32);
    uint64_t v34 = v99;
    do
    {
      sub_22080B5B8(v33, (uint64_t)&v95);
      uint64_t v36 = v97;
      uint64_t v35 = v98;
      __swift_project_boxed_opaque_existential_1(&v95, v97);
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)(v35 + 8) + 88))(&v91, v36);
      uint64_t v37 = v93;
      uint64_t v38 = v94;
      __swift_project_boxed_opaque_existential_1(&v91, v93);
      uint64_t v40 = v97;
      uint64_t v39 = v98;
      __swift_project_boxed_opaque_existential_1(&v95, v97);
      uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)(v39 + 8) + 48))(v40);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v38 + 32))(&v102, v41, v37, v38);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
      sub_22080B0D8((uint64_t)&v95);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826CD8(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v99;
      }
      uint64_t v43 = *(void *)(v34 + 16);
      uint64_t v42 = *(void *)(v34 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_220826CD8((char *)(v42 > 1), v43 + 1, 1);
        uint64_t v34 = v99;
      }
      *(void *)(v34 + 16) = v43 + 1;
      uint64_t v44 = v34 + 40 * v43;
      uint64_t v45 = v102;
      uint64_t v46 = v103;
      *(void *)(v44 + 64) = v104;
      *(_OWORD *)(v44 + 32) = v45;
      *(_OWORD *)(v44 + 48) = v46;
      v33 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    uint64_t v28 = v83;
    long long v47 = v82;
  }
  else
  {
    long long v47 = v29;
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  sub_22080D5BC(v34, &v100);
  char v85 = *(uint64_t **)(v75 + 16);
  if (v85)
  {
    long long v48 = 0;
    uint64_t v84 = v75 + 32;
    uint64_t v49 = v100;
    while (1)
    {
      uint64_t v50 = *(void *)(v84 + 8 * (void)v48);
      v86(&v102, v28, v47);
      uint64_t v51 = v102;
      uint64_t v52 = v103;
      sub_22080B6B4(*((uint64_t *)&v103 + 1), v104, v105);
      int v53 = *(void *)(v51 + 16);
      if (v53 != *((void *)v49 + 2)) {
        break;
      }
      if (v53)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = v48;
        uint64_t v89 = (uint64_t *)*((void *)&v51 + 1);
        uint64_t v88 = v52;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v49 = sub_22080AB34((uint64_t)v49);
        }
        uint64_t v55 = 0;
        unint64_t v56 = 0;
        while (1)
        {
          sub_22080B5B8(v51 + v55 + 32, (uint64_t)&v95);
          uint64_t v100 = v49;
          if (v56 >= *((void *)v49 + 2)) {
            break;
          }
          ++v56;
          int v57 = &v49[v55];
          uint64_t v58 = v97;
          uint64_t v59 = v98;
          uint64_t v60 = __swift_project_boxed_opaque_existential_1(&v95, v97);
          uint64_t v93 = v58;
          uint64_t v94 = *(void *)(v59 + 8);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(boxed_opaque_existential_1, v60, v58);
          uint64_t v62 = *((void *)v57 + 7);
          uint64_t v63 = *((void *)v57 + 8);
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v57 + 32), v62);
          (*(void (**)(uint64_t, void **, uint64_t, uint64_t))(v63 + 56))(v50, &v91, v62, v63);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
          sub_22080B0D8((uint64_t)&v95);
          uint64_t v49 = v100;
          v55 += 40;
          if (v53 == v56)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = v83;
            long long v47 = v82;
            long long v48 = v90;
            goto LABEL_23;
          }
        }
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      long long v48 = (uint64_t *)((char *)v48 + 1);
      if (v48 == v85)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_34;
      }
    }
    *(void *)&long long v95 = 0;
    *((void *)&v95 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v91 = (void *)v53;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v91 = (void *)*((void *)v49 + 2);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F090();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v49 = v100;
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v65 = v67;
    *uint64_t v67 = v49;
    *(_OWORD *)(v65 + 1) = v101;
  }
  return result;
}

uint64_t sub_220899BD8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v158 = a8;
  uint64_t v157 = a7;
  int v168 = a6;
  uint64_t v183 = a5;
  uint64_t v170 = a20;
  uint64_t v175 = a19;
  uint64_t v176 = a18;
  uint64_t v167 = a17;
  uint64_t v166 = a16;
  uint64_t v154 = *(void *)(a15 - 8);
  uint64_t v169 = a13;
  MEMORY[0x270FA5388](a1);
  char v145 = (char *)&v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = v25;
  uint64_t v26 = sub_22093ED30();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v146 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v155 = (char *)&v143 - v28;
  uint64_t v165 = v26;
  uint64_t v164 = *(void *)(v26 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v149 = (uint64_t)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v150 = (uint64_t)&v143 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  char v147 = (char *)&v143 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v152 = (uint64_t)&v143 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v153 = (uint64_t)&v143 - v38;
  uint64_t v179 = *(void *)(a14 - 8);
  MEMORY[0x270FA5388](v37);
  char v148 = (char *)&v143 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = a14;
  uint64_t v40 = sub_22093ED30();
  uint64_t v189 = v40;
  uint64_t v181 = swift_getTupleTypeMetadata2();
  uint64_t v151 = *(void *)(v181 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v181);
  v180 = (char *)&v143 - v42;
  uint64_t v182 = *(void *)(v40 - 8);
  uint64_t v174 = v182;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v161 = (uint64_t)&v143 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v160 = (uint64_t)&v143 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v172 = (char *)&v143 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)&v143 - v50;
  MEMORY[0x270FA5388](v49);
  int v53 = (char *)&v143 - v52;
  uint64_t v54 = *a1;
  uint64_t v55 = *a2;
  uint64_t v56 = a3;
  uint64_t v186 = a3;
  uint64_t v187 = a4;
  uint64_t v57 = a4;
  uint64_t v58 = v183;
  uint64_t v188 = v183;
  uint64_t v59 = type metadata accessor for Column();
  uint64_t v177 = v54;
  Column.subscript.getter(v54, (uint64_t)v53);
  uint64_t v60 = v56;
  uint64_t v61 = v189;
  uint64_t v162 = v60;
  uint64_t v186 = v60;
  uint64_t v187 = v57;
  uint64_t v163 = v57;
  uint64_t v188 = v58;
  uint64_t v178 = v55;
  uint64_t v159 = v59;
  Column.subscript.getter(v55, (uint64_t)v51);
  uint64_t v62 = v180;
  uint64_t v63 = &v180[*(int *)(v181 + 48)];
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
  v171 = v53;
  v64(v180, v53, v61);
  v173 = v63;
  v64(v63, v51, v61);
  uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
  uint64_t v66 = v62;
  uint64_t v67 = v62;
  uint64_t v68 = v185;
  if (((unsigned int (*)(char *, uint64_t))v65)(v67, 1) == 1)
  {
    uint64_t v69 = *(void (**)(char *, uint64_t))(v174 + 8);
    uint64_t v70 = v189;
    v69(v51, v189);
    v69(v171, v70);
    if (v65(v173, 1, v68) == 1)
    {
      v69(v180, v189);
      goto LABEL_10;
    }
    uint64_t v75 = v184;
    uint64_t v76 = v180;
    goto LABEL_7;
  }
  char v144 = v51;
  uint64_t v71 = v174;
  v64(v172, v66, v189);
  uint64_t v72 = v173;
  uint64_t v73 = v68;
  if (v65(v173, 1, v68) == 1)
  {
    uint64_t v69 = *(void (**)(char *, uint64_t))(v71 + 8);
    uint64_t v74 = v189;
    v69(v144, v189);
    v69(v171, v74);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v172, v68);
    uint64_t v75 = v184;
    uint64_t v76 = v66;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v151 + 8))(v76, v181);
    goto LABEL_8;
  }
  uint64_t v90 = v179;
  uint64_t v91 = v148;
  (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v148, v72, v73);
  uint64_t v92 = v172;
  LODWORD(v181) = sub_22093E520();
  uint64_t v93 = *(void (**)(char *, uint64_t))(v90 + 8);
  v93(v91, v73);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v94 = v189;
  v69(v144, v189);
  v69(v171, v94);
  v93(v92, v73);
  v69(v66, v94);
  uint64_t v75 = v184;
  if (v181)
  {
LABEL_10:
    uint64_t v95 = v157;
    uint64_t v96 = v158;
    uint64_t v186 = v157;
    uint64_t v187 = v158;
    uint64_t v188 = a9;
    uint64_t v97 = type metadata accessor for Column();
    uint64_t v98 = v153;
    Column.subscript.getter(v177, v153);
    uint64_t v186 = v95;
    uint64_t v187 = v96;
    uint64_t v182 = a9;
    uint64_t v188 = a9;
    uint64_t v99 = v152;
    uint64_t v183 = v97;
    Column.subscript.getter(v178, v152);
    uint64_t v100 = v155;
    uint64_t v101 = (uint64_t)&v155[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v102 = v164;
    uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
    uint64_t v104 = v165;
    v103(v155, v98, v165);
    uint64_t v189 = v101;
    v103((char *)v101, v99, v104);
    uint64_t v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
    int v106 = v100;
    uint64_t v107 = v100;
    uint64_t v108 = v184;
    if (v105((uint64_t)v107, 1, v184) == 1)
    {
      uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      uint64_t v110 = v165;
      v109(v99, v165);
      v109(v98, v110);
      if (v105(v189, 1, v108) == 1)
      {
        v109((uint64_t)v155, v110);
LABEL_19:
        uint64_t v186 = a10;
        uint64_t v187 = a11;
        uint64_t v188 = a12;
        uint64_t v134 = v150;
        Column.subscript.getter(v177, v150);
        uint64_t v186 = a10;
        uint64_t v187 = a11;
        uint64_t v188 = a12;
        uint64_t v135 = v149;
        Column.subscript.getter(v178, v149);
        char v136 = v168 & 1;
        uint64_t v137 = swift_allocObject();
        uint64_t v138 = v185;
        *(void *)(v137 + 16) = v169;
        *(void *)(v137 + 24) = v138;
        uint64_t v139 = v166;
        *(void *)(v137 + 32) = v184;
        *(void *)(v137 + 40) = v139;
        uint64_t v140 = v176;
        *(void *)(v137 + 48) = v167;
        *(void *)(v137 + 56) = v140;
        uint64_t v141 = v170;
        *(void *)(v137 + 64) = v175;
        *(void *)(v137 + 72) = v141;
        *(unsigned char *)(v137 + 80) = v136;
        char v89 = sub_220897B08(v135, (uint64_t (*)(char *, char *))sub_2208AA210, v137, v110);
        v109(v135, v110);
        v109(v134, v110);
        goto LABEL_20;
      }
      uint64_t v115 = v167;
      uint64_t v116 = v166;
      uint64_t v117 = v155;
    }
    else
    {
      uint64_t v111 = v147;
      unint64_t v112 = v106;
      uint64_t v113 = v106;
      uint64_t v110 = v165;
      v103(v147, (uint64_t)v113, v165);
      uint64_t v114 = v108;
      if (v105(v189, 1, v108) != 1)
      {
        uint64_t v129 = v111;
        uint64_t v130 = v154;
        uint64_t v131 = v145;
        (*(void (**)(char *, uint64_t, uint64_t))(v154 + 32))(v145, v189, v108);
        char v132 = sub_22093E520();
        unint64_t v133 = *(void (**)(char *, uint64_t))(v130 + 8);
        v133(v131, v114);
        uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
        v109(v152, v110);
        v109(v153, v110);
        v133(v129, v114);
        v109((uint64_t)v112, v110);
        if (v132) {
          goto LABEL_19;
        }
        uint64_t v115 = v167;
        uint64_t v116 = v166;
        uint64_t v118 = v182;
        goto LABEL_17;
      }
      uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
      v109(v152, v110);
      v109(v153, v110);
      (*(void (**)(char *, uint64_t))(v154 + 8))(v111, v108);
      uint64_t v115 = v167;
      uint64_t v116 = v166;
      uint64_t v117 = v112;
    }
    uint64_t v118 = v182;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v117, TupleTypeMetadata2);
LABEL_17:
    uint64_t v119 = v157;
    uint64_t v120 = v158;
    uint64_t v186 = v157;
    uint64_t v187 = v158;
    uint64_t v188 = v118;
    uint64_t v121 = v150;
    Column.subscript.getter(v177, v150);
    uint64_t v186 = v119;
    uint64_t v187 = v120;
    uint64_t v188 = v118;
    uint64_t v122 = v149;
    Column.subscript.getter(v178, v149);
    char v123 = v168 & 1;
    uint64_t v124 = swift_allocObject();
    uint64_t v125 = v185;
    *(void *)(v124 + 16) = v169;
    *(void *)(v124 + 24) = v125;
    *(void *)(v124 + 32) = v184;
    *(void *)(v124 + 40) = v116;
    uint64_t v126 = v176;
    *(void *)(v124 + 48) = v115;
    *(void *)(v124 + 56) = v126;
    uint64_t v127 = v170;
    *(void *)(v124 + 64) = v175;
    *(void *)(v124 + 72) = v127;
    *(unsigned char *)(v124 + 80) = v123;
    uint64_t v128 = v165;
    char v89 = sub_220897B08(v122, (uint64_t (*)(char *, char *))sub_2208AA210, v124, v165);
    v109(v122, v128);
    v109(v121, v128);
    goto LABEL_20;
  }
LABEL_8:
  uint64_t v77 = v162;
  uint64_t v78 = v163;
  uint64_t v186 = v162;
  uint64_t v187 = v163;
  uint64_t v79 = v183;
  uint64_t v188 = v183;
  uint64_t v80 = v160;
  Column.subscript.getter(v177, v160);
  uint64_t v186 = v77;
  uint64_t v187 = v78;
  uint64_t v188 = v79;
  uint64_t v81 = v161;
  Column.subscript.getter(v178, v161);
  char v82 = v168 & 1;
  uint64_t v83 = swift_allocObject();
  uint64_t v84 = v185;
  *(void *)(v83 + 16) = v169;
  *(void *)(v83 + 24) = v84;
  uint64_t v85 = v166;
  *(void *)(v83 + 32) = v75;
  *(void *)(v83 + 40) = v85;
  uint64_t v86 = v176;
  *(void *)(v83 + 48) = v167;
  *(void *)(v83 + 56) = v86;
  uint64_t v87 = v170;
  *(void *)(v83 + 64) = v175;
  *(void *)(v83 + 72) = v87;
  *(unsigned char *)(v83 + 80) = v82;
  uint64_t v88 = v189;
  char v89 = sub_220897B08(v81, (uint64_t (*)(char *, char *))sub_2208AA274, v83, v189);
  v69((char *)v81, v88);
  v69((char *)v80, v88);
LABEL_20:
  swift_release();
  return v89 & 1;
}

uint64_t DataFrameProtocol.sorted<A>(on:_:by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char **a8@<X8>)
{
  ColumnID.init(_:_:)(a1, a2, v16);
  v15[0] = (char *)v16[0];
  v15[1] = (char *)v16[1];
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:by:)(v15, a3, a4, a5, a6, a7, a8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22089AB48(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(char *, char *), uint64_t a7)
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v23 = a5;
  uint64_t v24 = sub_22093ED30();
  uint64_t v11 = *(void *)(v24 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v24);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = *a1;
  uint64_t v22 = *a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v18 = v23;
  uint64_t v29 = v23;
  type metadata accessor for Column();
  Column.subscript.getter(v17, (uint64_t)v16);
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v19 = v24;
  uint64_t v29 = v18;
  Column.subscript.getter(v22, (uint64_t)v14);
  LOBYTE(v18) = sub_220897B08((uint64_t)v14, v25, v26, v19);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, v19);
  v20(v16, v19);
  return v18 & 1;
}

Swift::Void __swiftcall DataFrame.sort(on:order:)(Swift::String on, TabularData::Order order)
{
  sub_220894744(on._countAndFlagsBits, (uint64_t)on._object, *(unsigned char *)order, *v2, v2[1], v2[2], (uint64_t)&v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v5;
  *(_OWORD *)uint64_t v2 = v4;
  v2[2] = v3;
}

uint64_t DataFrame.sort<A>(on:_:order:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v8 = *a4;
  ColumnID.init(_:_:)(a1, a2, v12);
  v11[0] = v12[0];
  v11[1] = v12[1];
  unsigned __int8 v10 = v8;
  swift_bridgeObjectRetain();
  DataFrame.sort<A>(on:order:)(v11, &v10, a5, a6);

  return swift_bridgeObjectRelease();
}

double DataFrame.sort<A>(on:order:)(uint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  unsigned __int8 v7 = *a2;
  uint64_t v8 = v4[1];
  uint64_t v9 = v4[2];
  void v13[2] = *v4;
  v13[3] = v8;
  v13[4] = v9;
  v13[0] = v5;
  v13[1] = v6;
  unsigned __int8 v12 = v7;
  DataFrameProtocol.sorted<A>(on:order:)(v13, &v12, (uint64_t)&type metadata for DataFrame, (uint64_t)&protocol witness table for DataFrame, a4, (char **)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v15;
  double result = *(double *)&v14;
  *(_OWORD *)long long v4 = v14;
  v4[2] = v10;
  return result;
}

double DataFrame.sort<A, B>(on:_:order:)(uint64_t *a1, uint64_t *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  unsigned __int8 v12 = *a3;
  uint64_t v13 = v7[1];
  uint64_t v14 = v7[2];
  v19[2] = *v7;
  v19[3] = v13;
  v19[4] = v14;
  v19[0] = v8;
  v19[1] = v9;
  v18[0] = v10;
  v18[1] = v11;
  unsigned __int8 v17 = v12;
  DataFrameProtocol.sorted<A, B>(on:_:order:)(v19, v18, &v17, (uint64_t)&type metadata for DataFrame, a4, a5, (uint64_t)&protocol witness table for DataFrame, a6, (uint64_t)&v20, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v21;
  double result = *(double *)&v20;
  *(_OWORD *)unsigned __int8 v7 = v20;
  v7[2] = v15;
  return result;
}

double DataFrame.sort<A, B, C>(on:_:_:order:)(uint64_t *a1, uint64_t **a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  unsigned __int8 v15 = *a4;
  uint64_t v16 = v10[1];
  uint64_t v17 = v10[2];
  v22[2] = *v10;
  v22[3] = v16;
  v22[4] = v17;
  v22[0] = v11;
  v22[1] = v12;
  v21[0] = v13;
  v21[1] = v14;
  unsigned __int8 v20 = v15;
  DataFrameProtocol.sorted<A, B, C>(on:_:_:order:)(v22, v21, &v20, (uint64_t)&type metadata for DataFrame, a5, a6, a7, (char **)&v23, (uint64_t)&protocol witness table for DataFrame, a8, a9, a10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v24;
  double result = *(double *)&v23;
  *(_OWORD *)uint64_t v10 = v23;
  v10[2] = v18;
  return result;
}

double DataFrame.sort<A>(on:by:)(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = v4[1];
  uint64_t v12 = v4[2];
  void v15[2] = *v4;
  v15[3] = v11;
  v15[4] = v12;
  v15[0] = v9;
  v15[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrameProtocol.sorted<A>(on:by:)(v15, a2, a3, (uint64_t)&type metadata for DataFrame, a4, (uint64_t)&protocol witness table for DataFrame, (char **)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v17;
    double result = *(double *)&v16;
    *(_OWORD *)long long v4 = v16;
    v4[2] = v14;
  }
  return result;
}

double DataFrame.sort<A>(on:_:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = v6[1];
  uint64_t v11 = v6[2];
  void v16[2] = *v6;
  v16[3] = v10;
  v16[4] = v11;
  ColumnID.init(_:_:)(a1, a2, v16);
  v15[0] = (char *)v16[0];
  v15[1] = (char *)v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = v19;
  DataFrameProtocol.sorted<A>(on:by:)(v15, a4, a5, (uint64_t)&type metadata for DataFrame, a6, (uint64_t)&protocol witness table for DataFrame, (char **)&v17);
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v18;
    double result = *(double *)&v17;
    *(_OWORD *)uint64_t v6 = v17;
    _OWORD v6[2] = v14;
  }
  return result;
}

uint64_t sub_22089B268(uint64_t *a1, uint64_t *a2)
{
  return sub_2208978F4(a1, a2, *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40)) & 1;
}

void *sub_22089B2A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19170);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18658);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089B3DC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089B728(a1, a2, a3, a4, &qword_267F19180);
}

char *sub_22089B3F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089B4F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

void *sub_22089B5F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188C0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188C8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089B714(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089B728(a1, a2, a3, a4, &qword_26AD413F8);
}

char *sub_22089B728(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[40 * v9]) {
      memmove(v13, v14, 40 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

size_t sub_22089B844(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CD10(a1, a2, a3, a4, &qword_267F191E0, qword_26AD411B8);
}

void *sub_22089B858(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089B96C(a1, a2, a3, a4, &qword_267F191D8, &qword_267F185B8);
}

char *sub_22089B86C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F191D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

void *sub_22089B958(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089B96C(a1, a2, a3, a4, &qword_26AD40FC8, &qword_26AD40FC0);
}

void *sub_22089B96C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[2 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_22089BA94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F191C8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  size_t v15 = 8 * v8;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_release();
  return v10;
}

char *sub_22089BB8C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089BBA4(a1, a2, a3, a4, &qword_26AD40FE8);
}

char *sub_22089BB98(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089BBA4(a1, a2, a3, a4, &qword_26AD40FF0);
}

char *sub_22089BBA4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v16);
  }
  swift_release();
  return v11;
}

void *sub_22089BC98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CA94(a1, a2, a3, a4, &qword_267F19190, &qword_267F19198);
}

char *sub_22089BCAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F191A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_22089BDC8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CF70(a1, a2, a3, a4, &qword_267F19160, &qword_267F19168);
}

void *sub_22089BDDC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CF70(a1, a2, a3, a4, &qword_267F191A8, &qword_267F191B0);
}

void *sub_22089BDF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F191B8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[13 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 104 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F191C0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089BF2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F19188);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089C034(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18878);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_22089C138(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18868);
  uint64_t v10 = *(void *)(sub_22093E100() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  double result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_22093E100() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_22089C30C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18858);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

char *sub_22089C3F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_22089C4F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18820);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_22089C5F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18838);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_release();
  return v10;
}

void *sub_22089C6E8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D4B0(a1, a2, a3, a4, &qword_267F191E8, &qword_267F188D8);
}

void *sub_22089C6FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41198);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41170);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089C820(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18818);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22089C93C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089C978(a1, a2, a3, a4, &qword_26AD41188);
}

void *sub_22089C950(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CA94(a1, a2, a3, a4, &qword_26AD41180, qword_26AD41088);
}

char *sub_22089C964(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_22089C978(a1, a2, a3, a4, &qword_267F187F0);
}

char *sub_22089C978(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

void *sub_22089CA80(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CA94(a1, a2, a3, a4, &qword_267F187F8, &qword_267F18800);
}

void *sub_22089CA94(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_22089CBD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F187D8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_22089CCE8(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CD10(a1, a2, a3, a4, &qword_267F19148, &qword_267F19150);
}

size_t sub_22089CCFC(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CD10(a1, a2, a3, a4, &qword_267F19158, &qword_267F18FE8);
}

size_t sub_22089CD10(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  double result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v16;
}

void *sub_22089CEE4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D228(a1, a2, a3, a4, &qword_267F19130, &qword_267F19138);
}

void *sub_22089CEF8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D364(a1, a2, a3, a4, &qword_267F19140, &qword_267F18FE0);
}

void *sub_22089CF0C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CF70(a1, a2, a3, a4, &qword_267F19118, &qword_267F19120);
}

void *sub_22089CF20(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D0C4(a1, a2, a3, a4, &qword_267F19128, &qword_267F18FD8);
}

void *sub_22089CF34(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D228(a1, a2, a3, a4, &qword_267F19100, &qword_267F19108);
}

void *sub_22089CF48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D364(a1, a2, a3, a4, &qword_267F19110, &qword_267F18FD0);
}

void *sub_22089CF5C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089CF70(a1, a2, a3, a4, &qword_267F190E8, &qword_267F190F0);
}

void *sub_22089CF70(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 56);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[7 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 56 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

void *sub_22089D0B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D0C4(a1, a2, a3, a4, &qword_267F190F8, &qword_267F18FC8);
}

void *sub_22089D0C4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[4 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

void *sub_22089D1EC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D228(a1, a2, a3, a4, &qword_267F190D0, &qword_267F190D8);
}

void *sub_22089D200(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D364(a1, a2, a3, a4, &qword_267F190E0, &qword_267F18FC0);
}

void *sub_22089D214(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D228(a1, a2, a3, a4, &qword_267F190B8, &qword_267F190C0);
}

void *sub_22089D228(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 + 31;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 6);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[8 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, v11 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

void *sub_22089D350(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D364(a1, a2, a3, a4, &qword_267F190C8, &qword_267F18FB8);
}

void *sub_22089D364(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

void *sub_22089D49C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_22089D4B0(a1, a2, a3, a4, &qword_267F187A0, qword_26AD40FF8);
}

void *sub_22089D4B0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[4 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

uint64_t sub_22089D5D8(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_22089E454((uint64_t)v3);
  }
  uint64_t result = sub_22089D73C(a1);
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_22089D65C(uint64_t *a1, uint64_t *a2)
{
  return sub_22089AB48(a1, a2, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(uint64_t (**)(char *, char *))(v2 + 64), *(void *)(v2 + 72)) & 1;
}

uint64_t sub_22089D694(uint64_t *a1, uint64_t *a2)
{
  return sub_22089881C(a1, a2, *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(unsigned __int8 *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56)) & 1;
}

uint64_t sub_22089D6E8(uint64_t *a1, uint64_t *a2)
{
  return sub_220899BD8(a1, a2, *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(unsigned __int8 *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144), *(void *)(v2 + 152), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64),
           *(void *)(v2 + 72)) & 1;
}

uint64_t sub_22089D73C(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t v3 = v1[1];
  uint64_t result = sub_22093F170();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if (v3) {
      return sub_22089DDF8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_137;
  }
  uint64_t v87 = result;
  uint64_t v88 = v3;
  if (v3 >= 2)
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_22093E8A0();
    *(void *)(result + 16) = v6;
    uint64_t v86 = result;
    char v89 = (char *)(result + 32);
LABEL_13:
    uint64_t v8 = 0;
    uint64_t v9 = *v1;
    uint64_t v85 = *v1 + 16;
    uint64_t v83 = v1;
    uint64_t v84 = *v1 - 8;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v11 = v88;
    uint64_t v90 = *v1;
    while (1)
    {
      uint64_t v12 = v8++;
      if (v8 < v11)
      {
        uint64_t v93 = *(void *)(v9 + 8 * v8);
        uint64_t v92 = *(void *)(v9 + 8 * v12);
        uint64_t result = a1(&v93, &v92);
        if (v2)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          uint64_t v7 = v86;
          goto LABEL_115;
        }
        int v13 = result;
        uint64_t v8 = v12 + 2;
        if (v12 + 2 < v88)
        {
          int64_t v14 = (uint64_t *)(v85 + 8 * v12);
          while (1)
          {
            uint64_t v93 = *v14;
            uint64_t v92 = *(v14 - 1);
            uint64_t result = a1(&v93, &v92);
            if ((v13 ^ result)) {
              break;
            }
            ++v14;
            if (v88 == ++v8)
            {
              uint64_t v8 = v88;
              break;
            }
          }
        }
        uint64_t v9 = v90;
        if (v13)
        {
          if (v8 < v12) {
            goto LABEL_142;
          }
          uint64_t v11 = v88;
          if (v12 < v8)
          {
            uint64_t v15 = v8 - 1;
            uint64_t v16 = v12;
            do
            {
              if (v16 != v15)
              {
                if (!v90) {
                  goto LABEL_145;
                }
                uint64_t v17 = *(void *)(v90 + 8 * v16);
                *(void *)(v90 + 8 * v16) = *(void *)(v90 + 8 * v15);
                *(void *)(v90 + 8 * v15) = v17;
              }
              BOOL v52 = ++v16 < v15--;
            }
            while (v52);
          }
        }
        else
        {
          uint64_t v11 = v88;
        }
      }
      if (v8 >= v11) {
        goto LABEL_40;
      }
      if (__OFSUB__(v8, v12)) {
        goto LABEL_139;
      }
      if (v8 - v12 >= v87) {
        goto LABEL_40;
      }
      if (__OFADD__(v12, v87)) {
        goto LABEL_140;
      }
      if (v12 + v87 >= v11) {
        uint64_t v18 = v11;
      }
      else {
        uint64_t v18 = v12 + v87;
      }
      if (v18 < v12)
      {
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
        return result;
      }
      if (v8 == v18)
      {
LABEL_40:
        if (v8 < v12) {
          goto LABEL_136;
        }
      }
      else
      {
        uint64_t v71 = (uint64_t *)(v84 + 8 * v8);
        do
        {
          uint64_t v72 = *(void *)(v9 + 8 * v8);
          uint64_t v73 = v12;
          uint64_t v74 = v71;
          while (1)
          {
            uint64_t v93 = v72;
            uint64_t v92 = *v74;
            uint64_t result = a1(&v93, &v92);
            if (v2) {
              goto LABEL_101;
            }
            if ((result & 1) == 0) {
              break;
            }
            uint64_t v9 = v90;
            if (!v90) {
              goto LABEL_144;
            }
            uint64_t v75 = *v74;
            uint64_t v72 = v74[1];
            *uint64_t v74 = v72;
            v74[1] = v75;
            --v74;
            if (v8 == ++v73) {
              goto LABEL_98;
            }
          }
          uint64_t v9 = v90;
LABEL_98:
          ++v8;
          ++v71;
        }
        while (v8 != v18);
        uint64_t v8 = v18;
        if (v18 < v12) {
          goto LABEL_136;
        }
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_22081B3EC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
        uint64_t v10 = result;
      }
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      unint64_t v21 = v20 + 1;
      uint64_t v9 = v90;
      if (v20 >= v19 >> 1)
      {
        uint64_t result = (uint64_t)sub_22081B3EC((char *)(v19 > 1), v20 + 1, 1, (char *)v10);
        uint64_t v9 = v90;
        uint64_t v10 = result;
      }
      *(void *)(v10 + 16) = v21;
      uint64_t v22 = v10 + 32;
      long long v23 = (uint64_t *)(v10 + 32 + 16 * v20);
      *long long v23 = v12;
      v23[1] = v8;
      if (v20)
      {
        while (1)
        {
          unint64_t v24 = v21 - 1;
          if (v21 >= 4)
          {
            unint64_t v29 = v22 + 16 * v21;
            uint64_t v30 = *(void *)(v29 - 64);
            uint64_t v31 = *(void *)(v29 - 56);
            BOOL v35 = __OFSUB__(v31, v30);
            uint64_t v32 = v31 - v30;
            if (v35) {
              goto LABEL_121;
            }
            uint64_t v34 = *(void *)(v29 - 48);
            uint64_t v33 = *(void *)(v29 - 40);
            BOOL v35 = __OFSUB__(v33, v34);
            uint64_t v27 = v33 - v34;
            char v28 = v35;
            if (v35) {
              goto LABEL_122;
            }
            unint64_t v36 = v21 - 2;
            uint64_t v37 = (uint64_t *)(v22 + 16 * (v21 - 2));
            uint64_t v39 = *v37;
            uint64_t v38 = v37[1];
            BOOL v35 = __OFSUB__(v38, v39);
            uint64_t v40 = v38 - v39;
            if (v35) {
              goto LABEL_123;
            }
            BOOL v35 = __OFADD__(v27, v40);
            uint64_t v41 = v27 + v40;
            if (v35) {
              goto LABEL_125;
            }
            if (v41 >= v32)
            {
              uint64_t v59 = (uint64_t *)(v22 + 16 * v24);
              uint64_t v61 = *v59;
              uint64_t v60 = v59[1];
              BOOL v35 = __OFSUB__(v60, v61);
              uint64_t v62 = v60 - v61;
              if (v35) {
                goto LABEL_131;
              }
              BOOL v52 = v27 < v62;
              goto LABEL_77;
            }
          }
          else
          {
            if (v21 != 3)
            {
              uint64_t v53 = *(void *)(v10 + 32);
              uint64_t v54 = *(void *)(v10 + 40);
              BOOL v35 = __OFSUB__(v54, v53);
              uint64_t v46 = v54 - v53;
              char v47 = v35;
              goto LABEL_71;
            }
            uint64_t v26 = *(void *)(v10 + 32);
            uint64_t v25 = *(void *)(v10 + 40);
            BOOL v35 = __OFSUB__(v25, v26);
            uint64_t v27 = v25 - v26;
            char v28 = v35;
          }
          if (v28) {
            goto LABEL_124;
          }
          unint64_t v36 = v21 - 2;
          uint64_t v42 = (uint64_t *)(v22 + 16 * (v21 - 2));
          uint64_t v44 = *v42;
          uint64_t v43 = v42[1];
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v46 = v43 - v44;
          char v47 = v45;
          if (v45) {
            goto LABEL_126;
          }
          uint64_t v48 = (uint64_t *)(v22 + 16 * v24);
          uint64_t v50 = *v48;
          uint64_t v49 = v48[1];
          BOOL v35 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v35) {
            goto LABEL_128;
          }
          if (__OFADD__(v46, v51)) {
            goto LABEL_130;
          }
          if (v46 + v51 >= v27)
          {
            BOOL v52 = v27 < v51;
LABEL_77:
            if (v52) {
              unint64_t v24 = v36;
            }
            goto LABEL_79;
          }
LABEL_71:
          if (v47) {
            goto LABEL_127;
          }
          uint64_t v55 = (uint64_t *)(v22 + 16 * v24);
          uint64_t v57 = *v55;
          uint64_t v56 = v55[1];
          BOOL v35 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v35) {
            goto LABEL_129;
          }
          if (v58 < v46) {
            goto LABEL_88;
          }
LABEL_79:
          unint64_t v63 = v24 - 1;
          if (v24 - 1 >= v21)
          {
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          if (!v9) {
            goto LABEL_143;
          }
          uint64_t v64 = v8;
          uint64_t v65 = v10;
          uint64_t v66 = (uint64_t *)(v22 + 16 * v63);
          uint64_t v67 = *v66;
          uint64_t v68 = (void *)(v22 + 16 * v24);
          uint64_t v69 = v68[1];
          uint64_t result = sub_22089E1A0((char *)(v9 + 8 * *v66), (char *)(v9 + 8 * *v68), v9 + 8 * v69, v89, a1);
          if (v2) {
            goto LABEL_101;
          }
          if (v69 < v67) {
            goto LABEL_118;
          }
          if (v24 > *(void *)(v65 + 16)) {
            goto LABEL_119;
          }
          uint64_t *v66 = v67;
          *(void *)(v22 + 16 * v63 + 8) = v69;
          unint64_t v70 = *(void *)(v65 + 16);
          if (v24 >= v70) {
            goto LABEL_120;
          }
          uint64_t v10 = v65;
          unint64_t v21 = v70 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v22 + 16 * v24), v68 + 2, 16 * (v70 - 1 - v24));
          *(void *)(v65 + 16) = v70 - 1;
          uint64_t v9 = v90;
          uint64_t v8 = v64;
          if (v70 <= 2) {
            goto LABEL_88;
          }
        }
      }
      unint64_t v21 = 1;
LABEL_88:
      uint64_t v11 = v88;
      if (v8 >= v88)
      {
        uint64_t v7 = v86;
        uint64_t v1 = v83;
        goto LABEL_103;
      }
    }
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  char v89 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v86 = MEMORY[0x263F8EE78];
    goto LABEL_13;
  }
  unint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
  uint64_t result = v10;
  if (v21 >= 2)
  {
    uint64_t v76 = *v1;
    do
    {
      unint64_t v77 = v21 - 2;
      if (v21 < 2) {
        goto LABEL_132;
      }
      if (!v76) {
        goto LABEL_146;
      }
      uint64_t v78 = result;
      uint64_t v79 = *(void *)(result + 32 + 16 * v77);
      uint64_t v80 = *(void *)(result + 32 + 16 * (v21 - 1) + 8);
      uint64_t result = sub_22089E1A0((char *)(v76 + 8 * v79), (char *)(v76 + 8 * *(void *)(result + 32 + 16 * (v21 - 1))), v76 + 8 * v80, v89, a1);
      if (v2) {
        break;
      }
      if (v80 < v79) {
        goto LABEL_133;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_22080AB70(v78);
        uint64_t v78 = result;
      }
      if (v77 >= *(void *)(v78 + 16)) {
        goto LABEL_134;
      }
      uint64_t v81 = (void *)(v78 + 32 + 16 * v77);
      *uint64_t v81 = v79;
      v81[1] = v80;
      unint64_t v82 = *(void *)(v78 + 16);
      if (v21 > v82) {
        goto LABEL_135;
      }
      memmove((void *)(v78 + 32 + 16 * (v21 - 1)), (const void *)(v78 + 32 + 16 * v21), 16 * (v82 - v21));
      uint64_t result = v78;
      *(void *)(v78 + 16) = v82 - 1;
      unint64_t v21 = v82 - 1;
    }
    while (v82 > 2);
  }
  swift_bridgeObjectRelease();
LABEL_115:
  *(void *)(v7 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_22089DDF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = result;
    uint64_t v10 = *v4;
    uint64_t v11 = *v4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v12 = *(void *)(v10 + 8 * v7);
    uint64_t v13 = v9;
    int64_t v14 = (uint64_t *)v11;
    while (1)
    {
      uint64_t v17 = v12;
      uint64_t v16 = *v14;
      uint64_t result = a4(&v17, &v16);
      if (v5) {
        break;
      }
      if (result)
      {
        if (!v10)
        {
          __break(1u);
          return result;
        }
        uint64_t v15 = *v14;
        uint64_t v12 = v14[1];
        *int64_t v14 = v12;
        v14[1] = v15;
        --v14;
        if (v7 != ++v13) {
          continue;
        }
      }
      ++v7;
      v11 += 8;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_22089DEC8(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(void, void, uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v10 = a4;
  uint64_t v12 = __src;
  uint64_t v13 = __dst;
  unsigned int v35 = a8 & 1;
  int64_t v14 = __src - __dst;
  int64_t v15 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v15 = __src - __dst;
  }
  uint64_t v16 = v15 >> 3;
  uint64_t v17 = a3 - (void)__src;
  uint64_t v18 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v18 = a3 - (void)__src;
  }
  uint64_t v19 = v18 >> 3;
  if (v16 >= v18 >> 3)
  {
    if (a4 != __src || &__src[8 * v19] <= a4) {
      memmove(a4, __src, 8 * v19);
    }
    unint64_t v20 = &v10[8 * v19];
    if (v13 >= v12 || v17 < 8) {
      goto LABEL_49;
    }
    unint64_t v24 = (char *)(a3 - 8);
    while (1)
    {
      uint64_t v25 = v12 - 8;
      char v26 = a9(*((void *)v20 - 1), *((void *)v12 - 1), a5, a6, a7, v35);
      if (v9) {
        goto LABEL_49;
      }
      uint64_t v27 = v24 + 8;
      if (v26)
      {
        if (v27 != v12)
        {
          v12 -= 8;
LABEL_39:
          *(void *)unint64_t v24 = *(void *)v25;
          goto LABEL_40;
        }
        BOOL v28 = v24 >= v12;
        v12 -= 8;
        if (v28) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v25 = v20 - 8;
        if (v27 != v20)
        {
          v20 -= 8;
          goto LABEL_39;
        }
        BOOL v28 = v24 >= v20;
        v20 -= 8;
        if (v28) {
          goto LABEL_39;
        }
      }
LABEL_40:
      if (v12 > v13)
      {
        v24 -= 8;
        if (v20 > v10) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (a4 != __dst || &__dst[8 * v16] <= a4) {
    memmove(a4, __dst, 8 * v16);
  }
  unint64_t v20 = &v10[8 * v16];
  if ((unint64_t)v12 < a3 && v14 >= 8)
  {
    while (1)
    {
      char v21 = a9(*(void *)v12, *(void *)v10, a5, a6, a7, v35);
      if (v9)
      {
        uint64_t v29 = v20 - v10 + 7;
        if (v20 - v10 >= 0) {
          uint64_t v29 = v20 - v10;
        }
        if (v13 < v10 || v13 >= &v10[v29 & 0xFFFFFFFFFFFFFFF8] || v13 != v10)
        {
          size_t v30 = 8 * (v29 >> 3);
          uint64_t v31 = v13;
          goto LABEL_55;
        }
        goto LABEL_56;
      }
      if ((v21 & 1) == 0) {
        break;
      }
      uint64_t v22 = v12;
      BOOL v23 = v13 == v12;
      v12 += 8;
      if (!v23) {
        goto LABEL_17;
      }
LABEL_18:
      v13 += 8;
      if (v10 >= v20 || (unint64_t)v12 >= a3) {
        goto LABEL_20;
      }
    }
    uint64_t v22 = v10;
    BOOL v23 = v13 == v10;
    v10 += 8;
    if (v23) {
      goto LABEL_18;
    }
LABEL_17:
    *(void *)uint64_t v13 = *(void *)v22;
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v12 = v13;
LABEL_49:
  uint64_t v32 = v20 - v10 + 7;
  if (v20 - v10 >= 0) {
    uint64_t v32 = v20 - v10;
  }
  if (v12 < v10 || v12 >= &v10[v32 & 0xFFFFFFFFFFFFFFF8] || v12 != v10)
  {
    size_t v30 = 8 * (v32 >> 3);
    uint64_t v31 = v12;
LABEL_55:
    memmove(v31, v10, v30);
  }
LABEL_56:
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_22089E1A0(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = a4;
  uint64_t v7 = __src;
  uint64_t v8 = __dst;
  int64_t v9 = __src - __dst;
  int64_t v10 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v10 = __src - __dst;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)__src;
  uint64_t v13 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v13 = a3 - (void)__src;
  }
  uint64_t v14 = v13 >> 3;
  if (v11 >= v13 >> 3)
  {
    if (a4 != __src || &__src[8 * v14] <= a4) {
      memmove(a4, __src, 8 * v14);
    }
    int64_t v15 = &v6[8 * v14];
    if (v8 >= v7 || v12 < 8) {
      goto LABEL_42;
    }
    uint64_t v19 = (char *)(a3 - 8);
    while (1)
    {
      uint64_t v32 = *((void *)v15 - 1);
      unint64_t v20 = v7 - 8;
      uint64_t v31 = *((void *)v7 - 1);
      char v21 = a5(&v32, &v31);
      if (v5) {
        goto LABEL_42;
      }
      uint64_t v22 = v19 + 8;
      if (v21)
      {
        if (v22 != v7)
        {
          v7 -= 8;
LABEL_39:
          *(void *)uint64_t v19 = *(void *)v20;
          goto LABEL_40;
        }
        BOOL v23 = v19 >= v7;
        v7 -= 8;
        if (v23) {
          goto LABEL_39;
        }
      }
      else
      {
        unint64_t v20 = v15 - 8;
        if (v22 != v15)
        {
          v15 -= 8;
          goto LABEL_39;
        }
        BOOL v23 = v19 >= v15;
        v15 -= 8;
        if (v23) {
          goto LABEL_39;
        }
      }
LABEL_40:
      if (v7 > v8)
      {
        v19 -= 8;
        if (v15 > v6) {
          continue;
        }
      }
      goto LABEL_42;
    }
  }
  if (a4 != __dst || &__dst[8 * v11] <= a4) {
    memmove(a4, __dst, 8 * v11);
  }
  int64_t v15 = &v6[8 * v11];
  if ((unint64_t)v7 < a3 && v9 >= 8)
  {
    while (1)
    {
      uint64_t v32 = *(void *)v7;
      uint64_t v31 = *(void *)v6;
      char v16 = a5(&v32, &v31);
      if (v5)
      {
        uint64_t v28 = v15 - v6 + 7;
        if (v15 - v6 >= 0) {
          uint64_t v28 = v15 - v6;
        }
        if (v8 < v6 || v8 >= &v6[v28 & 0xFFFFFFFFFFFFFFF8] || v8 != v6)
        {
          size_t v25 = 8 * (v28 >> 3);
          char v26 = v8;
LABEL_48:
          memmove(v26, v6, v25);
        }
        return 1;
      }
      if ((v16 & 1) == 0) {
        break;
      }
      uint64_t v17 = v7;
      BOOL v18 = v8 == v7;
      v7 += 8;
      if (!v18) {
        goto LABEL_17;
      }
LABEL_18:
      v8 += 8;
      if (v6 >= v15 || (unint64_t)v7 >= a3) {
        goto LABEL_20;
      }
    }
    uint64_t v17 = v6;
    BOOL v18 = v8 == v6;
    v6 += 8;
    if (v18) {
      goto LABEL_18;
    }
LABEL_17:
    *(void *)uint64_t v8 = *(void *)v17;
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v7 = v8;
LABEL_42:
  uint64_t v24 = v15 - v6 + 7;
  if (v15 - v6 >= 0) {
    uint64_t v24 = v15 - v6;
  }
  if (v7 < v6 || v7 >= &v6[v24 & 0xFFFFFFFFFFFFFFF8] || v7 != v6)
  {
    size_t v25 = 8 * (v24 >> 3);
    char v26 = v7;
    goto LABEL_48;
  }
  return 1;
}

char *sub_22089E454(uint64_t a1)
{
  return sub_22089B4F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22089E468(uint64_t a1)
{
  return sub_22089C3F8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22089E47C(uint64_t a1)
{
  return sub_22089C4F4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_22089E490(uint64_t a1)
{
  return sub_22089B3F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22089E4A4(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int64_t v9 = a4;
  int64_t v10 = a3;
  uint64_t v11 = __dst;
  uint64_t v12 = __src;
  int64_t v13 = __dst - __src;
  int64_t v14 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v14 = __dst - __src;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v16 = a3 - __dst;
  uint64_t v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0) {
    uint64_t v17 = a3 - __dst;
  }
  uint64_t v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4) {
      memmove(a4, __dst, 8 * v18);
    }
    uint64_t v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8) {
      goto LABEL_86;
    }
    unint64_t v70 = (void *)(a7 + 16);
    uint64_t v69 = v12;
    while (1)
    {
      unint64_t v44 = *((void *)v19 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_96:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      BOOL v45 = v11;
      uint64_t v46 = v11 - 8;
      unint64_t v47 = *((void *)v11 - 1);
      swift_beginAccess();
      uint64_t v48 = (void *)*v70;
      if (!*v70) {
        goto LABEL_95;
      }
      uint64_t v49 = v48[1];
      if ((uint64_t)v44 >= v49) {
        goto LABEL_96;
      }
      uint64_t v50 = v48 + 8;
      int v51 = *((unsigned __int8 *)v48 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v51)
      {
        uint64_t v52 = *v48 + 7;
        if (__OFADD__(*v48, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v53 = v10;
        if (v52 < 0) {
          uint64_t v52 = *v48 + 14;
        }
        uint64_t v54 = v52 >> 3;
        uint64_t v55 = v54 - 1;
        BOOL v29 = v54 < 1;
        uint64_t v56 = v54 + 62;
        if (!v29) {
          uint64_t v56 = v55;
        }
        uint64_t v57 = *(void *)((char *)&v50[v44 + 8] + (v56 & 0xFFFFFFFFFFFFFFC0));
        if ((v47 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v57 = 0;
        uint64_t v53 = v10;
        if ((v47 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v47 >= v49) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v50 + (v47 >> 3)) >> (v47 & 7)))
      {
        uint64_t v58 = *v48;
        if (__OFADD__(v58, 7)) {
          goto LABEL_93;
        }
        int64_t v10 = v53 - 8;
        if (v51)
        {
          uint64_t v59 = v58 + 14;
          if (v58 + 7 >= 0) {
            uint64_t v59 = v58 + 7;
          }
          uint64_t v60 = v59 >> 3;
          uint64_t v61 = v60 - 1;
          BOOL v29 = v60 < 1;
          uint64_t v62 = v60 + 62;
          if (!v29) {
            uint64_t v62 = v61;
          }
          uint64_t v63 = *(void *)((char *)&v50[v47 + 8] + (v62 & 0xFFFFFFFFFFFFFFC0));
          BOOL v64 = v63 < v57;
          BOOL v65 = v57 < v63;
          if (a8) {
            BOOL v65 = v64;
          }
          if (v65)
          {
LABEL_76:
            if (v53 == v11)
            {
              v11 -= 8;
              if (v10 < v45) {
                goto LABEL_82;
              }
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        int64_t v10 = v53 - 8;
        if (v51) {
          goto LABEL_76;
        }
      }
      uint64_t v46 = v19 - 8;
      if (v53 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(void *)int64_t v10 = *(void *)v46;
        goto LABEL_82;
      }
      BOOL v66 = v10 >= v19;
      v19 -= 8;
      if (v66) {
        goto LABEL_81;
      }
LABEL_82:
      if (v11 <= v69 || v19 <= v9) {
        goto LABEL_86;
      }
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4) {
    memmove(a4, __src, 8 * v15);
  }
  uint64_t v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    unint64_t v20 = (void *)(a7 + 16);
    do
    {
      unint64_t v21 = *(void *)v11;
      if ((*(void *)v11 & 0x8000000000000000) != 0) {
        goto LABEL_96;
      }
      unint64_t v22 = *(void *)v9;
      swift_beginAccess();
      BOOL v23 = (void *)*v20;
      if (!*v20) {
        goto LABEL_94;
      }
      uint64_t v24 = v23[1];
      if ((uint64_t)v21 >= v24) {
        goto LABEL_96;
      }
      size_t v25 = v23 + 8;
      int v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        uint64_t v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0) {
          uint64_t v27 = *v23 + 14;
        }
        uint64_t v28 = v27 >> 3;
        uint64_t v30 = v28 - 1;
        BOOL v29 = v28 < 1;
        uint64_t v31 = v28 + 62;
        if (!v29) {
          uint64_t v31 = v30;
        }
        uint64_t v32 = *(void *)((char *)&v25[v21 + 8] + (v31 & 0xFFFFFFFFFFFFFFC0));
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v32 = 0;
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v22 >= v24) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)))
      {
        uint64_t v33 = *v23;
        BOOL v34 = __OFADD__(v33, 7);
        uint64_t v35 = v33 + 7;
        if (v34) {
          goto LABEL_92;
        }
        if (!v26) {
          goto LABEL_33;
        }
        uint64_t v36 = v35 / 8;
        uint64_t v37 = v36 - 1;
        BOOL v29 = v36 < 1;
        uint64_t v38 = v36 + 62;
        if (!v29) {
          uint64_t v38 = v37;
        }
        uint64_t v39 = *(void *)((char *)&v25[v22 + 8] + (v38 & 0xFFFFFFFFFFFFFFC0));
        BOOL v40 = v39 < v32;
        BOOL v41 = v32 < v39;
        if (a8) {
          BOOL v41 = v40;
        }
        if (!v41)
        {
LABEL_33:
          uint64_t v42 = v9;
          BOOL v43 = v12 == v9;
          v9 += 8;
          if (v43) {
            goto LABEL_35;
          }
LABEL_34:
          *(void *)uint64_t v12 = *(void *)v42;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      uint64_t v42 = v11;
      BOOL v43 = v12 == v11;
      v11 += 8;
      if (!v43) {
        goto LABEL_34;
      }
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  uint64_t v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  }
  return 1;
}

uint64_t sub_22089E97C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v38 = result;
  if (a3 != a2)
  {
    uint64_t v9 = a3;
    uint64_t v10 = *a4;
    uint64_t v11 = (void *)(a7 + 16);
    uint64_t v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v13 = *(void *)(v10 + 8 * v9);
    uint64_t v14 = v38;
    uint64_t v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v16 = *v15;
      uint64_t result = swift_beginAccess();
      uint64_t v17 = (void *)*v11;
      if (!*v11) {
        goto LABEL_34;
      }
      uint64_t v18 = v17[1];
      if ((uint64_t)v13 >= v18) {
        break;
      }
      uint64_t v19 = v17 + 8;
      int v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        uint64_t v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0) {
          uint64_t v21 = *v17 + 14;
        }
        uint64_t v22 = v21 >> 3;
        uint64_t v24 = v22 - 1;
        BOOL v23 = v22 < 1;
        uint64_t v25 = v22 + 62;
        if (!v23) {
          uint64_t v25 = v24;
        }
        uint64_t v26 = *(void *)((char *)&v19[v13 + 8] + (v25 & 0xFFFFFFFFFFFFFFC0));
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        uint64_t v26 = 0;
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v16 >= v18) {
        break;
      }
      if ((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)))
      {
        uint64_t v27 = *v17;
        BOOL v28 = __OFADD__(v27, 7);
        uint64_t v29 = v27 + 7;
        if (v28) {
          goto LABEL_33;
        }
        if (!v20) {
          goto LABEL_4;
        }
        uint64_t v30 = v29 / 8;
        uint64_t v31 = v30 - 1;
        BOOL v23 = v30 < 1;
        uint64_t v32 = v30 + 62;
        if (!v23) {
          uint64_t v32 = v31;
        }
        uint64_t v33 = *(void *)((char *)&v19[v16 + 8] + (v32 & 0xFFFFFFFFFFFFFFC0));
        BOOL v34 = v33 < v26;
        BOOL v35 = v26 < v33;
        if (a8) {
          BOOL v35 = v34;
        }
        if (!v35) {
          goto LABEL_4;
        }
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10) {
        goto LABEL_35;
      }
      unint64_t v36 = *v15;
      unint64_t v13 = v15[1];
      *uint64_t v15 = v13;
      v15[1] = v36;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_22089EB9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_22093F170();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22089E97C(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_211;
  }
  uint64_t v155 = a3;
  uint64_t v156 = a4;
  int v163 = v9;
  uint64_t v147 = v11;
  uint64_t v164 = v5;
  char v145 = a1;
  if (v10 <= 1)
  {
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v153 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v146 = MEMORY[0x263F8EE78];
    if (v10 != 1)
    {
      unint64_t v80 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_171:
      if (v80 < 2) {
        goto LABEL_184;
      }
      uint64_t v133 = *v145;
      uint64_t v167 = *v145;
      while (1)
      {
        unint64_t v134 = v80 - 2;
        if (v80 < 2) {
          goto LABEL_205;
        }
        if (!v133) {
          goto LABEL_220;
        }
        uint64_t v160 = v15;
        uint64_t v135 = v15 + 32;
        uint64_t v136 = *(void *)&v15[16 * v134 + 32];
        uint64_t v137 = *(void *)&v15[16 * v80 + 24];
        uint64_t v138 = (char *)(v133 + 8 * v136);
        uint64_t v139 = (char *)(v133 + 8 * *(void *)&v135[16 * v80 - 16]);
        uint64_t v140 = (char *)(v133 + 8 * v137);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22089E4A4(v138, v139, v140, v153, a2, v155, v156, v163);
        if (v164) {
          goto LABEL_183;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v137 < v136) {
          goto LABEL_206;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v160 = sub_22080AB70((uint64_t)v160);
        }
        if (v134 >= *((void *)v160 + 2)) {
          goto LABEL_207;
        }
        uint64_t v141 = &v160[16 * v134 + 32];
        *(void *)uint64_t v141 = v136;
        *((void *)v141 + 1) = v137;
        unint64_t v142 = *((void *)v160 + 2);
        if (v80 > v142) {
          goto LABEL_208;
        }
        uint64_t v15 = v160;
        memmove(&v160[16 * v80 + 16], &v160[16 * v80 + 32], 16 * (v142 - v80));
        *((void *)v160 + 2) = v142 - 1;
        unint64_t v80 = v142 - 1;
        uint64_t v133 = v167;
        if (v142 <= 2) {
          goto LABEL_184;
        }
      }
    }
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = sub_22093E8A0();
    *(void *)(v14 + 16) = v13;
    uint64_t v146 = v14;
    uint64_t v153 = (char *)(v14 + 32);
  }
  uint64_t v16 = 0;
  uint64_t v17 = *a1;
  uint64_t v165 = (void **)(a4 + 16);
  uint64_t v144 = *a1 - 8;
  uint64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v166 = *a1;
  uint64_t v150 = v10;
  while (1)
  {
    uint64_t v18 = (char *)v16;
    uint64_t v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      uint64_t v148 = v16 + 1;
      uint64_t v20 = *(void *)(v17 + 8 * v19);
      if (v20 < 0) {
        goto LABEL_222;
      }
      uint64_t v21 = (char *)v16;
      uint64_t v22 = *(void *)(v17 + 8 * v16);
      swift_beginAccess();
      BOOL v23 = *v165;
      if (!*v165) {
        goto LABEL_221;
      }
      if (v20 >= v23[1]) {
        goto LABEL_222;
      }
      uint64_t v157 = v15;
      uint64_t v24 = sub_2208915A0(v20, v23, v156);
      if (v22 < 0) {
        goto LABEL_222;
      }
      uint64_t v27 = v23[1];
      if (v22 >= v27) {
        goto LABEL_222;
      }
      uint64_t v28 = v24;
      char v29 = v25;
      uint64_t v30 = sub_2208915A0(v22, v23, v26);
      if (v29)
      {
        int v33 = 0;
        uint64_t v18 = v21;
      }
      else
      {
        uint64_t v18 = v21;
        if (v31)
        {
          uint64_t v34 = (uint64_t)(v21 + 2);
          if ((uint64_t)(v21 + 2) >= v10)
          {
            uint64_t v15 = v157;
            uint64_t v17 = v166;
            if ((uint64_t)v21 < v34) {
              goto LABEL_68;
            }
            goto LABEL_76;
          }
          int v33 = 1;
          uint64_t v17 = v166;
          goto LABEL_32;
        }
        if (v9) {
          BOOL v32 = v30 < v28;
        }
        else {
          BOOL v32 = v28 < v30;
        }
        int v33 = v32;
      }
      uint64_t v34 = (uint64_t)(v18 + 2);
      uint64_t v17 = v166;
      if ((uint64_t)(v18 + 2) >= v10) {
        goto LABEL_65;
      }
LABEL_32:
      BOOL v35 = v23 + 8;
      if (v10 <= v34 + 1) {
        uint64_t v36 = v34 + 1;
      }
      else {
        uint64_t v36 = v10;
      }
      uint64_t v37 = *(void *)(v17 + 8 * v148);
      while (1)
      {
        uint64_t v38 = v37;
        uint64_t v37 = *(void *)(v17 + 8 * v34);
        if (v37 < 0 || v37 >= v27) {
          goto LABEL_222;
        }
        int v39 = *((unsigned __int8 *)v35 + ((unint64_t)v37 >> 3)) & (1 << (v37 & 7));
        if (v39)
        {
          uint64_t v40 = *v23 + 7;
          if (__OFADD__(*v23, 7)) {
            goto LABEL_202;
          }
          if (v40 < 0) {
            uint64_t v40 = *v23 + 14;
          }
          uint64_t v41 = v40 >> 3;
          uint64_t v42 = v41 - 1;
          BOOL v32 = v41 < 1;
          uint64_t v43 = v41 + 62;
          if (!v32) {
            uint64_t v43 = v42;
          }
          uint64_t v44 = *(void *)((char *)&v35[v37 + 8] + (v43 & 0xFFFFFFFFFFFFFFC0));
          if (v38 < 0) {
            goto LABEL_222;
          }
        }
        else
        {
          uint64_t v44 = 0;
          if (v38 < 0) {
            goto LABEL_222;
          }
        }
        if (v38 >= v27) {
          goto LABEL_222;
        }
        if ((*((unsigned __int8 *)v35 + ((unint64_t)v38 >> 3)) >> (v38 & 7)))
        {
          if (__OFADD__(*v23, 7)) {
            goto LABEL_203;
          }
          if (!v39)
          {
LABEL_36:
            if (v33)
            {
              uint64_t v15 = v157;
              if (v34 < (uint64_t)v18) {
                goto LABEL_213;
              }
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          uint64_t v45 = *v23 + 14;
          if (*v23 + 7 >= 0) {
            uint64_t v45 = *v23 + 7;
          }
          uint64_t v46 = v45 >> 3;
          uint64_t v47 = v46 - 1;
          BOOL v32 = v46 < 1;
          uint64_t v48 = v46 + 62;
          if (!v32) {
            uint64_t v48 = v47;
          }
          uint64_t v49 = *(void *)((char *)&v35[v38 + 8] + (v48 & 0xFFFFFFFFFFFFFFC0));
          BOOL v50 = v49 < v44;
          int v51 = v44 < v49;
          if (v9) {
            int v51 = v50;
          }
          if (v33 != v51) {
            goto LABEL_65;
          }
        }
        else
        {
          if (!v39) {
            goto LABEL_36;
          }
          if ((v33 & 1) == 0)
          {
            uint64_t v19 = v34;
            uint64_t v15 = v157;
            break;
          }
        }
LABEL_37:
        if (++v34 >= v10)
        {
          uint64_t v34 = v36;
LABEL_65:
          uint64_t v19 = v34;
          uint64_t v15 = v157;
          if (!v33) {
            break;
          }
          if (v34 < (uint64_t)v18) {
            goto LABEL_213;
          }
LABEL_67:
          if ((uint64_t)v18 < v34)
          {
LABEL_68:
            uint64_t v52 = v34 - 1;
            uint64_t v53 = v18;
            do
            {
              if (v53 != (char *)v52)
              {
                if (!v17) {
                  goto LABEL_219;
                }
                uint64_t v54 = *(void *)(v17 + 8 * (void)v53);
                *(void *)(v17 + 8 * (void)v53) = *(void *)(v17 + 8 * v52);
                *(void *)(v17 + 8 * v52) = v54;
              }
              BOOL v32 = (uint64_t)++v53 < v52--;
            }
            while (v32);
          }
LABEL_76:
          uint64_t v19 = v34;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_210;
      }
      if (v19 - (uint64_t)v18 < v147)
      {
        if (__OFADD__(v18, v147)) {
          goto LABEL_214;
        }
        if ((uint64_t)&v18[v147] >= v10) {
          uint64_t v55 = v10;
        }
        else {
          uint64_t v55 = (uint64_t)&v18[v147];
        }
        if (v55 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          uint64_t result = sub_22093F090();
          __break(1u);
          return result;
        }
        if (v19 != v55)
        {
          uint64_t v158 = v15;
          __dst = v18;
          uint64_t v56 = (unint64_t *)(v144 + 8 * v19);
          uint64_t v151 = v55;
          do
          {
            unint64_t v57 = *(void *)(v17 + 8 * v19);
            uint64_t v58 = v56;
            do
            {
              if ((v57 & 0x8000000000000000) != 0) {
                goto LABEL_222;
              }
              unint64_t v59 = *v58;
              swift_beginAccess();
              uint64_t v60 = *v165;
              if (!*v165) {
                goto LABEL_216;
              }
              uint64_t v61 = v60[1];
              uint64_t v17 = v166;
              if ((uint64_t)v57 >= v61) {
                goto LABEL_222;
              }
              uint64_t v62 = v60 + 8;
              int v63 = *((unsigned __int8 *)v60 + (v57 >> 3) + 64) & (1 << (v57 & 7));
              if (v63)
              {
                uint64_t v64 = *v60 + 7;
                if (__OFADD__(*v60, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v64 < 0) {
                  uint64_t v64 = *v60 + 14;
                }
                uint64_t v65 = v64 >> 3;
                uint64_t v66 = v65 - 1;
                BOOL v32 = v65 < 1;
                uint64_t v67 = v65 + 62;
                if (!v32) {
                  uint64_t v67 = v66;
                }
                uint64_t v68 = *(void *)((char *)&v62[v57 + 8] + (v67 & 0xFFFFFFFFFFFFFFC0));
                if ((v59 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              else
              {
                uint64_t v68 = 0;
                if ((v59 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              if ((uint64_t)v59 >= v61) {
                goto LABEL_222;
              }
              if ((*((unsigned __int8 *)v62 + (v59 >> 3)) >> (v59 & 7)))
              {
                uint64_t v69 = *v60;
                BOOL v94 = __OFADD__(v69, 7);
                uint64_t v70 = v69 + 7;
                if (v94) {
                  goto LABEL_187;
                }
                if (!v63) {
                  break;
                }
                uint64_t v71 = v70 / 8;
                uint64_t v72 = v71 - 1;
                BOOL v32 = v71 < 1;
                uint64_t v73 = v71 + 62;
                if (!v32) {
                  uint64_t v73 = v72;
                }
                uint64_t v74 = *(void *)((char *)&v62[v59 + 8] + (v73 & 0xFFFFFFFFFFFFFFC0));
                BOOL v75 = v74 < v68;
                BOOL v76 = v68 < v74;
                if (v9) {
                  BOOL v76 = v75;
                }
                if (!v76) {
                  break;
                }
              }
              else if (!v63)
              {
                break;
              }
              if (!v166) {
                goto LABEL_217;
              }
              unint64_t v77 = *v58;
              unint64_t v57 = v58[1];
              *uint64_t v58 = v57;
              v58[1] = v77;
              --v58;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v56;
            uint64_t v18 = __dst;
          }
          while (v19 != v151);
          uint64_t v19 = v151;
          uint64_t v15 = v158;
        }
      }
    }
    if (v19 < (uint64_t)v18) {
      goto LABEL_209;
    }
    uint64_t v149 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v79 = *((void *)v15 + 2);
    unint64_t v78 = *((void *)v15 + 3);
    unint64_t v80 = v79 + 1;
    uint64_t v17 = v166;
    if (v79 >= v78 >> 1)
    {
      uint64_t v15 = sub_22081B3EC((char *)(v78 > 1), v79 + 1, 1, v15);
      uint64_t v17 = v166;
    }
    *((void *)v15 + 2) = v80;
    uint64_t v81 = v15 + 32;
    unint64_t v82 = &v15[16 * v79 + 32];
    *(void *)unint64_t v82 = v18;
    *((void *)v82 + 1) = v149;
    if (v79) {
      break;
    }
    unint64_t v80 = 1;
LABEL_165:
    uint64_t v16 = v149;
    if (v149 >= v10) {
      goto LABEL_171;
    }
  }
  uint64_t v159 = v15;
  uint64_t v152 = v15 + 32;
  while (1)
  {
    unint64_t v83 = v80 - 1;
    if (v80 >= 4)
    {
      uint64_t v88 = &v81[16 * v80];
      uint64_t v89 = *((void *)v88 - 8);
      uint64_t v90 = *((void *)v88 - 7);
      BOOL v94 = __OFSUB__(v90, v89);
      uint64_t v91 = v90 - v89;
      if (v94) {
        goto LABEL_192;
      }
      uint64_t v93 = *((void *)v88 - 6);
      uint64_t v92 = *((void *)v88 - 5);
      BOOL v94 = __OFSUB__(v92, v93);
      uint64_t v86 = v92 - v93;
      char v87 = v94;
      if (v94) {
        goto LABEL_193;
      }
      unint64_t v95 = v80 - 2;
      uint64_t v96 = &v81[16 * v80 - 32];
      uint64_t v98 = *(void *)v96;
      uint64_t v97 = *((void *)v96 + 1);
      BOOL v94 = __OFSUB__(v97, v98);
      uint64_t v99 = v97 - v98;
      if (v94) {
        goto LABEL_194;
      }
      BOOL v94 = __OFADD__(v86, v99);
      uint64_t v100 = v86 + v99;
      if (v94) {
        goto LABEL_197;
      }
      if (v100 >= v91)
      {
        uint64_t v118 = &v81[16 * v83];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v94 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v94) {
          goto LABEL_204;
        }
        BOOL v111 = v86 < v121;
        goto LABEL_154;
      }
    }
    else
    {
      if (v80 != 3)
      {
        uint64_t v112 = *((void *)v15 + 4);
        uint64_t v113 = *((void *)v15 + 5);
        BOOL v94 = __OFSUB__(v113, v112);
        uint64_t v105 = v113 - v112;
        char v106 = v94;
        goto LABEL_148;
      }
      uint64_t v85 = *((void *)v15 + 4);
      uint64_t v84 = *((void *)v15 + 5);
      BOOL v94 = __OFSUB__(v84, v85);
      uint64_t v86 = v84 - v85;
      char v87 = v94;
    }
    if (v87) {
      goto LABEL_195;
    }
    unint64_t v95 = v80 - 2;
    uint64_t v101 = &v81[16 * v80 - 32];
    uint64_t v103 = *(void *)v101;
    uint64_t v102 = *((void *)v101 + 1);
    BOOL v104 = __OFSUB__(v102, v103);
    uint64_t v105 = v102 - v103;
    char v106 = v104;
    if (v104) {
      goto LABEL_198;
    }
    uint64_t v107 = &v81[16 * v83];
    uint64_t v109 = *(void *)v107;
    uint64_t v108 = *((void *)v107 + 1);
    BOOL v94 = __OFSUB__(v108, v109);
    uint64_t v110 = v108 - v109;
    if (v94) {
      goto LABEL_199;
    }
    if (__OFADD__(v105, v110)) {
      goto LABEL_201;
    }
    if (v105 + v110 >= v86)
    {
      BOOL v111 = v86 < v110;
LABEL_154:
      if (v111) {
        unint64_t v83 = v95;
      }
      goto LABEL_156;
    }
LABEL_148:
    if (v106) {
      goto LABEL_196;
    }
    uint64_t v114 = &v81[16 * v83];
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *((void *)v114 + 1);
    BOOL v94 = __OFSUB__(v115, v116);
    uint64_t v117 = v115 - v116;
    if (v94) {
      goto LABEL_200;
    }
    if (v117 < v105) {
      goto LABEL_165;
    }
LABEL_156:
    unint64_t v122 = v83 - 1;
    if (v83 - 1 >= v80) {
      goto LABEL_188;
    }
    if (!v17) {
      goto LABEL_218;
    }
    char v123 = &v81[16 * v122];
    uint64_t v124 = v81;
    uint64_t v125 = *(void *)v123;
    unint64_t v126 = v83;
    uint64_t v127 = &v124[16 * v83];
    uint64_t v128 = *((void *)v127 + 1);
    uint64_t v129 = (char *)(v17 + 8 * *(void *)v123);
    __dsta = (char *)(v17 + 8 * *(void *)v127);
    uint64_t v130 = (char *)(v17 + 8 * v128);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22089E4A4(v129, __dsta, v130, v153, a2, v155, v156, v163);
    if (v164) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v159;
    if (v128 < v125) {
      goto LABEL_189;
    }
    if (v126 > *((void *)v159 + 2)) {
      goto LABEL_190;
    }
    unint64_t v131 = v126;
    *(void *)char v123 = v125;
    uint64_t v81 = v152;
    *(void *)&v152[16 * v122 + 8] = v128;
    unint64_t v132 = *((void *)v159 + 2);
    if (v131 >= v132) {
      goto LABEL_191;
    }
    unint64_t v80 = v132 - 1;
    memmove(v127, v127 + 16, 16 * (v132 - 1 - v131));
    *((void *)v159 + 2) = v132 - 1;
    int v9 = v163;
    uint64_t v10 = v150;
    uint64_t v17 = v166;
    if (v132 <= 2) {
      goto LABEL_165;
    }
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_184:
  swift_bridgeObjectRelease();
  *(void *)(v146 + 16) = 0;
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22089F704(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v9 = a4;
  uint64_t v10 = a3;
  uint64_t v11 = __dst;
  uint64_t v12 = __src;
  int64_t v13 = __dst - __src;
  int64_t v14 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v14 = __dst - __src;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v16 = a3 - __dst;
  uint64_t v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0) {
    uint64_t v17 = a3 - __dst;
  }
  uint64_t v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4) {
      memmove(a4, __dst, 8 * v18);
    }
    uint64_t v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8) {
      goto LABEL_86;
    }
    uint64_t v68 = (void *)(a7 + 16);
    uint64_t v67 = v12;
    while (1)
    {
      unint64_t v43 = *((void *)v19 - 1);
      if ((v43 & 0x8000000000000000) != 0)
      {
LABEL_96:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v44 = v11;
      uint64_t v45 = v11 - 8;
      unint64_t v46 = *((void *)v11 - 1);
      swift_beginAccess();
      uint64_t v47 = (void *)*v68;
      if (!*v68) {
        goto LABEL_95;
      }
      uint64_t v48 = v47[1];
      if ((uint64_t)v43 >= v48) {
        goto LABEL_96;
      }
      uint64_t v49 = v47 + 8;
      int v50 = *((unsigned __int8 *)v47 + (v43 >> 3) + 64) & (1 << (v43 & 7));
      if (v50)
      {
        uint64_t v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v52 = v10;
        if (v51 < 0) {
          uint64_t v51 = *v47 + 14;
        }
        uint64_t v53 = v51 >> 3;
        uint64_t v54 = v53 - 1;
        BOOL v29 = v53 < 1;
        uint64_t v55 = v53 + 62;
        if (!v29) {
          uint64_t v55 = v54;
        }
        short float v56 = *(short float *)((char *)v49 + 2 * v43 + (v55 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        LOWORD(v56) = 0;
        uint64_t v52 = v10;
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v46 >= v48) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)))
      {
        uint64_t v57 = *v47;
        if (__OFADD__(v57, 7)) {
          goto LABEL_93;
        }
        uint64_t v10 = v52 - 8;
        if (v50)
        {
          uint64_t v58 = v57 + 14;
          if (v57 + 7 >= 0) {
            uint64_t v58 = v57 + 7;
          }
          uint64_t v59 = v58 >> 3;
          uint64_t v60 = v59 - 1;
          BOOL v29 = v59 < 1;
          uint64_t v61 = v59 + 62;
          if (!v29) {
            uint64_t v61 = v60;
          }
          short float v62 = *(short float *)((char *)v49 + 2 * v46 + (v61 & 0xFFFFFFFFFFFFFFC0) + 64);
          BOOL v63 = v62 < v56;
          if ((a8 & 1) == 0) {
            BOOL v63 = v56 < v62;
          }
          if (v63)
          {
LABEL_76:
            if (v52 == v11)
            {
              v11 -= 8;
              if (v10 < v44) {
                goto LABEL_82;
              }
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        uint64_t v10 = v52 - 8;
        if (v50) {
          goto LABEL_76;
        }
      }
      uint64_t v45 = v19 - 8;
      if (v52 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(void *)uint64_t v10 = *(void *)v45;
        goto LABEL_82;
      }
      BOOL v64 = v10 >= v19;
      v19 -= 8;
      if (v64) {
        goto LABEL_81;
      }
LABEL_82:
      if (v11 <= v67 || v19 <= v9) {
        goto LABEL_86;
      }
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4) {
    memmove(a4, __src, 8 * v15);
  }
  uint64_t v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    uint64_t v20 = (void *)(a7 + 16);
    do
    {
      unint64_t v21 = *(void *)v11;
      if ((*(void *)v11 & 0x8000000000000000) != 0) {
        goto LABEL_96;
      }
      unint64_t v22 = *(void *)v9;
      swift_beginAccess();
      BOOL v23 = (void *)*v20;
      if (!*v20) {
        goto LABEL_94;
      }
      uint64_t v24 = v23[1];
      if ((uint64_t)v21 >= v24) {
        goto LABEL_96;
      }
      char v25 = v23 + 8;
      int v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        uint64_t v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0) {
          uint64_t v27 = *v23 + 14;
        }
        uint64_t v28 = v27 >> 3;
        uint64_t v30 = v28 - 1;
        BOOL v29 = v28 < 1;
        uint64_t v31 = v28 + 62;
        if (!v29) {
          uint64_t v31 = v30;
        }
        short float v32 = *(short float *)((char *)v25 + 2 * v21 + (v31 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        LOWORD(v32) = 0;
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v22 >= v24) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)))
      {
        uint64_t v33 = *v23;
        BOOL v34 = __OFADD__(v33, 7);
        uint64_t v35 = v33 + 7;
        if (v34) {
          goto LABEL_92;
        }
        if (!v26) {
          goto LABEL_33;
        }
        uint64_t v36 = v35 / 8;
        uint64_t v37 = v36 - 1;
        BOOL v29 = v36 < 1;
        uint64_t v38 = v36 + 62;
        if (!v29) {
          uint64_t v38 = v37;
        }
        short float v39 = *(short float *)((char *)v25 + 2 * v22 + (v38 & 0xFFFFFFFFFFFFFFC0) + 64);
        BOOL v40 = v39 < v32;
        if ((a8 & 1) == 0) {
          BOOL v40 = v32 < v39;
        }
        if (!v40)
        {
LABEL_33:
          uint64_t v41 = v9;
          BOOL v42 = v12 == v9;
          v9 += 8;
          if (v42) {
            goto LABEL_35;
          }
LABEL_34:
          *(void *)uint64_t v12 = *(void *)v41;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      uint64_t v41 = v11;
      BOOL v42 = v12 == v11;
      v11 += 8;
      if (!v42) {
        goto LABEL_34;
      }
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  uint64_t v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  }
  return 1;
}

uint64_t sub_22089FBDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v37 = result;
  if (a3 != a2)
  {
    uint64_t v9 = a3;
    uint64_t v10 = *a4;
    uint64_t v11 = (void *)(a7 + 16);
    uint64_t v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v13 = *(void *)(v10 + 8 * v9);
    uint64_t v14 = v37;
    uint64_t v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v16 = *v15;
      uint64_t result = swift_beginAccess();
      uint64_t v17 = (void *)*v11;
      if (!*v11) {
        goto LABEL_34;
      }
      uint64_t v18 = v17[1];
      if ((uint64_t)v13 >= v18) {
        break;
      }
      uint64_t v19 = v17 + 8;
      int v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        uint64_t v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0) {
          uint64_t v21 = *v17 + 14;
        }
        uint64_t v22 = v21 >> 3;
        uint64_t v24 = v22 - 1;
        BOOL v23 = v22 < 1;
        uint64_t v25 = v22 + 62;
        if (!v23) {
          uint64_t v25 = v24;
        }
        short float v26 = *(short float *)((char *)v19 + 2 * v13 + (v25 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        LOWORD(v26) = 0;
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v16 >= v18) {
        break;
      }
      if ((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)))
      {
        uint64_t v27 = *v17;
        BOOL v28 = __OFADD__(v27, 7);
        uint64_t v29 = v27 + 7;
        if (v28) {
          goto LABEL_33;
        }
        if (!v20) {
          goto LABEL_4;
        }
        uint64_t v30 = v29 / 8;
        uint64_t v31 = v30 - 1;
        BOOL v23 = v30 < 1;
        uint64_t v32 = v30 + 62;
        if (!v23) {
          uint64_t v32 = v31;
        }
        short float v33 = *(short float *)((char *)v19 + 2 * v16 + (v32 & 0xFFFFFFFFFFFFFFC0) + 64);
        BOOL v34 = v33 < v26;
        if ((a8 & 1) == 0) {
          BOOL v34 = v26 < v33;
        }
        if (!v34) {
          goto LABEL_4;
        }
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10) {
        goto LABEL_35;
      }
      unint64_t v35 = *v15;
      unint64_t v13 = v15[1];
      *uint64_t v15 = v13;
      v15[1] = v35;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_22089FDFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_22093F170();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22089FBDC(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_211;
  }
  uint64_t v148 = a4;
  uint64_t v149 = a3;
  int v158 = v9;
  uint64_t v142 = v11;
  uint64_t v159 = v5;
  uint64_t v140 = a1;
  if (v10 <= 1)
  {
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v146 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v141 = MEMORY[0x263F8EE78];
    if (v10 != 1)
    {
      unint64_t v75 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_171:
      if (v75 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(void *)(v141 + 16) = 0;
        goto LABEL_184;
      }
      uint64_t v128 = *v140;
      uint64_t v162 = *v140;
      while (1)
      {
        unint64_t v129 = v75 - 2;
        if (v75 < 2) {
          goto LABEL_205;
        }
        if (!v128) {
          goto LABEL_220;
        }
        uint64_t v152 = v15;
        uint64_t v130 = v15 + 32;
        uint64_t v131 = *(void *)&v15[16 * v129 + 32];
        uint64_t v132 = *(void *)&v15[16 * v75 + 24];
        uint64_t v133 = (char *)(v128 + 8 * v131);
        unint64_t v134 = (char *)(v128 + 8 * *(void *)&v130[16 * v75 - 16]);
        uint64_t v135 = (char *)(v128 + 8 * v132);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22089F704(v133, v134, v135, v146, a2, v149, v148, v158);
        if (v159) {
          goto LABEL_183;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v132 < v131) {
          goto LABEL_206;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v152 = sub_22080AB70((uint64_t)v152);
        }
        if (v129 >= *((void *)v152 + 2)) {
          goto LABEL_207;
        }
        uint64_t v136 = &v152[16 * v129 + 32];
        *(void *)uint64_t v136 = v131;
        *((void *)v136 + 1) = v132;
        unint64_t v137 = *((void *)v152 + 2);
        if (v75 > v137) {
          goto LABEL_208;
        }
        uint64_t v15 = v152;
        memmove(&v152[16 * v75 + 16], &v152[16 * v75 + 32], 16 * (v137 - v75));
        *((void *)v152 + 2) = v137 - 1;
        unint64_t v75 = v137 - 1;
        uint64_t v128 = v162;
        if (v137 <= 2) {
          goto LABEL_182;
        }
      }
    }
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = sub_22093E8A0();
    *(void *)(v14 + 16) = v13;
    uint64_t v141 = v14;
    uint64_t v146 = (char *)(v14 + 32);
  }
  uint64_t v16 = 0;
  uint64_t v17 = *a1;
  uint64_t v160 = (void **)(a4 + 16);
  uint64_t v139 = *a1 - 8;
  uint64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v161 = *a1;
  uint64_t v145 = v10;
  while (1)
  {
    uint64_t v18 = (char *)v16;
    uint64_t v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      __dst = (char *)v16;
      uint64_t v143 = (char *)(v16 + 1);
      uint64_t v20 = *(void *)(v17 + 8 * v19);
      if (v20 < 0) {
        goto LABEL_222;
      }
      uint64_t v21 = *(void *)(v17 + 8 * v16);
      swift_beginAccess();
      uint64_t v22 = *v160;
      if (!*v160) {
        goto LABEL_221;
      }
      uint64_t v23 = v22[1];
      if (v20 >= v23) {
        goto LABEL_222;
      }
      int v24 = sub_220891AE0(v20, v22, v23);
      if (v21 < 0) {
        goto LABEL_222;
      }
      uint64_t v26 = v22[1];
      if (v21 >= v26) {
        goto LABEL_222;
      }
      int v27 = v24;
      int v28 = sub_220891AE0(v21, v22, v25);
      if ((v27 & 0x10000) != 0)
      {
        int v30 = 0;
        uint64_t v17 = v161;
        uint64_t v18 = __dst;
      }
      else
      {
        uint64_t v17 = v161;
        uint64_t v18 = __dst;
        if ((v28 & 0x10000) != 0)
        {
          uint64_t v31 = (uint64_t)(__dst + 2);
          if ((uint64_t)(__dst + 2) >= v10)
          {
            if ((uint64_t)__dst < v31) {
              goto LABEL_68;
            }
            goto LABEL_76;
          }
          int v30 = 1;
          goto LABEL_32;
        }
        if (v9) {
          BOOL v29 = *(short float *)&v28 < *(short float *)&v27;
        }
        else {
          BOOL v29 = *(short float *)&v27 < *(short float *)&v28;
        }
        int v30 = v29;
      }
      uint64_t v31 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10) {
        goto LABEL_65;
      }
LABEL_32:
      uint64_t v32 = v22 + 8;
      if (v10 <= v31 + 1) {
        uint64_t v33 = v31 + 1;
      }
      else {
        uint64_t v33 = v10;
      }
      uint64_t v34 = *(void *)(v17 + 8 * (void)v143);
      while (1)
      {
        uint64_t v35 = v34;
        uint64_t v34 = *(void *)(v17 + 8 * v31);
        if (v34 < 0 || v34 >= v26) {
          goto LABEL_222;
        }
        int v36 = *((unsigned __int8 *)v32 + ((unint64_t)v34 >> 3)) & (1 << (v34 & 7));
        if (v36)
        {
          uint64_t v37 = *v22 + 7;
          if (__OFADD__(*v22, 7)) {
            goto LABEL_202;
          }
          if (v37 < 0) {
            uint64_t v37 = *v22 + 14;
          }
          uint64_t v38 = v37 >> 3;
          uint64_t v39 = v38 - 1;
          BOOL v106 = v38 < 1;
          uint64_t v40 = v38 + 62;
          if (!v106) {
            uint64_t v40 = v39;
          }
          short float v41 = *(short float *)((char *)v32 + 2 * v34 + (v40 & 0xFFFFFFFFFFFFFFC0) + 64);
          if (v35 < 0) {
            goto LABEL_222;
          }
        }
        else
        {
          LOWORD(v41) = 0;
          if (v35 < 0) {
            goto LABEL_222;
          }
        }
        if (v35 >= v26) {
          goto LABEL_222;
        }
        if ((*((unsigned __int8 *)v32 + ((unint64_t)v35 >> 3)) >> (v35 & 7)))
        {
          if (__OFADD__(*v22, 7)) {
            goto LABEL_203;
          }
          if (!v36)
          {
LABEL_36:
            if (v30)
            {
              if (v31 < (uint64_t)v18) {
                goto LABEL_213;
              }
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          uint64_t v42 = *v22 + 14;
          if (*v22 + 7 >= 0) {
            uint64_t v42 = *v22 + 7;
          }
          uint64_t v43 = v42 >> 3;
          uint64_t v44 = v43 - 1;
          BOOL v106 = v43 < 1;
          uint64_t v45 = v43 + 62;
          if (!v106) {
            uint64_t v45 = v44;
          }
          short float v46 = *(short float *)((char *)v32 + 2 * v35 + (v45 & 0xFFFFFFFFFFFFFFC0) + 64);
          int v47 = v46 < v41;
          if (!v9) {
            int v47 = v41 < v46;
          }
          if (v30 != v47) {
            goto LABEL_65;
          }
        }
        else
        {
          if (!v36) {
            goto LABEL_36;
          }
          if ((v30 & 1) == 0)
          {
            uint64_t v19 = v31;
            break;
          }
        }
LABEL_37:
        if (++v31 >= v10)
        {
          uint64_t v31 = v33;
LABEL_65:
          uint64_t v19 = v31;
          if (!v30) {
            break;
          }
          if (v31 < (uint64_t)v18) {
            goto LABEL_213;
          }
LABEL_67:
          if ((uint64_t)v18 < v31)
          {
LABEL_68:
            uint64_t v48 = v31 - 1;
            uint64_t v49 = v18;
            do
            {
              if (v49 != (char *)v48)
              {
                if (!v17) {
                  goto LABEL_219;
                }
                uint64_t v50 = *(void *)(v17 + 8 * (void)v49);
                *(void *)(v17 + 8 * (void)v49) = *(void *)(v17 + 8 * v48);
                *(void *)(v17 + 8 * v48) = v50;
              }
              BOOL v106 = (uint64_t)++v49 < v48--;
            }
            while (v106);
          }
LABEL_76:
          uint64_t v19 = v31;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_210;
      }
      if (v19 - (uint64_t)v18 < v142)
      {
        if (__OFADD__(v18, v142)) {
          goto LABEL_214;
        }
        if ((uint64_t)&v18[v142] >= v10) {
          uint64_t v51 = v10;
        }
        else {
          uint64_t v51 = (uint64_t)&v18[v142];
        }
        if (v51 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          uint64_t result = sub_22093F090();
          __break(1u);
          return result;
        }
        if (v19 != v51)
        {
          uint64_t v150 = v15;
          __dsta = v18;
          uint64_t v52 = (unint64_t *)(v139 + 8 * v19);
          uint64_t v156 = v51;
          do
          {
            unint64_t v53 = *(void *)(v17 + 8 * v19);
            uint64_t v54 = v52;
            do
            {
              if ((v53 & 0x8000000000000000) != 0) {
                goto LABEL_222;
              }
              unint64_t v55 = *v54;
              swift_beginAccess();
              short float v56 = *v160;
              if (!*v160) {
                goto LABEL_216;
              }
              uint64_t v57 = v56[1];
              uint64_t v17 = v161;
              if ((uint64_t)v53 >= v57) {
                goto LABEL_222;
              }
              uint64_t v58 = v56 + 8;
              int v59 = *((unsigned __int8 *)v56 + (v53 >> 3) + 64) & (1 << (v53 & 7));
              if (v59)
              {
                uint64_t v60 = *v56 + 7;
                if (__OFADD__(*v56, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v60 < 0) {
                  uint64_t v60 = *v56 + 14;
                }
                uint64_t v61 = v60 >> 3;
                uint64_t v62 = v61 - 1;
                BOOL v106 = v61 < 1;
                uint64_t v63 = v61 + 62;
                if (!v106) {
                  uint64_t v63 = v62;
                }
                short float v64 = *(short float *)((char *)v58 + 2 * v53 + (v63 & 0xFFFFFFFFFFFFFFC0) + 64);
                if ((v55 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              else
              {
                LOWORD(v64) = 0;
                if ((v55 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              if ((uint64_t)v55 >= v57) {
                goto LABEL_222;
              }
              if ((*((unsigned __int8 *)v58 + (v55 >> 3)) >> (v55 & 7)))
              {
                uint64_t v65 = *v56;
                BOOL v89 = __OFADD__(v65, 7);
                uint64_t v66 = v65 + 7;
                if (v89) {
                  goto LABEL_187;
                }
                if (!v59) {
                  break;
                }
                uint64_t v67 = v66 / 8;
                uint64_t v68 = v67 - 1;
                BOOL v106 = v67 < 1;
                uint64_t v69 = v67 + 62;
                if (!v106) {
                  uint64_t v69 = v68;
                }
                short float v70 = *(short float *)((char *)v58 + 2 * v55 + (v69 & 0xFFFFFFFFFFFFFFC0) + 64);
                BOOL v71 = v70 < v64;
                if (!v9) {
                  BOOL v71 = v64 < v70;
                }
                if (!v71) {
                  break;
                }
              }
              else if (!v59)
              {
                break;
              }
              if (!v161) {
                goto LABEL_217;
              }
              unint64_t v72 = *v54;
              unint64_t v53 = v54[1];
              *uint64_t v54 = v53;
              v54[1] = v72;
              --v54;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v52;
            uint64_t v18 = __dsta;
          }
          while (v19 != v156);
          uint64_t v19 = v156;
          uint64_t v15 = v150;
        }
      }
    }
    if (v19 < (uint64_t)v18) {
      goto LABEL_209;
    }
    uint64_t v144 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v74 = *((void *)v15 + 2);
    unint64_t v73 = *((void *)v15 + 3);
    unint64_t v75 = v74 + 1;
    uint64_t v17 = v161;
    if (v74 >= v73 >> 1)
    {
      uint64_t v127 = sub_22081B3EC((char *)(v73 > 1), v74 + 1, 1, v15);
      uint64_t v17 = v161;
      uint64_t v15 = v127;
    }
    *((void *)v15 + 2) = v75;
    BOOL v76 = v15 + 32;
    unint64_t v77 = &v15[16 * v74 + 32];
    *(void *)unint64_t v77 = v18;
    *((void *)v77 + 1) = v144;
    if (v74) {
      break;
    }
    unint64_t v75 = 1;
LABEL_165:
    uint64_t v16 = v144;
    if (v144 >= v10) {
      goto LABEL_171;
    }
  }
  uint64_t v151 = v15;
  uint64_t v157 = v15 + 32;
  while (1)
  {
    unint64_t v78 = v75 - 1;
    if (v75 >= 4)
    {
      unint64_t v83 = &v76[16 * v75];
      uint64_t v84 = *((void *)v83 - 8);
      uint64_t v85 = *((void *)v83 - 7);
      BOOL v89 = __OFSUB__(v85, v84);
      uint64_t v86 = v85 - v84;
      if (v89) {
        goto LABEL_192;
      }
      uint64_t v88 = *((void *)v83 - 6);
      uint64_t v87 = *((void *)v83 - 5);
      BOOL v89 = __OFSUB__(v87, v88);
      uint64_t v81 = v87 - v88;
      char v82 = v89;
      if (v89) {
        goto LABEL_193;
      }
      unint64_t v90 = v75 - 2;
      uint64_t v91 = &v76[16 * v75 - 32];
      uint64_t v93 = *(void *)v91;
      uint64_t v92 = *((void *)v91 + 1);
      BOOL v89 = __OFSUB__(v92, v93);
      uint64_t v94 = v92 - v93;
      if (v89) {
        goto LABEL_194;
      }
      BOOL v89 = __OFADD__(v81, v94);
      uint64_t v95 = v81 + v94;
      if (v89) {
        goto LABEL_197;
      }
      if (v95 >= v86)
      {
        uint64_t v113 = &v76[16 * v78];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v89 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v89) {
          goto LABEL_204;
        }
        BOOL v106 = v81 < v116;
        goto LABEL_154;
      }
    }
    else
    {
      if (v75 != 3)
      {
        uint64_t v107 = *((void *)v15 + 4);
        uint64_t v108 = *((void *)v15 + 5);
        BOOL v89 = __OFSUB__(v108, v107);
        uint64_t v100 = v108 - v107;
        char v101 = v89;
        goto LABEL_148;
      }
      uint64_t v80 = *((void *)v15 + 4);
      uint64_t v79 = *((void *)v15 + 5);
      BOOL v89 = __OFSUB__(v79, v80);
      uint64_t v81 = v79 - v80;
      char v82 = v89;
    }
    if (v82) {
      goto LABEL_195;
    }
    unint64_t v90 = v75 - 2;
    uint64_t v96 = &v76[16 * v75 - 32];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v99 = __OFSUB__(v97, v98);
    uint64_t v100 = v97 - v98;
    char v101 = v99;
    if (v99) {
      goto LABEL_198;
    }
    uint64_t v102 = &v76[16 * v78];
    uint64_t v104 = *(void *)v102;
    uint64_t v103 = *((void *)v102 + 1);
    BOOL v89 = __OFSUB__(v103, v104);
    uint64_t v105 = v103 - v104;
    if (v89) {
      goto LABEL_199;
    }
    if (__OFADD__(v100, v105)) {
      goto LABEL_201;
    }
    if (v100 + v105 >= v81)
    {
      BOOL v106 = v81 < v105;
LABEL_154:
      if (v106) {
        unint64_t v78 = v90;
      }
      goto LABEL_156;
    }
LABEL_148:
    if (v101) {
      goto LABEL_196;
    }
    uint64_t v109 = &v76[16 * v78];
    uint64_t v111 = *(void *)v109;
    uint64_t v110 = *((void *)v109 + 1);
    BOOL v89 = __OFSUB__(v110, v111);
    uint64_t v112 = v110 - v111;
    if (v89) {
      goto LABEL_200;
    }
    if (v112 < v100) {
      goto LABEL_165;
    }
LABEL_156:
    unint64_t v117 = v78 - 1;
    if (v78 - 1 >= v75) {
      goto LABEL_188;
    }
    if (!v17) {
      goto LABEL_218;
    }
    uint64_t v118 = &v76[16 * v117];
    uint64_t v119 = *(void *)v118;
    unint64_t v120 = v78;
    uint64_t v121 = &v76[16 * v78];
    uint64_t v122 = *((void *)v121 + 1);
    char v123 = (char *)(v17 + 8 * *(void *)v118);
    __dstb = (char *)(v17 + 8 * *(void *)v121);
    uint64_t v124 = (char *)(v17 + 8 * v122);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22089F704(v123, __dstb, v124, v146, a2, v149, v148, v158);
    if (v159) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v151;
    if (v122 < v119) {
      goto LABEL_189;
    }
    if (v120 > *((void *)v151 + 2)) {
      goto LABEL_190;
    }
    unint64_t v125 = v120;
    *(void *)uint64_t v118 = v119;
    *(void *)&v157[16 * v117 + 8] = v122;
    unint64_t v126 = *((void *)v151 + 2);
    if (v125 >= v126) {
      goto LABEL_191;
    }
    unint64_t v75 = v126 - 1;
    memmove(v121, v121 + 16, 16 * (v126 - 1 - v125));
    BOOL v76 = v157;
    *((void *)v151 + 2) = v126 - 1;
    int v9 = v158;
    uint64_t v10 = v145;
    uint64_t v17 = v161;
    if (v126 <= 2) {
      goto LABEL_165;
    }
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v141 + 16) = 0;
LABEL_184:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A0960(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v9 = a4;
  uint64_t v10 = a3;
  uint64_t v11 = __dst;
  uint64_t v12 = __src;
  int64_t v13 = __dst - __src;
  int64_t v14 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v14 = __dst - __src;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v16 = a3 - __dst;
  uint64_t v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0) {
    uint64_t v17 = a3 - __dst;
  }
  uint64_t v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4) {
      memmove(a4, __dst, 8 * v18);
    }
    uint64_t v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8) {
      goto LABEL_86;
    }
    uint64_t v68 = (void *)(a7 + 16);
    uint64_t v67 = v12;
    while (1)
    {
      unint64_t v43 = *((void *)v19 - 1);
      if ((v43 & 0x8000000000000000) != 0)
      {
LABEL_96:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v44 = v11;
      uint64_t v45 = v11 - 8;
      unint64_t v46 = *((void *)v11 - 1);
      swift_beginAccess();
      int v47 = (void *)*v68;
      if (!*v68) {
        goto LABEL_95;
      }
      uint64_t v48 = v47[1];
      if ((uint64_t)v43 >= v48) {
        goto LABEL_96;
      }
      uint64_t v49 = v47 + 8;
      int v50 = *((unsigned __int8 *)v47 + (v43 >> 3) + 64) & (1 << (v43 & 7));
      if (v50)
      {
        uint64_t v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v52 = v10;
        if (v51 < 0) {
          uint64_t v51 = *v47 + 14;
        }
        uint64_t v53 = v51 >> 3;
        uint64_t v54 = v53 - 1;
        BOOL v29 = v53 < 1;
        uint64_t v55 = v53 + 62;
        if (!v29) {
          uint64_t v55 = v54;
        }
        float v56 = *(float *)((char *)v49 + 4 * v43 + (v55 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        float v56 = 0.0;
        uint64_t v52 = v10;
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v46 >= v48) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)))
      {
        uint64_t v57 = *v47;
        if (__OFADD__(v57, 7)) {
          goto LABEL_93;
        }
        uint64_t v10 = v52 - 8;
        if (v50)
        {
          uint64_t v58 = v57 + 14;
          if (v57 + 7 >= 0) {
            uint64_t v58 = v57 + 7;
          }
          uint64_t v59 = v58 >> 3;
          uint64_t v60 = v59 - 1;
          BOOL v29 = v59 < 1;
          uint64_t v61 = v59 + 62;
          if (!v29) {
            uint64_t v61 = v60;
          }
          float v62 = *(float *)((char *)v49 + 4 * v46 + (v61 & 0xFFFFFFFFFFFFFFC0) + 64);
          BOOL v63 = v62 < v56;
          if ((a8 & 1) == 0) {
            BOOL v63 = v56 < v62;
          }
          if (v63)
          {
LABEL_76:
            if (v52 == v11)
            {
              v11 -= 8;
              if (v10 < v44) {
                goto LABEL_82;
              }
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        uint64_t v10 = v52 - 8;
        if (v50) {
          goto LABEL_76;
        }
      }
      uint64_t v45 = v19 - 8;
      if (v52 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(void *)uint64_t v10 = *(void *)v45;
        goto LABEL_82;
      }
      BOOL v64 = v10 >= v19;
      v19 -= 8;
      if (v64) {
        goto LABEL_81;
      }
LABEL_82:
      if (v11 <= v67 || v19 <= v9) {
        goto LABEL_86;
      }
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4) {
    memmove(a4, __src, 8 * v15);
  }
  uint64_t v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    uint64_t v20 = (void *)(a7 + 16);
    do
    {
      unint64_t v21 = *(void *)v11;
      if ((*(void *)v11 & 0x8000000000000000) != 0) {
        goto LABEL_96;
      }
      unint64_t v22 = *(void *)v9;
      swift_beginAccess();
      uint64_t v23 = (void *)*v20;
      if (!*v20) {
        goto LABEL_94;
      }
      uint64_t v24 = v23[1];
      if ((uint64_t)v21 >= v24) {
        goto LABEL_96;
      }
      uint64_t v25 = v23 + 8;
      int v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        uint64_t v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0) {
          uint64_t v27 = *v23 + 14;
        }
        uint64_t v28 = v27 >> 3;
        uint64_t v30 = v28 - 1;
        BOOL v29 = v28 < 1;
        uint64_t v31 = v28 + 62;
        if (!v29) {
          uint64_t v31 = v30;
        }
        float v32 = *(float *)((char *)v25 + 4 * v21 + (v31 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        float v32 = 0.0;
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v22 >= v24) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)))
      {
        uint64_t v33 = *v23;
        BOOL v34 = __OFADD__(v33, 7);
        uint64_t v35 = v33 + 7;
        if (v34) {
          goto LABEL_92;
        }
        if (!v26) {
          goto LABEL_33;
        }
        uint64_t v36 = v35 / 8;
        uint64_t v37 = v36 - 1;
        BOOL v29 = v36 < 1;
        uint64_t v38 = v36 + 62;
        if (!v29) {
          uint64_t v38 = v37;
        }
        float v39 = *(float *)((char *)v25 + 4 * v22 + (v38 & 0xFFFFFFFFFFFFFFC0) + 64);
        BOOL v40 = v39 < v32;
        if ((a8 & 1) == 0) {
          BOOL v40 = v32 < v39;
        }
        if (!v40)
        {
LABEL_33:
          short float v41 = v9;
          BOOL v42 = v12 == v9;
          v9 += 8;
          if (v42) {
            goto LABEL_35;
          }
LABEL_34:
          *(void *)uint64_t v12 = *(void *)v41;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      short float v41 = v11;
      BOOL v42 = v12 == v11;
      v11 += 8;
      if (!v42) {
        goto LABEL_34;
      }
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  uint64_t v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  }
  return 1;
}

uint64_t sub_2208A0E38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v37 = result;
  if (a3 != a2)
  {
    uint64_t v9 = a3;
    uint64_t v10 = *a4;
    uint64_t v11 = (void *)(a7 + 16);
    uint64_t v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v13 = *(void *)(v10 + 8 * v9);
    uint64_t v14 = v37;
    uint64_t v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v16 = *v15;
      uint64_t result = swift_beginAccess();
      uint64_t v17 = (void *)*v11;
      if (!*v11) {
        goto LABEL_34;
      }
      uint64_t v18 = v17[1];
      if ((uint64_t)v13 >= v18) {
        break;
      }
      uint64_t v19 = v17 + 8;
      int v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        uint64_t v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0) {
          uint64_t v21 = *v17 + 14;
        }
        uint64_t v22 = v21 >> 3;
        uint64_t v24 = v22 - 1;
        BOOL v23 = v22 < 1;
        uint64_t v25 = v22 + 62;
        if (!v23) {
          uint64_t v25 = v24;
        }
        float v26 = *(float *)((char *)v19 + 4 * v13 + (v25 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        float v26 = 0.0;
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v16 >= v18) {
        break;
      }
      if ((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)))
      {
        uint64_t v27 = *v17;
        BOOL v28 = __OFADD__(v27, 7);
        uint64_t v29 = v27 + 7;
        if (v28) {
          goto LABEL_33;
        }
        if (!v20) {
          goto LABEL_4;
        }
        uint64_t v30 = v29 / 8;
        uint64_t v31 = v30 - 1;
        BOOL v23 = v30 < 1;
        uint64_t v32 = v30 + 62;
        if (!v23) {
          uint64_t v32 = v31;
        }
        float v33 = *(float *)((char *)v19 + 4 * v16 + (v32 & 0xFFFFFFFFFFFFFFC0) + 64);
        BOOL v34 = v33 < v26;
        if ((a8 & 1) == 0) {
          BOOL v34 = v26 < v33;
        }
        if (!v34) {
          goto LABEL_4;
        }
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10) {
        goto LABEL_35;
      }
      unint64_t v35 = *v15;
      unint64_t v13 = v15[1];
      *uint64_t v15 = v13;
      v15[1] = v35;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A1058(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_22093F170();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A0E38(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_211;
  }
  uint64_t v148 = a4;
  uint64_t v149 = a3;
  int v158 = v9;
  uint64_t v142 = v11;
  uint64_t v159 = v5;
  uint64_t v140 = a1;
  if (v10 <= 1)
  {
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v146 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v141 = MEMORY[0x263F8EE78];
    if (v10 != 1)
    {
      unint64_t v75 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_171:
      if (v75 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(void *)(v141 + 16) = 0;
        goto LABEL_184;
      }
      uint64_t v128 = *v140;
      uint64_t v162 = *v140;
      while (1)
      {
        unint64_t v129 = v75 - 2;
        if (v75 < 2) {
          goto LABEL_205;
        }
        if (!v128) {
          goto LABEL_220;
        }
        uint64_t v152 = v15;
        uint64_t v130 = v15 + 32;
        uint64_t v131 = *(void *)&v15[16 * v129 + 32];
        uint64_t v132 = *(void *)&v15[16 * v75 + 24];
        uint64_t v133 = (char *)(v128 + 8 * v131);
        unint64_t v134 = (char *)(v128 + 8 * *(void *)&v130[16 * v75 - 16]);
        uint64_t v135 = (char *)(v128 + 8 * v132);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A0960(v133, v134, v135, v146, a2, v149, v148, v158);
        if (v159) {
          goto LABEL_183;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v132 < v131) {
          goto LABEL_206;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v152 = sub_22080AB70((uint64_t)v152);
        }
        if (v129 >= *((void *)v152 + 2)) {
          goto LABEL_207;
        }
        uint64_t v136 = &v152[16 * v129 + 32];
        *(void *)uint64_t v136 = v131;
        *((void *)v136 + 1) = v132;
        unint64_t v137 = *((void *)v152 + 2);
        if (v75 > v137) {
          goto LABEL_208;
        }
        uint64_t v15 = v152;
        memmove(&v152[16 * v75 + 16], &v152[16 * v75 + 32], 16 * (v137 - v75));
        *((void *)v152 + 2) = v137 - 1;
        unint64_t v75 = v137 - 1;
        uint64_t v128 = v162;
        if (v137 <= 2) {
          goto LABEL_182;
        }
      }
    }
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = sub_22093E8A0();
    *(void *)(v14 + 16) = v13;
    uint64_t v141 = v14;
    uint64_t v146 = (char *)(v14 + 32);
  }
  uint64_t v16 = 0;
  uint64_t v17 = *a1;
  uint64_t v160 = (void **)(a4 + 16);
  uint64_t v139 = *a1 - 8;
  uint64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v161 = *a1;
  uint64_t v145 = v10;
  while (1)
  {
    uint64_t v18 = (char *)v16;
    uint64_t v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      __dst = (char *)v16;
      uint64_t v143 = (char *)(v16 + 1);
      int64_t v20 = *(void *)(v17 + 8 * v19);
      if (v20 < 0) {
        goto LABEL_222;
      }
      int64_t v21 = *(void *)(v17 + 8 * v16);
      swift_beginAccess();
      uint64_t v22 = *v160;
      if (!*v160) {
        goto LABEL_221;
      }
      uint64_t v23 = v22[1];
      if (v20 >= v23) {
        goto LABEL_222;
      }
      int64_t v24 = sub_220891A38(v20, v22, v23);
      if (v21 < 0) {
        goto LABEL_222;
      }
      int64_t v26 = v22[1];
      if (v21 >= v26) {
        goto LABEL_222;
      }
      int64_t v27 = v24;
      int64_t v28 = sub_220891A38(v21, v22, v25);
      if ((v27 & 0x100000000) != 0)
      {
        int v30 = 0;
        uint64_t v17 = v161;
        uint64_t v18 = __dst;
      }
      else
      {
        uint64_t v17 = v161;
        uint64_t v18 = __dst;
        if ((v28 & 0x100000000) != 0)
        {
          uint64_t v31 = (uint64_t)(__dst + 2);
          if ((uint64_t)(__dst + 2) >= v10)
          {
            if ((uint64_t)__dst < v31) {
              goto LABEL_68;
            }
            goto LABEL_76;
          }
          int v30 = 1;
          goto LABEL_32;
        }
        if (v9) {
          BOOL v29 = *(float *)&v28 < *(float *)&v27;
        }
        else {
          BOOL v29 = *(float *)&v27 < *(float *)&v28;
        }
        int v30 = v29;
      }
      uint64_t v31 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10) {
        goto LABEL_65;
      }
LABEL_32:
      uint64_t v32 = v22 + 8;
      if (v10 <= v31 + 1) {
        uint64_t v33 = v31 + 1;
      }
      else {
        uint64_t v33 = v10;
      }
      int64_t v34 = *(void *)(v17 + 8 * (void)v143);
      while (1)
      {
        int64_t v35 = v34;
        int64_t v34 = *(void *)(v17 + 8 * v31);
        if (v34 < 0 || v34 >= v26) {
          goto LABEL_222;
        }
        int v36 = *((unsigned __int8 *)v32 + ((unint64_t)v34 >> 3)) & (1 << (v34 & 7));
        if (v36)
        {
          uint64_t v37 = *v22 + 7;
          if (__OFADD__(*v22, 7)) {
            goto LABEL_202;
          }
          if (v37 < 0) {
            uint64_t v37 = *v22 + 14;
          }
          uint64_t v38 = v37 >> 3;
          uint64_t v39 = v38 - 1;
          BOOL v106 = v38 < 1;
          uint64_t v40 = v38 + 62;
          if (!v106) {
            uint64_t v40 = v39;
          }
          float v41 = *(float *)((char *)v32 + 4 * v34 + (v40 & 0xFFFFFFFFFFFFFFC0) + 64);
          if (v35 < 0) {
            goto LABEL_222;
          }
        }
        else
        {
          float v41 = 0.0;
          if (v35 < 0) {
            goto LABEL_222;
          }
        }
        if (v35 >= v26) {
          goto LABEL_222;
        }
        if ((*((unsigned __int8 *)v32 + ((unint64_t)v35 >> 3)) >> (v35 & 7)))
        {
          if (__OFADD__(*v22, 7)) {
            goto LABEL_203;
          }
          if (!v36)
          {
LABEL_36:
            if (v30)
            {
              if (v31 < (uint64_t)v18) {
                goto LABEL_213;
              }
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          uint64_t v42 = *v22 + 14;
          if (*v22 + 7 >= 0) {
            uint64_t v42 = *v22 + 7;
          }
          uint64_t v43 = v42 >> 3;
          uint64_t v44 = v43 - 1;
          BOOL v106 = v43 < 1;
          uint64_t v45 = v43 + 62;
          if (!v106) {
            uint64_t v45 = v44;
          }
          float v46 = *(float *)((char *)v32 + 4 * v35 + (v45 & 0xFFFFFFFFFFFFFFC0) + 64);
          int v47 = v46 < v41;
          if (!v9) {
            int v47 = v41 < v46;
          }
          if (v30 != v47) {
            goto LABEL_65;
          }
        }
        else
        {
          if (!v36) {
            goto LABEL_36;
          }
          if ((v30 & 1) == 0)
          {
            uint64_t v19 = v31;
            break;
          }
        }
LABEL_37:
        if (++v31 >= v10)
        {
          uint64_t v31 = v33;
LABEL_65:
          uint64_t v19 = v31;
          if (!v30) {
            break;
          }
          if (v31 < (uint64_t)v18) {
            goto LABEL_213;
          }
LABEL_67:
          if ((uint64_t)v18 < v31)
          {
LABEL_68:
            uint64_t v48 = v31 - 1;
            uint64_t v49 = v18;
            do
            {
              if (v49 != (char *)v48)
              {
                if (!v17) {
                  goto LABEL_219;
                }
                uint64_t v50 = *(void *)(v17 + 8 * (void)v49);
                *(void *)(v17 + 8 * (void)v49) = *(void *)(v17 + 8 * v48);
                *(void *)(v17 + 8 * v48) = v50;
              }
              BOOL v106 = (uint64_t)++v49 < v48--;
            }
            while (v106);
          }
LABEL_76:
          uint64_t v19 = v31;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_210;
      }
      if (v19 - (uint64_t)v18 < v142)
      {
        if (__OFADD__(v18, v142)) {
          goto LABEL_214;
        }
        if ((uint64_t)&v18[v142] >= v10) {
          uint64_t v51 = v10;
        }
        else {
          uint64_t v51 = (uint64_t)&v18[v142];
        }
        if (v51 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          uint64_t result = sub_22093F090();
          __break(1u);
          return result;
        }
        if (v19 != v51)
        {
          uint64_t v150 = v15;
          __dsta = v18;
          uint64_t v52 = (unint64_t *)(v139 + 8 * v19);
          uint64_t v156 = v51;
          do
          {
            unint64_t v53 = *(void *)(v17 + 8 * v19);
            uint64_t v54 = v52;
            do
            {
              if ((v53 & 0x8000000000000000) != 0) {
                goto LABEL_222;
              }
              unint64_t v55 = *v54;
              swift_beginAccess();
              float v56 = *v160;
              if (!*v160) {
                goto LABEL_216;
              }
              uint64_t v57 = v56[1];
              uint64_t v17 = v161;
              if ((uint64_t)v53 >= v57) {
                goto LABEL_222;
              }
              uint64_t v58 = v56 + 8;
              int v59 = *((unsigned __int8 *)v56 + (v53 >> 3) + 64) & (1 << (v53 & 7));
              if (v59)
              {
                uint64_t v60 = *v56 + 7;
                if (__OFADD__(*v56, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v60 < 0) {
                  uint64_t v60 = *v56 + 14;
                }
                uint64_t v61 = v60 >> 3;
                uint64_t v62 = v61 - 1;
                BOOL v106 = v61 < 1;
                uint64_t v63 = v61 + 62;
                if (!v106) {
                  uint64_t v63 = v62;
                }
                float v64 = *(float *)((char *)v58 + 4 * v53 + (v63 & 0xFFFFFFFFFFFFFFC0) + 64);
                if ((v55 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              else
              {
                float v64 = 0.0;
                if ((v55 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              if ((uint64_t)v55 >= v57) {
                goto LABEL_222;
              }
              if ((*((unsigned __int8 *)v58 + (v55 >> 3)) >> (v55 & 7)))
              {
                uint64_t v65 = *v56;
                BOOL v89 = __OFADD__(v65, 7);
                uint64_t v66 = v65 + 7;
                if (v89) {
                  goto LABEL_187;
                }
                if (!v59) {
                  break;
                }
                uint64_t v67 = v66 / 8;
                uint64_t v68 = v67 - 1;
                BOOL v106 = v67 < 1;
                uint64_t v69 = v67 + 62;
                if (!v106) {
                  uint64_t v69 = v68;
                }
                float v70 = *(float *)((char *)v58 + 4 * v55 + (v69 & 0xFFFFFFFFFFFFFFC0) + 64);
                BOOL v71 = v70 < v64;
                if (!v9) {
                  BOOL v71 = v64 < v70;
                }
                if (!v71) {
                  break;
                }
              }
              else if (!v59)
              {
                break;
              }
              if (!v161) {
                goto LABEL_217;
              }
              unint64_t v72 = *v54;
              unint64_t v53 = v54[1];
              *uint64_t v54 = v53;
              v54[1] = v72;
              --v54;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v52;
            uint64_t v18 = __dsta;
          }
          while (v19 != v156);
          uint64_t v19 = v156;
          uint64_t v15 = v150;
        }
      }
    }
    if (v19 < (uint64_t)v18) {
      goto LABEL_209;
    }
    uint64_t v144 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v74 = *((void *)v15 + 2);
    unint64_t v73 = *((void *)v15 + 3);
    unint64_t v75 = v74 + 1;
    uint64_t v17 = v161;
    if (v74 >= v73 >> 1)
    {
      uint64_t v127 = sub_22081B3EC((char *)(v73 > 1), v74 + 1, 1, v15);
      uint64_t v17 = v161;
      uint64_t v15 = v127;
    }
    *((void *)v15 + 2) = v75;
    BOOL v76 = v15 + 32;
    unint64_t v77 = &v15[16 * v74 + 32];
    *(void *)unint64_t v77 = v18;
    *((void *)v77 + 1) = v144;
    if (v74) {
      break;
    }
    unint64_t v75 = 1;
LABEL_165:
    uint64_t v16 = v144;
    if (v144 >= v10) {
      goto LABEL_171;
    }
  }
  uint64_t v151 = v15;
  uint64_t v157 = v15 + 32;
  while (1)
  {
    unint64_t v78 = v75 - 1;
    if (v75 >= 4)
    {
      unint64_t v83 = &v76[16 * v75];
      uint64_t v84 = *((void *)v83 - 8);
      uint64_t v85 = *((void *)v83 - 7);
      BOOL v89 = __OFSUB__(v85, v84);
      uint64_t v86 = v85 - v84;
      if (v89) {
        goto LABEL_192;
      }
      uint64_t v88 = *((void *)v83 - 6);
      uint64_t v87 = *((void *)v83 - 5);
      BOOL v89 = __OFSUB__(v87, v88);
      uint64_t v81 = v87 - v88;
      char v82 = v89;
      if (v89) {
        goto LABEL_193;
      }
      unint64_t v90 = v75 - 2;
      uint64_t v91 = &v76[16 * v75 - 32];
      uint64_t v93 = *(void *)v91;
      uint64_t v92 = *((void *)v91 + 1);
      BOOL v89 = __OFSUB__(v92, v93);
      uint64_t v94 = v92 - v93;
      if (v89) {
        goto LABEL_194;
      }
      BOOL v89 = __OFADD__(v81, v94);
      uint64_t v95 = v81 + v94;
      if (v89) {
        goto LABEL_197;
      }
      if (v95 >= v86)
      {
        uint64_t v113 = &v76[16 * v78];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v89 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v89) {
          goto LABEL_204;
        }
        BOOL v106 = v81 < v116;
        goto LABEL_154;
      }
    }
    else
    {
      if (v75 != 3)
      {
        uint64_t v107 = *((void *)v15 + 4);
        uint64_t v108 = *((void *)v15 + 5);
        BOOL v89 = __OFSUB__(v108, v107);
        uint64_t v100 = v108 - v107;
        char v101 = v89;
        goto LABEL_148;
      }
      uint64_t v80 = *((void *)v15 + 4);
      uint64_t v79 = *((void *)v15 + 5);
      BOOL v89 = __OFSUB__(v79, v80);
      uint64_t v81 = v79 - v80;
      char v82 = v89;
    }
    if (v82) {
      goto LABEL_195;
    }
    unint64_t v90 = v75 - 2;
    uint64_t v96 = &v76[16 * v75 - 32];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v99 = __OFSUB__(v97, v98);
    uint64_t v100 = v97 - v98;
    char v101 = v99;
    if (v99) {
      goto LABEL_198;
    }
    uint64_t v102 = &v76[16 * v78];
    uint64_t v104 = *(void *)v102;
    uint64_t v103 = *((void *)v102 + 1);
    BOOL v89 = __OFSUB__(v103, v104);
    uint64_t v105 = v103 - v104;
    if (v89) {
      goto LABEL_199;
    }
    if (__OFADD__(v100, v105)) {
      goto LABEL_201;
    }
    if (v100 + v105 >= v81)
    {
      BOOL v106 = v81 < v105;
LABEL_154:
      if (v106) {
        unint64_t v78 = v90;
      }
      goto LABEL_156;
    }
LABEL_148:
    if (v101) {
      goto LABEL_196;
    }
    uint64_t v109 = &v76[16 * v78];
    uint64_t v111 = *(void *)v109;
    uint64_t v110 = *((void *)v109 + 1);
    BOOL v89 = __OFSUB__(v110, v111);
    uint64_t v112 = v110 - v111;
    if (v89) {
      goto LABEL_200;
    }
    if (v112 < v100) {
      goto LABEL_165;
    }
LABEL_156:
    unint64_t v117 = v78 - 1;
    if (v78 - 1 >= v75) {
      goto LABEL_188;
    }
    if (!v17) {
      goto LABEL_218;
    }
    uint64_t v118 = &v76[16 * v117];
    uint64_t v119 = *(void *)v118;
    unint64_t v120 = v78;
    uint64_t v121 = &v76[16 * v78];
    uint64_t v122 = *((void *)v121 + 1);
    char v123 = (char *)(v17 + 8 * *(void *)v118);
    __dstb = (char *)(v17 + 8 * *(void *)v121);
    uint64_t v124 = (char *)(v17 + 8 * v122);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A0960(v123, __dstb, v124, v146, a2, v149, v148, v158);
    if (v159) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v151;
    if (v122 < v119) {
      goto LABEL_189;
    }
    if (v120 > *((void *)v151 + 2)) {
      goto LABEL_190;
    }
    unint64_t v125 = v120;
    *(void *)uint64_t v118 = v119;
    *(void *)&v157[16 * v117 + 8] = v122;
    unint64_t v126 = *((void *)v151 + 2);
    if (v125 >= v126) {
      goto LABEL_191;
    }
    unint64_t v75 = v126 - 1;
    memmove(v121, v121 + 16, 16 * (v126 - 1 - v125));
    BOOL v76 = v157;
    *((void *)v151 + 2) = v126 - 1;
    int v9 = v158;
    uint64_t v10 = v145;
    uint64_t v17 = v161;
    if (v126 <= 2) {
      goto LABEL_165;
    }
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v141 + 16) = 0;
LABEL_184:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A1BBC(char *__src, char *__dst, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v9 = a4;
  uint64_t v10 = a3;
  uint64_t v11 = __dst;
  uint64_t v12 = __src;
  int64_t v13 = __dst - __src;
  int64_t v14 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v14 = __dst - __src;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v16 = a3 - __dst;
  uint64_t v17 = a3 - __dst + 7;
  if (a3 - __dst >= 0) {
    uint64_t v17 = a3 - __dst;
  }
  uint64_t v18 = v17 >> 3;
  if (v15 >= v17 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v18] <= a4) {
      memmove(a4, __dst, 8 * v18);
    }
    uint64_t v19 = &v9[8 * v18];
    if (v12 >= v11 || v16 < 8) {
      goto LABEL_86;
    }
    uint64_t v68 = (void *)(a7 + 16);
    uint64_t v67 = v12;
    while (1)
    {
      unint64_t v43 = *((void *)v19 - 1);
      if ((v43 & 0x8000000000000000) != 0)
      {
LABEL_96:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v44 = v11;
      uint64_t v45 = v11 - 8;
      unint64_t v46 = *((void *)v11 - 1);
      swift_beginAccess();
      int v47 = (void *)*v68;
      if (!*v68) {
        goto LABEL_95;
      }
      uint64_t v48 = v47[1];
      if ((uint64_t)v43 >= v48) {
        goto LABEL_96;
      }
      uint64_t v49 = v47 + 8;
      int v50 = *((unsigned __int8 *)v47 + (v43 >> 3) + 64) & (1 << (v43 & 7));
      if (v50)
      {
        uint64_t v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        uint64_t v52 = v10;
        if (v51 < 0) {
          uint64_t v51 = *v47 + 14;
        }
        uint64_t v53 = v51 >> 3;
        uint64_t v54 = v53 - 1;
        BOOL v29 = v53 < 1;
        uint64_t v55 = v53 + 62;
        if (!v29) {
          uint64_t v55 = v54;
        }
        double v56 = *(double *)((char *)&v49[v43 + 8] + (v55 & 0xFFFFFFFFFFFFFFC0));
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        double v56 = 0.0;
        uint64_t v52 = v10;
        if ((v46 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v46 >= v48) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)))
      {
        uint64_t v57 = *v47;
        if (__OFADD__(v57, 7)) {
          goto LABEL_93;
        }
        uint64_t v10 = v52 - 8;
        if (v50)
        {
          uint64_t v58 = v57 + 14;
          if (v57 + 7 >= 0) {
            uint64_t v58 = v57 + 7;
          }
          uint64_t v59 = v58 >> 3;
          uint64_t v60 = v59 - 1;
          BOOL v29 = v59 < 1;
          uint64_t v61 = v59 + 62;
          if (!v29) {
            uint64_t v61 = v60;
          }
          double v62 = *(double *)((char *)&v49[v46 + 8] + (v61 & 0xFFFFFFFFFFFFFFC0));
          BOOL v63 = v62 < v56;
          if ((a8 & 1) == 0) {
            BOOL v63 = v56 < v62;
          }
          if (v63)
          {
LABEL_76:
            if (v52 == v11)
            {
              v11 -= 8;
              if (v10 < v44) {
                goto LABEL_82;
              }
            }
            else
            {
              v11 -= 8;
            }
            goto LABEL_81;
          }
        }
      }
      else
      {
        uint64_t v10 = v52 - 8;
        if (v50) {
          goto LABEL_76;
        }
      }
      uint64_t v45 = v19 - 8;
      if (v52 != v19)
      {
        v19 -= 8;
LABEL_81:
        *(void *)uint64_t v10 = *(void *)v45;
        goto LABEL_82;
      }
      BOOL v64 = v10 >= v19;
      v19 -= 8;
      if (v64) {
        goto LABEL_81;
      }
LABEL_82:
      if (v11 <= v67 || v19 <= v9) {
        goto LABEL_86;
      }
    }
  }
  if (a4 != __src || &__src[8 * v15] <= a4) {
    memmove(a4, __src, 8 * v15);
  }
  uint64_t v19 = &v9[8 * v15];
  if (v11 < v10 && v13 >= 8)
  {
    int64_t v20 = (void *)(a7 + 16);
    do
    {
      unint64_t v21 = *(void *)v11;
      if ((*(void *)v11 & 0x8000000000000000) != 0) {
        goto LABEL_96;
      }
      unint64_t v22 = *(void *)v9;
      swift_beginAccess();
      uint64_t v23 = (void *)*v20;
      if (!*v20) {
        goto LABEL_94;
      }
      uint64_t v24 = v23[1];
      if ((uint64_t)v21 >= v24) {
        goto LABEL_96;
      }
      uint64_t v25 = v23 + 8;
      int v26 = *((unsigned __int8 *)v23 + (v21 >> 3) + 64) & (1 << (v21 & 7));
      if (v26)
      {
        uint64_t v27 = *v23 + 7;
        if (__OFADD__(*v23, 7))
        {
          __break(1u);
          goto LABEL_91;
        }
        if (v27 < 0) {
          uint64_t v27 = *v23 + 14;
        }
        uint64_t v28 = v27 >> 3;
        uint64_t v30 = v28 - 1;
        BOOL v29 = v28 < 1;
        uint64_t v31 = v28 + 62;
        if (!v29) {
          uint64_t v31 = v30;
        }
        double v32 = *(double *)((char *)&v25[v21 + 8] + (v31 & 0xFFFFFFFFFFFFFFC0));
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        double v32 = 0.0;
        if ((v22 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
      }
      if ((uint64_t)v22 >= v24) {
        goto LABEL_96;
      }
      if ((*((unsigned __int8 *)v25 + (v22 >> 3)) >> (v22 & 7)))
      {
        uint64_t v33 = *v23;
        BOOL v34 = __OFADD__(v33, 7);
        uint64_t v35 = v33 + 7;
        if (v34) {
          goto LABEL_92;
        }
        if (!v26) {
          goto LABEL_33;
        }
        uint64_t v36 = v35 / 8;
        uint64_t v37 = v36 - 1;
        BOOL v29 = v36 < 1;
        uint64_t v38 = v36 + 62;
        if (!v29) {
          uint64_t v38 = v37;
        }
        double v39 = *(double *)((char *)&v25[v22 + 8] + (v38 & 0xFFFFFFFFFFFFFFC0));
        BOOL v40 = v39 < v32;
        if ((a8 & 1) == 0) {
          BOOL v40 = v32 < v39;
        }
        if (!v40)
        {
LABEL_33:
          float v41 = v9;
          BOOL v42 = v12 == v9;
          v9 += 8;
          if (v42) {
            goto LABEL_35;
          }
LABEL_34:
          *(void *)uint64_t v12 = *(void *)v41;
          goto LABEL_35;
        }
      }
      else if (!v26)
      {
        goto LABEL_33;
      }
      float v41 = v11;
      BOOL v42 = v12 == v11;
      v11 += 8;
      if (!v42) {
        goto LABEL_34;
      }
LABEL_35:
      v12 += 8;
    }
    while (v9 < v19 && v11 < v10);
  }
  uint64_t v11 = v12;
LABEL_86:
  if (v11 != v9 || v11 >= &v9[(v19 - v9 + (v19 - v9 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v11, v9, 8 * ((v19 - v9) / 8));
  }
  return 1;
}

uint64_t sub_2208A2094(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v37 = result;
  if (a3 != a2)
  {
    uint64_t v9 = a3;
    uint64_t v10 = *a4;
    uint64_t v11 = (void *)(a7 + 16);
    uint64_t v12 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v13 = *(void *)(v10 + 8 * v9);
    uint64_t v14 = v37;
    uint64_t v15 = (unint64_t *)v12;
    while ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v16 = *v15;
      uint64_t result = swift_beginAccess();
      uint64_t v17 = (void *)*v11;
      if (!*v11) {
        goto LABEL_34;
      }
      uint64_t v18 = v17[1];
      if ((uint64_t)v13 >= v18) {
        break;
      }
      uint64_t v19 = v17 + 8;
      int v20 = *((unsigned __int8 *)v17 + (v13 >> 3) + 64) & (1 << (v13 & 7));
      if (v20)
      {
        uint64_t v21 = *v17 + 7;
        if (__OFADD__(*v17, 7))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          break;
        }
        if (v21 < 0) {
          uint64_t v21 = *v17 + 14;
        }
        uint64_t v22 = v21 >> 3;
        uint64_t v24 = v22 - 1;
        BOOL v23 = v22 < 1;
        uint64_t v25 = v22 + 62;
        if (!v23) {
          uint64_t v25 = v24;
        }
        double v26 = *(double *)((char *)&v19[v13 + 8] + (v25 & 0xFFFFFFFFFFFFFFC0));
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        double v26 = 0.0;
        if ((v16 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v16 >= v18) {
        break;
      }
      if ((*((unsigned __int8 *)v19 + (v16 >> 3)) >> (v16 & 7)))
      {
        uint64_t v27 = *v17;
        BOOL v28 = __OFADD__(v27, 7);
        uint64_t v29 = v27 + 7;
        if (v28) {
          goto LABEL_33;
        }
        if (!v20) {
          goto LABEL_4;
        }
        uint64_t v30 = v29 / 8;
        uint64_t v31 = v30 - 1;
        BOOL v23 = v30 < 1;
        uint64_t v32 = v30 + 62;
        if (!v23) {
          uint64_t v32 = v31;
        }
        double v33 = *(double *)((char *)&v19[v16 + 8] + (v32 & 0xFFFFFFFFFFFFFFC0));
        BOOL v34 = v33 < v26;
        if ((a8 & 1) == 0) {
          BOOL v34 = v26 < v33;
        }
        if (!v34) {
          goto LABEL_4;
        }
      }
      else if (!v20)
      {
        goto LABEL_4;
      }
      if (!v10) {
        goto LABEL_35;
      }
      unint64_t v35 = *v15;
      unint64_t v13 = v15[1];
      *uint64_t v15 = v13;
      v15[1] = v35;
      --v15;
      if (v9 == ++v14)
      {
LABEL_4:
        ++v9;
        v12 += 8;
        if (v9 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A22B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v9 = a5 & 1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_22093F170();
  if (v11 >= v10)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A2094(0, v10, 1, a1, a2, a3, a4, v9);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_211;
  }
  uint64_t v154 = a3;
  uint64_t v155 = a4;
  int v162 = v9;
  uint64_t v146 = v11;
  uint64_t v163 = v5;
  uint64_t v144 = a1;
  if (v10 <= 1)
  {
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v152 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v145 = MEMORY[0x263F8EE78];
    if (v10 != 1)
    {
      unint64_t v78 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_171:
      if (v78 < 2) {
        goto LABEL_184;
      }
      uint64_t v132 = *v144;
      uint64_t v166 = *v144;
      while (1)
      {
        unint64_t v133 = v78 - 2;
        if (v78 < 2) {
          goto LABEL_205;
        }
        if (!v132) {
          goto LABEL_220;
        }
        uint64_t v159 = v15;
        unint64_t v134 = v15 + 32;
        uint64_t v135 = *(void *)&v15[16 * v133 + 32];
        uint64_t v136 = *(void *)&v15[16 * v78 + 24];
        unint64_t v137 = (char *)(v132 + 8 * v135);
        uint64_t v138 = (char *)(v132 + 8 * *(void *)&v134[16 * v78 - 16]);
        uint64_t v139 = (char *)(v132 + 8 * v136);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A1BBC(v137, v138, v139, v152, a2, v154, v155, v162);
        if (v163) {
          goto LABEL_183;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v136 < v135) {
          goto LABEL_206;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v159 = sub_22080AB70((uint64_t)v159);
        }
        if (v133 >= *((void *)v159 + 2)) {
          goto LABEL_207;
        }
        uint64_t v140 = &v159[16 * v133 + 32];
        *(void *)uint64_t v140 = v135;
        *((void *)v140 + 1) = v136;
        unint64_t v141 = *((void *)v159 + 2);
        if (v78 > v141) {
          goto LABEL_208;
        }
        uint64_t v15 = v159;
        memmove(&v159[16 * v78 + 16], &v159[16 * v78 + 32], 16 * (v141 - v78));
        *((void *)v159 + 2) = v141 - 1;
        unint64_t v78 = v141 - 1;
        uint64_t v132 = v166;
        if (v141 <= 2) {
          goto LABEL_184;
        }
      }
    }
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = sub_22093E8A0();
    *(void *)(v14 + 16) = v13;
    uint64_t v145 = v14;
    uint64_t v152 = (char *)(v14 + 32);
  }
  uint64_t v16 = 0;
  uint64_t v17 = *a1;
  uint64_t v164 = (void **)(a4 + 16);
  uint64_t v143 = *a1 - 8;
  uint64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v165 = *a1;
  uint64_t v149 = v10;
  while (1)
  {
    uint64_t v18 = (char *)v16;
    uint64_t v19 = v16 + 1;
    if (v16 + 1 < v10)
    {
      uint64_t v147 = v16 + 1;
      uint64_t v20 = *(void *)(v17 + 8 * v19);
      if (v20 < 0) {
        goto LABEL_222;
      }
      uint64_t v21 = (char *)v16;
      uint64_t v22 = *(void *)(v17 + 8 * v16);
      swift_beginAccess();
      BOOL v23 = *v164;
      if (!*v164) {
        goto LABEL_221;
      }
      if (v20 >= v23[1]) {
        goto LABEL_222;
      }
      uint64_t v156 = v15;
      uint64_t v24 = sub_2208915A0(v20, v23, v155);
      if (v22 < 0) {
        goto LABEL_222;
      }
      uint64_t v27 = v23[1];
      if (v22 >= v27) {
        goto LABEL_222;
      }
      double v28 = *(double *)&v24;
      char v29 = v25;
      double v30 = COERCE_DOUBLE(sub_2208915A0(v22, v23, v26));
      if (v29)
      {
        int v33 = 0;
        uint64_t v17 = v165;
        uint64_t v18 = v21;
      }
      else
      {
        uint64_t v17 = v165;
        uint64_t v18 = v21;
        if (v31)
        {
          uint64_t v34 = (uint64_t)(v21 + 2);
          if ((uint64_t)(v21 + 2) >= v10)
          {
            uint64_t v15 = v156;
            if ((uint64_t)v21 < v34) {
              goto LABEL_68;
            }
            goto LABEL_76;
          }
          int v33 = 1;
          goto LABEL_32;
        }
        if (v9) {
          BOOL v32 = v30 < v28;
        }
        else {
          BOOL v32 = v28 < v30;
        }
        int v33 = v32;
      }
      uint64_t v34 = (uint64_t)(v18 + 2);
      if ((uint64_t)(v18 + 2) >= v10) {
        goto LABEL_65;
      }
LABEL_32:
      unint64_t v35 = v23 + 8;
      if (v10 <= v34 + 1) {
        uint64_t v36 = v34 + 1;
      }
      else {
        uint64_t v36 = v10;
      }
      uint64_t v37 = *(void *)(v17 + 8 * v147);
      while (1)
      {
        uint64_t v38 = v37;
        uint64_t v37 = *(void *)(v17 + 8 * v34);
        if (v37 < 0 || v37 >= v27) {
          goto LABEL_222;
        }
        int v39 = *((unsigned __int8 *)v35 + ((unint64_t)v37 >> 3)) & (1 << (v37 & 7));
        if (v39)
        {
          uint64_t v40 = *v23 + 7;
          if (__OFADD__(*v23, 7)) {
            goto LABEL_202;
          }
          if (v40 < 0) {
            uint64_t v40 = *v23 + 14;
          }
          uint64_t v41 = v40 >> 3;
          uint64_t v42 = v41 - 1;
          BOOL v109 = v41 < 1;
          uint64_t v43 = v41 + 62;
          if (!v109) {
            uint64_t v43 = v42;
          }
          double v44 = *(double *)((char *)&v35[v37 + 8] + (v43 & 0xFFFFFFFFFFFFFFC0));
          if (v38 < 0) {
            goto LABEL_222;
          }
        }
        else
        {
          double v44 = 0.0;
          if (v38 < 0) {
            goto LABEL_222;
          }
        }
        if (v38 >= v27) {
          goto LABEL_222;
        }
        if ((*((unsigned __int8 *)v35 + ((unint64_t)v38 >> 3)) >> (v38 & 7)))
        {
          if (__OFADD__(*v23, 7)) {
            goto LABEL_203;
          }
          if (!v39)
          {
LABEL_36:
            if (v33)
            {
              uint64_t v15 = v156;
              if (v34 < (uint64_t)v18) {
                goto LABEL_213;
              }
              goto LABEL_67;
            }
            goto LABEL_37;
          }
          uint64_t v45 = *v23 + 14;
          if (*v23 + 7 >= 0) {
            uint64_t v45 = *v23 + 7;
          }
          uint64_t v46 = v45 >> 3;
          uint64_t v47 = v46 - 1;
          BOOL v109 = v46 < 1;
          uint64_t v48 = v46 + 62;
          if (!v109) {
            uint64_t v48 = v47;
          }
          double v49 = *(double *)((char *)&v35[v38 + 8] + (v48 & 0xFFFFFFFFFFFFFFC0));
          int v50 = v49 < v44;
          if (!v9) {
            int v50 = v44 < v49;
          }
          if (v33 != v50) {
            goto LABEL_65;
          }
        }
        else
        {
          if (!v39) {
            goto LABEL_36;
          }
          if ((v33 & 1) == 0)
          {
            uint64_t v19 = v34;
            uint64_t v15 = v156;
            break;
          }
        }
LABEL_37:
        if (++v34 >= v10)
        {
          uint64_t v34 = v36;
LABEL_65:
          uint64_t v19 = v34;
          uint64_t v15 = v156;
          if (!v33) {
            break;
          }
          if (v34 < (uint64_t)v18) {
            goto LABEL_213;
          }
LABEL_67:
          if ((uint64_t)v18 < v34)
          {
LABEL_68:
            uint64_t v51 = v34 - 1;
            uint64_t v52 = v18;
            do
            {
              if (v52 != (char *)v51)
              {
                if (!v17) {
                  goto LABEL_219;
                }
                uint64_t v53 = *(void *)(v17 + 8 * (void)v52);
                *(void *)(v17 + 8 * (void)v52) = *(void *)(v17 + 8 * v51);
                *(void *)(v17 + 8 * v51) = v53;
              }
              BOOL v109 = (uint64_t)++v52 < v51--;
            }
            while (v109);
          }
LABEL_76:
          uint64_t v19 = v34;
          break;
        }
      }
    }
    if (v19 < v10)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_210;
      }
      if (v19 - (uint64_t)v18 < v146)
      {
        if (__OFADD__(v18, v146)) {
          goto LABEL_214;
        }
        if ((uint64_t)&v18[v146] >= v10) {
          uint64_t v54 = v10;
        }
        else {
          uint64_t v54 = (uint64_t)&v18[v146];
        }
        if (v54 < (uint64_t)v18)
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_219:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_220:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          uint64_t result = sub_22093F090();
          __break(1u);
          return result;
        }
        if (v19 != v54)
        {
          uint64_t v157 = v15;
          __dst = v18;
          uint64_t v55 = (unint64_t *)(v143 + 8 * v19);
          uint64_t v150 = v54;
          do
          {
            unint64_t v56 = *(void *)(v17 + 8 * v19);
            uint64_t v57 = v55;
            do
            {
              if ((v56 & 0x8000000000000000) != 0) {
                goto LABEL_222;
              }
              unint64_t v58 = *v57;
              swift_beginAccess();
              uint64_t v59 = *v164;
              if (!*v164) {
                goto LABEL_216;
              }
              uint64_t v60 = v59[1];
              uint64_t v17 = v165;
              if ((uint64_t)v56 >= v60) {
                goto LABEL_222;
              }
              uint64_t v61 = v59 + 8;
              int v62 = *((unsigned __int8 *)v59 + (v56 >> 3) + 64) & (1 << (v56 & 7));
              if (v62)
              {
                uint64_t v63 = *v59 + 7;
                if (__OFADD__(*v59, 7))
                {
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
LABEL_213:
                  __break(1u);
LABEL_214:
                  __break(1u);
                  goto LABEL_215;
                }
                if (v63 < 0) {
                  uint64_t v63 = *v59 + 14;
                }
                uint64_t v64 = v63 >> 3;
                uint64_t v65 = v64 - 1;
                BOOL v109 = v64 < 1;
                uint64_t v66 = v64 + 62;
                if (!v109) {
                  uint64_t v66 = v65;
                }
                double v67 = *(double *)((char *)&v61[v56 + 8] + (v66 & 0xFFFFFFFFFFFFFFC0));
                if ((v58 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              else
              {
                double v67 = 0.0;
                if ((v58 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
              }
              if ((uint64_t)v58 >= v60) {
                goto LABEL_222;
              }
              if ((*((unsigned __int8 *)v61 + (v58 >> 3)) >> (v58 & 7)))
              {
                uint64_t v68 = *v59;
                BOOL v92 = __OFADD__(v68, 7);
                uint64_t v69 = v68 + 7;
                if (v92) {
                  goto LABEL_187;
                }
                if (!v62) {
                  break;
                }
                uint64_t v70 = v69 / 8;
                uint64_t v71 = v70 - 1;
                BOOL v109 = v70 < 1;
                uint64_t v72 = v70 + 62;
                if (!v109) {
                  uint64_t v72 = v71;
                }
                double v73 = *(double *)((char *)&v61[v58 + 8] + (v72 & 0xFFFFFFFFFFFFFFC0));
                BOOL v74 = v73 < v67;
                if (!v9) {
                  BOOL v74 = v67 < v73;
                }
                if (!v74) {
                  break;
                }
              }
              else if (!v62)
              {
                break;
              }
              if (!v165) {
                goto LABEL_217;
              }
              unint64_t v75 = *v57;
              unint64_t v56 = v57[1];
              *uint64_t v57 = v56;
              v57[1] = v75;
              --v57;
              ++v18;
            }
            while ((char *)v19 != v18);
            ++v19;
            ++v55;
            uint64_t v18 = __dst;
          }
          while (v19 != v150);
          uint64_t v19 = v150;
          uint64_t v15 = v157;
        }
      }
    }
    if (v19 < (uint64_t)v18) {
      goto LABEL_209;
    }
    uint64_t v148 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v77 = *((void *)v15 + 2);
    unint64_t v76 = *((void *)v15 + 3);
    unint64_t v78 = v77 + 1;
    uint64_t v17 = v165;
    if (v77 >= v76 >> 1)
    {
      uint64_t v131 = sub_22081B3EC((char *)(v76 > 1), v77 + 1, 1, v15);
      uint64_t v17 = v165;
      uint64_t v15 = v131;
    }
    *((void *)v15 + 2) = v78;
    uint64_t v79 = v15 + 32;
    uint64_t v80 = &v15[16 * v77 + 32];
    *(void *)uint64_t v80 = v18;
    *((void *)v80 + 1) = v148;
    if (v77) {
      break;
    }
    unint64_t v78 = 1;
LABEL_165:
    uint64_t v16 = v148;
    if (v148 >= v10) {
      goto LABEL_171;
    }
  }
  int v158 = v15;
  uint64_t v151 = v15 + 32;
  while (1)
  {
    unint64_t v81 = v78 - 1;
    if (v78 >= 4)
    {
      uint64_t v86 = &v79[16 * v78];
      uint64_t v87 = *((void *)v86 - 8);
      uint64_t v88 = *((void *)v86 - 7);
      BOOL v92 = __OFSUB__(v88, v87);
      uint64_t v89 = v88 - v87;
      if (v92) {
        goto LABEL_192;
      }
      uint64_t v91 = *((void *)v86 - 6);
      uint64_t v90 = *((void *)v86 - 5);
      BOOL v92 = __OFSUB__(v90, v91);
      uint64_t v84 = v90 - v91;
      char v85 = v92;
      if (v92) {
        goto LABEL_193;
      }
      unint64_t v93 = v78 - 2;
      uint64_t v94 = &v79[16 * v78 - 32];
      uint64_t v96 = *(void *)v94;
      uint64_t v95 = *((void *)v94 + 1);
      BOOL v92 = __OFSUB__(v95, v96);
      uint64_t v97 = v95 - v96;
      if (v92) {
        goto LABEL_194;
      }
      BOOL v92 = __OFADD__(v84, v97);
      uint64_t v98 = v84 + v97;
      if (v92) {
        goto LABEL_197;
      }
      if (v98 >= v89)
      {
        uint64_t v116 = &v79[16 * v81];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v92 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v92) {
          goto LABEL_204;
        }
        BOOL v109 = v84 < v119;
        goto LABEL_154;
      }
    }
    else
    {
      if (v78 != 3)
      {
        uint64_t v110 = *((void *)v15 + 4);
        uint64_t v111 = *((void *)v15 + 5);
        BOOL v92 = __OFSUB__(v111, v110);
        uint64_t v103 = v111 - v110;
        char v104 = v92;
        goto LABEL_148;
      }
      uint64_t v83 = *((void *)v15 + 4);
      uint64_t v82 = *((void *)v15 + 5);
      BOOL v92 = __OFSUB__(v82, v83);
      uint64_t v84 = v82 - v83;
      char v85 = v92;
    }
    if (v85) {
      goto LABEL_195;
    }
    unint64_t v93 = v78 - 2;
    BOOL v99 = &v79[16 * v78 - 32];
    uint64_t v101 = *(void *)v99;
    uint64_t v100 = *((void *)v99 + 1);
    BOOL v102 = __OFSUB__(v100, v101);
    uint64_t v103 = v100 - v101;
    char v104 = v102;
    if (v102) {
      goto LABEL_198;
    }
    uint64_t v105 = &v79[16 * v81];
    uint64_t v107 = *(void *)v105;
    uint64_t v106 = *((void *)v105 + 1);
    BOOL v92 = __OFSUB__(v106, v107);
    uint64_t v108 = v106 - v107;
    if (v92) {
      goto LABEL_199;
    }
    if (__OFADD__(v103, v108)) {
      goto LABEL_201;
    }
    if (v103 + v108 >= v84)
    {
      BOOL v109 = v84 < v108;
LABEL_154:
      if (v109) {
        unint64_t v81 = v93;
      }
      goto LABEL_156;
    }
LABEL_148:
    if (v104) {
      goto LABEL_196;
    }
    uint64_t v112 = &v79[16 * v81];
    uint64_t v114 = *(void *)v112;
    uint64_t v113 = *((void *)v112 + 1);
    BOOL v92 = __OFSUB__(v113, v114);
    uint64_t v115 = v113 - v114;
    if (v92) {
      goto LABEL_200;
    }
    if (v115 < v103) {
      goto LABEL_165;
    }
LABEL_156:
    unint64_t v120 = v81 - 1;
    if (v81 - 1 >= v78) {
      goto LABEL_188;
    }
    if (!v17) {
      goto LABEL_218;
    }
    uint64_t v121 = &v79[16 * v120];
    uint64_t v122 = v79;
    uint64_t v123 = *(void *)v121;
    unint64_t v124 = v81;
    unint64_t v125 = &v122[16 * v81];
    uint64_t v126 = *((void *)v125 + 1);
    uint64_t v127 = (char *)(v17 + 8 * *(void *)v121);
    __dsta = (char *)(v17 + 8 * *(void *)v125);
    uint64_t v128 = (char *)(v17 + 8 * v126);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A1BBC(v127, __dsta, v128, v152, a2, v154, v155, v162);
    if (v163) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v158;
    if (v126 < v123) {
      goto LABEL_189;
    }
    if (v124 > *((void *)v158 + 2)) {
      goto LABEL_190;
    }
    unint64_t v129 = v124;
    *(void *)uint64_t v121 = v123;
    uint64_t v79 = v151;
    *(void *)&v151[16 * v120 + 8] = v126;
    unint64_t v130 = *((void *)v158 + 2);
    if (v129 >= v130) {
      goto LABEL_191;
    }
    unint64_t v78 = v130 - 1;
    memmove(v125, v125 + 16, 16 * (v130 - 1 - v129));
    *((void *)v158 + 2) = v130 - 1;
    int v9 = v162;
    uint64_t v10 = v149;
    uint64_t v17 = v165;
    if (v130 <= 2) {
      goto LABEL_165;
    }
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_184:
  swift_bridgeObjectRelease();
  *(void *)(v145 + 16) = 0;
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A2E20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v37 = result;
  if (a3 != a2)
  {
    uint64_t v8 = a3;
    int v9 = (void *)(a7 + 16);
    uint64_t v40 = *a4;
    uint64_t v10 = (unint64_t *)(*a4 + 8 * a3 - 8);
LABEL_7:
    unint64_t v11 = *(void *)(v40 + 8 * v8);
    uint64_t v12 = v37;
    uint64_t v38 = v10;
    while (1)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_51:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      unint64_t v13 = *v10;
      uint64_t result = swift_beginAccess();
      uint64_t v14 = (void *)*v9;
      if (!*v9) {
        goto LABEL_49;
      }
      uint64_t v15 = v14[1];
      if ((uint64_t)v11 >= v15) {
        goto LABEL_51;
      }
      uint64_t v16 = v14 + 8;
      if ((*((unsigned __int8 *)v14 + (v11 >> 3) + 64) >> (v11 & 7)))
      {
        uint64_t v17 = *v14 + 7;
        if (__OFADD__(*v14, 7))
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        if (v17 < 0) {
          uint64_t v17 = *v14 + 14;
        }
        uint64_t v18 = v17 >> 3;
        uint64_t v20 = v18 - 1;
        BOOL v19 = v18 < 1;
        uint64_t v21 = v18 + 62;
        if (!v19) {
          uint64_t v21 = v20;
        }
        unint64_t v22 = (unint64_t)&v16[2 * v11] + (v21 & 0xFFFFFFFFFFFFFFC0);
        uint64_t v23 = *(void *)(v22 + 64);
        uint64_t v24 = *(void *)(v22 + 72);
        uint64_t result = swift_bridgeObjectRetain();
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_51;
        }
      }
      if ((uint64_t)v13 >= v15) {
        goto LABEL_51;
      }
      if (((*((unsigned __int8 *)v16 + (v13 >> 3)) >> (v13 & 7)) & 1) == 0) {
        break;
      }
      uint64_t v25 = *v14 + 7;
      if (__OFADD__(*v14, 7)) {
        goto LABEL_48;
      }
      if (v25 < 0) {
        uint64_t v25 = *v14 + 14;
      }
      uint64_t v26 = v25 >> 3;
      uint64_t v27 = v26 - 1;
      BOOL v19 = v26 < 1;
      uint64_t v28 = v26 + 62;
      if (!v19) {
        uint64_t v28 = v27;
      }
      unint64_t v29 = (unint64_t)&v16[2 * v13] + (v28 & 0xFFFFFFFFFFFFFFC0);
      uint64_t v31 = *(void *)(v29 + 64);
      uint64_t v30 = *(void *)(v29 + 72);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v24)
      {
        if (!v30)
        {
LABEL_6:
          ++v8;
          uint64_t v10 = v38 + 1;
          if (v8 == a2) {
            return result;
          }
          goto LABEL_7;
        }
LABEL_5:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (!v30) {
        goto LABEL_36;
      }
      if (a8)
      {
        if (v31 == v23 && v24 == v30)
        {
LABEL_4:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      else if (v23 == v31 && v24 == v30)
      {
        goto LABEL_4;
      }
      char v34 = sub_22093F250();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v34 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_42:
      if (!v40) {
        goto LABEL_50;
      }
      unint64_t v35 = *v10;
      unint64_t v11 = v10[1];
      *uint64_t v10 = v11;
      v10[1] = v35;
      --v10;
      if (v8 == ++v12) {
        goto LABEL_6;
      }
    }
    if (!v24) {
      goto LABEL_6;
    }
LABEL_36:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_2208A30C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v161 = a5 & 1;
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v9 = sub_22093F170();
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A2E20(0, v8, 1, a1, a2, a3, a4, v161);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_197;
    }
  }
  else
  {
    if (v8 >= 0) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v8 + 1;
    }
    if (v8 >= -1)
    {
      uint64_t v159 = a3;
      uint64_t v153 = a4;
      uint64_t v150 = v8;
      uint64_t v148 = v9;
      uint64_t v146 = a1;
      if (v8 > 1)
      {
        uint64_t v11 = v10 >> 1;
        uint64_t v12 = sub_22093E8A0();
        *(void *)(v12 + 16) = v11;
        uint64_t v147 = v12;
        uint64_t v152 = (char *)(v12 + 32);
        goto LABEL_13;
      }
      unint64_t v13 = (char *)MEMORY[0x263F8EE78];
      uint64_t v152 = (char *)(MEMORY[0x263F8EE78] + 32);
      uint64_t v147 = MEMORY[0x263F8EE78];
      if (v8 == 1)
      {
LABEL_13:
        uint64_t v14 = 0;
        uint64_t v15 = *a1;
        int v162 = (void *)(a4 + 16);
        uint64_t v145 = *a1 - 8;
        unint64_t v13 = (char *)MEMORY[0x263F8EE78];
        uint64_t v16 = v150;
        uint64_t v164 = *a1;
        while (1)
        {
          uint64_t v17 = v14;
          uint64_t v18 = v14 + 1;
          if (v14 + 1 >= v16) {
            goto LABEL_77;
          }
          int v156 = sub_22089774C(*(void *)(v15 + 8 * v18), *(void *)(v15 + 8 * v14), a2, a3, v153, v161);
          if (v160) {
            goto LABEL_196;
          }
          BOOL v19 = v13;
          uint64_t v20 = v17;
          uint64_t v21 = v17 + 2;
          if (v17 + 2 >= v150)
          {
LABEL_64:
            uint64_t v23 = v21;
LABEL_65:
            if ((v156 & 1) == 0)
            {
LABEL_74:
              uint64_t v18 = v23;
              goto LABEL_75;
            }
LABEL_66:
            if (v23 >= v20)
            {
              uint64_t v17 = v20;
              if (v20 >= v23)
              {
                uint64_t v18 = v23;
                unint64_t v13 = v19;
              }
              else
              {
                uint64_t v45 = v23;
                uint64_t v46 = v23 - 1;
                uint64_t v47 = v20;
                unint64_t v13 = v19;
                do
                {
                  if (v47 != v46)
                  {
                    if (!v15) {
                      goto LABEL_234;
                    }
                    uint64_t v48 = *(void *)(v15 + 8 * v47);
                    *(void *)(v15 + 8 * v47) = *(void *)(v15 + 8 * v46);
                    *(void *)(v15 + 8 * v46) = v48;
                  }
                  BOOL v111 = ++v47 < v46--;
                }
                while (v111);
                uint64_t v18 = v45;
              }
              goto LABEL_77;
            }
            goto LABEL_229;
          }
          unint64_t v22 = *(void *)(v15 + 8 * v21);
          if ((v22 & 0x8000000000000000) != 0) {
            goto LABEL_236;
          }
          while (1)
          {
            unint64_t v24 = *(void *)(v164 + 8 * v18);
            swift_beginAccess();
            uint64_t v25 = (void *)*v162;
            if (!*v162) {
              goto LABEL_233;
            }
            uint64_t v26 = v25[1];
            if ((uint64_t)v22 >= v26) {
              goto LABEL_236;
            }
            uint64_t v27 = v25 + 8;
            if ((*((unsigned __int8 *)v25 + (v22 >> 3) + 64) >> (v22 & 7)))
            {
              uint64_t v28 = *v25 + 7;
              if (__OFADD__(*v25, 7)) {
                goto LABEL_216;
              }
              if (v28 < 0) {
                uint64_t v28 = *v25 + 14;
              }
              uint64_t v29 = v28 >> 3;
              uint64_t v30 = v29 - 1;
              BOOL v111 = v29 < 1;
              uint64_t v31 = v29 + 62;
              if (!v111) {
                uint64_t v31 = v30;
              }
              unint64_t v32 = (unint64_t)&v27[2 * v22] + (v31 & 0xFFFFFFFFFFFFFFC0);
              uint64_t v33 = *(void *)(v32 + 64);
              uint64_t v34 = *(void *)(v32 + 72);
              swift_bridgeObjectRetain();
              if ((v24 & 0x8000000000000000) != 0) {
                goto LABEL_236;
              }
            }
            else
            {
              uint64_t v33 = 0;
              uint64_t v34 = 0;
              if ((v24 & 0x8000000000000000) != 0) {
                goto LABEL_236;
              }
            }
            if ((uint64_t)v24 >= v26) {
              goto LABEL_236;
            }
            if (((*((unsigned __int8 *)v27 + (v24 >> 3)) >> (v24 & 7)) & 1) == 0) {
              break;
            }
            uint64_t v35 = *v25 + 7;
            uint64_t v15 = v164;
            if (__OFADD__(*v25, 7)) {
              goto LABEL_217;
            }
            if (v35 < 0) {
              uint64_t v35 = *v25 + 14;
            }
            uint64_t v36 = v35 >> 3;
            uint64_t v37 = v36 - 1;
            BOOL v111 = v36 < 1;
            uint64_t v38 = v36 + 62;
            if (!v111) {
              uint64_t v38 = v37;
            }
            unint64_t v39 = (unint64_t)&v27[2 * v24] + (v38 & 0xFFFFFFFFFFFFFFC0);
            uint64_t v40 = *(void *)(v39 + 64);
            uint64_t v41 = *(void *)(v39 + 72);
            swift_bridgeObjectRetain();
            if (!v34)
            {
              if (!v41)
              {
LABEL_19:
                if (v156) {
                  goto LABEL_63;
                }
LABEL_20:
                uint64_t v23 = v21 + 1;
                if (v21 + 1 >= v150) {
                  goto LABEL_74;
                }
                goto LABEL_21;
              }
LABEL_62:
              swift_bridgeObjectRelease();
              if (v156)
              {
LABEL_63:
                uint64_t v23 = v21;
                goto LABEL_66;
              }
              goto LABEL_20;
            }
            if (!v41) {
              goto LABEL_49;
            }
            if (v161)
            {
              if (v40 == v33 && v34 == v41)
              {
LABEL_61:
                swift_bridgeObjectRelease();
                goto LABEL_62;
              }
            }
            else if (v33 == v40 && v34 == v41)
            {
              goto LABEL_61;
            }
            int v44 = sub_22093F250();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v156 ^ v44)) {
              goto LABEL_64;
            }
            uint64_t v23 = v21 + 1;
            if (v21 + 1 >= v150) {
              goto LABEL_65;
            }
LABEL_21:
            unint64_t v22 = *(void *)(v15 + 8 * v23);
            uint64_t v18 = v21;
            uint64_t v21 = v23;
            if ((v22 & 0x8000000000000000) != 0) {
              goto LABEL_236;
            }
          }
          uint64_t v15 = v164;
          if (!v34) {
            goto LABEL_19;
          }
LABEL_49:
          swift_bridgeObjectRelease();
          if (v156)
          {
            uint64_t v23 = v21 + 1;
            if (v21 + 1 >= v150) {
              goto LABEL_66;
            }
            goto LABEL_21;
          }
          uint64_t v18 = v21;
LABEL_75:
          unint64_t v13 = v19;
          uint64_t v17 = v20;
LABEL_77:
          uint64_t v149 = v18;
          if (v18 >= v150) {
            goto LABEL_131;
          }
          if (__OFSUB__(v18, v17)) {
            goto LABEL_224;
          }
          if (v18 - v17 >= v148) {
            goto LABEL_131;
          }
          if (__OFADD__(v17, v148)) {
            goto LABEL_227;
          }
          uint64_t v49 = v150;
          if (v17 + v148 < v150) {
            uint64_t v49 = v17 + v148;
          }
          if (v49 < v17) {
            goto LABEL_228;
          }
          if (v18 == v49) {
            goto LABEL_131;
          }
          uint64_t v155 = v17;
          uint64_t v144 = v13;
          int v50 = (void *)(v145 + 8 * v18);
          uint64_t v151 = v49;
          while (2)
          {
            unint64_t v52 = *(void *)(v15 + 8 * v18);
            uint64_t v53 = v155;
            uint64_t v157 = v50;
            uint64_t v54 = v50;
            uint64_t v55 = v18;
            while (2)
            {
              if ((v52 & 0x8000000000000000) != 0) {
                goto LABEL_236;
              }
              unint64_t v56 = *v54;
              swift_beginAccess();
              uint64_t v57 = (void *)*v162;
              if (!*v162) {
                goto LABEL_230;
              }
              uint64_t v58 = v57[1];
              if ((uint64_t)v52 >= v58) {
                goto LABEL_236;
              }
              uint64_t v59 = v57 + 8;
              if (((*((unsigned __int8 *)v57 + (v52 >> 3) + 64) >> (v52 & 7)) & 1) == 0)
              {
                uint64_t v65 = 0;
                uint64_t v66 = 0;
                if ((v56 & 0x8000000000000000) != 0) {
                  goto LABEL_236;
                }
                goto LABEL_101;
              }
              uint64_t v60 = *v57 + 7;
              if (__OFADD__(*v57, 7))
              {
                __break(1u);
LABEL_201:
                __break(1u);
LABEL_202:
                __break(1u);
LABEL_203:
                __break(1u);
LABEL_204:
                __break(1u);
LABEL_205:
                __break(1u);
LABEL_206:
                __break(1u);
LABEL_207:
                __break(1u);
LABEL_208:
                __break(1u);
LABEL_209:
                __break(1u);
LABEL_210:
                __break(1u);
LABEL_211:
                __break(1u);
LABEL_212:
                __break(1u);
LABEL_213:
                __break(1u);
LABEL_214:
                __break(1u);
LABEL_215:
                __break(1u);
LABEL_216:
                __break(1u);
LABEL_217:
                __break(1u);
LABEL_218:
                __break(1u);
                goto LABEL_219;
              }
              if (v60 < 0) {
                uint64_t v60 = *v57 + 14;
              }
              uint64_t v61 = v60 >> 3;
              uint64_t v62 = v61 - 1;
              BOOL v111 = v61 < 1;
              uint64_t v63 = v61 + 62;
              if (!v111) {
                uint64_t v63 = v62;
              }
              unint64_t v64 = (unint64_t)&v59[2 * v52] + (v63 & 0xFFFFFFFFFFFFFFC0);
              uint64_t v65 = *(void *)(v64 + 64);
              uint64_t v66 = *(void *)(v64 + 72);
              swift_bridgeObjectRetain();
              if ((v56 & 0x8000000000000000) != 0) {
                goto LABEL_236;
              }
LABEL_101:
              if ((uint64_t)v56 >= v58) {
                goto LABEL_236;
              }
              if (((*((unsigned __int8 *)v59 + (v56 >> 3)) >> (v56 & 7)) & 1) == 0)
              {
                if (!v66) {
                  goto LABEL_86;
                }
                goto LABEL_117;
              }
              uint64_t v67 = *v57 + 7;
              if (__OFADD__(*v57, 7)) {
                goto LABEL_201;
              }
              if (v67 < 0) {
                uint64_t v67 = *v57 + 14;
              }
              uint64_t v68 = v67 >> 3;
              uint64_t v69 = v68 - 1;
              BOOL v111 = v68 < 1;
              uint64_t v70 = v68 + 62;
              if (!v111) {
                uint64_t v70 = v69;
              }
              unint64_t v71 = (unint64_t)&v59[2 * v56] + (v70 & 0xFFFFFFFFFFFFFFC0);
              uint64_t v72 = *(void *)(v71 + 64);
              uint64_t v73 = *(void *)(v71 + 72);
              swift_bridgeObjectRetain();
              if (v66)
              {
                if (v73)
                {
                  if (v161)
                  {
                    if (v72 == v65 && v66 == v73)
                    {
LABEL_128:
                      swift_bridgeObjectRelease();
                      uint64_t v51 = v55;
LABEL_129:
                      swift_bridgeObjectRelease();
                      goto LABEL_87;
                    }
                  }
                  else if (v65 == v72 && v66 == v73)
                  {
                    goto LABEL_128;
                  }
                  char v76 = sub_22093F250();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v76 & 1) == 0)
                  {
LABEL_86:
                    uint64_t v51 = v55;
                    goto LABEL_87;
                  }
                  goto LABEL_123;
                }
LABEL_117:
                swift_bridgeObjectRelease();
LABEL_123:
                if (!v164) {
                  goto LABEL_231;
                }
                uint64_t v51 = v55;
                unint64_t v77 = *v54;
                unint64_t v52 = v54[1];
                *uint64_t v54 = v52;
                v54[1] = v77;
                --v54;
                if (v55 == ++v53) {
                  goto LABEL_87;
                }
                continue;
              }
              break;
            }
            uint64_t v51 = v55;
            if (v73) {
              goto LABEL_129;
            }
LABEL_87:
            uint64_t v18 = v51 + 1;
            int v50 = v157 + 1;
            uint64_t v15 = v164;
            if (v18 != v151) {
              continue;
            }
            break;
          }
          uint64_t v149 = v151;
          unint64_t v13 = v144;
          uint64_t v17 = v155;
LABEL_131:
          if (v149 < v17) {
            goto LABEL_223;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v13 = sub_22081B3EC(0, *((void *)v13 + 2) + 1, 1, v13);
          }
          unint64_t v79 = *((void *)v13 + 2);
          unint64_t v78 = *((void *)v13 + 3);
          unint64_t v80 = v79 + 1;
          if (v79 >= v78 >> 1) {
            unint64_t v13 = sub_22081B3EC((char *)(v78 > 1), v79 + 1, 1, v13);
          }
          *((void *)v13 + 2) = v80;
          unint64_t v81 = v13 + 32;
          uint64_t v82 = &v13[16 * v79 + 32];
          *(void *)uint64_t v82 = v17;
          *((void *)v82 + 1) = v149;
          if (v79)
          {
            while (1)
            {
              unint64_t v83 = v80 - 1;
              if (v80 >= 4)
              {
                uint64_t v88 = &v81[16 * v80];
                uint64_t v89 = *((void *)v88 - 8);
                uint64_t v90 = *((void *)v88 - 7);
                BOOL v94 = __OFSUB__(v90, v89);
                uint64_t v91 = v90 - v89;
                if (v94) {
                  goto LABEL_206;
                }
                uint64_t v93 = *((void *)v88 - 6);
                uint64_t v92 = *((void *)v88 - 5);
                BOOL v94 = __OFSUB__(v92, v93);
                uint64_t v86 = v92 - v93;
                char v87 = v94;
                if (v94) {
                  goto LABEL_207;
                }
                unint64_t v95 = v80 - 2;
                uint64_t v96 = &v81[16 * v80 - 32];
                uint64_t v98 = *(void *)v96;
                uint64_t v97 = *((void *)v96 + 1);
                BOOL v94 = __OFSUB__(v97, v98);
                uint64_t v99 = v97 - v98;
                if (v94) {
                  goto LABEL_208;
                }
                BOOL v94 = __OFADD__(v86, v99);
                uint64_t v100 = v86 + v99;
                if (v94) {
                  goto LABEL_210;
                }
                if (v100 >= v91)
                {
                  uint64_t v118 = &v81[16 * v83];
                  uint64_t v120 = *(void *)v118;
                  uint64_t v119 = *((void *)v118 + 1);
                  BOOL v94 = __OFSUB__(v119, v120);
                  uint64_t v121 = v119 - v120;
                  if (v94) {
                    goto LABEL_218;
                  }
                  BOOL v111 = v86 < v121;
                  goto LABEL_168;
                }
              }
              else
              {
                if (v80 != 3)
                {
                  uint64_t v112 = *((void *)v13 + 4);
                  uint64_t v113 = *((void *)v13 + 5);
                  BOOL v94 = __OFSUB__(v113, v112);
                  uint64_t v105 = v113 - v112;
                  char v106 = v94;
                  goto LABEL_162;
                }
                uint64_t v85 = *((void *)v13 + 4);
                uint64_t v84 = *((void *)v13 + 5);
                BOOL v94 = __OFSUB__(v84, v85);
                uint64_t v86 = v84 - v85;
                char v87 = v94;
              }
              if (v87) {
                goto LABEL_209;
              }
              unint64_t v95 = v80 - 2;
              uint64_t v101 = &v81[16 * v80 - 32];
              uint64_t v103 = *(void *)v101;
              uint64_t v102 = *((void *)v101 + 1);
              BOOL v104 = __OFSUB__(v102, v103);
              uint64_t v105 = v102 - v103;
              char v106 = v104;
              if (v104) {
                goto LABEL_211;
              }
              uint64_t v107 = &v81[16 * v83];
              uint64_t v109 = *(void *)v107;
              uint64_t v108 = *((void *)v107 + 1);
              BOOL v94 = __OFSUB__(v108, v109);
              uint64_t v110 = v108 - v109;
              if (v94) {
                goto LABEL_214;
              }
              if (__OFADD__(v105, v110)) {
                goto LABEL_215;
              }
              if (v105 + v110 >= v86)
              {
                BOOL v111 = v86 < v110;
LABEL_168:
                if (v111) {
                  unint64_t v83 = v95;
                }
                goto LABEL_170;
              }
LABEL_162:
              if (v106) {
                goto LABEL_212;
              }
              uint64_t v114 = &v81[16 * v83];
              uint64_t v116 = *(void *)v114;
              uint64_t v115 = *((void *)v114 + 1);
              BOOL v94 = __OFSUB__(v115, v116);
              uint64_t v117 = v115 - v116;
              if (v94) {
                goto LABEL_213;
              }
              if (v117 < v105) {
                goto LABEL_179;
              }
LABEL_170:
              unint64_t v122 = v83 - 1;
              if (v83 - 1 >= v80) {
                goto LABEL_202;
              }
              if (!v15) {
                goto LABEL_232;
              }
              uint64_t v123 = &v81[16 * v122];
              uint64_t v124 = *(void *)v123;
              unint64_t v125 = v83;
              uint64_t v126 = &v81[16 * v83];
              uint64_t v127 = *((void *)v126 + 1);
              uint64_t v128 = (char *)(v15 + 8 * *(void *)v123);
              int v158 = (char *)(v15 + 8 * *(void *)v126);
              swift_bridgeObjectRetain();
              swift_retain();
              sub_22089DEC8(v128, v158, v15 + 8 * v127, v152, a2, v159, v153, v161, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, void))sub_22089774C);
              if (v160) {
                goto LABEL_196;
              }
              if (v127 < v124) {
                goto LABEL_203;
              }
              if (v125 > *((void *)v13 + 2)) {
                goto LABEL_204;
              }
              unint64_t v129 = v125;
              *(void *)uint64_t v123 = v124;
              unint64_t v81 = v13 + 32;
              *(void *)&v13[16 * v122 + 40] = v127;
              unint64_t v130 = *((void *)v13 + 2);
              if (v129 >= v130) {
                goto LABEL_205;
              }
              unint64_t v80 = v130 - 1;
              memmove(v126, v126 + 16, 16 * (v130 - 1 - v129));
              *((void *)v13 + 2) = v130 - 1;
              uint64_t v15 = v164;
              if (v130 <= 2) {
                goto LABEL_179;
              }
            }
          }
          unint64_t v80 = 1;
LABEL_179:
          uint64_t v14 = v149;
          uint64_t v16 = v150;
          a3 = v159;
          if (v149 >= v150) {
            goto LABEL_185;
          }
        }
      }
      unint64_t v80 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_185:
      if (v80 < 2)
      {
LABEL_196:
        swift_bridgeObjectRelease();
        *(void *)(v147 + 16) = 0;
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_197:
        swift_release();
        return swift_bridgeObjectRelease();
      }
      uint64_t v131 = *v146;
      uint64_t v163 = *v146;
      while (1)
      {
        unint64_t v132 = v80 - 2;
        if (v80 < 2) {
          break;
        }
        if (!v131) {
          goto LABEL_235;
        }
        unint64_t v133 = v13;
        unint64_t v134 = v13 + 32;
        uint64_t v135 = *(void *)&v13[16 * v132 + 32];
        uint64_t v136 = *(void *)&v134[16 * v80 - 8];
        unint64_t v137 = (char *)(v131 + 8 * v135);
        uint64_t v165 = (char *)(v131 + 8 * *(void *)&v134[16 * v80 - 16]);
        unint64_t v138 = v131 + 8 * v136;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22089DEC8(v137, v165, v138, v152, a2, v159, v153, v161, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, void))sub_22089774C);
        if (v160) {
          goto LABEL_196;
        }
        if (v136 < v135) {
          goto LABEL_220;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v133 = sub_22080AB70((uint64_t)v133);
        }
        if (v132 >= *((void *)v133 + 2)) {
          goto LABEL_221;
        }
        uint64_t v139 = v133;
        uint64_t v140 = v133 + 32;
        unint64_t v141 = &v133[16 * v132 + 32];
        *(void *)unint64_t v141 = v135;
        *((void *)v141 + 1) = v136;
        unint64_t v142 = *((void *)v133 + 2);
        if (v80 > v142) {
          goto LABEL_222;
        }
        unint64_t v13 = v139;
        memmove(&v140[16 * v80 - 16], &v140[16 * v80], 16 * (v142 - v80));
        *((void *)v13 + 2) = v142 - 1;
        unint64_t v80 = v142 - 1;
        uint64_t v131 = v163;
        if (v142 <= 2) {
          goto LABEL_196;
        }
      }
LABEL_219:
      __break(1u);
LABEL_220:
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_232:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_235:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_236:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208A3D3C(char *__src, char *__dst, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4;
  uint64_t v10 = __dst;
  uint64_t v11 = __src;
  int64_t v12 = __dst - __src;
  int64_t v13 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v13 = __dst - __src;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = a3 - (void)__dst;
  uint64_t v16 = a3 - (void)__dst + 7;
  if ((uint64_t)(a3 - (void)__dst) >= 0) {
    uint64_t v16 = a3 - (void)__dst;
  }
  uint64_t v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v17] <= a4) {
      memmove(a4, __dst, 8 * v17);
    }
    uint64_t v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8) {
      goto LABEL_96;
    }
    uint64_t v66 = (void *)(a7 + 16);
    uint64_t v41 = (char *)(a3 - 8);
    uint64_t v65 = v8;
    while (1)
    {
      unint64_t v42 = *((void *)v18 - 1);
      if ((v42 & 0x8000000000000000) != 0)
      {
LABEL_107:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v43 = v10;
      uint64_t v45 = v10 - 8;
      unint64_t v44 = *((void *)v10 - 1);
      swift_beginAccess();
      uint64_t v46 = (void *)*v66;
      if (!*v66) {
        goto LABEL_106;
      }
      uint64_t v47 = v46[1];
      if ((uint64_t)v42 >= v47) {
        goto LABEL_107;
      }
      uint64_t v48 = v46 + 8;
      if ((*((unsigned __int8 *)v46 + (v42 >> 3) + 64) >> (v42 & 7)))
      {
        uint64_t v49 = *v46 + 7;
        if (__OFADD__(*v46, 7))
        {
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
          goto LABEL_107;
        }
        if (v49 < 0) {
          uint64_t v49 = *v46 + 14;
        }
        uint64_t v50 = v49 >> 3;
        uint64_t v51 = v50 - 1;
        BOOL v27 = v50 < 1;
        uint64_t v52 = v50 + 62;
        if (!v27) {
          uint64_t v52 = v51;
        }
        int v53 = *((unsigned __int8 *)v48 + v42 + (v52 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v44 & 0x8000000000000000) != 0) {
          goto LABEL_107;
        }
      }
      else
      {
        int v53 = 2;
        if ((v44 & 0x8000000000000000) != 0) {
          goto LABEL_107;
        }
      }
      if ((uint64_t)v44 >= v47) {
        goto LABEL_107;
      }
      if ((*((unsigned __int8 *)v48 + (v44 >> 3)) >> (v44 & 7)))
      {
        uint64_t v54 = *v46;
        BOOL v32 = __OFADD__(v54, 7);
        uint64_t v55 = v54 + 7;
        if (v32) {
          goto LABEL_104;
        }
        uint64_t v56 = v55 / 8;
        uint64_t v57 = v56 - 1;
        BOOL v27 = v56 < 1;
        uint64_t v58 = v56 + 62;
        if (!v27) {
          uint64_t v58 = v57;
        }
        int v59 = *((unsigned __int8 *)v48 + v44 + (v58 & 0xFFFFFFFFFFFFFFC0) + 64);
      }
      else
      {
        int v59 = 2;
      }
      uint64_t v60 = v41 + 8;
      if (v53 != 2)
      {
        BOOL v61 = (v59 & 1) != 0 && v53 == 0;
        BOOL v62 = !v61;
        if (v59 == 2 || !v62) {
          break;
        }
      }
      uint64_t v45 = v18 - 8;
      if (v60 != v18)
      {
        v18 -= 8;
LABEL_91:
        *(void *)uint64_t v41 = *(void *)v45;
        goto LABEL_92;
      }
      BOOL v63 = v41 >= v18;
      v18 -= 8;
      if (v63) {
        goto LABEL_91;
      }
LABEL_92:
      if (v10 <= v11)
      {
        uint64_t v8 = v65;
        goto LABEL_96;
      }
      v41 -= 8;
      uint64_t v8 = v65;
      if (v18 <= v65) {
        goto LABEL_96;
      }
    }
    if (v60 == v10)
    {
      v10 -= 8;
      if (v41 < v43) {
        goto LABEL_92;
      }
    }
    else
    {
      v10 -= 8;
    }
    goto LABEL_91;
  }
  if (a4 != __src || &__src[8 * v14] <= a4) {
    memmove(a4, __src, 8 * v14);
  }
  uint64_t v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    BOOL v19 = (void *)(a7 + 16);
    do
    {
      unint64_t v20 = *(void *)v10;
      if ((*(void *)v10 & 0x8000000000000000) != 0) {
        goto LABEL_107;
      }
      unint64_t v21 = *(void *)v8;
      swift_beginAccess();
      unint64_t v22 = (void *)*v19;
      if (!*v19) {
        goto LABEL_105;
      }
      uint64_t v23 = v22[1];
      if ((uint64_t)v20 >= v23) {
        goto LABEL_107;
      }
      unint64_t v24 = v22 + 8;
      if ((*((unsigned __int8 *)v22 + (v20 >> 3) + 64) >> (v20 & 7)))
      {
        uint64_t v25 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_102;
        }
        if (v25 < 0) {
          uint64_t v25 = *v22 + 14;
        }
        uint64_t v26 = v25 >> 3;
        uint64_t v28 = v26 - 1;
        BOOL v27 = v26 < 1;
        uint64_t v29 = v26 + 62;
        if (!v27) {
          uint64_t v29 = v28;
        }
        int v30 = *((unsigned __int8 *)v24 + v20 + (v29 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_107;
        }
      }
      else
      {
        int v30 = 2;
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_107;
        }
      }
      if ((uint64_t)v21 >= v23) {
        goto LABEL_107;
      }
      if ((*((unsigned __int8 *)v24 + (v21 >> 3)) >> (v21 & 7)))
      {
        uint64_t v31 = *v22;
        BOOL v32 = __OFADD__(v31, 7);
        uint64_t v33 = v31 + 7;
        if (v32) {
          goto LABEL_103;
        }
        uint64_t v34 = v33 / 8;
        uint64_t v35 = v34 - 1;
        BOOL v27 = v34 < 1;
        uint64_t v36 = v34 + 62;
        if (!v27) {
          uint64_t v36 = v35;
        }
        int v37 = *((unsigned __int8 *)v24 + v21 + (v36 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v30 == 2)
        {
LABEL_40:
          uint64_t v40 = v8;
          BOOL v38 = v11 == v8;
          v8 += 8;
          if (v38) {
            goto LABEL_42;
          }
LABEL_41:
          *(void *)uint64_t v11 = *(void *)v40;
          goto LABEL_42;
        }
      }
      else
      {
        int v37 = 2;
        if (v30 == 2) {
          goto LABEL_40;
        }
      }
      BOOL v38 = (v37 & 1) != 0 && v30 == 0;
      char v39 = !v38;
      if (v37 != 2 && (v39 & 1) != 0) {
        goto LABEL_40;
      }
      uint64_t v40 = v10;
      BOOL v38 = v11 == v10;
      v10 += 8;
      if (!v38) {
        goto LABEL_41;
      }
LABEL_42:
      v11 += 8;
    }
    while (v8 < v18 && (unint64_t)v10 < a3);
  }
  uint64_t v10 = v11;
LABEL_96:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  }
  return 1;
}

uint64_t sub_2208A41F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = result;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *a4;
    uint64_t v10 = (void *)(a7 + 16);
    uint64_t v11 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v12 = *(void *)(v9 + 8 * v7);
    uint64_t v13 = v35;
    uint64_t v14 = (unint64_t *)v11;
    while ((v12 & 0x8000000000000000) == 0)
    {
      unint64_t v15 = *v14;
      uint64_t result = swift_beginAccess();
      uint64_t v16 = (void *)*v10;
      if (!*v10) {
        goto LABEL_39;
      }
      uint64_t v17 = v16[1];
      if ((uint64_t)v12 >= v17) {
        break;
      }
      uint64_t v18 = v16 + 8;
      if ((*((unsigned __int8 *)v16 + (v12 >> 3) + 64) >> (v12 & 7)))
      {
        uint64_t v19 = *v16 + 7;
        if (__OFADD__(*v16, 7))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          break;
        }
        if (v19 < 0) {
          uint64_t v19 = *v16 + 14;
        }
        uint64_t v20 = v19 >> 3;
        uint64_t v22 = v20 - 1;
        BOOL v21 = v20 < 1;
        uint64_t v23 = v20 + 62;
        if (!v21) {
          uint64_t v23 = v22;
        }
        int v24 = *((unsigned __int8 *)v18 + v12 + (v23 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v15 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        int v24 = 2;
        if ((v15 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v15 >= v17) {
        break;
      }
      if ((*((unsigned __int8 *)v18 + (v15 >> 3)) >> (v15 & 7)))
      {
        uint64_t v25 = *v16;
        BOOL v26 = __OFADD__(v25, 7);
        uint64_t v27 = v25 + 7;
        if (v26) {
          goto LABEL_38;
        }
        uint64_t v28 = v27 / 8;
        uint64_t v29 = v28 - 1;
        BOOL v21 = v28 < 1;
        uint64_t v30 = v28 + 62;
        if (!v21) {
          uint64_t v30 = v29;
        }
        int v31 = *((unsigned __int8 *)v18 + v15 + (v30 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v24 == 2) {
          goto LABEL_4;
        }
      }
      else
      {
        int v31 = 2;
        if (v24 == 2) {
          goto LABEL_4;
        }
      }
      BOOL v33 = (v31 & 1) == 0 || v24 != 0;
      if (v31 == 2 || !v33)
      {
        if (!v9) {
          goto LABEL_40;
        }
        unint64_t v34 = *v14;
        unint64_t v12 = v14[1];
        *uint64_t v14 = v12;
        v14[1] = v34;
        --v14;
        if (v7 != ++v13) {
          continue;
        }
      }
LABEL_4:
      ++v7;
      v11 += 8;
      if (v7 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A4410(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = sub_22093F170();
  if (v8 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A41F8(0, v7, 1, a1, a2, a3, a4);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_192;
    }
    goto LABEL_219;
  }
  uint64_t v136 = v8;
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_218;
  }
  uint64_t v143 = a3;
  uint64_t v148 = a4;
  unint64_t v134 = a1;
  if (v7 <= 1)
  {
    unint64_t v142 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v135 = MEMORY[0x263F8EE78];
    if (v7 != 1)
    {
      unint64_t v71 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v14 = (char *)MEMORY[0x263F8EE78];
LABEL_178:
      uint64_t v147 = v14;
      if (v71 < 2)
      {
LABEL_189:
        swift_bridgeObjectRelease();
        *(void *)(v135 + 16) = 0;
        swift_release_n();
        goto LABEL_191;
      }
      uint64_t v123 = *v134;
      uint64_t v154 = *v134;
      while (1)
      {
        unint64_t v124 = v71 - 2;
        if (v71 < 2) {
          goto LABEL_212;
        }
        if (!v123) {
          goto LABEL_227;
        }
        uint64_t v125 = *(void *)&v147[16 * v124 + 32];
        uint64_t v126 = *(void *)&v147[16 * v71 + 24];
        uint64_t v127 = (char *)(v123 + 8 * v125);
        uint64_t v128 = (char *)(v123 + 8 * *(void *)&v147[16 * v71 + 16]);
        unint64_t v129 = v123 + 8 * v126;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A3D3C(v127, v128, v129, v142, a2, v143, v148);
        if (v152) {
          goto LABEL_190;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v126 < v125) {
          goto LABEL_214;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v147 = sub_22080AB70((uint64_t)v147);
        }
        if (v124 >= *((void *)v147 + 2)) {
          goto LABEL_215;
        }
        unint64_t v130 = &v147[16 * v124 + 32];
        *(void *)unint64_t v130 = v125;
        *((void *)v130 + 1) = v126;
        unint64_t v131 = *((void *)v147 + 2);
        if (v71 > v131) {
          goto LABEL_216;
        }
        memmove(&v147[16 * v71 + 16], &v147[16 * v71 + 32], 16 * (v131 - v71));
        *((void *)v147 + 2) = v131 - 1;
        unint64_t v71 = v131 - 1;
        uint64_t v123 = v154;
        if (v131 <= 2) {
          goto LABEL_189;
        }
      }
    }
  }
  else
  {
    uint64_t v10 = v9 >> 1;
    uint64_t v11 = sub_22093E8A0();
    *(void *)(v11 + 16) = v10;
    uint64_t v135 = v11;
    unint64_t v142 = (char *)(v11 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v153 = (void **)(a4 + 16);
  uint64_t v133 = *a1 - 8;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  uint64_t v139 = *a1;
  uint64_t v140 = v7;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    if (v12 + 1 >= v7) {
      goto LABEL_76;
    }
    uint64_t v17 = *(void *)(v13 + 8 * v16);
    if (v17 < 0) {
      goto LABEL_229;
    }
    uint64_t v18 = v14;
    uint64_t v19 = *(void *)(v13 + 8 * v12);
    swift_beginAccess();
    uint64_t v20 = *v153;
    if (!*v153) {
      goto LABEL_228;
    }
    if (v17 >= v20[1]) {
      goto LABEL_229;
    }
    uint64_t v149 = v15;
    char v21 = sub_220891788(v17, v20, v148);
    if (v19 < 0) {
      goto LABEL_229;
    }
    uint64_t v23 = v20[1];
    if (v19 >= v23) {
      goto LABEL_229;
    }
    char v24 = v21;
    char v25 = sub_220891788(v19, v20, v22);
    if (v24 == 2)
    {
      uint64_t v26 = v149 + 2;
      uint64_t v14 = v18;
      if (v149 + 2 >= v7) {
        goto LABEL_121;
      }
    }
    else
    {
      uint64_t v14 = v18;
      if (v25 == 2)
      {
        uint64_t v26 = v149 + 2;
LABEL_27:
        if (v26 < v7)
        {
          int v27 = 1;
          goto LABEL_29;
        }
        uint64_t v15 = v149;
        if (v149 < v26)
        {
LABEL_68:
          uint64_t v42 = v26 - 1;
          uint64_t v43 = v15;
          do
          {
            if (v43 != v42)
            {
              if (!v13) {
                goto LABEL_226;
              }
              uint64_t v44 = *(void *)(v13 + 8 * v43);
              *(void *)(v13 + 8 * v43) = *(void *)(v13 + 8 * v42);
              *(void *)(v13 + 8 * v42) = v44;
            }
            BOOL v102 = ++v43 < v42--;
          }
          while (v102);
        }
LABEL_75:
        uint64_t v16 = v26;
LABEL_76:
        if (v16 < v7) {
          goto LABEL_77;
        }
        goto LABEL_123;
      }
      uint64_t v26 = v149 + 2;
      if (v24 & 1) == 0 && (v25) {
        goto LABEL_27;
      }
      if (v26 >= v7)
      {
LABEL_121:
        uint64_t v16 = v26;
LABEL_122:
        uint64_t v15 = v149;
        if (v16 >= v7) {
          goto LABEL_123;
        }
LABEL_77:
        if (__OFSUB__(v16, v15)) {
          goto LABEL_217;
        }
        if (v16 - v15 < v136)
        {
          if (__OFADD__(v15, v136)) {
            goto LABEL_221;
          }
          if (v15 + v136 >= v7) {
            uint64_t v45 = v7;
          }
          else {
            uint64_t v45 = v15 + v136;
          }
          if (v45 < v15)
          {
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_225:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_226:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_227:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_228:
            __break(1u);
LABEL_229:
            uint64_t result = sub_22093F090();
            __break(1u);
            return result;
          }
          if (v16 != v45)
          {
            uint64_t v150 = v15;
            uint64_t v145 = v14;
            uint64_t v46 = (unint64_t *)(v133 + 8 * v16);
            uint64_t v137 = v45;
            do
            {
              unint64_t v47 = *(void *)(v13 + 8 * v16);
              uint64_t v48 = v150;
              uint64_t v49 = v46;
              do
              {
                if ((v47 & 0x8000000000000000) != 0) {
                  goto LABEL_229;
                }
                unint64_t v50 = *v49;
                swift_beginAccess();
                uint64_t v51 = *v153;
                if (!*v153) {
                  goto LABEL_223;
                }
                uint64_t v52 = v51[1];
                if ((uint64_t)v47 >= v52) {
                  goto LABEL_229;
                }
                int v53 = v51 + 8;
                if ((*((unsigned __int8 *)v51 + (v47 >> 3) + 64) >> (v47 & 7)))
                {
                  uint64_t v54 = *v51 + 7;
                  if (__OFADD__(*v51, 7))
                  {
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
LABEL_207:
                    __break(1u);
LABEL_208:
                    __break(1u);
LABEL_209:
                    __break(1u);
LABEL_210:
                    __break(1u);
LABEL_211:
                    __break(1u);
LABEL_212:
                    __break(1u);
LABEL_213:
                    __break(1u);
LABEL_214:
                    __break(1u);
LABEL_215:
                    __break(1u);
LABEL_216:
                    __break(1u);
LABEL_217:
                    __break(1u);
LABEL_218:
                    __break(1u);
LABEL_219:
                    __break(1u);
LABEL_220:
                    __break(1u);
LABEL_221:
                    __break(1u);
                    goto LABEL_222;
                  }
                  if (v54 < 0) {
                    uint64_t v54 = *v51 + 14;
                  }
                  uint64_t v55 = v54 >> 3;
                  uint64_t v56 = v55 - 1;
                  BOOL v102 = v55 < 1;
                  uint64_t v57 = v55 + 62;
                  if (!v102) {
                    uint64_t v57 = v56;
                  }
                  int v58 = *((unsigned __int8 *)v53 + v47 + (v57 & 0xFFFFFFFFFFFFFFC0) + 64);
                  if ((v50 & 0x8000000000000000) != 0) {
                    goto LABEL_229;
                  }
                }
                else
                {
                  int v58 = 2;
                  if ((v50 & 0x8000000000000000) != 0) {
                    goto LABEL_229;
                  }
                }
                if ((uint64_t)v50 >= v52) {
                  goto LABEL_229;
                }
                if ((*((unsigned __int8 *)v53 + (v50 >> 3)) >> (v50 & 7)))
                {
                  uint64_t v59 = *v51;
                  BOOL v85 = __OFADD__(v59, 7);
                  uint64_t v60 = v59 + 7;
                  if (v85) {
                    goto LABEL_194;
                  }
                  uint64_t v61 = v60 / 8;
                  uint64_t v62 = v61 - 1;
                  BOOL v102 = v61 < 1;
                  uint64_t v63 = v61 + 62;
                  if (!v102) {
                    uint64_t v63 = v62;
                  }
                  int v64 = *((unsigned __int8 *)v53 + v50 + (v63 & 0xFFFFFFFFFFFFFFC0) + 64);
                  if (v58 == 2) {
                    break;
                  }
                }
                else
                {
                  int v64 = 2;
                  if (v58 == 2) {
                    break;
                  }
                }
                BOOL v66 = (v64 & 1) == 0 || v58 != 0;
                if (v64 != 2 && v66) {
                  break;
                }
                if (!v13) {
                  goto LABEL_224;
                }
                unint64_t v67 = *v49;
                unint64_t v47 = v49[1];
                *uint64_t v49 = v47;
                v49[1] = v67;
                --v49;
                ++v48;
              }
              while (v16 != v48);
              ++v16;
              ++v46;
              uint64_t v41 = v137;
            }
            while (v16 != v137);
            uint64_t v14 = v145;
            uint64_t v15 = v150;
            goto LABEL_124;
          }
        }
LABEL_123:
        uint64_t v41 = v16;
        goto LABEL_124;
      }
    }
    int v27 = 0;
LABEL_29:
    uint64_t v28 = v20 + 8;
    uint64_t v29 = v7 <= v26 + 1 ? v26 + 1 : v7;
    uint64_t v30 = *(void *)(v13 + 8 * v16);
    uint64_t v16 = v26;
    do
    {
      uint64_t v31 = v30;
      uint64_t v30 = *(void *)(v13 + 8 * v16);
      if (v30 < 0 || v30 >= v23) {
        goto LABEL_229;
      }
      if ((*((unsigned __int8 *)v28 + ((unint64_t)v30 >> 3)) >> (v30 & 7)))
      {
        uint64_t v32 = *v20 + 7;
        if (__OFADD__(*v20, 7)) {
          goto LABEL_209;
        }
        if (v32 < 0) {
          uint64_t v32 = *v20 + 14;
        }
        uint64_t v33 = v32 >> 3;
        uint64_t v34 = v33 - 1;
        BOOL v102 = v33 < 1;
        uint64_t v35 = v33 + 62;
        if (!v102) {
          uint64_t v35 = v34;
        }
        int v36 = *((unsigned __int8 *)v28 + v30 + (v35 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v31 < 0) {
          goto LABEL_229;
        }
      }
      else
      {
        int v36 = 2;
        if (v31 < 0) {
          goto LABEL_229;
        }
      }
      if (v31 >= v23) {
        goto LABEL_229;
      }
      if ((*((unsigned __int8 *)v28 + ((unint64_t)v31 >> 3)) >> (v31 & 7)))
      {
        uint64_t v37 = *v20 + 7;
        if (__OFADD__(*v20, 7)) {
          goto LABEL_210;
        }
        if (v36 != 2)
        {
          if (v37 < 0) {
            uint64_t v37 = *v20 + 14;
          }
          uint64_t v38 = v37 >> 3;
          uint64_t v39 = v38 - 1;
          BOOL v102 = v38 < 1;
          uint64_t v40 = v38 + 62;
          if (!v102) {
            uint64_t v40 = v39;
          }
          if (!v36 && (*((unsigned char *)v28 + v31 + (v40 & 0xFFFFFFFFFFFFFFC0) + 64) & 1) != 0)
          {
            if (!v27) {
              goto LABEL_122;
            }
            goto LABEL_34;
          }
        }
      }
      else if (v36 != 2)
      {
        if ((v27 & 1) == 0) {
          goto LABEL_122;
        }
        goto LABEL_34;
      }
      if (v27)
      {
        uint64_t v41 = v16;
        uint64_t v15 = v149;
        goto LABEL_66;
      }
LABEL_34:
      ++v16;
    }
    while (v16 < v7);
    uint64_t v41 = v29;
    uint64_t v15 = v149;
    if (v27)
    {
LABEL_66:
      uint64_t v26 = v41;
      if (v41 < v15) {
        goto LABEL_220;
      }
      if (v15 < v41) {
        goto LABEL_68;
      }
      goto LABEL_75;
    }
LABEL_124:
    if (v41 < v15) {
      goto LABEL_213;
    }
    uint64_t v68 = v14;
    uint64_t v138 = v41;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v14 = v68;
    }
    else {
      uint64_t v14 = sub_22081B3EC(0, *((void *)v68 + 2) + 1, 1, v68);
    }
    unint64_t v70 = *((void *)v14 + 2);
    unint64_t v69 = *((void *)v14 + 3);
    unint64_t v71 = v70 + 1;
    if (v70 >= v69 >> 1) {
      uint64_t v14 = sub_22081B3EC((char *)(v69 > 1), v70 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v71;
    uint64_t v72 = v14 + 32;
    uint64_t v73 = &v14[16 * v70 + 32];
    *(void *)uint64_t v73 = v15;
    *((void *)v73 + 1) = v138;
    if (v70) {
      break;
    }
    unint64_t v71 = 1;
LABEL_173:
    uint64_t v12 = v138;
    if (v138 >= v7) {
      goto LABEL_178;
    }
  }
  uint64_t v146 = v14;
  unint64_t v141 = v14 + 32;
  while (1)
  {
    unint64_t v74 = v71 - 1;
    if (v71 >= 4)
    {
      unint64_t v79 = &v72[16 * v71];
      uint64_t v80 = *((void *)v79 - 8);
      uint64_t v81 = *((void *)v79 - 7);
      BOOL v85 = __OFSUB__(v81, v80);
      uint64_t v82 = v81 - v80;
      if (v85) {
        goto LABEL_199;
      }
      uint64_t v84 = *((void *)v79 - 6);
      uint64_t v83 = *((void *)v79 - 5);
      BOOL v85 = __OFSUB__(v83, v84);
      uint64_t v77 = v83 - v84;
      char v78 = v85;
      if (v85) {
        goto LABEL_200;
      }
      unint64_t v86 = v71 - 2;
      char v87 = &v72[16 * v71 - 32];
      uint64_t v89 = *(void *)v87;
      uint64_t v88 = *((void *)v87 + 1);
      BOOL v85 = __OFSUB__(v88, v89);
      uint64_t v90 = v88 - v89;
      if (v85) {
        goto LABEL_201;
      }
      BOOL v85 = __OFADD__(v77, v90);
      uint64_t v91 = v77 + v90;
      if (v85) {
        goto LABEL_203;
      }
      if (v91 >= v82)
      {
        uint64_t v109 = &v72[16 * v74];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v85 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v85) {
          goto LABEL_211;
        }
        BOOL v102 = v77 < v112;
        goto LABEL_162;
      }
    }
    else
    {
      if (v71 != 3)
      {
        uint64_t v103 = *((void *)v14 + 4);
        uint64_t v104 = *((void *)v14 + 5);
        BOOL v85 = __OFSUB__(v104, v103);
        uint64_t v96 = v104 - v103;
        char v97 = v85;
        goto LABEL_156;
      }
      uint64_t v76 = *((void *)v14 + 4);
      uint64_t v75 = *((void *)v14 + 5);
      BOOL v85 = __OFSUB__(v75, v76);
      uint64_t v77 = v75 - v76;
      char v78 = v85;
    }
    if (v78) {
      goto LABEL_202;
    }
    unint64_t v86 = v71 - 2;
    uint64_t v92 = &v72[16 * v71 - 32];
    uint64_t v94 = *(void *)v92;
    uint64_t v93 = *((void *)v92 + 1);
    BOOL v95 = __OFSUB__(v93, v94);
    uint64_t v96 = v93 - v94;
    char v97 = v95;
    if (v95) {
      goto LABEL_204;
    }
    uint64_t v98 = &v72[16 * v74];
    uint64_t v100 = *(void *)v98;
    uint64_t v99 = *((void *)v98 + 1);
    BOOL v85 = __OFSUB__(v99, v100);
    uint64_t v101 = v99 - v100;
    if (v85) {
      goto LABEL_206;
    }
    if (__OFADD__(v96, v101)) {
      goto LABEL_208;
    }
    if (v96 + v101 >= v77)
    {
      BOOL v102 = v77 < v101;
LABEL_162:
      if (v102) {
        unint64_t v74 = v86;
      }
      goto LABEL_164;
    }
LABEL_156:
    if (v97) {
      goto LABEL_205;
    }
    uint64_t v105 = &v72[16 * v74];
    uint64_t v107 = *(void *)v105;
    uint64_t v106 = *((void *)v105 + 1);
    BOOL v85 = __OFSUB__(v106, v107);
    uint64_t v108 = v106 - v107;
    if (v85) {
      goto LABEL_207;
    }
    if (v108 < v96) {
      goto LABEL_173;
    }
LABEL_164:
    unint64_t v113 = v74 - 1;
    if (v74 - 1 >= v71) {
      goto LABEL_195;
    }
    if (!v13) {
      goto LABEL_225;
    }
    uint64_t v114 = v13;
    uint64_t v115 = &v72[16 * v113];
    uint64_t v116 = *(void *)v115;
    unint64_t v117 = v74;
    uint64_t v118 = &v72[16 * v74];
    uint64_t v119 = *((void *)v118 + 1);
    uint64_t v120 = (char *)(v114 + 8 * *(void *)v115);
    uint64_t v151 = (char *)(v114 + 8 * *(void *)v118);
    unint64_t v121 = v114 + 8 * v119;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A3D3C(v120, v151, v121, v142, a2, v143, v148);
    if (v152) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v119 < v116) {
      goto LABEL_196;
    }
    if (v117 > *((void *)v146 + 2)) {
      goto LABEL_197;
    }
    *(void *)uint64_t v115 = v116;
    uint64_t v72 = v141;
    *(void *)&v141[16 * v113 + 8] = v119;
    unint64_t v122 = *((void *)v146 + 2);
    if (v117 >= v122) {
      goto LABEL_198;
    }
    unint64_t v71 = v122 - 1;
    memmove(v118, v118 + 16, 16 * (v122 - 1 - v117));
    uint64_t v14 = v146;
    *((void *)v146 + 2) = v122 - 1;
    uint64_t v13 = v139;
    uint64_t v7 = v140;
    if (v122 <= 2) {
      goto LABEL_173;
    }
  }
LABEL_190:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v135 + 16) = 0;
  swift_release_n();
LABEL_191:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_192:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A4F70(char *__src, char *__dst, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4;
  uint64_t v10 = __dst;
  uint64_t v11 = __src;
  int64_t v12 = __dst - __src;
  int64_t v13 = __dst - __src + 7;
  if (__dst - __src >= 0) {
    int64_t v13 = __dst - __src;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = a3 - (void)__dst;
  uint64_t v16 = a3 - (void)__dst + 7;
  if ((uint64_t)(a3 - (void)__dst) >= 0) {
    uint64_t v16 = a3 - (void)__dst;
  }
  uint64_t v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __dst || &__dst[8 * v17] <= a4) {
      memmove(a4, __dst, 8 * v17);
    }
    uint64_t v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8) {
      goto LABEL_84;
    }
    int v64 = (void *)(a7 + 16);
    uint64_t v40 = (char *)(a3 - 8);
    uint64_t v63 = v8;
    while (1)
    {
      unint64_t v41 = *((void *)v18 - 1);
      if ((v41 & 0x8000000000000000) != 0)
      {
LABEL_95:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v42 = v10;
      uint64_t v44 = v10 - 8;
      unint64_t v43 = *((void *)v10 - 1);
      swift_beginAccess();
      uint64_t v45 = (void *)*v64;
      if (!*v64) {
        goto LABEL_94;
      }
      uint64_t v46 = v45[1];
      if ((uint64_t)v41 >= v46) {
        goto LABEL_95;
      }
      unint64_t v47 = v45 + 8;
      if ((*((unsigned __int8 *)v45 + (v41 >> 3) + 64) >> (v41 & 7)))
      {
        uint64_t v48 = *v45 + 7;
        if (__OFADD__(*v45, 7))
        {
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        if (v48 < 0) {
          uint64_t v48 = *v45 + 14;
        }
        uint64_t v49 = v48 >> 3;
        uint64_t v50 = v49 - 1;
        BOOL v27 = v49 < 1;
        uint64_t v51 = v49 + 62;
        if (!v27) {
          uint64_t v51 = v50;
        }
        int v52 = *((unsigned __int8 *)v47 + v41 + (v51 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v43 & 0x8000000000000000) != 0) {
          goto LABEL_95;
        }
      }
      else
      {
        int v52 = 2;
        if ((v43 & 0x8000000000000000) != 0) {
          goto LABEL_95;
        }
      }
      if ((uint64_t)v43 >= v46) {
        goto LABEL_95;
      }
      if ((*((unsigned __int8 *)v47 + (v43 >> 3)) >> (v43 & 7)))
      {
        uint64_t v53 = *v45;
        BOOL v32 = __OFADD__(v53, 7);
        uint64_t v54 = v53 + 7;
        if (v32) {
          goto LABEL_92;
        }
        uint64_t v55 = v54 / 8;
        uint64_t v56 = v55 - 1;
        BOOL v27 = v55 < 1;
        uint64_t v57 = v55 + 62;
        if (!v27) {
          uint64_t v57 = v56;
        }
        int v58 = *((unsigned __int8 *)v47 + v43 + (v57 & 0xFFFFFFFFFFFFFFC0) + 64);
      }
      else
      {
        int v58 = 2;
      }
      uint64_t v59 = v40 + 8;
      if (v52 != 2)
      {
        BOOL v60 = v52 == 0;
        if (v58 == 2 || ((v60 | v58) & 1) == 0) {
          break;
        }
      }
      uint64_t v44 = v18 - 8;
      if (v59 != v18)
      {
        v18 -= 8;
LABEL_79:
        *(void *)uint64_t v40 = *(void *)v44;
        goto LABEL_80;
      }
      BOOL v61 = v40 >= v18;
      v18 -= 8;
      if (v61) {
        goto LABEL_79;
      }
LABEL_80:
      if (v10 <= v11)
      {
        uint64_t v8 = v63;
        goto LABEL_84;
      }
      v40 -= 8;
      uint64_t v8 = v63;
      if (v18 <= v63) {
        goto LABEL_84;
      }
    }
    if (v59 == v10)
    {
      v10 -= 8;
      if (v40 < v42) {
        goto LABEL_80;
      }
    }
    else
    {
      v10 -= 8;
    }
    goto LABEL_79;
  }
  if (a4 != __src || &__src[8 * v14] <= a4) {
    memmove(a4, __src, 8 * v14);
  }
  uint64_t v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    uint64_t v19 = (void *)(a7 + 16);
    do
    {
      unint64_t v20 = *(void *)v10;
      if ((*(void *)v10 & 0x8000000000000000) != 0) {
        goto LABEL_95;
      }
      unint64_t v21 = *(void *)v8;
      swift_beginAccess();
      uint64_t v22 = (void *)*v19;
      if (!*v19) {
        goto LABEL_93;
      }
      uint64_t v23 = v22[1];
      if ((uint64_t)v20 >= v23) {
        goto LABEL_95;
      }
      char v24 = v22 + 8;
      if ((*((unsigned __int8 *)v22 + (v20 >> 3) + 64) >> (v20 & 7)))
      {
        uint64_t v25 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_90;
        }
        if (v25 < 0) {
          uint64_t v25 = *v22 + 14;
        }
        uint64_t v26 = v25 >> 3;
        uint64_t v28 = v26 - 1;
        BOOL v27 = v26 < 1;
        uint64_t v29 = v26 + 62;
        if (!v27) {
          uint64_t v29 = v28;
        }
        int v30 = *((unsigned __int8 *)v24 + v20 + (v29 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_95;
        }
      }
      else
      {
        int v30 = 2;
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_95;
        }
      }
      if ((uint64_t)v21 >= v23) {
        goto LABEL_95;
      }
      if ((*((unsigned __int8 *)v24 + (v21 >> 3)) >> (v21 & 7)))
      {
        uint64_t v31 = *v22;
        BOOL v32 = __OFADD__(v31, 7);
        uint64_t v33 = v31 + 7;
        if (v32) {
          goto LABEL_91;
        }
        uint64_t v34 = v33 / 8;
        uint64_t v35 = v34 - 1;
        BOOL v27 = v34 < 1;
        uint64_t v36 = v34 + 62;
        if (!v27) {
          uint64_t v36 = v35;
        }
        int v37 = *((unsigned __int8 *)v24 + v21 + (v36 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v30 == 2)
        {
LABEL_34:
          uint64_t v38 = v8;
          BOOL v39 = v11 == v8;
          v8 += 8;
          if (v39) {
            goto LABEL_36;
          }
LABEL_35:
          *(void *)uint64_t v11 = *(void *)v38;
          goto LABEL_36;
        }
      }
      else
      {
        int v37 = 2;
        if (v30 == 2) {
          goto LABEL_34;
        }
      }
      if (v37 != 2 && (v30 == 0) | v37 & 1) {
        goto LABEL_34;
      }
      uint64_t v38 = v10;
      BOOL v39 = v11 == v10;
      v10 += 8;
      if (!v39) {
        goto LABEL_35;
      }
LABEL_36:
      v11 += 8;
    }
    while (v8 < v18 && (unint64_t)v10 < a3);
  }
  uint64_t v10 = v11;
LABEL_84:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  }
  return 1;
}

uint64_t sub_2208A542C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = result;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *a4;
    uint64_t v10 = (void *)(a7 + 16);
    uint64_t v11 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v12 = *(void *)(v9 + 8 * v7);
    uint64_t v13 = v33;
    uint64_t v14 = (unint64_t *)v11;
    while ((v12 & 0x8000000000000000) == 0)
    {
      unint64_t v15 = *v14;
      uint64_t result = swift_beginAccess();
      uint64_t v16 = (void *)*v10;
      if (!*v10) {
        goto LABEL_33;
      }
      uint64_t v17 = v16[1];
      if ((uint64_t)v12 >= v17) {
        break;
      }
      uint64_t v18 = v16 + 8;
      if ((*((unsigned __int8 *)v16 + (v12 >> 3) + 64) >> (v12 & 7)))
      {
        uint64_t v19 = *v16 + 7;
        if (__OFADD__(*v16, 7))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          break;
        }
        if (v19 < 0) {
          uint64_t v19 = *v16 + 14;
        }
        uint64_t v20 = v19 >> 3;
        uint64_t v22 = v20 - 1;
        BOOL v21 = v20 < 1;
        uint64_t v23 = v20 + 62;
        if (!v21) {
          uint64_t v23 = v22;
        }
        int v24 = *((unsigned __int8 *)v18 + v12 + (v23 & 0xFFFFFFFFFFFFFFC0) + 64);
        if ((v15 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        int v24 = 2;
        if ((v15 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v15 >= v17) {
        break;
      }
      if ((*((unsigned __int8 *)v18 + (v15 >> 3)) >> (v15 & 7)))
      {
        uint64_t v25 = *v16;
        BOOL v26 = __OFADD__(v25, 7);
        uint64_t v27 = v25 + 7;
        if (v26) {
          goto LABEL_32;
        }
        uint64_t v28 = v27 / 8;
        uint64_t v29 = v28 - 1;
        BOOL v21 = v28 < 1;
        uint64_t v30 = v28 + 62;
        if (!v21) {
          uint64_t v30 = v29;
        }
        int v31 = *((unsigned __int8 *)v18 + v15 + (v30 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v24 == 2) {
          goto LABEL_4;
        }
      }
      else
      {
        int v31 = 2;
        if (v24 == 2) {
          goto LABEL_4;
        }
      }
      if (v31 == 2 || !((v24 == 0) | v31 & 1))
      {
        if (!v9) {
          goto LABEL_34;
        }
        unint64_t v32 = *v14;
        unint64_t v12 = v14[1];
        *uint64_t v14 = v12;
        v14[1] = v32;
        --v14;
        if (v7 != ++v13) {
          continue;
        }
      }
LABEL_4:
      ++v7;
      v11 += 8;
      if (v7 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A5644(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = sub_22093F170();
  if (v8 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A542C(0, v7, 1, a1, a2, a3, a4);
      }
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_185;
    }
    goto LABEL_212;
  }
  uint64_t v134 = v8;
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_211;
  }
  uint64_t v141 = a3;
  uint64_t v146 = a4;
  unint64_t v132 = a1;
  if (v7 <= 1)
  {
    uint64_t v140 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v133 = MEMORY[0x263F8EE78];
    if (v7 != 1)
    {
      unint64_t v69 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v14 = (char *)MEMORY[0x263F8EE78];
LABEL_171:
      uint64_t v145 = v14;
      if (v69 < 2)
      {
LABEL_182:
        swift_bridgeObjectRelease();
        *(void *)(v133 + 16) = 0;
        swift_release_n();
        goto LABEL_184;
      }
      uint64_t v121 = *v132;
      uint64_t v152 = *v132;
      while (1)
      {
        unint64_t v122 = v69 - 2;
        if (v69 < 2) {
          goto LABEL_205;
        }
        if (!v121) {
          goto LABEL_220;
        }
        uint64_t v123 = *(void *)&v145[16 * v122 + 32];
        uint64_t v124 = *(void *)&v145[16 * v69 + 24];
        uint64_t v125 = (char *)(v121 + 8 * v123);
        uint64_t v126 = (char *)(v121 + 8 * *(void *)&v145[16 * v69 + 16]);
        unint64_t v127 = v121 + 8 * v124;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208A4F70(v125, v126, v127, v140, a2, v141, v146);
        if (v150) {
          goto LABEL_183;
        }
        swift_release();
        swift_bridgeObjectRelease();
        if (v124 < v123) {
          goto LABEL_207;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v145 = sub_22080AB70((uint64_t)v145);
        }
        if (v122 >= *((void *)v145 + 2)) {
          goto LABEL_208;
        }
        uint64_t v128 = &v145[16 * v122 + 32];
        *(void *)uint64_t v128 = v123;
        *((void *)v128 + 1) = v124;
        unint64_t v129 = *((void *)v145 + 2);
        if (v69 > v129) {
          goto LABEL_209;
        }
        memmove(&v145[16 * v69 + 16], &v145[16 * v69 + 32], 16 * (v129 - v69));
        *((void *)v145 + 2) = v129 - 1;
        unint64_t v69 = v129 - 1;
        uint64_t v121 = v152;
        if (v129 <= 2) {
          goto LABEL_182;
        }
      }
    }
  }
  else
  {
    uint64_t v10 = v9 >> 1;
    uint64_t v11 = sub_22093E8A0();
    *(void *)(v11 + 16) = v10;
    uint64_t v133 = v11;
    uint64_t v140 = (char *)(v11 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v151 = (void **)(a4 + 16);
  uint64_t v131 = *a1 - 8;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  uint64_t v137 = *a1;
  uint64_t v138 = v7;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    if (v12 + 1 >= v7) {
      goto LABEL_75;
    }
    uint64_t v17 = *(void *)(v13 + 8 * v16);
    if (v17 < 0) {
      goto LABEL_222;
    }
    uint64_t v18 = v14;
    uint64_t v19 = *(void *)(v13 + 8 * v12);
    swift_beginAccess();
    uint64_t v20 = *v151;
    if (!*v151) {
      goto LABEL_221;
    }
    if (v17 >= v20[1]) {
      goto LABEL_222;
    }
    uint64_t v147 = v15;
    char v21 = sub_220891788(v17, v20, v146);
    if (v19 < 0) {
      goto LABEL_222;
    }
    uint64_t v23 = v20[1];
    if (v19 >= v23) {
      goto LABEL_222;
    }
    char v24 = v21;
    char v25 = sub_220891788(v19, v20, v22);
    if (v24 == 2)
    {
      uint64_t v26 = v147 + 2;
      uint64_t v14 = v18;
      if (v147 + 2 >= v7) {
        goto LABEL_114;
      }
    }
    else
    {
      uint64_t v14 = v18;
      if (v25 == 2)
      {
        uint64_t v26 = v147 + 2;
LABEL_27:
        if (v26 < v7)
        {
          int v27 = 1;
          goto LABEL_29;
        }
        uint64_t v15 = v147;
        if (v147 < v26)
        {
LABEL_67:
          uint64_t v42 = v26 - 1;
          uint64_t v43 = v15;
          do
          {
            if (v43 != v42)
            {
              if (!v13) {
                goto LABEL_219;
              }
              uint64_t v44 = *(void *)(v13 + 8 * v43);
              *(void *)(v13 + 8 * v43) = *(void *)(v13 + 8 * v42);
              *(void *)(v13 + 8 * v42) = v44;
            }
            BOOL v100 = ++v43 < v42--;
          }
          while (v100);
        }
LABEL_74:
        uint64_t v16 = v26;
LABEL_75:
        if (v16 < v7) {
          goto LABEL_76;
        }
        goto LABEL_116;
      }
      uint64_t v26 = v147 + 2;
      if ((v24 & 1) != 0 && (v25 & 1) == 0) {
        goto LABEL_27;
      }
      if (v26 >= v7)
      {
LABEL_114:
        uint64_t v16 = v26;
LABEL_115:
        uint64_t v15 = v147;
        if (v16 >= v7) {
          goto LABEL_116;
        }
LABEL_76:
        if (__OFSUB__(v16, v15)) {
          goto LABEL_210;
        }
        if (v16 - v15 < v134)
        {
          if (__OFADD__(v15, v134)) {
            goto LABEL_214;
          }
          if (v15 + v134 >= v7) {
            uint64_t v45 = v7;
          }
          else {
            uint64_t v45 = v15 + v134;
          }
          if (v45 < v15)
          {
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_218:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_219:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_220:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            uint64_t result = sub_22093F090();
            __break(1u);
            return result;
          }
          if (v16 != v45)
          {
            uint64_t v148 = v15;
            uint64_t v143 = v14;
            uint64_t v46 = (unint64_t *)(v131 + 8 * v16);
            uint64_t v135 = v45;
            do
            {
              unint64_t v47 = *(void *)(v13 + 8 * v16);
              uint64_t v48 = v148;
              uint64_t v49 = v46;
              do
              {
                if ((v47 & 0x8000000000000000) != 0) {
                  goto LABEL_222;
                }
                unint64_t v50 = *v49;
                swift_beginAccess();
                uint64_t v51 = *v151;
                if (!*v151) {
                  goto LABEL_216;
                }
                uint64_t v52 = v51[1];
                if ((uint64_t)v47 >= v52) {
                  goto LABEL_222;
                }
                uint64_t v53 = v51 + 8;
                if ((*((unsigned __int8 *)v51 + (v47 >> 3) + 64) >> (v47 & 7)))
                {
                  uint64_t v54 = *v51 + 7;
                  if (__OFADD__(*v51, 7))
                  {
                    __break(1u);
LABEL_187:
                    __break(1u);
LABEL_188:
                    __break(1u);
LABEL_189:
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
LABEL_207:
                    __break(1u);
LABEL_208:
                    __break(1u);
LABEL_209:
                    __break(1u);
LABEL_210:
                    __break(1u);
LABEL_211:
                    __break(1u);
LABEL_212:
                    __break(1u);
LABEL_213:
                    __break(1u);
LABEL_214:
                    __break(1u);
                    goto LABEL_215;
                  }
                  if (v54 < 0) {
                    uint64_t v54 = *v51 + 14;
                  }
                  uint64_t v55 = v54 >> 3;
                  uint64_t v56 = v55 - 1;
                  BOOL v100 = v55 < 1;
                  uint64_t v57 = v55 + 62;
                  if (!v100) {
                    uint64_t v57 = v56;
                  }
                  int v58 = *((unsigned __int8 *)v53 + v47 + (v57 & 0xFFFFFFFFFFFFFFC0) + 64);
                  if ((v50 & 0x8000000000000000) != 0) {
                    goto LABEL_222;
                  }
                }
                else
                {
                  int v58 = 2;
                  if ((v50 & 0x8000000000000000) != 0) {
                    goto LABEL_222;
                  }
                }
                if ((uint64_t)v50 >= v52) {
                  goto LABEL_222;
                }
                if ((*((unsigned __int8 *)v53 + (v50 >> 3)) >> (v50 & 7)))
                {
                  uint64_t v59 = *v51;
                  BOOL v83 = __OFADD__(v59, 7);
                  uint64_t v60 = v59 + 7;
                  if (v83) {
                    goto LABEL_187;
                  }
                  uint64_t v61 = v60 / 8;
                  uint64_t v62 = v61 - 1;
                  BOOL v100 = v61 < 1;
                  uint64_t v63 = v61 + 62;
                  if (!v100) {
                    uint64_t v63 = v62;
                  }
                  int v64 = *((unsigned __int8 *)v53 + v50 + (v63 & 0xFFFFFFFFFFFFFFC0) + 64);
                  if (v58 == 2) {
                    break;
                  }
                }
                else
                {
                  int v64 = 2;
                  if (v58 == 2) {
                    break;
                  }
                }
                if (v64 != 2 && (v58 == 0) | v64 & 1) {
                  break;
                }
                if (!v13) {
                  goto LABEL_217;
                }
                unint64_t v65 = *v49;
                unint64_t v47 = v49[1];
                *uint64_t v49 = v47;
                v49[1] = v65;
                --v49;
                ++v48;
              }
              while (v16 != v48);
              ++v16;
              ++v46;
              uint64_t v41 = v135;
            }
            while (v16 != v135);
            uint64_t v14 = v143;
            uint64_t v15 = v148;
            goto LABEL_117;
          }
        }
LABEL_116:
        uint64_t v41 = v16;
        goto LABEL_117;
      }
    }
    int v27 = 0;
LABEL_29:
    uint64_t v28 = v20 + 8;
    uint64_t v29 = v7 <= v26 + 1 ? v26 + 1 : v7;
    uint64_t v30 = *(void *)(v13 + 8 * v16);
    uint64_t v16 = v26;
    do
    {
      uint64_t v31 = v30;
      uint64_t v30 = *(void *)(v13 + 8 * v16);
      if (v30 < 0 || v30 >= v23) {
        goto LABEL_222;
      }
      if ((*((unsigned __int8 *)v28 + ((unint64_t)v30 >> 3)) >> (v30 & 7)))
      {
        uint64_t v32 = *v20 + 7;
        if (__OFADD__(*v20, 7)) {
          goto LABEL_202;
        }
        if (v32 < 0) {
          uint64_t v32 = *v20 + 14;
        }
        uint64_t v33 = v32 >> 3;
        uint64_t v34 = v33 - 1;
        BOOL v100 = v33 < 1;
        uint64_t v35 = v33 + 62;
        if (!v100) {
          uint64_t v35 = v34;
        }
        int v36 = *((unsigned __int8 *)v28 + v30 + (v35 & 0xFFFFFFFFFFFFFFC0) + 64);
        if (v31 < 0) {
          goto LABEL_222;
        }
      }
      else
      {
        int v36 = 2;
        if (v31 < 0) {
          goto LABEL_222;
        }
      }
      if (v31 >= v23) {
        goto LABEL_222;
      }
      if ((*((unsigned __int8 *)v28 + ((unint64_t)v31 >> 3)) >> (v31 & 7)))
      {
        uint64_t v37 = *v20 + 7;
        if (__OFADD__(*v20, 7)) {
          goto LABEL_203;
        }
        if (v36 != 2)
        {
          if (v37 < 0) {
            uint64_t v37 = *v20 + 14;
          }
          uint64_t v38 = v37 >> 3;
          uint64_t v39 = v38 - 1;
          BOOL v100 = v38 < 1;
          uint64_t v40 = v38 + 62;
          if (!v100) {
            uint64_t v40 = v39;
          }
          if (v36 && (*((unsigned char *)v28 + v31 + (v40 & 0xFFFFFFFFFFFFFFC0) + 64) & 1) == 0)
          {
LABEL_58:
            if ((v27 & 1) == 0) {
              goto LABEL_115;
            }
            goto LABEL_34;
          }
        }
      }
      else if (v36 != 2)
      {
        goto LABEL_58;
      }
      if (v27)
      {
        uint64_t v41 = v16;
        uint64_t v15 = v147;
        goto LABEL_65;
      }
LABEL_34:
      ++v16;
    }
    while (v16 < v7);
    uint64_t v41 = v29;
    uint64_t v15 = v147;
    if (v27)
    {
LABEL_65:
      uint64_t v26 = v41;
      if (v41 < v15) {
        goto LABEL_213;
      }
      if (v15 < v41) {
        goto LABEL_67;
      }
      goto LABEL_74;
    }
LABEL_117:
    if (v41 < v15) {
      goto LABEL_206;
    }
    BOOL v66 = v14;
    uint64_t v136 = v41;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v14 = v66;
    }
    else {
      uint64_t v14 = sub_22081B3EC(0, *((void *)v66 + 2) + 1, 1, v66);
    }
    unint64_t v68 = *((void *)v14 + 2);
    unint64_t v67 = *((void *)v14 + 3);
    unint64_t v69 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v14 = sub_22081B3EC((char *)(v67 > 1), v68 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v69;
    unint64_t v70 = v14 + 32;
    unint64_t v71 = &v14[16 * v68 + 32];
    *(void *)unint64_t v71 = v15;
    *((void *)v71 + 1) = v136;
    if (v68) {
      break;
    }
    unint64_t v69 = 1;
LABEL_166:
    uint64_t v12 = v136;
    if (v136 >= v7) {
      goto LABEL_171;
    }
  }
  uint64_t v144 = v14;
  uint64_t v139 = v14 + 32;
  while (1)
  {
    unint64_t v72 = v69 - 1;
    if (v69 >= 4)
    {
      uint64_t v77 = &v70[16 * v69];
      uint64_t v78 = *((void *)v77 - 8);
      uint64_t v79 = *((void *)v77 - 7);
      BOOL v83 = __OFSUB__(v79, v78);
      uint64_t v80 = v79 - v78;
      if (v83) {
        goto LABEL_192;
      }
      uint64_t v82 = *((void *)v77 - 6);
      uint64_t v81 = *((void *)v77 - 5);
      BOOL v83 = __OFSUB__(v81, v82);
      uint64_t v75 = v81 - v82;
      char v76 = v83;
      if (v83) {
        goto LABEL_193;
      }
      unint64_t v84 = v69 - 2;
      BOOL v85 = &v70[16 * v69 - 32];
      uint64_t v87 = *(void *)v85;
      uint64_t v86 = *((void *)v85 + 1);
      BOOL v83 = __OFSUB__(v86, v87);
      uint64_t v88 = v86 - v87;
      if (v83) {
        goto LABEL_194;
      }
      BOOL v83 = __OFADD__(v75, v88);
      uint64_t v89 = v75 + v88;
      if (v83) {
        goto LABEL_196;
      }
      if (v89 >= v80)
      {
        uint64_t v107 = &v70[16 * v72];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v83 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v83) {
          goto LABEL_204;
        }
        BOOL v100 = v75 < v110;
        goto LABEL_155;
      }
    }
    else
    {
      if (v69 != 3)
      {
        uint64_t v101 = *((void *)v14 + 4);
        uint64_t v102 = *((void *)v14 + 5);
        BOOL v83 = __OFSUB__(v102, v101);
        uint64_t v94 = v102 - v101;
        char v95 = v83;
        goto LABEL_149;
      }
      uint64_t v74 = *((void *)v14 + 4);
      uint64_t v73 = *((void *)v14 + 5);
      BOOL v83 = __OFSUB__(v73, v74);
      uint64_t v75 = v73 - v74;
      char v76 = v83;
    }
    if (v76) {
      goto LABEL_195;
    }
    unint64_t v84 = v69 - 2;
    uint64_t v90 = &v70[16 * v69 - 32];
    uint64_t v92 = *(void *)v90;
    uint64_t v91 = *((void *)v90 + 1);
    BOOL v93 = __OFSUB__(v91, v92);
    uint64_t v94 = v91 - v92;
    char v95 = v93;
    if (v93) {
      goto LABEL_197;
    }
    uint64_t v96 = &v70[16 * v72];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v83 = __OFSUB__(v97, v98);
    uint64_t v99 = v97 - v98;
    if (v83) {
      goto LABEL_199;
    }
    if (__OFADD__(v94, v99)) {
      goto LABEL_201;
    }
    if (v94 + v99 >= v75)
    {
      BOOL v100 = v75 < v99;
LABEL_155:
      if (v100) {
        unint64_t v72 = v84;
      }
      goto LABEL_157;
    }
LABEL_149:
    if (v95) {
      goto LABEL_198;
    }
    uint64_t v103 = &v70[16 * v72];
    uint64_t v105 = *(void *)v103;
    uint64_t v104 = *((void *)v103 + 1);
    BOOL v83 = __OFSUB__(v104, v105);
    uint64_t v106 = v104 - v105;
    if (v83) {
      goto LABEL_200;
    }
    if (v106 < v94) {
      goto LABEL_166;
    }
LABEL_157:
    unint64_t v111 = v72 - 1;
    if (v72 - 1 >= v69) {
      goto LABEL_188;
    }
    if (!v13) {
      goto LABEL_218;
    }
    uint64_t v112 = v13;
    unint64_t v113 = &v70[16 * v111];
    uint64_t v114 = *(void *)v113;
    unint64_t v115 = v72;
    uint64_t v116 = &v70[16 * v72];
    uint64_t v117 = *((void *)v116 + 1);
    uint64_t v118 = (char *)(v112 + 8 * *(void *)v113);
    uint64_t v149 = (char *)(v112 + 8 * *(void *)v116);
    unint64_t v119 = v112 + 8 * v117;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A4F70(v118, v149, v119, v140, a2, v141, v146);
    if (v150) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v117 < v114) {
      goto LABEL_189;
    }
    if (v115 > *((void *)v144 + 2)) {
      goto LABEL_190;
    }
    *(void *)unint64_t v113 = v114;
    unint64_t v70 = v139;
    *(void *)&v139[16 * v111 + 8] = v117;
    unint64_t v120 = *((void *)v144 + 2);
    if (v115 >= v120) {
      goto LABEL_191;
    }
    unint64_t v69 = v120 - 1;
    memmove(v116, v116 + 16, 16 * (v120 - 1 - v115));
    uint64_t v14 = v144;
    *((void *)v144 + 2) = v120 - 1;
    uint64_t v13 = v137;
    uint64_t v7 = v138;
    if (v120 <= 2) {
      goto LABEL_166;
    }
  }
LABEL_183:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v133 + 16) = 0;
  swift_release_n();
LABEL_184:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_185:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A61A0(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_22089E454((uint64_t)v10);
  }
  uint64_t v11 = *((void *)v10 + 2);
  v13[0] = v10 + 32;
  v13[1] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  a5(v13, a2, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = v10;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2208A6294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v71 = a8;
  uint64_t v65 = a1;
  uint64_t v12 = sub_22093E100();
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v70 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  unint64_t v69 = &v63[-v15];
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  MEMORY[0x270FA5388](v74);
  uint64_t v81 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = &v63[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x270FA5388](v18);
  uint64_t v82 = &v63[-v22];
  uint64_t v64 = a2;
  if (a3 != a2)
  {
    uint64_t v23 = *a4;
    char v24 = (void *)(a7 + 16);
    uint64_t v77 = v20;
    uint64_t v78 = v79 + 16;
    char v25 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
    unint64_t v72 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    uint64_t v73 = v24;
    unint64_t v67 = (void (**)(unsigned char *, uint64_t))(v79 + 8);
    unint64_t v68 = (void (**)(unsigned char *, uint64_t, uint64_t))(v79 + 32);
    uint64_t v75 = v23;
    uint64_t v26 = (unint64_t *)(v23 + 8 * a3 - 8);
LABEL_6:
    unint64_t v27 = *(void *)(v75 + 8 * a3);
    uint64_t v28 = v65;
    BOOL v66 = v26;
    uint64_t v76 = a3;
    while (1)
    {
      uint64_t v80 = v28;
      if ((v27 & 0x8000000000000000) != 0) {
        break;
      }
      unint64_t v29 = *v26;
      uint64_t v30 = v73;
      swift_beginAccess();
      uint64_t v31 = (void *)*v30;
      if (!v31) {
        goto LABEL_42;
      }
      if ((int64_t)v27 >= v31[1]) {
        break;
      }
      uint64_t v32 = v31 + 8;
      if ((*((unsigned __int8 *)v31 + (v27 >> 3) + 64) >> (v27 & 7)))
      {
        uint64_t v33 = *v31 + 7;
        if (__OFADD__(*v31, 7))
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          break;
        }
        if (v33 < 0) {
          uint64_t v33 = *v31 + 14;
        }
        uint64_t v34 = v33 >> 3;
        uint64_t v36 = v34 - 1;
        BOOL v35 = v34 < 1;
        uint64_t v37 = v34 + 62;
        if (!v35) {
          uint64_t v37 = v36;
        }
        uint64_t v38 = v79;
        uint64_t v39 = v25;
        uint64_t v40 = v12;
        uint64_t v41 = v82;
        (*(void (**)(unsigned char *, unint64_t, uint64_t))(v79 + 16))(v82, (unint64_t)v32 + (v37 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v79 + 72) * v27 + 64, v40);
        uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
        uint64_t v20 = v77;
        uint64_t v43 = v41;
        uint64_t v12 = v40;
        char v25 = v39;
        v42(v43, 0, 1, v12);
        if ((v29 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        uint64_t v42 = *v25;
        (*v25)(v82, 1, 1, v12);
        if ((v29 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((int64_t)v29 >= v31[1]) {
        break;
      }
      if ((*((unsigned __int8 *)v32 + (v29 >> 3)) >> (v29 & 7)))
      {
        uint64_t v44 = *v31 + 7;
        if (__OFADD__(*v31, 7)) {
          goto LABEL_41;
        }
        if (v44 < 0) {
          uint64_t v44 = *v31 + 14;
        }
        uint64_t v45 = v44 >> 3;
        uint64_t v46 = v45 - 1;
        BOOL v35 = v45 < 1;
        uint64_t v47 = v45 + 62;
        if (!v35) {
          uint64_t v47 = v46;
        }
        (*(void (**)(unsigned char *, unint64_t, uint64_t))(v79 + 16))(v20, (unint64_t)v32 + (v47 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v79 + 72) * v29 + 64, v12);
        uint64_t v48 = 0;
      }
      else
      {
        uint64_t v48 = 1;
      }
      v42(v20, v48, 1, v12);
      uint64_t v49 = v81;
      uint64_t v50 = (uint64_t)&v81[*(int *)(v74 + 48)];
      sub_22080B550((uint64_t)v82, (uint64_t)v81);
      sub_22080B550((uint64_t)v20, v50);
      uint64_t v51 = *v72;
      int v52 = (*v72)((uint64_t)v49, 1, v12);
      int v53 = v51(v50, 1, v12);
      if (v52 == 1)
      {
        uint64_t v54 = v76;
        if (v53 != 1) {
          sub_2208573C0(v50);
        }
        sub_2208573C0((uint64_t)v20);
        uint64_t result = sub_2208573C0((uint64_t)v82);
LABEL_5:
        a3 = v54 + 1;
        uint64_t v26 = v66 + 1;
        if (a3 == v64) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v54 = v76;
      if (v53 == 1)
      {
        sub_2208573C0((uint64_t)v81);
        sub_2208573C0((uint64_t)v20);
        uint64_t result = sub_2208573C0((uint64_t)v82);
        uint64_t v55 = v80;
      }
      else
      {
        uint64_t v56 = v69;
        uint64_t v57 = *v68;
        (*v68)(v69, (uint64_t)v81, v12);
        int v58 = v70;
        v57(v70, v50, v12);
        sub_220895FE0();
        if (v71) {
          char v59 = sub_22093E450();
        }
        else {
          char v59 = sub_22093E460();
        }
        char v60 = v59;
        uint64_t v61 = *v67;
        (*v67)(v58, v12);
        v61(v56, v12);
        uint64_t v20 = v77;
        sub_2208573C0((uint64_t)v77);
        uint64_t result = sub_2208573C0((uint64_t)v82);
        uint64_t v55 = v80;
        if ((v60 & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (!v75) {
        goto LABEL_43;
      }
      unint64_t v62 = *v26;
      unint64_t v27 = v26[1];
      *uint64_t v26 = v27;
      v26[1] = v62;
      --v26;
      uint64_t v28 = v55 + 1;
      if (v54 == v28) {
        goto LABEL_5;
      }
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A6888(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v210 = a2;
  int v218 = a5 & 1;
  uint64_t v209 = sub_22093E100();
  uint64_t v202 = *(void *)(v209 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v209);
  uint64_t v10 = (char *)&v193 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v193 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v193 - v15;
  MEMORY[0x270FA5388](v14);
  v199 = (char *)&v193 - v17;
  uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18630);
  uint64_t v18 = MEMORY[0x270FA5388](v223);
  uint64_t v227 = (uint64_t)&v193 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v204 = (uint64_t)&v193 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v228 = (uint64_t)&v193 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v230 = (uint64_t)&v193 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v206 = (uint64_t)&v193 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v212 = (uint64_t)&v193 - v28;
  uint64_t v29 = a1[1];
  uint64_t v211 = a3;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v30 = sub_22093F170();
  if (v30 < v29)
  {
    if (v29 >= 0) {
      uint64_t v31 = v29;
    }
    else {
      uint64_t v31 = v29 + 1;
    }
    if (v29 < -1)
    {
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
    uint64_t v208 = a4;
    v198 = v16;
    uint64_t v201 = v29;
    uint64_t v203 = v30;
    v195 = a1;
    if (v29 > 1)
    {
      uint64_t v32 = v31 >> 1;
      uint64_t v33 = sub_22093E8A0();
      *(void *)(v33 + 16) = v32;
      uint64_t v197 = v33;
      v207 = (char *)(v33 + 32);
      goto LABEL_12;
    }
    v207 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v197 = MEMORY[0x263F8EE78];
    if (v29 == 1)
    {
LABEL_12:
      uint64_t v36 = 0;
      uint64_t v37 = *a1;
      v222 = (void *)(a4 + 16);
      uint64_t v226 = v202 + 16;
      v229 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v202 + 56);
      v221 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v202 + 48);
      v216 = (void (**)(char *, uint64_t))(v202 + 8);
      v217 = (void (**)(void))(v202 + 32);
      uint64_t v196 = v37 + 16;
      uint64_t v194 = v37 - 8;
      v219 = v13;
      v220 = v10;
      uint64_t v38 = (char *)MEMORY[0x263F8EE78];
      uint64_t v39 = (char *)v201;
      uint64_t v225 = v37;
LABEL_13:
      uint64_t v40 = (uint64_t)(v36 + 1);
      v214 = v38;
      v205 = v36;
      if ((uint64_t)(v36 + 1) >= (uint64_t)v39)
      {
        uint64_t v43 = v203;
      }
      else
      {
        uint64_t v41 = v36;
        uint64_t v42 = v215;
        LODWORD(v224) = sub_220897384(*(void *)(v37 + 8 * v40), *(void *)(v37 + 8 * (void)v36), v210, v211, v208, v218);
        uint64_t v215 = v42;
        uint64_t v43 = v203;
        if (v42) {
          goto LABEL_179;
        }
        uint64_t v40 = (uint64_t)(v41 + 2);
        if ((uint64_t)(v41 + 2) < (uint64_t)v39)
        {
          uint64_t v44 = (unint64_t *)(v196 + 8 * (void)v41);
          do
          {
            unint64_t v45 = *v44;
            if ((*v44 & 0x8000000000000000) != 0) {
              goto LABEL_218;
            }
            unint64_t v46 = *(v44 - 1);
            uint64_t v47 = v222;
            swift_beginAccess();
            uint64_t v48 = (void *)*v47;
            if (!*v47) {
              goto LABEL_215;
            }
            if ((int64_t)v45 >= v48[1]) {
              goto LABEL_218;
            }
            uint64_t v49 = v48 + 8;
            if ((*((unsigned __int8 *)v48 + (v45 >> 3) + 64) >> (v45 & 7)))
            {
              uint64_t v50 = *v48 + 7;
              if (__OFADD__(*v48, 7)) {
                goto LABEL_198;
              }
              if (v50 < 0) {
                uint64_t v50 = *v48 + 14;
              }
              uint64_t v51 = v50 >> 3;
              uint64_t v52 = v51 - 1;
              BOOL v154 = v51 < 1;
              uint64_t v53 = v51 + 62;
              if (!v154) {
                uint64_t v53 = v52;
              }
              uint64_t v54 = v202;
              unint64_t v55 = (unint64_t)v49 + (v53 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v202 + 72) * v45 + 64;
              uint64_t v56 = v212;
              uint64_t v57 = v209;
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v202 + 16))(v212, v55, v209);
              int v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
              v58(v56, 0, 1, v57);
              if ((v46 & 0x8000000000000000) != 0) {
                goto LABEL_218;
              }
            }
            else
            {
              int v58 = *v229;
              (*v229)(v212, 1, 1, v209);
              if ((v46 & 0x8000000000000000) != 0) {
                goto LABEL_218;
              }
            }
            if ((int64_t)v46 >= v48[1]) {
              goto LABEL_218;
            }
            if ((*((unsigned __int8 *)v49 + (v46 >> 3)) >> (v46 & 7)))
            {
              uint64_t v59 = *v48 + 7;
              if (__OFADD__(*v48, 7)) {
                goto LABEL_199;
              }
              if (v59 < 0) {
                uint64_t v59 = *v48 + 14;
              }
              uint64_t v60 = v59 >> 3;
              uint64_t v61 = v60 - 1;
              BOOL v154 = v60 < 1;
              uint64_t v62 = v60 + 62;
              if (!v154) {
                uint64_t v62 = v61;
              }
              unint64_t v63 = (unint64_t)v49 + (v62 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v202 + 72) * v46 + 64;
              uint64_t v64 = v206;
              uint64_t v65 = v209;
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v202 + 16))(v206, v63, v209);
              uint64_t v66 = 0;
            }
            else
            {
              uint64_t v66 = 1;
              uint64_t v65 = v209;
              uint64_t v64 = v206;
            }
            v58(v64, v66, 1, v65);
            uint64_t v67 = v204;
            uint64_t v68 = v204 + *(int *)(v223 + 48);
            sub_22080B550(v212, v204);
            sub_22080B550(v64, v68);
            unint64_t v69 = *v221;
            int v70 = (*v221)(v67, 1, v65);
            int v71 = v69(v68, 1, v65);
            if (v70 == 1)
            {
              uint64_t v38 = v214;
              uint64_t v39 = (char *)v201;
              uint64_t v43 = v203;
              if (v71 != 1) {
                sub_2208573C0(v68);
              }
              int v72 = 0;
            }
            else
            {
              uint64_t v73 = v198;
              uint64_t v39 = (char *)v201;
              uint64_t v43 = v203;
              if (v71 == 1)
              {
                sub_2208573C0(v204);
                int v72 = 1;
                uint64_t v38 = v214;
              }
              else
              {
                uint64_t v74 = *v217;
                uint64_t v75 = v199;
                uint64_t v76 = v209;
                (*v217)();
                ((void (*)(char *, uint64_t, uint64_t))v74)(v73, v68, v76);
                sub_220895FE0();
                if (v218) {
                  int v77 = sub_22093E450();
                }
                else {
                  int v77 = sub_22093E460();
                }
                int v72 = v77;
                uint64_t v78 = *v216;
                (*v216)(v73, v76);
                v78(v75, v76);
                uint64_t v38 = v214;
                uint64_t v43 = v203;
              }
            }
            sub_2208573C0(v206);
            sub_2208573C0(v212);
            if ((v224 ^ v72)) {
              goto LABEL_52;
            }
            ++v44;
            ++v40;
          }
          while (v39 != (char *)v40);
          uint64_t v40 = (uint64_t)v39;
LABEL_52:
          uint64_t v37 = v225;
        }
        if (v224)
        {
          uint64_t v79 = v205;
          if (v40 < (uint64_t)v205) {
            goto LABEL_211;
          }
          if ((uint64_t)v205 < v40)
          {
            uint64_t v80 = v40 - 1;
            do
            {
              if (v79 != (char *)v80)
              {
                if (!v37) {
                  goto LABEL_216;
                }
                uint64_t v81 = *(void *)(v37 + 8 * (void)v79);
                *(void *)(v37 + 8 * (void)v79) = *(void *)(v37 + 8 * v80);
                *(void *)(v37 + 8 * v80) = v81;
              }
              BOOL v154 = (uint64_t)++v79 < v80--;
            }
            while (v154);
          }
        }
      }
      uint64_t v82 = v40;
      if (v40 >= (uint64_t)v39) {
        goto LABEL_111;
      }
      if (__OFSUB__(v40, v205)) {
        goto LABEL_206;
      }
      if (v40 - (uint64_t)v205 >= v43)
      {
        uint64_t v82 = v40;
LABEL_111:
        BOOL v83 = v205;
LABEL_112:
        if (v82 < (uint64_t)v83) {
          goto LABEL_205;
        }
        goto LABEL_113;
      }
      BOOL v83 = v205;
      if (__OFADD__(v205, v43)) {
        goto LABEL_209;
      }
      if ((uint64_t)&v205[v43] >= (uint64_t)v39) {
        unint64_t v84 = v39;
      }
      else {
        unint64_t v84 = &v205[v43];
      }
      if ((uint64_t)v84 < (uint64_t)v205) {
        goto LABEL_210;
      }
      uint64_t v82 = v40;
      if ((char *)v40 == v84) {
        goto LABEL_112;
      }
      BOOL v85 = (char *)(v194 + 8 * v40);
      uint64_t v86 = v209;
      uint64_t v87 = v202;
      uint64_t v200 = (uint64_t)v84;
LABEL_75:
      uint64_t v224 = v82;
      unint64_t v88 = *(void *)(v37 + 8 * v82);
      uint64_t v89 = v83;
      v213 = v85;
      while (1)
      {
        if ((v88 & 0x8000000000000000) != 0) {
          goto LABEL_218;
        }
        unint64_t v90 = *(void *)v85;
        uint64_t v91 = v222;
        swift_beginAccess();
        uint64_t v92 = (void *)*v91;
        if (!*v91) {
          goto LABEL_212;
        }
        if ((int64_t)v88 >= v92[1]) {
          goto LABEL_218;
        }
        BOOL v93 = v92 + 8;
        if ((*((unsigned __int8 *)v92 + (v88 >> 3) + 64) >> (v88 & 7)))
        {
          uint64_t v94 = *v92 + 7;
          if (__OFADD__(*v92, 7))
          {
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
            goto LABEL_201;
          }
          if (v94 < 0) {
            uint64_t v94 = *v92 + 14;
          }
          uint64_t v95 = v94 >> 3;
          uint64_t v96 = v95 - 1;
          BOOL v154 = v95 < 1;
          uint64_t v97 = v95 + 62;
          if (!v154) {
            uint64_t v97 = v96;
          }
          uint64_t v98 = v230;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v87 + 16))(v230, (unint64_t)v93 + (v97 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v87 + 72) * v88 + 64, v86);
          uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
          v99(v98, 0, 1, v86);
          if ((v90 & 0x8000000000000000) != 0) {
            goto LABEL_218;
          }
        }
        else
        {
          uint64_t v99 = *v229;
          (*v229)(v230, 1, 1, v86);
          if ((v90 & 0x8000000000000000) != 0) {
            goto LABEL_218;
          }
        }
        if ((int64_t)v90 >= v92[1]) {
          goto LABEL_218;
        }
        if ((*((unsigned __int8 *)v93 + (v90 >> 3)) >> (v90 & 7)))
        {
          uint64_t v100 = *v92 + 7;
          if (__OFADD__(*v92, 7)) {
            goto LABEL_183;
          }
          if (v100 < 0) {
            uint64_t v100 = *v92 + 14;
          }
          uint64_t v101 = v100 >> 3;
          uint64_t v102 = v101 - 1;
          BOOL v154 = v101 < 1;
          uint64_t v103 = v101 + 62;
          if (!v154) {
            uint64_t v103 = v102;
          }
          unint64_t v104 = (unint64_t)v93 + (v103 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v87 + 72) * v90 + 64;
          uint64_t v105 = v228;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v87 + 16))(v228, v104, v86);
          uint64_t v106 = 0;
        }
        else
        {
          uint64_t v106 = 1;
          uint64_t v105 = v228;
        }
        v99(v105, v106, 1, v86);
        uint64_t v107 = v227;
        uint64_t v108 = v227 + *(int *)(v223 + 48);
        sub_22080B550(v230, v227);
        sub_22080B550(v105, v108);
        uint64_t v109 = *v221;
        int v110 = (*v221)(v107, 1, v86);
        int v111 = v109(v108, 1, v86);
        if (v110 == 1)
        {
          uint64_t v37 = v225;
          if (v111 != 1) {
            sub_2208573C0(v108);
          }
          sub_2208573C0(v228);
          sub_2208573C0(v230);
LABEL_74:
          uint64_t v82 = v224 + 1;
          BOOL v85 = v213 + 8;
          BOOL v83 = v205;
          if (v224 + 1 != v200) {
            goto LABEL_75;
          }
          uint64_t v82 = v200;
          uint64_t v38 = v214;
          if (v200 < (uint64_t)v205) {
            goto LABEL_205;
          }
LABEL_113:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v224 = v82;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v38 = sub_22081B3EC(0, *((void *)v38 + 2) + 1, 1, v38);
          }
          unint64_t v121 = *((void *)v38 + 2);
          unint64_t v120 = *((void *)v38 + 3);
          unint64_t v122 = v121 + 1;
          if (v121 >= v120 >> 1) {
            uint64_t v38 = sub_22081B3EC((char *)(v120 > 1), v121 + 1, 1, v38);
          }
          *((void *)v38 + 2) = v122;
          v205 = v38 + 32;
          uint64_t v123 = &v38[16 * v121 + 32];
          uint64_t v124 = v224;
          *(void *)uint64_t v123 = v83;
          *((void *)v123 + 1) = v124;
          v214 = v38;
          if (v121)
          {
            uint64_t v125 = v205;
            while (1)
            {
              unint64_t v126 = v122 - 1;
              if (v122 >= 4)
              {
                uint64_t v131 = &v125[16 * v122];
                uint64_t v132 = *((void *)v131 - 8);
                uint64_t v133 = *((void *)v131 - 7);
                BOOL v137 = __OFSUB__(v133, v132);
                uint64_t v134 = v133 - v132;
                if (v137) {
                  goto LABEL_188;
                }
                uint64_t v136 = *((void *)v131 - 6);
                uint64_t v135 = *((void *)v131 - 5);
                BOOL v137 = __OFSUB__(v135, v136);
                uint64_t v129 = v135 - v136;
                char v130 = v137;
                if (v137) {
                  goto LABEL_189;
                }
                unint64_t v138 = v122 - 2;
                uint64_t v139 = &v125[16 * v122 - 32];
                uint64_t v141 = *(void *)v139;
                uint64_t v140 = *((void *)v139 + 1);
                BOOL v137 = __OFSUB__(v140, v141);
                uint64_t v142 = v140 - v141;
                if (v137) {
                  goto LABEL_190;
                }
                BOOL v137 = __OFADD__(v129, v142);
                uint64_t v143 = v129 + v142;
                if (v137) {
                  goto LABEL_192;
                }
                if (v143 >= v134)
                {
                  int v161 = &v125[16 * v126];
                  uint64_t v163 = *(void *)v161;
                  uint64_t v162 = *((void *)v161 + 1);
                  BOOL v137 = __OFSUB__(v162, v163);
                  uint64_t v164 = v162 - v163;
                  if (v137) {
                    goto LABEL_200;
                  }
                  BOOL v154 = v129 < v164;
                  goto LABEL_150;
                }
              }
              else
              {
                if (v122 != 3)
                {
                  uint64_t v155 = *((void *)v38 + 4);
                  uint64_t v156 = *((void *)v38 + 5);
                  BOOL v137 = __OFSUB__(v156, v155);
                  uint64_t v148 = v156 - v155;
                  char v149 = v137;
                  goto LABEL_144;
                }
                uint64_t v128 = *((void *)v38 + 4);
                uint64_t v127 = *((void *)v38 + 5);
                BOOL v137 = __OFSUB__(v127, v128);
                uint64_t v129 = v127 - v128;
                char v130 = v137;
              }
              if (v130) {
                goto LABEL_191;
              }
              unint64_t v138 = v122 - 2;
              uint64_t v144 = &v125[16 * v122 - 32];
              uint64_t v146 = *(void *)v144;
              uint64_t v145 = *((void *)v144 + 1);
              BOOL v147 = __OFSUB__(v145, v146);
              uint64_t v148 = v145 - v146;
              char v149 = v147;
              if (v147) {
                goto LABEL_193;
              }
              uint64_t v150 = &v125[16 * v126];
              uint64_t v152 = *(void *)v150;
              uint64_t v151 = *((void *)v150 + 1);
              BOOL v137 = __OFSUB__(v151, v152);
              uint64_t v153 = v151 - v152;
              if (v137) {
                goto LABEL_195;
              }
              if (__OFADD__(v148, v153)) {
                goto LABEL_197;
              }
              if (v148 + v153 >= v129)
              {
                BOOL v154 = v129 < v153;
LABEL_150:
                if (v154) {
                  unint64_t v126 = v138;
                }
                goto LABEL_152;
              }
LABEL_144:
              if (v149) {
                goto LABEL_194;
              }
              uint64_t v157 = &v125[16 * v126];
              uint64_t v159 = *(void *)v157;
              uint64_t v158 = *((void *)v157 + 1);
              BOOL v137 = __OFSUB__(v158, v159);
              uint64_t v160 = v158 - v159;
              if (v137) {
                goto LABEL_196;
              }
              if (v160 < v148) {
                goto LABEL_161;
              }
LABEL_152:
              unint64_t v165 = v126 - 1;
              if (v126 - 1 >= v122) {
                goto LABEL_184;
              }
              if (!v37) {
                goto LABEL_214;
              }
              uint64_t v166 = &v125[16 * v165];
              uint64_t v167 = *(void *)v166;
              unint64_t v168 = v126;
              uint64_t v169 = &v125[16 * v126];
              uint64_t v170 = *((void *)v169 + 1);
              v171 = (char *)(v37 + 8 * *(void *)v166);
              v213 = (char *)(v37 + 8 * *(void *)v169);
              uint64_t v172 = v211;
              swift_bridgeObjectRetain();
              uint64_t v173 = v208;
              swift_retain();
              uint64_t v174 = v171;
              uint64_t v175 = v215;
              sub_22089DEC8(v174, v213, v37 + 8 * v170, v207, v210, v172, v173, v218, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, void))sub_220897384);
              uint64_t v215 = v175;
              if (v175) {
                goto LABEL_179;
              }
              uint64_t v38 = v214;
              if (v170 < v167) {
                goto LABEL_185;
              }
              if (v168 > *((void *)v214 + 2)) {
                goto LABEL_186;
              }
              unint64_t v176 = v168;
              *(void *)uint64_t v166 = v167;
              uint64_t v125 = v205;
              *(void *)&v205[16 * v165 + 8] = v170;
              unint64_t v177 = *((void *)v38 + 2);
              if (v168 >= v177) {
                goto LABEL_187;
              }
              unint64_t v122 = v177 - 1;
              memmove(v169, v169 + 16, 16 * (v177 - 1 - v176));
              *((void *)v38 + 2) = v177 - 1;
              uint64_t v37 = v225;
              if (v177 <= 2) {
                goto LABEL_161;
              }
            }
          }
          unint64_t v122 = 1;
LABEL_161:
          uint64_t v39 = (char *)v201;
          uint64_t v36 = (char *)v224;
          if (v224 >= v201) {
            goto LABEL_168;
          }
          goto LABEL_13;
        }
        unint64_t v113 = v219;
        uint64_t v112 = v220;
        if (v111 == 1)
        {
          sub_2208573C0(v227);
          sub_2208573C0(v228);
          sub_2208573C0(v230);
        }
        else
        {
          uint64_t v114 = *v217;
          ((void (*)(char *, uint64_t, uint64_t))*v217)(v219, v227, v86);
          ((void (*)(char *, uint64_t, uint64_t))v114)(v112, v108, v86);
          sub_220895FE0();
          if (v218) {
            char v115 = sub_22093E450();
          }
          else {
            char v115 = sub_22093E460();
          }
          char v116 = v115;
          uint64_t v117 = *v216;
          (*v216)(v112, v86);
          v117(v113, v86);
          sub_2208573C0(v228);
          sub_2208573C0(v230);
          if ((v116 & 1) == 0)
          {
            uint64_t v37 = v225;
            goto LABEL_74;
          }
        }
        uint64_t v37 = v225;
        if (!v225) {
          goto LABEL_213;
        }
        unint64_t v118 = *(void *)v85;
        unint64_t v88 = *((void *)v85 + 1);
        *(void *)BOOL v85 = v88;
        *((void *)v85 + 1) = v118;
        v85 -= 8;
        if ((char *)v224 == ++v89) {
          goto LABEL_74;
        }
      }
    }
    unint64_t v122 = *(void *)(MEMORY[0x263F8EE78] + 16);
    v214 = (char *)MEMORY[0x263F8EE78];
LABEL_168:
    if (v122 >= 2)
    {
      uint64_t v178 = *v195;
      uint64_t v230 = *v195;
      while (1)
      {
        unint64_t v179 = v122 - 2;
        if (v122 < 2) {
          break;
        }
        if (!v178) {
          goto LABEL_217;
        }
        uint64_t v180 = *(void *)&v214[16 * v179 + 32];
        uint64_t v181 = *(void *)&v214[16 * v122 + 24];
        uint64_t v182 = (char *)(v178 + 8 * v180);
        uint64_t v183 = (char *)(v178 + 8 * *(void *)&v214[16 * v122 + 16]);
        unint64_t v184 = v178 + 8 * v181;
        uint64_t v185 = v211;
        swift_bridgeObjectRetain();
        uint64_t v186 = v208;
        swift_retain();
        uint64_t v187 = v182;
        uint64_t v188 = v215;
        sub_22089DEC8(v187, v183, v184, v207, v210, v185, v186, v218, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, void))sub_220897384);
        uint64_t v215 = v188;
        if (v188) {
          goto LABEL_179;
        }
        if (v181 < v180) {
          goto LABEL_202;
        }
        uint64_t v189 = v214;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v189 = sub_22080AB70((uint64_t)v189);
        }
        if (v179 >= *((void *)v189 + 2)) {
          goto LABEL_203;
        }
        v190 = &v189[16 * v179 + 32];
        *(void *)v190 = v180;
        *((void *)v190 + 1) = v181;
        unint64_t v191 = *((void *)v189 + 2);
        if (v122 > v191) {
          goto LABEL_204;
        }
        memmove(&v189[16 * v122 + 16], &v189[16 * v122 + 32], 16 * (v191 - v122));
        v214 = v189;
        *((void *)v189 + 2) = v191 - 1;
        unint64_t v122 = v191 - 1;
        uint64_t v178 = v230;
        if (v191 <= 2) {
          goto LABEL_179;
        }
      }
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
      goto LABEL_207;
    }
LABEL_179:
    swift_bridgeObjectRelease();
    *(void *)(v197 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_180:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  if ((v29 & 0x8000000000000000) == 0)
  {
    if (v29)
    {
      uint64_t v34 = v211;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v35 = v215;
      sub_2208A6294(0, v29, 1, a1, v210, v34, a4, v218);
      swift_release_n();
      swift_bridgeObjectRelease_n();
      uint64_t v215 = v35;
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_180;
  }
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_214:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_217:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_218:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208A7BE8(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a5 & 1;
  uint64_t v12 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_22089E454((uint64_t)v12);
  }
  uint64_t v13 = *((void *)v12 + 2);
  v15[0] = v12 + 32;
  v15[1] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  a6(v15, a2, a3, a4, v11);
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = v12;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2208A7CE4(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4;
  uint64_t v10 = __src;
  uint64_t v11 = __dst;
  int64_t v12 = __src - __dst;
  int64_t v13 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v13 = __src - __dst;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = a3 - (void)__src;
  uint64_t v16 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v16 = a3 - (void)__src;
  }
  uint64_t v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __src || &__src[8 * v17] <= a4) {
      memmove(a4, __src, 8 * v17);
    }
    uint64_t v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8) {
      goto LABEL_93;
    }
    uint64_t v68 = (void *)(a7 + 16);
    uint64_t v43 = (char *)(a3 - 8);
    while (1)
    {
      unint64_t v69 = v43;
      unint64_t v44 = *((void *)v18 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_103:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      unint64_t v46 = v10 - 8;
      unint64_t v45 = *((void *)v10 - 1);
      swift_beginAccess();
      uint64_t v47 = (void *)*v68;
      if (!*v68) {
        goto LABEL_102;
      }
      uint64_t v48 = v47[1];
      if ((uint64_t)v44 >= v48) {
        goto LABEL_103;
      }
      uint64_t v49 = v47 + 8;
      int v50 = *((unsigned __int8 *)v47 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v50)
      {
        uint64_t v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        if (v51 < 0) {
          uint64_t v51 = *v47 + 14;
        }
        uint64_t v52 = v51 >> 3;
        uint64_t v53 = v52 - 1;
        BOOL v39 = v52 < 1;
        uint64_t v54 = v52 + 62;
        if (!v39) {
          uint64_t v54 = v53;
        }
        uint64_t v55 = *(void *)((char *)&v49[v44 + 8] + (v54 & 0xFFFFFFFFFFFFFFC0));
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v55 = 0;
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      if ((uint64_t)v45 >= v48) {
        goto LABEL_103;
      }
      int v56 = *((unsigned __int8 *)v49 + (v45 >> 3)) & (1 << (v45 & 7));
      if (v56)
      {
        uint64_t v57 = *v47;
        BOOL v33 = __OFADD__(v57, 7);
        uint64_t v58 = v57 + 7;
        if (v33) {
          goto LABEL_100;
        }
        uint64_t v59 = v58 / 8;
        uint64_t v60 = v59 - 1;
        BOOL v39 = v59 < 1;
        uint64_t v61 = v59 + 62;
        if (!v39) {
          uint64_t v61 = v60;
        }
        uint64_t v62 = *(void *)((char *)&v49[v45 + 8] + (v61 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v62 = 0;
      }
      unint64_t v63 = v69 + 8;
      if (v56) {
        BOOL v64 = v55 < v62;
      }
      else {
        BOOL v64 = 1;
      }
      char v65 = v64;
      if (v50 && (v65 & 1) != 0)
      {
        if (v63 != v10)
        {
          v10 -= 8;
LABEL_90:
          *(void *)unint64_t v69 = *(void *)v46;
          goto LABEL_91;
        }
        BOOL v66 = v69 >= v10;
        v10 -= 8;
        if (v66) {
          goto LABEL_90;
        }
      }
      else
      {
        unint64_t v46 = v18 - 8;
        if (v63 != v18)
        {
          v18 -= 8;
          goto LABEL_90;
        }
        BOOL v66 = v69 >= v18;
        v18 -= 8;
        if (v66) {
          goto LABEL_90;
        }
      }
LABEL_91:
      if (v10 > v11)
      {
        uint64_t v43 = v69 - 8;
        if (v18 > v8) {
          continue;
        }
      }
      goto LABEL_93;
    }
  }
  if (a4 != __dst || &__dst[8 * v14] <= a4) {
    memmove(a4, __dst, 8 * v14);
  }
  uint64_t v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    uint64_t v19 = (void *)(a7 + 16);
    while (1)
    {
      unint64_t v20 = *(void *)v10;
      if ((*(void *)v10 & 0x8000000000000000) != 0) {
        goto LABEL_103;
      }
      unint64_t v21 = *(void *)v8;
      swift_beginAccess();
      uint64_t v22 = (void *)*v19;
      if (!*v19) {
        goto LABEL_101;
      }
      uint64_t v23 = v22[1];
      if ((uint64_t)v20 >= v23) {
        goto LABEL_103;
      }
      uint64_t v24 = v22 + 8;
      int v25 = *((unsigned __int8 *)v22 + (v20 >> 3) + 64) & (1 << (v20 & 7));
      if (v25)
      {
        uint64_t v26 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_98;
        }
        if (v26 < 0) {
          uint64_t v26 = *v22 + 14;
        }
        uint64_t v27 = v26 >> 3;
        uint64_t v28 = v27 - 1;
        BOOL v39 = v27 < 1;
        uint64_t v29 = v27 + 62;
        if (!v39) {
          uint64_t v29 = v28;
        }
        uint64_t v30 = *(void *)((char *)&v24[v20 + 8] + (v29 & 0xFFFFFFFFFFFFFFC0));
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v30 = 0;
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      if ((uint64_t)v21 >= v23) {
        goto LABEL_103;
      }
      int v31 = *((unsigned __int8 *)v24 + (v21 >> 3)) & (1 << (v21 & 7));
      if (v31)
      {
        uint64_t v32 = *v22;
        BOOL v33 = __OFADD__(v32, 7);
        uint64_t v34 = v32 + 7;
        if (v33) {
          goto LABEL_99;
        }
        uint64_t v35 = v34 / 8;
        uint64_t v36 = v35 - 1;
        BOOL v39 = v35 < 1;
        uint64_t v37 = v35 + 62;
        if (!v39) {
          uint64_t v37 = v36;
        }
        uint64_t v38 = *(void *)((char *)&v24[v21 + 8] + (v37 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v38 = 0;
      }
      BOOL v39 = !v31 || v30 < v38;
      BOOL v40 = v39;
      if (!v25 || !v40) {
        break;
      }
      uint64_t v41 = v10;
      BOOL v42 = v11 == v10;
      v10 += 8;
      if (!v42) {
        goto LABEL_43;
      }
LABEL_44:
      v11 += 8;
      if (v8 >= v18 || (unint64_t)v10 >= a3) {
        goto LABEL_46;
      }
    }
    uint64_t v41 = v8;
    BOOL v42 = v11 == v8;
    v8 += 8;
    if (v42) {
      goto LABEL_44;
    }
LABEL_43:
    *(void *)uint64_t v11 = *(void *)v41;
    goto LABEL_44;
  }
LABEL_46:
  uint64_t v10 = v11;
LABEL_93:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  }
  return 1;
}

uint64_t sub_2208A8198(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = result;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = *a4;
    uint64_t v9 = (void *)(a7 + 16);
    uint64_t v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v11 = *(void *)(v8 + 8 * v7);
    uint64_t v12 = v36;
    int64_t v13 = (unint64_t *)v10;
    while ((v11 & 0x8000000000000000) == 0)
    {
      unint64_t v14 = *v13;
      uint64_t result = swift_beginAccess();
      uint64_t v15 = (void *)*v9;
      if (!*v9) {
        goto LABEL_38;
      }
      uint64_t v16 = v15[1];
      if ((uint64_t)v11 >= v16) {
        break;
      }
      uint64_t v17 = v15 + 8;
      int v18 = *((unsigned __int8 *)v15 + (v11 >> 3) + 64) & (1 << (v11 & 7));
      if (v18)
      {
        uint64_t v19 = *v15 + 7;
        if (__OFADD__(*v15, 7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          break;
        }
        if (v19 < 0) {
          uint64_t v19 = *v15 + 14;
        }
        uint64_t v20 = v19 >> 3;
        uint64_t v21 = v20 - 1;
        BOOL v32 = v20 < 1;
        uint64_t v22 = v20 + 62;
        if (!v32) {
          uint64_t v22 = v21;
        }
        uint64_t v23 = *(void *)((char *)&v17[v11 + 8] + (v22 & 0xFFFFFFFFFFFFFFC0));
        if ((v14 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        uint64_t v23 = 0;
        if ((v14 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v14 >= v16) {
        break;
      }
      int v24 = *((unsigned __int8 *)v17 + (v14 >> 3)) & (1 << (v14 & 7));
      if (v24)
      {
        uint64_t v25 = *v15;
        BOOL v26 = __OFADD__(v25, 7);
        uint64_t v27 = v25 + 7;
        if (v26) {
          goto LABEL_37;
        }
        uint64_t v28 = v27 / 8;
        uint64_t v29 = v28 - 1;
        BOOL v32 = v28 < 1;
        uint64_t v30 = v28 + 62;
        if (!v32) {
          uint64_t v30 = v29;
        }
        uint64_t v31 = *(void *)((char *)&v17[v14 + 8] + (v30 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v31 = 0;
      }
      if (v24) {
        BOOL v32 = v23 < v31;
      }
      else {
        BOOL v32 = 1;
      }
      char v33 = v32;
      if (v18 && (v33 & 1) != 0)
      {
        if (!v8) {
          goto LABEL_39;
        }
        unint64_t v34 = *v13;
        unint64_t v11 = v13[1];
        *int64_t v13 = v11;
        v13[1] = v34;
        --v13;
        if (v7 != ++v12) {
          continue;
        }
      }
      ++v7;
      v10 += 8;
      if (v7 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A83A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v9 = sub_22093F170();
  if (v9 < v8)
  {
    if (v8 >= 0) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v8 + 1;
    }
    if (v8 < -1) {
      goto LABEL_208;
    }
    uint64_t v150 = a3;
    uint64_t v155 = a4;
    uint64_t v142 = v9;
    uint64_t v159 = v4;
    uint64_t v141 = a1;
    if (v8 <= 1)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      char v149 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (v8 != 1)
      {
        unint64_t v76 = *(void *)(MEMORY[0x263F8EE78] + 16);
        uint64_t v15 = (char *)MEMORY[0x263F8EE78];
LABEL_169:
        uint64_t v148 = v12;
        if (v76 < 2)
        {
LABEL_180:
          swift_bridgeObjectRelease();
          *(void *)(v148 + 16) = 0;
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_182;
        }
        uint64_t v129 = *v141;
        *(void *)uint64_t v158 = *v141;
        while (1)
        {
          unint64_t v130 = v76 - 2;
          if (v76 < 2) {
            goto LABEL_202;
          }
          if (!v129) {
            goto LABEL_217;
          }
          BOOL v154 = v15;
          uint64_t v131 = v15 + 32;
          uint64_t v132 = *(void *)&v15[16 * v130 + 32];
          uint64_t v133 = *(void *)&v131[16 * v76 - 8];
          uint64_t v134 = (char *)(v129 + 8 * v132);
          uint64_t v135 = (char *)(v129 + 8 * *(void *)&v131[16 * v76 - 16]);
          unint64_t v136 = v129 + 8 * v133;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2208A7CE4(v134, v135, v136, v149, a2, v150, v155);
          if (v159) {
            goto LABEL_181;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v133 < v132) {
            goto LABEL_203;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v154 = sub_22080AB70((uint64_t)v154);
          }
          if (v130 >= *((void *)v154 + 2)) {
            goto LABEL_204;
          }
          BOOL v137 = &v154[16 * v130 + 32];
          *(void *)BOOL v137 = v132;
          *((void *)v137 + 1) = v133;
          unint64_t v138 = *((void *)v154 + 2);
          if (v76 > v138) {
            goto LABEL_205;
          }
          uint64_t v15 = v154;
          memmove(&v154[16 * v76 + 16], &v154[16 * v76 + 32], 16 * (v138 - v76));
          *((void *)v154 + 2) = v138 - 1;
          unint64_t v76 = v138 - 1;
          uint64_t v129 = *(void *)v158;
          if (v138 <= 2) {
            goto LABEL_180;
          }
        }
      }
    }
    else
    {
      uint64_t v11 = v10 >> 1;
      uint64_t v12 = sub_22093E8A0();
      *(void *)(v12 + 16) = v11;
      char v149 = (char *)(v12 + 32);
    }
    uint64_t v13 = 0;
    uint64_t v14 = *a1;
    uint64_t v143 = (void **)(a4 + 16);
    uint64_t v140 = v14 - 8;
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v147 = v8;
    uint64_t v148 = v12;
    uint64_t v145 = v14;
    while (1)
    {
      uint64_t v16 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_71;
      }
      uint64_t v17 = *(void *)(v14 + 8 * v16);
      if (v17 < 0) {
        goto LABEL_219;
      }
      uint64_t v18 = *(void *)(v14 + 8 * v13);
      swift_beginAccess();
      uint64_t v19 = *v143;
      if (!*v143) {
        goto LABEL_218;
      }
      if (v17 >= v19[1] || (uint64_t v20 = sub_2208915A0(v17, *v143, v155), v18 < 0) || (v23 = v19[1], v18 >= v23))
      {
LABEL_219:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v24 = v20;
      char v25 = v21;
      uint64_t v26 = sub_2208915A0(v18, v19, v22);
      if (v25) {
        break;
      }
      uint64_t v28 = v24;
      uint64_t v8 = v147;
      uint64_t v12 = v148;
      if ((v27 & 1) == 0)
      {
        BOOL v29 = v28 < v26;
        goto LABEL_24;
      }
      uint64_t v30 = v13 + 2;
      if (v13 + 2 >= v147)
      {
        if (v13 < v30) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
      BOOL v29 = 1;
LABEL_28:
      uint64_t v31 = v19 + 8;
      if (v8 <= v30 + 1) {
        uint64_t v32 = v30 + 1;
      }
      else {
        uint64_t v32 = v8;
      }
      uint64_t v33 = *(void *)(v14 + 8 * (v13 + 1));
      while (1)
      {
        uint64_t v34 = v33;
        uint64_t v33 = *(void *)(v14 + 8 * v30);
        if (v33 < 0 || v33 >= v23) {
          goto LABEL_219;
        }
        int v35 = *((unsigned __int8 *)v31 + ((unint64_t)v33 >> 3)) & (1 << (v33 & 7));
        if (v35)
        {
          uint64_t v36 = *v19 + 7;
          if (__OFADD__(*v19, 7)) {
            goto LABEL_199;
          }
          if (v36 < 0) {
            uint64_t v36 = *v19 + 14;
          }
          uint64_t v37 = v36 >> 3;
          uint64_t v38 = v37 - 1;
          BOOL v71 = v37 < 1;
          uint64_t v39 = v37 + 62;
          if (!v71) {
            uint64_t v39 = v38;
          }
          uint64_t v40 = *(void *)((char *)&v31[v33 + 8] + (v39 & 0xFFFFFFFFFFFFFFC0));
          if (v34 < 0) {
            goto LABEL_219;
          }
        }
        else
        {
          uint64_t v40 = 0;
          if (v34 < 0) {
            goto LABEL_219;
          }
        }
        if (v34 >= v23) {
          goto LABEL_219;
        }
        if ((*((unsigned __int8 *)v31 + ((unint64_t)v34 >> 3)) >> (v34 & 7)))
        {
          if (__OFADD__(*v19, 7)) {
            goto LABEL_200;
          }
          if (v35)
          {
            uint64_t v41 = *v19 + 14;
            if (*v19 + 7 >= 0) {
              uint64_t v41 = *v19 + 7;
            }
            uint64_t v42 = v41 >> 3;
            uint64_t v43 = v42 - 1;
            BOOL v71 = v42 < 1;
            uint64_t v44 = v42 + 62;
            if (!v71) {
              uint64_t v44 = v43;
            }
            if ((v29 ^ (v40 < *(void *)((char *)&v31[v34 + 8] + (v44 & 0xFFFFFFFFFFFFFFC0))))) {
              goto LABEL_59;
            }
            goto LABEL_33;
          }
        }
        else if (v35)
        {
          if (!v29) {
            goto LABEL_70;
          }
          goto LABEL_33;
        }
        if (v29) {
          break;
        }
LABEL_33:
        if (++v30 >= v8)
        {
          uint64_t v30 = v32;
          goto LABEL_59;
        }
      }
      if (v30 < v13) {
        goto LABEL_210;
      }
LABEL_61:
      if (v13 < v30)
      {
LABEL_62:
        uint64_t v45 = v30 - 1;
        uint64_t v46 = v13;
        do
        {
          if (v46 != v45)
          {
            if (!v14) {
              goto LABEL_216;
            }
            uint64_t v47 = *(void *)(v14 + 8 * v46);
            *(void *)(v14 + 8 * v46) = *(void *)(v14 + 8 * v45);
            *(void *)(v14 + 8 * v45) = v47;
          }
          BOOL v71 = ++v46 < v45--;
        }
        while (v71);
      }
LABEL_70:
      uint64_t v16 = v30;
LABEL_71:
      if (v16 < v8)
      {
        if (__OFSUB__(v16, v13)) {
          goto LABEL_207;
        }
        if (v16 - v13 < v142)
        {
          if (__OFADD__(v13, v142)) {
            goto LABEL_211;
          }
          if (v13 + v142 >= v8) {
            uint64_t v48 = v8;
          }
          else {
            uint64_t v48 = v13 + v142;
          }
          if (v48 >= v13)
          {
            if (v16 != v48)
            {
              *(void *)uint64_t v156 = v13;
              uint64_t v49 = (unint64_t *)(v140 + 8 * v16);
              uint64_t v152 = v48;
              do
              {
                uint64_t v50 = v16;
                unint64_t v51 = *(void *)(v14 + 8 * v16);
                uint64_t v52 = *(void *)v156;
                uint64_t v53 = v49;
                do
                {
                  if ((v51 & 0x8000000000000000) != 0) {
                    goto LABEL_219;
                  }
                  unint64_t v54 = *v53;
                  swift_beginAccess();
                  uint64_t v55 = *v143;
                  if (!*v143) {
                    goto LABEL_213;
                  }
                  uint64_t v56 = v55[1];
                  if ((uint64_t)v51 >= v56) {
                    goto LABEL_219;
                  }
                  uint64_t v57 = v55 + 8;
                  int v58 = *((unsigned __int8 *)v55 + (v51 >> 3) + 64) & (1 << (v51 & 7));
                  if (v58)
                  {
                    uint64_t v59 = *v55 + 7;
                    if (__OFADD__(*v55, 7))
                    {
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
LABEL_189:
                      __break(1u);
LABEL_190:
                      __break(1u);
LABEL_191:
                      __break(1u);
LABEL_192:
                      __break(1u);
LABEL_193:
                      __break(1u);
LABEL_194:
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
LABEL_208:
                      __break(1u);
LABEL_209:
                      __break(1u);
LABEL_210:
                      __break(1u);
LABEL_211:
                      __break(1u);
                      goto LABEL_212;
                    }
                    if (v59 < 0) {
                      uint64_t v59 = *v55 + 14;
                    }
                    uint64_t v60 = v59 >> 3;
                    uint64_t v61 = v60 - 1;
                    BOOL v71 = v60 < 1;
                    uint64_t v62 = v60 + 62;
                    if (!v71) {
                      uint64_t v62 = v61;
                    }
                    uint64_t v63 = *(void *)((char *)&v57[v51 + 8] + (v62 & 0xFFFFFFFFFFFFFFC0));
                    if ((v54 & 0x8000000000000000) != 0) {
                      goto LABEL_219;
                    }
                  }
                  else
                  {
                    uint64_t v63 = 0;
                    if ((v54 & 0x8000000000000000) != 0) {
                      goto LABEL_219;
                    }
                  }
                  if ((uint64_t)v54 >= v56) {
                    goto LABEL_219;
                  }
                  int v64 = *((unsigned __int8 *)v57 + (v54 >> 3)) & (1 << (v54 & 7));
                  if (v64)
                  {
                    uint64_t v65 = *v55;
                    BOOL v90 = __OFADD__(v65, 7);
                    uint64_t v66 = v65 + 7;
                    if (v90) {
                      goto LABEL_184;
                    }
                    uint64_t v67 = v66 / 8;
                    uint64_t v68 = v67 - 1;
                    BOOL v71 = v67 < 1;
                    uint64_t v69 = v67 + 62;
                    if (!v71) {
                      uint64_t v69 = v68;
                    }
                    uint64_t v70 = *(void *)((char *)&v57[v54 + 8] + (v69 & 0xFFFFFFFFFFFFFFC0));
                  }
                  else
                  {
                    uint64_t v70 = 0;
                  }
                  if (v64) {
                    BOOL v71 = v63 < v70;
                  }
                  else {
                    BOOL v71 = 1;
                  }
                  char v72 = v71;
                  if (!v58 || (v72 & 1) == 0) {
                    break;
                  }
                  if (!v14) {
                    goto LABEL_214;
                  }
                  unint64_t v73 = *v53;
                  unint64_t v51 = v53[1];
                  *uint64_t v53 = v51;
                  v53[1] = v73;
                  --v53;
                  ++v52;
                }
                while (v50 != v52);
                uint64_t v16 = v50 + 1;
                ++v49;
              }
              while (v50 + 1 != v152);
              uint64_t v16 = v152;
              uint64_t v8 = v147;
              uint64_t v12 = v148;
              uint64_t v13 = *(void *)v156;
            }
            goto LABEL_114;
          }
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_215:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_216:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
      }
LABEL_114:
      if (v16 < v13) {
        goto LABEL_206;
      }
      uint64_t v144 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v75 = *((void *)v15 + 2);
      unint64_t v74 = *((void *)v15 + 3);
      unint64_t v76 = v75 + 1;
      if (v75 >= v74 >> 1) {
        uint64_t v15 = sub_22081B3EC((char *)(v74 > 1), v75 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v76;
      int v77 = v15 + 32;
      uint64_t v78 = &v15[16 * v75 + 32];
      *(void *)uint64_t v78 = v13;
      *((void *)v78 + 1) = v144;
      if (v75)
      {
        uint64_t v153 = v15;
        uint64_t v146 = v15 + 32;
        while (1)
        {
          unint64_t v79 = v76 - 1;
          if (v76 >= 4)
          {
            unint64_t v84 = &v77[16 * v76];
            uint64_t v85 = *((void *)v84 - 8);
            uint64_t v86 = *((void *)v84 - 7);
            BOOL v90 = __OFSUB__(v86, v85);
            uint64_t v87 = v86 - v85;
            if (v90) {
              goto LABEL_189;
            }
            uint64_t v89 = *((void *)v84 - 6);
            uint64_t v88 = *((void *)v84 - 5);
            BOOL v90 = __OFSUB__(v88, v89);
            uint64_t v82 = v88 - v89;
            char v83 = v90;
            if (v90) {
              goto LABEL_190;
            }
            unint64_t v91 = v76 - 2;
            uint64_t v92 = &v77[16 * v76 - 32];
            uint64_t v94 = *(void *)v92;
            uint64_t v93 = *((void *)v92 + 1);
            BOOL v90 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v90) {
              goto LABEL_191;
            }
            BOOL v90 = __OFADD__(v82, v95);
            uint64_t v96 = v82 + v95;
            if (v90) {
              goto LABEL_194;
            }
            if (v96 >= v87)
            {
              uint64_t v114 = &v77[16 * v79];
              uint64_t v116 = *(void *)v114;
              uint64_t v115 = *((void *)v114 + 1);
              BOOL v90 = __OFSUB__(v115, v116);
              uint64_t v117 = v115 - v116;
              if (v90) {
                goto LABEL_201;
              }
              BOOL v107 = v82 < v117;
              goto LABEL_152;
            }
          }
          else
          {
            if (v76 != 3)
            {
              uint64_t v108 = *((void *)v15 + 4);
              uint64_t v109 = *((void *)v15 + 5);
              BOOL v90 = __OFSUB__(v109, v108);
              uint64_t v101 = v109 - v108;
              char v102 = v90;
              goto LABEL_146;
            }
            uint64_t v81 = *((void *)v15 + 4);
            uint64_t v80 = *((void *)v15 + 5);
            BOOL v90 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            char v83 = v90;
          }
          if (v83) {
            goto LABEL_192;
          }
          unint64_t v91 = v76 - 2;
          uint64_t v97 = &v77[16 * v76 - 32];
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *((void *)v97 + 1);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v101 = v98 - v99;
          char v102 = v100;
          if (v100) {
            goto LABEL_195;
          }
          uint64_t v103 = &v77[16 * v79];
          uint64_t v105 = *(void *)v103;
          uint64_t v104 = *((void *)v103 + 1);
          BOOL v90 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v90) {
            goto LABEL_196;
          }
          if (__OFADD__(v101, v106)) {
            goto LABEL_198;
          }
          if (v101 + v106 >= v82)
          {
            BOOL v107 = v82 < v106;
LABEL_152:
            if (v107) {
              unint64_t v79 = v91;
            }
            goto LABEL_154;
          }
LABEL_146:
          if (v102) {
            goto LABEL_193;
          }
          int v110 = &v77[16 * v79];
          uint64_t v112 = *(void *)v110;
          uint64_t v111 = *((void *)v110 + 1);
          BOOL v90 = __OFSUB__(v111, v112);
          uint64_t v113 = v111 - v112;
          if (v90) {
            goto LABEL_197;
          }
          if (v113 < v101) {
            goto LABEL_163;
          }
LABEL_154:
          unint64_t v118 = v79 - 1;
          if (v79 - 1 >= v76) {
            goto LABEL_185;
          }
          if (!v14) {
            goto LABEL_215;
          }
          uint64_t v119 = v14;
          unint64_t v120 = &v77[16 * v118];
          uint64_t v121 = *(void *)v120;
          unint64_t v122 = v79;
          uint64_t v123 = &v77[16 * v79];
          uint64_t v124 = *((void *)v123 + 1);
          uint64_t v125 = (char *)(v119 + 8 * *(void *)v120);
          unint64_t v126 = (char *)(v119 + 8 * *(void *)v123);
          unint64_t v157 = v119 + 8 * v124;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2208A7CE4(v125, v126, v157, v149, a2, v150, v155);
          if (v159)
          {
LABEL_181:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            *(void *)(v148 + 16) = 0;
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_182;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v124 < v121) {
            goto LABEL_186;
          }
          if (v122 > *((void *)v153 + 2)) {
            goto LABEL_187;
          }
          unint64_t v127 = v122;
          *(void *)unint64_t v120 = v121;
          int v77 = v146;
          *(void *)&v146[16 * v118 + 8] = v124;
          unint64_t v128 = *((void *)v153 + 2);
          if (v122 >= v128) {
            goto LABEL_188;
          }
          uint64_t v15 = v153;
          uint64_t v159 = 0;
          unint64_t v76 = v128 - 1;
          memmove(v123, v123 + 16, 16 * (v128 - 1 - v127));
          *((void *)v153 + 2) = v128 - 1;
          uint64_t v8 = v147;
          uint64_t v12 = v148;
          uint64_t v14 = v145;
          if (v128 <= 2) {
            goto LABEL_163;
          }
        }
      }
      unint64_t v76 = 1;
LABEL_163:
      uint64_t v13 = v144;
      if (v144 >= v8) {
        goto LABEL_169;
      }
    }
    BOOL v29 = 0;
    uint64_t v8 = v147;
    uint64_t v12 = v148;
LABEL_24:
    uint64_t v30 = v13 + 2;
    if (v13 + 2 >= v8)
    {
LABEL_59:
      uint64_t v16 = v30;
      if (v29)
      {
        if (v30 < v13) {
          goto LABEL_210;
        }
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    goto LABEL_28;
  }
  if (v8 < 0) {
    goto LABEL_209;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A8198(0, v8, 1, a1, a2, a3, a4);
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_182:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208A8EF8(char *__dst, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4;
  uint64_t v10 = __src;
  uint64_t v11 = __dst;
  int64_t v12 = __src - __dst;
  int64_t v13 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v13 = __src - __dst;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = a3 - (void)__src;
  uint64_t v16 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v16 = a3 - (void)__src;
  }
  uint64_t v17 = v16 >> 3;
  if (v14 >= v16 >> 3)
  {
    if (a4 != __src || &__src[8 * v17] <= a4) {
      memmove(a4, __src, 8 * v17);
    }
    uint64_t v18 = &v8[8 * v17];
    if (v11 >= v10 || v15 < 8) {
      goto LABEL_93;
    }
    uint64_t v68 = (void *)(a7 + 16);
    uint64_t v43 = (char *)(a3 - 8);
    while (1)
    {
      uint64_t v69 = v43;
      unint64_t v44 = *((void *)v18 - 1);
      if ((v44 & 0x8000000000000000) != 0)
      {
LABEL_103:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v46 = v10 - 8;
      unint64_t v45 = *((void *)v10 - 1);
      swift_beginAccess();
      uint64_t v47 = (void *)*v68;
      if (!*v68) {
        goto LABEL_102;
      }
      uint64_t v48 = v47[1];
      if ((uint64_t)v44 >= v48) {
        goto LABEL_103;
      }
      uint64_t v49 = v47 + 8;
      int v50 = *((unsigned __int8 *)v47 + (v44 >> 3) + 64) & (1 << (v44 & 7));
      if (v50)
      {
        uint64_t v51 = *v47 + 7;
        if (__OFADD__(*v47, 7))
        {
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        if (v51 < 0) {
          uint64_t v51 = *v47 + 14;
        }
        uint64_t v52 = v51 >> 3;
        uint64_t v53 = v52 - 1;
        BOOL v39 = v52 < 1;
        uint64_t v54 = v52 + 62;
        if (!v39) {
          uint64_t v54 = v53;
        }
        uint64_t v55 = *(void *)((char *)&v49[v44 + 8] + (v54 & 0xFFFFFFFFFFFFFFC0));
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v55 = 0;
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      if ((uint64_t)v45 >= v48) {
        goto LABEL_103;
      }
      int v56 = *((unsigned __int8 *)v49 + (v45 >> 3)) & (1 << (v45 & 7));
      if (v56)
      {
        uint64_t v57 = *v47;
        BOOL v33 = __OFADD__(v57, 7);
        uint64_t v58 = v57 + 7;
        if (v33) {
          goto LABEL_100;
        }
        uint64_t v59 = v58 / 8;
        uint64_t v60 = v59 - 1;
        BOOL v39 = v59 < 1;
        uint64_t v61 = v59 + 62;
        if (!v39) {
          uint64_t v61 = v60;
        }
        uint64_t v62 = *(void *)((char *)&v49[v45 + 8] + (v61 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v63 = v69 + 8;
      if (v56) {
        BOOL v64 = v62 < v55;
      }
      else {
        BOOL v64 = 1;
      }
      char v65 = v64;
      if (v50 && (v65 & 1) != 0)
      {
        if (v63 != v10)
        {
          v10 -= 8;
LABEL_90:
          *(void *)uint64_t v69 = *(void *)v46;
          goto LABEL_91;
        }
        BOOL v66 = v69 >= v10;
        v10 -= 8;
        if (v66) {
          goto LABEL_90;
        }
      }
      else
      {
        uint64_t v46 = v18 - 8;
        if (v63 != v18)
        {
          v18 -= 8;
          goto LABEL_90;
        }
        BOOL v66 = v69 >= v18;
        v18 -= 8;
        if (v66) {
          goto LABEL_90;
        }
      }
LABEL_91:
      if (v10 > v11)
      {
        uint64_t v43 = v69 - 8;
        if (v18 > v8) {
          continue;
        }
      }
      goto LABEL_93;
    }
  }
  if (a4 != __dst || &__dst[8 * v14] <= a4) {
    memmove(a4, __dst, 8 * v14);
  }
  uint64_t v18 = &v8[8 * v14];
  if ((unint64_t)v10 < a3 && v12 >= 8)
  {
    uint64_t v19 = (void *)(a7 + 16);
    while (1)
    {
      unint64_t v20 = *(void *)v10;
      if ((*(void *)v10 & 0x8000000000000000) != 0) {
        goto LABEL_103;
      }
      unint64_t v21 = *(void *)v8;
      swift_beginAccess();
      uint64_t v22 = (void *)*v19;
      if (!*v19) {
        goto LABEL_101;
      }
      uint64_t v23 = v22[1];
      if ((uint64_t)v20 >= v23) {
        goto LABEL_103;
      }
      uint64_t v24 = v22 + 8;
      int v25 = *((unsigned __int8 *)v22 + (v20 >> 3) + 64) & (1 << (v20 & 7));
      if (v25)
      {
        uint64_t v26 = *v22 + 7;
        if (__OFADD__(*v22, 7))
        {
          __break(1u);
          goto LABEL_98;
        }
        if (v26 < 0) {
          uint64_t v26 = *v22 + 14;
        }
        uint64_t v27 = v26 >> 3;
        uint64_t v28 = v27 - 1;
        BOOL v39 = v27 < 1;
        uint64_t v29 = v27 + 62;
        if (!v39) {
          uint64_t v29 = v28;
        }
        uint64_t v30 = *(void *)((char *)&v24[v20 + 8] + (v29 & 0xFFFFFFFFFFFFFFC0));
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v30 = 0;
        if ((v21 & 0x8000000000000000) != 0) {
          goto LABEL_103;
        }
      }
      if ((uint64_t)v21 >= v23) {
        goto LABEL_103;
      }
      int v31 = *((unsigned __int8 *)v24 + (v21 >> 3)) & (1 << (v21 & 7));
      if (v31)
      {
        uint64_t v32 = *v22;
        BOOL v33 = __OFADD__(v32, 7);
        uint64_t v34 = v32 + 7;
        if (v33) {
          goto LABEL_99;
        }
        uint64_t v35 = v34 / 8;
        uint64_t v36 = v35 - 1;
        BOOL v39 = v35 < 1;
        uint64_t v37 = v35 + 62;
        if (!v39) {
          uint64_t v37 = v36;
        }
        uint64_t v38 = *(void *)((char *)&v24[v21 + 8] + (v37 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v38 = 0;
      }
      BOOL v39 = !v31 || v38 < v30;
      BOOL v40 = v39;
      if (!v25 || !v40) {
        break;
      }
      uint64_t v41 = v10;
      BOOL v42 = v11 == v10;
      v10 += 8;
      if (!v42) {
        goto LABEL_43;
      }
LABEL_44:
      v11 += 8;
      if (v8 >= v18 || (unint64_t)v10 >= a3) {
        goto LABEL_46;
      }
    }
    uint64_t v41 = v8;
    BOOL v42 = v11 == v8;
    v8 += 8;
    if (v42) {
      goto LABEL_44;
    }
LABEL_43:
    *(void *)uint64_t v11 = *(void *)v41;
    goto LABEL_44;
  }
LABEL_46:
  uint64_t v10 = v11;
LABEL_93:
  if (v10 != v8 || v10 >= &v8[(v18 - v8 + (v18 - v8 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v10, v8, 8 * ((v18 - v8) / 8));
  }
  return 1;
}

uint64_t sub_2208A93AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = result;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = *a4;
    uint64_t v9 = (void *)(a7 + 16);
    uint64_t v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v11 = *(void *)(v8 + 8 * v7);
    uint64_t v12 = v36;
    int64_t v13 = (unint64_t *)v10;
    while ((v11 & 0x8000000000000000) == 0)
    {
      unint64_t v14 = *v13;
      uint64_t result = swift_beginAccess();
      uint64_t v15 = (void *)*v9;
      if (!*v9) {
        goto LABEL_38;
      }
      uint64_t v16 = v15[1];
      if ((uint64_t)v11 >= v16) {
        break;
      }
      uint64_t v17 = v15 + 8;
      int v18 = *((unsigned __int8 *)v15 + (v11 >> 3) + 64) & (1 << (v11 & 7));
      if (v18)
      {
        uint64_t v19 = *v15 + 7;
        if (__OFADD__(*v15, 7))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          break;
        }
        if (v19 < 0) {
          uint64_t v19 = *v15 + 14;
        }
        uint64_t v20 = v19 >> 3;
        uint64_t v21 = v20 - 1;
        BOOL v32 = v20 < 1;
        uint64_t v22 = v20 + 62;
        if (!v32) {
          uint64_t v22 = v21;
        }
        uint64_t v23 = *(void *)((char *)&v17[v11 + 8] + (v22 & 0xFFFFFFFFFFFFFFC0));
        if ((v14 & 0x8000000000000000) != 0) {
          break;
        }
      }
      else
      {
        uint64_t v23 = 0;
        if ((v14 & 0x8000000000000000) != 0) {
          break;
        }
      }
      if ((uint64_t)v14 >= v16) {
        break;
      }
      int v24 = *((unsigned __int8 *)v17 + (v14 >> 3)) & (1 << (v14 & 7));
      if (v24)
      {
        uint64_t v25 = *v15;
        BOOL v26 = __OFADD__(v25, 7);
        uint64_t v27 = v25 + 7;
        if (v26) {
          goto LABEL_37;
        }
        uint64_t v28 = v27 / 8;
        uint64_t v29 = v28 - 1;
        BOOL v32 = v28 < 1;
        uint64_t v30 = v28 + 62;
        if (!v32) {
          uint64_t v30 = v29;
        }
        uint64_t v31 = *(void *)((char *)&v17[v14 + 8] + (v30 & 0xFFFFFFFFFFFFFFC0));
      }
      else
      {
        uint64_t v31 = 0;
      }
      if (v24) {
        BOOL v32 = v31 < v23;
      }
      else {
        BOOL v32 = 1;
      }
      char v33 = v32;
      if (v18 && (v33 & 1) != 0)
      {
        if (!v8) {
          goto LABEL_39;
        }
        unint64_t v34 = *v13;
        unint64_t v11 = v13[1];
        *int64_t v13 = v11;
        v13[1] = v34;
        --v13;
        if (v7 != ++v12) {
          continue;
        }
      }
      ++v7;
      v10 += 8;
      if (v7 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208A95BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v9 = sub_22093F170();
  if (v9 < v8)
  {
    if (v8 >= 0) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v8 + 1;
    }
    if (v8 < -1) {
      goto LABEL_208;
    }
    uint64_t v150 = a3;
    uint64_t v155 = a4;
    uint64_t v142 = v9;
    uint64_t v159 = v4;
    uint64_t v141 = a1;
    if (v8 <= 1)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      char v149 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (v8 != 1)
      {
        unint64_t v76 = *(void *)(MEMORY[0x263F8EE78] + 16);
        uint64_t v15 = (char *)MEMORY[0x263F8EE78];
LABEL_169:
        uint64_t v148 = v12;
        if (v76 < 2)
        {
LABEL_180:
          swift_bridgeObjectRelease();
          *(void *)(v148 + 16) = 0;
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_182;
        }
        uint64_t v129 = *v141;
        *(void *)uint64_t v158 = *v141;
        while (1)
        {
          unint64_t v130 = v76 - 2;
          if (v76 < 2) {
            goto LABEL_202;
          }
          if (!v129) {
            goto LABEL_217;
          }
          BOOL v154 = v15;
          uint64_t v131 = v15 + 32;
          uint64_t v132 = *(void *)&v15[16 * v130 + 32];
          uint64_t v133 = *(void *)&v131[16 * v76 - 8];
          uint64_t v134 = (char *)(v129 + 8 * v132);
          uint64_t v135 = (char *)(v129 + 8 * *(void *)&v131[16 * v76 - 16]);
          unint64_t v136 = v129 + 8 * v133;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2208A8EF8(v134, v135, v136, v149, a2, v150, v155);
          if (v159) {
            goto LABEL_181;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v133 < v132) {
            goto LABEL_203;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v154 = sub_22080AB70((uint64_t)v154);
          }
          if (v130 >= *((void *)v154 + 2)) {
            goto LABEL_204;
          }
          BOOL v137 = &v154[16 * v130 + 32];
          *(void *)BOOL v137 = v132;
          *((void *)v137 + 1) = v133;
          unint64_t v138 = *((void *)v154 + 2);
          if (v76 > v138) {
            goto LABEL_205;
          }
          uint64_t v15 = v154;
          memmove(&v154[16 * v76 + 16], &v154[16 * v76 + 32], 16 * (v138 - v76));
          *((void *)v154 + 2) = v138 - 1;
          unint64_t v76 = v138 - 1;
          uint64_t v129 = *(void *)v158;
          if (v138 <= 2) {
            goto LABEL_180;
          }
        }
      }
    }
    else
    {
      uint64_t v11 = v10 >> 1;
      uint64_t v12 = sub_22093E8A0();
      *(void *)(v12 + 16) = v11;
      char v149 = (char *)(v12 + 32);
    }
    uint64_t v13 = 0;
    uint64_t v14 = *a1;
    uint64_t v143 = (void **)(a4 + 16);
    uint64_t v140 = v14 - 8;
    uint64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v147 = v8;
    uint64_t v148 = v12;
    uint64_t v145 = v14;
    while (1)
    {
      uint64_t v16 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_71;
      }
      uint64_t v17 = *(void *)(v14 + 8 * v16);
      if (v17 < 0) {
        goto LABEL_219;
      }
      uint64_t v18 = *(void *)(v14 + 8 * v13);
      swift_beginAccess();
      uint64_t v19 = *v143;
      if (!*v143) {
        goto LABEL_218;
      }
      if (v17 >= v19[1] || (uint64_t v20 = sub_2208915A0(v17, *v143, v155), v18 < 0) || (v23 = v19[1], v18 >= v23))
      {
LABEL_219:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v24 = v20;
      char v25 = v21;
      uint64_t v26 = sub_2208915A0(v18, v19, v22);
      if (v25) {
        break;
      }
      uint64_t v28 = v24;
      uint64_t v8 = v147;
      uint64_t v12 = v148;
      if ((v27 & 1) == 0)
      {
        BOOL v29 = v26 < v28;
        goto LABEL_24;
      }
      uint64_t v30 = v13 + 2;
      if (v13 + 2 >= v147)
      {
        if (v13 < v30) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
      BOOL v29 = 1;
LABEL_28:
      uint64_t v31 = v19 + 8;
      if (v8 <= v30 + 1) {
        uint64_t v32 = v30 + 1;
      }
      else {
        uint64_t v32 = v8;
      }
      uint64_t v33 = *(void *)(v14 + 8 * (v13 + 1));
      while (1)
      {
        uint64_t v34 = v33;
        uint64_t v33 = *(void *)(v14 + 8 * v30);
        if (v33 < 0 || v33 >= v23) {
          goto LABEL_219;
        }
        int v35 = *((unsigned __int8 *)v31 + ((unint64_t)v33 >> 3)) & (1 << (v33 & 7));
        if (v35)
        {
          uint64_t v36 = *v19 + 7;
          if (__OFADD__(*v19, 7)) {
            goto LABEL_199;
          }
          if (v36 < 0) {
            uint64_t v36 = *v19 + 14;
          }
          uint64_t v37 = v36 >> 3;
          uint64_t v38 = v37 - 1;
          BOOL v71 = v37 < 1;
          uint64_t v39 = v37 + 62;
          if (!v71) {
            uint64_t v39 = v38;
          }
          uint64_t v40 = *(void *)((char *)&v31[v33 + 8] + (v39 & 0xFFFFFFFFFFFFFFC0));
          if (v34 < 0) {
            goto LABEL_219;
          }
        }
        else
        {
          uint64_t v40 = 0;
          if (v34 < 0) {
            goto LABEL_219;
          }
        }
        if (v34 >= v23) {
          goto LABEL_219;
        }
        if ((*((unsigned __int8 *)v31 + ((unint64_t)v34 >> 3)) >> (v34 & 7)))
        {
          if (__OFADD__(*v19, 7)) {
            goto LABEL_200;
          }
          if (v35)
          {
            uint64_t v41 = *v19 + 14;
            if (*v19 + 7 >= 0) {
              uint64_t v41 = *v19 + 7;
            }
            uint64_t v42 = v41 >> 3;
            uint64_t v43 = v42 - 1;
            BOOL v71 = v42 < 1;
            uint64_t v44 = v42 + 62;
            if (!v71) {
              uint64_t v44 = v43;
            }
            if ((v29 ^ (*(void *)((char *)&v31[v34 + 8] + (v44 & 0xFFFFFFFFFFFFFFC0)) < v40))) {
              goto LABEL_59;
            }
            goto LABEL_33;
          }
        }
        else if (v35)
        {
          if (!v29) {
            goto LABEL_70;
          }
          goto LABEL_33;
        }
        if (v29) {
          break;
        }
LABEL_33:
        if (++v30 >= v8)
        {
          uint64_t v30 = v32;
          goto LABEL_59;
        }
      }
      if (v30 < v13) {
        goto LABEL_210;
      }
LABEL_61:
      if (v13 < v30)
      {
LABEL_62:
        uint64_t v45 = v30 - 1;
        uint64_t v46 = v13;
        do
        {
          if (v46 != v45)
          {
            if (!v14) {
              goto LABEL_216;
            }
            uint64_t v47 = *(void *)(v14 + 8 * v46);
            *(void *)(v14 + 8 * v46) = *(void *)(v14 + 8 * v45);
            *(void *)(v14 + 8 * v45) = v47;
          }
          BOOL v71 = ++v46 < v45--;
        }
        while (v71);
      }
LABEL_70:
      uint64_t v16 = v30;
LABEL_71:
      if (v16 < v8)
      {
        if (__OFSUB__(v16, v13)) {
          goto LABEL_207;
        }
        if (v16 - v13 < v142)
        {
          if (__OFADD__(v13, v142)) {
            goto LABEL_211;
          }
          if (v13 + v142 >= v8) {
            uint64_t v48 = v8;
          }
          else {
            uint64_t v48 = v13 + v142;
          }
          if (v48 >= v13)
          {
            if (v16 != v48)
            {
              *(void *)uint64_t v156 = v13;
              uint64_t v49 = (unint64_t *)(v140 + 8 * v16);
              uint64_t v152 = v48;
              do
              {
                uint64_t v50 = v16;
                unint64_t v51 = *(void *)(v14 + 8 * v16);
                uint64_t v52 = *(void *)v156;
                uint64_t v53 = v49;
                do
                {
                  if ((v51 & 0x8000000000000000) != 0) {
                    goto LABEL_219;
                  }
                  unint64_t v54 = *v53;
                  swift_beginAccess();
                  uint64_t v55 = *v143;
                  if (!*v143) {
                    goto LABEL_213;
                  }
                  uint64_t v56 = v55[1];
                  if ((uint64_t)v51 >= v56) {
                    goto LABEL_219;
                  }
                  uint64_t v57 = v55 + 8;
                  int v58 = *((unsigned __int8 *)v55 + (v51 >> 3) + 64) & (1 << (v51 & 7));
                  if (v58)
                  {
                    uint64_t v59 = *v55 + 7;
                    if (__OFADD__(*v55, 7))
                    {
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      __break(1u);
LABEL_188:
                      __break(1u);
LABEL_189:
                      __break(1u);
LABEL_190:
                      __break(1u);
LABEL_191:
                      __break(1u);
LABEL_192:
                      __break(1u);
LABEL_193:
                      __break(1u);
LABEL_194:
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
LABEL_208:
                      __break(1u);
LABEL_209:
                      __break(1u);
LABEL_210:
                      __break(1u);
LABEL_211:
                      __break(1u);
                      goto LABEL_212;
                    }
                    if (v59 < 0) {
                      uint64_t v59 = *v55 + 14;
                    }
                    uint64_t v60 = v59 >> 3;
                    uint64_t v61 = v60 - 1;
                    BOOL v71 = v60 < 1;
                    uint64_t v62 = v60 + 62;
                    if (!v71) {
                      uint64_t v62 = v61;
                    }
                    uint64_t v63 = *(void *)((char *)&v57[v51 + 8] + (v62 & 0xFFFFFFFFFFFFFFC0));
                    if ((v54 & 0x8000000000000000) != 0) {
                      goto LABEL_219;
                    }
                  }
                  else
                  {
                    uint64_t v63 = 0;
                    if ((v54 & 0x8000000000000000) != 0) {
                      goto LABEL_219;
                    }
                  }
                  if ((uint64_t)v54 >= v56) {
                    goto LABEL_219;
                  }
                  int v64 = *((unsigned __int8 *)v57 + (v54 >> 3)) & (1 << (v54 & 7));
                  if (v64)
                  {
                    uint64_t v65 = *v55;
                    BOOL v90 = __OFADD__(v65, 7);
                    uint64_t v66 = v65 + 7;
                    if (v90) {
                      goto LABEL_184;
                    }
                    uint64_t v67 = v66 / 8;
                    uint64_t v68 = v67 - 1;
                    BOOL v71 = v67 < 1;
                    uint64_t v69 = v67 + 62;
                    if (!v71) {
                      uint64_t v69 = v68;
                    }
                    uint64_t v70 = *(void *)((char *)&v57[v54 + 8] + (v69 & 0xFFFFFFFFFFFFFFC0));
                  }
                  else
                  {
                    uint64_t v70 = 0;
                  }
                  if (v64) {
                    BOOL v71 = v70 < v63;
                  }
                  else {
                    BOOL v71 = 1;
                  }
                  char v72 = v71;
                  if (!v58 || (v72 & 1) == 0) {
                    break;
                  }
                  if (!v14) {
                    goto LABEL_214;
                  }
                  unint64_t v73 = *v53;
                  unint64_t v51 = v53[1];
                  *uint64_t v53 = v51;
                  v53[1] = v73;
                  --v53;
                  ++v52;
                }
                while (v50 != v52);
                uint64_t v16 = v50 + 1;
                ++v49;
              }
              while (v50 + 1 != v152);
              uint64_t v16 = v152;
              uint64_t v8 = v147;
              uint64_t v12 = v148;
              uint64_t v13 = *(void *)v156;
            }
            goto LABEL_114;
          }
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_215:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_216:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_217:
          swift_release_n();
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
      }
LABEL_114:
      if (v16 < v13) {
        goto LABEL_206;
      }
      uint64_t v144 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_22081B3EC(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v75 = *((void *)v15 + 2);
      unint64_t v74 = *((void *)v15 + 3);
      unint64_t v76 = v75 + 1;
      if (v75 >= v74 >> 1) {
        uint64_t v15 = sub_22081B3EC((char *)(v74 > 1), v75 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v76;
      int v77 = v15 + 32;
      uint64_t v78 = &v15[16 * v75 + 32];
      *(void *)uint64_t v78 = v13;
      *((void *)v78 + 1) = v144;
      if (v75)
      {
        uint64_t v153 = v15;
        uint64_t v146 = v15 + 32;
        while (1)
        {
          unint64_t v79 = v76 - 1;
          if (v76 >= 4)
          {
            unint64_t v84 = &v77[16 * v76];
            uint64_t v85 = *((void *)v84 - 8);
            uint64_t v86 = *((void *)v84 - 7);
            BOOL v90 = __OFSUB__(v86, v85);
            uint64_t v87 = v86 - v85;
            if (v90) {
              goto LABEL_189;
            }
            uint64_t v89 = *((void *)v84 - 6);
            uint64_t v88 = *((void *)v84 - 5);
            BOOL v90 = __OFSUB__(v88, v89);
            uint64_t v82 = v88 - v89;
            char v83 = v90;
            if (v90) {
              goto LABEL_190;
            }
            unint64_t v91 = v76 - 2;
            uint64_t v92 = &v77[16 * v76 - 32];
            uint64_t v94 = *(void *)v92;
            uint64_t v93 = *((void *)v92 + 1);
            BOOL v90 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v90) {
              goto LABEL_191;
            }
            BOOL v90 = __OFADD__(v82, v95);
            uint64_t v96 = v82 + v95;
            if (v90) {
              goto LABEL_194;
            }
            if (v96 >= v87)
            {
              uint64_t v114 = &v77[16 * v79];
              uint64_t v116 = *(void *)v114;
              uint64_t v115 = *((void *)v114 + 1);
              BOOL v90 = __OFSUB__(v115, v116);
              uint64_t v117 = v115 - v116;
              if (v90) {
                goto LABEL_201;
              }
              BOOL v107 = v82 < v117;
              goto LABEL_152;
            }
          }
          else
          {
            if (v76 != 3)
            {
              uint64_t v108 = *((void *)v15 + 4);
              uint64_t v109 = *((void *)v15 + 5);
              BOOL v90 = __OFSUB__(v109, v108);
              uint64_t v101 = v109 - v108;
              char v102 = v90;
              goto LABEL_146;
            }
            uint64_t v81 = *((void *)v15 + 4);
            uint64_t v80 = *((void *)v15 + 5);
            BOOL v90 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            char v83 = v90;
          }
          if (v83) {
            goto LABEL_192;
          }
          unint64_t v91 = v76 - 2;
          uint64_t v97 = &v77[16 * v76 - 32];
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *((void *)v97 + 1);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v101 = v98 - v99;
          char v102 = v100;
          if (v100) {
            goto LABEL_195;
          }
          uint64_t v103 = &v77[16 * v79];
          uint64_t v105 = *(void *)v103;
          uint64_t v104 = *((void *)v103 + 1);
          BOOL v90 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v90) {
            goto LABEL_196;
          }
          if (__OFADD__(v101, v106)) {
            goto LABEL_198;
          }
          if (v101 + v106 >= v82)
          {
            BOOL v107 = v82 < v106;
LABEL_152:
            if (v107) {
              unint64_t v79 = v91;
            }
            goto LABEL_154;
          }
LABEL_146:
          if (v102) {
            goto LABEL_193;
          }
          int v110 = &v77[16 * v79];
          uint64_t v112 = *(void *)v110;
          uint64_t v111 = *((void *)v110 + 1);
          BOOL v90 = __OFSUB__(v111, v112);
          uint64_t v113 = v111 - v112;
          if (v90) {
            goto LABEL_197;
          }
          if (v113 < v101) {
            goto LABEL_163;
          }
LABEL_154:
          unint64_t v118 = v79 - 1;
          if (v79 - 1 >= v76) {
            goto LABEL_185;
          }
          if (!v14) {
            goto LABEL_215;
          }
          uint64_t v119 = v14;
          unint64_t v120 = &v77[16 * v118];
          uint64_t v121 = *(void *)v120;
          unint64_t v122 = v79;
          uint64_t v123 = &v77[16 * v79];
          uint64_t v124 = *((void *)v123 + 1);
          uint64_t v125 = (char *)(v119 + 8 * *(void *)v120);
          unint64_t v126 = (char *)(v119 + 8 * *(void *)v123);
          unint64_t v157 = v119 + 8 * v124;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_2208A8EF8(v125, v126, v157, v149, a2, v150, v155);
          if (v159)
          {
LABEL_181:
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            *(void *)(v148 + 16) = 0;
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_182;
          }
          swift_release();
          swift_bridgeObjectRelease();
          if (v124 < v121) {
            goto LABEL_186;
          }
          if (v122 > *((void *)v153 + 2)) {
            goto LABEL_187;
          }
          unint64_t v127 = v122;
          *(void *)unint64_t v120 = v121;
          int v77 = v146;
          *(void *)&v146[16 * v118 + 8] = v124;
          unint64_t v128 = *((void *)v153 + 2);
          if (v122 >= v128) {
            goto LABEL_188;
          }
          uint64_t v15 = v153;
          uint64_t v159 = 0;
          unint64_t v76 = v128 - 1;
          memmove(v123, v123 + 16, 16 * (v128 - 1 - v127));
          *((void *)v153 + 2) = v128 - 1;
          uint64_t v8 = v147;
          uint64_t v12 = v148;
          uint64_t v14 = v145;
          if (v128 <= 2) {
            goto LABEL_163;
          }
        }
      }
      unint64_t v76 = 1;
LABEL_163:
      uint64_t v13 = v144;
      if (v144 >= v8) {
        goto LABEL_169;
      }
    }
    BOOL v29 = 0;
    uint64_t v8 = v147;
    uint64_t v12 = v148;
LABEL_24:
    uint64_t v30 = v13 + 2;
    if (v13 + 2 >= v8)
    {
LABEL_59:
      uint64_t v16 = v30;
      if (v29)
      {
        if (v30 < v13) {
          goto LABEL_210;
        }
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    goto LABEL_28;
  }
  if (v8 < 0) {
    goto LABEL_209;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2208A93AC(0, v8, 1, a1, a2, a3, a4);
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_182:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208AA10C(char **a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_22089E454((uint64_t)v10);
  }
  uint64_t v11 = *((void *)v10 + 2);
  v13[0] = v10 + 32;
  v13[1] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  a5(v13, a2, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = v10;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2208AA200()
{
  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_2208AA214()
{
  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_2208AA224()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2208AA264()
{
  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_2208AA274()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2208AA2B4()
{
  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_2208AA2C4()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2208AA304()
{
  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_2208AA314()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

uint64_t sub_2208AA354()
{
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_2208AA364()
{
  return Order.areOrdered<A>(_:_:)() & 1;
}

unint64_t JSONReadingError.description.getter()
{
  sub_2208AA850(v0, (uint64_t)&v12);
  unint64_t v1 = 0xD00000000000003FLL;
  switch(v14)
  {
    case 1:
      *(void *)&long long v10 = 0;
      *((void *)&v10 + 1) = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      goto LABEL_5;
    case 2:
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093F030();
      sub_22093E6C0();
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      uint64_t v2 = sub_2208B8CBC(1024);
      uint64_t v4 = v3;
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      MEMORY[0x223C69D50](v2, v4, v6, v8);
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      *(void *)&long long v10 = 0;
      *((void *)&v10 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      unint64_t v1 = v10;
      break;
    case 3:
      return v1;
    default:
      sub_220835340(&v13, &v10);
      sub_22093EEA0();
      sub_22093E6C0();
      __swift_project_boxed_opaque_existential_1(&v10, v11);
      sub_22093F220();
      sub_22093E6C0();
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093F030();
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
      break;
  }
  return v1;
}

uint64_t sub_2208AA850(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for JSONReadingError(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 64);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  switch(v2)
  {
    case 2u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      break;
    case 0u:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 32);
    default:
      return result;
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONReadingError(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 64);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 64) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3 == 1)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v4 = a2 + 32;
    uint64_t v5 = *(void *)(a2 + 56);
    *(void *)(a1 + 56) = v5;
    uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
    swift_bridgeObjectRetain();
    v6(a1 + 32, v4, v5);
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for JSONReadingError(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 != 1)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 64) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v9 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v6 = a2 + 32;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    v8(a1 + 32, v6, v7);
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for JSONReadingError(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (v4 != 1)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 64) = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 64) = 1;
  }
  else if (v5)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONReadingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JSONReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2208AADDC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_2208AADF8(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONReadingError()
{
  return &type metadata for JSONReadingError;
}

uint64_t destroy for InferringJSONColumnProcessor(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
}

uint64_t initializeWithCopy for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  long long v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v5, v7);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2 + 88;
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v11;
  uint64_t v12 = v11;
  long long v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v13(a1 + 88, v10, v12);
  return a1;
}

uint64_t assignWithCopy for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for InferringJSONColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferringJSONColumnProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferringJSONColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferringJSONColumnProcessor()
{
  return &type metadata for InferringJSONColumnProcessor;
}

uint64_t sub_2208AB1B0(uint64_t a1)
{
  uint64_t result = sub_2208AB270(a1);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2208AB67C(a1);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2208ABCB4(a1);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2208AC2E8(a1);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2208ACB30(a1);
          if ((result & 1) == 0)
          {
            uint64_t result = sub_2208ADAD8(a1);
            if ((result & 1) == 0)
            {
              uint64_t result = sub_2208AE100(a1);
              if ((result & 1) == 0)
              {
                uint64_t result = sub_2208AE854(a1);
                if ((result & 1) == 0)
                {
                  sub_2208478FC();
                  swift_allocError();
                  uint64_t v4 = *(void *)(v1 + 80);
                  *(void *)uint64_t v5 = *(void *)(v1 + 72);
                  *(void *)(v5 + 8) = v4;
                  *(unsigned char *)(v5 + 64) = 1;
                  swift_bridgeObjectRetain();
                  return swift_willThrow();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2208AB270(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v48 = *(void *)(v1 + 72);
  *(void *)&long long v49 = v4;
  swift_bridgeObjectRetain();
  *((void *)&v49 + 1) = sub_220835024(MEMORY[0x263F8EE78]);
  sub_2208F1CC4(0);
  uint64_t v5 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    long long v8 = 0uLL;
    while (1)
    {
      uint64_t v9 = *(void *)(a1 + 8 * v7 + 32);
      if (*(void *)(v9 + 16))
      {
        uint64_t v11 = *(void *)(v2 + 72);
        uint64_t v10 = *(void *)(v2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_22081D290(v11, v10);
        if (v13) {
          sub_220835350(*(void *)(v9 + 56) + 32 * v12, (uint64_t)v43);
        }
        else {
          memset(v43, 0, sizeof(v43));
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v43[1] + 1))
        {
          sub_2208352E4((uint64_t)v43, &qword_267F188D8);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else
      {
        v43[0] = v8;
        v43[1] = v8;
      }
      sub_2208352E4((uint64_t)v43, &qword_267F188D8);
      memset(v43, 0, sizeof(v43));
      uint64_t v14 = *((void *)&v49 + 1);
      uint64_t v15 = (uint64_t *)(*((void *)&v49 + 1) + 16);
      uint64_t result = swift_beginAccess();
      uint64_t v17 = *(void *)(v14 + 16);
      if (!v17) {
        break;
      }
      uint64_t v18 = *(void *)(v17 + 8);
      uint64_t v19 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        break;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        swift_beginAccess();
        uint64_t result = *v15;
        if (!*v15) {
          goto LABEL_56;
        }
        uint64_t v20 = *(void *)result;
        if (*(void *)result < v19)
        {
          if (v20 + 0x4000000000000000 < 0) {
            goto LABEL_52;
          }
          uint64_t v21 = 2 * v20;
          if (v21 <= v19) {
            uint64_t v22 = v19;
          }
          else {
            uint64_t v22 = v21;
          }
          sub_22088FAEC(v47, result, *(void *)(v14 + 24), v22);
          sub_220890AD8(*(void **)(v14 + 16));
          *(_OWORD *)(v14 + 16) = *(_OWORD *)v47;
        }
      }
      else
      {
        uint64_t result = swift_beginAccess();
        uint64_t v23 = (uint64_t *)*v15;
        if (!v23) {
          goto LABEL_57;
        }
        uint64_t v24 = *v23;
        if (*v23 < v19)
        {
          if (v24 + 0x4000000000000000 < 0) {
            goto LABEL_53;
          }
          if (2 * v24 <= v19) {
            uint64_t v24 = v19;
          }
          else {
            v24 *= 2;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F188D0);
        uint64_t v25 = swift_allocObject();
        sub_22088F57C((uint64_t)v23, v24, v47);
        *(_OWORD *)(v25 + 16) = *(_OWORD *)v47;
        swift_release();
        *((void *)&v49 + 1) = v25;
        uint64_t v14 = v25;
      }
      swift_beginAccess();
      uint64_t v26 = *(void **)(v14 + 16);
      sub_220835280((uint64_t)v43, (uint64_t)&v45, &qword_267F188D8);
      if (v46)
      {
        uint64_t result = (uint64_t)sub_220835340(&v45, v47);
        if (!v26) {
          goto LABEL_55;
        }
        uint64_t v27 = *v26 + 7;
        if (__OFADD__(*v26, 7)) {
          goto LABEL_50;
        }
        uint64_t v28 = v26 + 8;
        if (v27 < 0) {
          uint64_t v27 = *v26 + 14;
        }
        uint64_t v29 = v27 >> 3;
        uint64_t v31 = v29 - 1;
        BOOL v30 = v29 < 1;
        uint64_t v32 = v29 + 62;
        if (!v30) {
          uint64_t v32 = v31;
        }
        sub_220835350((uint64_t)v47, (uint64_t)&v28[4 * v26[1] + 8] + (v32 & 0xFFFFFFFFFFFFFFC0));
        uint64_t v33 = v26[1];
        uint64_t v34 = v33 + 7;
        if (v33 >= 0) {
          uint64_t v34 = v26[1];
        }
        uint64_t v35 = v33 - (v34 & 0xFFFFFFFFFFFFFFF8);
        if (v35 >= 0) {
          char v36 = 1 << v35;
        }
        else {
          char v36 = 0;
        }
        *((unsigned char *)v28 + (v34 >> 3)) |= v36;
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      }
      else
      {
        uint64_t result = sub_2208352E4((uint64_t)&v45, &qword_267F188D8);
        if (!v26) {
          goto LABEL_58;
        }
        uint64_t v37 = v26[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (v38) {
          goto LABEL_51;
        }
        void v26[2] = v39;
      }
      uint64_t v40 = v26[1];
      BOOL v38 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v38) {
        goto LABEL_49;
      }
      ++v7;
      v26[1] = v41;
      sub_2208352E4((uint64_t)v43, &qword_267F188D8);
      long long v8 = 0uLL;
      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v2 + 88;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  else
  {
LABEL_45:
    uint64_t v42 = v48;
    *((void *)&v43[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(qword_267F191F0);
    uint64_t v44 = &off_26D2223C0;
    *(void *)&v43[0] = v42;
    *(_OWORD *)((char *)v43 + 8) = v49;
    sub_220857364((uint64_t)v43, v5);
    return 1;
  }
  return result;
}

uint64_t sub_2208AB67C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v58;
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v66 = *(void *)(v1 + 72);
  uint64_t v67 = v5;
  swift_bridgeObjectRetain();
  sub_220831BD0(MEMORY[0x263F8EE78]);
  uint64_t v68 = v6;
  sub_2208F180C(0);
  uint64_t v7 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_71:
    uint64_t v57 = v66;
    *((void *)&v59 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413F0);
    uint64_t v60 = &off_26D2223C0;
    *(void *)&long long v58 = v57;
    *(long long *)((char *)v4 + 8) = v4[14];
    sub_220857364((uint64_t)&v58, v7);
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = *(void *)(a1 + 8 * v9 + 32);
    if (*(void *)(v10 + 16))
    {
      uint64_t v12 = *(void *)(v2 + 72);
      uint64_t v11 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_22081D290(v12, v11);
      if (v14)
      {
        sub_220835350(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v58);
      }
      else
      {
        long long v59 = 0u;
        long long v58 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v59 = 0u;
      long long v58 = 0u;
    }
    sub_220835280((uint64_t)&v58, (uint64_t)&v64, &qword_267F188D8);
    if (v65)
    {
      sub_220835280((uint64_t)&v64, (uint64_t)v63, &qword_267F188D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_2208352E4((uint64_t)&v58, &qword_267F188D8);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
          sub_2208352E4((uint64_t)&v64, &qword_267F188D8);
          return 0;
        }
        uint64_t v4 = v62;
        uint64_t v33 = v68;
        uint64_t v34 = (uint64_t *)(v68 + 16);
        uint64_t result = swift_beginAccess();
        uint64_t v35 = *(void *)(v33 + 16);
        if (!v35) {
          goto LABEL_89;
        }
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_77;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          uint64_t result = *v34;
          if (!*v34) {
            goto LABEL_92;
          }
          uint64_t v38 = *(void *)result;
          if (*(void *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0) {
              goto LABEL_82;
            }
            uint64_t v39 = 2 * v38;
            if (v39 <= v37) {
              uint64_t v40 = v37;
            }
            else {
              uint64_t v40 = v39;
            }
            sub_22088F714(result, v40, (uint64_t *)&v61);
            uint64_t result = *(void *)(v33 + 16);
            if (!result) {
              goto LABEL_94;
            }
            if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
              goto LABEL_84;
            }
            MEMORY[0x223C6B140]();
            *(_OWORD *)uint64_t v34 = v61;
          }
        }
        else
        {
          uint64_t result = swift_beginAccess();
          uint64_t v41 = (uint64_t *)*v34;
          if (!v41) {
            goto LABEL_93;
          }
          uint64_t v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0) {
              goto LABEL_83;
            }
            if (2 * v42 <= v37) {
              uint64_t v42 = v37;
            }
            else {
              v42 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
          uint64_t v43 = swift_allocObject();
          sub_22088E6B0((uint64_t)v41, v42, (uint64_t *)&v61);
          *(_OWORD *)(v43 + 16) = v61;
          swift_release();
          uint64_t v68 = v43;
          uint64_t v33 = v43;
        }
        uint64_t result = swift_beginAccess();
        uint64_t v44 = *(void **)(v33 + 16);
        if (!v44) {
          goto LABEL_90;
        }
        uint64_t v45 = *v44 + 7;
        if (__OFADD__(*v44, 7)) {
          goto LABEL_78;
        }
        uint64_t v46 = v44 + 8;
        if (v45 < 0) {
          uint64_t v45 = *v44 + 14;
        }
        uint64_t v47 = v45 >> 3;
        uint64_t v49 = v47 - 1;
        BOOL v48 = v47 < 1;
        uint64_t v50 = v47 + 62;
        if (!v48) {
          uint64_t v50 = v49;
        }
        *(void *)((char *)&v46[v44[1] + 8] + (v50 & 0xFFFFFFFFFFFFFFC0)) = v4;
        uint64_t v51 = v44[1];
        uint64_t v52 = v51 + 7;
        if (v51 >= 0) {
          uint64_t v52 = v44[1];
        }
        uint64_t v53 = v52 >> 3;
        uint64_t v54 = v51 - (v52 & 0xFFFFFFFFFFFFFFF8);
        if (v54 >= 0) {
          char v55 = 1 << v54;
        }
        else {
          char v55 = 0;
        }
        *((unsigned char *)v46 + v53) |= v55;
        BOOL v29 = __OFADD__(v51, 1);
        uint64_t v56 = v51 + 1;
        if (v29)
        {
          __break(1u);
LABEL_70:
          swift_bridgeObjectRelease();
          uint64_t v7 = v2 + 88;
          goto LABEL_71;
        }
        v44[1] = v56;
        sub_2208352E4((uint64_t)&v58, &qword_267F188D8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
        sub_2208352E4((uint64_t)&v64, &qword_267F188D8);
        uint64_t v4 = &v58;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    }
    sub_2208352E4((uint64_t)&v64, &qword_267F188D8);
    uint64_t v15 = v68;
    uint64_t v16 = (uint64_t *)(v68 + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v18 = *(void *)(v15 + 16);
    if (!v18) {
      goto LABEL_85;
    }
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v16;
      if (!*v16) {
        goto LABEL_87;
      }
      uint64_t v21 = *(void *)result;
      if (*(void *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0) {
          goto LABEL_79;
        }
        uint64_t v22 = 2 * v21;
        if (v22 <= v20) {
          uint64_t v23 = v20;
        }
        else {
          uint64_t v23 = v22;
        }
        sub_22088F714(result, v23, (uint64_t *)&v64);
        uint64_t result = *(void *)(v15 + 16);
        if (!result) {
          goto LABEL_91;
        }
        if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
          goto LABEL_81;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v16 = v64;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v24 = (uint64_t *)*v16;
      if (!v24) {
        goto LABEL_88;
      }
      uint64_t v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0) {
          goto LABEL_80;
        }
        if (2 * v25 <= v20) {
          uint64_t v25 = v20;
        }
        else {
          v25 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D8);
      uint64_t v26 = swift_allocObject();
      sub_22088E6B0((uint64_t)v24, v25, (uint64_t *)&v64);
      *(_OWORD *)(v26 + 16) = v64;
      swift_release();
      uint64_t v68 = v26;
      uint64_t v15 = v26;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v27 = *(void *)(v15 + 16);
    if (!v27) {
      goto LABEL_86;
    }
    uint64_t v28 = *(void *)(v27 + 16);
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_75;
    }
    *(void *)(v27 + 16) = v30;
    uint64_t v31 = *(void *)(v27 + 8);
    BOOL v29 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (v29) {
      goto LABEL_76;
    }
    *(void *)(v27 + 8) = v32;
    sub_2208352E4((uint64_t)&v58, &qword_267F188D8);
LABEL_3:
    if (v8 == ++v9) {
      goto LABEL_70;
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
  return result;
}

uint64_t sub_2208ABCB4(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = (unint64_t)&v55;
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v63 = *(void *)(v1 + 72);
  uint64_t v64 = v5;
  swift_bridgeObjectRetain();
  sub_220832810(MEMORY[0x263F8EE78]);
  uint64_t v65 = v6;
  sub_2208F1904(0);
  uint64_t v7 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_69:
    uint64_t v54 = v63;
    *((void *)&v56 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41140);
    uint64_t v57 = &off_26D2223C0;
    *(void *)&long long v55 = v54;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v4 + 224);
    sub_220857364((uint64_t)&v55, v7);
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = *(void *)(a1 + 8 * v9 + 32);
    if (*(void *)(v10 + 16))
    {
      uint64_t v12 = *(void *)(v2 + 72);
      uint64_t v11 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_22081D290(v12, v11);
      if (v14)
      {
        sub_220835350(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v55);
      }
      else
      {
        long long v56 = 0u;
        long long v55 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v56 = 0u;
      long long v55 = 0u;
    }
    sub_220835280((uint64_t)&v55, (uint64_t)&v61, &qword_267F188D8);
    if (v62)
    {
      sub_220835280((uint64_t)&v61, (uint64_t)v60, &qword_267F188D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_2208352E4((uint64_t)&v55, &qword_267F188D8);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
          sub_2208352E4((uint64_t)&v61, &qword_267F188D8);
          return 0;
        }
        unint64_t v4 = v59;
        uint64_t v33 = v65;
        uint64_t v34 = (uint64_t *)(v65 + 16);
        uint64_t result = swift_beginAccess();
        uint64_t v35 = *(void *)(v33 + 16);
        if (!v35) {
          goto LABEL_86;
        }
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_74;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          uint64_t result = *v34;
          if (!*v34) {
            goto LABEL_89;
          }
          uint64_t v38 = *(void *)result;
          if (*(void *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0) {
              goto LABEL_79;
            }
            uint64_t v39 = 2 * v38;
            if (v39 <= v37) {
              uint64_t v40 = v37;
            }
            else {
              uint64_t v40 = v39;
            }
            sub_22088FD6C(result, v40, (uint64_t *)&v58);
            uint64_t result = *(void *)(v33 + 16);
            if (!result) {
              goto LABEL_91;
            }
            if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
              goto LABEL_81;
            }
            MEMORY[0x223C6B140]();
            *(_OWORD *)uint64_t v34 = v58;
          }
        }
        else
        {
          uint64_t result = swift_beginAccess();
          uint64_t v41 = (uint64_t *)*v34;
          if (!v41) {
            goto LABEL_90;
          }
          uint64_t v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0) {
              goto LABEL_80;
            }
            if (2 * v42 <= v37) {
              uint64_t v42 = v37;
            }
            else {
              v42 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
          uint64_t v43 = swift_allocObject();
          sub_22088ED7C((uint64_t)v41, v42, (uint64_t *)&v58);
          *(_OWORD *)(v43 + 16) = v58;
          swift_release();
          uint64_t v65 = v43;
          uint64_t v33 = v43;
        }
        uint64_t result = swift_beginAccess();
        uint64_t v44 = *(void **)(v33 + 16);
        if (!v44) {
          goto LABEL_87;
        }
        uint64_t v45 = *v44 + 7;
        if (__OFADD__(*v44, 7)) {
          goto LABEL_75;
        }
        uint64_t v46 = v44 + 8;
        if (v45 < 0) {
          uint64_t v45 = *v44 + 14;
        }
        uint64_t v47 = v45 >> 3;
        uint64_t v49 = v47 - 1;
        BOOL v48 = v47 < 1;
        uint64_t v50 = v47 + 62;
        if (!v48) {
          uint64_t v50 = v49;
        }
        uint64_t v51 = v44[1];
        *((unsigned char *)v46 + v51 + (v50 & 0xFFFFFFFFFFFFFFC0) + 64) = v4;
        uint64_t v52 = v51 - (v50 & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0) {
          char v53 = 1 << v52;
        }
        else {
          char v53 = 0;
        }
        *((unsigned char *)v46 + v51 / 8) |= v53;
        if (__OFADD__(v51, 1))
        {
          __break(1u);
LABEL_68:
          swift_bridgeObjectRelease();
          uint64_t v7 = v2 + 88;
          goto LABEL_69;
        }
        v44[1] = v51 + 1;
        sub_2208352E4((uint64_t)&v55, &qword_267F188D8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
        sub_2208352E4((uint64_t)&v61, &qword_267F188D8);
        unint64_t v4 = (unint64_t)&v55;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
    }
    sub_2208352E4((uint64_t)&v61, &qword_267F188D8);
    uint64_t v15 = v65;
    uint64_t v16 = (uint64_t *)(v65 + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v18 = *(void *)(v15 + 16);
    if (!v18) {
      goto LABEL_82;
    }
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v16;
      if (!*v16) {
        goto LABEL_84;
      }
      uint64_t v21 = *(void *)result;
      if (*(void *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0) {
          goto LABEL_76;
        }
        uint64_t v22 = 2 * v21;
        if (v22 <= v20) {
          uint64_t v23 = v20;
        }
        else {
          uint64_t v23 = v22;
        }
        sub_22088FD6C(result, v23, (uint64_t *)&v61);
        uint64_t result = *(void *)(v15 + 16);
        if (!result) {
          goto LABEL_88;
        }
        if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
          goto LABEL_78;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v16 = v61;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v24 = (uint64_t *)*v16;
      if (!v24) {
        goto LABEL_85;
      }
      uint64_t v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0) {
          goto LABEL_77;
        }
        if (2 * v25 <= v20) {
          uint64_t v25 = v20;
        }
        else {
          v25 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41120);
      uint64_t v26 = swift_allocObject();
      sub_22088ED7C((uint64_t)v24, v25, (uint64_t *)&v61);
      *(_OWORD *)(v26 + 16) = v61;
      swift_release();
      uint64_t v65 = v26;
      uint64_t v15 = v26;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v27 = *(void *)(v15 + 16);
    if (!v27) {
      goto LABEL_83;
    }
    uint64_t v28 = *(void *)(v27 + 16);
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_72;
    }
    *(void *)(v27 + 16) = v30;
    uint64_t v31 = *(void *)(v27 + 8);
    BOOL v29 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (v29) {
      goto LABEL_73;
    }
    *(void *)(v27 + 8) = v32;
    sub_2208352E4((uint64_t)&v55, &qword_267F188D8);
LABEL_3:
    if (v8 == ++v9) {
      goto LABEL_68;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
  return result;
}

uint64_t sub_2208AC2E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v83 = *(void *)(v1 + 72);
  *(void *)&long long v84 = v4;
  swift_bridgeObjectRetain();
  sub_220832520(MEMORY[0x263F8EE78]);
  *((void *)&v84 + 1) = v5;
  sub_2208F1888(0);
  uint64_t v6 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_102:
    uint64_t v76 = v83;
    v77[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E8);
    v77[4] = &off_26D2223C0;
    v77[0] = v76;
    *(_OWORD *)&v77[1] = v84;
    sub_220857364((uint64_t)v77, v6);
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t v10 = *(void *)(a1 + 8 * v8 + 32);
    if (*(void *)(v10 + 16))
    {
      uint64_t v12 = *(void *)(v2 + 72);
      uint64_t v11 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_22081D290(v12, v11);
      if (v14) {
        sub_220835350(*(void *)(v10 + 56) + 32 * v13, (uint64_t)v77);
      }
      else {
        memset(v77, 0, 32);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v77, 0, 32);
    }
    sub_220835280((uint64_t)v77, (uint64_t)&v81, &qword_267F188D8);
    if (v82)
    {
      sub_220835280((uint64_t)&v81, (uint64_t)v80, &qword_267F188D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if (!swift_dynamicCast())
      {
        if (swift_dynamicCast())
        {
          uint64_t v33 = v79;
          uint64_t v34 = *((void *)&v84 + 1);
          uint64_t v35 = (uint64_t *)(*((void *)&v84 + 1) + 16);
          uint64_t result = swift_beginAccess();
          uint64_t v36 = *(void *)(v34 + 16);
          if (!v36) {
            goto LABEL_126;
          }
          uint64_t v37 = *(void *)(v36 + 8);
          uint64_t v38 = v37 + 1;
          if (__OFADD__(v37, 1)) {
            goto LABEL_110;
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            swift_beginAccess();
            uint64_t result = *v35;
            if (!*v35) {
              goto LABEL_130;
            }
            uint64_t v39 = *(void *)result;
            if (*(void *)result < v38)
            {
              if (v39 + 0x4000000000000000 < 0) {
                goto LABEL_115;
              }
              uint64_t v40 = 2 * v39;
              if (v40 <= v38) {
                uint64_t v41 = v38;
              }
              else {
                uint64_t v41 = v40;
              }
              sub_22088F714(result, v41, (uint64_t *)&v78);
              uint64_t result = *(void *)(v34 + 16);
              if (!result) {
                goto LABEL_134;
              }
              if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
                goto LABEL_117;
              }
              MEMORY[0x223C6B140]();
              *(_OWORD *)uint64_t v35 = v78;
            }
          }
          else
          {
            uint64_t result = swift_beginAccess();
            uint64_t v51 = (uint64_t *)*v35;
            if (!v51) {
              goto LABEL_132;
            }
            uint64_t v52 = *v51;
            if (*v51 < v38)
            {
              if (v52 + 0x4000000000000000 < 0) {
                goto LABEL_116;
              }
              if (2 * v52 <= v38) {
                uint64_t v52 = v38;
              }
              else {
                v52 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
            uint64_t v53 = swift_allocObject();
            sub_22088E844((uint64_t)v51, v52, (uint64_t *)&v78);
            *(_OWORD *)(v53 + 16) = v78;
            swift_release();
            *((void *)&v84 + 1) = v53;
            uint64_t v34 = v53;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v54 = *(void **)(v34 + 16);
          if (!v54) {
            goto LABEL_127;
          }
          uint64_t v55 = *v54 + 7;
          if (__OFADD__(*v54, 7)) {
            goto LABEL_111;
          }
          long long v56 = v54 + 8;
          if (v55 < 0) {
            uint64_t v55 = *v54 + 14;
          }
          uint64_t v57 = v55 >> 3;
          uint64_t v59 = v57 - 1;
          BOOL v58 = v57 < 1;
          uint64_t v60 = v57 + 62;
          if (!v58) {
            uint64_t v60 = v59;
          }
          uint64_t v61 = v54[1];
          *(void *)((char *)&v56[v61 + 8] + (v60 & 0xFFFFFFFFFFFFFFC0)) = v33;
          uint64_t v62 = v61 - (v60 & 0xFFFFFFFFFFFFFFF8);
          if (v62 >= 0) {
            char v63 = 1 << v62;
          }
          else {
            char v63 = 0;
          }
          *((unsigned char *)v56 + v61 / 8) |= v63;
          uint64_t v64 = v61 + 1;
          if (__OFADD__(v61, 1)) {
            goto LABEL_112;
          }
        }
        else
        {
          if (!swift_dynamicCast())
          {
            sub_2208352E4((uint64_t)v77, &qword_267F188D8);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
            sub_2208352E4((uint64_t)&v81, &qword_267F188D8);
            return 0;
          }
          uint64_t v42 = v79;
          uint64_t v43 = *((void *)&v84 + 1);
          uint64_t v44 = (uint64_t *)(*((void *)&v84 + 1) + 16);
          uint64_t result = swift_beginAccess();
          uint64_t v45 = *(void *)(v43 + 16);
          if (!v45) {
            goto LABEL_128;
          }
          uint64_t v46 = *(void *)(v45 + 8);
          uint64_t v47 = v46 + 1;
          if (__OFADD__(v46, 1)) {
            goto LABEL_113;
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            swift_beginAccess();
            uint64_t result = *v44;
            if (!*v44) {
              goto LABEL_131;
            }
            uint64_t v48 = *(void *)result;
            if (*(void *)result < v47)
            {
              if (v48 + 0x4000000000000000 < 0) {
                goto LABEL_118;
              }
              uint64_t v49 = 2 * v48;
              if (v49 <= v47) {
                uint64_t v50 = v47;
              }
              else {
                uint64_t v50 = v49;
              }
              sub_22088F714(result, v50, (uint64_t *)&v78);
              uint64_t result = *(void *)(v43 + 16);
              if (!result) {
                goto LABEL_135;
              }
              if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
                goto LABEL_120;
              }
              MEMORY[0x223C6B140]();
              *(_OWORD *)uint64_t v44 = v78;
            }
          }
          else
          {
            uint64_t result = swift_beginAccess();
            uint64_t v65 = (uint64_t *)*v44;
            if (!v65) {
              goto LABEL_133;
            }
            uint64_t v66 = *v65;
            if (*v65 < v47)
            {
              if (v66 + 0x4000000000000000 < 0) {
                goto LABEL_119;
              }
              if (2 * v66 <= v47) {
                uint64_t v66 = v47;
              }
              else {
                v66 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
            uint64_t v67 = swift_allocObject();
            sub_22088E844((uint64_t)v65, v66, (uint64_t *)&v78);
            *(_OWORD *)(v67 + 16) = v78;
            swift_release();
            *((void *)&v84 + 1) = v67;
            uint64_t v43 = v67;
          }
          uint64_t result = swift_beginAccess();
          uint64_t v54 = *(void **)(v43 + 16);
          if (!v54) {
            goto LABEL_129;
          }
          uint64_t v68 = *v54 + 7;
          if (__OFADD__(*v54, 7)) {
            goto LABEL_114;
          }
          uint64_t v69 = v54 + 8;
          if (v68 < 0) {
            uint64_t v68 = *v54 + 14;
          }
          uint64_t v70 = v68 >> 3;
          uint64_t v71 = v70 - 1;
          BOOL v58 = v70 < 1;
          uint64_t v72 = v70 + 62;
          if (!v58) {
            uint64_t v72 = v71;
          }
          uint64_t v73 = v54[1];
          *(double *)((char *)&v69[v73 + 8] + (v72 & 0xFFFFFFFFFFFFFFC0)) = (double)v42;
          uint64_t v74 = v73 - (v72 & 0xFFFFFFFFFFFFFFF8);
          if (v74 >= 0) {
            char v75 = 1 << v74;
          }
          else {
            char v75 = 0;
          }
          *((unsigned char *)v69 + v73 / 8) |= v75;
          uint64_t v64 = v73 + 1;
          if (__OFADD__(v73, 1))
          {
            __break(1u);
LABEL_101:
            swift_bridgeObjectRelease();
            uint64_t v6 = v2 + 88;
            goto LABEL_102;
          }
        }
        v54[1] = v64;
        sub_2208352E4((uint64_t)v77, &qword_267F188D8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
        uint64_t v9 = &v81;
        goto LABEL_4;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v80);
    }
    sub_2208352E4((uint64_t)&v81, &qword_267F188D8);
    uint64_t v15 = *((void *)&v84 + 1);
    uint64_t v16 = (uint64_t *)(*((void *)&v84 + 1) + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v18 = *(void *)(v15 + 16);
    if (!v18) {
      goto LABEL_121;
    }
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v16;
      if (!*v16) {
        goto LABEL_123;
      }
      uint64_t v21 = *(void *)result;
      if (*(void *)result < v20)
      {
        if (v21 + 0x4000000000000000 < 0) {
          goto LABEL_107;
        }
        uint64_t v22 = 2 * v21;
        if (v22 <= v20) {
          uint64_t v23 = v20;
        }
        else {
          uint64_t v23 = v22;
        }
        sub_22088F714(result, v23, (uint64_t *)&v81);
        uint64_t result = *(void *)(v15 + 16);
        if (!result) {
          goto LABEL_125;
        }
        if ((*(void *)(result + 8) & 0x8000000000000000) != 0) {
          goto LABEL_109;
        }
        MEMORY[0x223C6B140]();
        *(_OWORD *)uint64_t v16 = v81;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v24 = (uint64_t *)*v16;
      if (!v24) {
        goto LABEL_124;
      }
      uint64_t v25 = *v24;
      if (*v24 < v20)
      {
        if (v25 + 0x4000000000000000 < 0) {
          goto LABEL_108;
        }
        if (2 * v25 <= v20) {
          uint64_t v25 = v20;
        }
        else {
          v25 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413D0);
      uint64_t v26 = swift_allocObject();
      sub_22088E844((uint64_t)v24, v25, (uint64_t *)&v81);
      *(_OWORD *)(v26 + 16) = v81;
      swift_release();
      *((void *)&v84 + 1) = v26;
      uint64_t v15 = v26;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v27 = *(void *)(v15 + 16);
    if (!v27) {
      goto LABEL_122;
    }
    uint64_t v28 = *(void *)(v27 + 16);
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_105;
    }
    *(void *)(v27 + 16) = v30;
    uint64_t v31 = *(void *)(v27 + 8);
    BOOL v29 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (v29) {
      goto LABEL_106;
    }
    *(void *)(v27 + 8) = v32;
    uint64_t v9 = (long long *)v77;
LABEL_4:
    sub_2208352E4((uint64_t)v9, &qword_267F188D8);
    if (v7 == ++v8) {
      goto LABEL_101;
    }
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
  return result;
}

uint64_t sub_2208ACB30(uint64_t a1)
{
  uint64_t v3 = sub_22093E100();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v142 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v147 = (char *)&v138 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v144 = (char *)&v138 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v148 = (char *)&v138 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v149 = (char *)&v138 - v14;
  MEMORY[0x270FA5388](v13);
  BOOL v154 = (char *)&v138 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v145 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v150 = (uint64_t)&v138 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v143 = (char *)&v138 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v146 = (char *)&v138 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v151 = (uint64_t)&v138 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v155 = (uint64_t)&v138 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v162 = (uint64_t)&v138 - v29;
  uint64_t v30 = *(void *)(v1 + 80);
  uint64_t v169 = *(void *)(v1 + 72);
  *(void *)&long long v170 = v30;
  swift_bridgeObjectRetain();
  *((void *)&v170 + 1) = sub_220832D70(MEMORY[0x263F8EE78]);
  sub_2208F1938(0);
  uint64_t v31 = v1 + 88;
  sub_22080B658(v1 + 32, v1 + 88);
  uint64_t v160 = *(void *)(a1 + 16);
  if (!v160)
  {
LABEL_123:
    uint64_t v137 = v169;
    v163[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
    v163[4] = &off_26D2223C0;
    v163[0] = v137;
    *(_OWORD *)&v163[1] = v170;
    sub_220857364((uint64_t)v163, v31);
    return 1;
  }
  uint64_t v139 = v1 + 88;
  uint64_t v152 = v4;
  uint64_t v153 = v1;
  uint64_t v141 = v1 + 8;
  int v161 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  unint64_t v157 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
  uint64_t v158 = (uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v159 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v156 = (void (**)(char *, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v140 = a1;
  while (1)
  {
    uint64_t v37 = *(void *)(a1 + 8 * v32 + 32);
    if (*(void *)(v37 + 16))
    {
      uint64_t v39 = *(void *)(v153 + 72);
      uint64_t v38 = *(void *)(v153 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_22081D290(v39, v38);
      if (v41) {
        sub_220835350(*(void *)(v37 + 56) + 32 * v40, (uint64_t)v163);
      }
      else {
        memset(v163, 0, 32);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v163, 0, 32);
    }
    sub_220835280((uint64_t)v163, (uint64_t)&v167, &qword_267F188D8);
    if (v168)
    {
      sub_220835280((uint64_t)&v167, (uint64_t)v166, &qword_267F188D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if (swift_dynamicCast())
      {

        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v166);
        goto LABEL_16;
      }
      uint64_t v72 = v149;
      if (swift_dynamicCast())
      {
        uint64_t v73 = *v158;
        uint64_t v74 = v148;
        (*v158)(v148, (uint64_t)v72, v3);
        char v75 = *v157;
        uint64_t v76 = v151;
        (*v157)(v151, v74, v3);
        (*v159)(v76, 0, 1, v3);
        uint64_t v77 = *((void *)&v170 + 1);
        long long v78 = (uint64_t *)(*((void *)&v170 + 1) + 16);
        uint64_t result = swift_beginAccess();
        uint64_t v79 = *(void *)(v77 + 16);
        if (!v79) {
          goto LABEL_151;
        }
        uint64_t v80 = *(void *)(v79 + 8);
        uint64_t v81 = v80 + 1;
        uint64_t v82 = (uint64_t)v146;
        if (__OFADD__(v80, 1)) {
          goto LABEL_134;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          uint64_t result = *v78;
          if (!*v78) {
            goto LABEL_153;
          }
          uint64_t v83 = *(void *)result;
          if (*(void *)result < v81)
          {
            if (v83 + 0x4000000000000000 < 0) {
              goto LABEL_142;
            }
            uint64_t v84 = 2 * v83;
            if (v84 <= v81) {
              uint64_t v85 = v81;
            }
            else {
              uint64_t v85 = v84;
            }
            sub_22088FAF0((void *)result, v85, (uint64_t *)&v165);
            sub_2208906DC(*(void **)(v77 + 16));
            *(_OWORD *)(v77 + 16) = v165;
          }
        }
        else
        {
          uint64_t result = swift_beginAccess();
          uint64_t v101 = (uint64_t *)*v78;
          if (!v101) {
            goto LABEL_155;
          }
          uint64_t v102 = *v101;
          if (*v101 < v81)
          {
            if (v102 + 0x4000000000000000 < 0) {
              goto LABEL_143;
            }
            if (2 * v102 <= v81) {
              uint64_t v102 = v81;
            }
            else {
              v102 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41118);
          uint64_t v103 = swift_allocObject();
          sub_22088EB70((uint64_t)v101, v102, (uint64_t *)&v165);
          *(_OWORD *)(v103 + 16) = v165;
          swift_release();
          *((void *)&v170 + 1) = v103;
          uint64_t v77 = v103;
          uint64_t v82 = (uint64_t)v146;
        }
        swift_beginAccess();
        uint64_t v104 = *(void **)(v77 + 16);
        sub_220835280(v151, v82, qword_26AD411B8);
        if ((*v161)(v82, 1, v3) == 1)
        {
          uint64_t result = sub_2208352E4(v82, qword_26AD411B8);
          if (!v104) {
            goto LABEL_156;
          }
          uint64_t v105 = v104[2];
          BOOL v34 = __OFADD__(v105, 1);
          uint64_t v106 = v105 + 1;
          if (v34) {
            goto LABEL_138;
          }
          v104[2] = v106;
        }
        else
        {
          uint64_t result = v73(v144, v82, v3);
          if (!v104) {
            goto LABEL_157;
          }
          uint64_t v107 = *v104 + 7;
          if (__OFADD__(*v104, 7)) {
            goto LABEL_139;
          }
          uint64_t v108 = v104 + 8;
          if (v107 < 0) {
            uint64_t v107 = *v104 + 14;
          }
          uint64_t v109 = v107 >> 3;
          uint64_t v110 = v109 - 1;
          BOOL v61 = v109 < 1;
          uint64_t v111 = v109 + 62;
          if (!v61) {
            uint64_t v111 = v110;
          }
          uint64_t v112 = v152;
          uint64_t v113 = v144;
          v75((uint64_t)v108 + (v111 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v152 + 72) * v104[1] + 64, v144, v3);
          uint64_t v114 = v104[1];
          uint64_t v115 = v114 + 7;
          if (v114 >= 0) {
            uint64_t v115 = v104[1];
          }
          uint64_t v116 = v114 - (v115 & 0xFFFFFFFFFFFFFFF8);
          if (v116 >= 0) {
            char v117 = 1 << v116;
          }
          else {
            char v117 = 0;
          }
          *((unsigned char *)v108 + (v115 >> 3)) |= v117;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v113, v3);
        }
        uint64_t v33 = v104[1];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_135;
        }
        v104[1] = v35;
        sub_2208352E4(v151, qword_26AD411B8);
        (*v156)(v148, v3);
LABEL_5:
        sub_2208352E4((uint64_t)v163, &qword_267F188D8);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v166);
        uint64_t v36 = &v167;
        goto LABEL_6;
      }
      if (swift_dynamicCast())
      {
        uint64_t v86 = v143;
        sub_2208BB36C(v165, *((uint64_t *)&v165 + 1), v143);
        swift_bridgeObjectRelease();
        uint64_t v87 = *v161;
        if ((*v161)((uint64_t)v86, 1, v3) != 1)
        {
          uint64_t v88 = *v158;
          uint64_t v89 = v147;
          (*v158)(v147, (uint64_t)v86, v3);
          BOOL v90 = *v157;
          uint64_t v91 = v150;
          (*v157)(v150, v89, v3);
          (*v159)(v91, 0, 1, v3);
          uint64_t v92 = *((void *)&v170 + 1);
          uint64_t v93 = (uint64_t *)(*((void *)&v170 + 1) + 16);
          uint64_t result = swift_beginAccess();
          uint64_t v94 = *(void *)(v92 + 16);
          if (!v94) {
            goto LABEL_152;
          }
          uint64_t v95 = *(void *)(v94 + 8);
          uint64_t v96 = v95 + 1;
          uint64_t v97 = (uint64_t)v145;
          if (__OFADD__(v95, 1)) {
            goto LABEL_136;
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            swift_beginAccess();
            uint64_t result = *v93;
            if (!*v93) {
              goto LABEL_154;
            }
            uint64_t v98 = *(void *)result;
            if (*(void *)result < v96)
            {
              if (v98 + 0x4000000000000000 < 0) {
                goto LABEL_144;
              }
              uint64_t v99 = 2 * v98;
              if (v99 <= v96) {
                uint64_t v100 = v96;
              }
              else {
                uint64_t v100 = v99;
              }
              sub_22088FAF0((void *)result, v100, (uint64_t *)&v164);
              sub_2208906DC(*(void **)(v92 + 16));
              *(_OWORD *)(v92 + 16) = v164;
            }
          }
          else
          {
            uint64_t result = swift_beginAccess();
            unint64_t v118 = (uint64_t *)*v93;
            if (!v118) {
              goto LABEL_158;
            }
            uint64_t v119 = *v118;
            if (*v118 < v96)
            {
              if (v119 + 0x4000000000000000 < 0) {
                goto LABEL_145;
              }
              if (2 * v119 <= v96) {
                uint64_t v119 = v96;
              }
              else {
                v119 *= 2;
              }
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41118);
            uint64_t v120 = swift_allocObject();
            sub_22088EB70((uint64_t)v118, v119, (uint64_t *)&v164);
            *(_OWORD *)(v120 + 16) = v164;
            swift_release();
            *((void *)&v170 + 1) = v120;
            uint64_t v92 = v120;
            uint64_t v97 = (uint64_t)v145;
          }
          swift_beginAccess();
          uint64_t v121 = *(void **)(v92 + 16);
          sub_220835280(v150, v97, qword_26AD411B8);
          if (v87(v97, 1, v3) == 1)
          {
            uint64_t result = sub_2208352E4(v97, qword_26AD411B8);
            a1 = v140;
            if (!v121) {
              goto LABEL_159;
            }
            uint64_t v122 = v121[2];
            BOOL v34 = __OFADD__(v122, 1);
            uint64_t v123 = v122 + 1;
            if (v34) {
              goto LABEL_140;
            }
            v121[2] = v123;
          }
          else
          {
            uint64_t result = v88(v142, v97, v3);
            a1 = v140;
            if (!v121) {
              goto LABEL_160;
            }
            uint64_t v124 = *v121 + 7;
            if (__OFADD__(*v121, 7)) {
              goto LABEL_141;
            }
            uint64_t v125 = v121 + 8;
            if (v124 < 0) {
              uint64_t v124 = *v121 + 14;
            }
            uint64_t v126 = v124 >> 3;
            uint64_t v127 = v126 - 1;
            BOOL v61 = v126 < 1;
            uint64_t v128 = v126 + 62;
            if (!v61) {
              uint64_t v128 = v127;
            }
            uint64_t v129 = v152;
            unint64_t v130 = v142;
            v90((uint64_t)v125 + (v128 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v152 + 72) * v121[1] + 64, v142, v3);
            uint64_t v131 = v121[1];
            uint64_t v132 = v131 + 7;
            if (v131 >= 0) {
              uint64_t v132 = v121[1];
            }
            uint64_t v133 = v131 - (v132 & 0xFFFFFFFFFFFFFFF8);
            if (v133 >= 0) {
              char v134 = 1 << v133;
            }
            else {
              char v134 = 0;
            }
            *((unsigned char *)v125 + (v132 >> 3)) |= v134;
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v130, v3);
          }
          uint64_t v135 = v121[1];
          BOOL v34 = __OFADD__(v135, 1);
          uint64_t v136 = v135 + 1;
          if (v34) {
            goto LABEL_137;
          }
          v121[1] = v136;
          sub_2208352E4(v150, qword_26AD411B8);
          (*v156)(v147, v3);
          goto LABEL_5;
        }
        sub_2208352E4((uint64_t)v163, &qword_267F188D8);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_2208352E4((uint64_t)v86, qword_26AD411B8);
      }
      else
      {
        sub_2208352E4((uint64_t)v163, &qword_267F188D8);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v166);
      sub_2208352E4((uint64_t)&v167, &qword_267F188D8);
      return 0;
    }
LABEL_16:
    sub_2208352E4((uint64_t)&v167, &qword_267F188D8);
    (*v159)(v162, 1, 1, v3);
    uint64_t v42 = *((void *)&v170 + 1);
    uint64_t v43 = (uint64_t *)(*((void *)&v170 + 1) + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v45 = *(void *)(v42 + 16);
    if (!v45) {
      goto LABEL_146;
    }
    uint64_t v46 = *(void *)(v45 + 8);
    uint64_t v47 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v43;
      if (!*v43) {
        goto LABEL_147;
      }
      uint64_t v48 = *(void *)result;
      if (*(void *)result < v47)
      {
        if (v48 + 0x4000000000000000 < 0) {
          goto LABEL_132;
        }
        uint64_t v49 = 2 * v48;
        if (v49 <= v47) {
          uint64_t v50 = v47;
        }
        else {
          uint64_t v50 = v49;
        }
        sub_22088FAF0((void *)result, v50, (uint64_t *)&v167);
        sub_2208906DC(*(void **)(v42 + 16));
        *(_OWORD *)(v42 + 16) = v167;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v51 = (uint64_t *)*v43;
      if (!v51) {
        goto LABEL_148;
      }
      uint64_t v52 = *v51;
      if (*v51 < v47)
      {
        if (v52 + 0x4000000000000000 < 0) {
          goto LABEL_133;
        }
        if (2 * v52 <= v47) {
          uint64_t v52 = v47;
        }
        else {
          v52 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41118);
      uint64_t v53 = swift_allocObject();
      sub_22088EB70((uint64_t)v51, v52, (uint64_t *)&v167);
      *(_OWORD *)(v53 + 16) = v167;
      swift_release();
      *((void *)&v170 + 1) = v53;
      uint64_t v42 = v53;
    }
    swift_beginAccess();
    uint64_t v54 = *(void **)(v42 + 16);
    uint64_t v55 = v155;
    sub_220835280(v162, v155, qword_26AD411B8);
    if ((*v161)(v55, 1, v3) == 1)
    {
      uint64_t result = sub_2208352E4(v55, qword_26AD411B8);
      if (!v54) {
        goto LABEL_149;
      }
      uint64_t v56 = v54[2];
      BOOL v34 = __OFADD__(v56, 1);
      uint64_t v57 = v56 + 1;
      if (v34) {
        goto LABEL_130;
      }
      v54[2] = v57;
    }
    else
    {
      uint64_t result = (*v158)(v154, v55, v3);
      if (!v54) {
        goto LABEL_150;
      }
      uint64_t v58 = *v54 + 7;
      if (__OFADD__(*v54, 7)) {
        goto LABEL_131;
      }
      uint64_t v59 = v54 + 8;
      if (v58 < 0) {
        uint64_t v58 = *v54 + 14;
      }
      uint64_t v60 = v58 >> 3;
      uint64_t v62 = v60 - 1;
      BOOL v61 = v60 < 1;
      uint64_t v63 = v60 + 62;
      if (!v61) {
        uint64_t v63 = v62;
      }
      uint64_t v64 = v152;
      uint64_t v65 = v154;
      (*(void (**)(unint64_t, char *, uint64_t))(v152 + 16))((unint64_t)v59 + (v63 & 0xFFFFFFFFFFFFFFC0) + *(void *)(v152 + 72) * v54[1] + 64, v154, v3);
      uint64_t v66 = v54[1];
      uint64_t v67 = v66 + 7;
      if (v66 >= 0) {
        uint64_t v67 = v54[1];
      }
      uint64_t v68 = v66 - (v67 & 0xFFFFFFFFFFFFFFF8);
      if (v68 >= 0) {
        char v69 = 1 << v68;
      }
      else {
        char v69 = 0;
      }
      *((unsigned char *)v59 + (v67 >> 3)) |= v69;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v3);
    }
    uint64_t v70 = v54[1];
    BOOL v34 = __OFADD__(v70, 1);
    uint64_t v71 = v70 + 1;
    if (v34) {
      goto LABEL_129;
    }
    v54[1] = v71;
    sub_2208352E4(v162, qword_26AD411B8);
    uint64_t v36 = (long long *)v163;
LABEL_6:
    sub_2208352E4((uint64_t)v36, &qword_267F188D8);
    if (v160 == ++v32)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = v139;
      goto LABEL_123;
    }
  }
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
  return result;
}

uint64_t sub_2208ADAD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v59;
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v68 = *(void *)(v1 + 72);
  uint64_t v69 = v5;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_2208322FC(MEMORY[0x263F8EE78]);
  sub_2208F18BC(0);
  uint64_t v6 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_67:
    uint64_t v58 = v68;
    *((void *)&v60 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
    BOOL v61 = &off_26D2223C0;
    *(void *)&long long v59 = v58;
    *(long long *)((char *)v4 + 8) = v4[14];
    sub_220857364((uint64_t)&v59, v6);
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = *(void *)(a1 + 8 * v8 + 32);
    if (*(void *)(v9 + 16))
    {
      uint64_t v11 = *(void *)(v2 + 72);
      uint64_t v10 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_22081D290(v11, v10);
      if (v13)
      {
        sub_220835350(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v59);
      }
      else
      {
        long long v60 = 0u;
        long long v59 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v60 = 0u;
      long long v59 = 0u;
    }
    sub_220835280((uint64_t)&v59, (uint64_t)v66, &qword_267F188D8);
    if (v67)
    {
      sub_220835280((uint64_t)v66, (uint64_t)v65, &qword_267F188D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
      sub_2208478BC();
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          sub_2208352E4((uint64_t)&v59, &qword_267F188D8);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
          sub_2208352E4((uint64_t)v66, &qword_267F188D8);
          return 0;
        }
        uint64_t v4 = v63;
        uint64_t v32 = v64;
        uint64_t v33 = v70;
        BOOL v34 = (uint64_t *)(v70 + 16);
        uint64_t result = swift_beginAccess();
        uint64_t v35 = *(void *)(v33 + 16);
        if (!v35) {
          goto LABEL_83;
        }
        uint64_t v36 = *(void *)(v35 + 8);
        uint64_t v37 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_73;
        }
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          swift_beginAccess();
          uint64_t result = *v34;
          if (!*v34) {
            goto LABEL_85;
          }
          uint64_t v38 = *(void *)result;
          if (*(void *)result < v37)
          {
            if (v38 + 0x4000000000000000 < 0) {
              goto LABEL_77;
            }
            uint64_t v39 = 2 * v38;
            if (v39 <= v37) {
              uint64_t v40 = v37;
            }
            else {
              uint64_t v40 = v39;
            }
            sub_22088F904(result, v40, (uint64_t *)&v62);
            sub_220890508(*(void **)(v33 + 16));
            *(_OWORD *)(v33 + 16) = v62;
          }
        }
        else
        {
          uint64_t result = swift_beginAccess();
          char v41 = (uint64_t *)*v34;
          if (!v41) {
            goto LABEL_86;
          }
          uint64_t v42 = *v41;
          if (*v41 < v37)
          {
            if (v42 + 0x4000000000000000 < 0) {
              goto LABEL_78;
            }
            if (2 * v42 <= v37) {
              uint64_t v42 = v37;
            }
            else {
              v42 *= 2;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
          uint64_t v43 = swift_allocObject();
          sub_22088E9D4((uint64_t)v41, v42, (uint64_t *)&v62);
          *(_OWORD *)(v43 + 16) = v62;
          swift_release();
          uint64_t v70 = v43;
          uint64_t v33 = v43;
        }
        uint64_t result = swift_beginAccess();
        uint64_t v44 = *(void **)(v33 + 16);
        if (!v44) {
          goto LABEL_84;
        }
        uint64_t v45 = *v44 + 7;
        if (__OFADD__(*v44, 7)) {
          goto LABEL_74;
        }
        uint64_t v46 = v44 + 8;
        if (v45 < 0) {
          uint64_t v45 = *v44 + 14;
        }
        uint64_t v47 = v45 >> 3;
        uint64_t v49 = v47 - 1;
        BOOL v48 = v47 < 1;
        uint64_t v50 = v47 + 62;
        if (!v48) {
          uint64_t v50 = v49;
        }
        unint64_t v51 = (unint64_t)&v46[2 * v44[1]] + (v50 & 0xFFFFFFFFFFFFFFC0);
        *(void *)(v51 + 64) = v4;
        *(void *)(v51 + 72) = v32;
        uint64_t v52 = v44[1];
        uint64_t v53 = v52 + 7;
        if (v52 >= 0) {
          uint64_t v53 = v44[1];
        }
        uint64_t v54 = v53 >> 3;
        uint64_t v55 = v52 - (v53 & 0xFFFFFFFFFFFFFFF8);
        if (v55 >= 0) {
          char v56 = 1 << v55;
        }
        else {
          char v56 = 0;
        }
        *((unsigned char *)v46 + v54) |= v56;
        BOOL v28 = __OFADD__(v52, 1);
        uint64_t v57 = v52 + 1;
        if (v28)
        {
          __break(1u);
LABEL_66:
          swift_bridgeObjectRelease();
          uint64_t v6 = v2 + 88;
          goto LABEL_67;
        }
        v44[1] = v57;
        sub_2208352E4((uint64_t)&v59, &qword_267F188D8);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
        sub_2208352E4((uint64_t)v66, &qword_267F188D8);
        uint64_t v4 = &v59;
        goto LABEL_3;
      }

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
    }
    sub_2208352E4((uint64_t)v66, &qword_267F188D8);
    uint64_t v14 = v70;
    uint64_t v15 = (uint64_t *)(v70 + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v14 + 16);
    if (!v17) {
      goto LABEL_79;
    }
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v15;
      if (!*v15) {
        goto LABEL_81;
      }
      uint64_t v20 = *(void *)result;
      if (*(void *)result < v19)
      {
        if (v20 + 0x4000000000000000 < 0) {
          goto LABEL_75;
        }
        uint64_t v21 = 2 * v20;
        if (v21 <= v19) {
          uint64_t v22 = v19;
        }
        else {
          uint64_t v22 = v21;
        }
        sub_22088F904(result, v22, v66);
        sub_220890508(*(void **)(v14 + 16));
        *(_OWORD *)(v14 + 16) = *(_OWORD *)v66;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v23 = (uint64_t *)*v15;
      if (!v23) {
        goto LABEL_82;
      }
      uint64_t v24 = *v23;
      if (*v23 < v19)
      {
        if (v24 + 0x4000000000000000 < 0) {
          goto LABEL_76;
        }
        if (2 * v24 <= v19) {
          uint64_t v24 = v19;
        }
        else {
          v24 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413C8);
      uint64_t v25 = swift_allocObject();
      sub_22088E9D4((uint64_t)v23, v24, v66);
      *(_OWORD *)(v25 + 16) = *(_OWORD *)v66;
      swift_release();
      uint64_t v70 = v25;
      uint64_t v14 = v25;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v26 = *(void *)(v14 + 16);
    if (!v26) {
      goto LABEL_80;
    }
    uint64_t v27 = *(void *)(v26 + 16);
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_71;
    }
    *(void *)(v26 + 16) = v29;
    uint64_t v30 = *(void *)(v26 + 8);
    BOOL v28 = __OFADD__(v30, 1);
    uint64_t v31 = v30 + 1;
    if (v28) {
      goto LABEL_72;
    }
    *(void *)(v26 + 8) = v31;
    sub_2208352E4((uint64_t)&v59, &qword_267F188D8);
LABEL_3:
    if (v7 == ++v8) {
      goto LABEL_66;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t sub_2208AE100(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v75 = *(void *)(v1 + 72);
  *(void *)&long long v76 = v4;
  swift_bridgeObjectRetain();
  *((void *)&v76 + 1) = sub_2208333E8(MEMORY[0x263F8EE78]);
  sub_2208F1980(0);
  uint64_t v5 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    goto LABEL_79;
  }
  uint64_t v60 = v2 + 88;
  uint64_t v63 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v61 = v6;
  uint64_t v62 = v2;
  while (1)
  {
    uint64_t v9 = *(void *)(v63 + 8 * v7);
    if (*(void *)(v9 + 16))
    {
      uint64_t v11 = *(void *)(v2 + 72);
      uint64_t v10 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_22081D290(v11, v10);
      if (v13) {
        sub_220835350(*(void *)(v9 + 56) + 32 * v12, (uint64_t)v65);
      }
      else {
        memset(v65, 0, sizeof(v65));
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v65, 0, sizeof(v65));
    }
    sub_220835280((uint64_t)v65, (uint64_t)v73, &qword_267F188D8);
    if (!v74) {
      goto LABEL_13;
    }
    sub_220835280((uint64_t)v73, (uint64_t)v72, &qword_267F188D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
    sub_2208478BC();
    if (swift_dynamicCast()) {
      break;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B58);
    if (!swift_dynamicCast())
    {
      sub_2208352E4((uint64_t)v65, &qword_267F188D8);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
      sub_2208352E4((uint64_t)v73, &qword_267F188D8);
      return 0;
    }
    uint64_t v32 = v71;
    int64_t v33 = *(void *)(v71 + 16);
    if (v33)
    {
      uint64_t v70 = MEMORY[0x263F8EE78];
      sub_220826F58(0, v33, 0);
      uint64_t v34 = v32 + 32;
      while (1)
      {
        sub_220835280(v34, (uint64_t)v67, &qword_267F188D8);
        sub_220835280((uint64_t)v67, (uint64_t)&v68, &qword_267F188D8);
        if (!*((void *)&v69 + 1)) {
          break;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_42;
        }

        long long v68 = 0u;
        long long v69 = 0u;
LABEL_43:
        sub_2208352E4((uint64_t)v67, &qword_267F188D8);
        uint64_t v35 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_220826F58(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v70;
        }
        unint64_t v37 = *(void *)(v35 + 16);
        unint64_t v36 = *(void *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_220826F58((void *)(v36 > 1), v37 + 1, 1);
          uint64_t v35 = v70;
        }
        *(void *)(v35 + 16) = v37 + 1;
        sub_220847950((uint64_t)&v68, v35 + 32 * v37 + 32);
        v34 += 32;
        if (!--v33)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
      sub_2208352E4((uint64_t)&v68, &qword_267F188D8);
LABEL_42:
      sub_220835280((uint64_t)v67, (uint64_t)&v68, &qword_267F188D8);
      goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x263F8EE78];
LABEL_50:
    uint64_t v38 = *((void *)&v76 + 1);
    uint64_t v39 = (uint64_t *)(*((void *)&v76 + 1) + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v40 = *(void *)(v38 + 16);
    uint64_t v6 = v61;
    uint64_t v2 = v62;
    if (!v40) {
      goto LABEL_95;
    }
    uint64_t v41 = *(void *)(v40 + 8);
    uint64_t v42 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      goto LABEL_84;
    }
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v39;
      if (!*v39) {
        goto LABEL_97;
      }
      uint64_t v43 = *(void *)result;
      if (*(void *)result < v42)
      {
        if (v43 + 0x4000000000000000 < 0) {
          goto LABEL_89;
        }
        uint64_t v44 = 2 * v43;
        if (v44 <= v42) {
          uint64_t v45 = v42;
        }
        else {
          uint64_t v45 = v44;
        }
        sub_22088F900(result, v45, (uint64_t *)&v68);
        sub_2208908C0(*(void **)(v38 + 16), *(void *)(v38 + 24));
        *(_OWORD *)(v38 + 16) = v68;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v46 = (uint64_t *)*v39;
      if (!v46) {
        goto LABEL_98;
      }
      uint64_t v47 = *v46;
      if (*v46 < v42)
      {
        if (v47 + 0x4000000000000000 < 0) {
          goto LABEL_90;
        }
        if (2 * v47 <= v42) {
          uint64_t v47 = v42;
        }
        else {
          v47 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18808);
      uint64_t v48 = swift_allocObject();
      sub_22088E840(&v68, v46, *(void *)(v38 + 24), v47);
      *(_OWORD *)(v48 + 16) = v68;
      swift_release();
      *((void *)&v76 + 1) = v48;
      uint64_t v38 = v48;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v49 = *(void **)(v38 + 16);
    if (!v49) {
      goto LABEL_96;
    }
    uint64_t v50 = *v49 + 7;
    if (__OFADD__(*v49, 7)) {
      goto LABEL_85;
    }
    unint64_t v51 = v49 + 8;
    if (v50 < 0) {
      uint64_t v50 = *v49 + 14;
    }
    uint64_t v52 = v50 >> 3;
    uint64_t v54 = v52 - 1;
    BOOL v53 = v52 < 1;
    uint64_t v55 = v52 + 62;
    if (!v53) {
      uint64_t v55 = v54;
    }
    uint64_t v56 = v49[1];
    *(void *)((char *)&v51[v56 + 8] + (v55 & 0xFFFFFFFFFFFFFFC0)) = v35;
    uint64_t v57 = v56 - (v55 & 0xFFFFFFFFFFFFFFF8);
    if (v57 >= 0) {
      char v58 = 1 << v57;
    }
    else {
      char v58 = 0;
    }
    *((unsigned char *)v51 + v56 / 8) |= v58;
    if (__OFADD__(v56, 1)) {
      goto LABEL_86;
    }
    v49[1] = v56 + 1;
    swift_bridgeObjectRelease();
    sub_2208352E4((uint64_t)v65, &qword_267F188D8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
    uint64_t v8 = v73;
LABEL_3:
    sub_2208352E4((uint64_t)v8, &qword_267F188D8);
    if (++v7 == v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v60;
LABEL_79:
      uint64_t v59 = v75;
      *((void *)&v65[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B60);
      uint64_t v66 = &off_26D2223C0;
      *(void *)&v65[0] = v59;
      *(_OWORD *)((char *)v65 + 8) = v76;
      sub_220857364((uint64_t)v65, v5);
      return 1;
    }
  }

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v72);
LABEL_13:
  sub_2208352E4((uint64_t)v73, &qword_267F188D8);
  uint64_t v14 = *((void *)&v76 + 1);
  uint64_t v15 = (uint64_t *)(*((void *)&v76 + 1) + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  if (!v17) {
    goto LABEL_91;
  }
  uint64_t v18 = *(void *)(v17 + 8);
  uint64_t v19 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v15;
      if (!*v15) {
        goto LABEL_93;
      }
      uint64_t v20 = *(void *)result;
      if (*(void *)result < v19)
      {
        if (v20 + 0x4000000000000000 < 0) {
          goto LABEL_87;
        }
        uint64_t v21 = 2 * v20;
        if (v21 <= v19) {
          uint64_t v22 = v19;
        }
        else {
          uint64_t v22 = v21;
        }
        sub_22088F900(result, v22, v73);
        sub_2208908C0(*(void **)(v14 + 16), *(void *)(v14 + 24));
        *(_OWORD *)(v14 + 16) = *(_OWORD *)v73;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v23 = (uint64_t *)*v15;
      if (!v23) {
        goto LABEL_94;
      }
      uint64_t v24 = *v23;
      if (*v23 < v19)
      {
        if (v24 + 0x4000000000000000 < 0) {
          goto LABEL_88;
        }
        if (2 * v24 <= v19) {
          uint64_t v24 = v19;
        }
        else {
          v24 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18808);
      uint64_t v25 = swift_allocObject();
      sub_22088E840(v73, v23, *(void *)(v14 + 24), v24);
      *(_OWORD *)(v25 + 16) = *(_OWORD *)v73;
      swift_release();
      *((void *)&v76 + 1) = v25;
      uint64_t v14 = v25;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v26 = *(void *)(v14 + 16);
    if (!v26) {
      goto LABEL_92;
    }
    uint64_t v27 = *(void *)(v26 + 16);
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_82;
    }
    *(void *)(v26 + 16) = v29;
    uint64_t v30 = *(void *)(v26 + 8);
    BOOL v28 = __OFADD__(v30, 1);
    uint64_t v31 = v30 + 1;
    if (v28) {
      goto LABEL_83;
    }
    *(void *)(v26 + 8) = v31;
    uint64_t v8 = (uint64_t *)v65;
    goto LABEL_3;
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
  return result;
}

uint64_t sub_2208AE854(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v71 = *(void *)(v1 + 72);
  *(void *)&long long v72 = v4;
  swift_bridgeObjectRetain();
  *((void *)&v72 + 1) = sub_220833668(MEMORY[0x263F8EE78]);
  sub_2208F19C8(0);
  uint64_t v5 = v1 + 88;
  sub_22080B658(v2 + 32, v2 + 88);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    goto LABEL_66;
  }
  uint64_t v56 = v2 + 88;
  uint64_t v7 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v58 = v6;
  uint64_t v59 = v2;
  uint64_t v57 = v7;
  while (1)
  {
    uint64_t v11 = *(void *)(v7 + 8 * v8);
    if (*(void *)(v11 + 16))
    {
      uint64_t v13 = *(void *)(v2 + 72);
      uint64_t v12 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_22081D290(v13, v12);
      if (v15) {
        sub_220835350(*(void *)(v11 + 56) + 32 * v14, (uint64_t)v62);
      }
      else {
        memset(v62, 0, sizeof(v62));
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v62, 0, sizeof(v62));
    }
    sub_220835280((uint64_t)v62, (uint64_t)v69, &qword_267F188D8);
    if (!v70) {
      goto LABEL_14;
    }
    sub_220835280((uint64_t)v69, (uint64_t)v68, &qword_267F188D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B28);
    sub_2208478BC();
    if (!swift_dynamicCast()) {
      break;
    }

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
LABEL_14:
    uint64_t v16 = v8;
    sub_2208352E4((uint64_t)v69, &qword_267F188D8);
    uint64_t v17 = *((void *)&v72 + 1);
    uint64_t v18 = (uint64_t *)(*((void *)&v72 + 1) + 16);
    uint64_t result = swift_beginAccess();
    uint64_t v20 = *(void *)(v17 + 16);
    if (!v20) {
      goto LABEL_76;
    }
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      swift_beginAccess();
      uint64_t result = *v18;
      if (!*v18) {
        goto LABEL_78;
      }
      uint64_t v23 = *(void *)result;
      if (*(void *)result < v22)
      {
        if (v23 + 0x4000000000000000 < 0) {
          goto LABEL_74;
        }
        uint64_t v24 = 2 * v23;
        if (v24 <= v22) {
          uint64_t v25 = v22;
        }
        else {
          uint64_t v25 = v24;
        }
        sub_22088F900(result, v25, v69);
        sub_2208908CC(*(void **)(v17 + 16), *(void *)(v17 + 24));
        *(_OWORD *)(v17 + 16) = *(_OWORD *)v69;
      }
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v26 = (uint64_t *)*v18;
      if (!v26) {
        goto LABEL_79;
      }
      uint64_t v27 = *v26;
      if (*v26 < v22)
      {
        if (v27 + 0x4000000000000000 < 0) {
          goto LABEL_75;
        }
        if (2 * v27 <= v22) {
          uint64_t v27 = v22;
        }
        else {
          v27 *= 2;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267F18810);
      uint64_t v28 = swift_allocObject();
      sub_22088E840(v69, v26, *(void *)(v17 + 24), v27);
      *(_OWORD *)(v28 + 16) = *(_OWORD *)v69;
      swift_release();
      *((void *)&v72 + 1) = v28;
      uint64_t v17 = v28;
    }
    uint64_t result = swift_beginAccess();
    uint64_t v29 = *(void *)(v17 + 16);
    if (!v29) {
      goto LABEL_77;
    }
    uint64_t v30 = *(void *)(v29 + 16);
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_71;
    }
    *(void *)(v29 + 16) = v32;
    uint64_t v33 = *(void *)(v29 + 8);
    BOOL v31 = __OFADD__(v33, 1);
    uint64_t v34 = v33 + 1;
    if (v31) {
      goto LABEL_72;
    }
    uint64_t v10 = v16;
    *(void *)(v29 + 8) = v34;
    sub_2208352E4((uint64_t)v62, &qword_267F188D8);
LABEL_4:
    uint64_t v8 = v10 + 1;
    if (v8 == v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v56;
LABEL_66:
      uint64_t v55 = v71;
      *((void *)&v62[1] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B50);
      uint64_t v63 = &off_26D2223C0;
      *(void *)&v62[0] = v55;
      *(_OWORD *)((char *)v62 + 8) = v72;
      sub_220857364((uint64_t)v62, v5);
      return 1;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B38);
  if (!swift_dynamicCast())
  {
    sub_2208352E4((uint64_t)v62, &qword_267F188D8);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_2208352E4((uint64_t)v69, &qword_267F188D8);
    return 0;
  }
  uint64_t v60 = v8;
  uint64_t v35 = v67[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B48);
  uint64_t result = sub_22093F0E0();
  unint64_t v36 = (void *)result;
  int64_t v37 = 0;
  uint64_t v38 = 1 << v35[32];
  uint64_t v40 = v35 + 64;
  uint64_t v39 = *((void *)v35 + 8);
  if (v38 < 64) {
    uint64_t v41 = ~(-1 << v38);
  }
  else {
    uint64_t v41 = -1;
  }
  unint64_t v42 = v41 & v39;
  int64_t v61 = (unint64_t)(v38 + 63) >> 6;
  uint64_t v43 = result + 64;
  if ((v41 & v39) != 0)
  {
LABEL_40:
    unint64_t v44 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    unint64_t v45 = v44 | (v37 << 6);
    goto LABEL_57;
  }
  while (2)
  {
    int64_t v46 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_69;
    }
    if (v46 >= v61) {
      goto LABEL_3;
    }
    unint64_t v47 = *(void *)&v40[8 * v46];
    ++v37;
    if (v47) {
      goto LABEL_56;
    }
    int64_t v37 = v46 + 1;
    if (v46 + 1 >= v61) {
      goto LABEL_3;
    }
    unint64_t v47 = *(void *)&v40[8 * v37];
    if (v47) {
      goto LABEL_56;
    }
    int64_t v37 = v46 + 2;
    if (v46 + 2 >= v61) {
      goto LABEL_3;
    }
    unint64_t v47 = *(void *)&v40[8 * v37];
    if (v47) {
      goto LABEL_56;
    }
    int64_t v37 = v46 + 3;
    if (v46 + 3 >= v61) {
      goto LABEL_3;
    }
    unint64_t v47 = *(void *)&v40[8 * v37];
    if (v47)
    {
LABEL_56:
      unint64_t v42 = (v47 - 1) & v47;
      unint64_t v45 = __clz(__rbit64(v47)) + (v37 << 6);
LABEL_57:
      uint64_t v49 = (uint64_t *)(*((void *)v35 + 6) + 16 * v45);
      uint64_t v51 = *v49;
      uint64_t v50 = v49[1];
      sub_220835280(*((void *)v35 + 7) + 32 * v45, (uint64_t)v67, &qword_267F188D8);
      sub_220835280((uint64_t)v67, (uint64_t)&v65, &qword_267F188D8);
      if (*((void *)&v66 + 1))
      {
        swift_bridgeObjectRetain();
        if (swift_dynamicCast())
        {

          long long v65 = 0u;
          long long v66 = 0u;
LABEL_62:
          sub_2208352E4((uint64_t)v67, &qword_267F188D8);
          *(void *)(v43 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
          uint64_t v52 = (void *)(v36[6] + 16 * v45);
          *uint64_t v52 = v51;
          v52[1] = v50;
          uint64_t result = sub_220847950((uint64_t)&v65, v36[7] + 32 * v45);
          uint64_t v53 = v36[2];
          BOOL v31 = __OFADD__(v53, 1);
          uint64_t v54 = v53 + 1;
          if (v31)
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          v36[2] = v54;
          if (v42) {
            goto LABEL_40;
          }
          continue;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_2208352E4((uint64_t)&v65, &qword_267F188D8);
      }
      sub_220835280((uint64_t)v67, (uint64_t)&v65, &qword_267F188D8);
      goto LABEL_62;
    }
    break;
  }
  int64_t v48 = v46 + 4;
  if (v48 >= v61)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_2208F21FC(v9);
    swift_release_n();
    sub_2208352E4((uint64_t)v62, &qword_267F188D8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
    sub_2208352E4((uint64_t)v69, &qword_267F188D8);
    uint64_t v6 = v58;
    uint64_t v2 = v59;
    uint64_t v7 = v57;
    uint64_t v10 = v60;
    goto LABEL_4;
  }
  unint64_t v47 = *(void *)&v40[8 * v48];
  if (v47)
  {
    int64_t v37 = v48;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v37 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v37 >= v61) {
      goto LABEL_3;
    }
    unint64_t v47 = *(void *)&v40[8 * v37];
    ++v48;
    if (v47) {
      goto LABEL_56;
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_2208AEED0@<X0>(uint64_t a1@<X8>)
{
  return sub_22080B5B8(v1 + 88, a1);
}

uint64_t sub_2208AEEDC(uint64_t a1)
{
  return sub_2208AB1B0(a1);
}

char *sub_2208AEEF4(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v6 = sub_22093E610();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_220844BB4(a1, a2);
  if (!v2)
  {
    uint64_t v9 = v7;
    uint64_t v21 = *(void *)(v7 + 16);
    if (v21)
    {
      uint64_t v20 = a1;
      uint64_t v10 = 0;
      uint64_t v11 = *a1;
      uint64_t v3 = (char *)MEMORY[0x263F8EE78];
      while (1)
      {
        v11 += *(void *)(v9 + 8 * v10 + 32);
        sub_22093E600();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
        sub_22085CB30();
        uint64_t v12 = sub_22093E580();
        if (!v13) {
          break;
        }
        uint64_t v14 = v12;
        uint64_t v15 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_22081B71C(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v17 = *((void *)v3 + 2);
        unint64_t v16 = *((void *)v3 + 3);
        if (v17 >= v16 >> 1) {
          uint64_t v3 = sub_22081B71C((char *)(v16 > 1), v17 + 1, 1, v3);
        }
        ++v10;
        *((void *)v3 + 2) = v17 + 1;
        uint64_t v18 = &v3[16 * v17];
        *((void *)v18 + 4) = v14;
        *((void *)v18 + 5) = v15;
        if (v21 == v10)
        {
          swift_bridgeObjectRelease();
          *uint64_t v20 = v11;
          return v3;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v20 = v11;
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v19 = 0xD000000000000020;
      *(void *)(v19 + 8) = 0x8000000220940720;
      *(unsigned char *)(v19 + 16) = 4;
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (char *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

int64_t sub_2208AF128(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v5 = sub_22093E610();
  MEMORY[0x270FA5388](v5 - 8);
  int64_t result = sub_220808A80(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    int64_t v7 = result;
    uint64_t v28 = a2;
    uint64_t v8 = sub_22081B71C(0, result, 0, MEMORY[0x263F8EE78]);
    if (v7)
    {
      while (1)
      {
        int64_t result = sub_220808A80(a1);
        if (result < 0) {
          break;
        }
        *a1 += result;
        sub_22093E600();
        uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
        sub_22085CB30();
        uint64_t v9 = sub_22093E580();
        if (!v10)
        {
          sub_220809E4C();
          swift_allocError();
          *(void *)uint64_t v27 = 0xD000000000000020;
          *(void *)(v27 + 8) = 0x8000000220940720;
          *(unsigned char *)(v27 + 16) = 4;
          swift_willThrow();
          goto LABEL_18;
        }
        uint64_t v11 = v9;
        uint64_t v12 = v10;
        unint64_t v14 = *((void *)v8 + 2);
        unint64_t v13 = *((void *)v8 + 3);
        uint64_t v2 = v14 + 1;
        if (v14 >= v13 >> 1) {
          uint64_t v8 = sub_22081B71C((char *)(v13 > 1), v14 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v2;
        uint64_t v15 = &v8[16 * v14];
        *((void *)v15 + 4) = v11;
        *((void *)v15 + 5) = v12;
        if (!--v7) {
          goto LABEL_8;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
LABEL_8:
    uint64_t v16 = sub_220844BB4(a1, v28);
    if (v30)
    {
LABEL_18:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = v16;
      int64_t v18 = *(void *)(v16 + 16);
      if (v18)
      {
        uint64_t v29 = MEMORY[0x263F8EE78];
        int64_t result = (int64_t)sub_220826C78(0, v18, 0);
        uint64_t v19 = 0;
        uint64_t v2 = v29;
        while (1)
        {
          unint64_t v20 = *(void *)(v17 + 8 * v19 + 32);
          if ((v20 & 0x8000000000000000) != 0) {
            break;
          }
          if (v20 >= *((void *)v8 + 2)) {
            goto LABEL_23;
          }
          uint64_t v21 = &v8[16 * v20 + 32];
          uint64_t v22 = *(void *)v21;
          uint64_t v23 = *((void *)v21 + 1);
          unint64_t v25 = *(void *)(v29 + 16);
          unint64_t v24 = *(void *)(v29 + 24);
          int64_t result = swift_bridgeObjectRetain();
          if (v25 >= v24 >> 1) {
            int64_t result = (int64_t)sub_220826C78((char *)(v24 > 1), v25 + 1, 1);
          }
          ++v19;
          *(void *)(v29 + 16) = v25 + 1;
          unint64_t v26 = v29 + 16 * v25;
          *(void *)(v26 + 32) = v22;
          *(void *)(v26 + 40) = v23;
          if (v18 == v19)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v2;
          }
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return v2;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_2208AF410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a6;
  uint64_t v70 = a1;
  uint64_t v57 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  long long v69 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  long long v68 = (char *)&v53 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v71 = (char *)&v53 - v13;
  uint64_t v14 = sub_22093ED30();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v24 = (char *)&v53 - v23;
  uint64_t v75 = sub_22093E220();
  uint64_t v74 = sub_22093E230();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v70, a4);
  uint64_t v25 = v57;
  sub_22093E780();
  unint64_t v26 = v56;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22093ED70();
  long long v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v66 = v25 + 48;
  uint64_t v27 = 0;
  if (v65(v17, 1, a3) == 1)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, AssociatedTypeWitness);
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_22093E2B0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v50 = v55;
    if (v55 < 1 || (BOOL v51 = __OFADD__(v49, 1), ++v49, !v51))
    {
      uint64_t v52 = v74;
      *unint64_t v26 = v27;
      v26[1] = v50;
      void v26[2] = v49;
      v26[3] = v52;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v63 = v24;
    uint64_t v54 = v22;
    uint64_t v64 = AssociatedTypeWitness;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    int64_t v61 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v62 = v25 + 32;
    uint64_t v30 = (void (**)(uint64_t, char *, uint64_t))(v25 + 16);
    BOOL v31 = (uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v70 = a5;
    uint64_t v32 = (uint64_t)v68;
    uint64_t v60 = v17;
    uint64_t v58 = (uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    while (1)
    {
      int64_t v37 = v71;
      uint64_t result = v61(v71, v17, a3);
      uint64_t v59 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        break;
      }
      uint64_t v39 = *v30;
      (*v30)(v32, v37, a3);
      uint64_t v40 = v75;
      if (*(void *)(v75 + 16) && (unint64_t v41 = sub_2208D8BEC(v32, a3, a5), (v42 & 1) != 0)) {
        uint64_t v43 = *(void *)(*(void *)(v40 + 56) + 8 * v41);
      }
      else {
        uint64_t v43 = 0;
      }
      unint64_t v44 = *v31;
      uint64_t result = (*v31)(v32, a3);
      uint64_t v45 = v43 + 1;
      if (__OFADD__(v43, 1)) {
        goto LABEL_21;
      }
      int64_t v46 = v71;
      v39((uint64_t)v69, v71, a3);
      uint64_t v72 = v43 + 1;
      char v73 = 0;
      sub_22093E2C0();
      sub_22093E2E0();
      if (v29 < v45)
      {
        swift_bridgeObjectRelease();
        sub_2208AFE88(a3, a3);
        swift_allocObject();
        uint64_t v33 = sub_22093E850();
        v39(v34, v46, a3);
        sub_2208C4760();
        uint64_t v35 = v46;
        BOOL v31 = v58;
        v44((uint64_t)v35, a3);
        uint64_t v74 = v33;
      }
      else
      {
        if (v45 == v29)
        {
          unint64_t v47 = v71;
          v39((uint64_t)v69, v71, a3);
          sub_22093E900();
          sub_22093E8E0();
          int64_t v48 = v47;
        }
        else
        {
          int64_t v48 = v71;
        }
        BOOL v31 = v58;
        v44((uint64_t)v48, a3);
        uint64_t v45 = v29;
      }
      uint64_t v32 = (uint64_t)v68;
      uint64_t v17 = v60;
      sub_22093ED70();
      int v36 = v65(v17, 1, a3);
      ++v28;
      uint64_t v29 = v45;
      a5 = v70;
      if (v36 == 1)
      {
        unint64_t v26 = v56;
        unint64_t v24 = v63;
        uint64_t AssociatedTypeWitness = v64;
        uint64_t v22 = v54;
        uint64_t v27 = v59;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CategoricalSummary.init(someCount:noneCount:uniqueCount:mode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t CategoricalSummary.someCount.getter()
{
  return *(void *)v0;
}

uint64_t CategoricalSummary.someCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CategoricalSummary.someCount.modify())(void)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.noneCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CategoricalSummary.noneCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*CategoricalSummary.noneCount.modify())(void)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.totalCount.getter()
{
  uint64_t v1 = v0[1];
  uint64_t result = *v0 + v1;
  if (__OFADD__(*v0, v1)) {
    __break(1u);
  }
  return result;
}

uint64_t CategoricalSummary.uniqueCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CategoricalSummary.uniqueCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*CategoricalSummary.uniqueCount.modify())(void)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.mode.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CategoricalSummary.mode.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CategoricalSummary.mode.modify())(void)
{
  return nullsub_5;
}

uint64_t CategoricalSummary.init()@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_22093E890();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = result;
  return result;
}

uint64_t CategoricalSummary.debugDescription.getter()
{
  return 0;
}

uint64_t CategoricalSummary.hash(into:)()
{
  sub_22093F440();
  sub_22093F440();
  sub_22093F440();
  swift_bridgeObjectRetain();
  sub_22093E910();

  return swift_bridgeObjectRelease();
}

uint64_t static CategoricalSummary.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2]) {
    return sub_22093E920();
  }
  else {
    return 0;
  }
}

uint64_t CategoricalSummary.hashValue.getter()
{
  return sub_22093F490();
}

uint64_t sub_2208AFE34()
{
  return sub_22093F490();
}

uint64_t sub_2208AFE7C(void *a1, void *a2)
{
  return static CategoricalSummary.== infix(_:_:)(a1, a2);
}

uint64_t sub_2208AFE88(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_267F19278);
  }
  else
  {
    return sub_22093F1B0();
  }
}

uint64_t sub_2208AFEF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208AFF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2208AFF1C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2208AFF54(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2208AFFB4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2208AFFF0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2208B0038(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CategoricalSummary()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208B0090@<X0>(char *a1@<X0>, Swift::Int a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  Swift::Int v9 = a2;
  uint64_t v10 = a1;
  uint64_t v11 = a6;
  if (!*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    uint64_t v18 = 0;
    char v20 = 2;
    goto LABEL_7;
  }
  sub_22080B5B8(a3 + 32, (uint64_t)v26);
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17(v14, v16);
  uint64_t result = sub_22080B0D8((uint64_t)v26);
  if (v18 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = a1;
  uint64_t v11 = a6;
  Swift::Int v9 = a2;
  if (!v18) {
    goto LABEL_6;
  }
  char v20 = 0;
LABEL_7:
  sub_220883950(0, v18, v20);
  v26[0] = a3;
  v26[1] = a4;
  if (v22) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = v21;
  }
  void v26[2] = a5;
  uint64_t v27 = 0;
  uint64_t v28 = v18;
  char v29 = v20;
  uint64_t v30 = 0;
  uint64_t v31 = v23;
  unint64_t v24 = (char *)DataFrame.Rows.index(after:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v18, v20);
  return sub_220882424(v10, v24, a3, a4, a5, v11);
}

uint64_t sub_2208B0224(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v120 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = *(void *)(a2 + 16);
  if (!v119) {
    return 0;
  }
  unint64_t v122 = a1;
  uint64_t v117 = a2 + 32;
  sub_22080B5B8(a2 + 32, (uint64_t)&v143);
  uint64_t v12 = v145;
  uint64_t v13 = v146;
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(&v143, v145);
  int64_t v15 = *(void *)(v13 + 8);
  unint64_t v16 = *(void *)(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = ((uint64_t (*)(uint64_t, int64_t))v16)(v12, v15);
  sub_22080B0D8((uint64_t)&v143);
  if (v17 < 0) {
    goto LABEL_120;
  }
  char v18 = 2 * (v17 == 0);
  sub_220831F30(0, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v17, v18);
  uint64_t v19 = sub_2208EE720(0, v17, v18);
  sub_22080B6B4(0, v17, v18);
  unint64_t v16 = v122;
  int64_t v15 = sub_2208B4528(*(void *)(v122 + 16), v19);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  unint64_t v4 = v24;
  uint64_t v25 = v120;
  sub_2208B5A1C(v20, v22, v24, v16, a2, v120);
  int64_t v113 = v15;
  unint64_t v138 = v4;
  uint64_t v5 = sub_2208B5FE0(v15, v21, v23, v4, v25, a2, a3, a4);
  int64_t v26 = *((void *)v5 + 2);
  int64_t v27 = v119 + *(unsigned __int8 *)(v16 + 25);
  uint64_t v28 = a4;
  uint64_t v139 = v23;
  if (v26 < v27)
  {
    if (v26)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v29 = *((void *)v5 + 2);
        if (v29)
        {
LABEL_7:
          int64_t v26 = v29 - 1;
          uint64_t v30 = &v5[48 * v29 - 48];
          uint64_t v31 = *((void *)v30 + 4);
          a4 = *((void *)v30 + 5);
          uint64_t v32 = *((void *)v30 + 6);
          uint64_t v23 = *((void *)v30 + 7);
          uint64_t v34 = *((void *)v30 + 8);
          uint64_t v33 = *((void *)v30 + 9);
          uint64_t v136 = v34;
          *((void *)v5 + 2) = v26;
          uint64_t v35 = v33 + 2;
          if (!__OFADD__(v33, 2)) {
            goto LABEL_12;
          }
          __break(1u);
          return 0;
        }
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v5 = sub_22080AB48((uint64_t)v5);
    uint64_t v29 = *((void *)v5 + 2);
    if (v29) {
      goto LABEL_7;
    }
    goto LABEL_128;
  }
  uint64_t v35 = 0;
  uint64_t v31 = 0;
  a4 = 0;
  uint64_t v32 = 0;
  uint64_t v23 = 0;
  uint64_t v136 = 0;
  uint64_t v33 = 0;
LABEL_12:
  uint64_t v127 = v33;
  uint64_t v125 = v32;
  uint64_t v126 = (uint64_t *)v31;
  uint64_t v114 = v28;
  uint64_t v115 = a3;
  uint64_t v116 = a2;
  uint64_t v14 = (uint64_t *)MEMORY[0x263F8EE78];
  uint64_t v121 = v35;
  uint64_t v134 = v23;
  if (v26)
  {
    uint64_t v143 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C98(0, v26, 0);
    uint64_t v37 = 72;
    uint64_t v14 = (uint64_t *)v143;
    do
    {
      uint64_t v38 = *(void *)&v5[v37];
      unint64_t v16 = v38 + 2;
      if (__OFADD__(v38, 2))
      {
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
      uint64_t v143 = (uint64_t)v14;
      unint64_t v40 = v14[2];
      unint64_t v39 = v14[3];
      int64_t v15 = v40 + 1;
      if (v40 >= v39 >> 1)
      {
        sub_220826C98((char *)(v39 > 1), v40 + 1, 1);
        uint64_t v14 = (uint64_t *)v143;
      }
      uint64_t v14[2] = v15;
      v14[v40 + 4] = v16;
      v37 += 48;
      --v26;
      a2 = v136;
    }
    while (v26);
    swift_bridgeObjectRelease();
    unint64_t v16 = v122;
    uint64_t v35 = v121;
    uint64_t v23 = v134;
  }
  else
  {
    a2 = v136;
  }
  uint64_t v141 = 0;
  unint64_t v142 = 0xE000000000000000;
  unint64_t v118 = v14;
  uint64_t v14 = (uint64_t *)sub_220933A90(qword_26D220EE0, (uint64_t)v14, 9278946, 0xA300000000000000, v35);
  int64_t v15 = v41;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  uint64_t v141 = v14;
  unint64_t v142 = v15;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_22093E660();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v42, 1)) {
    goto LABEL_121;
  }
  uint64_t v111 = v42 - 1;
  int64_t v43 = *((void *)v5 + 2);
  unint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v135 = v5;
  uint64_t v133 = a4;
  if (v43)
  {
    unint64_t v140 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C78(0, v43, 0);
    unint64_t v4 = v140;
    unint64_t v44 = (uint64_t **)(v5 + 72);
    do
    {
      unint64_t v16 = (unint64_t)*(v44 - 5);
      int64_t v15 = (int64_t)*(v44 - 4);
      a2 = (uint64_t)*(v44 - 2);
      uint64_t v14 = *v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v14 >= sub_22093E660())
      {
        uint64_t v45 = sub_22093E660();
        if (__OFSUB__(v14, v45)) {
          goto LABEL_116;
        }
        MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v14 - v45);
        uint64_t v143 = v16;
        unint64_t v144 = v15;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a4 = v133;
        uint64_t v5 = v135;
        swift_bridgeObjectRelease();
        unint64_t v16 = v143;
        int64_t v15 = v144;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      unint64_t v46 = v4;
      unint64_t v140 = v4;
      unint64_t v48 = *(void *)(v4 + 16);
      unint64_t v47 = *(void *)(v4 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_220826C78((char *)(v47 > 1), v48 + 1, 1);
        unint64_t v46 = v140;
      }
      v44 += 6;
      *(void *)(v46 + 16) = v48 + 1;
      unint64_t v4 = v46;
      unint64_t v49 = v46 + 16 * v48;
      *(void *)(v49 + 32) = v16;
      *(void *)(v49 + 40) = v15;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    unint64_t v16 = v122;
    uint64_t v23 = v134;
    a2 = v136;
  }
  if (!a4) {
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v26 = (int64_t)v126;
  uint64_t v14 = v126;
  int64_t v15 = a4;
  if (v127 < sub_22093E660())
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_36;
    }
    goto LABEL_125;
  }
  uint64_t v50 = sub_22093E660();
  if (!__OFSUB__(v127, v50))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000, v127 - v50);
    uint64_t v143 = v26;
    unint64_t v144 = a4;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t *)v143;
    int64_t v15 = v144;
    goto LABEL_35;
  }
  while (2)
  {
    __break(1u);
LABEL_133:
    int64_t v26 = (int64_t)sub_22081B71C(0, *(void *)(v26 + 16) + 1, 1, (char *)v26);
LABEL_59:
    unint64_t v67 = *(void *)(v26 + 16);
    unint64_t v66 = *(void *)(v26 + 24);
    if (v67 >= v66 >> 1) {
      int64_t v26 = (int64_t)sub_22081B71C((char *)(v66 > 1), v67 + 1, 1, (char *)v26);
    }
    *(void *)(v26 + 16) = v67 + 1;
    int64_t v68 = v26 + 16 * v67;
    *(void *)(v68 + 32) = v15;
    *(void *)(v68 + 40) = v23;
LABEL_62:
    uint64_t v143 = v26;
    sub_22093E440();
    swift_bridgeObjectRelease();
    uint64_t v143 = 32;
    unint64_t v144 = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v143 = 8623330;
    unint64_t v144 = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = v121;
    while (1)
    {
      int64_t v15 = sub_220933A90(qword_26D220F40, (uint64_t)v118, 9278946, 0xA300000000000000, v56);
      unint64_t v16 = v69;
      swift_arrayDestroy();
      uint64_t v14 = (uint64_t *)&v141;
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      unint64_t v70 = (v138 >> 1) - v139;
      if (__OFSUB__(v138 >> 1, v139)) {
        goto LABEL_122;
      }
      if ((v70 & 0x8000000000000000) != 0) {
        goto LABEL_123;
      }
      int64_t v132 = (v138 >> 1) - v139;
      if (v70)
      {
        unint64_t v4 = 0;
        uint64_t v123 = a2 + 32;
        int64_t v71 = *((void *)v5 + 2);
        uint64_t v72 = 8819938;
        uint64_t v129 = 8557794;
        if (!v121) {
          uint64_t v72 = 8557794;
        }
        uint64_t v128 = v72;
        int64_t v73 = v132;
        uint64_t v124 = v5 + 72;
        unint64_t v138 = v71;
        while (v4 != v73)
        {
          if (v71)
          {
            unint64_t v140 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            uint64_t v14 = (uint64_t *)&v140;
            sub_220826C78(0, v71, 0);
            uint64_t v75 = v140;
            long long v76 = (uint64_t **)v124;
            uint64_t v5 = (char *)v71;
            unint64_t v137 = v4;
            do
            {
              a2 = (uint64_t)*(v76 - 1);
              if (v4 >= *(void *)(a2 + 16))
              {
                __break(1u);
LABEL_113:
                __break(1u);
                goto LABEL_114;
              }
              uint64_t v139 = v75;
              a4 = (uint64_t)*(v76 - 2);
              uint64_t v14 = *v76;
              unint64_t v77 = a2 + 16 * v4;
              uint64_t v78 = *(void *)(v77 + 32);
              int64_t v15 = *(void *)(v77 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((uint64_t)v14 >= sub_22093E660())
              {
                uint64_t v79 = sub_22093E660();
                if (__OFSUB__(v14, v79)) {
                  goto LABEL_113;
                }
                MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v14 - v79);
                uint64_t v143 = v78;
                unint64_t v144 = v15;
                swift_bridgeObjectRetain();
                uint64_t v14 = &v143;
                unint64_t v4 = v137;
                sub_22093E6C0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v78 = v143;
                int64_t v15 = v144;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v75 = v139;
              unint64_t v140 = v139;
              unint64_t v16 = *(void *)(v139 + 16);
              unint64_t v80 = *(void *)(v139 + 24);
              if (v16 >= v80 >> 1)
              {
                uint64_t v14 = (uint64_t *)&v140;
                sub_220826C78((char *)(v80 > 1), v16 + 1, 1);
                uint64_t v75 = v140;
              }
              *(void *)(v75 + 16) = v16 + 1;
              unint64_t v81 = v75 + 16 * v16;
              *(void *)(v81 + 32) = v78;
              *(void *)(v81 + 40) = v15;
              v76 += 6;
              --v5;
              int64_t v71 = v138;
            }
            while (v5);
            uint64_t v5 = v135;
            uint64_t v82 = (char *)v75;
            swift_bridgeObjectRelease();
            uint64_t v83 = v82;
            a4 = v133;
            a2 = v136;
            if (v133) {
              goto LABEL_85;
            }
          }
          else
          {
            uint64_t v83 = (char *)MEMORY[0x263F8EE78];
            if (a4)
            {
LABEL_85:
              if (v4 >= *(void *)(a2 + 16)) {
                goto LABEL_117;
              }
              uint64_t v84 = a4;
              a4 = (uint64_t)v83;
              uint64_t v85 = (uint64_t **)(v123 + 16 * v4);
              uint64_t v14 = *v85;
              unint64_t v86 = (unint64_t)v85[1];
              uint64_t v5 = (char *)v84;
              int64_t v15 = v127;
              sub_2208B888C((uint64_t)v126, v84);
              swift_bridgeObjectRetain();
              if (v15 >= sub_22093E660())
              {
                uint64_t v88 = sub_22093E660();
                if (__OFSUB__(v15, v88)) {
                  goto LABEL_119;
                }
                MEMORY[0x223C69E50](32, 0xE100000000000000, v15 - v88);
                uint64_t v143 = (uint64_t)v14;
                unint64_t v144 = v86;
                swift_bridgeObjectRetain();
                sub_22093E6C0();
                swift_bridgeObjectRelease();
                uint64_t v14 = (uint64_t *)v143;
                unint64_t v87 = v144;
              }
              else
              {
                swift_bridgeObjectRetain();
                unint64_t v87 = v86;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (swift_isUniquelyReferenced_nonNull_native()) {
                uint64_t v83 = (char *)a4;
              }
              else {
                uint64_t v83 = sub_22081B71C(0, *(void *)(a4 + 16) + 1, 1, (char *)a4);
              }
              unint64_t v90 = *((void *)v83 + 2);
              unint64_t v89 = *((void *)v83 + 3);
              a4 = (uint64_t)v5;
              if (v90 >= v89 >> 1) {
                uint64_t v83 = sub_22081B71C((char *)(v89 > 1), v90 + 1, 1, v83);
              }
              *((void *)v83 + 2) = v90 + 1;
              uint64_t v74 = &v83[16 * v90];
              *((void *)v74 + 4) = v14;
              *((void *)v74 + 5) = v87;
              uint64_t v5 = v135;
            }
          }
          ++v4;
          uint64_t v143 = (uint64_t)v83;
          unint64_t v16 = (unint64_t)v83;
          sub_22093E440();
          swift_bridgeObjectRelease();
          uint64_t v143 = 32;
          unint64_t v144 = 0xE100000000000000;
          sub_22093E6C0();
          swift_bridgeObjectRetain();
          sub_22093E6C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v143 = v129;
          unint64_t v144 = 0xA300000000000000;
          sub_22093E6C0();
          swift_bridgeObjectRetain();
          sub_22093E6C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_22093E6C0();
          int64_t v15 = v144;
          uint64_t v14 = (uint64_t *)&v141;
          sub_22093E6C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v73 = v132;
          if (v4 == v132) {
            goto LABEL_95;
          }
        }
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
LABEL_95:
      sub_2208B883C((uint64_t)v126, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B5B8(v117, (uint64_t)&v143);
      uint64_t v91 = v145;
      uint64_t v92 = v146;
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(&v143, v145);
      int64_t v15 = *(void *)(v92 + 8);
      uint64_t v23 = v15 + 48;
      unint64_t v16 = *(void *)(v15 + 48);
      a2 = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a4 = v114;
      swift_bridgeObjectRetain();
      int64_t v26 = ((uint64_t (*)(uint64_t, int64_t))v16)(v91, v15);
      sub_22080B0D8((uint64_t)&v143);
      if ((v26 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_124:
      __break(1u);
LABEL_125:
      unint64_t v4 = (unint64_t)sub_22081B71C(0, *(void *)(v4 + 16) + 1, 1, (char *)v4);
LABEL_36:
      unint64_t v52 = *(void *)(v4 + 16);
      unint64_t v51 = *(void *)(v4 + 24);
      if (v52 >= v51 >> 1) {
        unint64_t v4 = (unint64_t)sub_22081B71C((char *)(v51 > 1), v52 + 1, 1, (char *)v4);
      }
      *(void *)(v4 + 16) = v52 + 1;
      unint64_t v53 = v4 + 16 * v52;
      *(void *)(v53 + 32) = v14;
      *(void *)(v53 + 40) = v15;
LABEL_39:
      uint64_t v143 = v4;
      swift_bridgeObjectRetain();
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
      uint64_t v55 = sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
      uint64_t v131 = v54;
      uint64_t v130 = v55;
      sub_22093E440();
      unint64_t v112 = v4;
      swift_bridgeObjectRelease();
      uint64_t v143 = 32;
      unint64_t v144 = 0xE100000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v121;
      if (v121) {
        unint64_t v4 = 8885474;
      }
      else {
        unint64_t v4 = 8623330;
      }
      uint64_t v143 = 8623330;
      unint64_t v144 = 0xA300000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      unint64_t v137 = v4;
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v16 + 24) == 1)
      {
        unint64_t v16 = *((void *)v5 + 2);
        int64_t v26 = MEMORY[0x263F8EE78];
        if (v16)
        {
          unint64_t v140 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826C78(0, v16, 0);
          int64_t v26 = v140;
          uint64_t v57 = (uint64_t **)(v5 + 72);
          do
          {
            int64_t v15 = (int64_t)*(v57 - 3);
            uint64_t v5 = (char *)*(v57 - 2);
            a2 = (uint64_t)*(v57 - 1);
            uint64_t v14 = *v57;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v14 >= sub_22093E660())
            {
              uint64_t v58 = sub_22093E660();
              if (__OFSUB__(v14, v58)) {
                goto LABEL_118;
              }
              a4 = MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v14 - v58);
              unint64_t v4 = v59;
              uint64_t v143 = v15;
              unint64_t v144 = (unint64_t)v5;
              swift_bridgeObjectRetain();
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int64_t v15 = v143;
              uint64_t v5 = (char *)v144;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v140 = v26;
            unint64_t v61 = *(void *)(v26 + 16);
            unint64_t v60 = *(void *)(v26 + 24);
            if (v61 >= v60 >> 1)
            {
              sub_220826C78((char *)(v60 > 1), v61 + 1, 1);
              int64_t v26 = v140;
            }
            *(void *)(v26 + 16) = v61 + 1;
            int64_t v62 = v26 + 16 * v61;
            *(void *)(v62 + 32) = v15;
            *(void *)(v62 + 40) = v5;
            v57 += 6;
            --v16;
          }
          while (v16);
          uint64_t v5 = v135;
          swift_bridgeObjectRelease();
          a4 = v133;
          a2 = v136;
        }
        uint64_t v23 = v134;
        if (!a4) {
          goto LABEL_62;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v63 = v125;
        uint64_t v64 = sub_22093E660();
        uint64_t v65 = v127;
        if (v127 >= v64)
        {
          uint64_t result = sub_22093E660();
          if (!__OFSUB__(v65, result))
          {
            MEMORY[0x223C69E50](32, 0xE100000000000000, v65 - result);
            uint64_t v143 = v63;
            unint64_t v144 = v23;
            swift_bridgeObjectRetain();
            sub_22093E6C0();
            swift_bridgeObjectRelease();
            int64_t v15 = v143;
            uint64_t v23 = v144;
            goto LABEL_58;
          }
          goto LABEL_136;
        }
        swift_bridgeObjectRetain();
        int64_t v15 = v63;
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_133;
        }
        goto LABEL_59;
      }
    }
    char v93 = 2 * (v26 == 0);
    int64_t v15 = sub_2208EE804(0, v26, v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v26, v93);
    if (v132 >= v15)
    {
      unint64_t v103 = v122;
      sub_220933A90(qword_26D221060, (uint64_t)v118, 9213410, 0xA300000000000000, v121);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    uint64_t v94 = v111 - 2;
    if (__OFSUB__(v111, 2)) {
      goto LABEL_129;
    }
    uint64_t v95 = v111 - 4;
    if (__OFSUB__(v94, 2))
    {
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      continue;
    }
    break;
  }
  unint64_t v96 = sub_22087EC94(v111 - 4, 3026478, 0xE300000000000000);
  unint64_t v98 = v97;
  if (v95 < sub_22093E660()) {
    goto LABEL_102;
  }
  uint64_t result = sub_22093E660();
  if (__OFSUB__(v95, result))
  {
    __break(1u);
    goto LABEL_135;
  }
  MEMORY[0x223C69E50](32, 0xE100000000000000, v95 - result);
  uint64_t v143 = v96;
  unint64_t v144 = v98;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_102:
  uint64_t v143 = 32;
  unint64_t v144 = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v100 = v143;
  unint64_t v99 = v144;
  unint64_t v4 = (unint64_t)v118;
  sub_220933A90(qword_26D220FA0, (uint64_t)v118, 9278946, 0xA300000000000000, v121);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (v94 >= sub_22093E660())
  {
    uint64_t result = sub_22093E660();
    if (!__OFSUB__(v94, result))
    {
      MEMORY[0x223C69E50](32, 0xE100000000000000, v94 - result);
      uint64_t v143 = v100;
      unint64_t v144 = v99;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return result;
  }
LABEL_105:
  uint64_t v143 = 8885474;
  unint64_t v144 = 0xA300000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_220944FB0;
  *(void *)(inited + 32) = v94;
  unint64_t v102 = v122;
  sub_220933A90(qword_26D221000, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  unint64_t v103 = v102;
LABEL_107:
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v103 + 26) == 1)
  {
    sub_22080B5B8(v117, (uint64_t)&v143);
    uint64_t v104 = v145;
    uint64_t v105 = v146;
    __swift_project_boxed_opaque_existential_1(&v143, v145);
    int64_t v15 = *(void *)(v105 + 8);
    uint64_t v23 = v15 + 48;
    uint64_t v106 = *(uint64_t (**)(uint64_t, int64_t))(v15 + 48);
    a2 = v116;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4 = v114;
    swift_bridgeObjectRetain();
    int64_t v26 = v106(v104, v15);
    sub_22080B0D8((uint64_t)&v143);
    if (v26 < 0) {
      goto LABEL_131;
    }
    char v107 = 2 * (v26 == 0);
    uint64_t v108 = sub_2208EE804(0, v26, v107);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(0, v26, v107);
    uint64_t v143 = sub_2208B7BC4(v108, v119);
    unint64_t v144 = v109;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_2208946CC(v120);
  }
  else
  {
    sub_2208946CC(v120);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v141;
}

uint64_t sub_2208B192C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t)v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(*(void *)v1 + 16);
  if (!v6) {
    return 0;
  }
  v99[1] = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  int v9 = *(unsigned __int8 *)(v1 + 40);
  sub_220831F30(v7, v8, *(unsigned char *)(v1 + 40));
  sub_220831F30(v7, v8, v9);
  sub_22080B6B4(v7, v8, v9);
  uint64_t v10 = sub_2208EE720(v7, v8, v9);
  uint64_t v105 = v7;
  uint64_t v104 = v8;
  unsigned int v103 = v9;
  sub_22080B6B4(v7, v8, v9);
  int64_t v11 = sub_2208B4528(*(void *)(a1 + 16), v10);
  unint64_t v13 = v12;
  int64_t v15 = (char *)v14;
  int64_t v17 = v16;
  sub_2208B5BD8(v12, v14, v16, a1, v5);
  int64_t v101 = v11;
  unint64_t v126 = v17;
  uint64_t v102 = v5;
  uint64_t v100 = v1;
  char v18 = sub_2208B6998(v11, v13, (uint64_t)v15, v17, v5);
  int64_t v19 = *((void *)v18 + 2);
  uint64_t v108 = a1;
  if (v19 < v6 + *(unsigned __int8 *)(a1 + 25))
  {
    if (v19)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v20 = *((void *)v18 + 2);
        if (v20)
        {
LABEL_6:
          int64_t v19 = v20 - 1;
          uint64_t v21 = &v18[48 * v20 - 48];
          uint64_t v22 = *((void *)v21 + 4);
          uint64_t v5 = *((void *)v21 + 5);
          uint64_t v111 = *((void *)v21 + 6);
          uint64_t v121 = *((void *)v21 + 7);
          uint64_t v24 = *((void *)v21 + 8);
          uint64_t v23 = *((void *)v21 + 9);
          uint64_t v123 = v24;
          *((void *)v18 + 2) = v19;
          uint64_t v25 = v23 + 2;
          if (!__OFADD__(v23, 2)) {
            goto LABEL_11;
          }
          __break(1u);
          return 0;
        }
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
        goto LABEL_125;
      }
    }
    else
    {
      __break(1u);
    }
    char v18 = sub_22080AB48((uint64_t)v18);
    uint64_t v20 = *((void *)v18 + 2);
    if (v20) {
      goto LABEL_6;
    }
    goto LABEL_123;
  }
  uint64_t v25 = 0;
  uint64_t v22 = 0;
  uint64_t v5 = 0;
  uint64_t v111 = 0;
  uint64_t v121 = 0;
  uint64_t v123 = 0;
  uint64_t v23 = 0;
LABEL_11:
  uint64_t v113 = v23;
  unint64_t v112 = (uint64_t *)v22;
  int64_t v27 = (uint64_t *)MEMORY[0x263F8EE78];
  uint64_t v107 = v25;
  uint64_t v122 = v5;
  if (v19)
  {
    uint64_t v130 = (uint64_t *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C98(0, v19, 0);
    uint64_t v28 = 72;
    int64_t v27 = v130;
    do
    {
      uint64_t v29 = *(void *)&v18[v28];
      a1 = v29 + 2;
      if (__OFADD__(v29, 2))
      {
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      uint64_t v130 = v27;
      unint64_t v31 = v27[2];
      unint64_t v30 = v27[3];
      int64_t v6 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_220826C98((char *)(v30 > 1), v31 + 1, 1);
        int64_t v27 = v130;
      }
      v27[2] = v6;
      v27[v31 + 4] = a1;
      v28 += 48;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v25 = v107;
    uint64_t v5 = v122;
  }
  uint64_t v130 = 0;
  unint64_t v131 = 0xE000000000000000;
  uint64_t v106 = v27;
  int64_t v27 = (uint64_t *)sub_220933A90(qword_26D220D00, (uint64_t)v27, 9278946, 0xA300000000000000, v25);
  int64_t v6 = v32;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  uint64_t v130 = v27;
  unint64_t v131 = v6;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_22093E660();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v33, 1)) {
    goto LABEL_117;
  }
  v99[0] = v33 - 1;
  int64_t v34 = *((void *)v18 + 2);
  uint64_t v120 = v18;
  uint64_t v125 = v15;
  if (v34)
  {
    uint64_t v129 = (char *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C78(0, v34, 0);
    uint64_t v124 = v129;
    uint64_t v35 = (uint64_t **)(v18 + 72);
    do
    {
      a1 = (uint64_t)*(v35 - 5);
      int64_t v6 = (int64_t)*(v35 - 4);
      int64_t v15 = (char *)*(v35 - 2);
      int64_t v27 = *v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v27 >= sub_22093E660())
      {
        uint64_t v36 = sub_22093E660();
        if (__OFSUB__(v27, v36)) {
          goto LABEL_113;
        }
        MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v27 - v36);
        uint64_t v127 = a1;
        unint64_t v128 = v6;
        swift_bridgeObjectRetain();
        char v18 = v120;
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v127;
        int64_t v6 = v128;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = v124;
      uint64_t v129 = v124;
      unint64_t v39 = *((void *)v124 + 2);
      unint64_t v38 = *((void *)v124 + 3);
      if (v39 >= v38 >> 1)
      {
        sub_220826C78((char *)(v38 > 1), v39 + 1, 1);
        uint64_t v37 = v129;
      }
      v35 += 6;
      *((void *)v37 + 2) = v39 + 1;
      uint64_t v124 = v37;
      unint64_t v40 = &v37[16 * v39];
      *((void *)v40 + 4) = a1;
      *((void *)v40 + 5) = v6;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v5 = v122;
    int64_t v41 = v124;
    int64_t v15 = v125;
    if (!v122) {
      goto LABEL_39;
    }
  }
  else
  {
    int64_t v41 = (char *)MEMORY[0x263F8EE78];
    if (!v5) {
      goto LABEL_39;
    }
  }
  a1 = (uint64_t)v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v19 = (int64_t)v112;
  int64_t v27 = v112;
  int64_t v6 = v5;
  if (v113 < sub_22093E660())
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      int64_t v41 = (char *)a1;
      goto LABEL_36;
    }
    goto LABEL_120;
  }
  uint64_t v42 = sub_22093E660();
  if (!__OFSUB__(v113, v42))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000, v113 - v42);
    uint64_t v127 = v19;
    unint64_t v128 = v5;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v27 = (uint64_t *)v127;
    int64_t v6 = v128;
    goto LABEL_34;
  }
  while (2)
  {
    __break(1u);
LABEL_127:
    int64_t v19 = (int64_t)sub_22081B71C(0, *(void *)(v19 + 16) + 1, 1, (char *)v19);
LABEL_59:
    unint64_t v60 = *(void *)(v19 + 16);
    unint64_t v59 = *(void *)(v19 + 24);
    if (v60 >= v59 >> 1) {
      int64_t v19 = (int64_t)sub_22081B71C((char *)(v59 > 1), v60 + 1, 1, (char *)v19);
    }
    *(void *)(v19 + 16) = v60 + 1;
    int64_t v61 = v19 + 16 * v60;
    *(void *)(v61 + 32) = v6;
    *(void *)(v61 + 40) = v5;
LABEL_62:
    uint64_t v127 = v19;
    sub_22093E440();
    swift_bridgeObjectRelease();
    uint64_t v127 = 32;
    unint64_t v128 = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v127 = 8623330;
    unint64_t v128 = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v107;
    while (1)
    {
      int64_t v6 = sub_220933A90(qword_26D220D60, (uint64_t)v106, 9278946, 0xA300000000000000, v48);
      a1 = v62;
      swift_arrayDestroy();
      int64_t v27 = (uint64_t *)&v130;
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      int64_t v63 = (v126 >> 1) - (void)v15;
      if (__OFSUB__(v126 >> 1, v15)) {
        goto LABEL_118;
      }
      if ((v63 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_119:
      __break(1u);
LABEL_120:
      int64_t v41 = sub_22081B71C(0, *(void *)(a1 + 16) + 1, 1, (char *)a1);
LABEL_36:
      unint64_t v44 = *((void *)v41 + 2);
      unint64_t v43 = *((void *)v41 + 3);
      if (v44 >= v43 >> 1) {
        int64_t v41 = sub_22081B71C((char *)(v43 > 1), v44 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v44 + 1;
      uint64_t v45 = &v41[16 * v44];
      *((void *)v45 + 4) = v27;
      *((void *)v45 + 5) = v6;
LABEL_39:
      uint64_t v127 = (uint64_t)v41;
      unint64_t v46 = v41;
      swift_bridgeObjectRetain();
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
      uint64_t v118 = sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
      uint64_t v119 = v47;
      sub_22093E440();
      uint64_t v124 = v46;
      swift_bridgeObjectRelease();
      uint64_t v127 = 32;
      unint64_t v128 = 0xE100000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v107;
      if (v107) {
        uint64_t v49 = 8885474;
      }
      else {
        uint64_t v49 = 8623330;
      }
      uint64_t v127 = 8623330;
      unint64_t v128 = 0xA300000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v108 + 24) == 1)
      {
        int64_t v6 = *((void *)v18 + 2);
        int64_t v19 = MEMORY[0x263F8EE78];
        if (v6)
        {
          uint64_t v117 = v49;
          uint64_t v129 = (char *)MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826C78(0, v6, 0);
          int64_t v19 = (int64_t)v129;
          uint64_t v50 = (uint64_t **)(v18 + 72);
          do
          {
            int64_t v15 = (char *)*(v50 - 4);
            a1 = (uint64_t)*(v50 - 3);
            unint64_t v51 = (unint64_t)*(v50 - 2);
            char v18 = (char *)*(v50 - 1);
            int64_t v27 = *v50;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v27 >= sub_22093E660())
            {
              uint64_t v52 = sub_22093E660();
              if (__OFSUB__(v27, v52)) {
                goto LABEL_115;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v27 - v52);
              uint64_t v127 = a1;
              unint64_t v128 = v51;
              swift_bridgeObjectRetain();
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 = v127;
              unint64_t v51 = v128;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v129 = (char *)v19;
            unint64_t v54 = *(void *)(v19 + 16);
            unint64_t v53 = *(void *)(v19 + 24);
            if (v54 >= v53 >> 1)
            {
              sub_220826C78((char *)(v53 > 1), v54 + 1, 1);
              int64_t v19 = (int64_t)v129;
            }
            *(void *)(v19 + 16) = v54 + 1;
            int64_t v55 = v19 + 16 * v54;
            *(void *)(v55 + 32) = a1;
            *(void *)(v55 + 40) = v51;
            v50 += 6;
            --v6;
          }
          while (v6);
          char v18 = v120;
          swift_bridgeObjectRelease();
          int64_t v15 = v125;
        }
        uint64_t v5 = v121;
        uint64_t v56 = v111;
        if (!v122) {
          goto LABEL_62;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_22093E660();
        uint64_t v58 = v113;
        if (v113 >= v57)
        {
          uint64_t result = sub_22093E660();
          if (!__OFSUB__(v58, result))
          {
            MEMORY[0x223C69E50](32, 0xE100000000000000, v58 - result);
            uint64_t v127 = v56;
            unint64_t v128 = v5;
            swift_bridgeObjectRetain();
            sub_22093E6C0();
            swift_bridgeObjectRelease();
            int64_t v6 = v127;
            uint64_t v5 = v128;
            goto LABEL_58;
          }
          goto LABEL_130;
        }
        swift_bridgeObjectRetain();
        int64_t v6 = v56;
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_127;
        }
        goto LABEL_59;
      }
    }
    uint64_t v64 = v122;
    if (v63)
    {
      uint64_t v65 = 0;
      uint64_t v109 = v123 + 32;
      int64_t v66 = *((void *)v18 + 2);
      uint64_t v67 = 8819938;
      uint64_t v115 = 8557794;
      if (!v107) {
        uint64_t v67 = 8557794;
      }
      uint64_t v114 = v67;
      uint64_t v110 = v18 + 72;
      int64_t v116 = v66;
      uint64_t v117 = (v126 >> 1) - (void)v15;
      while (v65 != (char *)v63)
      {
        if (v66)
        {
          uint64_t v129 = (char *)MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          int64_t v27 = (uint64_t *)&v129;
          sub_220826C78(0, v66, 0);
          int64_t v15 = v129;
          unint64_t v70 = (uint64_t **)v110;
          uint64_t v125 = v65;
          do
          {
            char v18 = (char *)*(v70 - 1);
            if ((unint64_t)v65 >= *((void *)v18 + 2))
            {
              __break(1u);
LABEL_110:
              __break(1u);
              goto LABEL_111;
            }
            unint64_t v126 = (unint64_t)v15;
            int64_t v6 = (int64_t)*(v70 - 4);
            int64_t v15 = (char *)*(v70 - 2);
            int64_t v27 = *v70;
            int64_t v71 = &v18[16 * (void)v65];
            uint64_t v72 = *((void *)v71 + 4);
            a1 = *((void *)v71 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v27 >= sub_22093E660())
            {
              uint64_t v73 = sub_22093E660();
              if (__OFSUB__(v27, v73)) {
                goto LABEL_110;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v27 - v73);
              uint64_t v127 = v72;
              unint64_t v128 = a1;
              swift_bridgeObjectRetain();
              int64_t v27 = &v127;
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v65 = v125;
              swift_bridgeObjectRelease();
              uint64_t v72 = v127;
              a1 = v128;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v15 = (char *)v126;
            uint64_t v129 = (char *)v126;
            unint64_t v75 = *(void *)(v126 + 16);
            unint64_t v74 = *(void *)(v126 + 24);
            int64_t v6 = v75 + 1;
            if (v75 >= v74 >> 1)
            {
              int64_t v27 = (uint64_t *)&v129;
              sub_220826C78((char *)(v74 > 1), v75 + 1, 1);
              int64_t v15 = v129;
            }
            *((void *)v15 + 2) = v6;
            long long v76 = &v15[16 * v75];
            *((void *)v76 + 4) = v72;
            *((void *)v76 + 5) = a1;
            v70 += 6;
            --v66;
          }
          while (v66);
          char v18 = v120;
          swift_bridgeObjectRelease();
          uint64_t v64 = v122;
          if (v122) {
            goto LABEL_85;
          }
        }
        else
        {
          int64_t v15 = (char *)MEMORY[0x263F8EE78];
          if (v64)
          {
LABEL_85:
            if ((unint64_t)v65 >= *(void *)(v123 + 16)) {
              goto LABEL_114;
            }
            unint64_t v77 = (uint64_t **)(v109 + 16 * (void)v65);
            int64_t v27 = *v77;
            int64_t v6 = (int64_t)v77[1];
            uint64_t v78 = v113;
            sub_2208B888C((uint64_t)v112, v64);
            swift_bridgeObjectRetain();
            if (v78 >= sub_22093E660())
            {
              uint64_t v80 = sub_22093E660();
              if (__OFSUB__(v78, v80)) {
                goto LABEL_116;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, v78 - v80);
              uint64_t v127 = (uint64_t)v27;
              unint64_t v128 = v6;
              swift_bridgeObjectRetain();
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              int64_t v27 = (uint64_t *)v127;
              unint64_t v79 = v128;
            }
            else
            {
              swift_bridgeObjectRetain();
              unint64_t v79 = v6;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int64_t v15 = sub_22081B71C(0, *((void *)v15 + 2) + 1, 1, v15);
            }
            unint64_t v82 = *((void *)v15 + 2);
            unint64_t v81 = *((void *)v15 + 3);
            if (v82 >= v81 >> 1) {
              int64_t v15 = sub_22081B71C((char *)(v81 > 1), v82 + 1, 1, v15);
            }
            *((void *)v15 + 2) = v82 + 1;
            int64_t v68 = &v15[16 * v82];
            *((void *)v68 + 4) = v27;
            *((void *)v68 + 5) = v79;
            uint64_t v64 = v122;
          }
        }
        ++v65;
        uint64_t v127 = (uint64_t)v15;
        sub_22093E440();
        a1 = v69;
        swift_bridgeObjectRelease();
        uint64_t v127 = 32;
        unint64_t v128 = 0xE100000000000000;
        sub_22093E6C0();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v127 = v115;
        unint64_t v128 = 0xA300000000000000;
        sub_22093E6C0();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        int64_t v6 = v128;
        int64_t v27 = (uint64_t *)&v130;
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v63 = v117;
        int64_t v66 = v116;
        if (v65 == (char *)v117) {
          goto LABEL_94;
        }
      }
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
LABEL_94:
    int64_t v83 = v63;
    sub_2208B883C((uint64_t)v112, v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v84 = v105;
    int64_t v6 = v104;
    uint64_t v5 = v103;
    int64_t v19 = sub_2208EE804(v105, v104, v103);
    sub_220831F30(v84, v6, v5);
    sub_22080B6B4(v84, v6, v5);
    if (v83 >= v19)
    {
      uint64_t v92 = v108;
      sub_220933A90(qword_26D220E80, (uint64_t)v106, 9213410, 0xA300000000000000, v107);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    int64_t v15 = (char *)(v99[0] - 2);
    if (__OFSUB__(v99[0], 2)) {
      goto LABEL_124;
    }
    uint64_t v85 = v99[0] - 4;
    if (__OFSUB__(v15, 2))
    {
LABEL_125:
      __break(1u);
      continue;
    }
    break;
  }
  unint64_t v86 = sub_22087EC94(v99[0] - 4, 3026478, 0xE300000000000000);
  unint64_t v88 = v87;
  if (v85 < sub_22093E660()) {
    goto LABEL_100;
  }
  uint64_t result = sub_22093E660();
  if (__OFSUB__(v85, result))
  {
    __break(1u);
    goto LABEL_129;
  }
  MEMORY[0x223C69E50](32, 0xE100000000000000, v85 - result);
  uint64_t v127 = v86;
  unint64_t v128 = v88;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_100:
  uint64_t v127 = 32;
  unint64_t v128 = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v90 = v127;
  unint64_t v89 = v128;
  sub_220933A90(qword_26D220DC0, (uint64_t)v106, 9278946, 0xA300000000000000, v107);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if ((uint64_t)v15 >= sub_22093E660())
  {
    uint64_t result = sub_22093E660();
    if (!__OFSUB__(v15, result))
    {
      MEMORY[0x223C69E50](32, 0xE100000000000000, &v15[-result]);
      uint64_t v127 = v90;
      unint64_t v128 = v89;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    return result;
  }
LABEL_103:
  uint64_t v127 = 8885474;
  unint64_t v128 = 0xA300000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_220944FB0;
  *(void *)(inited + 32) = v15;
  uint64_t v92 = v108;
  sub_220933A90(qword_26D220E20, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
LABEL_105:
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v92 + 26) == 1)
  {
    uint64_t v93 = sub_2208EE804(v105, v104, v103);
    uint64_t v94 = v100;
    sub_220833B58(v100);
    uint64_t v95 = swift_bridgeObjectRetain();
    uint64_t v96 = sub_22083196C(v95, v94);
    sub_220833BC0(v94);
    swift_bridgeObjectRelease();
    uint64_t v97 = *(void *)(v96 + 16);
    swift_bridgeObjectRelease();
    uint64_t v127 = sub_2208B7BC4(v93, v97);
    unint64_t v128 = v98;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_2208946CC(v102);
  }
  else
  {
    sub_2208946CC(v102);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v130;
}

uint64_t DataFrameProtocol.description(options:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  char *v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t **v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t **v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t **v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t **v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t inited;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  void v123[3];
  void (*v124)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t **v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  void (*v149)(void *__return_ptr, void, void);
  char *v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;

  uint64_t v7 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24);
  v10(&v153, a2, a3);
  int64_t v11 = v153;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (!v12) {
    return 0;
  }
  unint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32);
  uint64_t v125 = a3 + 32;
  uint64_t v124 = v13;
  v13(&v153, a2, a3);
  unint64_t v128 = v9;
  unint64_t v137 = v3;
  uint64_t v129 = a2;
  uint64_t v14 = v156;
  unint64_t v131 = a1;
  int64_t v15 = v157;
  char v149 = v10;
  unint64_t v16 = v158;
  sub_220831F30(v156, v157, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v14, v15, v16);
  int64_t v17 = sub_2208EE720(v14, v15, v16);
  char v18 = v131;
  sub_22080B6B4(v14, v15, v16);
  int64_t v19 = sub_2208B4528(*(void *)(v18 + 16), v17);
  uint64_t v148 = v20;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v153 = v19;
  BOOL v154 = v20;
  uint64_t v155 = v21;
  uint64_t v156 = v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19280);
  int64_t v26 = sub_2208502C4(&qword_267F19288, &qword_267F19280);
  int64_t v27 = (uint64_t)v128;
  uint64_t v147 = a3 + 24;
  uint64_t v28 = v129;
  sub_2208B5D98(v18, v129, a3, (uint64_t)v128);
  v123[2] = v19;
  uint64_t v153 = v19;
  BOOL v154 = v148;
  uint64_t v148 = v22;
  uint64_t v155 = v22;
  uint64_t v156 = v24;
  unint64_t v140 = v24;
  uint64_t v29 = (unint64_t)sub_2208B7338((uint64_t)&v153, v27, v28, v25, a3, v26);
  unint64_t v30 = *(void *)(v29 + 16);
  unint64_t v126 = a3;
  v149(&v153, v28, a3);
  unint64_t v31 = v153;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v32 = *(uint64_t **)(v31 + 16);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(unsigned __int8 *)(v18 + 25);
  int64_t v34 = __OFADD__(v32, v33);
  uint64_t v35 = (char *)v32 + v33;
  if (v34) {
    goto LABEL_118;
  }
  uint64_t v36 = *(void *)(v29 + 16);
  if (v30 < (uint64_t)v35)
  {
    if (v36)
    {
      unint64_t v31 = v29;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v37 = *(void *)(v29 + 16);
        if (v37)
        {
LABEL_7:
          uint64_t v36 = v37 - 1;
          unint64_t v38 = (char *)(v29 + 48 * (v37 - 1));
          unint64_t v39 = *((void *)v38 + 4);
          unint64_t v144 = *((void *)v38 + 5);
          unint64_t v40 = (uint64_t *)*((void *)v38 + 6);
          uint64_t v143 = *((void *)v38 + 7);
          uint64_t v42 = *((void *)v38 + 8);
          int64_t v41 = *((void *)v38 + 9);
          uint64_t v145 = v42;
          *(void *)(v29 + 16) = v36;
          unint64_t v43 = v41 + 2;
          if (!__OFADD__(v41, 2)) {
            goto LABEL_12;
          }
          __break(1u);
          return 0;
        }
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        goto LABEL_127;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v29 = (unint64_t)sub_22080AB48(v31);
    uint64_t v37 = *(void *)(v29 + 16);
    if (v37) {
      goto LABEL_7;
    }
    goto LABEL_125;
  }
  unint64_t v43 = 0;
  unint64_t v39 = 0;
  uint64_t v143 = 0;
  unint64_t v144 = 0;
  unint64_t v40 = 0;
  uint64_t v145 = 0;
  int64_t v41 = 0;
LABEL_12:
  uint64_t v136 = v41;
  uint64_t v134 = v40;
  uint64_t v135 = (uint64_t *)v39;
  uint64_t v146 = v29;
  int64_t v32 = (uint64_t *)MEMORY[0x263F8EE78];
  uint64_t v130 = v43;
  if (v36)
  {
    uint64_t v153 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C98(0, v36, 0);
    uint64_t v45 = v146;
    unint64_t v30 = 72;
    int64_t v32 = (uint64_t *)v153;
    do
    {
      unint64_t v46 = *(void *)(v45 + v30);
      uint64_t v22 = v46 + 2;
      if (__OFADD__(v46, 2))
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      uint64_t v153 = (uint64_t)v32;
      uint64_t v29 = v32[2];
      uint64_t v47 = v32[3];
      if (v29 >= v47 >> 1)
      {
        sub_220826C98((char *)(v47 > 1), v29 + 1, 1);
        uint64_t v45 = v146;
        int64_t v32 = (uint64_t *)v153;
      }
      v32[2] = v29 + 1;
      v32[v29 + 4] = v22;
      v30 += 48;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    char v18 = v131;
    unint64_t v43 = v130;
  }
  uint64_t v151 = 0;
  uint64_t v152 = 0xE000000000000000;
  uint64_t v127 = v32;
  int64_t v32 = (uint64_t *)sub_220933A90(qword_26D2214F8, (uint64_t)v32, 9278946, 0xA300000000000000, v43);
  unint64_t v30 = v48;
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  uint64_t v151 = v32;
  uint64_t v152 = v30;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_22093E660();
  swift_bridgeObjectRelease();
  uint64_t v50 = v144;
  if (__OFSUB__(v49, 1)) {
    goto LABEL_119;
  }
  v123[0] = v49 - 1;
  unint64_t v51 = v146;
  uint64_t v22 = *(void *)(v146 + 16);
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (v22)
  {
    uint64_t v150 = (char *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_220826C78(0, v22, 0);
    uint64_t v52 = v150;
    unint64_t v53 = (uint64_t **)(v51 + 72);
    do
    {
      unint64_t v54 = (uint64_t)*(v53 - 5);
      unint64_t v30 = (uint64_t)*(v53 - 4);
      uint64_t v29 = (unint64_t)*(v53 - 2);
      int64_t v32 = *v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((uint64_t)v32 >= sub_22093E660())
      {
        int64_t v55 = sub_22093E660();
        if (__OFSUB__(v32, v55)) {
          goto LABEL_114;
        }
        char v18 = MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v32 - v55);
        uint64_t v153 = v54;
        BOOL v154 = v30;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v54 = v153;
        unint64_t v30 = v154;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = v52;
      uint64_t v150 = v52;
      uint64_t v58 = *((void *)v52 + 2);
      uint64_t v57 = *((void *)v52 + 3);
      if (v58 >= v57 >> 1)
      {
        sub_220826C78((char *)(v57 > 1), v58 + 1, 1);
        uint64_t v56 = v150;
      }
      v53 += 6;
      *((void *)v56 + 2) = v58 + 1;
      uint64_t v52 = v56;
      unint64_t v59 = &v56[16 * v58];
      *((void *)v59 + 4) = v54;
      *((void *)v59 + 5) = v30;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v50 = v144;
    uint64_t v29 = MEMORY[0x263F8EE78];
    unint64_t v60 = v52;
  }
  else
  {
    unint64_t v60 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v22 = v131;
  if (!v50) {
    goto LABEL_40;
  }
  char v18 = (uint64_t)v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v61 = (uint64_t)v135;
  int64_t v32 = v135;
  unint64_t v30 = v50;
  if (v136 < sub_22093E660())
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      unint64_t v60 = (char *)v18;
      goto LABEL_37;
    }
    goto LABEL_122;
  }
  int64_t v32 = (uint64_t *)v61;
  uint64_t v62 = sub_22093E660();
  if (!__OFSUB__(v136, v62))
  {
    MEMORY[0x223C69E50](32, 0xE100000000000000, v136 - v62);
    uint64_t v153 = v61;
    BOOL v154 = v50;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v32 = (uint64_t *)v153;
    unint64_t v30 = v154;
    goto LABEL_35;
  }
  while (2)
  {
    __break(1u);
LABEL_129:
    uint64_t v22 = (unint64_t)sub_22081B71C(0, *(void *)(v22 + 16) + 1, 1, (char *)v22);
LABEL_60:
    uint64_t v29 = MEMORY[0x263F8EE78];
    int64_t v83 = *(void *)(v22 + 16);
    unint64_t v82 = *(void *)(v22 + 24);
    if (v83 >= v82 >> 1) {
      uint64_t v22 = (unint64_t)sub_22081B71C((char *)(v82 > 1), v83 + 1, 1, (char *)v22);
    }
    *(void *)(v22 + 16) = v83 + 1;
    uint64_t v84 = v22 + 16 * v83;
    *(void *)(v84 + 32) = v32;
    *(void *)(v84 + 40) = v30;
LABEL_63:
    uint64_t v153 = v22;
    sub_22093E440();
    swift_bridgeObjectRelease();
    uint64_t v153 = 32;
    BOOL v154 = 0xE100000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v153 = 8623330;
    BOOL v154 = 0xA300000000000000;
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = v130;
    while (1)
    {
      unint64_t v30 = sub_220933A90(qword_26D221558, (uint64_t)v127, 9278946, 0xA300000000000000, v69);
      uint64_t v22 = v85;
      swift_arrayDestroy();
      int64_t v32 = (uint64_t *)&v151;
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      unint64_t v86 = (v140 >> 1) - v148;
      if (__OFSUB__(v140 >> 1, v148)) {
        goto LABEL_120;
      }
      if ((v86 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_121:
      __break(1u);
LABEL_122:
      unint64_t v60 = sub_22081B71C(0, *(void *)(v18 + 16) + 1, 1, (char *)v18);
LABEL_37:
      uint64_t v64 = *((void *)v60 + 2);
      int64_t v63 = *((void *)v60 + 3);
      if (v64 >= v63 >> 1) {
        unint64_t v60 = sub_22081B71C((char *)(v63 > 1), v64 + 1, 1, v60);
      }
      *((void *)v60 + 2) = v64 + 1;
      uint64_t v65 = &v60[16 * v64];
      *((void *)v65 + 4) = v32;
      *((void *)v65 + 5) = v30;
LABEL_40:
      char v18 = 8623330;
      uint64_t v153 = (uint64_t)v60;
      int64_t v66 = v60;
      swift_bridgeObjectRetain();
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
      int64_t v68 = sub_2208502C4((unint64_t *)&qword_267F18BE8, &qword_267F18BE0);
      unint64_t v142 = v67;
      uint64_t v141 = v68;
      sub_22093E440();
      v123[1] = v66;
      swift_bridgeObjectRelease();
      uint64_t v153 = 32;
      BOOL v154 = 0xE100000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = v130;
      if (v130) {
        unint64_t v70 = 8885474;
      }
      else {
        unint64_t v70 = 8623330;
      }
      uint64_t v153 = 8623330;
      BOOL v154 = 0xA300000000000000;
      sub_22093E6C0();
      swift_bridgeObjectRetain();
      char v149 = (void (*)(void *__return_ptr, void, void))v70;
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v22 + 24) == 1)
      {
        int64_t v71 = v146;
        uint64_t v72 = *(void *)(v146 + 16);
        uint64_t v22 = MEMORY[0x263F8EE78];
        if (v72)
        {
          uint64_t v150 = (char *)MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_220826C78(0, v72, 0);
          uint64_t v22 = (unint64_t)v150;
          uint64_t v73 = (uint64_t **)(v71 + 72);
          do
          {
            uint64_t v29 = (unint64_t)*(v73 - 4);
            unint64_t v74 = (uint64_t)*(v73 - 3);
            char v18 = (uint64_t)*(v73 - 2);
            unint64_t v30 = (uint64_t)*(v73 - 1);
            int64_t v32 = *v73;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v32 >= sub_22093E660())
            {
              unint64_t v75 = sub_22093E660();
              if (__OFSUB__(v32, v75)) {
                goto LABEL_116;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v32 - v75);
              uint64_t v153 = v74;
              BOOL v154 = v18;
              swift_bridgeObjectRetain();
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v74 = v153;
              char v18 = v154;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v150 = (char *)v22;
            unint64_t v77 = *(void *)(v22 + 16);
            long long v76 = *(void *)(v22 + 24);
            if (v77 >= v76 >> 1)
            {
              sub_220826C78((char *)(v76 > 1), v77 + 1, 1);
              uint64_t v22 = (unint64_t)v150;
            }
            *(void *)(v22 + 16) = v77 + 1;
            uint64_t v78 = v22 + 16 * v77;
            *(void *)(v78 + 32) = v74;
            *(void *)(v78 + 40) = v18;
            v73 += 6;
            --v72;
          }
          while (v72);
          swift_bridgeObjectRelease();
          uint64_t v29 = MEMORY[0x263F8EE78];
        }
        if (!v144) {
          goto LABEL_63;
        }
        swift_bridgeObjectRetain();
        unint64_t v79 = v143;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int64_t v32 = v134;
        uint64_t v80 = sub_22093E660();
        unint64_t v81 = v136;
        if (v136 >= v80)
        {
          uint64_t result = sub_22093E660();
          if (!__OFSUB__(v81, result))
          {
            MEMORY[0x223C69E50](32, 0xE100000000000000, v81 - result);
            uint64_t v153 = (uint64_t)v32;
            BOOL v154 = v79;
            swift_bridgeObjectRetain();
            sub_22093E6C0();
            swift_bridgeObjectRelease();
            int64_t v32 = (uint64_t *)v153;
            unint64_t v30 = v154;
            goto LABEL_59;
          }
          goto LABEL_132;
        }
        swift_bridgeObjectRetain();
        unint64_t v30 = v79;
LABEL_59:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_129;
        }
        goto LABEL_60;
      }
    }
    unint64_t v87 = v144;
    if (v86)
    {
      unint64_t v88 = 0;
      int64_t v132 = v145 + 32;
      char v18 = *(void *)(v146 + 16);
      unint64_t v89 = 8819938;
      uint64_t v139 = 8557794;
      if (!v130) {
        unint64_t v89 = 8557794;
      }
      unint64_t v138 = v89;
      uint64_t v133 = (uint64_t **)(v146 + 72);
      unint64_t v140 = (v140 >> 1) - v148;
      uint64_t v148 = v18;
      while (v88 != v86)
      {
        if (v18)
        {
          uint64_t v150 = (char *)v29;
          swift_bridgeObjectRetain();
          int64_t v32 = (uint64_t *)&v150;
          sub_220826C78(0, v18, 0);
          uint64_t v91 = v150;
          uint64_t v92 = v133;
          uint64_t v93 = v18;
          uint64_t v147 = v88;
          do
          {
            uint64_t v29 = (unint64_t)*(v92 - 1);
            if (v88 >= *(void *)(v29 + 16))
            {
              __break(1u);
LABEL_111:
              __break(1u);
              goto LABEL_112;
            }
            char v149 = (void (*)(void *__return_ptr, void, void))v91;
            char v18 = (uint64_t)*(v92 - 4);
            int64_t v32 = *v92;
            uint64_t v94 = (char *)(v29 + 16 * v88);
            uint64_t v95 = *((void *)v94 + 4);
            unint64_t v30 = *((void *)v94 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((uint64_t)v32 >= sub_22093E660())
            {
              uint64_t v96 = sub_22093E660();
              if (__OFSUB__(v32, v96)) {
                goto LABEL_111;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v32 - v96);
              uint64_t v153 = v95;
              BOOL v154 = v30;
              swift_bridgeObjectRetain();
              int64_t v32 = &v153;
              unint64_t v88 = v147;
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v95 = v153;
              unint64_t v30 = v154;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = (char *)v149;
            uint64_t v150 = (char *)v149;
            uint64_t v22 = *((void *)v149 + 2);
            uint64_t v97 = *((void *)v149 + 3);
            if (v22 >= v97 >> 1)
            {
              int64_t v32 = (uint64_t *)&v150;
              sub_220826C78((char *)(v97 > 1), v22 + 1, 1);
              uint64_t v91 = v150;
            }
            *((void *)v91 + 2) = v22 + 1;
            unint64_t v98 = &v91[16 * v22];
            *((void *)v98 + 4) = v95;
            *((void *)v98 + 5) = v30;
            v92 += 6;
            --v93;
            char v18 = v148;
          }
          while (v93);
          swift_bridgeObjectRelease();
          unint64_t v87 = v144;
          uint64_t v29 = MEMORY[0x263F8EE78];
          if (v144) {
            goto LABEL_86;
          }
        }
        else
        {
          uint64_t v91 = (char *)v29;
          if (v87)
          {
LABEL_86:
            if (v88 >= *(void *)(v145 + 16)) {
              goto LABEL_115;
            }
            unint64_t v99 = (uint64_t **)(v132 + 16 * v88);
            int64_t v32 = *v99;
            uint64_t v100 = (unint64_t)v99[1];
            unint64_t v30 = v136;
            sub_2208B888C((uint64_t)v135, v87);
            swift_bridgeObjectRetain();
            if (v30 >= sub_22093E660())
            {
              uint64_t v102 = sub_22093E660();
              if (__OFSUB__(v30, v102)) {
                goto LABEL_117;
              }
              MEMORY[0x223C69E50](32, 0xE100000000000000, v30 - v102);
              uint64_t v22 = v103;
              uint64_t v153 = (uint64_t)v32;
              BOOL v154 = v100;
              swift_bridgeObjectRetain();
              sub_22093E6C0();
              swift_bridgeObjectRelease();
              int64_t v32 = (uint64_t *)v153;
              int64_t v101 = v154;
            }
            else
            {
              swift_bridgeObjectRetain();
              int64_t v101 = v100;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v91 = sub_22081B71C(0, *((void *)v91 + 2) + 1, 1, v91);
            }
            uint64_t v105 = *((void *)v91 + 2);
            uint64_t v104 = *((void *)v91 + 3);
            if (v105 >= v104 >> 1) {
              uint64_t v91 = sub_22081B71C((char *)(v104 > 1), v105 + 1, 1, v91);
            }
            *((void *)v91 + 2) = v105 + 1;
            uint64_t v90 = &v91[16 * v105];
            *((void *)v90 + 4) = v32;
            *((void *)v90 + 5) = v101;
            unint64_t v87 = v144;
          }
        }
        ++v88;
        uint64_t v153 = (uint64_t)v91;
        sub_22093E440();
        swift_bridgeObjectRelease();
        uint64_t v153 = 32;
        BOOL v154 = 0xE100000000000000;
        sub_22093E6C0();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v153 = v139;
        BOOL v154 = 0xA300000000000000;
        sub_22093E6C0();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        unint64_t v30 = v154;
        int64_t v32 = (uint64_t *)&v151;
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v86 = v140;
        if (v88 == v140) {
          goto LABEL_95;
        }
      }
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
LABEL_95:
    char v18 = v86;
    sub_2208B883C((uint64_t)v135, v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v124(&v153, v129, v126);
    int64_t v32 = (uint64_t *)v154;
    unint64_t v30 = v155;
    uint64_t v106 = v156;
    uint64_t v107 = v157;
    uint64_t v108 = v158;
    uint64_t v109 = sub_2208EE804(v156, v157, v158);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v106, v107, v108);
    if (v18 >= v109)
    {
      uint64_t v118 = v131;
      sub_220933A90(qword_26D221678, (uint64_t)v127, 9213410, 0xA300000000000000, v130);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    uint64_t v110 = v123[0] - 2;
    uint64_t v22 = v131;
    if (__OFSUB__(v123[0], 2)) {
      goto LABEL_126;
    }
    int64_t v32 = (uint64_t *)(v123[0] - 4);
    if (__OFSUB__(v110, 2))
    {
LABEL_127:
      __break(1u);
      continue;
    }
    break;
  }
  uint64_t v111 = sub_22087EC94(v123[0] - 4, 3026478, 0xE300000000000000);
  uint64_t v113 = v112;
  if ((uint64_t)v32 < sub_22093E660()) {
    goto LABEL_101;
  }
  uint64_t result = sub_22093E660();
  if (__OFSUB__(v32, result))
  {
    __break(1u);
    goto LABEL_131;
  }
  MEMORY[0x223C69E50](32, 0xE100000000000000, (char *)v32 - result);
  uint64_t v153 = v111;
  BOOL v154 = v113;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_101:
  uint64_t v153 = 32;
  BOOL v154 = 0xE100000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v115 = v153;
  uint64_t v114 = v154;
  sub_220933A90(qword_26D2215B8, (uint64_t)v127, 9278946, 0xA300000000000000, v130);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  if (v110 >= sub_22093E660())
  {
    uint64_t result = sub_22093E660();
    if (!__OFSUB__(v110, result))
    {
      MEMORY[0x223C69E50](32, 0xE100000000000000, v110 - result);
      uint64_t v153 = v115;
      BOOL v154 = v114;
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_104;
    }
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    return result;
  }
LABEL_104:
  uint64_t v153 = 8885474;
  BOOL v154 = 0xA300000000000000;
  sub_22093E6C0();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_220944FB0;
  *(void *)(inited + 32) = v110;
  uint64_t v117 = v131;
  sub_220933A90(qword_26D221618, inited, 9278946, 0xA300000000000000, 0);
  swift_arrayDestroy();
  swift_setDeallocating();
  uint64_t v118 = v117;
LABEL_106:
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v119 = (uint64_t)v128;
  if (*(unsigned char *)(v118 + 26) == 1)
  {
    uint64_t v120 = (*(uint64_t (**)(uint64_t))(v126 + 64))(v129);
    uint64_t v153 = sub_2208B7BC4(v120, v121);
    BOOL v154 = v122;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_2208946CC(v119);
  }
  else
  {
    sub_2208946CC((uint64_t)v128);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v151;
}

int64_t sub_2208B4528(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208B456C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_2208B8958(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_2208B88DC(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x2208B46D8);
  }
LABEL_16:
  uint64_t v14 = sub_22093DFE0();
  uint64_t v16 = v15;
  uint64_t result = sub_22080B88C(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t DataFrame.description.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v6 = v0[2];
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v7 = sub_2208B0224((unint64_t)v3, v4, v5, v6);
  sub_2208946CC((uint64_t)v3);
  return v7;
}

uint64_t DataFrame.debugDescription.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v6 = v0[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v7 = sub_2208B0224((unint64_t)v3, v4, v5, v6);
  sub_2208946CC((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DataFrame.customMirror.getter()
{
  uint64_t v1 = sub_22093F4B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v23 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[1];
  uint64_t v8 = v0[2];
  uint64_t v28 = *v0;
  uint64_t v6 = v28;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_220945110;
  strcpy((char *)(v9 + 32), "column names");
  *(unsigned char *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_22080A808(v6);
  swift_bridgeObjectRelease();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 72) = v11;
  strcpy((char *)(v9 + 80), "number of rows");
  *(unsigned char *)(v9 + 95) = -18;
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v21 = v2;
  uint64_t v22 = v1;
  sub_22080B5B8(v6 + 32, (uint64_t)v25);
  uint64_t v13 = v26;
  uint64_t v12 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(v13, v14);
  uint64_t result = sub_22080B0D8((uint64_t)v25);
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = v21;
    uint64_t v1 = v22;
    if (v16)
    {
      char v18 = 0;
LABEL_7:
      uint64_t v19 = sub_2208EE804(0, v16, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(0, v16, v18);
      *(void *)(v9 + 120) = MEMORY[0x263F8D6C8];
      *(void *)(v9 + 96) = v19;
      uint64_t v20 = sub_22093F4A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
      (*(void (**)(char *, void, uint64_t))(v2 + 104))(v24, *MEMORY[0x263F8E830], v1);
      return sub_22093F4C0();
    }
LABEL_6:
    uint64_t v16 = 0;
    char v18 = 2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208B4BF0()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v6 = v0[2];
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v7 = sub_2208B0224((unint64_t)v3, v4, v5, v6);
  sub_2208946CC((uint64_t)v3);
  return v7;
}

uint64_t sub_2208B4C98()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v6 = v0[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v7 = sub_2208B0224((unint64_t)v3, v4, v5, v6);
  sub_2208946CC((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t DataFrame.Slice.description.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[1];
  long long v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)v0 + 25);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v5 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  return v5;
}

uint64_t DataFrame.Slice.debugDescription.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[1];
  long long v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)v0 + 25);
  sub_220833B58((uint64_t)&v7);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v5 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)&v7);
  return v5;
}

uint64_t DataFrame.Slice.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = sub_22093F4B0();
  uint64_t v20 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  char v11 = *((unsigned char *)v1 + 40);
  uint64_t v23 = *v1;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  char v28 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_220945110;
  strcpy((char *)(v12 + 32), "column names");
  *(unsigned char *)(v12 + 45) = 0;
  *(_WORD *)(v12 + 46) = -5120;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v9, v10, v11);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_22080A808(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BE0);
  *(void *)(v12 + 48) = v14;
  *(void *)(v12 + 72) = v15;
  strcpy((char *)(v12 + 80), "number of rows");
  *(unsigned char *)(v12 + 95) = -18;
  uint64_t v16 = sub_2208EE804(v9, v10, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_220831F30(v9, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v9, v10, v11);
  *(void *)(v12 + 120) = MEMORY[0x263F8D6C8];
  *(void *)(v12 + 96) = v16;
  uint64_t v17 = sub_22093F4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F8E830], v21);
  return sub_22093F4C0();
}

uint64_t sub_2208B51D0()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[1];
  long long v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)v0 + 25);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v5 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  return v5;
}

uint64_t sub_2208B527C()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[1];
  long long v7 = *v0;
  v8[0] = v4;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)v0 + 25);
  sub_220833B58((uint64_t)&v7);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v5 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)&v7);
  return v5;
}

uint64_t DataFrame.Row.description.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = v0[2];
  uint64_t v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208B0090(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v8 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)v10);
  return v8;
}

uint64_t DataFrame.Row.description(options:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = (char *)v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208B0090(v5, (Swift::Int)v5, v3, v4, v6, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_2208B192C(a1);
  sub_220833BC0((uint64_t)v9);
  return v7;
}

uint64_t DataFrame.Row.debugDescription.getter()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = v0[2];
  uint64_t v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208B0090(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v8 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t DataFrame.Row.customMirror.getter()
{
  uint64_t v1 = sub_22093F4B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E50);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v0;
  uint64_t v8 = v0[1];
  uint64_t v11 = v0[2];
  uint64_t v10 = v0[3];
  v16[0] = v9;
  v16[1] = v8;
  void v16[2] = v11;
  v16[3] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18E58);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_220945110;
  *(void *)(v12 + 32) = 0x7865646E69;
  *(void *)(v12 + 40) = 0xE500000000000000;
  uint64_t v13 = MEMORY[0x263F8D6C8];
  *(void *)(v12 + 48) = v10;
  *(void *)(v12 + 72) = v13;
  *(void *)(v12 + 80) = 1702060386;
  *(void *)(v12 + 112) = v11;
  *(void *)(v12 + 120) = &type metadata for DataFrame;
  *(void *)(v12 + 88) = 0xE400000000000000;
  *(void *)(v12 + 96) = v9;
  *(void *)(v12 + 104) = v8;
  uint64_t v14 = sub_22093F4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8E830], v1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_22093F4C0();
}

uint64_t sub_2208B5818()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = v0[2];
  uint64_t v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208B0090(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v8 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)v10);
  return v8;
}

uint64_t sub_2208B5918()
{
  uint64_t v1 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = v0[2];
  uint64_t v6 = (char *)v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2208B0090(v6, (Swift::Int)v6, v4, v5, v7, (uint64_t)v10);
  FormattingOptions.init()((uint64_t)v3);
  uint64_t v8 = sub_2208B192C((uint64_t)v3);
  sub_2208946CC((uint64_t)v3);
  sub_220833BC0((uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2208B5A1C@<X0>(int64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8 = *(void *)(a5 + 16);
  if (v8)
  {
    sub_220859DBC(a1, a2, a3);
    if (v9)
    {
      uint64_t v11 = 0;
    }
    else
    {
      sub_22093F1A0();
      uint64_t v10 = sub_22093E660();
      swift_bridgeObjectRelease();
      if (*(void *)(a4 + 8) >= v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = *(void *)(a4 + 8);
      }
    }
    uint64_t result = sub_2208B8BD8(v8 - 1, a4);
    uint64_t v13 = v11 + 1;
    BOOL v14 = __OFADD__(v11, 1);
    if (!result) {
      goto LABEL_25;
    }
    if (v14)
    {
      __break(1u);
    }
    else if (!__OFADD__(v13, 2))
    {
      uint64_t v15 = v11 + 4;
      if (!__OFADD__(v11 + 3, 1))
      {
        BOOL v16 = __OFADD__(v15, result);
        uint64_t v17 = v15 + result;
        if (!v16)
        {
          BOOL v16 = __OFADD__(v17, 2);
          uint64_t v18 = v17 + 2;
          if (!v16)
          {
            BOOL v16 = __OFADD__(v18, 1);
            uint64_t v19 = v18 + 1;
            if (!v16)
            {
              BOOL v16 = __OFADD__(v19, 2);
              uint64_t v20 = v19 + 2;
              if (!v16)
              {
                BOOL v16 = __OFADD__(v20, 2);
                uint64_t v13 = v20 + 2;
                if (!v16)
                {
                  uint64_t result = v13 + 1;
                  if (!__OFADD__(v13, 1))
                  {
LABEL_31:
                    if (*(void *)a4 >= result) {
                      return sub_2208B8B74(a4, a6);
                    }
                    else {
                      return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(void *)(a4 + 8), *(void *)(a4 + 16), *(unsigned char *)(a4 + 24), a6);
                    }
                  }
                  __break(1u);
LABEL_25:
                  if (!v14)
                  {
                    BOOL v16 = __OFADD__(v13, 2);
                    uint64_t v21 = v13 + 2;
                    if (!v16)
                    {
                      BOOL v16 = __OFADD__(v21, 1);
                      uint64_t v22 = v21 + 1;
                      if (!v16)
                      {
                        BOOL v16 = __OFADD__(v22, 2);
                        uint64_t v23 = v22 + 2;
                        if (!v16)
                        {
                          BOOL v16 = __OFADD__(v23, 2);
                          uint64_t v24 = v23 + 2;
                          if (!v16)
                          {
                            uint64_t result = v24 + 1;
                            if (!__OFADD__(v24, 1)) {
                              goto LABEL_31;
                            }
LABEL_48:
                            __break(1u);
                            return result;
                          }
LABEL_47:
                          __break(1u);
                          goto LABEL_48;
                        }
LABEL_46:
                        __break(1u);
                        goto LABEL_47;
                      }
LABEL_45:
                      __break(1u);
                      goto LABEL_46;
                    }
LABEL_44:
                    __break(1u);
                    goto LABEL_45;
                  }
LABEL_43:
                  __break(1u);
                  goto LABEL_44;
                }
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
LABEL_41:
              __break(1u);
              goto LABEL_42;
            }
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    __break(1u);
    goto LABEL_37;
  }

  return sub_2208B8B74(a4, a6);
}

uint64_t sub_2208B5BD8@<X0>(int64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(*(void *)v5 + 16);
  if (v8)
  {
    sub_220859DBC(a1, a2, a3);
    if (v9)
    {
      uint64_t v11 = 0;
    }
    else
    {
      sub_22093F1A0();
      uint64_t v10 = sub_22093E660();
      swift_bridgeObjectRelease();
      if (*(void *)(a4 + 8) >= v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = *(void *)(a4 + 8);
      }
    }
    uint64_t result = sub_2208B8BD8(v8 - 1, a4);
    uint64_t v13 = v11 + 1;
    BOOL v14 = __OFADD__(v11, 1);
    if (!result) {
      goto LABEL_25;
    }
    if (v14)
    {
      __break(1u);
    }
    else if (!__OFADD__(v13, 2))
    {
      uint64_t v15 = v11 + 4;
      if (!__OFADD__(v11 + 3, 1))
      {
        BOOL v16 = __OFADD__(v15, result);
        uint64_t v17 = v15 + result;
        if (!v16)
        {
          BOOL v16 = __OFADD__(v17, 2);
          uint64_t v18 = v17 + 2;
          if (!v16)
          {
            BOOL v16 = __OFADD__(v18, 1);
            uint64_t v19 = v18 + 1;
            if (!v16)
            {
              BOOL v16 = __OFADD__(v19, 2);
              uint64_t v20 = v19 + 2;
              if (!v16)
              {
                BOOL v16 = __OFADD__(v20, 2);
                uint64_t v13 = v20 + 2;
                if (!v16)
                {
                  uint64_t result = v13 + 1;
                  if (!__OFADD__(v13, 1))
                  {
LABEL_31:
                    if (*(void *)a4 >= result) {
                      return sub_2208B8B74(a4, a5);
                    }
                    else {
                      return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(void *)(a4 + 8), *(void *)(a4 + 16), *(unsigned char *)(a4 + 24), a5);
                    }
                  }
                  __break(1u);
LABEL_25:
                  if (!v14)
                  {
                    BOOL v16 = __OFADD__(v13, 2);
                    uint64_t v21 = v13 + 2;
                    if (!v16)
                    {
                      BOOL v16 = __OFADD__(v21, 1);
                      uint64_t v22 = v21 + 1;
                      if (!v16)
                      {
                        BOOL v16 = __OFADD__(v22, 2);
                        uint64_t v23 = v22 + 2;
                        if (!v16)
                        {
                          BOOL v16 = __OFADD__(v23, 2);
                          uint64_t v24 = v23 + 2;
                          if (!v16)
                          {
                            uint64_t result = v24 + 1;
                            if (!__OFADD__(v24, 1)) {
                              goto LABEL_31;
                            }
LABEL_48:
                            __break(1u);
                            return result;
                          }
LABEL_47:
                          __break(1u);
                          goto LABEL_48;
                        }
LABEL_46:
                        __break(1u);
                        goto LABEL_47;
                      }
LABEL_45:
                      __break(1u);
                      goto LABEL_46;
                    }
LABEL_44:
                    __break(1u);
                    goto LABEL_45;
                  }
LABEL_43:
                  __break(1u);
                  goto LABEL_44;
                }
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
LABEL_41:
              __break(1u);
              goto LABEL_42;
            }
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    __break(1u);
    goto LABEL_37;
  }

  return sub_2208B8B74(a4, a5);
}

uint64_t sub_2208B5D98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t vars8;

  uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24);
  v8(&v24, a2, a3);
  char v9 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_17;
  }
  uint64_t v11 = a4;
  sub_22093E800();
  a4 = sub_2208B8D58(v24, v25, a1);
  v8(&v24, a2, a3);
  uint64_t v12 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = sub_2208B8DD4(v13 - 1, a1);
  uint64_t v15 = a4 + 1;
  BOOL v16 = __OFADD__(a4, 1);
  if (!result)
  {
    if (!v16)
    {
      if (!__OFADD__(v15, 2))
      {
        if (!__OFADD__(a4 + 3, 1))
        {
          if (!__OFADD__(a4 + 4, 2))
          {
            if (!__OFADD__(a4 + 6, 2))
            {
              uint64_t result = a4 + 9;
              if (!__OFADD__(a4 + 8, 1)) {
                goto LABEL_26;
              }
LABEL_43:
              __break(1u);
              return result;
            }
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v16)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (__OFADD__(v15, 2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v17 = a4 + 4;
  if (__OFADD__(a4 + 3, 1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v18 = __OFADD__(v17, result);
  uint64_t v19 = v17 + result;
  if (v18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v18 = __OFADD__(v19, 2);
  uint64_t v20 = v19 + 2;
  if (v18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v18 = __OFADD__(v20, 1);
  uint64_t v21 = v20 + 1;
  if (v18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v18 = __OFADD__(v21, 2);
  uint64_t v22 = v21 + 2;
  if (v18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v18 = __OFADD__(v22, 2);
  uint64_t v23 = v22 + 2;
  if (v18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = v23 + 1;
  if (!__OFADD__(v23, 1))
  {
LABEL_26:
    if (*(void *)a1 >= result) {
      return sub_2208B8B74(a1, v11);
    }
    else {
      return FormattingOptions.init(maximumLineWidth:maximumCellWidth:maximumRowCount:includesColumnTypes:)(result, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), v11);
    }
  }
  __break(1u);
LABEL_17:

  return sub_2208B8B74(a1, a4);
}

char *sub_2208B5FE0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v49)(void *__return_ptr, void *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  long long v70;
  long long v71;
  void v73[3];
  uint64_t v74;
  long long v75;
  uint64_t (**v76)(char *, uint64_t);
  void (**v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  long long v99;
  long long v100;
  uint64_t v101;
  uint64_t v102;
  void v103[5];
  void v104[4];
  void v105[5];
  uint64_t v106;
  long long v107;
  long long v108;
  long long v109;
  void v110[8];

  v73[1] = a7;
  v73[2] = a8;
  uint64_t v14 = 0;
  uint64_t v84 = sub_22093DF70();
  uint64_t v15 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  int64_t v83 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v17 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  unint64_t v81 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_22093E140();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v80 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v79 = type metadata accessor for FormattingOptions();
  uint64_t v21 = MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104[0] = a1;
  v104[1] = a2;
  v104[2] = a3;
  v104[3] = a4;
  unint64_t v74 = a6;
  unint64_t v23 = *(void *)(a6 + 16);
  LODWORD(v22) = *(unsigned __int8 *)(a5 + 25);
  uint64_t v91 = v23;
  if (v22 != 1)
  {
    unint64_t v98 = (char *)MEMORY[0x263F8EE78];
    unint64_t v31 = 1;
    goto LABEL_14;
  }
  uint64_t v97 = v15;
  MEMORY[0x270FA5388](v21);
  v73[-2] = a5;
  a3 = (uint64_t)sub_22092277C(sub_2208B8FAC, (uint64_t)&v73[-4], a1, a2, a3, a4);
  unint64_t v23 = 0xE000000000000000;
  a2 = sub_22093E660();
  uint64_t v24 = sub_220857548(a3);
  int64_t v25 = sub_22085992C(v24);
  char v27 = v26;
  swift_bridgeObjectRelease();
  if (v27) {
    int64_t v28 = 0;
  }
  else {
    int64_t v28 = v25;
  }
  if (v28 > a2) {
    a2 = v28;
  }
  uint64_t v29 = sub_22093E660();
  if (v29 > a2) {
    a2 = v29;
  }
  uint64_t v30 = sub_22081B600(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v32 = *((void *)v30 + 2);
  unint64_t v31 = *((void *)v30 + 3);
  unint64_t v98 = v30;
  a4 = v32 + 1;
  if (v32 >= v31 >> 1) {
    goto LABEL_73;
  }
  while (1)
  {
    uint64_t v15 = v97;
    uint64_t v33 = v98;
    *((void *)v98 + 2) = a4;
    int64_t v34 = &v33[48 * v32];
    *((void *)v34 + 4) = 0;
    *((void *)v34 + 5) = v23;
    *((void *)v34 + 6) = 0;
    *((void *)v34 + 7) = v23;
    *((void *)v34 + 8) = a3;
    *((void *)v34 + 9) = a2;
    uint64_t v35 = *((void *)v33 + 9);
    BOOL v36 = __OFADD__(v35, 2);
    uint64_t v37 = v35 + 2;
    if (v36) {
      break;
    }
    BOOL v36 = __OFADD__(v37, 1);
    unint64_t v31 = v37 + 1;
    if (v36) {
      goto LABEL_75;
    }
    unint64_t v23 = v91;
LABEL_14:
    unint64_t v32 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      unint64_t v86 = (uint64_t)&v99 + 8;
      unint64_t v87 = v74 + 32;
      uint64_t v85 = (long long *)((char *)&v107 + 8);
      unint64_t v89 = v23 - 1;
      uint64_t v90 = v103;
      long long v76 = (uint64_t (**)(char *, uint64_t))(v17 + 8);
      unint64_t v77 = (void (**)(char *, uint64_t))(v15 + 8);
      swift_bridgeObjectRetain();
      a2 = 0;
      unint64_t v31 = (unint64_t)&unk_220947000;
      unint64_t v75 = xmmword_220947180;
      uint64_t v94 = a5;
      BOOL v38 = v23 == 0;
      if (!v23)
      {
LABEL_16:
        uint64_t v108 = 0u;
        uint64_t v109 = 0u;
        a4 = v23;
        uint64_t v107 = 0u;
        goto LABEL_19;
      }
      while (1)
      {
        if (v38) {
          goto LABEL_70;
        }
        a4 = a2 + 1;
        a3 = v86;
        sub_22080B5B8(v87 + 40 * a2, v86);
        *(void *)&uint64_t v107 = a2;
        long long v39 = *(_OWORD *)(a3 + 16);
        unint64_t v40 = v85;
        *uint64_t v85 = *(_OWORD *)a3;
        v40[1] = v39;
        *((void *)v40 + 4) = *(void *)(a3 + 32);
LABEL_19:
        sub_2208B8A44((uint64_t)&v107, (uint64_t)&v102);
        if (!v103[3])
        {
          swift_bridgeObjectRelease();
          return v98;
        }
        a2 = v102;
        long long v41 = *((_OWORD *)v90 + 1);
        unint64_t v99 = *(_OWORD *)v90;
        uint64_t v100 = v41;
        unint64_t v31 = v90[4];
        int64_t v101 = v31;
        BOOL v36 = __OFSUB__(v23, v102);
        v23 -= v102;
        if (v36)
        {
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
          break;
        }
        unint64_t v31 = v23 - 1;
        if (__OFSUB__(v23, 1)) {
          goto LABEL_60;
        }
        if (v23 != 1)
        {
          if (*(unsigned char *)(a5 + 24))
          {
            *(void *)&uint64_t v107 = v23 - 1;
            sub_22093F1A0();
            uint64_t v17 = v42;
            a3 = sub_22093E660();
            swift_bridgeObjectRelease();
            uint64_t v43 = sub_22093E660();
            if (v43 <= a3) {
              unint64_t v31 = a3;
            }
            else {
              unint64_t v31 = v43;
            }
          }
          else
          {
            *(void *)&uint64_t v107 = v23 - 1;
            sub_22093F1A0();
            uint64_t v17 = v44;
            a3 = sub_22093E660();
            swift_bridgeObjectRelease();
            uint64_t v45 = sub_22093E660();
            unint64_t v31 = a3 + v45;
            if (__OFADD__(a3, v45)) {
              goto LABEL_71;
            }
          }
          if (*(void *)(a5 + 8) < (int64_t)v31) {
            unint64_t v31 = *(void *)(a5 + 8);
          }
        }
        BOOL v36 = __OFADD__(v31, 2);
        v31 += 2;
        if (v36) {
          goto LABEL_61;
        }
        BOOL v36 = __OFADD__(v31++, 1);
        if (v36) {
          goto LABEL_62;
        }
        unint64_t v46 = *(void *)a5 - v32;
        if (__OFSUB__(*(void *)a5, v32)) {
          goto LABEL_63;
        }
        if (a2 == v89) {
          unint64_t v31 = 0;
        }
        BOOL v36 = __OFSUB__(v46, v31);
        unint64_t v31 = v46 - v31;
        if (v36) {
          goto LABEL_64;
        }
        BOOL v36 = __OFSUB__(v31, 2);
        v31 -= 2;
        if (v36) {
          goto LABEL_65;
        }
        uint64_t v97 = v14;
        int64_t v47 = v31 - 1;
        if (__OFSUB__(v31, 1)) {
          goto LABEL_66;
        }
        unint64_t v88 = v23;
        uint64_t v95 = a4;
        uint64_t v96 = v32;
        uint64_t v48 = v101;
        __swift_project_boxed_opaque_existential_1(&v99, *((uint64_t *)&v100 + 1));
        uint64_t v49 = *(void (**)(void *__return_ptr, void *, uint64_t, uint64_t))(*(void *)(v48 + 8) + 112);
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19280);
        unint64_t v51 = v105;
        uint64_t v92 = sub_2208502C4(&qword_267F19288, &qword_267F19280);
        uint64_t v93 = v50;
        v49(v105, v104, a5, v50);
        uint64_t v17 = v105[1];
        unint64_t v32 = v105[3];
        a4 = v105[4];
        a5 = v106;
        if (v47 >= v106)
        {
          a3 = v105[2];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v98 + 2) != 1)
          {
            uint64_t v65 = v74;
            swift_bridgeObjectRelease();
            sub_2208B7DC8(v88, v94, v65, (unint64_t *)&v107);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_76;
            }
            goto LABEL_55;
          }
          uint64_t v52 = *((void *)&v100 + 1);
          unint64_t v88 = v101;
          __swift_project_boxed_opaque_existential_1(&v99, *((uint64_t *)&v100 + 1));
          unint64_t v53 = *(void *)(v94 + 8);
          unint64_t v54 = *(void *)(v94 + 16);
          if (v53 >= v47) {
            unint64_t v53 = v47;
          }
          int64_t v55 = *(unsigned char *)(v94 + 24);
          uint64_t v56 = (uint64_t)v78;
          *(_WORD *)(v78 + 25) = 257;
          *(void *)uint64_t v56 = v47;
          *(void *)(v56 + 8) = v53;
          *(void *)(v56 + 16) = v54;
          *(unsigned char *)(v56 + 24) = v55;
          sub_22093E130();
          sub_2208B8AAC();
          sub_22093DF00();
          sub_22093E130();
          sub_2208B8B00();
          uint64_t v57 = v81;
          sub_22093DF40();
          uint64_t v107 = v75;
          __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
          sub_2208502C4(&qword_267F192B0, &qword_267F18D20);
          uint64_t v58 = v83;
          sub_22093DF60();
          unint64_t v59 = v82;
          MEMORY[0x223C69670](v58, v82);
          (*v77)(v58, v84);
          unint64_t v60 = (*v76)(v57, v59);
          MEMORY[0x223C69630](v60);
          unint64_t v51 = v110;
          (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 + 8) + 112))(v110, v104, v56, v93, v92, v52);
          sub_2208946CC(v56);
          uint64_t v17 = v110[1];
          a3 = v110[2];
          unint64_t v32 = v110[3];
          a4 = v110[4];
          a5 = v110[5];
        }
        a2 = *v51;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v97;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v98 = sub_22081B600(0, *((void *)v98 + 2) + 1, 1, v98);
        }
        unint64_t v23 = *((void *)v98 + 2);
        uint64_t v62 = *((void *)v98 + 3);
        if (v23 >= v62 >> 1) {
          unint64_t v98 = sub_22081B600((char *)(v62 > 1), v23 + 1, 1, v98);
        }
        int64_t v63 = v98;
        *((void *)v98 + 2) = v23 + 1;
        uint64_t v64 = &v63[48 * v23];
        *((void *)v64 + 4) = a2;
        *((void *)v64 + 5) = v17;
        *((void *)v64 + 6) = a3;
        *((void *)v64 + 7) = v32;
        *((void *)v64 + 8) = a4;
        *((void *)v64 + 9) = a5;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v31 = a5 + 2;
        if (__OFADD__(a5, 2)) {
          goto LABEL_67;
        }
        BOOL v36 = __OFADD__(v31, 1);
        unint64_t v31 = a5 + 3;
        if (v36) {
          goto LABEL_68;
        }
        unint64_t v32 = v96 + v31;
        if (__OFADD__(v96, v31)) {
          goto LABEL_69;
        }
        sub_22080B0D8((uint64_t)&v99);
        a5 = v94;
        a2 = v95;
        unint64_t v23 = v91;
        BOOL v38 = v95 >= v91;
        if (v95 == v91) {
          goto LABEL_16;
        }
      }
    }
    __break(1u);
LABEL_73:
    unint64_t v98 = sub_22081B600((char *)(v31 > 1), a4, 1, v98);
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  unint64_t v98 = sub_22081B600(0, *((void *)v98 + 2) + 1, 1, v98);
LABEL_55:
  uint64_t v67 = *((void *)v98 + 2);
  int64_t v66 = *((void *)v98 + 3);
  if (v67 >= v66 >> 1) {
    unint64_t v98 = sub_22081B600((char *)(v66 > 1), v67 + 1, 1, v98);
  }
  int64_t v68 = v98;
  *((void *)v98 + 2) = v67 + 1;
  uint64_t v69 = &v68[48 * v67];
  unint64_t v70 = v107;
  int64_t v71 = v109;
  *((_OWORD *)v69 + 3) = v108;
  *((_OWORD *)v69 + 4) = v71;
  *((_OWORD *)v69 + 2) = v70;
  sub_22080B0D8((uint64_t)&v99);
  return v98;
}

char *sub_2208B6998(uint64_t a1, unint64_t a2, uint64_t a3, int64_t a4, uint64_t a5)
{
  void (*v45)(void *__return_ptr, void *, uint64_t, uint64_t);
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, unint64_t);
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  long long v65;
  long long v66;
  uint64_t v68;
  void *v69;
  long long v70;
  uint64_t (**v71)(char *, uint64_t);
  void (**v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  long long v95;
  long long v96;
  unint64_t v97;
  int64_t v98;
  void v99[5];
  void v100[4];
  void v101[5];
  int64_t v102;
  long long v103;
  long long v104;
  long long v105;
  void v106[6];
  void v107[3];

  uint64_t v11 = 0;
  unint64_t v79 = sub_22093DF70();
  uint64_t v93 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  uint64_t v92 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  long long v76 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22093E140();
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v75 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v74 = type metadata accessor for FormattingOptions();
  uint64_t v16 = MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100[0] = a1;
  v100[1] = a2;
  v100[2] = a3;
  v100[3] = a4;
  uint64_t v69 = v5;
  uint64_t v18 = *v5;
  v107[0] = v18;
  unint64_t v19 = *(void *)(v18 + 16);
  LODWORD(v17) = *(unsigned __int8 *)(a5 + 25);
  unint64_t v88 = a5;
  if (v17 != 1) {
    goto LABEL_15;
  }
  MEMORY[0x270FA5388](v16);
  *(&v68 - 2) = a5;
  a3 = (uint64_t)sub_22092277C(sub_2208B8B54, (uint64_t)(&v68 - 4), a1, a2, a3, a4);
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_22093E660();
  uint64_t v22 = sub_220857548(a3);
  int64_t v23 = sub_22085992C(v22);
  char v25 = v24;
  swift_bridgeObjectRelease();
  if (v25) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v23;
  }
  if (v26 <= v21) {
    a4 = v21;
  }
  else {
    a4 = v26;
  }
  uint64_t v27 = sub_22093E660();
  if (v27 > a4) {
    a4 = v27;
  }
  int64_t v28 = sub_22081B600(0, 1, 1, MEMORY[0x263F8EE78]);
  a2 = *((void *)v28 + 2);
  unint64_t v29 = *((void *)v28 + 3);
  uint64_t v94 = v28;
  a1 = a2 + 1;
  if (a2 >= v29 >> 1) {
    goto LABEL_75;
  }
  while (1)
  {
    uint64_t v30 = v94;
    *((void *)v94 + 2) = a1;
    unint64_t v31 = &v30[48 * a2];
    *((void *)v31 + 4) = 0;
    *((void *)v31 + 5) = v20;
    *((void *)v31 + 6) = 0;
    *((void *)v31 + 7) = v20;
    *((void *)v31 + 8) = a3;
    *((void *)v31 + 9) = a4;
    uint64_t v32 = *((void *)v30 + 9);
    BOOL v33 = __OFADD__(v32, 2);
    uint64_t v34 = v32 + 2;
    a5 = v88;
    if (v33) {
      break;
    }
    BOOL v33 = __OFADD__(v34, 1);
    unint64_t v29 = v34 + 1;
    if (v33)
    {
      __break(1u);
LABEL_15:
      uint64_t v94 = (char *)MEMORY[0x263F8EE78];
      unint64_t v29 = 1;
    }
    unint64_t v20 = v29 + 1;
    if (!__OFADD__(v29, 1))
    {
      unint64_t v81 = (uint64_t)&v95 + 8;
      unint64_t v82 = v18 + 32;
      uint64_t v80 = (long long *)((char *)&v103 + 8);
      unint64_t v86 = v19 - 1;
      unint64_t v87 = v99;
      int64_t v71 = (uint64_t (**)(char *, uint64_t))(v92 + 8);
      uint64_t v72 = (void (**)(char *, uint64_t))(v93 + 8);
      swift_bridgeObjectRetain();
      a4 = 0;
      unint64_t v29 = (unint64_t)&unk_220947000;
      unint64_t v70 = xmmword_220947180;
      uint64_t v85 = v19;
      BOOL v35 = v19 == 0;
      if (!v19)
      {
LABEL_18:
        uint64_t v104 = 0u;
        uint64_t v105 = 0u;
        a2 = v19;
        unsigned int v103 = 0u;
        goto LABEL_21;
      }
      while (1)
      {
        if (v35) {
          goto LABEL_72;
        }
        a2 = a4 + 1;
        a3 = v81;
        sub_22080B5B8(v82 + 40 * a4, v81);
        *(void *)&unsigned int v103 = a4;
        long long v36 = *(_OWORD *)(a3 + 16);
        uint64_t v37 = v80;
        *uint64_t v80 = *(_OWORD *)a3;
        v37[1] = v36;
        *((void *)v37 + 4) = *(void *)(a3 + 32);
LABEL_21:
        sub_2208B8A44((uint64_t)&v103, (uint64_t)&v98);
        if (!v99[3])
        {
          sub_220838B94((uint64_t)v107);
          return v94;
        }
        a4 = v98;
        long long v38 = *((_OWORD *)v87 + 1);
        uint64_t v95 = *(_OWORD *)v87;
        uint64_t v96 = v38;
        unint64_t v29 = v87[4];
        uint64_t v97 = v29;
        a1 = v19 - v98;
        if (__OFSUB__(v19, v98))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          break;
        }
        unint64_t v29 = a1 - 1;
        if (__OFSUB__(a1, 1)) {
          goto LABEL_62;
        }
        if (a1 != 1)
        {
          if (*(unsigned char *)(a5 + 24))
          {
            *(void *)&unsigned int v103 = a1 - 1;
            sub_22093F1A0();
            uint64_t v18 = v39;
            a3 = sub_22093E660();
            swift_bridgeObjectRelease();
            uint64_t v40 = sub_22093E660();
            if (v40 <= a3) {
              unint64_t v29 = a3;
            }
            else {
              unint64_t v29 = v40;
            }
          }
          else
          {
            *(void *)&unsigned int v103 = a1 - 1;
            sub_22093F1A0();
            uint64_t v18 = v41;
            a3 = sub_22093E660();
            swift_bridgeObjectRelease();
            uint64_t v42 = sub_22093E660();
            unint64_t v29 = a3 + v42;
            if (__OFADD__(a3, v42)) {
              goto LABEL_73;
            }
          }
          if (*(void *)(a5 + 8) < (int64_t)v29) {
            unint64_t v29 = *(void *)(a5 + 8);
          }
        }
        BOOL v33 = __OFADD__(v29, 2);
        v29 += 2;
        if (v33) {
          goto LABEL_63;
        }
        BOOL v33 = __OFADD__(v29++, 1);
        if (v33) {
          goto LABEL_64;
        }
        unint64_t v43 = *(void *)a5 - v20;
        if (__OFSUB__(*(void *)a5, v20)) {
          goto LABEL_65;
        }
        if (a4 == v86) {
          unint64_t v29 = 0;
        }
        BOOL v33 = __OFSUB__(v43, v29);
        unint64_t v29 = v43 - v29;
        if (v33) {
          goto LABEL_66;
        }
        BOOL v33 = __OFSUB__(v29, 2);
        v29 -= 2;
        if (v33) {
          goto LABEL_67;
        }
        uint64_t v84 = v19 - a4;
        a1 = v29 - 1;
        if (__OFSUB__(v29, 1)) {
          goto LABEL_68;
        }
        uint64_t v91 = a2;
        uint64_t v92 = v11;
        uint64_t v93 = v20;
        unint64_t v44 = v97;
        __swift_project_boxed_opaque_existential_1(&v95, *((uint64_t *)&v96 + 1));
        uint64_t v45 = *(void (**)(void *__return_ptr, void *, uint64_t, uint64_t))(*(void *)(v44 + 8) + 112);
        unint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19280);
        int64_t v47 = v101;
        unint64_t v89 = sub_2208502C4(&qword_267F19288, &qword_267F19280);
        uint64_t v90 = v46;
        v45(v101, v100, a5, v46);
        uint64_t v18 = v101[1];
        unint64_t v19 = v101[3];
        a2 = v101[4];
        a4 = v102;
        if (a1 >= v102)
        {
          a3 = v101[2];
          a5 = v88;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v94 + 2) != 1)
          {
            sub_220838B94((uint64_t)v107);
            sub_2208B81CC(v88, (unint64_t *)&v103);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_77;
            }
            goto LABEL_57;
          }
          uint64_t v48 = v97;
          uint64_t v84 = *((void *)&v96 + 1);
          int64_t v83 = __swift_project_boxed_opaque_existential_1(&v95, *((uint64_t *)&v96 + 1));
          a5 = v88;
          uint64_t v49 = *(void *)(v88 + 8);
          uint64_t v50 = *(void *)(v88 + 16);
          if (v49 >= a1) {
            uint64_t v49 = a1;
          }
          unint64_t v51 = *(unsigned char *)(v88 + 24);
          uint64_t v52 = (uint64_t)v73;
          *(_WORD *)(v73 + 25) = 257;
          *(void *)uint64_t v52 = a1;
          *(void *)(v52 + 8) = v49;
          *(void *)(v52 + 16) = v50;
          *(unsigned char *)(v52 + 24) = v51;
          sub_22093E130();
          sub_2208B8AAC();
          sub_22093DF00();
          sub_22093E130();
          sub_2208B8B00();
          unint64_t v53 = v76;
          sub_22093DF40();
          unsigned int v103 = v70;
          __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
          sub_2208502C4(&qword_267F192B0, &qword_267F18D20);
          unint64_t v54 = v78;
          sub_22093DF60();
          int64_t v55 = v77;
          MEMORY[0x223C69670](v54, v77);
          (*v72)(v54, v79);
          uint64_t v56 = (*v71)(v53, v55);
          MEMORY[0x223C69630](v56);
          uint64_t v57 = *(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, unint64_t))(*(void *)(v48 + 8) + 112);
          int64_t v47 = v106;
          v57(v106, v100, v52, v90, v89, v84);
          sub_2208946CC(v52);
          uint64_t v18 = v106[1];
          a3 = v106[2];
          unint64_t v19 = v106[3];
          a2 = v106[4];
          a4 = v106[5];
        }
        unint64_t v20 = *v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v94 = sub_22081B600(0, *((void *)v94 + 2) + 1, 1, v94);
        }
        a1 = *((void *)v94 + 2);
        uint64_t v58 = *((void *)v94 + 3);
        uint64_t v11 = a1 + 1;
        if (a1 >= v58 >> 1) {
          uint64_t v94 = sub_22081B600((char *)(v58 > 1), a1 + 1, 1, v94);
        }
        unint64_t v59 = v94;
        *((void *)v94 + 2) = v11;
        unint64_t v60 = &v59[48 * a1];
        *((void *)v60 + 4) = v20;
        *((void *)v60 + 5) = v18;
        *((void *)v60 + 6) = a3;
        *((void *)v60 + 7) = v19;
        *((void *)v60 + 8) = a2;
        *((void *)v60 + 9) = a4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = a4 + 2;
        if (__OFADD__(a4, 2)) {
          goto LABEL_69;
        }
        BOOL v33 = __OFADD__(v29, 1);
        unint64_t v29 = a4 + 3;
        if (v33) {
          goto LABEL_70;
        }
        unint64_t v20 = v93 + v29;
        if (__OFADD__(v93, v29)) {
          goto LABEL_71;
        }
        sub_22080B0D8((uint64_t)&v95);
        a4 = v91;
        uint64_t v11 = v92;
        unint64_t v19 = v85;
        BOOL v35 = v91 >= v85;
        if (v91 == v85) {
          goto LABEL_18;
        }
      }
    }
    __break(1u);
LABEL_75:
    uint64_t v94 = sub_22081B600((char *)(v29 > 1), a1, 1, v94);
  }
  __break(1u);
LABEL_77:
  uint64_t v94 = sub_22081B600(0, *((void *)v94 + 2) + 1, 1, v94);
LABEL_57:
  uint64_t v62 = *((void *)v94 + 2);
  int64_t v61 = *((void *)v94 + 3);
  if (v62 >= v61 >> 1) {
    uint64_t v94 = sub_22081B600((char *)(v61 > 1), v62 + 1, 1, v94);
  }
  int64_t v63 = v94;
  *((void *)v94 + 2) = v62 + 1;
  uint64_t v64 = &v63[48 * v62];
  uint64_t v65 = v103;
  int64_t v66 = v105;
  *((_OWORD *)v64 + 3) = v104;
  *((_OWORD *)v64 + 4) = v66;
  *((_OWORD *)v64 + 2) = v65;
  sub_22080B0D8((uint64_t)&v95);
  return v94;
}

char *sub_2208B7338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v42)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  long long v62;
  long long v63;
  uint64_t v65;
  uint64_t v66;
  long long v67;
  uint64_t (**v68)(char *, uint64_t);
  void (**v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _OWORD *v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  long long v95;
  long long v96;
  uint64_t v97;
  int64_t v98;
  void v99[5];
  _OWORD v100[3];
  void v101[5];
  uint64_t v102;
  long long v103;
  long long v104;
  long long v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;

  uint64_t v92 = a4;
  long long v76 = sub_22093DF70();
  uint64_t v93 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  unint64_t v75 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19290);
  unint64_t v82 = *(void **)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22093E140();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v72 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v71 = type metadata accessor for FormattingOptions();
  MEMORY[0x270FA5388](v71);
  unint64_t v70 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = *(void *)(a5 + 24);
  int64_t v66 = v6;
  ((void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v17)(&v106, a3, a5);
  int64_t v18 = v106;
  unint64_t v19 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v89 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  int v21 = *(unsigned __int8 *)(a2 + 25);
  unint64_t v88 = a2;
  uint64_t v91 = a1;
  if (v21 != 1) {
    goto LABEL_7;
  }
  sub_2208B8EBC(a2, v92, a6, v20, v100);
  uint64_t v22 = sub_22081B600(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v19 = *((void *)v22 + 2);
  unint64_t v23 = *((void *)v22 + 3);
  uint64_t v94 = v22;
  int64_t v18 = v19 + 1;
  if (v19 >= v23 >> 1) {
    goto LABEL_58;
  }
  while (1)
  {
    char v24 = v94;
    *((void *)v94 + 2) = v18;
    char v25 = &v24[48 * v19];
    long long v26 = v100[2];
    *((_OWORD *)v25 + 3) = v100[1];
    *((_OWORD *)v25 + 4) = v26;
    *((_OWORD *)v25 + 2) = v100[0];
    uint64_t v27 = *((void *)v24 + 9);
    BOOL v28 = __OFADD__(v27, 2);
    uint64_t v29 = v27 + 2;
    if (v28) {
      break;
    }
    BOOL v28 = __OFADD__(v29, 1);
    unint64_t v23 = v29 + 1;
    if (v28)
    {
      __break(1u);
LABEL_7:
      uint64_t v94 = (char *)MEMORY[0x263F8EE78];
      unint64_t v23 = 1;
    }
    unint64_t v30 = v23 + 1;
    if (!__OFADD__(v23, 1))
    {
      ((void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v17)(&v106, a3, a5);
      unint64_t v19 = v106;
      int64_t v18 = v107;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v17 = 0;
      unint64_t v31 = *(void *)(v19 + 16);
      unint64_t v79 = v19 + 32;
      uint64_t v80 = v19;
      unint64_t v77 = (long long *)((char *)&v103 + 8);
      uint64_t v78 = (unint64_t)&v95 + 8;
      unint64_t v86 = v89 - 1;
      unint64_t v87 = v99;
      int64_t v68 = (uint64_t (**)(char *, uint64_t))(v82 + 1);
      uint64_t v69 = (void (**)(char *, uint64_t))(v93 + 8);
      uint64_t v67 = xmmword_220947180;
      uint64_t v84 = a3;
      uint64_t v85 = a5;
      uint64_t v90 = a6;
      int64_t v83 = v31;
      while (1)
      {
        uint64_t v32 = v88;
        if (v17 == v31)
        {
          uint64_t v104 = 0u;
          uint64_t v105 = 0u;
          unint64_t v33 = v31;
          unsigned int v103 = 0u;
        }
        else
        {
          unint64_t v23 = *(void *)(v80 + 16);
          if (v17 >= v23) {
            goto LABEL_56;
          }
          unint64_t v33 = v17 + 1;
          unint64_t v19 = v78;
          sub_22080B5B8(v79 + 40 * v17, v78);
          *(void *)&unsigned int v103 = v17;
          long long v34 = *(_OWORD *)(v19 + 16);
          BOOL v35 = v77;
          *unint64_t v77 = *(_OWORD *)v19;
          v35[1] = v34;
          *((void *)v35 + 4) = *(void *)(v19 + 32);
        }
        sub_2208B8A44((uint64_t)&v103, (uint64_t)&v98);
        if (!v99[3])
        {
          swift_bridgeObjectRelease();
          return v94;
        }
        uint64_t v93 = v33;
        int64_t v18 = v98;
        long long v36 = *((_OWORD *)v87 + 1);
        uint64_t v95 = *(_OWORD *)v87;
        uint64_t v96 = v36;
        uint64_t v97 = v87[4];
        unint64_t v23 = v89;
        unint64_t v17 = v89 - v98;
        if (__OFSUB__(v89, v98))
        {
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          break;
        }
        if (__OFSUB__(v17, 1)) {
          goto LABEL_46;
        }
        uint64_t v37 = sub_2208B8DD4(v17 - 1, v32);
        unint64_t v23 = v37 + 2;
        if (__OFADD__(v37, 2)) {
          goto LABEL_47;
        }
        BOOL v28 = __OFADD__(v23, 1);
        unint64_t v23 = v37 + 3;
        if (v28) {
          goto LABEL_48;
        }
        unint64_t v38 = *(void *)v32 - v30;
        if (__OFSUB__(*(void *)v32, v30)) {
          goto LABEL_49;
        }
        if (v18 == v86) {
          unint64_t v23 = 0;
        }
        BOOL v28 = __OFSUB__(v38, v23);
        unint64_t v23 = v38 - v23;
        if (v28) {
          goto LABEL_50;
        }
        BOOL v28 = __OFSUB__(v23, 2);
        v23 -= 2;
        if (v28) {
          goto LABEL_51;
        }
        int64_t v39 = v23 - 1;
        if (__OFSUB__(v23, 1)) {
          goto LABEL_52;
        }
        uint64_t v40 = *((void *)&v96 + 1);
        uint64_t v41 = v97;
        __swift_project_boxed_opaque_existential_1(&v95, *((uint64_t *)&v96 + 1));
        uint64_t v42 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8) + 112);
        unint64_t v43 = v101;
        v42(v101, v91, v32, v92, a6, v40);
        int64_t v18 = v101[1];
        unint64_t v19 = v101[3];
        a6 = v101[4];
        a3 = v102;
        if (v39 >= v102)
        {
          unint64_t v53 = v101[2];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)v94 + 2) != 1)
          {
            swift_bridgeObjectRelease();
            sub_2208B84C0(v17, v32, v84, v85, (unint64_t *)&v103);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_41;
          }
          unint64_t v44 = *((void *)&v96 + 1);
          unint64_t v81 = v97;
          unint64_t v82 = __swift_project_boxed_opaque_existential_1(&v95, *((uint64_t *)&v96 + 1));
          uint64_t v45 = *(void *)(v32 + 8);
          unint64_t v46 = *(void *)(v32 + 16);
          if (v45 >= v39) {
            uint64_t v45 = v39;
          }
          int64_t v47 = *(unsigned char *)(v32 + 24);
          uint64_t v48 = (uint64_t)v70;
          *(_WORD *)(v70 + 25) = 257;
          *(void *)uint64_t v48 = v39;
          *(void *)(v48 + 8) = v45;
          *(void *)(v48 + 16) = v46;
          *(unsigned char *)(v48 + 24) = v47;
          sub_22093E130();
          sub_2208B8AAC();
          sub_22093DF00();
          sub_22093E130();
          sub_2208B8B00();
          uint64_t v49 = v73;
          sub_22093DF40();
          unsigned int v103 = v67;
          __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
          sub_2208502C4(&qword_267F192B0, &qword_267F18D20);
          uint64_t v50 = v75;
          sub_22093DF60();
          unint64_t v51 = v74;
          MEMORY[0x223C69670](v50, v74);
          (*v69)(v50, v76);
          uint64_t v52 = (*v68)(v49, v51);
          MEMORY[0x223C69630](v52);
          unint64_t v43 = (uint64_t *)&v106;
          (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 + 8) + 112))(&v106, v91, v48, v92, v90, v44);
          sub_2208946CC(v48);
          int64_t v18 = v107;
          unint64_t v53 = v108;
          unint64_t v19 = v109;
          a6 = v110;
          a3 = v111;
        }
        a5 = *v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v94 = sub_22081B600(0, *((void *)v94 + 2) + 1, 1, v94);
        }
        int64_t v55 = *((void *)v94 + 2);
        unint64_t v54 = *((void *)v94 + 3);
        unint64_t v17 = v55 + 1;
        if (v55 >= v54 >> 1) {
          uint64_t v94 = sub_22081B600((char *)(v54 > 1), v55 + 1, 1, v94);
        }
        uint64_t v56 = v94;
        *((void *)v94 + 2) = v17;
        uint64_t v57 = &v56[48 * v55];
        *((void *)v57 + 4) = a5;
        *((void *)v57 + 5) = v18;
        *((void *)v57 + 6) = v53;
        *((void *)v57 + 7) = v19;
        *((void *)v57 + 8) = a6;
        *((void *)v57 + 9) = a3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v23 = a3 + 2;
        if (__OFADD__(a3, 2)) {
          goto LABEL_53;
        }
        BOOL v28 = __OFADD__(v23, 1);
        unint64_t v23 = a3 + 3;
        if (v28) {
          goto LABEL_54;
        }
        BOOL v28 = __OFADD__(v30, v23);
        v30 += v23;
        if (v28) {
          goto LABEL_55;
        }
        sub_22080B0D8((uint64_t)&v95);
        a3 = v84;
        a5 = v85;
        a6 = v90;
        unint64_t v31 = v83;
        unint64_t v17 = v93;
      }
    }
    __break(1u);
LABEL_58:
    uint64_t v94 = sub_22081B600((char *)(v23 > 1), v18, 1, v94);
  }
  __break(1u);
LABEL_60:
  uint64_t v94 = sub_22081B600(0, *((void *)v94 + 2) + 1, 1, v94);
LABEL_41:
  unint64_t v59 = *((void *)v94 + 2);
  uint64_t v58 = *((void *)v94 + 3);
  if (v59 >= v58 >> 1) {
    uint64_t v94 = sub_22081B600((char *)(v58 > 1), v59 + 1, 1, v94);
  }
  unint64_t v60 = v94;
  *((void *)v94 + 2) = v59 + 1;
  int64_t v61 = &v60[48 * v59];
  uint64_t v62 = v103;
  int64_t v63 = v105;
  *((_OWORD *)v61 + 3) = v104;
  *((_OWORD *)v61 + 4) = v63;
  *((_OWORD *)v61 + 2) = v62;
  sub_22080B0D8((uint64_t)&v95);
  return v94;
}

uint64_t sub_2208B7BC4(uint64_t a1, uint64_t a2)
{
  if (a1 != 1)
  {
    type metadata accessor for FormattingOptions();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
    sub_2208B8AAC();
    sub_2208502C4(qword_267F192C0, &qword_267F192B8);
    sub_22093EDA0();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    if (a2 != 1) {
      goto LABEL_3;
    }
LABEL_5:
    sub_22093E6C0();
    return 0;
  }
  sub_22093E6C0();
  if (a2 == 1) {
    goto LABEL_5;
  }
LABEL_3:
  type metadata accessor for FormattingOptions();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F192B8);
  sub_2208B8AAC();
  sub_2208502C4(qword_267F192C0, &qword_267F192B8);
  sub_22093EDA0();
  sub_22093E6C0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2208B7DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  if (*(unsigned char *)(a2 + 24) != 1)
  {
    uint64_t v57 = a1;
    uint64_t v53 = sub_22093F1A0();
    unint64_t v54 = v21;
    sub_22093E6C0();
    unint64_t v22 = sub_22087EC94(*(void *)(a2 + 8), v53, v54);
    unint64_t v11 = v23;
    swift_bridgeObjectRelease();
    if (*(void *)(a3 + 16))
    {
      unint64_t v51 = v11;
      sub_22080B5B8(a3 + 32, (uint64_t)&v53);
      uint64_t v24 = v55;
      uint64_t v25 = v56;
      __swift_project_boxed_opaque_existential_1(&v53, v55);
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v28 = v27(v24, v26);
      uint64_t result = sub_22080B0D8((uint64_t)&v53);
      if (v28 < 0)
      {
LABEL_33:
        __break(1u);
        return result;
      }
      unint64_t v11 = v51;
      if (v28)
      {
        char v29 = 0;
LABEL_21:
        uint64_t v40 = sub_2208EE804(0, v28, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22080B6B4(0, v28, v29);
        unint64_t v13 = 0xE000000000000000;
        unint64_t v31 = sub_2208479B8(0, 0xE000000000000000, v40);
        uint64_t v41 = sub_22093E660();
        uint64_t v42 = sub_220857548((uint64_t)v31);
        int64_t v43 = sub_22085992C(v42);
        char v45 = v44;
        swift_bridgeObjectRelease();
        if (v45) {
          int64_t v46 = 0;
        }
        else {
          int64_t v46 = v43;
        }
        if (v46 <= v41) {
          uint64_t v38 = v41;
        }
        else {
          uint64_t v38 = v46;
        }
        uint64_t result = sub_22093E660();
        unint64_t v39 = 0;
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v28 = 0;
    char v29 = 2;
    goto LABEL_21;
  }
  uint64_t v53 = a1;
  uint64_t v7 = sub_22093F1A0();
  uint64_t v8 = *(void *)(a2 + 8);
  unint64_t v52 = sub_22087EC94(v8, v7, v9);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  unint64_t v49 = sub_22087EC94(v8, 1701998445, 0xE400000000000000);
  unint64_t v13 = v12;
  if (!*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  unint64_t v48 = v12;
  unint64_t v50 = v11;
  sub_22080B5B8(a3 + 32, (uint64_t)&v53);
  uint64_t v15 = v55;
  uint64_t v14 = v56;
  __swift_project_boxed_opaque_existential_1(&v53, v55);
  uint64_t v16 = *(void *)(v14 + 8);
  unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17(v15, v16);
  uint64_t result = sub_22080B0D8((uint64_t)&v53);
  if (v18 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v11 = v50;
  unint64_t v13 = v48;
  if (!v18)
  {
LABEL_11:
    uint64_t v18 = 0;
    char v20 = 2;
    goto LABEL_12;
  }
  char v20 = 0;
LABEL_12:
  uint64_t v30 = sub_2208EE804(0, v18, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(0, v18, v20);
  unint64_t v31 = sub_2208479B8(0, 0xE000000000000000, v30);
  unint64_t v22 = v52;
  uint64_t v32 = sub_22093E660();
  uint64_t v33 = sub_220857548((uint64_t)v31);
  int64_t v34 = sub_22085992C(v33);
  char v36 = v35;
  swift_bridgeObjectRelease();
  if (v36) {
    int64_t v37 = 0;
  }
  else {
    int64_t v37 = v34;
  }
  if (v37 <= v32) {
    uint64_t v38 = v32;
  }
  else {
    uint64_t v38 = v37;
  }
  unint64_t v39 = v49;
  uint64_t result = sub_22093E660();
LABEL_28:
  if (result <= v38) {
    uint64_t v47 = v38;
  }
  else {
    uint64_t v47 = result;
  }
  *a4 = v22;
  a4[1] = v11;
  a4[2] = v39;
  a4[3] = v13;
  a4[4] = (unint64_t)v31;
  a4[5] = v47;
  return result;
}

uint64_t sub_2208B81CC@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    uint64_t v6 = sub_22093F1A0();
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v39 = sub_22087EC94(v7, v6, v8);
    unint64_t v40 = v9;
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_22087EC94(v7, 1701998445, 0xE400000000000000);
    unint64_t v12 = v11;
    uint64_t v13 = *(void *)(v2 + 24);
    uint64_t v14 = *(void *)(v2 + 32);
    char v15 = *(unsigned char *)(v3 + 40);
    uint64_t v16 = sub_2208EE804(v13, v14, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v13, v14, v15);
    unint64_t v17 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v13;
    unint64_t v19 = v40;
    sub_22080B6B4(v18, v14, v15);
    char v20 = sub_2208479B8(0, 0xE000000000000000, v16);
    uint64_t v21 = sub_22093E660();
    uint64_t v22 = sub_220857548((uint64_t)v20);
    int64_t v23 = sub_22085992C(v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if (v25) {
      int64_t v26 = 0;
    }
    else {
      int64_t v26 = v23;
    }
    if (v26 > v21) {
      uint64_t v21 = v26;
    }
    uint64_t result = sub_22093E660();
  }
  else
  {
    uint64_t v41 = sub_22093F1A0();
    unint64_t v42 = v28;
    sub_22093E6C0();
    unint64_t v17 = sub_22087EC94(*(void *)(a1 + 8), v41, v42);
    unint64_t v19 = v29;
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v2 + 24);
    uint64_t v31 = *(void *)(v2 + 32);
    char v32 = *(unsigned char *)(v2 + 40);
    uint64_t v33 = sub_2208EE804(v30, v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_220831F30(v30, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v30, v31, v32);
    unint64_t v12 = 0xE000000000000000;
    char v20 = sub_2208479B8(0, 0xE000000000000000, v33);
    uint64_t v21 = sub_22093E660();
    uint64_t v34 = sub_220857548((uint64_t)v20);
    int64_t v35 = sub_22085992C(v34);
    LOBYTE(v30) = v36;
    swift_bridgeObjectRelease();
    if (v30) {
      int64_t v37 = 0;
    }
    else {
      int64_t v37 = v35;
    }
    if (v37 > v21) {
      uint64_t v21 = v37;
    }
    uint64_t result = sub_22093E660();
    unint64_t v10 = 0;
  }
  if (result <= v21) {
    uint64_t v38 = v21;
  }
  else {
    uint64_t v38 = result;
  }
  *a2 = v17;
  a2[1] = v19;
  a2[2] = v10;
  a2[3] = v12;
  a2[4] = (unint64_t)v20;
  a2[5] = v38;
  return result;
}

uint64_t sub_2208B84C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    uint64_t v50 = a1;
    uint64_t v9 = sub_22093F1A0();
    uint64_t v10 = *(void *)(a2 + 8);
    unint64_t v12 = sub_22087EC94(v10, v9, v11);
    unint64_t v48 = v13;
    unint64_t v49 = v12;
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_22087EC94(v10, 1701998445, 0xE400000000000000);
    unint64_t v16 = v15;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v50, a3, a4);
    uint64_t v17 = v52;
    uint64_t v18 = v53;
    char v19 = v54;
    uint64_t v20 = sub_2208EE804(v52, v53, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    unint64_t v23 = v48;
    unint64_t v24 = v49;
    sub_22080B6B4(v21, v22, v19);
    char v25 = sub_2208479B8(0, 0xE000000000000000, v20);
    uint64_t v26 = sub_22093E660();
    uint64_t v27 = sub_220857548((uint64_t)v25);
    int64_t v28 = sub_22085992C(v27);
    char v30 = v29;
    swift_bridgeObjectRelease();
    if (v30) {
      int64_t v31 = 0;
    }
    else {
      int64_t v31 = v28;
    }
    if (v31 <= v26) {
      uint64_t v32 = v26;
    }
    else {
      uint64_t v32 = v31;
    }
    uint64_t result = sub_22093E660();
  }
  else
  {
    uint64_t v55 = a1;
    uint64_t v50 = sub_22093F1A0();
    unint64_t v51 = v34;
    sub_22093E6C0();
    unint64_t v24 = sub_22087EC94(*(void *)(a2 + 8), v50, v51);
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    unint64_t v23 = v36;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 32))(&v50, a3, a4);
    uint64_t v37 = v52;
    uint64_t v38 = v53;
    char v39 = v54;
    uint64_t v40 = sub_2208EE804(v52, v53, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v37, v38, v39);
    unint64_t v16 = 0xE000000000000000;
    char v25 = sub_2208479B8(0, 0xE000000000000000, v40);
    uint64_t v41 = sub_22093E660();
    uint64_t v42 = sub_220857548((uint64_t)v25);
    int64_t v43 = sub_22085992C(v42);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if (v45) {
      int64_t v46 = 0;
    }
    else {
      int64_t v46 = v43;
    }
    if (v46 <= v41) {
      uint64_t v32 = v41;
    }
    else {
      uint64_t v32 = v46;
    }
    uint64_t result = sub_22093E660();
    unint64_t v14 = 0;
  }
  if (result <= v32) {
    uint64_t v47 = v32;
  }
  else {
    uint64_t v47 = result;
  }
  *a5 = v24;
  a5[1] = v23;
  a5[2] = v14;
  a5[3] = v16;
  a5[4] = (unint64_t)v25;
  a5[5] = v47;
  return result;
}

uint64_t sub_2208B87B4@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_22093F1A0();
  unint64_t v6 = sub_22087EC94(*(void *)(a1 + 8), v4, v5);
  unint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_2208B883C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2208B888C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2208B88DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x2208B8948);
  }
  return result;
}

uint64_t sub_2208B8958(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x2208B8A24);
  }
  return result;
}

uint64_t sub_2208B8A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2208B8AAC()
{
  unint64_t result = qword_267F192A0;
  if (!qword_267F192A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F192A0);
  }
  return result;
}

unint64_t sub_2208B8B00()
{
  unint64_t result = qword_267F192A8;
  if (!qword_267F192A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F192A8);
  }
  return result;
}

uint64_t sub_2208B8B54@<X0>(unint64_t *a1@<X8>)
{
  return sub_2208B87B4(*(void *)(v1 + 16), a1);
}

uint64_t sub_2208B8B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormattingOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2208B8BD8(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      sub_22093F1A0();
      uint64_t v3 = sub_22093E660();
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_22093E660();
      if (v4 <= v3) {
        uint64_t v5 = v3;
      }
      else {
        uint64_t v5 = v4;
      }
    }
    else
    {
      sub_22093F1A0();
      uint64_t v6 = sub_22093E660();
      swift_bridgeObjectRelease();
      unint64_t result = sub_22093E660();
      uint64_t v5 = v6 + result;
      if (__OFADD__(v6, result))
      {
        __break(1u);
        return result;
      }
    }
    if (*(void *)(a2 + 8) >= v5) {
      return v5;
    }
    else {
      return *(void *)(a2 + 8);
    }
  }
  return result;
}

uint64_t sub_2208B8CBC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22093E690();
    return sub_22093E770();
  }
  return result;
}

uint64_t sub_2208B8D58(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return 0;
  }
  sub_22093F1A0();
  uint64_t v4 = sub_22093E660();
  swift_bridgeObjectRelease();
  if (*(void *)(a3 + 8) >= v4) {
    return v4;
  }
  else {
    return *(void *)(a3 + 8);
  }
}

uint64_t sub_2208B8DD4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (*(unsigned char *)(a2 + 24) == 1)
    {
      sub_22093F1A0();
      uint64_t v3 = sub_22093E660();
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_22093E660();
      if (v4 <= v3) {
        uint64_t v5 = v3;
      }
      else {
        uint64_t v5 = v4;
      }
    }
    else
    {
      sub_22093F1A0();
      uint64_t v6 = sub_22093E660();
      swift_bridgeObjectRelease();
      unint64_t result = sub_22093E660();
      uint64_t v5 = v6 + result;
      if (__OFADD__(v6, result))
      {
        __break(1u);
        return result;
      }
    }
    if (*(void *)(a2 + 8) >= v5) {
      return v5;
    }
    else {
      return *(void *)(a2 + 8);
    }
  }
  return result;
}

uint64_t sub_2208B8EBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X7>, void *a5@<X8>)
{
  void v16[2] = a1;
  uint64_t v6 = sub_22080E314((void (*)(char *, char *))sub_2208B8FAC, (uint64_t)v16, a2, MEMORY[0x263F8D310], MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], a4);
  uint64_t v7 = sub_22093E660();
  uint64_t v8 = sub_220857548(v6);
  int64_t v9 = sub_22085992C(v8);
  char v11 = v10;
  swift_bridgeObjectRelease();
  if (v11) {
    int64_t v12 = 0;
  }
  else {
    int64_t v12 = v9;
  }
  if (v12 <= v7) {
    uint64_t v13 = v7;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = sub_22093E660();
  if (result <= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = result;
  }
  *a5 = 0;
  a5[1] = 0xE000000000000000;
  a5[2] = 0;
  a5[3] = 0xE000000000000000;
  a5[4] = v6;
  a5[5] = v15;
  return result;
}

uint64_t sub_2208B8FAC@<X0>(unint64_t *a1@<X8>)
{
  return sub_2208B8B54(a1);
}

uint64_t sub_2208B8FC4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_22093E610();
  uint64_t result = MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a2;
  uint64_t v12 = *((void *)a2 + 1);
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  char v15 = a2[32];
  uint64_t v16 = *((void *)a2 + 5);
  char v17 = a2[48];
  char v18 = a2[49];
  char v19 = a2[50];
  char v20 = a2[51];
  char v21 = a2[52];
  uint64_t v22 = (unsigned char *)(a1 + 32);
  unint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    int v24 = *v22;
    uint64_t result = v23 - 1;
    if (v23 == 1 || *v22)
    {
      if (v23 == 1 || v24 != 255)
      {
        if (v23 == 1 || v24 != 254)
        {
          uint64_t v25 = 0;
          if (v23 != 1 && v24 == 239)
          {
            uint64_t v25 = 0;
            if (*(unsigned __int8 *)(a1 + 33) == 187 && v23 >= 3)
            {
              uint64_t v25 = 3;
              if (*(unsigned __int8 *)(a1 + 34) != byte_26D2214F2) {
                uint64_t v25 = 0;
              }
            }
          }
          goto LABEL_33;
        }
        if (*(unsigned __int8 *)(a1 + 33) == 255)
        {
          uint64_t v32 = *((void *)a2 + 1);
          uint64_t v31 = v8;
          sub_22093E5C0();
          goto LABEL_31;
        }
      }
      else if (*(unsigned __int8 *)(a1 + 33) == 254)
      {
        if (v23 != 2)
        {
          uint64_t result = *(unsigned __int8 *)(a1 + 34);
          if (result == byte_26D2214CA
            && v23 != 3
            && *(unsigned __int8 *)(a1 + 35) == byte_26D2214CB)
          {
            uint64_t v32 = *((void *)a2 + 1);
            uint64_t v31 = v8;
            sub_22093E5F0();
            goto LABEL_31;
          }
        }
        if (*(unsigned __int8 *)(a1 + 33) == 254)
        {
          uint64_t v32 = *((void *)a2 + 1);
          uint64_t v31 = v8;
          sub_22093E5E0();
          goto LABEL_31;
        }
      }
    }
    else if (!*(unsigned char *)(a1 + 33) && v23 != 2)
    {
      uint64_t v25 = 0;
      if (*(unsigned __int8 *)(a1 + 34) != byte_26D2214A2 || v23 == 3) {
        goto LABEL_33;
      }
      if (*(unsigned __int8 *)(a1 + 35) == byte_26D2214A3)
      {
        uint64_t v32 = *((void *)a2 + 1);
        uint64_t v31 = v8;
        sub_22093E5D0();
LABEL_31:
        uint64_t v26 = sub_22093E5B0();
        uint64_t v28 = v27;
        sub_2208501D0();
        swift_allocError();
        *(void *)uint64_t v29 = v26;
        *(void *)(v29 + 8) = v28;
        *(void *)(v29 + 16) = 0;
        *(void *)(v29 + 24) = 0;
        *(void *)(v29 + 32) = 0x1000000000000000;
        *(unsigned char *)(v29 + 40) = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v25 = 0;
LABEL_33:
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v11;
  *(void *)(a3 + 16) = v12;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v14;
  *(unsigned char *)(a3 + 40) = v15;
  *(void *)(a3 + 48) = v16;
  *(unsigned char *)(a3 + 56) = v17;
  *(unsigned char *)(a3 + 57) = v18;
  *(unsigned char *)(a3 + 58) = v19;
  *(unsigned char *)(a3 + 59) = v20;
  *(unsigned char *)(a3 + 60) = v21;
  *(void *)(a3 + 64) = v22;
  *(void *)(a3 + 72) = v23;
  *(void *)(a3 + 80) = v25;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = v22;
  *(void *)(a3 + 104) = v23;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_2208B930C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = v2 - v1;
  if (v2 == v1) {
    return 0;
  }
  uint64_t result = 0;
  int v5 = *(unsigned __int8 *)(v0 + 57);
  int v6 = *(unsigned __int8 *)(v0 + 58);
  int v7 = *(unsigned __int8 *)(v0 + 59);
  int v8 = *(unsigned __int8 *)(v0 + 60);
  uint64_t v9 = v2 - 1;
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 64);
  while (1)
  {
    while (1)
    {
      int v12 = 0;
LABEL_5:
      int v13 = *(unsigned __int8 *)(v11 + v10);
      int v14 = v13 == 34 ? *(unsigned __int8 *)(v0 + 57) : 0;
      if (v14 != 1) {
        break;
      }
      if (v9 == v10)
      {
        if (v2 >= v1) {
          goto LABEL_27;
        }
        __break(1u);
LABEL_36:
        if (v9 == v10) {
          return 2;
        }
        uint64_t v20 = v10 + 1;
        uint64_t result = 2;
        do
        {
          for (char i = 0; ; char i = 0)
          {
            while (1)
            {
              while (1)
              {
                int v22 = 0;
LABEL_41:
                int v23 = *(unsigned __int8 *)(v11 + v20);
                int v24 = v23 == 34 ? v5 : 0;
                if (v24 != 1) {
                  break;
                }
                if (v9 == v20) {
                  return result;
                }
                i ^= 1u;
                ++v20;
              }
              if (v8 == v23) {
                int v25 = v6;
              }
              else {
                int v25 = 0;
              }
              if (v25 == 1)
              {
                while (v9 != v20)
                {
                  v22 ^= 1u;
                  ++v20;
                  if ((v22 & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                return result;
              }
              if ((i & 1) == 0) {
                break;
              }
              if (v9 == v20) {
                return result;
              }
              char i = 1;
              ++v20;
            }
            if (v7 == v23) {
              break;
            }
            if (v23 == 10 || v23 == 13 || v9 == v20) {
              return result;
            }
            ++v20;
          }
          if (__OFADD__(result++, 1)) {
            goto LABEL_67;
          }
          BOOL v19 = v9 == v20++;
        }
        while (!v19);
        return result;
      }
      uint64_t result = result ^ 1;
      ++v10;
    }
    int v15 = v8 == v13 ? *(unsigned __int8 *)(v0 + 58) : 0;
    if (v15 == 1) {
      break;
    }
    if (result)
    {
      if (v9 == v10) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      ++v10;
    }
    else
    {
      if (v7 == v13) {
        goto LABEL_36;
      }
      if (v13 == 10 || v13 == 13 || v9 == v10) {
        goto LABEL_26;
      }
      uint64_t result = 0;
      ++v10;
    }
  }
  while (v9 != v10)
  {
    v12 ^= 1u;
    ++v10;
    if ((v12 & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_26:
  if (v2 >= v1)
  {
LABEL_27:
    uint64_t v16 = (unsigned __int8 *)(v11 + v1);
    uint64_t result = 1;
    while (1)
    {
      unsigned int v17 = *v16++;
      uint64_t v18 = (1 << v17) & 0x100002600;
      BOOL v19 = v17 > 0x20 || v18 == 0;
      if (v19) {
        break;
      }
      if (!--v3) {
        return 0;
      }
    }
    return result;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_2208B9504@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = v2;
  LOBYTE(v5) = *(unsigned char *)(v1 + 57);
  unint64_t v6 = *(unsigned __int8 *)(v1 + 60);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  unint64_t v9 = *(void *)(v1 + 128);
  char v63 = *(unsigned char *)(v1 + 56);
  int v64 = *(unsigned __int8 *)(v1 + 59);
  LOBYTE(v60) = *(unsigned char *)(v1 + 58);
  long long v59 = *(_OWORD *)(v1 + 96);
  long long v61 = *(_OWORD *)(v1 + 112);
  long long v62 = *(_OWORD *)(v1 + 80);
  uint64_t v65 = v1;
  uint64_t v66 = sub_2208B930C();
  *(void *)(v1 + 120) = v66;
  unint64_t v10 = v9;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_93;
  }
  for (uint64_t i = v9; ; uint64_t i = result)
  {
    unint64_t v10 = *(void *)(i + 16);
    unint64_t v13 = *(void *)(i + 24);
    uint64_t v14 = v65;
    uint64_t v15 = v66;
    char v17 = v63;
    int v16 = v64;
    if (v10 >= v13 >> 1)
    {
      uint64_t result = (uint64_t)sub_22081B4E8((char *)(v13 > 1), v10 + 1, 1, (char *)i);
      char v17 = v63;
      int v16 = v64;
      uint64_t v14 = v65;
      uint64_t i = result;
      uint64_t v15 = v66;
    }
    *(void *)(i + 16) = v10 + 1;
    *(void *)(i + 8 * v10 + 32) = v62;
    uint64_t v18 = v62;
    *(void *)(v14 + 128) = i;
    *(void *)(v14 + 88) = 0;
    int64_t v19 = v61;
    if ((void)v62 == v7)
    {
      uint64_t v20 = 0;
      unint64_t v6 = *(void *)(i + 16);
      if (v6) {
        goto LABEL_76;
      }
      goto LABEL_81;
    }
    *(void *)&long long v61 = a1;
    *(void *)&long long v62 = v3;
    uint64_t v21 = v15 - 1;
    uint64_t result = __OFSUB__(v15, 1);
    unint64_t v10 = 1;
    a1 = 0x100002600;
    int v22 = v5 & 1;
    int v5 = v60 & 1;
    while (1)
    {
      uint64_t v20 = 0;
      uint64_t v23 = 0;
      unint64_t v24 = v19 * v15;
      BOOL v25 = (unsigned __int128)(v19 * (__int128)v15) >> 64 != (v19 * v15) >> 63;
LABEL_13:
      unint64_t v26 = 0;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            int v27 = 0;
            ++v18;
LABEL_15:
            int v28 = *(unsigned __int8 *)(v8 + v18 - 1);
            if (v28 != 34 || v22 == 0) {
              break;
            }
            unint64_t v26 = v26 ^ 1;
            if (v7 == v18) {
              goto LABEL_37;
            }
          }
          if (v6 == v28 && v5 != 0)
          {
            while (v7 != v18)
            {
              v27 ^= 1u;
              ++v18;
              if ((v27 & 1) == 0) {
                goto LABEL_15;
              }
            }
LABEL_37:
            *(void *)(v14 + 80) = v7;
            uint64_t v18 = v7;
            if ((v26 & 1) == 0) {
              goto LABEL_38;
            }
LABEL_70:
            int64_t v45 = v19;
            uint64_t v46 = v23;
            sub_2208501D0();
            swift_allocError();
            *(void *)uint64_t v47 = v45;
            *(void *)(v47 + 8) = v46;
            *(void *)(v47 + 16) = 0;
            *(void *)(v47 + 24) = 0;
            *(void *)(v47 + 32) = 0x2000000000000000;
            goto LABEL_87;
          }
          if ((v26 & 1) == 0) {
            break;
          }
          unint64_t v26 = 1;
          if (v7 == v18)
          {
            *(void *)(v14 + 80) = v7;
            goto LABEL_70;
          }
        }
        if (v16 == v28)
        {
          *(void *)(v14 + 80) = v18;
          BOOL v37 = __OFADD__(v20++, 1);
          if (v37) {
            goto LABEL_99;
          }
          *(void *)(v14 + 88) = v20;
          unint64_t v39 = *(void *)(i + 16);
          unint64_t v38 = *(void *)(i + 24);
          int64_t v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            unsigned int v57 = result;
            unint64_t v55 = v24;
            BOOL v54 = v25;
            unint64_t v3 = v19;
            uint64_t v60 = v20;
            int64_t v52 = v39 + 1;
            unint64_t v53 = *(void *)(i + 16);
            uint64_t v41 = sub_22081B4E8((char *)(v38 > 1), v40, 1, (char *)i);
            int64_t v40 = v52;
            unint64_t v39 = v53;
            BOOL v25 = v54;
            unint64_t v24 = v55;
            uint64_t v20 = v60;
            char v17 = v63;
            int v16 = v64;
            int64_t v19 = v3;
            uint64_t v14 = v65;
            uint64_t i = (uint64_t)v41;
            uint64_t result = v57;
            uint64_t v15 = v66;
          }
          *(void *)(i + 16) = v40;
          *(void *)(i + 8 * v39 + 32) = v18;
          uint64_t v23 = v20;
          goto LABEL_52;
        }
        if (v28 == 13) {
          break;
        }
        if (v28 == 10) {
          goto LABEL_61;
        }
        unint64_t v26 = 0;
        if (v7 == v18)
        {
          uint64_t v18 = v7;
          goto LABEL_61;
        }
      }
      *(void *)(v14 + 80) = v18;
      if (v18 < v7)
      {
        unint64_t v26 = *(unsigned __int8 *)(v8 + v18);
        if (v26 == 10)
        {
          ++v18;
LABEL_61:
          *(void *)(v14 + 80) = v18;
        }
      }
LABEL_38:
      if (v17) {
        break;
      }
LABEL_63:
      if (result) {
        goto LABEL_92;
      }
      if (v20 != v21)
      {
        unint64_t v6 = v20 + 1;
        if (!__OFADD__(v20, 1)) {
          goto LABEL_86;
        }
        __break(1u);
LABEL_74:
        uint64_t v20 = 0;
        goto LABEL_75;
      }
      BOOL v37 = __OFADD__(v19++, 1);
      if (v37)
      {
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      *(void *)(v14 + 112) = v19;
      *(void *)(v14 + 88) = 0;
      unint64_t v3 = *(void *)(i + 16);
      unint64_t v42 = *(void *)(i + 24);
      unint64_t v43 = v3 + 1;
      if (v3 >= v42 >> 1)
      {
        unsigned int v58 = result;
        LOBYTE(v60) = v3 + 1;
        int64_t v56 = v19;
        char v44 = sub_22081B4E8((char *)(v42 > 1), v3 + 1, 1, (char *)i);
        unint64_t v43 = v3 + 1;
        char v17 = v63;
        int v16 = v64;
        int64_t v19 = v56;
        uint64_t v14 = v65;
        uint64_t i = (uint64_t)v44;
        uint64_t result = v58;
        uint64_t v15 = v66;
      }
      *(void *)(i + 16) = v43;
      *(void *)(i + 8 * v3 + 32) = v18;
      *(void *)(v14 + 128) = i;
      if (v18 == v7) {
        goto LABEL_74;
      }
    }
    if (v25)
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    if ((v24 & 0x8000000000000000) != 0) {
      goto LABEL_89;
    }
    unint64_t v26 = *(void *)(i + 16);
    if (v24 >= v26) {
      goto LABEL_90;
    }
    if (v20) {
      goto LABEL_63;
    }
    uint64_t v31 = *(void *)(i + 32 + 8 * v24);
    uint64_t v32 = v18 - v31;
    if (v18 >= v31) {
      break;
    }
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    uint64_t result = (uint64_t)sub_22081B4E8(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
  }
  if (v18 != v31)
  {
    uint64_t v33 = (unsigned __int8 *)(v8 + v31);
    while (1)
    {
      unsigned int v34 = *v33++;
      uint64_t v35 = (1 << v34) & 0x100002600;
      if (v34 > 0x20 || v35 == 0) {
        break;
      }
      if (!--v32) {
        goto LABEL_51;
      }
    }
    uint64_t v20 = 0;
    goto LABEL_63;
  }
LABEL_51:
  uint64_t v20 = 0;
  *(void *)(i + 32 + 8 * v26 - 8) = v18;
LABEL_52:
  *(void *)(v14 + 128) = i;
  if (v18 != v7) {
    goto LABEL_13;
  }
LABEL_75:
  a1 = v61;
  unint64_t v6 = *(void *)(i + 16);
  if (v6)
  {
LABEL_76:
    uint64_t v48 = *(void *)(i + 8 * v6 + 24);
    if (v48 >= 1 && *(unsigned __int8 *)(v48 + v59 - 1) == v16)
    {
      unint64_t v26 = *(void *)(i + 24);
      unint64_t v10 = v6 + 1;
      if (v6 < v26 >> 1) {
        goto LABEL_79;
      }
      goto LABEL_97;
    }
  }
LABEL_81:
  if (!v20)
  {
LABEL_84:
    long long v49 = *(_OWORD *)(v14 + 112);
    *(_OWORD *)a1 = *(_OWORD *)(v14 + 96);
    *(_OWORD *)(a1 + 16) = v49;
    *(void *)(a1 + 32) = i;
    return result;
  }
  unint64_t v26 = v15 - 1;
  if (__OFSUB__(v15, 1)) {
    goto LABEL_95;
  }
  if (v20 == v26) {
    goto LABEL_84;
  }
  unint64_t v6 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
LABEL_86:
    int64_t v50 = v19;
    sub_2208501D0();
    swift_allocError();
    *(void *)uint64_t v47 = v50;
    *(void *)(v47 + 8) = v6;
    *(void *)(v47 + 16) = v66;
    *(_OWORD *)(v47 + 24) = xmmword_220947300;
LABEL_87:
    *(unsigned char *)(v47 + 40) = 0;
    return swift_willThrow();
  }
LABEL_96:
  __break(1u);
LABEL_97:
  int64_t v51 = v19;
  uint64_t result = (uint64_t)sub_22081B4E8((char *)(v26 > 1), v10, 1, (char *)i);
  int64_t v19 = v51;
  uint64_t v14 = v65;
  uint64_t i = result;
LABEL_79:
  *(void *)(i + 16) = v10;
  *(void *)(i + 8 * v6 + 32) = v7;
  *(void *)(v14 + 128) = i;
  if (!__OFADD__(v19, 1))
  {
    *(void *)(v14 + 112) = v19 + 1;
    *(void *)(v14 + 88) = 0;
    goto LABEL_84;
  }
  __break(1u);
LABEL_99:
  __break(1u);
  return result;
}

uint64_t destroy for CSVIndex()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CSVIndex(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CSVIndex(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CSVIndex(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVIndex(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVIndex(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVIndex()
{
  return &type metadata for CSVIndex;
}

uint64_t CSVReadingError.row.getter()
{
  if (*(unsigned char *)(v0 + 40)) {
    char v1 = 4;
  }
  else {
    char v1 = 0;
  }
  if (((1 << ((*(void *)(v0 + 32) >> 60) & 3 | v1)) & 0x5D) != 0) {
    return *(void *)v0;
  }
  else {
    return 0;
  }
}

uint64_t CSVReadingError.column.getter()
{
  uint64_t result = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 40)) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  switch((*(void *)(v0 + 32) >> 60) & 3 | v2)
  {
    case 1:
    case 3:
    case 5:
    case 6:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t CSVReadingError.description.getter()
{
  uint64_t v1 = sub_22093E610();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v5 = *(void *)(v0 + 24);
  unint64_t v6 = *(void *)(v0 + 32);
  char v7 = *(unsigned char *)(v0 + 40);
  if (v7) {
    int v8 = 4;
  }
  else {
    int v8 = 0;
  }
  switch((v6 >> 60) & 3 | v8)
  {
    case 1uLL:
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      sub_22093E6C0();
      return v29;
    case 2uLL:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000017;
      unint64_t v30 = 0x8000000220940840;
      uint64_t v27 = v2;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3uLL:
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t v27 = v3;
      goto LABEL_14;
    case 4uLL:
      sub_22080B7F4(*(void *)(v0 + 24), *(void *)(v0 + 32));
      sub_22093E600();
      sub_22093E570();
      if (v14)
      {
        sub_22093EEA0();
        sub_22093E6C0();
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        uint64_t v27 = v3;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        LOBYTE(v27) = v4;
        sub_22093F030();
        sub_22093E6C0();
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_2208B8CBC(1024);
        uint64_t v17 = v16;
        uint64_t v19 = v18;
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        MEMORY[0x223C69D50](v15, v17, v19, v21);
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        unint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v2;
        uint64_t v13 = v3;
        uint64_t v22 = v4;
      }
      else
      {
        sub_22093EEA0();
        sub_22093E6C0();
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        uint64_t v27 = v3;
        sub_22093F1A0();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        LOBYTE(v27) = v4;
        sub_22093F030();
        sub_22093E6C0();
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        unint64_t v29 = 0xD000000000000018;
        unint64_t v30 = 0x8000000220940800;
        sub_22080B7F4(v5, v6);
        sub_2208B456C(1024, v5, v6, &v27);
        uint64_t v23 = v27;
        unint64_t v24 = v28;
        BOOL v25 = sub_2208BA6D8(v27, v28);
        sub_22080B88C(v23, v24);
        MEMORY[0x223C69F60](v25, MEMORY[0x263F8E778]);
        sub_22093E6C0();
        swift_release();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        unint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v2;
        uint64_t v13 = v3;
LABEL_17:
        uint64_t v22 = v4;
      }
      sub_2208BA894(v12, v13, v22, v5, v6, v7);
      return v29;
    case 5uLL:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000018;
      unint64_t v30 = 0x80000002209407C0;
      sub_22093E6C0();
      goto LABEL_15;
    case 6uLL:
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_22093EEA0();
      sub_22093E6C0();
      uint64_t v27 = v2;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
LABEL_13:
      sub_22093E6C0();
      uint64_t v27 = v3;
LABEL_14:
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
LABEL_15:
      sub_22093E6C0();
      return v29;
    default:
      sub_22080B7F4(v4, v5);
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000019;
      unint64_t v30 = 0x80000002209408B0;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t v27 = v3;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_22080B7F4(v4, v5);
      sub_2208B456C(1024, v4, v5, &v27);
      uint64_t v9 = v27;
      unint64_t v10 = v28;
      uint64_t v11 = sub_2208BA6D8(v27, v28);
      sub_22080B88C(v9, v10);
      MEMORY[0x223C69F60](v11, MEMORY[0x263F8E778]);
      sub_22093E6C0();
      swift_release();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      uint64_t v12 = v2;
      uint64_t v13 = v3;
      goto LABEL_17;
  }
}

unint64_t CSVReadingError.errorDescription.getter()
{
  return CSVReadingError.description.getter();
}

unint64_t sub_2208BA694()
{
  return CSVReadingError.description.getter();
}

void *sub_2208BA6D8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_22093E030();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411B0);
          int v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          _OWORD v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_22080B7F4(a1, a2);
        uint64_t v13 = sub_22093DFC0();
        sub_22080B88C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x2208BA884);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_2208BA894(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  if (a6) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  switch((a5 >> 60) & 3 | v6)
  {
    case 0uLL:
      sub_22080B88C(a3, a4);
      break;
    case 1uLL:
    case 5uLL:
      swift_bridgeObjectRelease();
      break;
    case 4uLL:
      sub_22080B88C(a4, a5);
      break;
    default:
      return;
  }
}

void sub_2208BA910(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  if (a6) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  switch((a5 >> 60) & 3 | v6)
  {
    case 0uLL:
      sub_22080B7F4(a3, a4);
      break;
    case 1uLL:
    case 5uLL:
      swift_bridgeObjectRetain();
      break;
    case 4uLL:
      sub_22080B7F4(a4, a5);
      break;
    default:
      return;
  }
}

void destroy for CSVReadingError(uint64_t a1)
{
}

uint64_t initializeWithCopy for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_2208BA910(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_2208BA910(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  sub_2208BA894(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for CSVReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  sub_2208BA894(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVReadingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FA && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1018);
  }
  unsigned int v3 = ((*(void *)(a1 + 32) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 40))) ^ 0x3FF;
  if (v3 >= 0x3F9) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CSVReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 1018;
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = (-a2 & 3) << 60;
      *(unsigned char *)(result + 40) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_2208BABB0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  return (*(void *)(a1 + 32) >> 60) & 3 | v1;
}

uint64_t sub_2208BABD0(uint64_t result)
{
  *(void *)(result + 32) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_2208BABE0(uint64_t result, char a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(unsigned char *)(result + 40) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for CSVReadingError()
{
  return &type metadata for CSVReadingError;
}

uint64_t sub_2208BAC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = (unsigned __int8 *)sub_2208BAD00(a1, a2);
  uint64_t v6 = *(void *)(a3 + 16);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  uint64_t v10 = *(void *)(a3 + 32);
  uint64_t v9 = a3 + 32;
  uint64_t result = (uint64_t)sub_22091F900(v4, v5, v10);
  if (result) {
    return 1;
  }
  if (v6 == 1) {
    return 0;
  }
  unint64_t v12 = &v7[v8];
  if (!v7) {
    unint64_t v12 = 0;
  }
  uint64_t v13 = 1;
LABEL_11:
  uint64_t v14 = v13;
  if (!__OFADD__(v13++, 1))
  {
    unint64_t v16 = 0;
    uint64_t v17 = *(void *)(v9 + 8 * v14);
    unint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = v17 + 32;
    uint64_t v20 = v7;
    while (1)
    {
      if (v16 == v18)
      {
        int v21 = 0;
        unint64_t v22 = v18;
        if (!v20) {
          goto LABEL_9;
        }
      }
      else
      {
        if (v16 >= v18)
        {
          __break(1u);
          break;
        }
        int v21 = *(unsigned __int8 *)(v19 + v16);
        unint64_t v22 = v16 + 1;
        if (!v20)
        {
LABEL_9:
          if (v16 == v18) {
            return 1;
          }
LABEL_10:
          if (v13 == v6) {
            return 0;
          }
          goto LABEL_11;
        }
      }
      if (v20 == v12) {
        goto LABEL_9;
      }
      if (v16 != v18)
      {
        int v23 = *v20++;
        unint64_t v16 = v22;
        if (v21 == v23) {
          continue;
        }
      }
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208BAD00(uint64_t result, uint64_t a2)
{
  if (a2 < 1)
  {
    uint64_t v2 = 0;
    uint64_t v7 = a2 - 1;
    if (!__OFSUB__(a2, 1)) {
      goto LABEL_10;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v2 = 0;
  while (1)
  {
    unsigned int v3 = *(unsigned __int8 *)(result + v2);
    BOOL v4 = v3 > 0x20;
    uint64_t v5 = (1 << v3) & 0x100002600;
    if (v4 || v5 == 0) {
      break;
    }
    if (a2 == ++v2)
    {
      uint64_t v2 = a2;
      break;
    }
  }
  uint64_t v7 = a2 - 1;
  if (__OFSUB__(a2, 1)) {
    goto LABEL_23;
  }
LABEL_10:
  if (v2 < v7)
  {
    while (1)
    {
      unsigned int v8 = *(unsigned __int8 *)(result + v7);
      BOOL v4 = v8 > 0x20;
      uint64_t v9 = (1 << v8) & 0x100002600;
      if (v4 || v9 == 0) {
        break;
      }
      if (v2 >= --v7)
      {
        uint64_t v7 = v2;
        break;
      }
    }
  }
  if (!result) {
    goto LABEL_26;
  }
  BOOL v11 = __OFSUB__(v7, v2);
  uint64_t v12 = v7 - v2;
  if (!v11)
  {
    if (!__OFADD__(v12, 1))
    {
      result += v2;
      return result;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2208BADBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_2208BAE5C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2208BAF40(uint64_t a1)
{
  uint64_t v33 = sub_22093E030();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22093E610();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v37 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_220826F78(0, v7, 0);
  int64_t v10 = sub_2208BADBC(a1);
  char v12 = v11 & 1;
  uint64_t v35 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v36 = a1 + 56;
  unint64_t v30 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v31 = v4;
  uint64_t v34 = a1;
  while (2)
  {
    if (v10 < 0 || v10 >= 1 << *(unsigned char *)(a1 + 32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (((*(void *)(v36 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v9)
    {
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      JUMPOUT(0x2208BB340);
    }
    uint64_t v38 = v9;
    swift_bridgeObjectRetain();
    uint64_t v13 = v37;
    sub_22093E600();
    uint64_t v14 = sub_22093E560();
    unint64_t v16 = v15;
    (*v35)(v13, v4);
    if (v16 >> 60 == 15) {
      goto LABEL_32;
    }
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    switch(v16 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14)) {
          goto LABEL_30;
        }
        uint64_t v18 = HIDWORD(v14) - (int)v14;
LABEL_13:
        if (v18)
        {
          if (v18 >= 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411B0);
            uint64_t v17 = (void *)swift_allocObject();
            size_t v21 = _swift_stdlib_malloc_size(v17);
            _OWORD v17[2] = v18;
            v17[3] = 2 * v21 - 64;
          }
          sub_22080B7F4(v14, v16);
          unint64_t v22 = v32;
          uint64_t v23 = sub_22093DFC0();
          sub_220834944(v14, v16);
          (*v30)(v22, v33);
          BOOL v24 = v23 == v18;
          a1 = v34;
          uint64_t v4 = v31;
          if (!v24) {
            goto LABEL_29;
          }
        }
        else
        {
          a1 = v34;
        }
LABEL_19:
        sub_220834944(v14, v16);
        swift_bridgeObjectRelease();
        uint64_t v8 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_220826F78(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v39;
        }
        unint64_t v26 = *(void *)(v8 + 16);
        unint64_t v25 = *(void *)(v8 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_220826F78((void *)(v25 > 1), v26 + 1, 1);
          uint64_t v8 = v39;
        }
        *(void *)(v8 + 16) = v26 + 1;
        *(void *)(v8 + 8 * v26 + 32) = v17;
        int64_t v27 = sub_2208BAE5C(v10, v38, v12 & 1, a1);
        int64_t v10 = v27;
        char v12 = v28 & 1;
        if (--v7) {
          continue;
        }
        sub_2208BB350(v27, v9, v28 & 1);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v14 + 16);
        uint64_t v19 = *(void *)(v14 + 24);
        uint64_t v18 = v19 - v20;
        if (!__OFSUB__(v19, v20)) {
          goto LABEL_13;
        }
        goto LABEL_31;
      case 3uLL:
        goto LABEL_19;
      default:
        uint64_t v18 = BYTE6(v16);
        goto LABEL_13;
    }
    return v8;
  }
}

uint64_t sub_2208BB350(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionMatcher()
{
  return &type metadata for OptionMatcher;
}

uint64_t sub_2208BB36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_22093E100();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - v17;
  if ((_BYTE)v3[2]) {
    goto LABEL_6;
  }
  uint64_t v19 = v3[1];
  if (((unint64_t)v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((unint64_t)v19 >= *((void *)*v3 + 2))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v20 = *(void (**)(uint64_t *))&(*v3)[16 * (void)v19 + 32];
  uint64_t v35 = a1;
  uint64_t v36 = v34;
  swift_retain();
  v20(&v35);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
LABEL_12:
    BOOL v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v24(v18, v11, v12);
    unint64_t v25 = a3;
    unint64_t v26 = v18;
LABEL_14:
    v24(v25, v26, v12);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
  }
  sub_2208573C0((uint64_t)v11);
LABEL_6:
  char v11 = *v3;
  uint64_t v21 = *((void *)*v3 + 2);
  if (v21)
  {
    unint64_t v30 = v3;
    uint64_t v31 = v13;
    uint64_t v32 = a3;
    unint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    a3 = v11 + 40;
    uint64_t v23 = (char *)(v21 - 1);
    while (1)
    {
      uint64_t v13 = *((void *)a3 - 1);
      uint64_t v35 = a1;
      uint64_t v36 = v34;
      swift_retain();
      ((void (*)(uint64_t *))v13)(&v35);
      swift_release();
      if ((*v22)(v9, 1, v12) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v31;
        BOOL v24 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        int64_t v27 = v33;
        v24(v33, v9, v12);
        char v28 = v30;
        v30[1] = v18;
        *((unsigned char *)v28 + 16) = 0;
        a3 = v32;
        unint64_t v25 = v32;
        unint64_t v26 = v27;
        goto LABEL_14;
      }
      sub_2208573C0((uint64_t)v9);
      if (v23 == v18) {
        break;
      }
      ++v18;
      a3 += 16;
      if ((unint64_t)v18 >= *((void *)v11 + 2))
      {
        __break(1u);
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v31;
    a3 = v32;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, 1, 1, v12);
}

uint64_t initializeBufferWithCopyOfBuffer for DateParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DateParser()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for DateParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for DateParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateParser(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateParser()
{
  return &type metadata for DateParser;
}

uint64_t sub_2208BB82C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 == a4)
  {
    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = a3;
    if (a4 >= a3)
    {
      uint64_t v8 = (uint64_t (*)(uint64_t *))result;
      uint64_t v5 = MEMORY[0x263F8EE78];
      while (a4 != v7)
      {
        uint64_t v11 = v7;
        uint64_t result = v8(&v11);
        if (v4)
        {
          swift_release();
          return v5;
        }
        if (result)
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v12 = v5;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_220826C98(0, *(void *)(v5 + 16) + 1, 1);
            uint64_t v5 = v12;
          }
          unint64_t v10 = *(void *)(v5 + 16);
          unint64_t v9 = *(void *)(v5 + 24);
          if (v10 >= v9 >> 1)
          {
            uint64_t result = (uint64_t)sub_220826C98((char *)(v9 > 1), v10 + 1, 1);
            uint64_t v5 = v12;
          }
          *(void *)(v5 + 16) = v10 + 1;
          *(void *)(v5 + 8 * v10 + 32) = v7;
        }
        if (a4 == ++v7) {
          return v5;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t static Column.+= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBB30(a1, a2, a3, a4, (uint64_t)sub_2208BB994, (void (*)(void *))sub_2208BB9B0);
}

BOOL sub_2208BB994(Swift::Int *a1)
{
  return sub_2208BBC44(a1);
}

uint64_t *sub_2208BB9B0(uint64_t *a1)
{
  return sub_2208BBCB4(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F8DF30]);
}

uint64_t static Column.-= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBB30(a1, a2, a3, a4, (uint64_t)sub_2208BB994, (void (*)(void *))sub_2208BBA10);
}

uint64_t *sub_2208BBA10(uint64_t *a1)
{
  return sub_2208BBCB4(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F8DF38]);
}

uint64_t static Column.*= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBB30(a1, a2, a3, a4, (uint64_t)sub_2208BB994, (void (*)(void *))sub_2208BBA70);
}

uint64_t *sub_2208BBA70(uint64_t *a1)
{
  return sub_2208BBCB4(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F8D760]);
}

uint64_t static Column./= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBB30(a1, a2, a3, a4, (uint64_t)sub_2208BB994, (void (*)(void *))sub_2208BBAD0);
}

{
  return sub_2208BBB30(a1, a2, a3, a4, (uint64_t)sub_2208BB994, (void (*)(void *))sub_2208BBD70);
}

uint64_t *sub_2208BBAD0(uint64_t *a1)
{
  return sub_2208BBCB4(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F8DA88]);
}

uint64_t sub_2208BBB30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *))
{
  uint64_t v16 = *a1;
  long long v17 = *(_OWORD *)(a1 + 1);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093EA40();
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a1;
  sub_2208BB82C(a5, (uint64_t)v12, v18, v19);
  type metadata accessor for PackedOptionalsArray();
  sub_22091F990(a6);
  return swift_bridgeObjectRelease();
}

BOOL sub_2208BBC44(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  type metadata accessor for Column();
  return !Column.isNil(at:)(v1);
}

uint64_t *sub_2208BBCB4(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    uint64_t v12 = *result;
    uint64_t v13 = *(void *)(*(void *)(a4 - 8) + 72);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      uint64_t v15 = *(void *)(a2 + 8 * i + 32);
      a6(v12 + v13 * v15, a3, a4, a5);
    }
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_2208BBD70(uint64_t *a1)
{
  return sub_2208BBCB4(a1, v1[4], v1[5], v1[2], v1[3], MEMORY[0x263F8D0C0]);
}

uint64_t static ColumnSlice.+= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBE1C(a1, a2, a3, a4, MEMORY[0x263F8DF30]);
}

uint64_t static ColumnSlice.-= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBE1C(a1, a2, a3, a4, MEMORY[0x263F8DF38]);
}

uint64_t static ColumnSlice.*= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBE1C(a1, a2, a3, a4, MEMORY[0x263F8D760]);
}

uint64_t static ColumnSlice./= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BBE1C(a1, a2, a3, a4, MEMORY[0x263F8DA88]);
}

{
  return sub_2208BBE1C(a1, a2, a3, a4, MEMORY[0x263F8D0C0]);
}

uint64_t sub_2208BBE1C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v24 = a4;
  unint64_t v25 = a5;
  uint64_t v23 = a2;
  uint64_t v22 = sub_22093ED30();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *((void *)a1 + 2);
  long long v28 = *a1;
  uint64_t v29 = v10;
  long long v30 = *(long long *)((char *)a1 + 24);
  uint64_t v26 = a3;
  type metadata accessor for ColumnSlice();
  swift_getWitnessTable();
  uint64_t result = sub_22093EA40();
  Swift::Int v13 = v31;
  Swift::Int v12 = v32;
  if (v31 != v32)
  {
    if (v32 >= v31)
    {
      v21[0] = v7 + 8;
      v21[1] = v26 - 8;
      Swift::Int v27 = v32;
      while (v13 < v12)
      {
        uint64_t v14 = (uint64_t)v9;
        uint64_t v16 = *(void *)a1;
        uint64_t v15 = *((void *)a1 + 1);
        uint64_t v18 = *((void *)a1 + 2);
        uint64_t v17 = *((void *)a1 + 3);
        uint64_t v19 = *((void *)a1 + 4);
        *(void *)&long long v28 = *(void *)a1;
        *((void *)&v28 + 1) = v15;
        uint64_t v29 = v18;
        *(void *)&long long v30 = v17;
        *((void *)&v30 + 1) = v19;
        uint64_t result = ColumnSlice.isNil(at:)(v13);
        if ((result & 1) == 0)
        {
          *(void *)&long long v28 = v16;
          *((void *)&v28 + 1) = v15;
          uint64_t v29 = v18;
          *(void *)&long long v30 = v17;
          *((void *)&v30 + 1) = v19;
          ColumnSlice.subscript.getter();
          uint64_t v20 = v26;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v14, 1, v26);
          if (result == 1) {
            goto LABEL_12;
          }
          v25(v14, v23, v20, v24);
          sub_22086E9E4(v14, v13);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))v21[0])(v14, v22);
        }
        ++v13;
        Swift::Int v12 = v27;
        unint64_t v9 = (char *)v14;
        if (v27 == v13) {
          return result;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t static DiscontiguousColumnSlice.+= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BC0F8(a1, a2, a3, a4, MEMORY[0x263F8DF30]);
}

uint64_t static DiscontiguousColumnSlice.-= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BC0F8(a1, a2, a3, a4, MEMORY[0x263F8DF38]);
}

uint64_t static DiscontiguousColumnSlice.*= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BC0F8(a1, a2, a3, a4, MEMORY[0x263F8D760]);
}

uint64_t static DiscontiguousColumnSlice./= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208BC0F8(a1, a2, a3, a4, MEMORY[0x263F8DA88]);
}

{
  return sub_2208BC0F8(a1, a2, a3, a4, MEMORY[0x263F8D0C0]);
}

uint64_t sub_2208BC0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v29 = a5;
  uint64_t v28 = a4;
  uint64_t v27 = a2;
  uint64_t v26 = sub_22093ED30();
  v25[0] = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (uint64_t)v25 - v7;
  char v8 = *(unsigned char *)(a1 + 40);
  Swift::Int v58 = *(void *)a1;
  long long v59 = *(_OWORD *)(a1 + 8);
  long long v60 = *(_OWORD *)(a1 + 24);
  char v61 = v8;
  uint64_t v31 = a3;
  uint64_t v9 = type metadata accessor for DiscontiguousColumnSlice();
  swift_getWitnessTable();
  sub_22093EBA0();
  Swift::Int v38 = v50;
  uint64_t v40 = v51;
  uint64_t v10 = v53;
  uint64_t v39 = v52;
  uint64_t v11 = v54;
  int v12 = v55;
  uint64_t v14 = v56;
  uint64_t v13 = v57;
  Swift::Int v42 = v50;
  uint64_t v43 = v51;
  uint64_t v44 = v52;
  uint64_t v45 = v53;
  uint64_t v46 = v54;
  unsigned __int8 v47 = v55;
  uint64_t v48 = v56;
  uint64_t v49 = v57;
  uint64_t v41 = v9;
  sub_22093E3B0();
  MEMORY[0x223C69AA0](&v58);
  Swift::Int v15 = v58;
  Swift::Int v58 = v38;
  *(void *)&long long v59 = v40;
  *((void *)&v59 + 1) = v39;
  *(void *)&long long v60 = v10;
  uint64_t v37 = v10;
  uint64_t v36 = v11;
  *((void *)&v60 + 1) = v11;
  int v35 = v12;
  char v61 = v12;
  uint64_t v34 = v14;
  uint64_t v62 = v14;
  uint64_t v63 = v13;
  uint64_t v33 = v13;
  Swift::Int v64 = v15;
  sub_22093E390();
  if (v15 == v50)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_22080B6B4(v37, v36, v35);
  }
  Swift::Int v32 = &v64;
  v25[1] = v31 - 8;
  v25[0] += 8;
  while (1)
  {
    Swift::Int v50 = v38;
    uint64_t v51 = v40;
    uint64_t v52 = v39;
    uint64_t v53 = v37;
    uint64_t v54 = v36;
    unsigned __int8 v55 = v35;
    uint64_t v56 = v34;
    uint64_t v57 = v33;
    sub_22093E3A0();
    Swift::Int v18 = *(void *)a1;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    uint64_t v21 = *(void *)(a1 + 32);
    unsigned __int8 v22 = *(unsigned char *)(a1 + 40);
    Swift::Int v50 = *(void *)a1;
    uint64_t v51 = v17;
    uint64_t v52 = v20;
    uint64_t v53 = v19;
    uint64_t v54 = v21;
    unsigned __int8 v55 = v22;
    if (!DiscontiguousColumnSlice.isNil(at:)(v15)) {
      break;
    }
LABEL_4:
    Swift::Int v15 = v64;
    sub_22093E390();
    if (v15 == v50) {
      goto LABEL_2;
    }
  }
  Swift::Int v50 = v18;
  uint64_t v51 = v17;
  uint64_t v52 = v20;
  uint64_t v53 = v19;
  uint64_t v54 = v21;
  unsigned __int8 v55 = v22;
  uint64_t v23 = v30;
  DiscontiguousColumnSlice.subscript.getter(v15, v30);
  uint64_t v24 = v31;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v23, 1, v31);
  if (result != 1)
  {
    v29(v23, v27, v24, v28);
    sub_2208C28E0(v23, v15);
    (*(void (**)(uint64_t, uint64_t))v25[0])(v23, v26);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208BC55C(unsigned __int8 **a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a4;
  if ((a4 & 8) != 0) {
    int v9 = *(*a1)++;
  }
  else {
    int v9 = 0;
  }
  uint64_t result = sub_220844BB4(a1, a2);
  if (v4) {
    return (uint64_t)v5;
  }
  uint64_t v11 = result;
  uint64_t v12 = *(void *)(result + 16);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = (uint64_t *)(result + 32);
    do
    {
      uint64_t v15 = *v14++;
      BOOL v16 = __OFADD__(v13, v15);
      v13 += v15;
      if (v16)
      {
        __break(1u);
        goto LABEL_47;
      }
      --v12;
    }
    while (v12);
    if (!v9) {
      goto LABEL_42;
    }
  }
  else
  {
    uint64_t v13 = 0;
    if (!v9)
    {
LABEL_42:
      uint64_t result = sub_22093DCA0(a1, v13, a3, (char)v5);
      goto LABEL_12;
    }
  }
  if (v9 != 1)
  {
    swift_bridgeObjectRelease();
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD000000000000024;
    *(void *)(v34 + 8) = 0x80000002209408D0;
    *(unsigned char *)(v34 + 16) = 3;
    swift_willThrow();
    return (uint64_t)v5;
  }
  uint64_t result = sub_22093DA98(a1, v13);
LABEL_12:
  uint64_t v17 = result;
  if (a2 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (!a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if ((unint64_t)(a2 - 1) < *(void *)(v11 + 16))
  {
    unint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v35 = result + 32;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v36 = v11;
    uint64_t v37 = a2;
    while (1)
    {
      uint64_t v20 = v11 + 8 * v19;
      uint64_t v21 = *(void *)(v20 + 32);
      uint64_t v22 = v18 + v21;
      if (__OFADD__(v18, v21)) {
        break;
      }
      uint64_t v23 = *(void *)(v20 + 32);
      if (v22 < (uint64_t)v18) {
        goto LABEL_48;
      }
      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_49;
      }
      unint64_t v24 = *(void *)(v17 + 16);
      if (v24 < v18 || (uint64_t)v24 < v22) {
        goto LABEL_50;
      }
      sub_22093F260();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = MEMORY[0x263F8EE78];
      }
      uint64_t v27 = *(void *)(v26 + 16);
      swift_release();
      if (v27 == v23)
      {
        uint64_t v28 = (void *)swift_dynamicCastClass();
        if (!v28)
        {
          swift_bridgeObjectRelease();
          uint64_t v28 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v28 = (void *)MEMORY[0x263F8EE78];
        if (v22 != v18)
        {
          if (v23 >= 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_267F185F0);
            uint64_t v28 = (void *)swift_allocObject();
            int64_t v32 = _swift_stdlib_malloc_size(v28);
            uint64_t v33 = v32 - 32;
            if (v32 < 32) {
              uint64_t v33 = v32 - 25;
            }
            void v28[2] = v23;
            void v28[3] = 2 * (v33 >> 3);
          }
          memcpy(v28 + 4, (const void *)(v35 + 8 * v18), 8 * v23);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_22081C384(0, v5[2] + 1, 1, v5);
        uint64_t v5 = (void *)result;
      }
      unint64_t v30 = v5[2];
      unint64_t v29 = v5[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t result = (uint64_t)sub_22081C384((void *)(v29 > 1), v30 + 1, 1, v5);
        uint64_t v5 = (void *)result;
      }
      v5[2] = v30 + 1;
      v5[v30 + 4] = v28;
      uint64_t v31 = *(void *)(v20 + 32);
      BOOL v16 = __OFADD__(v18, v31);
      v18 += v31;
      if (v16) {
        goto LABEL_51;
      }
      ++v19;
      uint64_t v11 = v36;
      if (v37 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_2208BC93C(unsigned __int8 *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 1) {
    goto LABEL_7;
  }
  int v3 = *a1;
  if (v3 == 43)
  {
    if (a2 == 1) {
      return 0;
    }
    uint64_t v6 = 1;
    int v5 = 0;
    goto LABEL_8;
  }
  if (v3 != 45)
  {
LABEL_7:
    int v5 = 0;
    uint64_t v6 = 0;
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    uint64_t result = 0;
LABEL_12:
    BOOL v8 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v8) {
LABEL_29:
    }
      __break(1u);
    return result;
  }
  int v5 = 1;
  uint64_t v6 = 1;
LABEL_8:
  unsigned int v7 = a1[v6];
  if (v7 <= 0x2F || v7 > 0x39)
  {
    uint64_t result = 0;
    if (v6 != a2 || ((v5 ^ 1) & 1) != 0) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t result = 0;
  uint64_t v9 = ~v6 + a2;
  uint64_t v10 = &a1[v6 + 1];
  while (1)
  {
    uint64_t v11 = 10 * result;
    if ((unsigned __int128)(result * (__int128)10) >> 64 != (10 * result) >> 63)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    unsigned __int8 v12 = v7 - 48;
    uint64_t result = v11 + v12;
    if (__OFADD__(v11, v12)) {
      goto LABEL_28;
    }
    if (!v9) {
      break;
    }
    char v13 = *v10++;
    LOBYTE(v7) = v13;
    --v9;
    if ((v13 - 58) < 0xF6u) {
      return 0;
    }
  }
  if (v5) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_2208BCA5C(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v5 = HIBYTE(a2) & 0xF;
    v10[0] = a1;
    v10[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v4 = (unsigned __int8 *)v10;
    goto LABEL_7;
  }
  a1 = sub_2208CDDFC();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  a2 = v7;
  if ((v7 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v4 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v4 = (unsigned __int8 *)sub_22093EF60();
  }
LABEL_7:
  uint64_t v8 = sub_2208BC93C(v4, v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2208BCB14@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v78 = a1;
  uint64_t v79 = a2;
  uint64_t v57 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v84 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  Swift::Int v64 = (char *)&v56 - v12;
  uint64_t v80 = a3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v66 = sub_22093ECE0();
  unint64_t v81 = *(void (**)(char *, uint64_t))(v66 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  long long v76 = (char *)&v56 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  unint64_t v74 = *(void (***)(char *, uint64_t))(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v77 = (char *)&v56 - v19;
  int64_t v71 = *(void (***)(char *, char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v86 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v56 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v56 - v25;
  uint64_t v83 = AssociatedConformanceWitness;
  uint64_t v27 = type metadata accessor for _RangeSet();
  uint64_t v56 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v29 = (char *)&v56 - v28;
  if (sub_22093EAC0()) {
    return sub_220872AE0(AssociatedTypeWitness, v83);
  }
  unint64_t v82 = v24;
  uint64_t v63 = v27;
  uint64_t v75 = v17;
  sub_220872AE0(AssociatedTypeWitness, v83);
  sub_22093EA60();
  unint64_t v88 = (void (**)(char *, uint64_t))(v71 + 1);
  uint64_t v73 = (void (**)(char *))(v74 + 2);
  ++v74;
  uint64_t v62 = v71 + 2;
  v71 += 4;
  long long v60 = (void (**)(char *, char *, uint64_t))((char *)v81 + 32);
  long long v59 = (void (**)(uint64_t, uint64_t))((char *)v81 + 8);
  uint64_t v70 = a4;
  uint64_t v61 = v6;
  uint64_t v72 = v29;
  Swift::Int v58 = v26;
  while (1)
  {
    while (1)
    {
      uint64_t v31 = v82;
      sub_22093EAE0();
      char v32 = sub_22093E520();
      uint64_t v33 = v31;
      uint64_t v34 = *v88;
      (*v88)(v33, AssociatedTypeWitness);
      if (v32)
      {
        v34(v26, AssociatedTypeWitness);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v56 + 32))(v57, v29, v63);
      }
      sub_22093EA90();
      uint64_t v35 = (void (*)(void, void))sub_22093EBD0();
      uint64_t v36 = v77;
      uint64_t v37 = v75;
      (*v73)(v77);
      v35(v87, 0);
      uint64_t v38 = v85;
      char v39 = v78(v36);
      uint64_t v85 = v38;
      if (v38)
      {
        (*v74)(v36, v37);
        v34(v86, AssociatedTypeWitness);
        v34(v26, AssociatedTypeWitness);
        return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v72, v63);
      }
      char v40 = v39;
      (*v74)(v36, v37);
      if (v40) {
        break;
      }
      v34(v26, AssociatedTypeWitness);
      unint64_t v29 = v72;
      (*v71)(v26, v86, AssociatedTypeWitness);
    }
    unint64_t v81 = v34;
    uint64_t v41 = *v62;
    Swift::Int v42 = v82;
    (*v62)(v82, v26, AssociatedTypeWitness);
    uint64_t v43 = v86;
    uint64_t result = sub_22093E480();
    if ((result & 1) == 0) {
      break;
    }
    uint64_t v44 = v64;
    uint64_t v45 = TupleTypeMetadata2;
    int64_t v68 = &v64[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v46 = (void (*)(void, void, void))*v71;
    uint64_t v69 = (unint64_t)v71 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v46(v64, v42, AssociatedTypeWitness);
    unsigned __int8 v47 = v68;
    v41(v68, v43, AssociatedTypeWitness);
    uint64_t v48 = &v84[*(int *)(v45 + 48)];
    v41(v84, v44, AssociatedTypeWitness);
    v41(v48, v47, AssociatedTypeWitness);
    uint64_t v49 = v65;
    v46(v65, v84, AssociatedTypeWitness);
    v81(v48, AssociatedTypeWitness);
    uint64_t v50 = *(int *)(v45 + 48);
    uint64_t v51 = v84;
    uint64_t v52 = &v84[v50];
    v46(v84, v44, AssociatedTypeWitness);
    v46(v52, v47, AssociatedTypeWitness);
    uint64_t v53 = v66;
    v46(&v49[*(int *)(v66 + 36)], v52, AssociatedTypeWitness);
    uint64_t v54 = v81;
    v81(v51, AssociatedTypeWitness);
    uint64_t v55 = (uint64_t)v76;
    (*v60)(v76, v49, v53);
    unint64_t v29 = v72;
    sub_220872AE4(v55, v63);
    (*v59)(v55, v53);
    uint64_t v26 = v58;
    v54(v58, AssociatedTypeWitness);
    v46(v26, v86, AssociatedTypeWitness);
  }
  __break(1u);
  return result;
}

uint64_t sub_2208BD3D8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v44 = (char *)&v36 - v12;
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v43);
  uint64_t v38 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = sub_22093EA80();
  uint64_t v51 = a5;
  uint64_t v48 = a4;
  uint64_t v49 = v5;
  uint64_t v47 = a3;
  uint64_t result = sub_22093EA60();
  if (v18 >= 1)
  {
    uint64_t v20 = (void (**)(char *))(v11 + 16);
    uint64_t v21 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v41 = v20;
    Swift::Int v42 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v37 = (uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32);
    uint64_t v22 = AssociatedTypeWitness;
    while (1)
    {
      sub_22093EAA0();
      unint64_t v29 = (void (*)(char *, void))sub_22093EBD0();
      unint64_t v30 = v44;
      (*v41)(v44);
      v29(v50, 0);
      char v31 = v45(v30);
      if (v7) {
        break;
      }
      char v32 = v31;
      (*v21)(v30, v22);
      if (v32)
      {
        uint64_t result = (*v42)(v17, v43);
        uint64_t v18 = (unint64_t)v18 >> 1;
      }
      else
      {
        uint64_t v40 = 0;
        uint64_t v23 = v21;
        unint64_t v24 = v38;
        sub_22093EA90();
        uint64_t v25 = v43;
        uint64_t v26 = *v42;
        (*v42)(v17, v43);
        uint64_t v27 = v51;
        v26(v51, v25);
        uint64_t v28 = v24;
        uint64_t v21 = v23;
        uint64_t v22 = AssociatedTypeWitness;
        uint64_t v7 = v40;
        uint64_t result = (*v37)((uint64_t)v27, v28, v25);
        v18 += ~((unint64_t)v18 >> 1);
      }
      if (v18 <= 0) {
        return result;
      }
    }
    (*v21)(v30, v22);
    uint64_t v33 = *v42;
    uint64_t v34 = v17;
    uint64_t v35 = v43;
    (*v42)(v34, v43);
    return v33(v51, v35);
  }
  return result;
}

uint64_t sub_2208BD770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return 0;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (void *)(a1 + 40);
  do
  {
    unint64_t v8 = v6 + 1;
    BOOL v9 = *(v7 - 1) == a2 && *v7 == a3;
    if (v9 || (sub_22093F250() & 1) != 0) {
      sub_22081A204(v6, v6 + 1);
    }
    v7 += 4;
    ++v6;
  }
  while (v4 != v8);
  return 0;
}

uint64_t sub_2208BD83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return 0;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (void *)(a1 + 56);
  do
  {
    unint64_t v8 = v6 + 1;
    BOOL v9 = *(v7 - 1) == a2 && *v7 == a3;
    if (v9 || (sub_22093F250() & 1) != 0) {
      sub_22081A204(v6, v6 + 1);
    }
    v7 += 4;
    ++v6;
  }
  while (v4 != v8);
  return 0;
}

uint64_t ShapedData.shape.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.strides.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShapedData.init(shape:strides:contents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(a1 + 32);
    uint64_t v11 = 1;
    uint64_t v12 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v13 = *v10++;
      uint64_t v14 = v11 * v13;
      if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63) {
        break;
      }
      uint64_t v11 = v14;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v14 = 1;
LABEL_7:
    uint64_t result = MEMORY[0x223C69FE0](a3, a4);
    if (v14 == result)
    {
      *a5 = a1;
      a5[1] = a2;
      a5[2] = a3;
      return result;
    }
  }
  sub_22093EEA0();
  sub_22093E6C0();
  MEMORY[0x223C69F60](a1, MEMORY[0x263F8D6C8]);
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  if (v9)
  {
    uint64_t v16 = (uint64_t *)(a1 + 32);
    uint64_t v17 = 1;
    while (1)
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63) {
        break;
      }
      uint64_t v17 = v19;
      if (!--v9) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
LABEL_16:
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t ShapedData.subscript.getter(void *a1)
{
  sub_2208BDBD0(a1);

  return sub_22093E940();
}

uint64_t sub_2208BDBD0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = a1[2];
  if (v3 != v2[2]) {
    goto LABEL_15;
  }
  if (!v3) {
    return 0;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = v2[4];
  uint64_t result = v5 * v6;
  if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  if (v3 != 1)
  {
    unint64_t v8 = a1 + 5;
    uint64_t v9 = v2 + 5;
    for (uint64_t i = v3 - 2; ; --i)
    {
      uint64_t v12 = *v8++;
      uint64_t v11 = v12;
      uint64_t v13 = *v9++;
      uint64_t v14 = v11 * v13;
      if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63) {
        break;
      }
      BOOL v15 = __OFADD__(result, v14);
      result += v14;
      if (v15) {
        goto LABEL_13;
      }
      if (!i) {
        return result;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t static ShapedData<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a2 + 8);
  if (!sub_22081891C(*(void **)a1, *(void **)a2) || !sub_22081891C(v2, v3)) {
    return 0;
  }

  return sub_22093E920();
}

uint64_t sub_2208BDE58(uint64_t a1, uint64_t a2)
{
  return static ShapedData<A>.== infix(_:_:)(a1, a2);
}

uint64_t ShapedData<A>.hash(into:)()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_22093F440();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      v4 += 8;
      sub_22093F440();
      --v3;
    }
    while (v3);
  }
  sub_22093F440();
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = v1 + 32;
    do
    {
      v6 += 8;
      sub_22093F440();
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRetain();
  sub_22093E910();

  return swift_bridgeObjectRelease();
}

uint64_t ShapedData<A>.hashValue.getter()
{
  return sub_22093F490();
}

uint64_t sub_2208BDF98()
{
  return ShapedData<A>.hashValue.getter();
}

uint64_t sub_2208BDFA0()
{
  return ShapedData<A>.hash(into:)();
}

uint64_t sub_2208BDFA8()
{
  return sub_22093F490();
}

uint64_t sub_2208BDFFC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ShapedData()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Bool __swiftcall DiscontiguousColumnSlice.isNil(at:)(Swift::Int at)
{
  return sub_22091F068(at);
}

__n128 sub_2208BE06C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 40) = v2;
  return result;
}

uint64_t sub_2208BE090(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = a2;
  uint64_t v12 = a1;
  uint64_t v11 = &v12;
  sub_220831F30(a2, a3, a4);
  unint64_t v7 = sub_2208FD268((uint64_t (*)(long long *))sub_22089466C, (uint64_t)v10, v6, a3, a4);
  sub_22080B6B4(v6, a3, a4);
  if (a4)
  {
    if (a4 == 1)
    {
      unint64_t v8 = *(void *)(v6 + 16);
      if (v7 != v8)
      {
        if (v7 < v8)
        {
          uint64_t v6 = *(void *)(v6 + 16 * v7 + 32);
          return v12 >= v6;
        }
        goto LABEL_13;
      }
    }
    else if (v7)
    {
LABEL_14:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
  }
  else if (v7 != 1)
  {
    if (!v7) {
      return v12 >= v6;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return 0;
}

__n128 sub_2208BE1D0@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v17 = *a1;
  uint64_t v18 = v9;
  uint64_t v19 = v10;
  v15[0] = a2;
  v15[1] = a3;
  char v16 = a4;
  uint64_t v11 = type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22085E388((uint64_t)v15, v11, (uint64_t)&v20);
  sub_22080B6B4(a2, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  char v12 = v23;
  __n128 result = v21;
  long long v14 = v22;
  *(void *)a5 = v20;
  *(__n128 *)(a5 + 8) = result;
  *(_OWORD *)(a5 + 24) = v14;
  *(unsigned char *)(a5 + 40) = v12;
  return result;
}

uint64_t DiscontiguousColumnSlice.count.getter()
{
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v0 = type metadata accessor for _DiscontiguousSlice();
  return sub_22085FD3C(v0);
}

void *DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  char v7 = *(unsigned char *)(v2 + 40);
  sub_220831F30(v5, v6, v7);
  char v8 = sub_2208BE090(a1, v5, v6, v7);
  sub_22080B6B4(v5, v6, v7);
  if (v8)
  {
    type metadata accessor for Column();
    return Column.subscript.getter(a1, a2);
  }
  else
  {
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    __n128 result = (void *)sub_22093F090();
    __break(1u);
  }
  return result;
}

__n128 DiscontiguousColumnSlice.init(column:ranges:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v20 = 0;
  v21.n128_u64[0] = 0;
  v21.n128_u8[8] = 2;
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    char v8 = (uint64_t *)(a2 + 40);
    do
    {
      sub_220869870(*(v8 - 1), *v8);
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = v20;
    uint64_t v7 = v21.n128_u64[0];
    char v10 = v21.n128_i8[8];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    char v10 = 2;
  }
  uint64_t v17 = v5;
  uint64_t v18 = v4;
  uint64_t v19 = v6;
  v15[0] = v9;
  v15[1] = v7;
  char v16 = v10;
  uint64_t v11 = type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22085E388((uint64_t)v15, v11, (uint64_t)&v20);
  sub_22080B6B4(v9, v7, v10);
  swift_release();
  swift_bridgeObjectRelease();
  char v12 = v23;
  __n128 result = v21;
  long long v14 = v22;
  *(void *)a3 = v20;
  *(__n128 *)(a3 + 8) = result;
  *(_OWORD *)(a3 + 24) = v14;
  *(unsigned char *)(a3 + 40) = v12;
  return result;
}

uint64_t sub_2208BE604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = a2;
  uint64_t v13 = a1;
  char v12 = &v13;
  sub_220831F30(a2, a3, a4);
  unint64_t v7 = sub_2208FD268((uint64_t (*)(long long *))sub_2208C363C, (uint64_t)v11, v6, a3, a4);
  sub_22080B6B4(v6, a3, a4);
  if (a4)
  {
    if (a4 == 1)
    {
      unint64_t v8 = *(void *)(v6 + 16);
      if (v7 != v8)
      {
        if (v7 < v8)
        {
          uint64_t v9 = v13;
          uint64_t v6 = *(void *)(v6 + 16 * v7 + 32);
          goto LABEL_9;
        }
        __break(1u);
        goto LABEL_16;
      }
    }
    else if (v7)
    {
LABEL_17:
      uint64_t result = sub_22093F090();
      __break(1u);
      return result;
    }
    return 0;
  }
  if (v7 == 1) {
    return 0;
  }
  if (v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v13;
LABEL_9:
  if (v9 >= v6) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_2208C28E0(a1, a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t DiscontiguousColumnSlice.name.getter()
{
  uint64_t v0 = sub_220869F28();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2208BE800@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DiscontiguousColumnSlice();
  *a1 = sub_220869F28();
  a1[1] = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2208BE878(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return DiscontiguousColumnSlice.name.setter(v1, v2);
}

uint64_t DiscontiguousColumnSlice.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DiscontiguousColumnSlice.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_2208BE940;
}

uint64_t sub_2208BE940(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.wrappedElementType.getter(uint64_t a1)
{
  return nullsub_5(*(void *)(a1 + 16));
}

uint64_t DiscontiguousColumnSlice.prototype.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = nullsub_5(*v1);
  uint64_t v5 = v4;
  a1[3] = type metadata accessor for ColumnPrototype();
  a1[4] = (uint64_t)&off_26D221838;
  *a1 = v3;
  a1[1] = v5;

  return swift_bridgeObjectRetain();
}

uint64_t DiscontiguousColumnSlice.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v18 = *a1;
  *(void *)&long long v19 = v3;
  *((void *)&v19 + 1) = v5;
  uint64_t v6 = type metadata accessor for Column();
  uint64_t result = Column.count.getter(v6);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    uint64_t v15 = v4;
    uint64_t v16 = v3;
    uint64_t v17 = v5;
    v13[0] = 0;
    v13[1] = result;
    char v9 = 2 * (result == 0);
    char v14 = v9;
    swift_getWitnessTable();
    sub_22085E388((uint64_t)v13, v6, (uint64_t)&v18);
    sub_22080B6B4(0, v8, v9);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = v21;
    long long v11 = v19;
    long long v12 = v20;
    *(void *)a2 = v18;
    *(_OWORD *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 40) = v10;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *(void *)v5;
  uint64_t v9 = *(void *)(v5 + 8);
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = *(void *)(v5 + 24);
  uint64_t v12 = *(void *)(v5 + 32);
  char v13 = *(unsigned char *)(v5 + 40);
  uint64_t v25 = v8;
  v32[0] = v8;
  v32[1] = v9;
  v32[2] = v10;
  uint64_t v33 = v11;
  uint64_t v34 = v12;
  char v35 = v13;
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v29 = a4;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_220831F30(v11, v12, v13);
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for _DiscontiguousSlice();
  uint64_t v15 = sub_22093ED30();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_2208F0D18((void (*)(char *, char *))sub_2208C2A54, (uint64_t)v27, v14, v15, v16, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v36);
  uint64_t v19 = v33;
  uint64_t v20 = v34;
  char v21 = v35;
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v19, v20, v21);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  v32[0] = v18;
  uint64_t v23 = sub_22093E900();
  uint64_t v24 = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v25, v9, (uint64_t)v32, a4, v23, v24, a5);
}

void DiscontiguousColumnSlice.filter(_:)(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v39 = a1;
  uint64_t v40 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v32 = a4;
  uint64_t v7 = sub_22093ED30();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v82 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_22093ED30();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v29 - v13);
  uint64_t v15 = *(void *)(v4 + 8);
  uint64_t v38 = *(void *)v4;
  uint64_t v17 = *(void *)(v4 + 16);
  uint64_t v16 = *(void *)(v4 + 24);
  uint64_t v35 = *(void *)(v4 + 32);
  uint64_t v36 = v16;
  int v34 = *(unsigned __int8 *)(v4 + 40);
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  char v81 = 2;
  *(void *)&v45[0] = v38;
  *((void *)&v45[0] + 1) = v15;
  *(void *)&v45[1] = v17;
  *((void *)&v45[1] + 1) = v16;
  *(void *)&v45[2] = v35;
  BYTE8(v45[2]) = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093EBA0();
  uint64_t v41 = *((void *)&v51 + 1);
  uint64_t v42 = v51;
  *(void *)&long long v44 = *((void *)&v52 + 1);
  *((void *)&v44 + 1) = v52;
  LODWORD(v43) = v53;
  uint64_t v65 = v50;
  long long v66 = v51;
  long long v67 = v52;
  unsigned __int8 v68 = v53;
  long long v69 = v54;
  uint64_t v59 = v38;
  uint64_t v60 = v15;
  *(void *)&long long v30 = v15;
  *((void *)&v30 + 1) = v17;
  uint64_t v61 = v17;
  uint64_t v62 = v36;
  uint64_t v63 = v35;
  char v64 = v34;
  uint64_t v18 = sub_22093E3B0();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  sub_22093F2C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v44 + 1), v44, v43);
  uint64_t v50 = *(void *)&v45[0];
  long long v51 = *(_OWORD *)((char *)v45 + 8);
  long long v52 = *(_OWORD *)((char *)&v45[1] + 8);
  unsigned __int8 v53 = BYTE8(v45[2]);
  long long v54 = v46;
  uint64_t v55 = *(void *)&v47[0];
  long long v56 = *(_OWORD *)((char *)v47 + 8);
  long long v57 = *(_OWORD *)((char *)&v47[1] + 8);
  char v58 = BYTE8(v47[2]);
  *(void *)&long long v44 = v18;
  *((void *)&v44 + 1) = a3;
  uint64_t v65 = v18;
  *(void *)&long long v66 = a3;
  uint64_t v42 = v20;
  uint64_t v43 = v19;
  *((void *)&v66 + 1) = v19;
  *(void *)&long long v67 = v20;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v41 = TupleTypeMetadata2 - 8;
  char v21 = (void (**)(char *, char *, uint64_t))(v37 + 32);
  for (uint64_t i = (void (**)(char *, uint64_t))(v37 + 8); ; (*i)(v9, v82))
  {
    v45[0] = v44;
    *(void *)&v45[1] = v43;
    *((void *)&v45[1] + 1) = v42;
    sub_22093EED0();
    sub_22093EEC0();
    if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      v47[2] = v76;
      long long v48 = v77;
      char v49 = v78;
      v45[2] = v72;
      long long v46 = v73;
      v47[0] = v74;
      v47[1] = v75;
      v45[0] = v70;
      v45[1] = v71;
      sub_2208C35A4((uint64_t)v45);
      uint64_t v50 = v38;
      long long v51 = v30;
      uint64_t v27 = v79;
      uint64_t v26 = v80;
      char v28 = v81;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2208BE1D0(&v50, v27, v26, v28, v32);
      return;
    }
    int64_t v23 = *v14;
    (*v21)(v9, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v82);
    char v24 = v39(v9);
    if (v5)
    {
      (*i)(v9, v82);
      v47[2] = v76;
      long long v48 = v77;
      char v49 = v78;
      v45[2] = v72;
      long long v46 = v73;
      v47[0] = v74;
      v47[1] = v75;
      v45[0] = v70;
      v45[1] = v71;
      sub_2208C35A4((uint64_t)v45);
      sub_22080B6B4(v79, v80, v81);
      return;
    }
    if ((v24 & 1) == 0) {
      continue;
    }
    uint64_t v25 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v25 < v23) {
      goto LABEL_12;
    }
    sub_220869870(v23, v25);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t DiscontiguousColumnSlice.eraseToAnyColumn()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  a2[3] = a1;
  a2[4] = (uint64_t)&off_26D223748;
  char v9 = *((unsigned char *)v2 + 40);
  uint64_t v10 = swift_allocObject();
  *a2 = v10;
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v4;
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v7;
  *(void *)(v10 + 48) = v8;
  *(unsigned char *)(v10 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_retain();

  return sub_220831F30(v7, v8, v9);
}

void (*sub_2208BF2B0(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DiscontiguousColumnSlice.name.modify(v2);
  return sub_220865E74;
}

uint64_t DiscontiguousColumnSlice.startIndex.getter(uint64_t a1)
{
  return sub_2208BF338(a1, (void (*)(void *__return_ptr, uint64_t))sub_22085E9FC);
}

uint64_t DiscontiguousColumnSlice.endIndex.getter(uint64_t a1)
{
  return sub_2208BF338(a1, (void (*)(void *__return_ptr, uint64_t))sub_22085ED08);
}

uint64_t sub_2208BF338(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t))
{
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v3 = type metadata accessor for _DiscontiguousSlice();
  a2(v5, v3);
  return v5[1];
}

Swift::Int __swiftcall DiscontiguousColumnSlice.index(after:)(Swift::Int after)
{
  uint64_t v3 = v1;
  Swift::Int v6 = *(void *)(v2 + 24);
  Swift::Int v5 = *(void *)(v2 + 32);
  int v7 = *(unsigned __int8 *)(v2 + 40);
  sub_220831F30(v6, v5, *(unsigned char *)(v2 + 40));
  unint64_t v8 = sub_2208BE604(after, v6, v5, v7);
  char v10 = v9;
  sub_22080B6B4(v6, v5, v7);
  if (v10) {
    goto LABEL_23;
  }
  Swift::Int result = after + 1;
  if (__OFADD__(after, 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v7)
  {
    if (!v8)
    {
      if (result < v6 || result >= v5) {
        return DiscontiguousColumnSlice.endIndex.getter(v3);
      }
      return result;
    }
    goto LABEL_20;
  }
  if (v7 != 1)
  {
LABEL_23:
    Swift::Int result = sub_22093F090();
    __break(1u);
    return result;
  }
  if ((v8 & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
  if (v8 >= *(void *)(v6 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = v6 + 16 * v8;
  Swift::Int v14 = *(void *)(v12 + 32);
  Swift::Int v13 = *(void *)(v12 + 40);
  if (result < v14 || result >= v13)
  {
    if (v8 + 1 < *(void *)(v6 + 16)) {
      return *(void *)(v6 + 16 * (v8 + 1) + 32);
    }
    return DiscontiguousColumnSlice.endIndex.getter(v3);
  }
  return result;
}

Swift::Int __swiftcall DiscontiguousColumnSlice.index(before:)(Swift::Int before)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  int v7 = *(unsigned __int8 *)(v2 + 40);
  if (DiscontiguousColumnSlice.startIndex.getter(v1) >= before) {
    goto LABEL_32;
  }
  if (DiscontiguousColumnSlice.endIndex.getter(v3) == before)
  {
    sub_220883950(v5, v6, v7);
    if (v9)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    Swift::Int result = v8 - 1;
    if (!__OFSUB__(v8, 1)) {
      return result;
    }
    __break(1u);
  }
  sub_220831F30(v5, v6, v7);
  unint64_t v11 = sub_2208BE604(before, v5, v6, v7);
  char v13 = v12;
  sub_22080B6B4(v5, v6, v7);
  if (v13)
  {
LABEL_32:
    while (1)
    {
LABEL_28:
      sub_22093F090();
      __break(1u);
    }
  }
  if (!v7)
  {
    if (v11)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v5 != before) {
      return before - 1;
    }
    __break(1u);
  }
  if (v7 != 1) {
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  unint64_t v14 = *(void *)(v5 + 16);
  if (v11 >= v14)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (*(void *)(v5 + 32 + 16 * v11) != before) {
    return before - 1;
  }
  if (!v11)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 - 1 >= v14) {
    goto LABEL_25;
  }
  uint64_t v15 = *(void *)(v5 + 32 + 16 * (v11 - 1) + 8);
  Swift::Int result = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    return before - 1;
  }
  return result;
}

uint64_t DiscontiguousColumnSlice.missingCount.getter()
{
  swift_getWitnessTable();
  sub_22093EBA0();
  sub_22093E3B0();
  MEMORY[0x223C69AA0]();
  uint64_t v0 = 0;
  uint64_t v1 = v5;
  while (1)
  {
    sub_22093E390();
    if (v9 == v5) {
      break;
    }
    uint64_t v5 = v1;
    sub_22093E3A0();
    BOOL v2 = sub_22091F068(v9);
    BOOL v3 = __OFADD__(v0, v2);
    v0 += v2;
    if (v3)
    {
      __break(1u);
      break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v6, v7, v8);
  return v0;
}

void *sub_2208BF9C8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for DiscontiguousColumnSlice();
  return DiscontiguousColumnSlice.subscript.getter(v3, a2);
}

void (*DiscontiguousColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t v8 = sub_22093ED30();
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  unint64_t v11 = malloc(v10);
  v7[6] = v11;
  DiscontiguousColumnSlice.subscript.getter(a2, (uint64_t)v11);
  return sub_2208BFB58;
}

void sub_2208BFB58(uint64_t **a1, char a2)
{
  BOOL v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_2208C28E0((uint64_t)v3, v7);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_2208C28E0((*a1)[6], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  BOOL v6 = a1 == (char *)a2;
  if (a1 == (char *)a2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a1;
  }
  if (a1 == (char *)a2) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = a2;
  }
  char v9 = *(unsigned char *)(v3 + 40);
  sub_220831F30(*(void *)(v3 + 24), *(void *)(v3 + 32), v9);
  char v10 = 2 * v6;
  unint64_t v11 = sub_22081A46C(v7, v8, 2 * v6, v4, v5, v9);
  uint64_t v13 = v12;
  char v15 = v14;
  sub_22080B6B4((uint64_t)v7, v8, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v4, v5, v9);
  sub_2208BFED0(v11, v13, v15, a3);
  sub_22080B6B4((uint64_t)v11, v13, v15);
  swift_release();
  swift_bridgeObjectRelease();

  return sub_22080B6B4(v4, v5, v9);
}

double sub_2208BFD90@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(char **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  type metadata accessor for DiscontiguousColumnSlice();
  DiscontiguousColumnSlice.subscript.getter(v3, v4, (uint64_t)&v7);
  char v5 = v10;
  *(void *)a2 = v7;
  *(_OWORD *)(a2 + 8) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 40) = v5;
  return result;
}

uint64_t sub_2208BFE30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  v7[0] = *(void *)a1;
  v7[1] = v1;
  v7[2] = v2;
  v7[3] = v3;
  v7[4] = v4;
  char v8 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v3, v4, v5);
  type metadata accessor for DiscontiguousColumnSlice();
  return sub_2208C2AC4(v7);
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t *a1)
{
  return sub_2208C2AC4(a1);
}

double sub_2208BFED0@<D0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *v4;
  uint64_t v10 = v4[3];
  uint64_t v11 = v4[4];
  char v12 = *((unsigned char *)v4 + 40);
  sub_220831F30(v10, v11, v12);
  uint64_t v13 = sub_22081A46C(a1, a2, a3, v10, v11, v12);
  uint64_t v15 = v14;
  LOBYTE(a1) = v16;
  uint64_t v22 = v9;
  long long v23 = *(_OWORD *)(v4 + 1);
  v20[0] = v13;
  v20[1] = v14;
  char v21 = v16;
  uint64_t v17 = type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22085E388((uint64_t)v20, v17, (uint64_t)&v24);
  sub_22080B6B4((uint64_t)v13, v15, (char)a1);
  char v18 = v27;
  *(void *)a4 = v24;
  *(_OWORD *)(a4 + 8) = v25;
  double result = *(double *)&v26;
  *(_OWORD *)(a4 + 24) = v26;
  *(unsigned char *)(a4 + 40) = v18;
  return result;
}

void (*DiscontiguousColumnSlice.subscript.modify(void *a1, char *a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[6] = a4;
  v9[7] = v4;
  DiscontiguousColumnSlice.subscript.getter(a2, a3, (uint64_t)v9);
  return sub_2208C00A0;
}

void sub_2208C00A0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[4];
  char v8 = *((unsigned char *)v2 + 40);
  v12[0] = v4;
  v12[1] = v3;
  void v12[2] = v6;
  v12[3] = v5;
  v12[4] = v7;
  char v13 = v8;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_220831F30(v5, v7, v8);
    sub_2208C2AC4(v12);
    uint64_t v9 = v2[3];
    uint64_t v10 = v2[4];
    char v11 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_22080B6B4(v9, v10, v11);
  }
  else
  {
    sub_2208C2AC4(v12);
  }

  free(v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getWitnessTable();
  sub_22093E820();
  return DiscontiguousColumnSlice.subscript.getter(v3, v4, a1);
}

double sub_2208C0220@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for DiscontiguousColumnSlice();
  DiscontiguousColumnSlice.subscript.getter((uint64_t)&v4);
  char v2 = v7;
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 40) = v2;
  return result;
}

uint64_t sub_2208C02CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  v7[0] = *(void *)a1;
  v7[1] = v1;
  v7[2] = v2;
  v7[3] = v3;
  v7[4] = v4;
  char v8 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v3, v4, v5);
  type metadata accessor for DiscontiguousColumnSlice();
  return sub_2208C2F60((uint64_t)v7);
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2208C2F60(a1);
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8);

  return v6(a2, a4);
}

void (*DiscontiguousColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, char a2)
{
  uint64_t v10 = malloc(0x60uLL);
  *a1 = v10;
  v10[8] = a5;
  v10[9] = v5;
  v10[6] = a3;
  v10[7] = a4;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = v11;
  v10[10] = v11;
  v10[11] = malloc(*(void *)(v11 + 64));
  (*(void (**)(void))(v12 + 16))();
  DiscontiguousColumnSlice.subscript.getter((uint64_t)v10);
  return sub_2208C04F0;
}

void sub_2208C04F0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t v3 = *(void **)(*a1 + 88);
  uint64_t v5 = *(void *)(*a1 + 56);
  if (a2)
  {
    uint64_t v6 = *(void *)(v2 + 8);
    uint64_t v7 = *(void *)(v2 + 16);
    uint64_t v8 = *(void *)(v2 + 24);
    uint64_t v9 = *(void *)(v2 + 32);
    v13[0] = *(void *)v2;
    v13[1] = v6;
    void v13[2] = v7;
    v13[3] = v8;
    v13[4] = v9;
    char v14 = *(unsigned char *)(v2 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_220831F30(v8, v9, v14);
    sub_2208C2F60((uint64_t)v13);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t v11 = *(void *)(v2 + 32);
    char v12 = *(unsigned char *)(v2 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_22080B6B4(v10, v11, v12);
  }
  else
  {
    sub_2208C2F60(*a1);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  free(v3);

  free((void *)v2);
}

uint64_t DiscontiguousColumnSlice.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return DiscontiguousColumnSlice.subscript.getter(a2);
}

uint64_t DiscontiguousColumnSlice.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2208C3070(a1, a4);
}

void (*DiscontiguousColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  v7[6] = a4;
  v7[7] = v4;
  DiscontiguousColumnSlice.subscript.getter(a4, (uint64_t)v7);
  return sub_2208C070C;
}

void sub_2208C070C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[6];
  if (a2)
  {
    uint64_t v4 = v2[1];
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = v2[4];
    v10[0] = *v2;
    v10[1] = v4;
    void v10[2] = v5;
    v10[3] = v6;
    v10[4] = v7;
    char v11 = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_220831F30(v6, v7, v11);
    sub_2208C3070(v10, v3);
    uint64_t v8 = v2[3];
    uint64_t v9 = v2[4];
    LOBYTE(v6) = *((unsigned char *)v2 + 40);
    swift_bridgeObjectRelease();
    swift_release();
    sub_22080B6B4(v8, v9, v6);
  }
  else
  {
    sub_2208C3070(*a1, v3);
  }

  free(v2);
}

Swift::Int sub_2208C07E8@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = DiscontiguousColumnSlice.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_2208C0814(Swift::Int *a1)
{
  Swift::Int result = DiscontiguousColumnSlice.index(before:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_2208C0840(uint64_t a1, uint64_t *a2)
{
  sub_2208C28E0(a1, *a2);
  uint64_t v3 = sub_22093ED30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*sub_2208C08BC(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DiscontiguousColumnSlice.subscript.modify(v6, *a2, a3);
  return sub_220865E74;
}

uint64_t sub_2208C092C(uint64_t *a1)
{
  return sub_2208C2AC4(a1);
}

void (*sub_2208C0934(void *a1, uint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DiscontiguousColumnSlice.subscript.modify(v6, *(char **)a2, *(void *)(a2 + 8), a3);
  return sub_220865E74;
}

uint64_t sub_2208C09A4()
{
  return sub_22093E500();
}

uint64_t sub_2208C0A24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DiscontiguousColumnSlice.startIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2208C0A4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DiscontiguousColumnSlice.endIndex.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_2208C0A74(uint64_t **a1, uint64_t *a2))(void *a1)
{
  uint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_2208C0AE4(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_2208C0AE4(uint64_t *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = sub_22093ED30();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  DiscontiguousColumnSlice.subscript.getter(a2, (uint64_t)v6);
  return sub_22085FCE0;
}

uint64_t sub_2208C0BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DiscontiguousColumnSlice.subscript.getter(*(char **)a1, *(void *)(a1 + 8), a2);
}

uint64_t sub_2208C0BB8()
{
  swift_getWitnessTable();

  return sub_22093E420();
}

uint64_t sub_2208C0C34()
{
  swift_getWitnessTable();

  return sub_22093E410();
}

uint64_t sub_2208C0CB8()
{
  swift_getWitnessTable();

  return sub_22093E430();
}

Swift::Int sub_2208C0D24@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = DiscontiguousColumnSlice.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_2208C0D50(Swift::Int *a1)
{
  Swift::Int result = DiscontiguousColumnSlice.index(after:)(*a1);
  *a1 = result;
  return result;
}

__n128 sub_2208C0D7C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  char v7 = *((unsigned char *)v2 + 40);
  __n128 v10 = *(__n128 *)(v2 + 1);
  uint64_t v8 = DiscontiguousColumnSlice.startIndex.getter(a1);
  *(void *)a2 = v4;
  __n128 result = v10;
  *(__n128 *)(a2 + 8) = v10;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  return result;
}

uint64_t sub_2208C0DE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208C0E38()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t static DiscontiguousColumnSlice<A>.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a4;
  uint64_t v4 = a3;
  uint64_t i = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  long long v72 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v76 = (char *)&v70 - v9;
  uint64_t v10 = sub_22093ED30();
  unint64_t v89 = *(void (***)(void, void))(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  long long v74 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v75 = (char *)&v70 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v82 = (char *)&v70 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v78 = (char *)&v70 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (char *)&v70 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_22093ED30();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v83 = (char *)&v70 - v21;
  uint64_t v22 = *a1;
  int64x2_t v23 = *(int64x2_t *)(a1 + 1);
  uint64_t v24 = (void (*)(char *, uint64_t))a1[3];
  unint64_t v86 = (unsigned int (*)(char *, uint64_t, uint64_t))a1[4];
  unint64_t v87 = v24;
  char v25 = *((unsigned char *)a1 + 40);
  uint64_t v26 = *a2;
  int64x2_t v90 = *(int64x2_t *)(a2 + 1);
  int64x2_t v91 = v23;
  uint64_t v27 = a2[3];
  uint64_t v28 = a2[4];
  char v29 = *((unsigned char *)a2 + 40);
  uint64_t v85 = type metadata accessor for DiscontiguousColumnSlice();
  if (v22 != v26 || (vmovn_s64(vceqq_s64(v91, v90)).u8[0] & 1) == 0)
  {
    char v30 = sub_22093F250();
    uint64_t result = 0;
    if ((v30 & 1) == 0) {
      return result;
    }
  }
  uint64_t v93 = v22;
  int64x2_t v94 = v91;
  *(void *)&long long v95 = v87;
  *((void *)&v95 + 1) = v86;
  char v96 = v25;
  uint64_t v101 = v26;
  int64x2_t v102 = v90;
  uint64_t v103 = v27;
  uint64_t v104 = v28;
  char v105 = v29;
  uint64_t v32 = v85;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  uint64_t v93 = v106;
  int64x2_t v94 = v107;
  long long v95 = v108;
  char v96 = v109;
  uint64_t v97 = v110;
  long long v98 = v111;
  long long v99 = v112;
  char v100 = v113;
  uint64_t v101 = v32;
  v102.i64[0] = v32;
  v102.i64[1] = WitnessTable;
  uint64_t v103 = WitnessTable;
  uint64_t v81 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v35 = v83;
  uint64_t v34 = TupleTypeMetadata2;
  uint64_t v36 = v89;
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v89 + 4);
  uint64_t v80 = TupleTypeMetadata2 - 8;
  v91.i64[0] = i + 48;
  ++v89;
  v90.i64[0] = (uint64_t)(v36 + 2);
  long long v70 = (void (**)(char *, char *, uint64_t))(i + 32);
  long long v71 = (void (**)(char *, uint64_t))(i + 8);
  uint64_t v77 = v10;
  uint64_t v37 = v78;
  for (i = v4; ; uint64_t v4 = i)
  {
    uint64_t v106 = v85;
    v107.i64[0] = v85;
    v107.i64[1] = v81;
    *(void *)&long long v108 = v81;
    sub_22093EED0();
    sub_22093EEC0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v35, 1, v34) == 1)
    {
      uint64_t v56 = v114;
      uint64_t v57 = v115;
      uint64_t v58 = v118;
      uint64_t v59 = v119;
      char v60 = v116;
      char v61 = v120;
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v56, v57, v60);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v58, v59, v61);
      return 1;
    }
    uint64_t v38 = &v35[*(int *)(v34 + 48)];
    char v39 = *v79;
    uint64_t v40 = v92;
    (*v79)(v92, v35, v10);
    v39(v37, v38, v10);
    uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))v91.i64[0];
    LODWORD(v38) = (*(uint64_t (**)(char *, uint64_t, uint64_t))v91.i64[0])(v40, 1, v4);
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))v90.i64[0];
    uint64_t v43 = v82;
    (*(void (**)(char *, char *, uint64_t))v90.i64[0])(v82, v37, v10);
    if (v38 == 1)
    {
      unsigned int v44 = v41(v43, 1, v4);
      uint64_t v45 = (void (*)(char *, uint64_t))*v89;
      if (v44 == 1)
      {
        v45(v43, v10);
        v45(v37, v10);
        v45(v92, v10);
        goto LABEL_6;
      }
      long long v46 = v76;
      uint64_t v47 = (void (*)(char *, uint64_t))*v89;
    }
    else
    {
      uint64_t v47 = (void (*)(char *, uint64_t))*v89;
      long long v46 = v76;
    }
    long long v48 = v75;
    uint64_t v10 = v77;
    unint64_t v87 = v47;
    v47(v43, v77);
    v42(v48, v92, v10);
    uint64_t v49 = i;
    if (v41(v48, 1, i) == 1) {
      goto LABEL_18;
    }
    unint64_t v86 = v41;
    uint64_t v50 = *v70;
    (*v70)(v46, v48, v49);
    long long v51 = v46;
    long long v48 = v74;
    uint64_t v37 = v78;
    v42(v74, v78, v10);
    if (v86(v48, 1, v49) == 1)
    {
      (*v71)(v51, v49);
LABEL_18:
      uint64_t v62 = v77;
      uint64_t v63 = v87;
      v87(v78, v77);
      uint64_t v64 = v114;
      uint64_t v65 = v115;
      uint64_t i = v117;
      v91.i64[0] = v118;
      v90.i64[0] = v119;
      char v66 = v116;
      LODWORD(v89) = v120;
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v64, v65, v66);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v91.i64[0], v90.i64[0], (char)v89);
      v63(v48, v62);
      v63(v92, v62);
      return 0;
    }
    long long v52 = v72;
    v50(v72, v48, v49);
    char v53 = sub_22093E520();
    long long v54 = *v71;
    (*v71)(v52, v49);
    v54(v51, v49);
    uint64_t v55 = v87;
    v87(v37, v10);
    if ((v53 & 1) == 0) {
      break;
    }
    v55(v92, v10);
LABEL_6:
    uint64_t v35 = v83;
    uint64_t v34 = TupleTypeMetadata2;
  }
  uint64_t v67 = v114;
  uint64_t v68 = v115;
  v91.i64[0] = v118;
  v90.i64[0] = v119;
  char v69 = v116;
  LODWORD(i) = v120;
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v67, v68, v69);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v91.i64[0], v90.i64[0], i);
  v55(v92, v10);
  return 0;
}

uint64_t sub_2208C1738(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static DiscontiguousColumnSlice<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t DiscontiguousColumnSlice<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *(void *)(a2 + 16);
  uint64_t v3 = sub_22093ED30();
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[3];
  uint64_t v23 = v2[2];
  uint64_t v20 = v8;
  uint64_t v19 = v2[4];
  uint64_t v9 = v19;
  char v10 = *((unsigned char *)v2 + 40);
  swift_bridgeObjectRetain();
  uint64_t v21 = v7;
  sub_22093E650();
  swift_bridgeObjectRelease();
  *(void *)char v25 = v7;
  *(void *)&v25[8] = v6;
  *(void *)&v25[16] = v23;
  *(void *)&long long v26 = v8;
  *((void *)&v26 + 1) = v9;
  char v27 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v8, v9, v10);
  type metadata accessor for Column();
  swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for _DiscontiguousSlice();
  sub_22085E9FC(v11, &v28);
  uint64_t v12 = v28;
  uint64_t v13 = v29;
  uint64_t v28 = v21;
  *(void *)&long long v29 = v6;
  *((void *)&v29 + 1) = v23;
  *(void *)&long long v30 = v20;
  *((void *)&v30 + 1) = v19;
  char v31 = v10;
  *(void *)&long long v32 = v12;
  *((void *)&v32 + 1) = v13;
  *(void *)char v25 = v12;
  *(void *)&v25[8] = v13;
  sub_22085ED08(v11, &v24);
  if ((sub_22085E724(v25, &v24) & 1) == 0)
  {
    uint64_t v14 = (void (**)(char *, uint64_t))(v18 + 8);
    do
    {
      sub_22085F3A0((uint64_t)v5);
      *(void *)char v25 = v28;
      *(_OWORD *)&v25[8] = v29;
      long long v26 = v30;
      char v27 = v31;
      sub_22085EEF0((uint64_t *)&v32, v11, &v24);
      long long v32 = v24;
      sub_22093ED40();
      (*v14)(v5, v3);
      *(_OWORD *)char v25 = v32;
      sub_22085ED08(v11, &v24);
    }
    while ((sub_22085E724(v25, &v24) & 1) == 0);
  }
  long long v15 = v30;
  char v16 = v31;
  swift_release();
  swift_bridgeObjectRelease();
  return sub_22080B6B4(v15, *((uint64_t *)&v15 + 1), v16);
}

void DiscontiguousColumnSlice<A>.distinct()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((void *)&v48 + 1) = a1;
  uint64_t WitnessTable = a2;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = a3;
  uint64_t v4 = sub_22093ED30();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unsigned int v44 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v36 - v8;
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v36 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_22093ED30();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v36 - v13);
  uint64_t v16 = v3[1];
  uint64_t v40 = *v3;
  uint64_t v15 = v40;
  *(void *)&long long v41 = v16;
  uint64_t v17 = (void (**)(char *, char *, uint64_t))v3[3];
  *((void *)&v41 + 1) = v3[2];
  uint64_t v42 = v17;
  uint64_t v18 = v3[4];
  int v19 = *((unsigned __int8 *)v3 + 40);
  int v38 = v19;
  uint64_t v79 = WitnessTable;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v80 = sub_22093E240();
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  char v78 = 2;
  *(void *)&v50[0] = v15;
  *((void *)&v50[0] + 1) = v16;
  uint64_t v20 = *((void *)&v41 + 1);
  *(void *)&v50[1] = *((void *)&v41 + 1);
  *((void *)&v50[1] + 1) = v17;
  *(void *)&uint64_t v50[2] = v18;
  BYTE8(v50[2]) = v19;
  uint64_t v21 = *((void *)&v48 + 1);
  swift_getWitnessTable();
  sub_22093EBA0();
  uint64_t v45 = *((void *)&v67 + 1);
  uint64_t v47 = v69;
  *(void *)&long long v48 = *((void *)&v68 + 1);
  LODWORD(v46) = BYTE8(v69);
  *(_OWORD *)long long v54 = v67;
  *(_OWORD *)&v54[16] = v68;
  *(void *)&v54[32] = v69;
  char v55 = BYTE8(v69);
  long long v56 = v70;
  uint64_t v61 = v40;
  uint64_t v62 = v41;
  uint64_t v63 = v20;
  uint64_t v64 = v42;
  uint64_t v65 = v18;
  char v66 = v38;
  uint64_t v22 = v21;
  uint64_t v23 = sub_22093E3B0();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  sub_22093F2C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v48, v47, v46);
  *(void *)long long v54 = *(void *)&v50[0];
  *(_OWORD *)&v54[8] = *(_OWORD *)((char *)v50 + 8);
  *(_OWORD *)&v54[24] = *(_OWORD *)((char *)&v50[1] + 8);
  char v55 = BYTE8(v50[2]);
  long long v56 = v51;
  uint64_t v57 = *(void *)&v52[0];
  long long v58 = *(_OWORD *)((char *)v52 + 8);
  long long v59 = *(_OWORD *)((char *)&v52[1] + 8);
  char v60 = BYTE8(v52[2]);
  uint64_t v47 = v24;
  *(void *)&long long v48 = v23;
  *(void *)&long long v67 = v23;
  *((void *)&v67 + 1) = v22;
  *(void *)&long long v68 = v24;
  *((void *)&v68 + 1) = v25;
  uint64_t v46 = v25;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v45 = TupleTypeMetadata2 - 8;
  long long v26 = (void (**)(char *, char *, uint64_t))(v39 + 32);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v39 + 16);
  char v27 = (void (**)(char *, uint64_t))(v39 + 8);
  while (1)
  {
    while (1)
    {
      v50[0] = v48;
      *(void *)&v50[1] = v47;
      *((void *)&v50[1] + 1) = v46;
      sub_22093EED0();
      sub_22093EEC0();
      if ((*(unsigned int (**)(int64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                              + 48))(v14, 1, TupleTypeMetadata2) == 1)
      {
        v52[2] = v73;
        void v52[3] = v74;
        char v53 = v75;
        uint64_t v50[2] = v69;
        long long v51 = v70;
        v52[0] = v71;
        v52[1] = v72;
        v50[0] = v67;
        v50[1] = v68;
        sub_2208C35A4((uint64_t)v50);
        swift_bridgeObjectRelease();
        *(void *)long long v54 = v40;
        *(_OWORD *)&v54[8] = v41;
        uint64_t v33 = v76;
        uint64_t v34 = v77;
        char v35 = v78;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2208BE1D0((uint64_t *)v54, v33, v34, v35, v37);
        return;
      }
      int64_t v28 = *v14;
      (*v26)(v10, (char *)v14 + *(int *)(TupleTypeMetadata2 + 48), v4);
      swift_bridgeObjectRetain();
      char v29 = sub_22093E9C0();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        break;
      }
      (*v27)(v10, v4);
    }
    uint64_t v30 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v30 < v28) {
      goto LABEL_10;
    }
    sub_220869870(v28, v30);
    (*v42)(v44, v10, v4);
    sub_22093E9D0();
    char v31 = v43;
    sub_22093E9B0();
    long long v32 = *v27;
    (*v27)(v31, v4);
    v32(v10, v4);
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t DiscontiguousColumnSlice<A>.hashValue.getter(uint64_t a1)
{
  char v3 = *((unsigned char *)v1 + 40);
  uint64_t v6 = *v1;
  long long v7 = *(_OWORD *)(v1 + 1);
  long long v8 = *(_OWORD *)(v1 + 3);
  char v9 = v3;
  sub_22093F430();
  DiscontiguousColumnSlice<A>.hash(into:)((uint64_t)v5, a1);
  return sub_22093F490();
}

uint64_t sub_2208C2028(uint64_t a1)
{
  return DiscontiguousColumnSlice<A>.hashValue.getter(a1);
}

uint64_t sub_2208C2030(uint64_t a1, uint64_t a2)
{
  return DiscontiguousColumnSlice<A>.hash(into:)(a1, a2);
}

uint64_t sub_2208C2038(uint64_t a1, uint64_t a2)
{
  sub_22093F430();
  DiscontiguousColumnSlice<A>.hash(into:)((uint64_t)v4, a2);
  return sub_22093F490();
}

uint64_t sub_2208C208C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_22093ED30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)v14 - v9;
  v14[1] = *(void *)v3;
  long long v15 = *(_OWORD *)(v3 + 8);
  type metadata accessor for Column();
  Column.subscript.getter(a1, (uint64_t)v10);
  uint64_t v11 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v11 + 32))(boxed_opaque_existential_1, v10, v6);
  }
  return result;
}

uint64_t sub_2208C2218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22093ED30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - v8;
  sub_220842FF8(a2, (uint64_t)&v11);
  if (v12)
  {
    sub_220835340(&v11, v13);
    sub_220835350((uint64_t)v13, (uint64_t)&v11);
    swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 0, 1, v5);
    type metadata accessor for Column();
    sub_220869F30((uint64_t)v9, a1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    sub_22086A7A4((uint64_t)&v11);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v9, 1, 1, v5);
    type metadata accessor for Column();
    sub_220869F30((uint64_t)v9, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2208C2410@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  BOOL v8 = a1 == (char *)a2;
  if (a1 == (char *)a2) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = a1;
  }
  if (a1 == (char *)a2) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  char v11 = *(unsigned char *)(v4 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v6, v7, v11);
  char v12 = 2 * v8;
  uint64_t v13 = sub_22081A46C(v9, v10, 2 * v8, v6, v7, v11);
  uint64_t v15 = v14;
  char v17 = v16;
  sub_22080B6B4((uint64_t)v9, v10, v12);
  a4[3] = a3;
  a4[4] = (uint64_t)&off_26D223748;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v18 + 16;
  *a4 = v18;
  uint64_t v20 = type metadata accessor for Column();
  sub_220866A38((uint64_t)v13, v15, v17, v20, v19);
  sub_22080B6B4((uint64_t)v13, v15, v17);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208C2560(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  BOOL v7 = a1 == (char *)a2;
  if (a1 == (char *)a2) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = a1;
  }
  if (a1 == (char *)a2) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = a2;
  }
  char v10 = *(unsigned char *)(v3 + 40);
  sub_220831F30(*(void *)(v3 + 24), *(void *)(v3 + 32), v10);
  char v11 = 2 * v7;
  char v12 = sub_22081A46C(v8, v9, v11, v5, v6, v10);
  uint64_t v14 = v13;
  int v16 = v15;
  sub_22080B6B4((uint64_t)v8, v9, v11);
  sub_22083B5D0(a3, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
  swift_dynamicCast();
  uint64_t v19 = v23;
  long long v20 = v24;
  long long v21 = v25;
  char v22 = v26;
  uint64_t v17 = type metadata accessor for Column();
  return sub_220866AE4((uint64_t)&v19, (uint64_t)v12, v14, v16, v17);
}

uint64_t sub_2208C2680@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v11 = *(void *)(v5 + 24);
  uint64_t v12 = *(void *)(v5 + 32);
  char v13 = *(unsigned char *)(v5 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v11, v12, v13);
  uint64_t v14 = sub_22081A46C(a1, a2, a3, v11, v12, v13);
  uint64_t v16 = v15;
  LOBYTE(a1) = v17;
  a5[3] = a4;
  a5[4] = (uint64_t)&off_26D223748;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v18 + 16;
  *a5 = v18;
  uint64_t v20 = type metadata accessor for Column();
  sub_220866A38((uint64_t)v14, v16, (char)a1, v20, v19);
  sub_22080B6B4((uint64_t)v14, v16, (char)a1);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208C27BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 32);
  char v10 = *(unsigned char *)(v2 + 40);
  v14[0] = v5;
  v14[1] = v6;
  void v14[2] = v7;
  v14[3] = v8;
  v14[4] = v9;
  char v15 = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  a2[3] = type metadata accessor for Column();
  a2[4] = &off_26D2223C0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_220831F30(v8, v9, v10);
  uint64_t WitnessTable = swift_getWitnessTable();
  return Column.init<A>(name:contents:)(v5, v6, (uint64_t)v14, v11, a1, WitnessTable, a2);
}

void *sub_2208C28E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  char v7 = *(unsigned char *)(v2 + 40);
  sub_220831F30(v5, v6, v7);
  char v8 = sub_2208BE090(a2, v5, v6, v7);
  sub_22080B6B4(v5, v6, v7);
  if (v8)
  {
    type metadata accessor for Column();
    return sub_220869F30(a1, a2);
  }
  else
  {
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = (void *)sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208C2A54(uint64_t a1, void *a2)
{
  return sub_22086B484(a1, *(uint64_t (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2208C2A78()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_22080B6B4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_2208C2AC4(uint64_t *a1)
{
  uint64_t v35 = sub_22093ED30();
  uint64_t v27 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v4 = (char *)&v27 - v3;
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[3];
  uint64_t v40 = a1[2];
  uint64_t v8 = a1[4];
  int v9 = *((unsigned __int8 *)a1 + 40);
  uint64_t v10 = *v1;
  uint64_t v11 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v36 = v1;
  uint64_t v37 = v11;
  int v15 = *((unsigned __int8 *)v1 + 40);
  uint64_t v38 = v10;
  *(void *)&long long v75 = v10;
  *((void *)&v75 + 1) = v11;
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  *(void *)&long long v76 = v12;
  *((void *)&v76 + 1) = v13;
  uint64_t v32 = v14;
  *(void *)&long long v77 = v14;
  LODWORD(v31) = v15;
  BYTE8(v77) = v15;
  uint64_t v16 = DiscontiguousColumnSlice.count.getter();
  uint64_t v39 = v6;
  *(void *)&long long v75 = v6;
  *((void *)&v75 + 1) = v5;
  uint64_t v41 = v5;
  uint64_t v42 = v7;
  uint64_t v17 = v40;
  *(void *)&long long v76 = v40;
  *((void *)&v76 + 1) = v7;
  *(void *)&long long v77 = v8;
  BYTE8(v77) = v9;
  if (v16 == DiscontiguousColumnSlice.count.getter())
  {
    *(void *)&long long v43 = v38;
    *((void *)&v43 + 1) = v37;
    *(void *)&long long v44 = v34;
    *((void *)&v44 + 1) = v33;
    *(void *)&long long v45 = v32;
    BYTE8(v45) = v31;
    swift_getWitnessTable();
    sub_22093EBA0();
    uint64_t v31 = v76;
    uint64_t v32 = *((void *)&v75 + 1);
    uint64_t v30 = *((void *)&v76 + 1);
    uint64_t v34 = v77;
    LODWORD(v33) = BYTE8(v77);
    long long v53 = v75;
    long long v54 = v76;
    *(void *)&long long v55 = v77;
    BYTE8(v55) = BYTE8(v77);
    long long v56 = v78;
    *(void *)&long long v43 = v39;
    *((void *)&v43 + 1) = v41;
    *(void *)&long long v44 = v17;
    *((void *)&v44 + 1) = v42;
    *(void *)&long long v45 = v8;
    BYTE8(v45) = v9;
    sub_22093EBA0();
    uint64_t v18 = v71;
    uint64_t v29 = v72;
    int v28 = v73;
    uint64_t v61 = v68;
    uint64_t v62 = v69;
    uint64_t v63 = v70;
    uint64_t v64 = v71;
    uint64_t v65 = v72;
    unsigned __int8 v66 = v73;
    long long v67 = v74;
    uint64_t v19 = sub_22093E3B0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v37 = v8;
    LODWORD(v38) = v9;
    uint64_t v21 = WitnessTable;
    sub_22093F2C0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v18, v29, v28);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v30, v34, v33);
    long long v57 = v47;
    long long v58 = v48;
    long long v59 = v49;
    long long v60 = v50;
    long long v53 = v43;
    long long v54 = v44;
    long long v55 = v45;
    long long v56 = v46;
    *(void *)&long long v75 = v19;
    *((void *)&v75 + 1) = v19;
    *(void *)&long long v76 = v21;
    *((void *)&v76 + 1) = v21;
    sub_22093EEE0();
    sub_22093EEB0();
    *(void *)&long long v43 = v19;
    *((void *)&v43 + 1) = v19;
    *(void *)&long long v44 = v21;
    *((void *)&v44 + 1) = v21;
    sub_22093EED0();
    sub_22093EEC0();
    uint64_t v22 = v35;
    if ((v54 & 1) == 0)
    {
      uint64_t v23 = *((void *)&v53 + 1);
      uint64_t v24 = v53;
      long long v25 = (void (**)(char *, uint64_t))(v27 + 8);
      do
      {
        *(void *)&long long v43 = v39;
        *((void *)&v43 + 1) = v41;
        *(void *)&long long v44 = v40;
        *((void *)&v44 + 1) = v42;
        *(void *)&long long v45 = v37;
        BYTE8(v45) = v38;
        DiscontiguousColumnSlice.subscript.getter(v23, (uint64_t)v4);
        sub_2208C28E0((uint64_t)v4, v24);
        (*v25)(v4, v22);
        *(void *)&long long v43 = v19;
        *((void *)&v43 + 1) = v19;
        *(void *)&long long v44 = v21;
        *((void *)&v44 + 1) = v21;
        sub_22093EED0();
        sub_22093EEC0();
        uint64_t v23 = *((void *)&v53 + 1);
        uint64_t v24 = v53;
      }
      while (v54 != 1);
    }
    long long v49 = v81;
    long long v50 = v82;
    long long v51 = v83;
    char v52 = v84;
    long long v45 = v77;
    long long v46 = v78;
    long long v47 = v79;
    long long v48 = v80;
    long long v43 = v75;
    long long v44 = v76;
    sub_2208C35A4((uint64_t)&v43);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_22080B6B4(v42, v37, v38);
  }
  else
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208C2F60(uint64_t a1)
{
  swift_getWitnessTable();
  sub_22093E820();
  char v2 = *(unsigned char *)(a1 + 40);
  uint64_t v4 = *(void *)a1;
  long long v5 = *(_OWORD *)(a1 + 8);
  long long v6 = *(_OWORD *)(a1 + 24);
  char v7 = v2;
  return sub_2208C2AC4(&v4);
}

unint64_t sub_2208C3014()
{
  unint64_t result = qword_267F19348[0];
  if (!qword_267F19348[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F19348);
  }
  return result;
}

uint64_t sub_2208C3070(uint64_t *a1, uint64_t a2)
{
  DiscontiguousColumnSlice.startIndex.getter(a2);
  char v3 = *((unsigned char *)a1 + 40);
  uint64_t v5 = *a1;
  long long v6 = *(_OWORD *)(a1 + 1);
  long long v7 = *(_OWORD *)(a1 + 3);
  char v8 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F18590);
  sub_2208C3014();
  return sub_2208C2F60((uint64_t)&v5);
}

uint64_t type metadata accessor for DiscontiguousColumnSlice()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208C3110(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2208C314C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2208C3188()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C31A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C3208()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C3224()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C3240()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C325C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C32AC()
{
  return 8;
}

void *sub_2208C32B8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *sub_2208C32C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  type metadata accessor for DiscontiguousColumnSlice();
  return sub_2208C28E0(a1, v4);
}

uint64_t sub_2208C3318()
{
  return 8;
}

uint64_t sub_2208C332C()
{
  return 8;
}

uint64_t sub_2208C3340()
{
  return 24;
}

__n128 sub_2208C334C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2208C3360(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);

  return sub_22080B6B4(v2, v3, v4);
}

uint64_t sub_2208C33A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_220831F30(v4, v5, v6);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t sub_2208C3418(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_220831F30(v4, v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v8 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_22080B6B4(v6, v7, v8);
  return a1;
}

uint64_t sub_2208C34AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v7 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_22080B6B4(v5, v6, v7);
  return a1;
}

uint64_t sub_2208C3510(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2208C3558(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2208C35A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  char v6 = *(unsigned char *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 112);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v2, v3, v6);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v4, v5, v7);
  return a1;
}

BOOL sub_2208C363C(uint64_t a1)
{
  return **(void **)(v1 + 16) < *(void *)(a1 + 8);
}

uint64_t sub_2208C365C()
{
  uint64_t result = sub_22093ECE0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2208C36F8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(result + 64);
  uint64_t v6 = *(unsigned __int8 *)(result + 80);
  uint64_t v7 = v5 + v6;
  unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unsigned int v9 = a1[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v9)
  {
    uint64_t v14 = ~v6;
    int v15 = *(void (**)(unsigned __int8 *, uint64_t))(result + 8);
    v15(a1, v3);
    return ((uint64_t (*)(unint64_t, uint64_t))v15)((unint64_t)&a1[v7] & v14, v3);
  }
  return result;
}

unsigned char *sub_2208C38AC(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
    swift_bridgeObjectRetain();
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2208C3A58(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      uint64_t v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_2208C3CEC(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2208C3E94(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      uint64_t v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_2208C4124(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = 8;
  if (((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 8)
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_2208C4294(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2208C4498);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2208C44C0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = 8;
  if (((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) > 8)
    unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_2208C45B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8)
    size_t v4 = 8;
  else {
    size_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
  }
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for _RangeSetStorage._Storage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208C46E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C46FC()
{
  return swift_getWitnessTable();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2208C4760()
{
  uint64_t v0 = sub_22093E900();
  nullsub_5(v0);
}

uint64_t sub_2208C479C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for _RangeSetStorage._Storage();
  MEMORY[0x270FA5388](v6);
  unsigned int v8 = (char *)&v12 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v12 - v7, v3, v6);
  LODWORD(result) = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v11 = sub_22093ECE0();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a2, v8, v11);
    if (!a1) {
      return result;
    }
    __break(1u);
  }
  if (result == 1)
  {
    sub_22093ECE0();
    sub_22093E940();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

void (*sub_2208C4968(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x50uLL);
  *a1 = v9;
  v9[1] = a4;
  _OWORD v9[2] = v4;
  *uint64_t v9 = a3;
  uint64_t v10 = sub_22093F3B0();
  v9[3] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[4] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[5] = malloc(v12);
  unsigned int v13 = malloc(v12);
  v9[6] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_22093ECE0();
  v9[7] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  v9[8] = v15;
  v9[9] = malloc(*(void *)(v15 + 64));
  (*(void (**)(void))(v16 + 16))();
  sub_2208C4CDC(a2, a3, a4, (uint64_t)v13);
  return sub_2208C4B34;
}

void sub_2208C4B34(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 64);
  unsigned int v5 = *(void **)(*(void *)a1 + 72);
  uint64_t v7 = *(void **)(*(void *)a1 + 48);
  uint64_t v10 = *(void *)(*(void *)a1 + 56);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void *, void *, void))(v4 + 16))(v3, v7, v2[3]);
    swift_getWitnessTable();
    sub_22093F190();
    uint64_t v9 = *(void (**)(void *, uint64_t))(v4 + 8);
    v9(v3, v8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v10);
    v9(v7, v8);
  }
  else
  {
    swift_getWitnessTable();
    sub_22093F190();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v8);
  }
  free(v5);
  free(v7);
  free(v3);

  free(v2);
}

uint64_t sub_2208C4CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v52 = a4;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v47 = (char *)&v44 - v12;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v44 - v17;
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = sub_22093ECE0();
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  long long v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v23 = (char *)&v44 - v22;
  sub_22093EA60();
  uint64_t v53 = v4;
  uint64_t v50 = v6;
  uint64_t v51 = a2;
  sub_22093EAE0();
  uint64_t result = sub_22093E480();
  if (result)
  {
    uint64_t v25 = v13;
    char v26 = v16;
    uint64_t v27 = TupleTypeMetadata2;
    int v28 = v47;
    uint64_t v29 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
    long long v45 = v23;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v30(v47, v18, AssociatedTypeWitness);
    uint64_t v31 = v29;
    v30(v29, v26, AssociatedTypeWitness);
    uint64_t v32 = &v10[*(int *)(v27 + 48)];
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v33(v10, v28, AssociatedTypeWitness);
    v33(v32, v31, AssociatedTypeWitness);
    uint64_t v34 = v46;
    v30(v46, v10, AssociatedTypeWitness);
    long long v44 = *(void (**)(char *, uint64_t))(v25 + 8);
    v44(v32, AssociatedTypeWitness);
    uint64_t v35 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    v30(v10, v28, AssociatedTypeWitness);
    v30(v35, v31, AssociatedTypeWitness);
    uint64_t v36 = (void (*)(uint64_t, char *, uint64_t))v30;
    uint64_t v37 = v49;
    v30(&v34[*(int *)(v49 + 36)], v35, AssociatedTypeWitness);
    v44(v10, AssociatedTypeWitness);
    uint64_t v38 = v48;
    uint64_t v39 = v45;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v34, v37);
    uint64_t v40 = v53;
    uint64_t v41 = v51;
    sub_22093EA70();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    uint64_t v42 = sub_22093F3B0();
    uint64_t v43 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v52 + *(int *)(v42 + 40), v40, v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v39, v55, v37);
    v36(v43, v39, AssociatedTypeWitness);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v43 + *(int *)(v42 + 36), &v39[*(int *)(v37 + 36)], AssociatedTypeWitness);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2208C51C4()
{
  type metadata accessor for _RangeSetStorage._Storage();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2208C5210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22093ECE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for _RangeSetStorage._Storage();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2208C52AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for _RangeSetStorage._Storage();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2208C52F4()
{
  uint64_t v1 = type metadata accessor for _RangeSetStorage._Storage();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v10 - v3, v0, v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v6 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *v4;
      uint64_t v8 = sub_22093ECE0();
      uint64_t v6 = MEMORY[0x223C69FE0](v7, v8);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
    return 1;
  }
  return v6;
}

uint64_t sub_2208C5434(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for _RangeSetStorage._Storage();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v19 - v8);
  (*(void (**)(char *, void *, uint64_t))(v7 + 16))((char *)&v19 - v8, v2, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (!a2)
    {
      uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8);
      v11(v2, v6);
      uint64_t v12 = sub_22093ECE0();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v2, a1, v12);
      swift_storeEnumTagMultiPayload();
      return v11(v9, v6);
    }
    __break(1u);
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_8:
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  uint64_t v20 = *v9;
  uint64_t v14 = *(void (**)(void *, uint64_t))(v7 + 8);
  v14(v2, v6);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = sub_22093ECE0();
  uint64_t v16 = sub_22093E900();
  sub_22093E880();
  uint64_t v17 = v20;
  sub_2208F8A34(a2, v20);
  uint64_t v18 = *(void *)(v15 - 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 24))(v17+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * a2, a1, v15);
  nullsub_5(v16);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v15);
  v14(v3, v6);
  *uint64_t v3 = v20;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2208C5750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v53 = a6;
  uint64_t v51 = a3;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v50 = sub_22093ECE0();
  uint64_t v9 = *(void *)(v50 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v50);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v52 = a5;
  uint64_t v16 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for _RangeSetStorage._Storage();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int v23 = (uint64_t *)((char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (uint64_t *)((char *)&v45 - v24);
  char v26 = *(void (**)(char *, uint64_t *, uint64_t))(v20 + 16);
  uint64_t v49 = v7;
  v26((char *)&v45 - v24, v7, v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v54 = *v25;
      int v28 = *(void (**)(uint64_t *, uint64_t))(v20 + 8);
      uint64_t v29 = v49;
      v28(v49, v19);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v51, v52);
      sub_22093E900();
      sub_22093E870();
      v28(v29, v19);
      *uint64_t v29 = v54;
      return swift_storeEnumTagMultiPayload();
    }
    uint64_t v36 = v51;
    uint64_t v37 = v52;
    uint64_t result = sub_22093EAC0();
    if ((result & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v36, v37);
      *int v23 = sub_22093E930();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 40))(v49, v23, v19);
    }
  }
  else
  {
    long long v45 = v12;
    long long v46 = v15;
    uint64_t v31 = v9;
    uint64_t v32 = v50;
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v15, v25, v50);
    uint64_t v33 = v51;
    uint64_t v34 = v52;
    char v35 = sub_22093EAC0();
    if (v48 != v47)
    {
      if (v35)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v46, v32);
        (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v49, v19);
        return swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v33, v34);
      uint64_t v43 = sub_22093E930();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v46, v32);
      *int v23 = v43;
      goto LABEL_15;
    }
    if ((v35 & 1) == 0)
    {
      uint64_t v38 = v31;
      if (v48)
      {
        sub_22093F1B0();
        swift_allocObject();
        uint64_t v39 = sub_22093E850();
        uint64_t v40 = v46;
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v41, v46, v32);
        uint64_t v54 = v39;
        uint64_t v42 = sub_22093E900();
        nullsub_5(v42);
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v51, v52);
        sub_22093E8D0();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v33, v52);
        uint64_t v54 = sub_22093E930();
        uint64_t v40 = v46;
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v45, v46, v32);
        sub_22093E900();
        sub_22093E8E0();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v32);
      long long v44 = v49;
      (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v49, v19);
      *long long v44 = v54;
      return swift_storeEnumTagMultiPayload();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v46, v32);
  }
  return result;
}

uint64_t sub_2208C5D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for _RangeSetStorage._Storage();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = TupleTypeMetadata2 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v12 = (uint64_t *)((char *)&v45 - v11);
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v13 = sub_22093ECE0();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  long long v46 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v47 = (char *)&v45 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v45 - v21;
  int v23 = (uint64_t *)((char *)v12 + *(int *)(v10 + 56));
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16);
  v25(v12, a1, v8);
  v25(v23, a2, v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int v30 = swift_getEnumCaseMultiPayload();
    if (!v30)
    {
      uint64_t v40 = v50;
      uint64_t v39 = v51;
      uint64_t v41 = *(void (**)(char *, uint64_t *, uint64_t))(v50 + 32);
      uint64_t v42 = v47;
      v41(v47, v12, v51);
      v41(v18, v23, v39);
      char v29 = sub_22093ECB0();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
      v43(v18, v39);
      v43(v42, v39);
      return v29 & 1;
    }
    uint64_t v32 = v50;
    uint64_t v31 = v51;
    if (v30 != 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v12, v51);
      goto LABEL_22;
    }
    uint64_t v27 = *v23;
    uint64_t v33 = *(void (**)(char *, uint64_t *, uint64_t))(v50 + 32);
    v33(v22, v12, v51);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34)
    {
      if (v34 != 1)
      {
        char v29 = 1;
        return v29 & 1;
      }
      uint64_t v27 = *v23;
      goto LABEL_12;
    }
    (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v23, v8);
LABEL_22:
    char v29 = 0;
    return v29 & 1;
  }
  uint64_t v27 = *v12;
  int v28 = swift_getEnumCaseMultiPayload();
  if (!v28)
  {
    uint64_t v32 = v50;
    uint64_t v31 = v51;
    uint64_t v33 = *(void (**)(char *, uint64_t *, uint64_t))(v50 + 32);
    v33(v22, v23, v51);
LABEL_15:
    uint64_t v35 = MEMORY[0x223C69FE0](v27, v31);
    uint64_t v36 = v46;
    v33(v46, (uint64_t *)v22, v31);
    if (v35 == 1)
    {
      uint64_t v37 = v47;
      sub_22093E940();
      swift_bridgeObjectRelease();
      char v29 = sub_22093ECB0();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
      v38(v37, v31);
      v38(v36, v31);
      return v29 & 1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v31);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (v28 != 1)
  {
LABEL_12:
    uint64_t v52 = v27;
    sub_22093E900();
    swift_getWitnessTable();
    char v29 = sub_22093EB70();
    goto LABEL_13;
  }
  swift_getWitnessTable();
  char v29 = sub_22093E920();
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  return v29 & 1;
}

uint64_t sub_2208C6218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208C5D34(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_2208C6224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v6 = sub_22093ECE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - v8;
  swift_getWitnessTable();
  uint64_t v10 = sub_22093F040();
  uint64_t v17 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v17 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v17 - v11, v3, a2);
  uint64_t v18 = v10;
  uint64_t v13 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *uint64_t v13 = 0;
  if (sub_2208C52F4())
  {
    uint64_t v14 = 0;
    do
    {
      sub_2208C479C(v14, (uint64_t)v9);
      swift_getWitnessTable();
      sub_22093EA10();
      uint64_t v15 = v19;
      *uint64_t v13 = v20;
      MEMORY[0x223C6A410](a1, v6, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v14 = *v13;
    }
    while (v14 != sub_2208C52F4());
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v12, v18);
}

uint64_t sub_2208C6494(uint64_t a1, uint64_t a2)
{
  sub_22093F430();
  sub_2208C6224((uint64_t)v5, a1, a2);
  return sub_22093F490();
}

uint64_t sub_2208C64EC(uint64_t a1, uint64_t a2)
{
  return sub_2208C6494(a1, *(void *)(a2 - 8));
}

uint64_t sub_2208C64F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208C6224(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_2208C64FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  sub_22093F430();
  sub_2208C6224((uint64_t)v6, a2, v4);
  return sub_22093F490();
}

uint64_t sub_2208C6550(uint64_t a1, unint64_t *a2)
{
  return sub_2208C5434(a1, *a2);
}

void (*sub_2208C6558(void *a1, uint64_t *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *uint64_t v7 = v3;
  v7[1] = a3;
  uint64_t v8 = sub_22093ECE0();
  v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[4] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v12 = *a2;
  void v7[5] = v11;
  v7[6] = v12;
  sub_2208C479C(v12, (uint64_t)v11);
  return sub_2208C663C;
}

void sub_2208C663C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  unint64_t v4 = *(void *)(*(void *)a1 + 48);
  unsigned int v5 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v6 = v2[2];
    uint64_t v7 = v2[3];
    (*(void (**)(void, void *, uint64_t))(v7 + 16))(*(void *)(*(void *)a1 + 32), v3, v6);
    sub_2208C5434((uint64_t)v5, v4);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v3, v6);
  }
  else
  {
    sub_2208C5434(*(void *)(*(void *)a1 + 40), v4);
  }
  free(v3);
  free(v5);

  free(v2);
}

uint64_t sub_2208C6708(uint64_t a1)
{
  sub_2208C71C8();
  swift_getWitnessTable();
  uint64_t v2 = sub_22093F3B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

void (*sub_2208C67A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void *a1)
{
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_2208C4968(v8, a2, a3, a4);
  return sub_220816854;
}

uint64_t sub_2208C6820()
{
  return sub_22093E500();
}

uint64_t sub_2208C68A0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E060](a1, a2, WitnessTable, v5);
}

void *sub_2208C6910(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2208C6D70(a1, a2, a3, MEMORY[0x263F8D7A8]);
}

uint64_t sub_2208C6928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2208C69AC()
{
  swift_getWitnessTable();

  return sub_22093EA00();
}

uint64_t sub_2208C6A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2208C6AA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2208C52F4();
  *a1 = result;
  return result;
}

void (*sub_2208C6ACC(uint64_t **a1, uint64_t *a2))(void *a1)
{
  unint64_t v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_2208C6B3C(v4, *a2);
  return sub_22085FBC4;
}

void (*sub_2208C6B3C(uint64_t *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = sub_22093ECE0();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  sub_2208C479C(a2, (uint64_t)v6);
  return sub_22085FCE0;
}

uint64_t sub_2208C6BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_2208C4CDC(a1, a2, WitnessTable, a3);
}

uint64_t sub_2208C6C64()
{
  swift_getWitnessTable();

  return sub_22093EA40();
}

uint64_t sub_2208C6CD0()
{
  return sub_2208C52F4();
}

uint64_t sub_2208C6CE8()
{
  swift_getWitnessTable();

  return sub_22093EA10();
}

void *sub_2208C6D58(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2208C6D70(a1, a2, a3, MEMORY[0x263F8D7A0]);
}

void *sub_2208C6D70(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x263F8D708]);
  *a1 = v9;
  return result;
}

uint64_t sub_2208C6DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v3, a1);
  swift_getWitnessTable();
  uint64_t result = sub_22093F040();
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_2208C6E74(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208C6EC8()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_2208C6F1C()
{
  return sub_2208C51C4();
}

uint64_t sub_2208C6F28(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2208C5750(*a1, a1[1], a2, a5, a3, a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v7(a2, a3);
}

uint64_t sub_2208C6FD0()
{
  return sub_22093ECA0();
}

uint64_t sub_2208C7048()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C7064()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C70C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C712C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C7148()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C71AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208C71C8()
{
  sub_22093F3B0();
  swift_getWitnessTable();

  return sub_22093F190();
}

uint64_t sub_2208C7260()
{
  return 0;
}

void *sub_2208C7268(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v9) & ~v9) + v7;
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  size_t v13 = v12 + 1;
  if (v8 > 7u || (v8 & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v16 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v16 + ((v8 & 0xF8 ^ 0x1F8u) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v17 = __src[v12];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v19 = v12;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *__src;
          goto LABEL_22;
        case 2:
          int v20 = *(unsigned __int16 *)__src;
          goto LABEL_22;
        case 3:
          int v20 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_22;
        case 4:
          int v20 = *(_DWORD *)__src;
LABEL_22:
          int v21 = (v20 | (v18 << (8 * v12))) + 2;
          unsigned int v17 = v20 + 2;
          if (v12 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v12] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v17)
    {
      memcpy(__dst, __src, v13);
    }
    else
    {
      uint64_t v22 = ~v9;
      int v23 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
      v23(__dst, __src, v5);
      v23((unsigned char *)(((unint64_t)v4 + v10) & v22), (unsigned __int8 *)((unint64_t)&__src[v10] & v22), v5);
      *((unsigned char *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_2208C7450(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(result + 64);
  uint64_t v6 = *(unsigned __int8 *)(result + 80);
  uint64_t v7 = v5 + v6;
  unint64_t v8 = ((v5 + v6) & ~v6) + v5;
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unsigned int v9 = a1[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v9)
  {
    uint64_t v14 = ~v6;
    uint64_t v15 = *(void (**)(unsigned __int8 *, uint64_t))(result + 8);
    v15(a1, v3);
    return ((uint64_t (*)(unint64_t, uint64_t))v15)((unint64_t)&a1[v7] & v14, v3);
  }
  return result;
}

unsigned char *sub_2208C7604(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
    swift_bridgeObjectRetain();
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    unsigned int v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2208C77B0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      unsigned int v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_2208C7A44(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  unint64_t v10 = ((v7 + v8) & ~v8) + v7;
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = __src[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__src;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)__src;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v11] = 1;
  }
  else if (v12)
  {
    memcpy(__dst, __src, v11 + 1);
  }
  else
  {
    uint64_t v17 = ~v8;
    unsigned int v18 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32);
    v18(__dst, __src, v5);
    v18((unsigned char *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
    __dst[v11] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_2208C7BEC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    unint64_t v10 = ((v7 + v8) & ~v8) + v7;
    if (v10 <= 8) {
      uint64_t v11 = 8;
    }
    else {
      uint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__dst;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)__dst;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v12)
    {
      unsigned int v18 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
      v18(__dst, v5);
      v18((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), v5);
    }
    unsigned int v19 = __src[v11];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v21 = v11;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *__src;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)__src;
LABEL_29:
          int v23 = (v22 | (v20 << (8 * v11))) + 2;
          unsigned int v19 = v22 + 2;
          if (v11 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
      *(void *)__dst = *(void *)__src;
      __dst[v11] = 1;
    }
    else if (v19)
    {
      memcpy(__dst, __src, v11 + 1);
    }
    else
    {
      uint64_t v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
      v24(__dst, __src, v5);
      v24((unsigned __int8 *)((unint64_t)&__dst[v9] & v17), (unsigned __int8 *)((unint64_t)&__src[v9] & v17), v5);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_2208C7E7C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = 8;
  if (((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 8)
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_2208C7FEC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2208C81F0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for _RangeSetStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static Column.+= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C8284);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C82F0);
}

BOOL sub_2208C8268(Swift::Int *a1)
{
  return sub_2208C8D8C(a1);
}

uint64_t sub_2208C8284(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DF30], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8614);
}

uint64_t sub_2208C82F0(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DF30], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8DFC);
}

uint64_t sub_2208C8330(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t static Column.-= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C838C);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C83F8);
}

uint64_t sub_2208C838C(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DF38], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8614);
}

uint64_t sub_2208C83F8(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DF38], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8DFC);
}

uint64_t static Column.*= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C8464);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C84D0);
}

uint64_t sub_2208C8464(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8D760], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8614);
}

uint64_t sub_2208C84D0(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8D760], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8DFC);
}

uint64_t static Column./= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C853C);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C85A8);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C8A00);
}

{
  return sub_2208C8A6C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_2208C8268, (void (*)(void *))sub_2208C9474);
}

uint64_t sub_2208C853C(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DA88], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8614);
}

uint64_t sub_2208C85A8(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8DA88], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8DFC);
}

uint64_t sub_2208C8614(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v49 = a8;
  uint64_t v47 = a6;
  long long v44 = a1;
  uint64_t v45 = a3;
  uint64_t v42 = a4;
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v43 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v11;
  uint64_t v46 = v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v50 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = swift_bridgeObjectRetain();
  if (MEMORY[0x223C6A010](v18, TupleTypeMetadata2))
  {
    uint64_t v33 = v15;
    uint64_t v19 = 0;
    uint64_t v37 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v40 = (void (**)(uint64_t *, void *, uint64_t))(v50 + 16);
    uint64_t v41 = (uint64_t *)v17;
    uint64_t v35 = AssociatedTypeWitness - 8;
    uint64_t v36 = v9 + 16;
    uint64_t v39 = v9;
    uint64_t v34 = v9 + 8;
    uint64_t v38 = TupleTypeMetadata2;
    unsigned int v20 = v37;
    uint64_t v21 = v43;
    while (1)
    {
      char v22 = sub_22093E8B0();
      sub_22093E860();
      if (v22)
      {
        int v23 = v41;
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v50 + 16))(v41, a2+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v19, TupleTypeMetadata2);
        uint64_t v24 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_22093EEF0();
        int v23 = v41;
        if (v33 != 8)
        {
          __break(1u);
          return result;
        }
        v52[0] = result;
        (*v40)(v41, v52, TupleTypeMetadata2);
        swift_unknownObjectRelease();
        uint64_t v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v53 = *v23;
      uint64_t v51 = *v44;
      uint64_t v25 = AssociatedTypeWitness;
      uint64_t v26 = a2;
      uint64_t v27 = (void (*)(void *, void))sub_22093EBD0();
      uint64_t v28 = v39;
      uint64_t v29 = v42;
      (*(void (**)(char *))(v39 + 16))(v21);
      v27(v52, 0);
      a2 = v26;
      uint64_t AssociatedTypeWitness = v25;
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v20, v25);
      v49(v51 + *(void *)(v28 + 72) * v53, v21, v29, v47);
      int v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      TupleTypeMetadata2 = v38;
      v30(v21, v29);
      ++v19;
      if (v24 == MEMORY[0x223C6A010](a2, TupleTypeMetadata2)) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208C8A00(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8D0C0], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8614);
}

uint64_t sub_2208C8A6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *))
{
  uint64_t v33 = a8;
  uint64_t v32 = a7;
  uint64_t v31 = a5;
  uint64_t v25 = a3;
  uint64_t v30 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v13 = (char *)&v24 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18D20);
  uint64_t v27 = v14;
  unint64_t v15 = sub_220887EF8();
  unint64_t v26 = v15;
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  *(void *)uint64_t v46 = v14;
  *(void *)&v46[8] = AssociatedTypeWitness;
  *(void *)&v46[16] = v15;
  uint64_t v47 = v16;
  uint64_t v17 = sub_22093EEE0();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = *a1;
  uint64_t v28 = a1 + 2;
  *(void *)uint64_t v46 = v18;
  *(_OWORD *)&v46[8] = *(_OWORD *)(a1 + 1);
  type metadata accessor for Column();
  swift_getWitnessTable();
  sub_22093EA40();
  *(_OWORD *)uint64_t v46 = v45;
  uint64_t v19 = v30;
  sub_22093EAB0();
  sub_22093F2C0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, AssociatedTypeWitness);
  uint64_t v20 = v25;
  uint64_t v40 = v25;
  uint64_t v41 = a4;
  uint64_t v21 = v31;
  uint64_t v42 = v31;
  uint64_t v43 = a6;
  long long v44 = a1;
  swift_getWitnessTable();
  uint64_t v22 = sub_22093E7E0();
  uint64_t v34 = v20;
  uint64_t v35 = a4;
  uint64_t v36 = v21;
  uint64_t v37 = a6;
  uint64_t v38 = v22;
  uint64_t v39 = v19;
  type metadata accessor for PackedOptionalsArray();
  sub_22091F990(v33);
  return swift_bridgeObjectRelease();
}

BOOL sub_2208C8D8C(Swift::Int *a1)
{
  Swift::Int v1 = *a1;
  type metadata accessor for Column();
  return !Column.isNil(at:)(v1);
}

uint64_t sub_2208C8DFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v49 = a8;
  uint64_t v48 = a6;
  uint64_t v51 = a1;
  uint64_t v65 = a4;
  uint64_t v12 = sub_22093ED30();
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v45 - v15;
  uint64_t v71 = a7;
  uint64_t v72 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v23 = v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v25 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v46 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v27 = (char *)&v45 - v26;
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v76 = a2;
  if (!MEMORY[0x223C6A010](v28, TupleTypeMetadata2)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v60 = v12;
  uint64_t v61 = v25;
  uint64_t v29 = 0;
  long long v59 = &v27[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v62 = (void (**)(uint64_t *, void *, uint64_t))(v25 + 16);
  uint64_t v63 = (uint64_t *)v27;
  long long v58 = (void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v56 = v65 - 8;
  uint64_t v55 = (void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v53 = (void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v70 = a3;
  uint64_t v54 = TupleTypeMetadata2;
  long long v57 = (void (**)(char *))(v74 + 16);
  uint64_t v69 = v21;
  while (1)
  {
    char v31 = sub_22093E8B0();
    sub_22093E860();
    if (v31)
    {
      uint64_t v32 = v63;
      (*(void (**)(uint64_t *, unint64_t, uint64_t))(v61 + 16))(v63, v76+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v29, TupleTypeMetadata2);
      uint64_t v33 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t result = sub_22093EEF0();
      if (v46 != 8) {
        goto LABEL_16;
      }
      v75[0] = result;
      uint64_t v32 = v63;
      (*v62)(v63, v75, TupleTypeMetadata2);
      swift_unknownObjectRelease();
      uint64_t v33 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
LABEL_13:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v73 = v33;
    uint64_t v74 = v29;
    uint64_t v66 = *v32;
    (*v58)(v21, v59, v23);
    uint64_t v34 = (void (*)(void *, void))sub_22093EBD0();
    uint64_t v35 = v64;
    uint64_t v36 = v60;
    uint64_t v68 = *v57;
    v68(v64);
    v34(v75, 0);
    uint64_t v37 = v65;
    uint64_t v38 = *(void *)(v65 - 8);
    long long v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    int v39 = v67(v35, 1, v65);
    (*v55)(v35, v36);
    if (v39 != 1) {
      break;
    }
    uint64_t v21 = v69;
    (*v53)(v69, v23);
LABEL_4:
    TupleTypeMetadata2 = v54;
    uint64_t v30 = MEMORY[0x223C6A010](v76, v54);
    uint64_t v29 = v74 + 1;
    if (v73 == v30) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v52 = *v51;
  (*v47)(v19, v69, v23);
  uint64_t v40 = (void (*)(void *, void))sub_22093EBD0();
  uint64_t v41 = v50;
  v68(v50);
  v40(v75, 0);
  uint64_t result = v67(v41, 1, v37);
  if (result != 1)
  {
    uint64_t v43 = *v53;
    (*v53)(v19, v23);
    v49(v52 + *(void *)(v38 + 72) * v66, v41, v37, v48);
    long long v44 = v69;
    v43(v69, v23);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
    uint64_t v21 = v44;
    goto LABEL_4;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_2208C9474(uint64_t a1)
{
  return sub_2208C8330(a1, MEMORY[0x263F8D0C0], (uint64_t (*)(uint64_t, void, void, void, void, void, void, uint64_t))sub_2208C8DFC);
}

uint64_t static ColumnSlice.+= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C958C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF30]);
}

{
  return sub_2208C9D7C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF30]);
}

uint64_t static ColumnSlice.-= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C958C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF38]);
}

{
  return sub_2208C9D7C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF38]);
}

uint64_t static ColumnSlice.*= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C958C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D760]);
}

{
  return sub_2208C9D7C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D760]);
}

uint64_t static ColumnSlice./= infix<A>(_:_:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208C958C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DA88]);
}

{
  return sub_2208C9D7C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DA88]);
}

{
  return sub_2208C958C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D0C0]);
}

{
  return sub_2208C9D7C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D0C0]);
}

uint64_t sub_2208C958C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  long long v58 = a7;
  uint64_t v57 = a5;
  uint64_t v62 = a2;
  uint64_t v56 = sub_22093ED30();
  uint64_t v50 = *(void (***)(uint64_t, uint64_t))(v56 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v56);
  uint64_t v60 = (char *)&v48 - v12;
  uint64_t v51 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v11);
  long long v59 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v75 = v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_22093ED30();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v48 - v20);
  uint64_t v64 = a6;
  uint64_t v63 = a4;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v72 = (char *)&v48 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18D20);
  unint64_t v25 = sub_220887EF8();
  uint64_t v26 = *(void (***)(char *, void))(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v25;
  uint64_t v70 = v24;
  *(void *)&long long v76 = v24;
  *((void *)&v76 + 1) = v22;
  unint64_t v77 = v25;
  *(void *)&long long v78 = v26;
  uint64_t v27 = v26;
  uint64_t v66 = v26;
  uint64_t v71 = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))sub_22093EEE0();
  MEMORY[0x270FA5388](v71);
  *(void *)&long long v76 = v24;
  *((void *)&v76 + 1) = v22;
  unint64_t v77 = v25;
  *(void *)&long long v78 = v27;
  uint64_t v28 = sub_22093EED0();
  uint64_t v49 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v48 - v29;
  unint64_t v31 = *((void *)a1 + 2);
  long long v76 = *a1;
  unint64_t v77 = v31;
  long long v78 = *(long long *)((char *)a1 + 24);
  uint64_t v61 = a3;
  uint64_t v32 = type metadata accessor for ColumnSlice();
  swift_getWitnessTable();
  uint64_t v74 = v32;
  sub_22093EA40();
  long long v76 = v79;
  uint64_t v33 = v72;
  sub_22093EAB0();
  sub_22093F2C0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v22);
  uint64_t v34 = v65;
  sub_22093EEB0();
  uint64_t v72 = v30;
  uint64_t v73 = v28;
  sub_22093EEC0();
  uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v36 = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v70 = v35 + 48;
  uint64_t v71 = v36;
  if (v36(v21, 1, TupleTypeMetadata2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v72, v73);
  }
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v55 = (void (**)(char *))(v51 + 2);
  uint64_t v54 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 6);
  ++v51;
  ++v50;
  uint64_t v65 = v34 + 32;
  uint64_t v66 = (void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v53 = v16;
  uint64_t v52 = a1;
  long long v67 = v21;
  uint64_t v68 = TupleTypeMetadata2;
  while (1)
  {
    Swift::Int v38 = *v21;
    v69(v16, (char *)v21 + *(int *)(TupleTypeMetadata2 + 48), v75);
    uint64_t v39 = *(void *)a1;
    uint64_t v40 = *((void *)a1 + 1);
    unint64_t v41 = *((void *)a1 + 2);
    uint64_t v42 = *((void *)a1 + 3);
    uint64_t v43 = *((void *)a1 + 4);
    *(void *)&long long v76 = *(void *)a1;
    *((void *)&v76 + 1) = v40;
    unint64_t v77 = v41;
    *(void *)&long long v78 = v42;
    *((void *)&v78 + 1) = v43;
    if (!ColumnSlice.isNil(at:)(v38)) {
      break;
    }
LABEL_4:
    (*v66)(v16, v75);
    uint64_t v21 = v67;
    sub_22093EEC0();
    TupleTypeMetadata2 = v68;
    if (v71(v21, 1, v68) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v72, v73);
    }
  }
  long long v44 = (void (*)(long long *, void))sub_22093EBD0();
  uint64_t v45 = v59;
  uint64_t v46 = v61;
  (*v55)(v59);
  v44(&v76, 0);
  *(void *)&long long v76 = v39;
  *((void *)&v76 + 1) = v40;
  unint64_t v77 = v41;
  *(void *)&long long v78 = v42;
  *((void *)&v78 + 1) = v43;
  uint64_t v47 = (uint64_t)v60;
  ColumnSlice.subscript.getter();
  uint64_t result = (*v54)(v47, 1, v46);
  if (result != 1)
  {
    v58(v47, v45, v46, v57);
    (*v51)(v45, v46);
    a1 = v52;
    sub_22086E9E4(v47, v38);
    (*v50)(v47, v56);
    uint64_t v16 = v53;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208C9D7C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v69 = a7;
  uint64_t v68 = a5;
  uint64_t v81 = a3;
  uint64_t v101 = a2;
  uint64_t v77 = sub_22093ED30();
  unint64_t v86 = *(void (**)(char *, uint64_t))(v77 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v77);
  uint64_t v70 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v75 = (char *)&v65 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  long long v76 = (char *)&v65 - v15;
  unint64_t v88 = *(void (***)(char *, uint64_t))(a4 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v78 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  int64x2_t v102 = (char *)&v65 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v21 = sub_22093ED30();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (uint64_t *)((char *)&v65 - v22);
  uint64_t v96 = a6;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  char v100 = *(void (***)(char *, uint64_t))(v24 - 8);
  MEMORY[0x270FA5388](v24);
  int64x2_t v94 = (char *)&v65 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18D20);
  unint64_t v27 = sub_220887EF8();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(swift_getAssociatedConformanceWitness() + 8);
  *(void *)&long long v103 = v26;
  *((void *)&v103 + 1) = v24;
  int64x2_t v90 = (void (**)(char *, uint64_t, uint64_t))v26;
  unint64_t v104 = v27;
  *(void *)&long long v105 = v28;
  int64x2_t v91 = v28;
  unint64_t v92 = v27;
  uint64_t v29 = v28;
  uint64_t v98 = sub_22093EEE0();
  MEMORY[0x270FA5388](v98);
  uint64_t v93 = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))((char *)&v65 - v30);
  *(void *)&long long v103 = v26;
  *((void *)&v103 + 1) = v24;
  unint64_t v104 = v27;
  *(void *)&long long v105 = v29;
  uint64_t v97 = sub_22093EED0();
  uint64_t v66 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v32 = (char *)&v65 - v31;
  unint64_t v33 = *((void *)a1 + 2);
  long long v103 = *a1;
  unint64_t v104 = v33;
  long long v105 = *(long long *)((char *)a1 + 24);
  uint64_t v34 = type metadata accessor for ColumnSlice();
  swift_getWitnessTable();
  sub_22093EA40();
  long long v103 = v106;
  uint64_t v35 = v94;
  uint64_t v36 = v80;
  sub_22093EAB0();
  sub_22093F2C0();
  uint64_t v37 = v24;
  uint64_t v38 = AssociatedTypeWitness;
  v100[1](v35, v37);
  uint64_t v39 = v78;
  sub_22093EEB0();
  int64x2_t v94 = v32;
  sub_22093EEC0();
  uint64_t v40 = TupleTypeMetadata2;
  uint64_t v41 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v42 = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(v41 + 48);
  unint64_t v92 = v41 + 48;
  uint64_t v93 = v42;
  if (v42(v23, 1, TupleTypeMetadata2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v94, v97);
  }
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v44 = v36 + 32;
  int64x2_t v91 = v45;
  int64x2_t v90 = (void (**)(char *, uint64_t, uint64_t))(v88 + 2);
  unint64_t v89 = (void (**)(char *, char *, uint64_t))(v44 - 16);
  uint64_t v74 = (void (**)(char *))((char *)v86 + 16);
  char v100 = (void (**)(char *, uint64_t))(v44 - 24);
  ++v88;
  uint64_t v73 = v81 - 8;
  uint64_t v85 = (void (**)(char *, uint64_t))((char *)v86 + 8);
  uint64_t v67 = a4;
  uint64_t v72 = a1;
  uint64_t v71 = v17;
  uint64_t v80 = v44;
  unint64_t v87 = v23;
  uint64_t v99 = v34;
  while (1)
  {
    Swift::Int v47 = *v23;
    uint64_t v48 = (char *)v23 + *(int *)(v40 + 48);
    uint64_t v49 = v102;
    v91(v102, v48, v38);
    unint64_t v50 = *((void *)a1 + 2);
    long long v103 = *a1;
    unint64_t v104 = v50;
    long long v105 = *(long long *)((char *)a1 + 24);
    uint64_t v98 = v47;
    Swift::Bool v51 = ColumnSlice.isNil(at:)(v47);
    (*v90)(v17, v101, a4);
    (*v89)(v39, v49, v38);
    uint64_t v52 = v100;
    if (v51)
    {
      uint64_t v46 = *v100;
      (*v100)(v39, v38);
      (*v88)(v17, a4);
      v46(v102, v38);
      goto LABEL_5;
    }
    uint64_t v53 = (void (*)(long long *, void))sub_22093EBD0();
    uint64_t v54 = v76;
    uint64_t v55 = v39;
    uint64_t v56 = v77;
    char v84 = *v74;
    v84(v76);
    v53(&v103, 0);
    unint64_t v86 = *v52;
    v86(v55, v38);
    (*v88)(v17, a4);
    uint64_t v57 = v81;
    uint64_t v83 = *(void *)(v81 - 8);
    long long v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
    LODWORD(v53) = v58(v54, 1, v81);
    long long v82 = *v85;
    v82(v54, v56);
    if (v53 == 1)
    {
      a1 = v72;
      uint64_t v17 = v71;
      uint64_t v38 = AssociatedTypeWitness;
      uint64_t v39 = v78;
      v86(v102, AssociatedTypeWitness);
      goto LABEL_5;
    }
    long long v59 = (void (*)(long long *, void))sub_22093EBD0();
    uint64_t v60 = v75;
    v84(v75);
    v59(&v103, 0);
    uint64_t result = v58(v60, 1, v57);
    if (result == 1) {
      break;
    }
    a1 = v72;
    unint64_t v61 = *((void *)v72 + 2);
    long long v103 = *v72;
    unint64_t v104 = v61;
    long long v105 = *(long long *)((char *)v72 + 24);
    uint64_t v62 = (uint64_t)v70;
    uint64_t v63 = v98;
    ColumnSlice.subscript.getter();
    uint64_t result = v58((char *)v62, 1, v57);
    if (result == 1) {
      goto LABEL_13;
    }
    uint64_t v64 = v75;
    v69(v62, v75, v57, v68);
    sub_22086E9E4(v62, v63);
    v82((char *)v62, v56);
    uint64_t v38 = AssociatedTypeWitness;
    v86(v102, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v64, v57);
    a4 = v67;
    uint64_t v17 = v71;
    uint64_t v39 = v78;
LABEL_5:
    uint64_t v23 = v87;
    sub_22093EEC0();
    uint64_t v40 = TupleTypeMetadata2;
    if (v93(v23, 1, TupleTypeMetadata2) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v94, v97);
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t static DiscontiguousColumnSlice.+= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208CA950(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF30]);
}

{
  return sub_2208CB24C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF30]);
}

uint64_t static DiscontiguousColumnSlice.-= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208CA950(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF38]);
}

{
  return sub_2208CB24C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DF38]);
}

uint64_t static DiscontiguousColumnSlice.*= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208CA950(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D760]);
}

{
  return sub_2208CB24C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D760]);
}

uint64_t static DiscontiguousColumnSlice./= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208CA950(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DA88]);
}

{
  return sub_2208CB24C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8DA88]);
}

{
  return sub_2208CA950(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D0C0]);
}

{
  return sub_2208CB24C(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8D0C0]);
}

uint64_t sub_2208CA950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  long long v58 = a7;
  uint64_t v57 = a5;
  uint64_t v63 = a2;
  uint64_t v56 = sub_22093ED30();
  unint64_t v50 = *(void (***)(uint64_t, uint64_t))(v56 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v56);
  uint64_t v60 = (uint64_t)&v48 - v12;
  Swift::Bool v51 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v11);
  long long v59 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v48 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_22093ED30();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v71 = (uint64_t *)((char *)&v48 - v17);
  uint64_t v64 = a6;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  Swift::Int v74 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v69 = (char *)&v48 - v19;
  uint64_t v61 = a3;
  uint64_t v20 = type metadata accessor for DiscontiguousColumnSlice();
  uint64_t WitnessTable = (unsigned int (*)(Swift::Int *, uint64_t, uint64_t))swift_getWitnessTable();
  uint64_t v21 = sub_22093E3B0();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v82 = v21;
  *(void *)&long long v83 = v18;
  uint64_t v65 = (void (**)(char *, uint64_t))v21;
  *((void *)&v83 + 1) = v22;
  *(void *)&long long v84 = v23;
  uint64_t v66 = (void (*)(char *, char *, uint64_t))v22;
  uint64_t v70 = sub_22093EEE0();
  MEMORY[0x270FA5388](v70);
  uint64_t v67 = (char *)&v48 - v24;
  uint64_t v82 = v21;
  *(void *)&long long v83 = v18;
  *((void *)&v83 + 1) = v22;
  *(void *)&long long v84 = v23;
  uint64_t v25 = sub_22093EED0();
  uint64_t v49 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v27 = (char *)&v48 - v26;
  char v28 = *(unsigned char *)(a1 + 40);
  uint64_t v77 = *(void *)a1;
  long long v29 = *(_OWORD *)(a1 + 24);
  long long v78 = *(_OWORD *)(a1 + 8);
  long long v79 = v29;
  char v80 = v28;
  uint64_t v75 = v20;
  sub_22093EBA0();
  uint64_t v77 = v82;
  long long v78 = v83;
  long long v79 = v84;
  char v80 = v85;
  long long v81 = v86;
  uint64_t v30 = v69;
  uint64_t v62 = a4;
  sub_22093EAB0();
  sub_22093F2C0();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v30, v18);
  long long v31 = v79;
  LOBYTE(v18) = v80;
  swift_release();
  uint64_t v32 = v71;
  uint64_t v33 = TupleTypeMetadata2;
  swift_bridgeObjectRelease();
  sub_22080B6B4(v31, *((uint64_t *)&v31 + 1), v18);
  sub_22093EEB0();
  uint64_t v70 = v25;
  uint64_t v69 = v27;
  sub_22093EEC0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t WitnessTable = *(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v67 = (char *)(v34 + 48);
  if (WitnessTable(v32, 1, v33) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v69, v70);
  }
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v55 = (void (**)(char *))(v51 + 2);
  uint64_t v54 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 6);
  ++v51;
  ++v50;
  v73 += 32;
  uint64_t v65 = (void (**)(char *, uint64_t))(v73 - 24);
  uint64_t v53 = a1;
  uint64_t v52 = v15;
  while (1)
  {
    Swift::Int v36 = *v32;
    v66(v15, (char *)v32 + *(int *)(v33 + 48), AssociatedTypeWitness);
    uint64_t v38 = *(void *)a1;
    uint64_t v37 = *(void *)(a1 + 8);
    uint64_t v39 = *(void *)(a1 + 16);
    uint64_t v40 = *(void *)(a1 + 24);
    uint64_t v41 = *(void *)(a1 + 32);
    char v42 = *(unsigned char *)(a1 + 40);
    uint64_t v82 = *(void *)a1;
    *(void *)&long long v83 = v37;
    *((void *)&v83 + 1) = v39;
    *(void *)&long long v84 = v40;
    *((void *)&v84 + 1) = v41;
    char v85 = v42;
    Swift::Int v74 = v36;
    if (!DiscontiguousColumnSlice.isNil(at:)(v36)) {
      break;
    }
LABEL_4:
    (*v65)(v15, AssociatedTypeWitness);
    uint64_t v32 = v71;
    sub_22093EEC0();
    uint64_t v33 = TupleTypeMetadata2;
    if (WitnessTable(v32, 1, TupleTypeMetadata2) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v69, v70);
    }
  }
  uint64_t v43 = (void (*)(uint64_t *, void))sub_22093EBD0();
  uint64_t v44 = v59;
  uint64_t v45 = v61;
  (*v55)(v59);
  v43(&v82, 0);
  uint64_t v82 = v38;
  *(void *)&long long v83 = v37;
  *((void *)&v83 + 1) = v39;
  *(void *)&long long v84 = v40;
  *((void *)&v84 + 1) = v41;
  char v85 = v42;
  uint64_t v46 = v60;
  uint64_t v47 = v74;
  DiscontiguousColumnSlice.subscript.getter(v74, v60);
  uint64_t result = (*v54)(v46, 1, v45);
  if (result != 1)
  {
    v58(v46, v44, v45, v57);
    (*v51)(v44, v45);
    a1 = v53;
    sub_2208C28E0(v46, v47);
    (*v50)(v46, v56);
    uint64_t v15 = v52;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208CB24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, uint64_t))
{
  Swift::Int v74 = a7;
  uint64_t v73 = a5;
  uint64_t v107 = a2;
  uint64_t v83 = sub_22093ED30();
  unint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v83);
  uint64_t v75 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v81 = (char *)&v70 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v82 = (char *)&v70 - v16;
  uint64_t v93 = *(void (***)(char *, uint64_t))(a4 - 8);
  MEMORY[0x270FA5388](v15);
  char v85 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v108 = (char *)&v70 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_22093ED30();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v99 = (uint64_t *)((char *)&v70 - v23);
  uint64_t v24 = swift_getAssociatedTypeWitness();
  long long v105 = *(void (***)(char *, uint64_t))(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v98 = (char *)&v70 - v25;
  uint64_t v84 = a3;
  uint64_t v101 = a6;
  uint64_t v26 = type metadata accessor for DiscontiguousColumnSlice();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v106 = v26;
  uint64_t v27 = sub_22093E3B0();
  uint64_t v28 = swift_getWitnessTable();
  long long v29 = *(void (***)(void, void, void))(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v114 = v27;
  *(void *)&long long v115 = v24;
  *((void *)&v115 + 1) = v28;
  *(void *)&long long v116 = v29;
  uint64_t v96 = (void (*)(char *, char *, uint64_t))v28;
  uint64_t v30 = v29;
  long long v95 = (void (**)(char *, uint64_t, uint64_t))v29;
  uint64_t v104 = sub_22093EEE0();
  MEMORY[0x270FA5388](v104);
  int64x2_t v94 = (void (**)(char *, char *, uint64_t))((char *)&v70 - v31);
  uint64_t v114 = v27;
  *(void *)&long long v115 = v24;
  *((void *)&v115 + 1) = v28;
  *(void *)&long long v116 = v30;
  uint64_t v103 = sub_22093EED0();
  uint64_t v71 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  int64x2_t v102 = (char *)&v70 - v32;
  unsigned __int8 v33 = *(unsigned char *)(a1 + 40);
  uint64_t v109 = *(void *)a1;
  long long v34 = *(_OWORD *)(a1 + 24);
  long long v110 = *(_OWORD *)(a1 + 8);
  long long v111 = v34;
  unsigned __int8 v112 = v33;
  sub_22093EBA0();
  uint64_t v109 = v114;
  long long v110 = v115;
  long long v111 = v116;
  unsigned __int8 v112 = v117;
  long long v113 = v118;
  uint64_t v35 = v98;
  Swift::Int v36 = v85;
  uint64_t v37 = v99;
  sub_22093EAB0();
  sub_22093F2C0();
  v105[1](v35, v24);
  uint64_t v38 = v87;
  uint64_t v39 = *((void *)&v111 + 1);
  uint64_t v40 = v111;
  LODWORD(v105) = v112;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v40;
  uint64_t v42 = AssociatedTypeWitness;
  sub_22080B6B4(v41, v39, (char)v105);
  sub_22093EEB0();
  sub_22093EEC0();
  uint64_t v43 = TupleTypeMetadata2;
  uint64_t v44 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v98 = *(char **)(v44 + 48);
  uint64_t WitnessTable = v44 + 48;
  if (((unsigned int (*)(Swift::Int *, uint64_t, uint64_t))v98)(v37, 1, TupleTypeMetadata2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v102, v103);
  }
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  uint64_t v46 = v38 + 32;
  uint64_t v96 = v47;
  long long v95 = (void (**)(char *, uint64_t, uint64_t))(v93 + 2);
  int64x2_t v94 = (void (**)(char *, char *, uint64_t))(v46 - 16);
  char v80 = (void (**)(char *))((char *)v92 + 16);
  long long v105 = (void (**)(char *, uint64_t))(v46 - 24);
  ++v93;
  uint64_t v79 = v84 - 8;
  int64x2_t v91 = (void (**)(char *, uint64_t))((char *)v92 + 8);
  uint64_t v72 = a4;
  uint64_t v78 = a1;
  uint64_t v87 = v46;
  uint64_t v77 = v20;
  while (1)
  {
    Swift::Int v49 = *v37;
    unint64_t v50 = (char *)v37 + *(int *)(v43 + 48);
    Swift::Bool v51 = v108;
    v96(v108, v50, v42);
    unsigned __int8 v52 = *(unsigned char *)(a1 + 40);
    uint64_t v114 = *(void *)a1;
    long long v53 = *(_OWORD *)(a1 + 24);
    long long v115 = *(_OWORD *)(a1 + 8);
    long long v116 = v53;
    unsigned __int8 v117 = v52;
    uint64_t v104 = v49;
    Swift::Bool v54 = DiscontiguousColumnSlice.isNil(at:)(v49);
    (*v95)(v36, v107, a4);
    (*v94)(v20, v51, v42);
    if (v54)
    {
      uint64_t v48 = *v105;
      (*v105)(v20, v42);
      (*v93)(v36, a4);
      v48(v108, v42);
      goto LABEL_5;
    }
    uint64_t v55 = v36;
    uint64_t v56 = v105;
    uint64_t v57 = (void (*)(uint64_t *, void))sub_22093EBD0();
    long long v58 = v82;
    uint64_t v59 = v83;
    unint64_t v89 = *v80;
    v89(v82);
    v57(&v114, 0);
    unint64_t v92 = *v56;
    v92(v20, v42);
    (*v93)(v55, a4);
    uint64_t v60 = v84;
    uint64_t v61 = *(void *)(v84 - 8);
    int64x2_t v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
    LODWORD(v57) = v90(v58, 1, v84);
    unint64_t v88 = *v91;
    v88(v58, v59);
    if (v57 == 1)
    {
      a1 = v78;
      Swift::Int v36 = v85;
      uint64_t v42 = AssociatedTypeWitness;
      uint64_t v20 = v77;
      v92(v108, AssociatedTypeWitness);
      goto LABEL_5;
    }
    uint64_t v76 = v61;
    uint64_t v62 = (void (*)(uint64_t *, void))sub_22093EBD0();
    uint64_t v63 = v81;
    v89(v81);
    v62(&v114, 0);
    uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v90;
    uint64_t result = v90(v63, 1, v60);
    if (result == 1) {
      break;
    }
    a1 = v78;
    unsigned __int8 v65 = *(unsigned char *)(v78 + 40);
    uint64_t v114 = *(void *)v78;
    long long v66 = *(_OWORD *)(v78 + 24);
    long long v115 = *(_OWORD *)(v78 + 8);
    long long v116 = v66;
    unsigned __int8 v117 = v65;
    uint64_t v67 = v75;
    uint64_t v68 = v104;
    DiscontiguousColumnSlice.subscript.getter(v104, v75);
    uint64_t result = v64(v67, 1, v60);
    uint64_t v42 = AssociatedTypeWitness;
    if (result == 1) {
      goto LABEL_13;
    }
    uint64_t v69 = v81;
    v74(v67, v81, v60, v73);
    sub_2208C28E0(v67, v68);
    v88((char *)v67, v59);
    v92(v108, v42);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v60);
    a4 = v72;
    Swift::Int v36 = v85;
    uint64_t v20 = v77;
LABEL_5:
    uint64_t v37 = v99;
    sub_22093EEC0();
    uint64_t v43 = TupleTypeMetadata2;
    if (((unsigned int (*)(Swift::Int *, uint64_t, uint64_t))v98)(v37, 1, TupleTypeMetadata2) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v102, v103);
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_2208CBE5C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v5 = a2;
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7 >= v3) {
    uint64_t v8 = a2 - result;
  }
  else {
    uint64_t v8 = *(void *)(a3 + 16);
  }
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t result = (uint64_t)sub_220826FF8(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0) {
    goto LABEL_42;
  }
  uint64_t v27 = a3;
  unint64_t v28 = v7;
  uint64_t v30 = v6;
  unint64_t v26 = v8;
  if (v8)
  {
    uint64_t result = swift_bridgeObjectRetain();
    if (v5 < v6)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v8 < (unint64_t)v3) {
      uint64_t v3 = v8;
    }
    uint64_t v9 = (uint64_t *)(a3 + 40);
    uint64_t v10 = v6;
    uint64_t v31 = v5;
    while (v5 != v10)
    {
      if (!v3) {
        goto LABEL_37;
      }
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      unint64_t v14 = *(void *)(v33 + 16);
      unint64_t v13 = *(void *)(v33 + 24);
      uint64_t result = swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        uint64_t result = (uint64_t)sub_220826FF8((char *)(v13 > 1), v14 + 1, 1);
      }
      *(void *)(v33 + 16) = v14 + 1;
      uint64_t v15 = v33 + 32 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      *(void *)(v15 + 48) = v10;
      *(unsigned char *)(v15 + 56) = 7;
      --v3;
      v9 += 2;
      ++v10;
      --v8;
      uint64_t v5 = v31;
      if (!v8) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = v6;
LABEL_18:
  if (v10 == v5)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v33;
  }
  if (v5 >= v30)
  {
    uint64_t v16 = 0;
    if (v10 <= v5) {
      uint64_t v17 = v5;
    }
    else {
      uint64_t v17 = v10;
    }
    uint64_t v32 = v17 - v10;
    unint64_t v18 = v28 - v26;
    if (v28 >= v26) {
      unint64_t v19 = v28 - v26;
    }
    else {
      unint64_t v19 = 0;
    }
    unint64_t v29 = v19;
    uint64_t v20 = (uint64_t *)(v27 + 16 * v26 + 40);
    while (v10 >= v30)
    {
      if (v32 == v16) {
        goto LABEL_39;
      }
      if (v18 != v16)
      {
        if (v29 == v16) {
          goto LABEL_40;
        }
        uint64_t v21 = *(v20 - 1);
        uint64_t v22 = *v20;
        unint64_t v23 = *(void *)(v33 + 16);
        unint64_t v24 = *(void *)(v33 + 24);
        uint64_t result = swift_bridgeObjectRetain();
        if (v23 >= v24 >> 1) {
          uint64_t result = (uint64_t)sub_220826FF8((char *)(v24 > 1), v23 + 1, 1);
        }
        *(void *)(v33 + 16) = v23 + 1;
        uint64_t v25 = v33 + 32 * v23;
        *(void *)(v25 + 32) = v21;
        *(void *)(v25 + 40) = v22;
        *(void *)(v25 + 48) = v10 + v16;
        *(unsigned char *)(v25 + 56) = 7;
        ++v16;
        v20 += 2;
        if (v10 - v5 + v16) {
          continue;
        }
      }
      goto LABEL_19;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2208CC0CC(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_220827238(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t DataFrame.init(contentsOfJSONFile:columns:types:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_22093DFB0();
  if (v4)
  {
    uint64_t v11 = sub_22093DFA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v13 = v10;
    uint64_t v21 = a4;
    uint64_t v22 = v9;
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    objc_msgSend(v14, sel_setFormatOptions_, 51);
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    objc_msgSend(v15, sel_setFormatOptions_, 1907);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41080);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_220945110;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v14;
    *(void *)(v16 + 32) = sub_2208CCF6C;
    *(void *)(v16 + 40) = v17;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    *(void *)(v16 + 48) = sub_2208CCF6C;
    *(void *)(v16 + 56) = v18;
    uint64_t v25 = (char *)v16;
    DataFrame.init(jsonData:columns:types:options:)(v22, v13, a2, a3, &v25, (uint64_t)&v23);
    uint64_t v19 = sub_22093DFA0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    uint64_t v20 = v24;
    *(_OWORD *)uint64_t v21 = v23;
    *(void *)(v21 + 16) = v20;
  }
  return result;
}

uint64_t DataFrame.init(jsonData:columns:types:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v11 = *a5;
  uint64_t v12 = self;
  unint64_t v13 = (void *)sub_22093DFF0();
  *(void *)&long long v45 = 0;
  id v14 = objc_msgSend(v12, sel_JSONObjectWithData_options_error_, v13, 0, &v45);

  if (!v14)
  {
    id v33 = (id)v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093DF20();

LABEL_22:
    swift_willThrow();
    sub_22080B88C(a1, a2);
    return swift_bridgeObjectRelease();
  }
  uint64_t v41 = v11;
  id v15 = (id)v45;
  sub_22093EDF0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F194D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2208478FC();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    *(_OWORD *)(v34 + 32) = 0u;
    *(_OWORD *)(v34 + 48) = 0u;
    *(unsigned char *)(v34 + 64) = 3;
    goto LABEL_22;
  }
  uint64_t v38 = a6;
  *(void *)&long long v45 = MEMORY[0x263F8EE88];
  uint64_t v16 = *((void *)v44 + 2);
  uint64_t v39 = v44;
  if (v16)
  {
    uint64_t v17 = a1;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v16; ++i)
    {
      uint64_t v19 = swift_bridgeObjectRetain();
      sub_2208CC0CC(v19);
    }
    swift_bridgeObjectRelease();
    a1 = v17;
  }
  unint64_t v40 = a2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = (char *)sub_220837C48(v20);
  swift_bridgeObjectRelease();
  uint64_t v44 = v21;
  sub_2208CCF74(&v44);
  if (v42)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_2208CDAA4(v44, a3);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v37 = a1;
      uint64_t v24 = 0;
      for (unint64_t j = 0; j != v23; ++j)
      {
        if (j >= *(void *)(v22 + 16))
        {
          __break(1u);
LABEL_27:
          __break(1u);
        }
        if (*(void *)(a4 + 16))
        {
          uint64_t v26 = *(void *)(v22 + v24 + 32);
          uint64_t v27 = *(void *)(v22 + v24 + 40);
          uint64_t v28 = *(void *)(v22 + v24 + 48);
          swift_bridgeObjectRetain_n();
          uint64_t v29 = sub_22081D290(v26, v27);
          if (v30)
          {
            char v31 = *(unsigned char *)(*(void *)(a4 + 56) + v29);
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v22 = (uint64_t)sub_22080ABD4(v22);
            }
            if (j >= *(void *)(v22 + 16)) {
              goto LABEL_27;
            }
            uint64_t v32 = v22 + v24;
            *(void *)(v32 + 32) = v26;
            *(void *)(v32 + 40) = v27;
            *(void *)(v32 + 48) = v28;
            *(unsigned char *)(v32 + 56) = v31;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        v24 += 32;
      }
      swift_bridgeObjectRelease();
      a1 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = v41;
    swift_bridgeObjectRetain();
    sub_2208CC8D8((uint64_t)v39, v22, (uint64_t *)&v44, (uint64_t)&v45);
    sub_22080B88C(a1, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v46;
    long long v43 = v45;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v38 = v43;
    *(void *)(v38 + 16) = v36;
  }
  return result;
}

uint64_t sub_2208CC8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_2208CD988(a2, a1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v9[2];
  if (v10)
  {
    uint64_t v22 = a4;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_3;
    }
  }
  else
  {
LABEL_9:
    uint64_t v15 = MEMORY[0x263F8EE78];
    unint64_t v16 = sub_22080CCF4(MEMORY[0x263F8EE78]);
    *(void *)&long long v27 = v15;
    *((void *)&v27 + 1) = v15;
    unint64_t v28 = v16;
    uint64_t v17 = v9[2];
    if (!v17)
    {
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v21 = v28;
      *(_OWORD *)a4 = v27;
      *(void *)(a4 + 16) = v21;
      return result;
    }
    unint64_t v10 = 0;
    a1 = (uint64_t)(v9 + 4);
    while (v10 < v9[2])
    {
      ++v10;
      sub_22083B5D0(a1, (uint64_t)v24);
      uint64_t v18 = v25;
      uint64_t v19 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 16))(v23, v18, v19);
      DataFrame.append(column:)((uint64_t)v23);
      sub_22080B0D8((uint64_t)v23);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
      a1 += 40;
      if (v17 == v10) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  uint64_t v9 = sub_22080ABC0(v9);
LABEL_3:
  unint64_t v11 = 0;
  uint64_t v12 = (uint64_t)(v9 + 4);
  while (1)
  {
    if (v10 == v11) {
      goto LABEL_16;
    }
    if (v11 >= v9[2]) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v12 + 24);
    uint64_t v14 = *(void *)(v12 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1, v13, v14);
    if (v4) {
      return swift_bridgeObjectRelease();
    }
    ++v11;
    v12 += 40;
    if (v10 == v11)
    {
      a4 = v22;
      goto LABEL_9;
    }
  }
}

double sub_2208CCAD0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a2;
  double v6 = *v3;
  double v5 = v3[1];
  switch(*((unsigned char *)v3 + 24))
  {
    case 1:
      a3[3] = (uint64_t)&type metadata for BooleanJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221DC0;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      sub_220832810(MEMORY[0x263F8EE78]);
      *((void *)&v21 + 1) = v11;
      sub_2208F1904(a1);
      goto LABEL_9;
    case 2:
      a3[3] = (uint64_t)&type metadata for DoubleJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221DE8;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      sub_220832520(MEMORY[0x263F8EE78]);
      *((void *)&v21 + 1) = v12;
      sub_2208F1888(a1);
      goto LABEL_9;
    case 3:
      a3[3] = (uint64_t)&type metadata for DateJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221E38;
      uint64_t v13 = swift_allocObject();
      *a3 = v13;
      *(double *)&long long v22 = v5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      *((void *)&v22 + 1) = sub_220832D70(MEMORY[0x263F8EE78]);
      sub_2208F1938(a1);
      double result = v5;
      *(double *)(v13 + 16) = v6;
      *(double *)(v13 + 24) = v5;
      *(void *)(v13 + 32) = v4;
      *(void *)(v13 + 40) = 0;
      *(unsigned char *)(v13 + 48) = 1;
      *(double *)(v13 + 56) = v6;
      *(_OWORD *)(v13 + 64) = v22;
      return result;
    case 4:
      a3[3] = (uint64_t)&type metadata for StringJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221E10;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      *((void *)&v21 + 1) = sub_2208322FC(MEMORY[0x263F8EE78]);
      sub_2208F18BC(a1);
      goto LABEL_9;
    case 5:
      a3[3] = (uint64_t)&type metadata for ArrayJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221E60;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      *((void *)&v21 + 1) = sub_2208333E8(MEMORY[0x263F8EE78]);
      sub_2208F1980(a1);
      goto LABEL_9;
    case 6:
      a3[3] = (uint64_t)&type metadata for ObjectJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221E88;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      *((void *)&v21 + 1) = sub_220833668(MEMORY[0x263F8EE78]);
      sub_2208F19C8(a1);
      goto LABEL_9;
    case 7:
      a3[3] = (uint64_t)&type metadata for InferringJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D223460;
      uint64_t v15 = swift_allocObject();
      *a3 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x263F8EE78];
      sub_220848E4C(MEMORY[0x263F8EE78]);
      uint64_t v18 = v17;
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41148);
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0xE000000000000000;
      *(void *)(v15 + 64) = v18;
      *(void *)(v15 + 72) = v19;
      *(void *)(v15 + 16) = v4;
      *(void *)(v15 + 24) = v4;
      *(void *)(v15 + 32) = 0;
      *(unsigned char *)(v15 + 40) = 1;
      *(void *)(v15 + 80) = &off_26D2223C0;
      *(double *)(v15 + 88) = v6;
      *(double *)(v15 + 96) = v5;
      *(double *)&long long v23 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *((void *)&v23 + 1) = sub_2208322FC(v16);
      sub_2208F18BC(0);
      *(void *)(v15 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD413E0);
      *(void *)(v15 + 136) = &off_26D2223C0;
      *(double *)(v15 + 104) = v6;
      double result = v5;
      *(_OWORD *)(v15 + 112) = v23;
      return result;
    default:
      a3[3] = (uint64_t)&type metadata for IntegerJSONColumnProcessor;
      a3[4] = (uint64_t)&off_26D221D98;
      uint64_t v9 = swift_allocObject();
      *a3 = v9;
      double v20 = v6;
      *(double *)&long long v21 = v5;
      swift_bridgeObjectRetain_n();
      sub_220831BD0(MEMORY[0x263F8EE78]);
      *((void *)&v21 + 1) = v10;
      sub_2208F180C(a1);
LABEL_9:
      double result = *(double *)&v21;
      *(double *)(v9 + 16) = v6;
      *(double *)(v9 + 24) = v5;
      *(double *)(v9 + 32) = v20;
      *(_OWORD *)(v9 + 40) = v21;
      return result;
  }
}

uint64_t sub_2208CCF34()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2208CCF6C(uint64_t a1)
{
  return sub_2208530C4(a1, *(void *)(v1 + 16));
}

uint64_t sub_2208CCF74(char **a1)
{
  int64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v2 = sub_22089E490((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_2208CCFE0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2208CCFE0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_22093F170();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2208CD688(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v104 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_117:
      uint64_t result = v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_2208CD758((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_22080AB70(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          uint64_t v96 = (void *)(v93 + 32 + 16 * v92);
          *uint64_t v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_22093E8A0();
    *(void *)(result + 16) = v6;
    uint64_t v100 = result;
    uint64_t v104 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v102 = v3;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    uint64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    uint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_22093F250();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      long long v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_22093F250();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      uint64_t v20 = v18 + 1;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_22081B3EC(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v38 = *(void *)(v10 + 16);
    unint64_t v37 = *(void *)(v10 + 24);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_22081B3EC((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v39 = v10 + 32;
    unint64_t v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    uint64_t *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      uint64_t v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v46 = v39 + 16 * v11;
          uint64_t v47 = *(void *)(v46 - 64);
          uint64_t v48 = *(void *)(v46 - 56);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(void *)(v46 - 48);
          uint64_t v50 = *(void *)(v46 - 40);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          Swift::Bool v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = (uint64_t *)(v39 + 16 * v41);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *(void *)(v10 + 32);
            uint64_t v71 = *(void *)(v10 + 40);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *(void *)(v10 + 32);
          uint64_t v42 = *(void *)(v10 + 40);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        unsigned __int8 v65 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = (uint64_t *)(v39 + 16 * v80);
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        uint64_t v87 = (void *)(v39 + 16 * v41);
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_2208CD758((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *(void *)(v82 + 16)) {
          goto LABEL_132;
        }
        *uint64_t v83 = v84;
        *(void *)(v85 + 16 * v80 + 8) = v88;
        unint64_t v90 = *(void *)(v82 + 16);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *(void *)(v82 + 16) = v90 - 1;
        uint64_t v9 = v89;
        uint64_t v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      char v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        uint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        uint64_t v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_22093F250();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_2208CD688(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_22093F250(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2208CD758(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      uint64_t v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_22093F250() & 1) == 0)
      {
        uint64_t v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_22093F250() & 1) == 0) {
        break;
      }
      uint64_t v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    uint64_t v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

uint64_t sub_2208CD988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_220827018(0, v3, 0);
    uint64_t v4 = v20;
    uint64_t v8 = *(void *)(a2 + 16);
    int64_t v9 = (unsigned char *)(a1 + 56);
    do
    {
      uint64_t v10 = *((void *)v9 - 1);
      char v11 = *v9;
      long long v16 = *(_OWORD *)(v9 - 24);
      uint64_t v17 = v10;
      char v18 = v11;
      uint64_t v15 = a3;
      sub_2208CCAD0(v8, &v15, (uint64_t *)v19);
      uint64_t v20 = v4;
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_220827018((void *)(v12 > 1), v13 + 1, 1);
        uint64_t v4 = v20;
      }
      v9 += 32;
      *(void *)(v4 + 16) = v13 + 1;
      sub_2208343B8(v19, v4 + 40 * v13 + 32);
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_2208CDAA4(void *a1, uint64_t a2)
{
  if (a2)
  {
    int64_t v4 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t)sub_22081C7EC(0, v4, 0, MEMORY[0x263F8EE78]);
    int64_t v24 = v4;
    if (v4)
    {
      uint64_t v6 = 0;
      uint64_t v7 = a1[2];
      uint64_t v23 = a2 + 32;
      do
      {
        if (v7)
        {
          unint64_t v12 = (uint64_t *)(v23 + 16 * v6);
          uint64_t v13 = *v12;
          uint64_t v14 = v12[1];
          BOOL v15 = a1[4] == *v12 && a1[5] == v14;
          if (v15 || (sub_22093F250() & 1) != 0)
          {
            uint64_t v8 = 0;
LABEL_5:
            unint64_t v10 = *(void *)(v5 + 16);
            unint64_t v9 = *(void *)(v5 + 24);
            swift_bridgeObjectRetain();
            if (v10 >= v9 >> 1) {
              uint64_t v5 = (uint64_t)sub_22081C7EC((char *)(v9 > 1), v10 + 1, 1, (char *)v5);
            }
            *(void *)(v5 + 16) = v10 + 1;
            uint64_t v11 = v5 + 32 * v10;
            *(void *)(v11 + 32) = v13;
            *(void *)(v11 + 40) = v14;
            *(void *)(v11 + 48) = v8;
            *(unsigned char *)(v11 + 56) = 7;
            goto LABEL_8;
          }
          if (v7 != 1)
          {
            BOOL v16 = a1[6] == v13 && a1[7] == v14;
            if (!v16 && (sub_22093F250() & 1) == 0)
            {
              uint64_t v17 = a1 + 9;
              uint64_t v18 = 2;
              while (v7 != v18)
              {
                uint64_t v8 = v18;
                if (*(v17 - 1) != v13 || *v17 != v14)
                {
                  char v20 = sub_22093F250();
                  uint64_t v18 = v8 + 1;
                  v17 += 2;
                  if ((v20 & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_5;
              }
              goto LABEL_8;
            }
            uint64_t v8 = 1;
            goto LABEL_5;
          }
        }
LABEL_8:
        ++v6;
      }
      while (v6 != v24);
    }
  }
  else
  {
    uint64_t v21 = a1[2];
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2208CBE5C(0, v21, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2208CDC9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t objectdestroy_5Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2208CDD44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);

  return MEMORY[0x270FA0238](v0, 144, 7);
}

ValueMetadata *type metadata accessor for JSONColumnDescriptor()
{
  return &type metadata for JSONColumnDescriptor;
}

unint64_t sub_2208CDDB0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_22093E770();
  }
  __break(1u);
  return result;
}

uint64_t sub_2208CDDFC()
{
  unint64_t v0 = sub_22093E770();
  uint64_t v4 = sub_2208CDE7C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2208CDE7C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_2208CDFD4(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_2208CE0D4(v9, 0);
      unint64_t v12 = sub_2208CE13C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_22093EF60();
LABEL_4:
        JUMPOUT(0x223C69D60);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x223C69D60](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x223C69D60]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2208CDFD4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_2208CE350(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_2208CE350(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_22093E700();
}

void *sub_2208CE0D4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411B0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_2208CE13C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_2208CE350(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_22093E710();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_22093EF60();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_2208CE350(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_22093E6E0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2208CE350(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_22093E720();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x223C69E10](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_2208CE3CC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = sub_22093E680();
    v12[0] = sub_22093E750();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

unsigned __int8 *sub_2208CE4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_2208CFF08();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_22093E760();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    char v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_2208CDDFC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    char v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v9 = (unsigned __int8 *)sub_22093EF60();
  }
LABEL_7:
  unint64_t v13 = sub_2208CE5CC(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_2208CE5CC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2208CE848(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_22093EF60();
  }
  uint64_t result = sub_2208CE91C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_2208CE91C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_2208CE350(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_22093E700();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_2208CE350(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_2208CE350(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_22093E700();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_2208CED44(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_22093F180() & 1;
  }
}

uint64_t sub_2208CEDBC(uint64_t a1, unint64_t a2)
{
  uint64_t v37 = 46;
  unint64_t v38 = 0xE100000000000000;
  unsigned int v36 = &v37;
  unint64_t v4 = sub_2208CE3CC(sub_2208CFEEC, (uint64_t)v35, a1, a2);
  uint64_t v5 = 0;
  if ((v6 & 1) == 0)
  {
    unint64_t v7 = v4;
    uint64_t v37 = 58;
    unint64_t v38 = 0xE100000000000000;
    MEMORY[0x270FA5388](v4);
    v34[2] = &v37;
    unint64_t v8 = sub_2208CE3CC(sub_2208CFEEC, (uint64_t)v34, a1, a2);
    if (v9) {
      return 0;
    }
    unint64_t v10 = v8 >> 14;
    if (v8 >> 14 < v7 >> 14)
    {
      __break(1u);
    }
    else
    {
      unint64_t v11 = sub_22093E770();
      char v15 = sub_2208CED44(v11, v12, v13, v14, 0x786469732ELL, 0xE500000000000000);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 || v10 >= (unint64_t)sub_22093E680() >> 14) {
        return 0;
      }
      unint64_t v16 = sub_22093E670();
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_2208CDDB0(v16, a1, a2);
      unint64_t v19 = v18;
      unint64_t v21 = v20;
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      if ((v17 ^ v19) >> 14)
      {
        sub_2208CE848(v17, v19, v21, v23, 10);
        if ((v24 & 0x100) != 0) {
          sub_2208CE4D8(v17, v19, v21, v23, 10);
        }
        char v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_22093E770();
          uint64_t v28 = v27;
          uint64_t v30 = v29;
          uint64_t v32 = v31;
          swift_bridgeObjectRelease();
          uint64_t v5 = MEMORY[0x223C69D50](v26, v28, v30, v32);
          swift_bridgeObjectRelease();
          return v5;
        }
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

char *sub_2208CF054(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = (uint64_t *)a2;
  uint64_t v5 = (uint64_t *)a1;
  char v6 = (void *)sub_220902620(a1, a2);
  if (v3)
  {
    MEMORY[0x223C6AF70](v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
    if (swift_dynamicCast())
    {
      MEMORY[0x223C6AF60](v3);
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v7 = 0xD00000000000001ALL;
      *(void *)(v7 + 8) = 0x80000002209409B0;
      *(unsigned char *)(v7 + 16) = 0;
      swift_willThrow();
    }
    sub_22080B88C((uint64_t)v5, (unint64_t)v4);
    MEMORY[0x223C6AF60](v3);
    return (char *)v2;
  }
  unint64_t v2 = (unint64_t)v6;
  uint64_t v9 = v6[2];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  unint64_t v91 = (unint64_t)v4;
  uint64_t v92 = (uint64_t)v5;
  unint64_t v4 = (uint64_t *)v6[4];
  uint64_t v10 = v6[6];
  BOOL v11 = v4 == (uint64_t *)0x656D61726673 && v6[5] == 0xE600000000000000;
  uint64_t v87 = v6[5];
  uint64_t v88 = v6[6];
  uint64_t v93 = v88;
  if (v11) {
    goto LABEL_31;
  }
  uint64_t v12 = v6[6];
  if ((sub_22093F250() & 1) == 0)
  {
    if (v9 != 1)
    {
      uint64_t v5 = (uint64_t *)(v2 + 72);
      uint64_t v14 = 1;
      while (1)
      {
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        uint64_t v12 = *v5;
        BOOL v16 = *(v5 - 2) == 0x656D61726673 && *(v5 - 1) == 0xE600000000000000;
        if (v16 || (sub_22093F250() & 1) != 0) {
          goto LABEL_12;
        }
        v5 += 3;
        ++v14;
        if (v15 == v9) {
          goto LABEL_25;
        }
      }
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v4 = (uint64_t *)v91;
    uint64_t v5 = (uint64_t *)v92;
LABEL_26:
    sub_220809E4C();
    swift_allocError();
    unint64_t v2 = 0;
    *(void *)uint64_t v17 = 0xD00000000000002DLL;
    unint64_t v18 = "SFrame index is missing the 'sframe' section.";
LABEL_27:
    unint64_t v19 = (unint64_t)(v18 - 32) | 0x8000000000000000;
    goto LABEL_28;
  }
LABEL_12:
  uint64_t v88 = v12;
  if (v4 == (uint64_t *)0x6E5F6E6D756C6F63)
  {
    uint64_t v5 = (uint64_t *)v92;
    uint64_t v10 = v93;
    uint64_t v13 = v93;
    if (v87 == 0xEC00000073656D61) {
      goto LABEL_46;
    }
  }
  else
  {
    uint64_t v10 = v93;
  }
LABEL_31:
  uint64_t v13 = v10;
  if ((sub_22093F250() & 1) == 0)
  {
    if (v9 == 1)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v5 = (uint64_t *)v92;
      sub_220809E4C();
      swift_allocError();
      unint64_t v2 = 0;
      *(void *)uint64_t v17 = 0xD000000000000033;
      unint64_t v19 = 0x8000000220940A00;
      unint64_t v4 = (uint64_t *)v91;
      goto LABEL_28;
    }
    uint64_t v5 = (uint64_t *)(v2 + 72);
    uint64_t v20 = 1;
    while (1)
    {
      uint64_t v21 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        break;
      }
      uint64_t v13 = *v5;
      BOOL v22 = *(v5 - 2) == 0x6E5F6E6D756C6F63 && *(v5 - 1) == 0xEC00000073656D61;
      if (v22 || (sub_22093F250() & 1) != 0) {
        goto LABEL_32;
      }
      v5 += 3;
      ++v20;
      if (v21 == v9) {
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_100;
  }
LABEL_32:
  if (v4 == (uint64_t *)0x665F6E6D756C6F63)
  {
    uint64_t v5 = (uint64_t *)v92;
    uint64_t v10 = v93;
    if (v87 == 0xEC00000073656C69) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v5 = (uint64_t *)v92;
    uint64_t v10 = v93;
  }
LABEL_46:
  if ((sub_22093F250() & 1) == 0)
  {
    if (v9 != 1)
    {
      unint64_t v4 = (uint64_t *)(v2 + 72);
      uint64_t v45 = 1;
      while (1)
      {
        uint64_t v46 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          break;
        }
        uint64_t v5 = (uint64_t *)*(v4 - 1);
        uint64_t v94 = *v4;
        if (*(v4 - 2) == 0x665F6E6D756C6F63 && v5 == (uint64_t *)0xEC00000073656C69)
        {
          unint64_t v4 = (uint64_t *)v91;
LABEL_79:
          uint64_t v5 = (uint64_t *)v92;
          uint64_t v10 = v94;
          goto LABEL_48;
        }
        if (sub_22093F250())
        {
          unint64_t v4 = (uint64_t *)v91;
          goto LABEL_79;
        }
        v4 += 3;
        ++v45;
        if (v46 == v9)
        {
          swift_bridgeObjectRelease();
          unint64_t v4 = (uint64_t *)v91;
          uint64_t v5 = (uint64_t *)v92;
          goto LABEL_73;
        }
      }
      __break(1u);
      goto LABEL_105;
    }
    swift_bridgeObjectRelease();
    unint64_t v4 = (uint64_t *)v91;
LABEL_73:
    sub_220809E4C();
    swift_allocError();
    unint64_t v2 = 0;
    *(void *)uint64_t v17 = 0xD000000000000033;
    unint64_t v18 = "SFrame index is missing the 'column_files' section.";
    goto LABEL_27;
  }
LABEL_47:
  unint64_t v4 = (uint64_t *)v91;
LABEL_48:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v88 + 16)
    || (uint64_t v23 = sub_22081D290(0x756C6F635F6D756ELL, 0xEB00000000736E6DLL), (v24 & 1) == 0)
    || (char v25 = (uint64_t *)(*(void *)(v88 + 56) + 16 * v23),
        uint64_t v26 = *v25,
        unint64_t v2 = v25[1],
        swift_bridgeObjectRetain(),
        uint64_t v27 = sub_2209322EC(v26, v2),
        (v28 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    unsigned __int8 v41 = "SFrame index is missing the number of columns.";
    unint64_t v42 = 0xD00000000000002ELL;
LABEL_60:
    *(void *)uint64_t v40 = v42;
    *(void *)(v40 + 8) = (unint64_t)(v41 - 32) | 0x8000000000000000;
    *(unsigned char *)(v40 + 16) = 0;
    swift_willThrow();
    uint64_t v43 = (uint64_t)v5;
    unint64_t v44 = (unint64_t)v4;
LABEL_61:
    sub_22080B88C(v43, v44);
    return (char *)v2;
  }
  uint64_t v86 = v27;
  if (!*(void *)(v88 + 16)
    || (uint64_t v29 = sub_22081D290(0x73776F726ELL, 0xE500000000000000), (v30 & 1) == 0)
    || (uint64_t v31 = (uint64_t *)(*(void *)(v88 + 56) + 16 * v29),
        uint64_t v32 = *v31,
        unint64_t v2 = v31[1],
        swift_bridgeObjectRetain(),
        uint64_t v33 = sub_2209322EC(v32, v2),
        (v34 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    unsigned __int8 v41 = "SFrame index is missing the number of rows.";
    unint64_t v42 = 0xD00000000000002BLL;
    goto LABEL_60;
  }
  if (!*(void *)(v88 + 16)
    || (v2 = v33, uint64_t v35 = sub_22081D290(0x6E6F6973726576, 0xE700000000000000), (v36 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    unint64_t v2 = 0;
    *(void *)uint64_t v17 = 0xD00000000000002BLL;
    unint64_t v18 = "SFrame index is missing the version number.";
    goto LABEL_27;
  }
  uint64_t v37 = (uint64_t *)(*(void *)(v88 + 56) + 16 * v35);
  uint64_t v38 = *v37;
  uint64_t v39 = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v38 != 48 || v39 != 0xE100000000000000) && (sub_22093F250() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v2 = 0;
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v81 = 0;
    *(void *)(v81 + 8) = 0xE000000000000000;
    *(unsigned char *)(v81 + 16) = 1;
    swift_willThrow();
    uint64_t v43 = (uint64_t)v5;
    unint64_t v44 = v91;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_22081CA58(0, v86 & ~(v86 >> 63), 0, MEMORY[0x263F8EE78]);
  unint64_t v4 = (uint64_t *)v91;
  if ((v86 & 0x8000000000000000) == 0)
  {
    uint64_t v48 = result;
    if (!v86)
    {
LABEL_110:
      sub_22080B88C((uint64_t)v5, (unint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (char *)v2;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F194D8);
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v49 + 16) = xmmword_220944FB0;
    uint64_t v51 = MEMORY[0x263F8D750];
    *(void *)(v49 + 56) = v50;
    *(void *)(v49 + 64) = v51;
    *(void *)(v49 + 32) = 0;
    uint64_t v52 = sub_22093E590();
    uint64_t v54 = v53;
    uint64_t v89 = v52;
    if (*(void *)(v13 + 16))
    {
      uint64_t v55 = v52;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_22081D290(v55, v54);
      if (v57)
      {
        uint64_t v58 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v56);
        uint64_t v84 = *v58;
        uint64_t v85 = v58[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v59 = v10;
        if (*(void *)(v10 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_22081D290(v89, v54);
          if (v61)
          {
            uint64_t v62 = 1;
            while (1)
            {
              uint64_t v63 = (uint64_t *)(*(void *)(v59 + 56) + 16 * v60);
              uint64_t v65 = *v63;
              unint64_t v64 = v63[1];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRelease_n();
              uint64_t v66 = sub_2208CEDBC(v65, v64);
              uint64_t v68 = v67;
              uint64_t v90 = v69;
              swift_bridgeObjectRelease();
              if (!v68)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_22093EEA0();
                swift_bridgeObjectRelease();
                sub_22093E6C0();
                swift_bridgeObjectRelease();
                sub_22093E6C0();
                unint64_t v2 = 0xD000000000000021;
                sub_220809E4C();
                swift_allocError();
                *(void *)uint64_t v83 = 0xD000000000000021;
                *(void *)(v83 + 8) = 0x8000000220940BA0;
                *(unsigned char *)(v83 + 16) = 0;
                swift_willThrow();
                sub_22080B88C(v92, v91);
                goto LABEL_29;
              }
              swift_bridgeObjectRelease();
              unint64_t v71 = *((void *)v48 + 2);
              unint64_t v70 = *((void *)v48 + 3);
              if (v71 >= v70 >> 1) {
                uint64_t v48 = sub_22081CA58((char *)(v70 > 1), v71 + 1, 1, v48);
              }
              *((void *)v48 + 2) = v71 + 1;
              uint64_t v72 = &v48[40 * v71];
              *((void *)v72 + 4) = v84;
              *((void *)v72 + 5) = v85;
              *((void *)v72 + 6) = v66;
              *((void *)v72 + 7) = v68;
              *((void *)v72 + 8) = v90;
              if (v86 == v62)
              {
                unint64_t v4 = (uint64_t *)v91;
                uint64_t v5 = (uint64_t *)v92;
                goto LABEL_110;
              }
              uint64_t v73 = swift_allocObject();
              *(_OWORD *)(v73 + 16) = xmmword_220944FB0;
              *(void *)(v73 + 56) = MEMORY[0x263F8D6C8];
              *(void *)(v73 + 64) = MEMORY[0x263F8D750];
              *(void *)(v73 + 32) = v62;
              uint64_t v74 = sub_22093E590();
              uint64_t v76 = v75;
              if (!*(void *)(v13 + 16))
              {
                swift_bridgeObjectRelease();
                unint64_t v4 = (uint64_t *)v91;
                uint64_t v5 = (uint64_t *)v92;
                goto LABEL_103;
              }
              swift_bridgeObjectRetain();
              uint64_t v77 = sub_22081D290(v74, v76);
              if ((v78 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v4 = (uint64_t *)v91;
                uint64_t v5 = (uint64_t *)v92;
                goto LABEL_103;
              }
              uint64_t v79 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v77);
              uint64_t v84 = *v79;
              uint64_t v85 = v79[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v59 = v10;
              if (!*(void *)(v10 + 16)) {
                break;
              }
              swift_bridgeObjectRetain();
              uint64_t v60 = sub_22081D290(v74, v76);
              ++v62;
              if ((v80 & 1) == 0) {
                goto LABEL_106;
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v4 = (uint64_t *)v91;
            uint64_t v5 = (uint64_t *)v92;
          }
          else
          {
LABEL_106:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v4 = (uint64_t *)v91;
            uint64_t v5 = (uint64_t *)v92;
          }
          goto LABEL_107;
        }
LABEL_105:
        swift_bridgeObjectRelease();
LABEL_107:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22093EEA0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        sub_22093E6C0();
        unint64_t v2 = 0xD000000000000019;
        sub_220809E4C();
        swift_allocError();
        *(void *)uint64_t v82 = 0xD000000000000019;
        *(void *)(v82 + 8) = 0x8000000220940B80;
        *(unsigned char *)(v82 + 16) = 0;
        swift_willThrow();
        sub_22080B88C((uint64_t)v5, (unint64_t)v4);
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
LABEL_101:
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v19 = 0x8000000220940B60;
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000019;
    unint64_t v2 = 1;
LABEL_28:
    *(void *)(v17 + 8) = v19;
    *(unsigned char *)(v17 + 16) = 0;
    swift_willThrow();
    sub_22080B88C((uint64_t)v5, (unint64_t)v4);
    if (!v2) {
      return (char *)v2;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return (char *)v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208CFEEC(void *a1)
{
  return sub_220859C28(a1) & 1;
}

unint64_t sub_2208CFF08()
{
  unint64_t result = qword_267F194E0[0];
  if (!qword_267F194E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F194E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFrameIndex()
{
  return &type metadata for SFrameIndex;
}

uint64_t destroy for SFrameIndex.Column()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SFrameIndex.Column(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SFrameIndex.Column(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for SFrameIndex.Column(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for SFrameIndex.Column()
{
  return &type metadata for SFrameIndex.Column;
}

uint64_t sub_2208D00C8()
{
  uint64_t result = type metadata accessor for HashJoin.JoinItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HashJoin.JoinItem();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2208D01D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 & 0xF8 | 7;
  unint64_t v11 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 16;
  uint64_t v12 = *(void *)(v8 + 64) + 7;
  unint64_t v13 = (((((v12 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  int v14 = v9 | *(_DWORD *)(v5 + 80);
  if ((v14 & 0x1000F8) != 0 || ((v13 + (v11 & ~v10)) | 1) > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(v19 + 24);
    *(void *)(v18 + 24) = v20;
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    (**(void (***)(unint64_t, unint64_t))(v20 - 8))(v18, v19);
    uint64_t v21 = (void *)((v18 + 47) & 0xFFFFFFFFFFFFFFF8);
    BOOL v22 = (void *)((v19 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    v23[1] = v24[1];
    unint64_t v25 = ((unint64_t)v4 + v11) & v17;
    unint64_t v26 = ((unint64_t)a2 + v11) & v17;
    uint64_t v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v7);
    unint64_t v28 = (v12 + v25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v12 + v26) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = *(void *)(v29 + 24);
    *(void *)(v28 + 24) = v30;
    *(void *)(v28 + 32) = *(void *)(v29 + 32);
    (**(void (***)(unint64_t, unint64_t))(v30 - 8))(v28, v29);
    uint64_t v31 = (void *)((v28 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)((v29 + 47) & 0xFFFFFFFFFFFFFFF8);
    void *v31 = *v32;
    uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v33 = *v34;
    v33[1] = v34[1];
    *(unsigned char *)(v13 + v25) = *(unsigned char *)(v13 + v26);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2208D04C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + 7;
  __swift_destroy_boxed_opaque_existential_1Tm((v5 + a1) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  uint64_t v8 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  unint64_t v9 = (a1 + v8 + (((((v5 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8;
  (*(void (**)(unint64_t))(v6 + 8))(v9);
  __swift_destroy_boxed_opaque_existential_1Tm((*(void *)(v7 + 56) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208D05EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48) + 7;
  unint64_t v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v9 + 24);
  *(void *)(v8 + 24) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  (**(void (***)(unint64_t, unint64_t))(v10 - 8))(v8, v9);
  unint64_t v11 = (void *)((v9 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v11;
  unint64_t v13 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v14 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v13 = *v14;
  v13[1] = v14[1];
  unint64_t v15 = ((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v19 = v17 + 16;
  uint64_t v20 = *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  uint64_t v21 = v15 + v20 + 16;
  uint64_t v22 = (v21 + a1) & ~v20;
  uint64_t v23 = (v21 + a2) & ~v20;
  swift_bridgeObjectRetain();
  v18(v22, v23, v16);
  uint64_t v24 = *(void *)(v19 + 48) + 7;
  unint64_t v25 = (v24 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v24 + v23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)(v26 + 24);
  *(void *)(v25 + 24) = v27;
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  (**(void (***)(unint64_t, unint64_t))(v27 - 8))(v25, v26);
  unint64_t v28 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)((v26 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v28 = *v29;
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  unint64_t v32 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(unsigned char *)(v32 + v22) = *(unsigned char *)(v32 + v23);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2208D0824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40) + 7;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v8 = (void *)((((v7 + a1) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = (void *)((((v7 + a2) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v8 = *v9;
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  unint64_t v15 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v14 + 16;
  unint64_t v16 = (v15 + a1) & ~v14;
  unint64_t v17 = (v15 + a2) & ~v14;
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 40) + 7;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = (void *)((((v18 + v16) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((((v18 + v17) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v23 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(unsigned char *)(v23 + v16) = *(unsigned char *)(v23 + v17);
  return a1;
}

uint64_t sub_2208D09E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32) + 7;
  unint64_t v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v10 = *(_OWORD *)v9;
  long long v11 = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(_OWORD *)unint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v12 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v9 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  unint64_t v17 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v16 + 16;
  unint64_t v18 = (v17 + a1) & ~v16;
  unint64_t v19 = (v17 + a2) & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32) + 7;
  unint64_t v21 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v20 + v19) & 0xFFFFFFFFFFFFFFF8;
  long long v23 = *(_OWORD *)v22;
  long long v24 = *(_OWORD *)(v22 + 16);
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(_OWORD *)unint64_t v21 = v23;
  *(_OWORD *)(v21 + 16) = v24;
  unint64_t v25 = (void *)((v22 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)((v21 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v26 = *v25;
  *(_OWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (((((v20 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(unsigned char *)(v27 + v18) = *(unsigned char *)(v27 + v19);
  return a1;
}

uint64_t sub_2208D0B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24) + 7;
  unint64_t v8 = (v7 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v7 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v8);
  long long v10 = *(_OWORD *)v9;
  long long v11 = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(_OWORD *)unint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v12 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v9 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v17 = v16 + 40;
  uint64_t v18 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  unint64_t v19 = (((((v7 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v18 + 16;
  unint64_t v20 = (v19 + a1) & ~v18;
  unint64_t v21 = (v19 + a2) & ~v18;
  (*(void (**)(unint64_t, unint64_t))(v16 + 40))(v20, v21);
  uint64_t v22 = *(void *)(v17 + 24) + 7;
  unint64_t v23 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v22 + v21) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v23);
  long long v25 = *(_OWORD *)v24;
  long long v26 = *(_OWORD *)(v24 + 16);
  *(void *)(v23 + 32) = *(void *)(v24 + 32);
  *(_OWORD *)unint64_t v23 = v25;
  *(_OWORD *)(v23 + 16) = v26;
  unint64_t v27 = (void *)((v23 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v27 = *v28;
  unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRelease();
  unint64_t v31 = (((((v22 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  *(unsigned char *)(v31 + v20) = *(unsigned char *)(v31 + v21);
  return a1;
}

uint64_t sub_2208D0D30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (v11 <= v6) {
    unsigned int v12 = v6;
  }
  else {
    unsigned int v12 = v11;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  unint64_t v14 = ((((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v13 + 16;
  uint64_t v15 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
  int v16 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_31;
  }
  unint64_t v17 = (((((v15 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + (v14 & ~v13) + 17;
  char v18 = 8 * v17;
  if (v17 > 3) {
    goto LABEL_13;
  }
  unsigned int v21 = (v16 + ~(-1 << v18)) >> v18;
  if (v21 > 0xFFFE)
  {
    int v19 = *(_DWORD *)((char *)a1 + v17);
    if (v19) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v21 <= 0xFE)
    {
      if (!v21) {
        goto LABEL_31;
      }
LABEL_13:
      int v19 = *((unsigned __int8 *)a1 + v17);
      if (!*((unsigned char *)a1 + v17)) {
        goto LABEL_31;
      }
LABEL_21:
      int v22 = (v19 - 1) << v18;
      if (v17 <= 3)
      {
        int v23 = (((((v15 & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + (v14 & ~v13) + 17;
      }
      else
      {
        int v22 = 0;
        int v23 = 4;
      }
      switch(v23)
      {
        case 2:
          int v24 = *a1;
          break;
        case 3:
          int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v24 = *(_DWORD *)a1;
          break;
        default:
          int v24 = *(unsigned __int8 *)a1;
          break;
      }
      return v12 + (v24 | v22) + 1;
    }
    int v19 = *(unsigned __int16 *)((char *)a1 + v17);
    if (*(unsigned __int16 *)((char *)a1 + v17)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v6 >= v11)
  {
    if (v5 >= 0x7FFFFFFF) {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
    uint64_t v26 = (uint64_t)a1 + v10 + 7;
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v14) & ~v13;
    if (v9 >= 0x7FFFFFFF) {
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v25, v9, v7);
    }
    uint64_t v26 = v15 + v25;
  }
  unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v27 >= 0xFFFFFFFF) {
    LODWORD(v27) = -1;
  }
  return (v27 + 1);
}

void sub_2208D0FA8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v12 = *(void *)(v9 + 64);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  unint64_t v15 = ((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v16 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v17 = v12 + 7;
  unint64_t v18 = ((((((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  size_t v19 = (((v15 + v16) & ~v16) + v18) | 1;
  BOOL v20 = a3 >= v14;
  unsigned int v21 = a3 - v14;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      unsigned int v25 = (v21 + ~(-1 << (8 * v19))) >> (8 * v19);
      if (v25 > 0xFFFE)
      {
        int v22 = 4;
      }
      else if (v25 >= 0xFF)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v25 != 0;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v23 = ~v14 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      int v26 = v23 & ~(-1 << (8 * v19));
      bzero(a1, v19);
      if (v19 == 1)
      {
        *a1 = v26;
      }
      else
      {
        *(_WORD *)a1 = v26;
        a1[2] = BYTE2(v26);
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v19] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v24;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v19] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x2208D135CLL);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (!a2) {
        return;
      }
LABEL_28:
      if (v8 < v13)
      {
        a1 = (char *)((unint64_t)&a1[v15 + v16] & ~v16);
        if (v13 < a2)
        {
          if (!v18) {
            return;
          }
          int v27 = ~v13 + a2;
          unint64_t v28 = a1;
          size_t v29 = v18;
LABEL_35:
          bzero(v28, v29);
          *(_DWORD *)a1 = v27;
          return;
        }
        if (v10 >= 0x7FFFFFFF)
        {
          uint64_t v30 = *(void (**)(char *))(v9 + 56);
          v30(a1);
          return;
        }
        unint64_t v32 = (unint64_t)&a1[v17] & 0xFFFFFFFFFFFFFFF8;
        if ((a2 & 0x80000000) != 0)
        {
LABEL_53:
          *(_OWORD *)(v32 + 8) = 0u;
          *(_OWORD *)(v32 + 24) = 0u;
          *(void *)unint64_t v32 = a2 ^ 0x80000000;
          return;
        }
LABEL_55:
        *(void *)(v32 + 24) = a2 - 1;
        return;
      }
      if (v8 < a2)
      {
        if (((((((v11 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
          return;
        }
        int v27 = ~v8 + a2;
        unint64_t v28 = a1;
        size_t v29 = ((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
        goto LABEL_35;
      }
      if (v7 < 0x7FFFFFFF)
      {
        unint64_t v32 = (unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8;
        if ((a2 & 0x80000000) != 0) {
          goto LABEL_53;
        }
        goto LABEL_55;
      }
      unint64_t v31 = *(void (**)(char *))(v6 + 56);
      v31(a1);
      return;
  }
}

uint64_t type metadata accessor for HashJoin()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for HashJoin.JoinItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2208D13B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_2208D13BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2208D146C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(unint64_t, unint64_t))(v12 - 8))(v10, v11);
    unsigned int v13 = (void *)((v10 + 47) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = (void *)((v11 + 47) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v13 = *v14;
    unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v15 = *v16;
    v15[1] = v16[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2208D15F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 32) - 8) + 8;
  (*(void (**)(void))v3)();
  __swift_destroy_boxed_opaque_existential_1Tm((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2208D167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  unint64_t v10 = (void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v10 = *v11;
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2208D1778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v7, v8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2208D1838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2208D18E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (void *)((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  unsigned int v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2208D19A8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 32) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2208D1B04);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_2208D1B18(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 32) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v20 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if ((a2 & 0x80000000) != 0)
              {
                double result = 0.0;
                *(_OWORD *)(v20 + 8) = 0u;
                *(_OWORD *)(v20 + 24) = 0u;
                *(void *)unint64_t v20 = a2 ^ 0x80000000;
              }
              else
              {
                *(void *)(v20 + 24) = a2 - 1;
              }
            }
            else
            {
              size_t v19 = *(void (**)(void))(v6 + 56);
              v19();
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x2208D1D20);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2208D1D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a1;
  uint64_t v32 = a5;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v30 = a7;
  uint64_t v31 = a6;
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  int v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v11);
  int v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v18;
  int v27 = (void *)v18[1];
  uint64_t v28 = v19;
  uint64_t v22 = *v20;
  unsigned int v21 = (void *)v20[1];
  char v24 = *v23;
  (*(void (**)(char *))(v15 + 16))(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, a4);
  char v33 = v24;
  sub_2208D1F48((uint64_t)v17, (uint64_t)v13, v28, v27, v22, v21, a3, v32, a4, v31, v30);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v29, a3);
}

uint64_t sub_2208D1F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  Swift::String v23;
  Swift::Int value;
  Swift::Bool is_nil;
  Swift::String v26;
  Swift::Bool v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  Swift::Int_optional v63;
  Swift::Int_optional v64;

  uint64_t v51 = a6;
  unint64_t v44 = a8;
  uint64_t v45 = a5;
  uint64_t v53 = a2;
  uint64_t v49 = *(void *)(a9 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a1);
  uint64_t v47 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *v20;
  unsigned int v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 24);
  uint64_t v52 = v17;
  v21(&v54, v22, a10);
  uint64_t v60 = v54;
  char v61 = v55;
  uint64_t v62 = v56;
  uint64_t v50 = a3;
  v23._countAndFlagsBits = a3;
  v23._object = a4;
  uint64_t v63 = DataFrame.indexOfColumn(_:)(v23);
  value = v63.value;
  is_nil = v63.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (is_nil) {
    goto LABEL_5;
  }
  uint64_t v43 = value;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a11 + 24))(&v54, a9, a11);
  uint64_t v60 = v54;
  char v61 = v55;
  uint64_t v62 = v56;
  v26._countAndFlagsBits = v45;
  v26._object = v51;
  unint64_t v64 = DataFrame.indexOfColumn(_:)(v26);
  uint64_t v50 = v64.value;
  int v27 = v64.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_5:
    uint64_t v54 = 0;
    uint64_t v55 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093E6C0();
    sub_22093E6C0();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v19, v52, a7);
    uint64_t v29 = v44;
    sub_2208D2480((uint64_t)v19, v43, 1952867692, 0xE400000000000000, a7, a9, a7, a10, v44, a11, a10);
    uint64_t v30 = v49;
    uint64_t v31 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v47, v53, a9);
    uint64_t v54 = a7;
    uint64_t v55 = a9;
    uint64_t v56 = a10;
    char v57 = a11;
    uint64_t v32 = type metadata accessor for HashJoin();
    char v33 = v29 + *(int *)(v32 + 52);
    sub_2208D2480(v31, v50, 0x7468676972, 0xE500000000000000, a7, a9, a9, a10, v33, a11, a11);
    *(unsigned char *)(v29 + *(int *)(v32 + 56)) = v46;
    uint64_t v54 = a7;
    uint64_t v55 = a9;
    uint64_t v56 = a7;
    char v57 = a10;
    uint64_t v58 = a11;
    uint64_t v59 = a10;
    char v34 = (void *)(v29 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 68));
    uint64_t v35 = v34[3];
    char v36 = v34[4];
    __swift_project_boxed_opaque_existential_1(v34, v35);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
    uint64_t v54 = a7;
    uint64_t v55 = a9;
    uint64_t v56 = a9;
    char v57 = a10;
    uint64_t v58 = a11;
    uint64_t v59 = a11;
    uint64_t v38 = (void *)(v33 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 68));
    uint64_t v39 = v38[3];
    uint64_t v40 = v38[4];
    __swift_project_boxed_opaque_existential_1(v38, v39);
    if (v37 == (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 40))(v39, v40))
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v53, a9);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v52, a7);
    }
  }
  double result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208D2480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = *(void *)(a7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a9, a1, a7);
  *(void *)&long long v24 = a5;
  *((void *)&v24 + 1) = a6;
  uint64_t v25 = a7;
  uint64_t AssociatedTypeWitness = a8;
  uint64_t AssociatedConformanceWitness = a10;
  uint64_t v28 = a11;
  uint64_t v19 = (int *)type metadata accessor for HashJoin.JoinItem();
  *(void *)(a9 + v19[18]) = a2;
  (*(void (**)(uint64_t, uint64_t))(a11 + 56))(a7, a11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  sub_22093E940();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, a7);
  uint64_t result = sub_2208343B8(&v24, a9 + v19[17]);
  unsigned int v21 = (void *)(a9 + v19[19]);
  *unsigned int v21 = a3;
  v21[1] = a4;
  return result;
}

void sub_2208D2638(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  switch(*(unsigned char *)(v2 + *(int *)(a1 + 56)))
  {
    case 1:
      goto LABEL_3;
    case 2:
      goto LABEL_6;
    case 3:
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2208D4D4C;
      int v13 = (uint64_t (*)(uint64_t))sub_2208D6140;
      goto LABEL_8;
    default:
      (*(void (**)(uint64_t *__return_ptr, void))(*(void *)(a1 + 32) + 32))(&v19, *(void *)(a1 + 16));
      uint64_t v5 = v20;
      uint64_t v6 = v21;
      char v7 = v22;
      uint64_t v14 = sub_2208EE804(v20, v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v5, v6, v7);
      (*(void (**)(uint64_t *__return_ptr, void))(*(void *)(a1 + 40) + 32))(&v15, *(void *)(a1 + 24));
      uint64_t v8 = v16;
      uint64_t v9 = v17;
      char v10 = v18;
      uint64_t v11 = sub_2208EE804(v16, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v8, v9, v10);
      if (v11 >= v14)
      {
LABEL_6:
        uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2208D3C2C;
        int v13 = (uint64_t (*)(uint64_t))sub_2208D45E4;
LABEL_8:
        sub_2208D29B0(a1, v12, v13);
      }
      else
      {
LABEL_3:
        sub_2208D2848(a1, a2);
      }
      return;
  }
}

void sub_2208D2848(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = v2 + *(int *)(a1 + 52);
  uint64_t v6 = (void *)(v5 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 68));
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  if (swift_dynamicCastMetatype())
  {
    uint64_t v9 = MEMORY[0x263F8D6C8];
    uint64_t v10 = MEMORY[0x263F8D6D8];
  }
  else if (swift_dynamicCastMetatype())
  {
    uint64_t v9 = MEMORY[0x263F8D310];
    uint64_t v10 = MEMORY[0x263F8D320];
  }
  else if (swift_dynamicCastMetatype())
  {
    uint64_t v9 = MEMORY[0x263F8D538];
    uint64_t v10 = MEMORY[0x263F8D558];
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      sub_2208D34DC((void *)a1, a2);
      return;
    }
    uint64_t v9 = MEMORY[0x263F8D4F8];
    uint64_t v10 = MEMORY[0x263F8D508];
  }
  sub_2208D2B20(v9, (void *)a1, v9, v10, a2);
}

uint64_t sub_2208D29B0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v7 = (void *)(v3 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 68));
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  if (swift_dynamicCastMetatype())
  {
    uint64_t v10 = MEMORY[0x263F8D6C8];
    uint64_t v11 = MEMORY[0x263F8D6D8];
  }
  else if (swift_dynamicCastMetatype())
  {
    uint64_t v10 = MEMORY[0x263F8D310];
    uint64_t v11 = MEMORY[0x263F8D320];
  }
  else if (swift_dynamicCastMetatype())
  {
    uint64_t v10 = MEMORY[0x263F8D538];
    uint64_t v11 = MEMORY[0x263F8D558];
  }
  else
  {
    if (!swift_dynamicCastMetatype()) {
      return a3(a1);
    }
    uint64_t v10 = MEMORY[0x263F8D4F8];
    uint64_t v11 = MEMORY[0x263F8D508];
  }
  return a2(v10, a1, v10, v11);
}

double sub_2208D2B20@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  void (*v23)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  long long v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  char *v54;
  Swift::Int v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double result;
  _OWORD *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  int v73;
  char *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void (**v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  void (**v82)(char *, void *);
  void (**v83)(char *);
  char *v84;
  char *v85;
  void (**v86)(char *, uint64_t);
  void (**v87)(uint64_t, uint64_t);
  void (**v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (**v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  long long v104;
  uint64_t v105;
  long long v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  long long v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;

  uint64_t v93 = a4;
  uint64_t v81 = a5;
  unint64_t v91 = a2;
  uint64_t v7 = a2 - 1;
  uint64_t v87 = (void (**)(uint64_t, uint64_t))*(a2 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v84 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22093ED30();
  char v80 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v97 = (uint64_t)&v79 - v11;
  uint64_t v103 = a3;
  uint64_t v86 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v85 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v7[4];
  uint64_t v14 = v7[5];
  uint64_t v15 = v7[6];
  uint64_t v101 = v7[3];
  *(void *)&uint64_t v106 = v101;
  *((void *)&v106 + 1) = v13;
  uint64_t v107 = v13;
  long long v108 = v14;
  uint64_t v99 = v14;
  uint64_t v109 = v15;
  long long v110 = v15;
  uint64_t v16 = type metadata accessor for HashJoin.JoinItem();
  MEMORY[0x270FA5388](v16);
  char v18 = (char *)&v79 - v17;
  uint64_t v19 = *((int *)v7 + 15);
  uint64_t v94 = v5;
  uint64_t v102 = v20;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 16);
  uint64_t v100 = v22;
  v21(v18, v5 + v19);
  unsigned int v23 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 32);
  uint64_t v98 = v13;
  long long v24 = v15;
  v23(&v113, v13, v15);
  uint64_t v25 = v113;
  int v27 = v114;
  uint64_t v26 = v115;
  uint64_t v28 = v116;
  uint64_t v29 = v117;
  uint64_t v30 = v115;
  if (v117)
  {
    if (v117 == 1 && *(void *)(v115 + 16))
    {
      uint64_t v30 = *(void *)(v115 + 32);
    }
    else
    {
      sub_220883950(v115, v116, v117);
      if (v32) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = v31;
      }
    }
  }
  uint64_t v89 = v9;
  sub_220883950(v26, v28, v29);
  uint64_t v96 = v28;
  uint64_t v95 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v25;
  uint64_t v106 = v25;
  if (v34) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = v33;
  }
  uint64_t v107 = v27;
  long long v108 = v26;
  uint64_t v109 = v28;
  LOBYTE(v110) = v29;
  long long v111 = v30;
  unsigned __int8 v112 = v35;
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  char v78 = (void (**)(char *, char *, uint64_t))sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v77 = v24;
  char v36 = v24;
  uint64_t v76 = v24;
  uint64_t v37 = v99;
  uint64_t v38 = (uint64_t)v18;
  uint64_t v39 = v18;
  uint64_t v40 = v101;
  unsigned __int8 v41 = v98;
  uint64_t v92 = sub_2208D7E6C(v38, v42, (unint64_t)&v106, v101, v98, v98, v103, v92, v99, v76, v77, v93, v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v26, v96, v29);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v39, v100);
  uint64_t v43 = v94;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v37 + 24))(&v113, v40, v37);
  unint64_t v44 = v113;
  uint64_t v45 = v114;
  *(void *)&uint64_t v106 = v40;
  *((void *)&v106 + 1) = v41;
  uint64_t v107 = v40;
  long long v108 = v37;
  uint64_t v109 = v36;
  long long v110 = v37;
  uint64_t v46 = *(void *)(v43 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 72));
  uint64_t v104 = v44;
  long long v105 = v45;
  DataFrame.subscript.getter(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v90 = *((void *)&v106 + 1);
  uint64_t v98 = v106;
  uint64_t v102 = v107;
  uint64_t v47 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v37 + 32);
  v47(&v106, v40, v37);
  uint64_t v100 = v106;
  uint64_t v48 = v108;
  uint64_t v49 = v109;
  LOBYTE(v45) = v110;
  uint64_t v96 = sub_2208EE804(v108, v109, v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v48, v49, v45);
  sub_2208D6E38(v96, v91, (uint64_t)&v113);
  v47(&v106, v40, v37);
  uint64_t v100 = *((void *)&v106 + 1);
  uint64_t v101 = v106;
  uint64_t v50 = v108;
  uint64_t v99 = v107;
  uint64_t v51 = v109;
  uint64_t v52 = v110;
  uint64_t v53 = v108;
  uint64_t v54 = v85;
  if ((_BYTE)v110)
  {
    if (v110 == 1 && *(void *)(v108 + 16))
    {
      uint64_t v53 = *(void *)(v108 + 32);
    }
    else
    {
      sub_220883950(v108, v109, v110);
      if (v56) {
        uint64_t v53 = 0;
      }
      else {
        uint64_t v53 = v55;
      }
    }
  }
  sub_220883950(v50, v51, v52);
  if (v58) {
    uint64_t v59 = 0;
  }
  else {
    uint64_t v59 = v57;
  }
  uint64_t v96 = v59;
  uint64_t v60 = v90;
  if (v53 != v59)
  {
    uint64_t v95 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 6);
    uint64_t v88 = (void (**)(char *, uint64_t, uint64_t))(v86 + 4);
    ++v86;
    uint64_t v83 = (void (**)(char *))(v87 + 2);
    uint64_t v82 = (void (**)(char *, void *))(v87 + 1);
    uint64_t v87 = (void (**)(uint64_t, uint64_t))(v80 + 8);
    unint64_t v64 = v103;
    do
    {
      *(void *)&uint64_t v106 = v101;
      *((void *)&v106 + 1) = v100;
      uint64_t v107 = v99;
      long long v108 = v50;
      uint64_t v66 = v50;
      uint64_t v67 = v51;
      uint64_t v109 = v51;
      uint64_t v68 = v52;
      LOBYTE(v110) = v52;
      uint64_t v69 = DataFrame.Rows.index(after:)(v53);
      *(void *)&uint64_t v106 = v98;
      *((void *)&v106 + 1) = v60;
      uint64_t v107 = v102;
      type metadata accessor for Column();
      unint64_t v70 = v97;
      Column.subscript.getter(v53, v97);
      if ((*v95)(v70, 1, v64) == 1)
      {
        (*v87)(v70, v89);
      }
      else
      {
        (*v88)(v54, v70, v64);
        unint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
        MEMORY[0x223C699F0](&v106, v54, v92, v64, v71, v93);
        if (!(void)v106)
        {
          uint64_t v72 = v91;
          uint64_t v73 = *(unsigned __int8 *)(v94 + *((int *)v91 + 14));
          uint64_t v74 = v84;
          (*v83)(v84);
          if (v73 == 1)
          {
            (*v82)(v74, v72);
            uint64_t v60 = v90;
            uint64_t v51 = v67;
            goto LABEL_33;
          }
          uint64_t v75 = v74[*((int *)v72 + 14)];
          (*v82)(v74, v72);
          uint64_t v60 = v90;
          uint64_t v51 = v67;
          if (v75 == 3) {
LABEL_33:
          }
            sub_2208D75AC(v53, (char **)&v113, (uint64_t)v72);
          uint64_t v54 = v85;
          (*v86)(v85, v103);
          uint64_t v50 = v66;
          goto LABEL_26;
        }
        sub_2208D74F4(v53, v106, (char **)&v113, (uint64_t)v91);
        swift_bridgeObjectRelease();
        (*v86)(v54, v64);
        uint64_t v60 = v90;
      }
      uint64_t v51 = v67;
LABEL_26:
      uint64_t v53 = v69;
      uint64_t v65 = v69 == v96;
      uint64_t v52 = v68;
    }
    while (!v65);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v50, v51, v52);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v61 = v114;
  uint64_t result = *(double *)&v113;
  uint64_t v63 = v81;
  *uint64_t v81 = v113;
  *((void *)v63 + 2) = v61;
  return result;
}

uint64_t sub_2208D34DC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v27)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  Swift::Int v36;
  Swift::Int v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  int v54;
  int v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  void (**v59)(char *, void *);
  void (**v60)(char *);
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  long long v68;
  long long v69;
  uint64_t v70;
  long long v71;
  uint64_t v72;
  void v73[3];
  uint64_t v74;
  uint64_t v75;
  long long v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;

  char v57 = a2;
  uint64_t v62 = a1;
  uint64_t v3 = a1 - 1;
  uint64_t v56 = *(a1 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v65 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v3[4];
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  uint64_t v67 = v3[3];
  *(void *)&uint64_t v76 = v67;
  *((void *)&v76 + 1) = v5;
  *(void *)&uint64_t v77 = v5;
  *((void *)&v77 + 1) = v6;
  uint64_t v66 = v6;
  char v78 = v7;
  uint64_t v79 = v7;
  uint64_t v8 = type metadata accessor for HashJoin.JoinItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = *((int *)v3 + 15);
  uint64_t v63 = v2;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 16);
  uint64_t v60 = v14;
  v13(v11, v2 + v12);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 32))(&v76, v5, v7);
  uint64_t v59 = (void (**)(char *, void *))*((void *)&v76 + 1);
  unint64_t v64 = v76;
  uint64_t v15 = *((void *)&v77 + 1);
  uint64_t v58 = v77;
  uint64_t v16 = v78;
  char v17 = v79;
  if ((_BYTE)v79 && (v79 != 1 || !*(void *)(*((void *)&v77 + 1) + 16))) {
    sub_220883950(*((uint64_t *)&v77 + 1), v78, v79);
  }
  sub_220883950(v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v19 = v67;
  uint64_t v20 = v18;
  uint64_t v21 = v66;
  char v61 = sub_2208D9120((uint64_t)v11, v67, v5, v5, v20, v66, v7, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v15, v16, v17);
  (*(void (**)(char *, void (**)(char *)))(v9 + 8))(v11, v60);
  uint64_t v22 = v63;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 24))(&v68, v19, v21);
  uint64_t v23 = v68;
  *(void *)&uint64_t v76 = v19;
  *((void *)&v76 + 1) = v5;
  *(void *)&uint64_t v77 = v19;
  *((void *)&v77 + 1) = v21;
  char v78 = v7;
  uint64_t v79 = v21;
  uint64_t result = type metadata accessor for HashJoin.JoinItem();
  unint64_t v25 = *(void *)(v22 + *(int *)(result + 72));
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(void *)(v23 + 16))
  {
    sub_22080B5B8(v23 + 40 * v25 + 32, (uint64_t)v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v66;
    int v27 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v66 + 32);
    v27(&v76, v67, v66);
    unint64_t v64 = v76;
    uint64_t v28 = *((void *)&v77 + 1);
    uint64_t v29 = v78;
    uint64_t v30 = v79;
    uint64_t v31 = sub_2208EE804(*((uint64_t *)&v77 + 1), v78, v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v28, v29, v30);
    sub_2208D6E38(v31, v62, (uint64_t)&v71);
    v27(&v76, v67, v26);
    uint64_t v67 = v76;
    uint64_t v32 = v77;
    uint64_t v66 = *((void *)&v76 + 1);
    char v34 = *((void *)&v77 + 1);
    char v33 = v78;
    uint64_t v35 = v79;
    char v36 = *((void *)&v77 + 1);
    if ((_BYTE)v79)
    {
      if (v79 == 1 && *(void *)(*((void *)&v77 + 1) + 16))
      {
        char v36 = *(void *)(*((void *)&v77 + 1) + 32);
      }
      else
      {
        sub_220883950(*((uint64_t *)&v77 + 1), v78, v79);
        if (v38) {
          char v36 = 0;
        }
        else {
          char v36 = v37;
        }
      }
    }
    sub_220883950(v34, v33, v35);
    if (v40) {
      unsigned __int8 v41 = 0;
    }
    else {
      unsigned __int8 v41 = v39;
    }
    if (v36 == v41)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v34, v33, v35);
      uint64_t result = sub_22080B0D8((uint64_t)v73);
      unint64_t v42 = v72;
      uint64_t v43 = v57;
      *char v57 = v71;
      *((void *)v43 + 2) = v42;
      return result;
    }
    uint64_t v60 = (void (**)(char *))(v56 + 16);
    uint64_t v59 = (void (**)(char *, void *))(v56 + 8);
    unint64_t v64 = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      *(void *)&uint64_t v76 = v67;
      *((void *)&v76 + 1) = v66;
      *(void *)&uint64_t v77 = v32;
      *((void *)&v77 + 1) = v34;
      char v78 = v33;
      LOBYTE(v79) = v35;
      unint64_t v44 = DataFrame.Rows.index(after:)(v36);
      uint64_t v45 = v74;
      uint64_t v46 = v75;
      __swift_project_boxed_opaque_existential_1(v73, v74);
      (*(void (**)(long long *__return_ptr, Swift::Int, uint64_t))(*(void *)(v46 + 8) + 128))(&v76, v36, v45);
      if (*((void *)&v77 + 1))
      {
        uint64_t v47 = swift_dynamicCast();
        uint64_t v48 = v65;
        if (v47)
        {
          if (*((void *)&v69 + 1))
          {
            uint64_t v76 = v68;
            uint64_t v77 = v69;
            char v78 = v70;
            uint64_t v49 = v61;
            if (*(void *)(v61 + 16))
            {
              uint64_t v50 = sub_22081D2BC((uint64_t)&v76);
              if (v51)
              {
                uint64_t v52 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
                swift_bridgeObjectRetain();
                sub_2208D74F4(v36, v52, (char **)&v71, (uint64_t)v62);
                swift_bridgeObjectRelease();
LABEL_34:
                sub_220834CE8((uint64_t)&v76);
                goto LABEL_22;
              }
            }
            uint64_t v53 = v62;
            uint64_t v54 = *(unsigned __int8 *)(v63 + *((int *)v62 + 14));
            (*v60)(v48);
            if (v54 == 1)
            {
              (*v59)(v48, v53);
            }
            else
            {
              uint64_t v55 = v48[*((int *)v53 + 14)];
              (*v59)(v48, v53);
              if (v55 != 3) {
                goto LABEL_34;
              }
            }
            sub_2208D75AC(v36, (char **)&v71, (uint64_t)v53);
            goto LABEL_34;
          }
        }
        else
        {
          unint64_t v70 = 0;
          uint64_t v68 = 0u;
          uint64_t v69 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)&v76, qword_26AD40FF8);
        uint64_t v68 = 0u;
        uint64_t v69 = 0u;
        unint64_t v70 = 0;
      }
      sub_2208352E4((uint64_t)&v68, &qword_267F18658);
LABEL_22:
      char v36 = v44;
      if (v44 == v41) {
        goto LABEL_18;
      }
    }
  }
  __break(1u);
  return result;
}

double sub_2208D3C2C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  void (*v22)(long long *__return_ptr, uint64_t, uint64_t);
  long long v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  long long v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  char *v52;
  Swift::Int v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double result;
  _OWORD *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  int v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  void (**v79)(char *, void *);
  void (**v80)(char *);
  char *v81;
  char *v82;
  void (**v83)(char *, uint64_t);
  void (**v84)(uint64_t, uint64_t);
  void (**v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  unsigned int (**v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  long long v101;
  uint64_t v102;
  long long v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  long long v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;

  uint64_t v89 = a4;
  char v78 = a5;
  uint64_t v90 = a2;
  uint64_t v7 = a2 - 1;
  uint64_t v84 = (void (**)(uint64_t, uint64_t))*(a2 - 1);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_22093ED30();
  uint64_t v77 = *(void *)(v86 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v86);
  uint64_t v94 = (uint64_t)&v76 - v11;
  uint64_t v100 = a3;
  uint64_t v83 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t v16 = v7[5];
  uint64_t v15 = v7[6];
  *(void *)&uint64_t v103 = v14;
  *((void *)&v103 + 1) = v13;
  uint64_t v98 = v13;
  uint64_t v104 = v14;
  long long v105 = v16;
  uint64_t v93 = v15;
  uint64_t v106 = v15;
  uint64_t v107 = v16;
  uint64_t v17 = type metadata accessor for HashJoin.JoinItem();
  MEMORY[0x270FA5388](v17);
  uint64_t v99 = v18;
  uint64_t v19 = *(void (**)(void))(v18 + 16);
  uint64_t v96 = (uint64_t)&v76 - v20;
  unint64_t v97 = v21;
  v19();
  uint64_t v22 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 32);
  unint64_t v91 = v5;
  v22(&v110, v14, v16);
  uint64_t v23 = v110;
  long long v24 = v111;
  unint64_t v25 = v112;
  uint64_t v26 = v113;
  int v27 = v114;
  uint64_t v28 = v112;
  if (v114)
  {
    if (v114 == 1 && *(void *)(v112 + 16))
    {
      uint64_t v28 = *(void *)(v112 + 32);
    }
    else
    {
      sub_220883950(v112, v113, v114);
      if (v30) {
        uint64_t v28 = 0;
      }
      else {
        uint64_t v28 = v29;
      }
    }
  }
  uint64_t v81 = v9;
  sub_220883950(v25, v26, v27);
  uint64_t v103 = v23;
  uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*((void *)&v23 + 1);
  if (v32) {
    char v33 = 0;
  }
  else {
    char v33 = v31;
  }
  uint64_t v104 = v24;
  long long v105 = v25;
  uint64_t v106 = v26;
  LOBYTE(v107) = v27;
  long long v108 = v28;
  uint64_t v109 = v33;
  char v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  uint64_t v35 = (void (**)(char *, char *, uint64_t))sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v75 = v16;
  char v36 = v93;
  uint64_t v74 = v16;
  uint64_t v37 = v96;
  uint64_t v38 = v14;
  uint64_t v95 = v16;
  uint64_t v39 = v14;
  uint64_t v40 = v98;
  uint64_t v88 = sub_2208D7E6C(v96, v41, (unint64_t)&v103, v38, v98, v39, v100, v34, v74, v93, v75, v89, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v25, v26, v27);
  (*(void (**)(uint64_t, void (*)(long long *__return_ptr, uint64_t, uint64_t)))(v99 + 8))(v37, v97);
  unint64_t v42 = v91 + *((int *)v90 + 13);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 24))(&v110, v40, v36);
  uint64_t v43 = v110;
  unint64_t v44 = v111;
  *(void *)&uint64_t v103 = v39;
  *((void *)&v103 + 1) = v40;
  uint64_t v104 = v40;
  long long v105 = v95;
  uint64_t v106 = v36;
  uint64_t v107 = v36;
  uint64_t v45 = *(void *)(v42 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 72));
  uint64_t v101 = v43;
  uint64_t v102 = v44;
  DataFrame.subscript.getter(v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v87 = *((void *)&v103 + 1);
  uint64_t v95 = v103;
  uint64_t v99 = v104;
  unint64_t v97 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 32);
  v97(&v103, v40, v36);
  uint64_t v46 = v105;
  uint64_t v47 = v106;
  LOBYTE(v44) = v107;
  uint64_t v96 = sub_2208EE804(v105, v106, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v46, v47, v44);
  sub_2208D6E38(v96, v90, (uint64_t)&v110);
  v97(&v103, v40, v36);
  unint64_t v97 = (void (*)(long long *__return_ptr, uint64_t, uint64_t))*((void *)&v103 + 1);
  uint64_t v98 = v103;
  uint64_t v48 = v105;
  uint64_t v96 = v104;
  uint64_t v49 = v106;
  uint64_t v50 = v107;
  uint64_t v51 = v105;
  uint64_t v52 = v82;
  if ((_BYTE)v107)
  {
    if (v107 == 1 && *(void *)(v105 + 16))
    {
      uint64_t v51 = *(void *)(v105 + 32);
    }
    else
    {
      sub_220883950(v105, v106, v107);
      if (v54) {
        uint64_t v51 = 0;
      }
      else {
        uint64_t v51 = v53;
      }
    }
  }
  sub_220883950(v48, v49, v50);
  if (v56) {
    char v57 = 0;
  }
  else {
    char v57 = v55;
  }
  uint64_t v93 = v57;
  uint64_t v58 = v87;
  if (v51 != v57)
  {
    uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 6);
    uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v83 + 4);
    ++v83;
    char v80 = (void (**)(char *))(v84 + 2);
    uint64_t v79 = (void (**)(char *, void *))(v84 + 1);
    uint64_t v84 = (void (**)(uint64_t, uint64_t))(v77 + 8);
    uint64_t v62 = v100;
    do
    {
      *(void *)&uint64_t v103 = v98;
      *((void *)&v103 + 1) = v97;
      uint64_t v104 = v96;
      long long v105 = v48;
      unint64_t v64 = v48;
      uint64_t v65 = v49;
      uint64_t v106 = v49;
      uint64_t v66 = v50;
      LOBYTE(v107) = v50;
      uint64_t v67 = DataFrame.Rows.index(after:)(v51);
      *(void *)&uint64_t v103 = v95;
      *((void *)&v103 + 1) = v58;
      uint64_t v104 = v99;
      type metadata accessor for Column();
      uint64_t v68 = v94;
      Column.subscript.getter(v51, v94);
      if ((*v92)(v68, 1, v62) == 1)
      {
        (*v84)(v68, v86);
      }
      else
      {
        (*v85)(v52, v68, v62);
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
        MEMORY[0x223C699F0](&v103, v52, v88, v62, v69, v89);
        if (!(void)v103)
        {
          unint64_t v70 = v90;
          unint64_t v71 = *(unsigned __int8 *)(v91 + *((int *)v90 + 14));
          uint64_t v72 = v81;
          (*v80)(v81);
          if (v71 == 2)
          {
            (*v79)(v72, v70);
            uint64_t v58 = v87;
            uint64_t v49 = v65;
            goto LABEL_33;
          }
          uint64_t v73 = v72[*((int *)v70 + 14)];
          (*v79)(v72, v70);
          uint64_t v58 = v87;
          uint64_t v49 = v65;
          if (v73 == 3) {
LABEL_33:
          }
            sub_2208D7968(v51, (char **)&v110, (uint64_t)v70);
          uint64_t v52 = v82;
          (*v83)(v82, v100);
          uint64_t v48 = v64;
          goto LABEL_26;
        }
        sub_2208D78B8(v103, v51, (char **)&v110, (uint64_t)v90);
        swift_bridgeObjectRelease();
        (*v83)(v52, v62);
        uint64_t v58 = v87;
      }
      uint64_t v49 = v65;
LABEL_26:
      uint64_t v51 = v67;
      uint64_t v63 = v67 == v93;
      uint64_t v50 = v66;
    }
    while (!v63);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v48, v49, v50);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v111;
  uint64_t result = *(double *)&v110;
  char v61 = v78;
  *char v78 = v110;
  *((void *)v61 + 2) = v59;
  return result;
}

uint64_t sub_2208D45E4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v15)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(char *);
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  Swift::Int v37;
  Swift::Int v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  Swift::Int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  char v50;
  uint64_t v51;
  void *v52;
  int v53;
  int v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  void (**v58)(char *, void *);
  void (**v59)(char *);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void (*v63)(long long *__return_ptr, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  long long v67;
  long long v68;
  uint64_t v69;
  long long v70;
  uint64_t v71;
  void v72[3];
  uint64_t v73;
  uint64_t v74;
  long long v75;
  long long v76;
  uint64_t v77;
  uint64_t v78;

  uint64_t v56 = a2;
  char v61 = a1;
  uint64_t v55 = *(a1 - 1);
  MEMORY[0x270FA5388](a1);
  unint64_t v64 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v4[3];
  uint64_t v5 = v4[4];
  uint64_t v8 = v4[5];
  uint64_t v7 = v4[6];
  *(void *)&uint64_t v75 = v6;
  *((void *)&v75 + 1) = v5;
  uint64_t v66 = v5;
  *(void *)&uint64_t v76 = v6;
  *((void *)&v76 + 1) = v8;
  uint64_t v65 = v7;
  uint64_t v77 = v7;
  char v78 = v8;
  uint64_t v9 = type metadata accessor for HashJoin.JoinItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v10 + 16);
  uint64_t v59 = v14;
  v13((char *)&v55 - v11, v2);
  uint64_t v15 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 32);
  uint64_t v62 = v2;
  v15(&v75, v6, v8);
  uint64_t v58 = (void (**)(char *, void *))*((void *)&v75 + 1);
  uint64_t v63 = (void (*)(long long *__return_ptr, uint64_t, uint64_t))v75;
  uint64_t v16 = *((void *)&v76 + 1);
  char v57 = v76;
  uint64_t v17 = v77;
  uint64_t v18 = v78;
  if ((_BYTE)v78 && (v78 != 1 || !*(void *)(*((void *)&v76 + 1) + 16))) {
    sub_220883950(*((uint64_t *)&v76 + 1), v77, v78);
  }
  sub_220883950(v16, v17, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v20 = v66;
  uint64_t v21 = v19;
  uint64_t v22 = v65;
  uint64_t v60 = sub_2208D9120((uint64_t)v12, v6, v66, v6, v21, v8, v65, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v16, v17, v18);
  (*(void (**)(char *, void (**)(char *)))(v10 + 8))(v12, v59);
  uint64_t v23 = (void (**)(char *))(v62 + *((int *)v61 + 13));
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 24))(&v67, v20, v22);
  long long v24 = v67;
  *(void *)&uint64_t v75 = v6;
  *((void *)&v75 + 1) = v20;
  *(void *)&uint64_t v76 = v20;
  *((void *)&v76 + 1) = v8;
  uint64_t v77 = v22;
  char v78 = v22;
  uint64_t result = type metadata accessor for HashJoin.JoinItem();
  uint64_t v26 = *(unint64_t *)((char *)v23 + *(int *)(result + 72));
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v26 < *(void *)(v24 + 16))
  {
    sub_22080B5B8(v24 + 40 * v26 + 32, (uint64_t)v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v27 = v65;
    uint64_t v63 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 32);
    v63(&v75, v66, v65);
    uint64_t v28 = *((void *)&v76 + 1);
    uint64_t v29 = v77;
    uint64_t v30 = v78;
    uint64_t v31 = sub_2208EE804(*((uint64_t *)&v76 + 1), v77, v78);
    uint64_t v59 = v23;
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v28, v29, v30);
    sub_2208D6E38(v32, v61, (uint64_t)&v70);
    v63(&v75, v66, v27);
    uint64_t v66 = v75;
    char v33 = v76;
    uint64_t v65 = *((void *)&v75 + 1);
    uint64_t v35 = *((void *)&v76 + 1);
    char v34 = v77;
    char v36 = v78;
    uint64_t v37 = *((void *)&v76 + 1);
    if ((_BYTE)v78)
    {
      if (v78 == 1 && *(void *)(*((void *)&v76 + 1) + 16))
      {
        uint64_t v37 = *(void *)(*((void *)&v76 + 1) + 32);
      }
      else
      {
        sub_220883950(*((uint64_t *)&v76 + 1), v77, v78);
        if (v39) {
          uint64_t v37 = 0;
        }
        else {
          uint64_t v37 = v38;
        }
      }
    }
    sub_220883950(v35, v34, v36);
    if (v41) {
      unint64_t v42 = 0;
    }
    else {
      unint64_t v42 = v40;
    }
    if (v37 == v42)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22080B6B4(v35, v34, v36);
      uint64_t result = sub_22080B0D8((uint64_t)v72);
      uint64_t v43 = v71;
      unint64_t v44 = v56;
      *uint64_t v56 = v70;
      *((void *)v44 + 2) = v43;
      return result;
    }
    uint64_t v59 = (void (**)(char *))(v55 + 16);
    uint64_t v58 = (void (**)(char *, void *))(v55 + 8);
    uint64_t v63 = (void (*)(long long *__return_ptr, uint64_t, uint64_t))(MEMORY[0x263F8EE58] + 8);
    while (1)
    {
      *(void *)&uint64_t v75 = v66;
      *((void *)&v75 + 1) = v65;
      *(void *)&uint64_t v76 = v33;
      *((void *)&v76 + 1) = v35;
      uint64_t v77 = v34;
      LOBYTE(v78) = v36;
      uint64_t v45 = DataFrame.Rows.index(after:)(v37);
      uint64_t v46 = v73;
      uint64_t v47 = v74;
      __swift_project_boxed_opaque_existential_1(v72, v73);
      (*(void (**)(long long *__return_ptr, Swift::Int, uint64_t))(*(void *)(v47 + 8) + 128))(&v75, v37, v46);
      if (*((void *)&v76 + 1))
      {
        uint64_t v48 = swift_dynamicCast();
        uint64_t v49 = v64;
        if (v48)
        {
          if (*((void *)&v68 + 1))
          {
            uint64_t v75 = v67;
            uint64_t v76 = v68;
            uint64_t v77 = v69;
            if (*(void *)(v60 + 16))
            {
              sub_22081D2BC((uint64_t)&v75);
              if (v50)
              {
                uint64_t v51 = swift_bridgeObjectRetain();
                sub_2208D78B8(v51, v37, (char **)&v70, (uint64_t)v61);
                swift_bridgeObjectRelease();
LABEL_34:
                sub_220834CE8((uint64_t)&v75);
                goto LABEL_22;
              }
            }
            uint64_t v52 = v61;
            uint64_t v53 = *(unsigned __int8 *)(v62 + *((int *)v61 + 14));
            (*v59)(v49);
            if (v53 == 2)
            {
              (*v58)(v49, v52);
            }
            else
            {
              uint64_t v54 = v49[*((int *)v52 + 14)];
              (*v58)(v49, v52);
              if (v54 != 3) {
                goto LABEL_34;
              }
            }
            sub_2208D7968(v37, (char **)&v70, (uint64_t)v52);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v69 = 0;
          uint64_t v67 = 0u;
          uint64_t v68 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)&v75, qword_26AD40FF8);
        uint64_t v67 = 0u;
        uint64_t v68 = 0u;
        uint64_t v69 = 0;
      }
      sub_2208352E4((uint64_t)&v67, &qword_267F18658);
LABEL_22:
      uint64_t v37 = v45;
      if (v45 == v42) {
        goto LABEL_18;
      }
    }
  }
  __break(1u);
  return result;
}

double sub_2208D4D4C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  void (*v27)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::Int v76;
  char *v77;
  uint64_t v78;
  Swift::Int v79;
  char v80;
  void (**v81)(uint64_t, uint64_t);
  char v82;
  void (**v83)(uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  Swift::Int v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  unsigned int (**v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void *v134;
  int v135;
  char *v136;
  int v137;
  uint64_t v138;
  double result;
  _OWORD *v140;
  uint64_t v141;
  void (**v142)(char *, char *, uint64_t);
  uint64_t v143;
  _OWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (**v153)(char *, void *);
  void (**v154)(char *);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  void (**v163)(uint64_t, uint64_t);
  void (**v164)(char *, uint64_t);
  void (**v165)(char *, uint64_t, uint64_t);
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  void *v170;
  unsigned int (**v171)(uint64_t, uint64_t, uint64_t);
  void (**v172)(char *);
  void (**v173)(uint64_t, uint64_t);
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char v201;
  long long v202;
  uint64_t v203;
  long long v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;

  uint64_t v5 = v4;
  uint64_t v182 = a3;
  unint64_t v144 = a4;
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  *(void *)&uint64_t v204 = v8;
  *((void *)&v204 + 1) = v7;
  v205 = v8;
  uint64_t v206 = v9;
  v207 = v10;
  uint64_t v208 = v9;
  unint64_t v157 = type metadata accessor for HashJoin.JoinItem();
  uint64_t v152 = *(void *)(v157 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v157);
  uint64_t v151 = (uint64_t)&v141 - v13;
  uint64_t v14 = a1;
  long long v170 = a1;
  uint64_t v147 = *(a1 - 1);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v158 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  int v161 = (char *)&v141 - v17;
  uint64_t v180 = sub_22093ED30();
  uint64_t v146 = *(void *)(v180 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v180);
  uint64_t v168 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  long long v167 = (char *)&v141 - v21;
  unint64_t v184 = a2;
  uint64_t v145 = *(void *)(a2 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v169 = (char *)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v175 = (char *)&v141 - v24;
  *(void *)&uint64_t v204 = v8;
  *((void *)&v204 + 1) = v7;
  uint64_t v162 = v7;
  v205 = v7;
  uint64_t v206 = v9;
  v207 = v10;
  uint64_t v208 = v10;
  uint64_t v25 = v10;
  uint64_t v155 = type metadata accessor for HashJoin.JoinItem();
  uint64_t v181 = *(char **)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  unint64_t v179 = (uint64_t)&v141 - v26;
  int v27 = *(void (**)(char **__return_ptr, uint64_t, uint64_t))(v9 + 32);
  uint64_t v28 = v5;
  uint64_t v183 = v5;
  uint64_t v159 = v8;
  uint64_t v156 = v9;
  char v149 = v9 + 32;
  uint64_t v148 = v27;
  v27((char **)&v204, v8, v9);
  uint64_t v29 = v206;
  uint64_t v30 = v207;
  uint64_t v31 = v208;
  uint64_t v178 = (char *)sub_2208EE804(v206, v207, v208);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v29, v30, v31);
  uint64_t v32 = v28 + *((int *)v14 + 13);
  uint64_t v160 = v25;
  char v33 = *(char **)(v25 + 32);
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v33)(&v188, v162, v25);
  char v34 = v191;
  uint64_t v35 = v192;
  char v36 = v193;
  uint64_t v37 = sub_2208EE804(v191, v192, v193);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v34, v35, v36);
  if (v37 <= (uint64_t)v178) {
    uint64_t v38 = (uint64_t)v178;
  }
  else {
    uint64_t v38 = v37;
  }
  sub_2208D6E38(v38, v170, (uint64_t)&v202);
  uint64_t v150 = v32;
  uint64_t v178 = v33;
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v33)(&v188, v162, v160);
  uint64_t v39 = v188;
  uint64_t v40 = v189;
  unsigned __int8 v41 = v190;
  unint64_t v42 = v191;
  uint64_t v43 = v192;
  unint64_t v44 = v193;
  uint64_t v45 = v191;
  if (v193)
  {
    if (v193 == 1 && *(void *)(v191 + 16))
    {
      uint64_t v45 = *(void *)(v191 + 32);
    }
    else
    {
      sub_220883950(v191, v192, v193);
      if (v47) {
        uint64_t v45 = 0;
      }
      else {
        uint64_t v45 = v46;
      }
    }
  }
  sub_220883950(v42, v43, v44);
  *(void *)&uint64_t v204 = v39;
  *((void *)&v204 + 1) = v40;
  if (v49) {
    uint64_t v50 = 0;
  }
  else {
    uint64_t v50 = v48;
  }
  v205 = (uint64_t)v41;
  uint64_t v206 = v42;
  v207 = v43;
  LOBYTE(v208) = v44;
  uint64_t v209 = v45;
  uint64_t v210 = v50;
  uint64_t v51 = (char *)sub_220833CD8(&v204);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v42, v43, v44);
  (*((void (**)(uint64_t, uint64_t, uint64_t))v181 + 2))(v179, v150, v155);
  ((void (*)(char **__return_ptr, uint64_t, uint64_t))v178)(&v196, v162, v160);
  uint64_t v52 = v196;
  uint64_t v53 = v197;
  uint64_t v54 = v199;
  uint64_t v178 = v198;
  uint64_t v55 = (uint64_t)v200;
  uint64_t v56 = v201;
  char v57 = v199;
  uint64_t v58 = v184;
  uint64_t v59 = v170;
  if (v201)
  {
    if (v201 == 1 && *(void *)(v199 + 16))
    {
      uint64_t v54 = *(void *)(v199 + 32);
    }
    else
    {
      sub_220883950(v199, (uint64_t)v200, v201);
      if (v61) {
        uint64_t v54 = 0;
      }
      else {
        uint64_t v54 = v60;
      }
    }
  }
  unint64_t v177 = v57;
  sub_220883950(v57, v55, v56);
  uint64_t v188 = v52;
  uint64_t v189 = v53;
  if (v63) {
    unint64_t v64 = 0;
  }
  else {
    unint64_t v64 = v62;
  }
  v190 = v178;
  unint64_t v191 = v57;
  v192 = v55;
  uint64_t v193 = v56;
  uint64_t v194 = v54;
  v195 = v64;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  unint64_t v176 = v52;
  uint64_t v66 = v65;
  unint64_t v142 = (void (**)(char *, char *, uint64_t))sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v67 = v156;
  uint64_t v68 = v179;
  uint64_t v143 = v66;
  uint64_t v166 = sub_2208D7E6C(v179, v69, (unint64_t)&v188, v159, v162, v162, v58, v66, v156, v160, v160, v182, v142);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v177, v55, v56);
  (*((void (**)(uint64_t, uint64_t))v181 + 1))(v68, v155);
  unint64_t v70 = v183;
  unint64_t v71 = v159;
  (*(void (**)(char **__return_ptr, uint64_t, uint64_t))(v67 + 24))(&v188, v159, v67);
  uint64_t v72 = *(void *)(v70 + *(int *)(v157 + 72));
  uint64_t v185 = v188;
  uint64_t v186 = v189;
  uint64_t v187 = v190;
  DataFrame.subscript.getter(v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v174 = v196;
  unint64_t v179 = v197;
  uint64_t v178 = v198;
  v148(&v188, v71, v67);
  uint64_t v181 = v188;
  unint64_t v177 = v189;
  unint64_t v176 = v190;
  uint64_t v73 = v191;
  uint64_t v74 = v192;
  uint64_t v75 = v193;
  uint64_t v76 = v191;
  uint64_t v77 = v161;
  char v78 = (uint64_t)v167;
  if (v193)
  {
    if (v193 == 1 && *(void *)(v191 + 16))
    {
      uint64_t v76 = *(void *)(v191 + 32);
    }
    else
    {
      sub_220883950(v191, v192, v193);
      if (v80) {
        uint64_t v76 = 0;
      }
      else {
        uint64_t v76 = v79;
      }
    }
  }
  sub_220883950(v73, v74, v75);
  if (v82) {
    uint64_t v83 = 0;
  }
  else {
    uint64_t v83 = v81;
  }
  uint64_t v173 = v83;
  if ((void (**)(uint64_t, uint64_t))v76 != v83)
  {
    v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
    long long v165 = (void (**)(char *, uint64_t, uint64_t))(v145 + 32);
    long long v164 = (void (**)(char *, uint64_t))(v145 + 8);
    BOOL v154 = (void (**)(char *))(v147 + 16);
    uint64_t v153 = (void (**)(char *, void *))(v147 + 8);
    uint64_t v163 = (void (**)(uint64_t, uint64_t))(v146 + 8);
    uint64_t v172 = (void (**)(char *))v74;
    while (1)
    {
      uint64_t v188 = v181;
      uint64_t v189 = v177;
      v190 = v176;
      uint64_t v92 = v73;
      unint64_t v191 = v73;
      v192 = v74;
      uint64_t v93 = v75;
      uint64_t v193 = v75;
      uint64_t v94 = DataFrame.Rows.index(after:)(v76);
      uint64_t v188 = v174;
      uint64_t v189 = v179;
      v190 = v178;
      type metadata accessor for Column();
      Column.subscript.getter(v76, v78);
      if ((*v171)(v78, 1, v58) != 1) {
        break;
      }
      (*v163)(v78, v180);
LABEL_41:
      uint64_t v73 = v92;
      uint64_t v76 = v94;
      unint64_t v91 = v94 == (void)v173;
      uint64_t v75 = v93;
      uint64_t v74 = (uint64_t)v172;
      if (v91) {
        goto LABEL_35;
      }
    }
    uint64_t v95 = v175;
    (*v165)(v175, v78, v58);
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
    MEMORY[0x223C699F0](&v188, v95, v166, v58, v96, v182);
    unint64_t v97 = v188;
    if (v188)
    {
      sub_2208D74F4(v76, (uint64_t)v188, (char **)&v202, (uint64_t)v59);
      if (*((void *)v51 + 2))
      {
        uint64_t v98 = *((void *)v97 + 2);
        if (v98)
        {
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v98; ++i)
          {
            uint64_t v101 = *(void *)&v97[8 * i + 32];
            uint64_t v102 = sub_22093F420();
            uint64_t v103 = -1 << v51[32];
            uint64_t v104 = v102 & ~v103;
            if ((*(void *)&v51[((v104 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v104))
            {
              long long v105 = *((void *)v51 + 6);
              if (*(void *)(v105 + 8 * v104) == v101)
              {
LABEL_47:
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v188 = v51;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_2208294F0();
                }
                sub_2208D8F98(v104);
                uint64_t v51 = v188;
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v106 = ~v103;
                while (1)
                {
                  uint64_t v104 = (v104 + 1) & v106;
                  if (((*(void *)&v51[((v104 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v104) & 1) == 0) {
                    break;
                  }
                  if (*(void *)(v105 + 8 * v104) == v101) {
                    goto LABEL_47;
                  }
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v58 = v184;
          uint64_t v59 = v170;
        }
        uint64_t v77 = v161;
      }
      (*v164)(v175, v58);
      swift_bridgeObjectRelease();
      char v78 = (uint64_t)v167;
      goto LABEL_41;
    }
    uint64_t v107 = *(unsigned __int8 *)(v183 + *((int *)v59 + 14));
    (*v154)(v77);
    if (v107 == 1)
    {
      (*v153)(v77, v59);
      char v78 = (uint64_t)v167;
    }
    else
    {
      long long v108 = v77[*((int *)v59 + 14)];
      (*v153)(v77, v59);
      char v78 = (uint64_t)v167;
      if (v108 != 3)
      {
LABEL_64:
        (*v164)(v175, v58);
        goto LABEL_41;
      }
    }
    sub_2208D75AC(v76, (char **)&v202, (uint64_t)v59);
    goto LABEL_64;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v73, v74, v75);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v151, v183, v157);
  v148(&v196, v159, v156);
  uint64_t v84 = v196;
  uint64_t v85 = v197;
  uint64_t v87 = v198;
  uint64_t v86 = v199;
  uint64_t v88 = v200;
  uint64_t v89 = v201;
  uint64_t v90 = v199;
  if (v201)
  {
    if (v201 == 1 && *(void *)(v199 + 16))
    {
      uint64_t v90 = *(void *)(v199 + 32);
    }
    else
    {
      sub_220883950(v199, (uint64_t)v200, v201);
      if (v110) {
        uint64_t v90 = 0;
      }
      else {
        uint64_t v90 = v109;
      }
    }
  }
  sub_220883950(v86, (uint64_t)v88, v89);
  uint64_t v188 = v84;
  uint64_t v189 = v85;
  if (v112) {
    long long v113 = 0;
  }
  else {
    long long v113 = v111;
  }
  v190 = v87;
  unint64_t v191 = v86;
  v192 = (uint64_t)v88;
  uint64_t v193 = v89;
  uint64_t v194 = v90;
  v195 = v113;
  uint64_t v114 = v160;
  uint64_t v181 = v88;
  long long v115 = v151;
  long long v116 = v162;
  unint64_t v177 = sub_2208D7E6C(v151, v111, (unint64_t)&v188, v159, v162, v159, v58, v143, v156, v160, v156, v182, v142);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v86, (uint64_t)v181, v89);
  (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v115, v157);
  unsigned __int8 v117 = v150;
  (*(void (**)(char **__return_ptr, uint64_t, uint64_t))(v114 + 24))(&v188, v116, v114);
  long long v118 = *(void *)(v117 + *(int *)(v155 + 72));
  uint64_t v185 = v188;
  uint64_t v186 = v189;
  uint64_t v187 = v190;
  DataFrame.subscript.getter(v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned __int8 v120 = v196;
  uint64_t v119 = v197;
  uint64_t v121 = v198;
  uint64_t v122 = swift_bridgeObjectRetain();
  uint64_t v123 = (char *)sub_2208379C8(v122);
  swift_bridgeObjectRelease();
  uint64_t v188 = v123;
  sub_220838094(&v188);
  swift_bridgeObjectRelease();
  long long v167 = v188;
  uint64_t v124 = *((void *)v188 + 2);
  uint64_t v125 = (uint64_t)v168;
  if (v124)
  {
    unint64_t v126 = (uint64_t *)(v167 + 32);
    uint64_t v181 = (char *)type metadata accessor for Column();
    uint64_t v127 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
    uint64_t v175 = (char *)(v145 + 32);
    uint64_t v174 = (char *)(v145 + 8);
    uint64_t v172 = (void (**)(char *))(v147 + 16);
    v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 8);
    uint64_t v173 = (void (**)(uint64_t, uint64_t))(v146 + 8);
    unint64_t v176 = v121;
    while (1)
    {
      while (1)
      {
        uint64_t v129 = *v126++;
        unint64_t v128 = v129;
        uint64_t v188 = v120;
        uint64_t v189 = v119;
        v190 = v121;
        Column.subscript.getter(v129, v125);
        uint64_t v130 = v184;
        if ((*v127)(v125, 1, v184) != 1) {
          break;
        }
        (*v173)(v125, v180);
        if (!--v124) {
          goto LABEL_83;
        }
      }
      unint64_t v131 = v119;
      int64_t v132 = v169;
      (*(void (**)(char *, uint64_t, uint64_t))v175)(v169, v125, v130);
      uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B18);
      MEMORY[0x223C699F0](&v188, v132, v177, v130, v133, v182);
      if (!v188) {
        break;
      }
      sub_2208D78B8((uint64_t)v188, v128, (char **)&v202, (uint64_t)v170);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))v174)(v132, v130);
      uint64_t v125 = (uint64_t)v168;
      uint64_t v119 = v131;
LABEL_82:
      uint64_t v121 = v176;
      if (!--v124) {
        goto LABEL_83;
      }
    }
    uint64_t v134 = v170;
    uint64_t v135 = *(unsigned __int8 *)(v183 + *((int *)v170 + 14));
    uint64_t v136 = v158;
    (*v172)(v158);
    if (v135 == 2)
    {
      ((void (*)(char *, void *))*v171)(v136, v134);
      uint64_t v119 = v131;
    }
    else
    {
      unint64_t v137 = v136[*((int *)v134 + 14)];
      ((void (*)(char *, void *))*v171)(v136, v134);
      uint64_t v119 = v131;
      if (v137 != 3)
      {
LABEL_81:
        (*(void (**)(char *, uint64_t))v174)(v169, v184);
        uint64_t v125 = (uint64_t)v168;
        goto LABEL_82;
      }
    }
    sub_2208D7968(v128, (char **)&v202, (uint64_t)v134);
    goto LABEL_81;
  }
LABEL_83:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v138 = v203;
  uint64_t result = *(double *)&v202;
  unint64_t v140 = v144;
  *unint64_t v144 = v202;
  *((void *)v140 + 2) = v138;
  return result;
}

void *sub_2208D6140@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v23)(long long *__return_ptr, uint64_t, uint64_t);
  long long v24;
  long long v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *result;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  Swift::Int v53;
  char v54;
  void (*v55)(long long *__return_ptr, uint64_t);
  char v56;
  void (*v57)(long long *__return_ptr, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  unint64_t j;
  int64_t v72;
  unint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  _OWORD *v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  Swift::Int v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char *v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  uint64_t v111;
  _OWORD *v112;
  uint64_t v113;
  void (**v114)(char *, uint64_t);
  void (**v115)(char *);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(long long *__return_ptr, uint64_t);
  void (**v128)(char *);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  void v133[4];
  long long v134;
  long long v135;
  uint64_t v136;
  long long v137;
  long long v138;
  uint64_t v139;
  long long v140;
  long long v141;
  uint64_t v142;
  uint64_t v143;
  void v144[3];
  uint64_t v145;
  uint64_t v146;
  long long v147;
  uint64_t v148;
  long long v149;
  long long v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  unsigned __int8 v112 = a2;
  long long v113 = *(void *)(a1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  int64_t v132 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)MEMORY[0x270FA5388](v4);
  uint64_t v124 = (char *)&v111 - v7;
  uint64_t v9 = v6[3];
  uint64_t v11 = v6[4];
  uint64_t v10 = v6[5];
  *(void *)&char v149 = v6[2];
  uint64_t v8 = v149;
  *((void *)&v149 + 1) = v9;
  *(void *)&uint64_t v150 = v9;
  *((void *)&v150 + 1) = v11;
  unsigned __int8 v120 = v9;
  uint64_t v121 = v10;
  uint64_t v151 = v10;
  uint64_t v152 = v10;
  uint64_t v119 = type metadata accessor for HashJoin.JoinItem();
  unint64_t v131 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v129 = (uint64_t)&v111 - v12;
  uint64_t v130 = v2;
  uint64_t v13 = *(void (***)(char *, uint64_t))(v11 + 32);
  unsigned __int8 v117 = v8;
  long long v118 = v11;
  uint64_t v114 = v13;
  long long v115 = (void (**)(char *))(v11 + 32);
  ((void (*)(long long *__return_ptr, uint64_t, uint64_t))v13)(&v149, v8, v11);
  uint64_t v14 = *((void *)&v150 + 1);
  uint64_t v15 = v151;
  char v16 = v152;
  unint64_t v128 = (void (**)(char *))sub_2208EE804(*((uint64_t *)&v150 + 1), v151, v152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v14, v15, v16);
  uint64_t v17 = v2 + *(int *)(a1 + 52);
  uint64_t v127 = *(void (**)(long long *__return_ptr, uint64_t))(v121 + 32);
  v127(&v140, v9);
  unint64_t v126 = v140;
  uint64_t v18 = *((void *)&v141 + 1);
  uint64_t v19 = v142;
  char v20 = v143;
  uint64_t v21 = sub_2208EE804(*((uint64_t *)&v141 + 1), v142, v143);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v18, v19, v20);
  if (v21 <= (uint64_t)v128) {
    uint64_t v22 = (uint64_t)v128;
  }
  else {
    uint64_t v22 = v21;
  }
  uint64_t v23 = (void (*)(long long *__return_ptr, uint64_t, uint64_t))v127;
  unint64_t v126 = a1;
  sub_2208D6E38(v22, (void *)a1, (uint64_t)&v147);
  long long v116 = v17;
  v23(&v140, v120, v121);
  uint64_t v24 = v140;
  uint64_t v25 = v141;
  uint64_t v26 = v142;
  int v27 = v143;
  uint64_t v28 = *((void *)&v141 + 1);
  if ((_BYTE)v143)
  {
    if (v143 == 1 && *(void *)(*((void *)&v141 + 1) + 16))
    {
      uint64_t v28 = *(void *)(*((void *)&v141 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v141 + 1), v142, v143);
      if (v30) {
        uint64_t v28 = 0;
      }
      else {
        uint64_t v28 = v29;
      }
    }
  }
  sub_220883950(*((uint64_t *)&v25 + 1), v26, v27);
  char v149 = v24;
  if (v32) {
    char v33 = 0;
  }
  else {
    char v33 = v31;
  }
  uint64_t v150 = v25;
  uint64_t v151 = v26;
  LOBYTE(v152) = v27;
  uint64_t v153 = v28;
  BOOL v154 = v33;
  char v34 = sub_220833CD8(&v149);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(*((uint64_t *)&v25 + 1), v26, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v129, v116, v119);
  v23(&v140, v120, v121);
  uint64_t v127 = (void (*)(long long *__return_ptr, uint64_t))*((void *)&v140 + 1);
  unint64_t v128 = (void (**)(char *))v140;
  uint64_t v35 = *((void *)&v141 + 1);
  uint64_t v125 = v141;
  char v36 = v142;
  uint64_t v37 = v143;
  if ((_BYTE)v143 && (v143 != 1 || !*(void *)(*((void *)&v141 + 1) + 16))) {
    sub_220883950(*((uint64_t *)&v141 + 1), v142, v143);
  }
  sub_220883950(v35, v36, v37);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BD0);
  uint64_t v123 = v36;
  uint64_t v39 = v38;
  sub_2208502C4(&qword_267F18BD8, &qword_267F18BD0);
  uint64_t v40 = v129;
  unsigned __int8 v41 = v117;
  unint64_t v42 = v118;
  unint64_t v44 = v120;
  uint64_t v43 = v121;
  uint64_t v122 = sub_2208D9120(v129, v117, v120, v120, v39, v118, v121, v121);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v35, v123, v37);
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v40, v119);
  uint64_t v45 = v130;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v42 + 24))(&v137, v41, v42);
  uint64_t v46 = v137;
  *(void *)&unint64_t v140 = v41;
  *((void *)&v140 + 1) = v44;
  *(void *)&uint64_t v141 = v41;
  *((void *)&v141 + 1) = v42;
  unint64_t v142 = v43;
  uint64_t v143 = v42;
  uint64_t result = (void *)type metadata accessor for HashJoin.JoinItem();
  uint64_t v48 = *(void *)(v45 + *((int *)result + 18));
  if ((v48 & 0x8000000000000000) != 0) {
    goto LABEL_100;
  }
  if (v48 >= *(void *)(v46 + 16))
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  sub_22080B5B8(v46 + 40 * v48 + 32, (uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(long long *__return_ptr, uint64_t, uint64_t))v114)(&v140, v117, v118);
  unint64_t v131 = v140;
  uint64_t v49 = *((void *)&v141 + 1);
  unint64_t v128 = (void (**)(char *))v141;
  uint64_t v129 = *((void *)&v140 + 1);
  uint64_t v50 = v142;
  uint64_t v51 = v143;
  uint64_t v52 = *((void *)&v141 + 1);
  if ((_BYTE)v143)
  {
    if (v143 == 1 && *(void *)(*((void *)&v141 + 1) + 16))
    {
      uint64_t v52 = *(void *)(*((void *)&v141 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v141 + 1), v142, v143);
      if (v54) {
        uint64_t v52 = 0;
      }
      else {
        uint64_t v52 = v53;
      }
    }
  }
  sub_220883950(v49, v50, v51);
  if (v56) {
    char v57 = 0;
  }
  else {
    char v57 = v55;
  }
  uint64_t v127 = v57;
  if ((void (*)(long long *__return_ptr, uint64_t))v52 != v57)
  {
    uint64_t v114 = (void (**)(char *, uint64_t))(v113 + 8);
    long long v115 = (void (**)(char *))(v113 + 16);
    uint64_t v123 = MEMORY[0x263F8EE58] + 8;
    do
    {
      *(void *)&unint64_t v140 = v131;
      *((void *)&v140 + 1) = v129;
      *(void *)&uint64_t v141 = v128;
      *((void *)&v141 + 1) = v49;
      uint64_t v88 = v49;
      uint64_t v89 = v50;
      unint64_t v142 = v50;
      uint64_t v90 = v51;
      LOBYTE(v143) = v51;
      unint64_t v91 = DataFrame.Rows.index(after:)(v52);
      uint64_t v93 = v145;
      uint64_t v92 = v146;
      __swift_project_boxed_opaque_existential_1(v144, v145);
      (*(void (**)(long long *__return_ptr, Swift::Int, uint64_t))(*(void *)(v92 + 8) + 128))(&v140, v52, v93);
      if (*((void *)&v141 + 1))
      {
        uint64_t v94 = swift_dynamicCast();
        uint64_t v95 = v124;
        if (v94)
        {
          if (*((void *)&v138 + 1))
          {
            unint64_t v140 = v137;
            uint64_t v141 = v138;
            unint64_t v142 = v139;
            if (*(void *)(v122 + 16))
            {
              uint64_t v96 = sub_22081D2BC((uint64_t)&v140);
              if (v97)
              {
                uint64_t v98 = *(void *)(*(void *)(v122 + 56) + 8 * v96);
                swift_bridgeObjectRetain();
                sub_2208D74F4(v52, v98, (char **)&v147, v126);
                if (*(void *)(v34 + 16))
                {
                  uint64_t v99 = *(void *)(v98 + 16);
                  if (v99)
                  {
                    uint64_t v125 = v98 + 32;
                    long long v111 = v98;
                    swift_bridgeObjectRetain();
                    for (uint64_t i = 0; i != v99; ++i)
                    {
                      uint64_t v102 = *(void *)(v125 + 8 * i);
                      uint64_t v103 = sub_22093F420();
                      uint64_t v104 = -1 << *(unsigned char *)(v34 + 32);
                      long long v105 = v103 & ~v104;
                      if ((*(void *)(v34 + 56 + ((v105 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v105))
                      {
                        uint64_t v106 = *(void *)(v34 + 48);
                        if (*(void *)(v106 + 8 * v105) == v102)
                        {
LABEL_80:
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)&unint64_t v137 = v34;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                            sub_2208294F0();
                          }
                          sub_2208D8F98(v105);
                          char v34 = v137;
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          uint64_t v107 = ~v104;
                          while (1)
                          {
                            long long v105 = (v105 + 1) & v107;
                            if (((*(void *)(v34 + 56 + ((v105 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v105) & 1) == 0) {
                              break;
                            }
                            if (*(void *)(v106 + 8 * v105) == v102) {
                              goto LABEL_80;
                            }
                          }
                        }
                      }
                    }
                    swift_bridgeObjectRelease();
                  }
                }
                sub_220834CE8((uint64_t)&v140);
                swift_bridgeObjectRelease();
                goto LABEL_71;
              }
            }
            long long v108 = v126;
            uint64_t v109 = *(unsigned __int8 *)(v130 + *(int *)(v126 + 56));
            (*v115)(v95);
            if (v109 == 1)
            {
              (*v114)(v95, v108);
              goto LABEL_94;
            }
            long long v110 = v95[*(int *)(v108 + 56)];
            (*v114)(v95, v108);
            if (v110 == 3) {
LABEL_94:
            }
              sub_2208D75AC(v52, (char **)&v147, v108);
            sub_220834CE8((uint64_t)&v140);
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v139 = 0;
          unint64_t v137 = 0u;
          unint64_t v138 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)&v140, qword_26AD40FF8);
        unint64_t v137 = 0u;
        unint64_t v138 = 0u;
        uint64_t v139 = 0;
      }
      sub_2208352E4((uint64_t)&v137, &qword_267F18658);
LABEL_71:
      uint64_t v50 = v89;
      uint64_t v49 = v88;
      uint64_t v52 = v91;
      uint64_t v87 = v91 == (void)v127;
      uint64_t v51 = v90;
    }
    while (!v87);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22080B6B4(v49, v50, v51);
  swift_bridgeObjectRelease();
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F195E8);
  sub_2208502C4(&qword_267F195F0, &qword_267F195E8);
  uint64_t v59 = v120;
  uint64_t v60 = v58;
  char v61 = v121;
  uint64_t v129 = sub_2208D9120(v130, v117, v120, v117, v60, v118, v121, v118);
  uint64_t v62 = v116;
  uint64_t result = (*(void *(**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 24))(&v137, v59, v61);
  uint64_t v63 = *(void *)(v62 + *(int *)(v119 + 72));
  if ((v63 & 0x8000000000000000) != 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v63 < *(void *)(v137 + 16))
  {
    sub_22080B5B8(v137 + 40 * v63 + 32, (uint64_t)&v140);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v64 = 0;
    uint64_t v65 = v34 + 56;
    uint64_t v66 = 1 << *(unsigned char *)(v34 + 32);
    uint64_t v67 = -1;
    if (v66 < 64) {
      uint64_t v67 = ~(-1 << v66);
    }
    uint64_t v68 = v67 & *(void *)(v34 + 56);
    uint64_t v69 = (unint64_t)(v66 + 63) >> 6;
    uint64_t v127 = (void (*)(long long *__return_ptr, uint64_t))(v113 + 8);
    unint64_t v128 = (void (**)(char *))(v113 + 16);
    unint64_t v131 = MEMORY[0x263F8EE58] + 8;
    if (v68) {
      goto LABEL_39;
    }
LABEL_40:
    uint64_t v72 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    if (v72 < v69)
    {
      uint64_t v73 = *(void *)(v65 + 8 * v72);
      ++v64;
      if (v73) {
        goto LABEL_53;
      }
      unint64_t v64 = v72 + 1;
      if (v72 + 1 >= v69) {
        goto LABEL_67;
      }
      uint64_t v73 = *(void *)(v65 + 8 * v64);
      if (v73) {
        goto LABEL_53;
      }
      unint64_t v64 = v72 + 2;
      if (v72 + 2 >= v69) {
        goto LABEL_67;
      }
      uint64_t v73 = *(void *)(v65 + 8 * v64);
      if (v73)
      {
LABEL_53:
        uint64_t v68 = (v73 - 1) & v73;
        for (unint64_t j = __clz(__rbit64(v73)) + (v64 << 6); ; unint64_t j = v70 | (v64 << 6))
        {
          uint64_t v75 = *(void *)(*(void *)(v34 + 48) + 8 * j);
          uint64_t v77 = *((void *)&v141 + 1);
          uint64_t v76 = v142;
          __swift_project_boxed_opaque_existential_1(&v140, *((uint64_t *)&v141 + 1));
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v76 + 8) + 128))(v133, v75, v77);
          if (!v133[3])
          {
            sub_2208352E4((uint64_t)v133, qword_26AD40FF8);
            uint64_t v134 = 0u;
            uint64_t v135 = 0u;
            uint64_t v136 = 0;
            goto LABEL_38;
          }
          char v78 = swift_dynamicCast();
          uint64_t v79 = v132;
          if ((v78 & 1) == 0)
          {
            uint64_t v136 = 0;
            uint64_t v134 = 0u;
            uint64_t v135 = 0u;
LABEL_38:
            uint64_t result = (void *)sub_2208352E4((uint64_t)&v134, &qword_267F18658);
            if (!v68) {
              goto LABEL_40;
            }
            goto LABEL_39;
          }
          if (!*((void *)&v135 + 1)) {
            goto LABEL_38;
          }
          unint64_t v137 = v134;
          unint64_t v138 = v135;
          uint64_t v139 = v136;
          if (*(void *)(v129 + 16))
          {
            sub_22081D2BC((uint64_t)&v137);
            if (v80)
            {
              uint64_t v81 = swift_bridgeObjectRetain();
              sub_2208D78B8(v81, v75, (char **)&v147, v126);
              swift_bridgeObjectRelease();
              goto LABEL_65;
            }
          }
          uint64_t v82 = v126;
          uint64_t v83 = *(unsigned __int8 *)(v130 + *(int *)(v126 + 56));
          (*v128)(v79);
          if (v83 == 2)
          {
            (*(void (**)(char *, uint64_t))v127)(v79, v82);
          }
          else
          {
            uint64_t v84 = v79[*(int *)(v82 + 56)];
            (*(void (**)(char *, uint64_t))v127)(v79, v82);
            if (v84 != 3) {
              goto LABEL_65;
            }
          }
          sub_2208D7968(v75, (char **)&v147, v82);
LABEL_65:
          uint64_t result = (void *)sub_220834CE8((uint64_t)&v137);
          if (!v68) {
            goto LABEL_40;
          }
LABEL_39:
          unint64_t v70 = __clz(__rbit64(v68));
          v68 &= v68 - 1;
        }
      }
      uint64_t v74 = v72 + 3;
      if (v74 < v69)
      {
        uint64_t v73 = *(void *)(v65 + 8 * v74);
        if (v73)
        {
          unint64_t v64 = v74;
          goto LABEL_53;
        }
        while (1)
        {
          unint64_t v64 = v74 + 1;
          if (__OFADD__(v74, 1)) {
            goto LABEL_99;
          }
          if (v64 >= v69) {
            break;
          }
          uint64_t v73 = *(void *)(v65 + 8 * v64);
          ++v74;
          if (v73) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_67:
    swift_release();
    swift_bridgeObjectRelease();
    sub_22080B0D8((uint64_t)&v140);
    uint64_t result = (void *)sub_22080B0D8((uint64_t)v144);
    uint64_t v85 = v148;
    uint64_t v86 = v112;
    *unsigned __int8 v112 = v147;
    *((void *)v86 + 2) = v85;
    return result;
  }
LABEL_103:
  __break(1u);
  return result;
}

void sub_2208D6E28(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_2208D6E38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void (*v85)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  long long v104;
  unint64_t v105;

  uint64_t v4 = v3;
  *(void *)&uint64_t v104 = MEMORY[0x263F8EE78];
  *((void *)&v104 + 1) = MEMORY[0x263F8EE78];
  long long v105 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[2];
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v8, v7);
  uint64_t v87 = v8;
  uint64_t v89 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = MEMORY[0x223C69FE0](v9, AssociatedTypeWitness);
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v83 = a3;
  if (v11)
  {
    uint64_t v85 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 24);
    uint64_t v13 = a2[3];
    uint64_t v14 = a2[5];
    uint64_t v98 = v8;
    uint64_t v99 = v13;
    uint64_t v82 = v13;
    uint64_t v100 = v8;
    uint64_t v101 = v7;
    char v80 = a2;
    uint64_t v81 = v14;
    uint64_t v102 = v14;
    uint64_t v103 = v7;
    unint64_t v15 = 0;
    uint64_t v84 = type metadata accessor for HashJoin.JoinItem();
    uint64_t v16 = *(int *)(v84 + 72);
    uint64_t v17 = 32;
    while (1)
    {
      v85(&v95, v87, v89);
      uint64_t v18 = v95;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v15 >= *(void *)(v18 + 16)) {
        break;
      }
      sub_22080B5B8(v18 + v17, (uint64_t)&v98);
      swift_bridgeObjectRelease();
      uint64_t v20 = v101;
      uint64_t v19 = v102;
      __swift_project_boxed_opaque_existential_1(&v98, v101);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v19 + 8) + 88))(&v91, v20);
      uint64_t v22 = v93;
      uint64_t v21 = v94;
      __swift_project_boxed_opaque_existential_1(&v91, v93);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v21 + 32))(&v95, a1, v22, v21);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
      if (v15 == *(void *)(v4 + v16))
      {
        DataFrame.append(column:)((uint64_t)&v95);
      }
      else
      {
        uint64_t v23 = (uint64_t *)(v4 + *(int *)(v84 + 76));
        uint64_t v24 = v23[1];
        unint64_t v91 = *v23;
        uint64_t v92 = v24;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        uint64_t v26 = v101;
        uint64_t v25 = v102;
        __swift_project_boxed_opaque_existential_1(&v98, v101);
        (*(void (**)(uint64_t))(*(void *)(v25 + 8) + 8))(v26);
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        uint64_t v27 = v91;
        uint64_t v28 = v92;
        uint64_t v30 = v96;
        uint64_t v29 = v97;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v95, v96);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 8) + 16))(v27, v28, v30);
        DataFrame.append(column:)((uint64_t)&v95);
        uint64_t v32 = v101;
        uint64_t v31 = v102;
        __swift_project_boxed_opaque_existential_1(&v98, v101);
        uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(v31 + 8) + 8))(v32);
        uint64_t v35 = v34;
        uint64_t v36 = v96;
        uint64_t v37 = v97;
        __swift_project_boxed_opaque_existential_1(&v95, v96);
        v38._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v36);
        uint64_t v40 = v39;
        v41._countAndFlagsBits = v33;
        v41._object = v35;
        v38._object = v40;
        DataFrame.addAlias(_:forColumn:)(v41, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v15;
      sub_22080B0D8((uint64_t)&v95);
      sub_22080B0D8((uint64_t)&v98);
      v17 += 40;
      if (v11 == v15)
      {
        uint64_t v43 = v81;
        uint64_t v42 = v82;
        unint64_t v44 = v80;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v44 = a2;
  uint64_t v43 = a2[5];
  uint64_t v42 = v44[3];
LABEL_11:
  uint64_t v45 = v4 + *((int *)v44 + 13);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v48 = MEMORY[0x223C69FE0](v46, v47);
  uint64_t result = swift_bridgeObjectRelease();
  if (v48 < 0) {
    goto LABEL_22;
  }
  if (v48)
  {
    uint64_t v98 = v87;
    uint64_t v99 = v42;
    uint64_t v100 = v42;
    uint64_t v101 = v89;
    uint64_t v102 = v43;
    uint64_t v103 = v43;
    uint64_t result = type metadata accessor for HashJoin.JoinItem();
    unint64_t v49 = 0;
    uint64_t v50 = *(int *)(result + 72);
    uint64_t v88 = result;
    uint64_t v51 = 32;
    uint64_t v86 = v50;
    do
    {
      if (v49 != *(void *)(v45 + v50))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v43 + 24))(&v95, v42, v43);
        uint64_t v52 = v95;
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v49 >= *(void *)(v52 + 16)) {
          goto LABEL_20;
        }
        sub_22080B5B8(v52 + v51, (uint64_t)&v98);
        swift_bridgeObjectRelease();
        uint64_t v54 = v101;
        uint64_t v53 = v102;
        __swift_project_boxed_opaque_existential_1(&v98, v101);
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v53 + 8) + 88))(&v91, v54);
        uint64_t v55 = v42;
        uint64_t v56 = v93;
        uint64_t v57 = v94;
        __swift_project_boxed_opaque_existential_1(&v91, v93);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v57 + 32))(&v95, a1, v56, v57);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v91);
        uint64_t v58 = (uint64_t *)(v45 + *(int *)(v88 + 76));
        uint64_t v59 = v58[1];
        unint64_t v91 = *v58;
        uint64_t v92 = v59;
        swift_bridgeObjectRetain();
        sub_22093E6C0();
        uint64_t v61 = v101;
        uint64_t v60 = v102;
        __swift_project_boxed_opaque_existential_1(&v98, v101);
        (*(void (**)(uint64_t))(*(void *)(v60 + 8) + 8))(v61);
        sub_22093E6C0();
        swift_bridgeObjectRelease();
        uint64_t v62 = v91;
        uint64_t v63 = v92;
        uint64_t v64 = v48;
        uint64_t v65 = v43;
        uint64_t v66 = v96;
        uint64_t v67 = v97;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v95, v96);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 + 8) + 16))(v62, v63, v66);
        DataFrame.append(column:)((uint64_t)&v95);
        uint64_t v69 = v101;
        uint64_t v68 = v102;
        __swift_project_boxed_opaque_existential_1(&v98, v101);
        uint64_t v70 = (*(uint64_t (**)(uint64_t))(*(void *)(v68 + 8) + 8))(v69);
        uint64_t v72 = v71;
        uint64_t v74 = v96;
        uint64_t v73 = v97;
        __swift_project_boxed_opaque_existential_1(&v95, v96);
        v75._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)(v73 + 8) + 8))(v74);
        uint64_t v77 = v76;
        v78._countAndFlagsBits = v70;
        v78._object = v72;
        v75._object = v77;
        DataFrame.addAlias(_:forColumn:)(v78, v75);
        uint64_t v42 = v55;
        uint64_t v50 = v86;
        swift_bridgeObjectRelease();
        uint64_t v43 = v65;
        uint64_t v48 = v64;
        swift_bridgeObjectRelease();
        sub_22080B0D8((uint64_t)&v95);
        uint64_t result = sub_22080B0D8((uint64_t)&v98);
      }
      ++v49;
      v51 += 40;
    }
    while (v48 != v49);
  }
  unint64_t v79 = v105;
  *(_OWORD *)uint64_t v83 = v104;
  *(void *)(v83 + 16) = v79;
  return result;
}

uint64_t sub_2208D74F4(uint64_t result, uint64_t a2, char **a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v10 = *(void *)(a2 + 8 * i + 32);
      sub_2208D86C8(v8, a3, a4);
      sub_2208D88BC(v10, (uint64_t *)a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2208D75AC(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 32);
  uint64_t v28 = *(void *)(a3 + 16);
  (*(void (**)(void *__return_ptr))(v5 + 24))(v31);
  uint64_t v6 = v31[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v8 = *a2;
  uint64_t v26 = v3;
  uint64_t v27 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    *a2 = v8;
    do
    {
      sub_22080B5B8(v6 + v9 + 32, (uint64_t)v31);
      uint64_t v11 = *a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v11 = sub_22080AB34((uint64_t)v11);
        *a2 = v11;
      }
      if (v10 >= *((void *)v11 + 2))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      ++v10;
      uint64_t v13 = v32;
      uint64_t v8 = v33;
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(v31, v32);
      v35[3] = v13;
      v35[4] = *((void *)v8 + 1);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
      uint64_t v16 = *(void *)&v11[v9 + 56];
      uint64_t v17 = *(void *)&v11[v9 + 64];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v11[v9 + 32], v16);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 56))(a1, v35, v16, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      sub_22080B0D8((uint64_t)v31);
      v9 += 40;
    }
    while (v7 != v10);
    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v5 = v27;
LABEL_10:
    uint64_t v18 = v3 + *(int *)(a3 + 52);
    uint64_t v19 = *(void *)(a3 + 40);
    uint64_t v8 = *(char **)(a3 + 24);
    uint64_t v6 = (*(uint64_t (**)(char *, uint64_t))(v19 + 56))(v8, v19);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v21 = MEMORY[0x223C69FE0](v6, AssociatedTypeWitness);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 0x8000000000000000) == 0) {
      break;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t v8 = sub_22080AB34((uint64_t)v8);
  }
  if (v21)
  {
    v31[0] = v28;
    v31[1] = v8;
    v31[2] = v8;
    uint64_t v32 = v5;
    uint64_t v33 = (char *)v19;
    uint64_t v34 = v19;
    uint64_t v6 = *(void *)(v18 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 72));
    uint64_t v23 = (uint64_t)*a2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_22080AB34(v23);
      uint64_t v23 = result;
    }
    *a2 = (char *)v23;
    do
    {
      if (v6)
      {
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_23;
        }
        if (v7 >= *(void *)(v23 + 16)) {
          goto LABEL_24;
        }
        uint64_t v24 = v23 + 32 + 40 * v7;
        uint64_t v8 = *(char **)(v24 + 24);
        uint64_t v25 = *(void *)(v24 + 32);
        __swift_mutable_project_boxed_opaque_existential_1(v24, (uint64_t)v8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 16))(v8, v25);
        ++v7;
      }
      --v6;
      --v21;
    }
    while (v21);
    *a2 = (char *)v23;
  }
  return result;
}

uint64_t sub_2208D78B8(uint64_t result, uint64_t a2, char **a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v10 = *(void *)(v8 + 8 * i + 32);
      sub_2208D86C8(v10, a3, a4);
      sub_2208D88BC(a2, (uint64_t *)a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2208D7968(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = (uint64_t)v3 + *(int *)(a3 + 52);
  unint64_t v8 = *(void *)(a3 + 40);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unint64_t **)(v8 + 24);
  unint64_t v11 = *(void *)(a3 + 24);
  ((void (*)(_OWORD *__return_ptr, unint64_t, unint64_t))v10)(v50, v11, v8);
  uint64_t v12 = *(void *)&v50[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(a3 + 16);
  uint64_t v14 = *(uint64_t **)(a3 + 32);
  unint64_t v51 = v13;
  unint64_t v52 = v11;
  uint64_t v40 = v11;
  uint64_t v41 = v8;
  unint64_t v53 = v11;
  uint64_t v54 = (uint64_t)v14;
  unint64_t v55 = v8;
  unint64_t v56 = v8;
  uint64_t v45 = *(int *)(type metadata accessor for HashJoin.JoinItem() + 72);
  unint64_t v15 = *(void *)(v7 + v45);
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
  if (v15 >= *(void *)(v12 + 16)) {
    goto LABEL_33;
  }
  uint64_t v37 = v10;
  uint64_t v42 = (uint64_t *)v7;
  sub_22080B5B8(v12 + 40 * v15 + 32, (uint64_t)v57);
  swift_bridgeObjectRelease();
  ((void (*)(unint64_t *__return_ptr, unint64_t, uint64_t *))v14[3])(&v51, v13, v14);
  uint64_t v7 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  unint64_t v44 = v9;
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v16 = *a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_36;
  }
LABEL_5:
  unint64_t v51 = v13;
  unint64_t v52 = v40;
  unint64_t v53 = v13;
  uint64_t v54 = (uint64_t)v14;
  unint64_t v55 = v41;
  unint64_t v56 = (unint64_t)v14;
  uint64_t v17 = 0;
  unint64_t v8 = 0;
  uint64_t v10 = (unint64_t *)*(int *)(type metadata accessor for HashJoin.JoinItem() + 72);
  do
  {
    uint64_t v20 = *(unint64_t *)((char *)v10 + (void)v4);
    *a2 = v16;
    unint64_t v21 = *((void *)v16 + 2);
    if (v8 == v20)
    {
      if (v8 >= v21) {
        goto LABEL_31;
      }
      uint64_t v22 = &v16[v17];
      uint64_t v24 = v58;
      uint64_t v23 = v59;
      uint64_t v25 = __swift_project_boxed_opaque_existential_1(v57, v58);
      uint64_t v54 = v24;
      unint64_t v26 = *(void *)(v23 + 8);
      uint64_t v9 = v44;
      unint64_t v55 = v26;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, v25, v24);
      uint64_t v28 = *((void *)v22 + 7);
      uint64_t v29 = *((void *)v22 + 8);
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v22 + 32), v28);
      (*(void (**)(uint64_t, unint64_t *, uint64_t, uint64_t))(v29 + 56))(a1, &v51, v28, v29);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v51);
      uint64_t v16 = *a2;
    }
    else
    {
      if (v8 >= v21)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v18 = *(void *)&v16[v17 + 56];
      uint64_t v19 = *(void *)&v16[v17 + 64];
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v16[v17 + 32], v18);
      (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      *a2 = v16;
    }
    ++v8;
    v17 += 40;
  }
  while (v9 != v8);
LABEL_12:
  uint64_t v10 = &v51;
  ((void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v37)(&v51, v40, v41);
  uint64_t v9 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v9 + 16);
  uint64_t v7 = (uint64_t)*a2;
  if (swift_isUniquelyReferenced_nonNull_native()) {
    goto LABEL_13;
  }
LABEL_34:
  uint64_t v7 = (uint64_t)sub_22080AB34(v7);
LABEL_13:
  unint64_t v13 = 0;
  *a2 = (char *)v7;
  uint64_t v16 = (char *)(v9 + 32);
  uint64_t v4 = &v47;
  uint64_t v14 = (uint64_t *)(v10 + 1);
LABEL_14:
  uint64_t v10 = (unint64_t *)v42;
  if (v13 == v8)
  {
LABEL_15:
    unint64_t v13 = v8;
    memset(v50, 0, sizeof(v50));
    goto LABEL_19;
  }
  while (1)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= *(void *)(v9 + 16)) {
      goto LABEL_29;
    }
    uint64_t v7 = v13 + 1;
    sub_22080B5B8((uint64_t)&v16[40 * v13], (uint64_t)&v47);
    *(void *)&v50[0] = v13;
    *(_OWORD *)((char *)v50 + 8) = v47;
    *(_OWORD *)((char *)&v50[1] + 8) = v48;
    *((void *)&v50[2] + 1) = v49;
    ++v13;
LABEL_19:
    sub_2208B8A44((uint64_t)v50, (uint64_t)&v51);
    if (!v55) {
      break;
    }
    long long v30 = *((_OWORD *)v14 + 1);
    v50[0] = *(_OWORD *)v14;
    v50[1] = v30;
    *(void *)&uint64_t v50[2] = v14[4];
    if (v51 != *(uint64_t *)((char *)v42 + v45))
    {
      uint64_t v7 = (uint64_t)*a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = (char *)v7;
      uint64_t v41 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v7 = (uint64_t)sub_22080AB34(v7);
        *a2 = (char *)v7;
      }
      uint64_t v9 = v44;
      if (v44 < *(void *)(v7 + 16))
      {
        uint64_t v32 = v7 + 40 * v44;
        uint64_t v40 = v32 + 32;
        uint64_t v33 = *((void *)&v50[1] + 1);
        uint64_t v37 = *(unint64_t **)&v50[2];
        Swift::String v38 = __swift_project_boxed_opaque_existential_1(v50, *((uint64_t *)&v50[1] + 1));
        *(void *)&long long v48 = v33;
        *((void *)&v48 + 1) = v37[1];
        uint64_t v34 = __swift_allocate_boxed_opaque_existential_1(&v46);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v34, v38, v33);
        uint64_t v35 = *(void *)(v32 + 56);
        uint64_t v39 = *(void *)(v32 + 64);
        uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(v32 + 32, v35);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v39 + 56))(a1, &v46, v35);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v46);
        sub_22080B0D8((uint64_t)v50);
        ++v44;
        uint64_t v9 = v41;
        goto LABEL_14;
      }
      __break(1u);
LABEL_36:
      uint64_t v16 = sub_22080AB34((uint64_t)v16);
      goto LABEL_5;
    }
    sub_22080B0D8((uint64_t)v50);
    if (v13 == v8) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  return sub_22080B0D8((uint64_t)v57);
}

uint64_t sub_2208D7E6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (**a13)(char *, char *, uint64_t))
{
  uint64_t v66 = a8;
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  unint64_t v70 = a3;
  uint64_t v75 = a10;
  uint64_t v72 = a9;
  uint64_t v73 = a12;
  uint64_t v68 = a13;
  uint64_t v74 = sub_22093ED30();
  uint64_t v62 = *(void *)(v74 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v74);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v61 = *(void (**)(char *, unint64_t, uint64_t))(a7 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v60 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v71 = (char *)&v59 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v64 = (char *)&v59 - v25;
  uint64_t v69 = *(void (***)(char *, unint64_t, uint64_t))(a8 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v67 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v29 = (char *)&v59 - v28;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a11 + 24))(v87, a6, a11);
  uint64_t v31 = v87[0];
  uint64_t v30 = v87[1];
  uint64_t v32 = v87[2];
  uint64_t v81 = v76;
  uint64_t v82 = v77;
  uint64_t v83 = a6;
  uint64_t v84 = v72;
  uint64_t v85 = v75;
  uint64_t v86 = a11;
  unint64_t v33 = *(void *)(a1 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 72));
  uint64_t v78 = v31;
  uint64_t v79 = v30;
  uint64_t v80 = v32;
  DataFrame.subscript.getter(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = v82;
  uint64_t v75 = v81;
  uint64_t v76 = v83;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18B18);
  swift_getTupleTypeMetadata2();
  sub_22093E890();
  uint64_t v63 = v34;
  uint64_t v72 = sub_22093E2A0();
  v69[2](v67, v70, v66);
  sub_22093E780();
  swift_getAssociatedConformanceWitness();
  sub_22093ED70();
  if (v82)
  {
    uint64_t v35 = 0;
LABEL_19:
    (*(void (**)(char *, uint64_t))(v65 + 8))(v29, AssociatedTypeWitness);
    swift_release();
    swift_bridgeObjectRelease();
    sub_2208D8BDC((uint64_t)v35);
    return v72;
  }
  else
  {
    uint64_t v36 = v81;
    type metadata accessor for Column();
    uint64_t v35 = 0;
    uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v61 + 48);
    Swift::String v38 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v68 = (void (**)(char *, char *, uint64_t))((char *)v61 + 32);
    uint64_t v69 = (void (**)(char *, unint64_t, uint64_t))((char *)v61 + 16);
    uint64_t v67 = (char *)v61 + 8;
    while (1)
    {
      unint64_t v70 = (unint64_t)v35;
      while (1)
      {
        uint64_t v81 = v75;
        uint64_t v82 = v77;
        uint64_t v83 = v76;
        Column.subscript.getter(v36, (uint64_t)v19);
        if ((*v37)(v19, 1, a7) != 1) {
          break;
        }
        (*v38)(v19, v74);
        sub_22093ED70();
        uint64_t v36 = v81;
        if (v82 == 1)
        {
          uint64_t v35 = (void (*)(void *@<X8>))v70;
          goto LABEL_19;
        }
      }
      uint64_t v66 = AssociatedTypeWitness;
      uint64_t v39 = v64;
      (*v68)(v64, v19, a7);
      uint64_t v40 = (uint64_t)v71;
      uint64_t v61 = *v69;
      v61(v71, (unint64_t)v39, a7);
      sub_2208D8BDC(v70);
      uint64_t v41 = v72;
      LODWORD(v62) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v81 = v41;
      unint64_t v42 = sub_2208D8BEC(v40, a7, v73);
      uint64_t v43 = *(void *)(v41 + 16);
      LODWORD(v72) = v44;
      if (__OFADD__(v43, (v44 & 1) == 0)) {
        break;
      }
      unint64_t v70 = v42;
      sub_22093F080();
      char v45 = sub_22093F060();
      uint64_t v46 = v81;
      if (v45)
      {
        unint64_t v70 = sub_2208D8BEC((uint64_t)v71, a7, v73);
        if ((v72 & 1) != (v47 & 1)) {
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v59 = v29;
      if (v72)
      {
        swift_bridgeObjectRetain();
        unint64_t v48 = v70;
      }
      else
      {
        uint64_t v81 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        v61(v60, (unint64_t)v71, a7);
        unint64_t v48 = v70;
        sub_22093F070();
      }
      uint64_t v49 = *(void *)(v46 + 56);
      uint64_t v72 = v46;
      swift_bridgeObjectRelease();
      uint64_t v50 = 8 * v48;
      unint64_t v51 = *(char **)(v49 + 8 * v48);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v62 = v49;
      *(void *)(v49 + v50) = v51;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v51 = sub_22081B4E8(0, *((void *)v51 + 2) + 1, 1, v51);
        *(void *)(v62 + 8 * v70) = v51;
      }
      uint64_t v29 = v59;
      unint64_t v54 = *((void *)v51 + 2);
      unint64_t v53 = *((void *)v51 + 3);
      unint64_t v55 = (void (*)(char *, unint64_t, uint64_t))(v54 + 1);
      if (v54 >= v53 >> 1)
      {
        uint64_t v61 = (void (*)(char *, unint64_t, uint64_t))(v54 + 1);
        uint64_t v57 = sub_22081B4E8((char *)(v53 > 1), v54 + 1, 1, v51);
        unint64_t v55 = v61;
        unint64_t v51 = v57;
        *(void *)(v62 + 8 * v70) = v57;
      }
      *((void *)v51 + 2) = v55;
      *(void *)&v51[8 * v54 + 32] = v36;
      unint64_t v56 = *(void (**)(char *, uint64_t))v67;
      (*(void (**)(char *, uint64_t))v67)(v71, a7);
      v56(v64, a7);
      uint64_t AssociatedTypeWitness = v66;
      sub_22093ED70();
      uint64_t v36 = v81;
      uint64_t v35 = sub_2208D6E28;
      if (v82) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    uint64_t result = sub_22093F2F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_2208D86C8(uint64_t a1, char **a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, void))(*(void *)(a3 + 32) + 24))(&v19, *(void *)(a3 + 16));
  uint64_t v4 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = *a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_13:
    }
      uint64_t v6 = sub_22080AB34((uint64_t)v6);
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    *a2 = v6;
    do
    {
      sub_22080B5B8(v4 + v7 + 32, (uint64_t)&v19);
      uint64_t v6 = *a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v6 = sub_22080AB34((uint64_t)v6);
        *a2 = v6;
      }
      if (v8 >= *((void *)v6 + 2))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v8;
      uint64_t v11 = v20;
      uint64_t v10 = v21;
      uint64_t v12 = __swift_project_boxed_opaque_existential_1(&v19, v20);
      v18[3] = v11;
      v18[4] = *(void *)(v10 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1, v12, v11);
      uint64_t v14 = *(void *)&v6[v7 + 56];
      uint64_t v15 = *(void *)&v6[v7 + 64];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v6[v7 + 32], v14);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v15 + 56))(a1, v18, v14, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      sub_22080B0D8((uint64_t)&v19);
      v7 += 40;
    }
    while (v5 != v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2208D88BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v33 = *(void *)(a3 + 16);
  (*(void (**)(void *__return_ptr))(v6 + 24))(v37);
  uint64_t v7 = v37[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + *(int *)(a3 + 52);
  uint64_t v10 = *(void *)(a3 + 40);
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v12 = v37;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v37, v11, v10);
  uint64_t v13 = v37[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v13;
  unint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *a2;
  unint64_t v31 = v8;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_18:
  }
    uint64_t v15 = (uint64_t)sub_22080AB34(v15);
  unint64_t v16 = 0;
  uint64_t v30 = a2;
  *a2 = v15;
  a2 = (uint64_t *)v36 + 1;
  ++v12;
  while (1)
  {
    while (1)
    {
      if (v16 == v14)
      {
        unint64_t v16 = v14;
        memset(v36, 0, sizeof(v36));
      }
      else
      {
        if ((v16 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
        if (v16 >= *(void *)(v32 + 16)) {
          goto LABEL_17;
        }
        sub_22080B5B8(v32 + 32 + 40 * v16, (uint64_t)&v34[8]);
        *(void *)&v36[0] = v16;
        *(_OWORD *)((char *)v36 + 8) = *(_OWORD *)&v34[8];
        *(_OWORD *)((char *)&v36[1] + 8) = *(_OWORD *)&v34[24];
        *((void *)&v36[2] + 1) = v35;
        ++v16;
      }
      sub_2208B8A44((uint64_t)v36, (uint64_t)v37);
      if (!v37[4]) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v15 = v37[0];
      long long v17 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v12;
      *(_OWORD *)&v34[16] = v17;
      *(void *)&v34[32] = v12[4];
      *(void *)&v36[0] = v33;
      *((void *)&v36[0] + 1) = v11;
      *(void *)&v36[1] = v11;
      *((void *)&v36[1] + 1) = v6;
      *(void *)&v36[2] = v10;
      *((void *)&v36[2] + 1) = v10;
      if (v15 != *(void *)(v9 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 72))) {
        break;
      }
      sub_22080B0D8((uint64_t)v34);
    }
    uint64_t v18 = *v30;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v30 = v18;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_22080AB34(v18);
      uint64_t v18 = result;
      *uint64_t v30 = result;
    }
    if (v31 >= *(void *)(v18 + 16)) {
      break;
    }
    uint64_t v26 = v18 + 40 * v31;
    uint64_t v28 = v26 + 32;
    uint64_t v20 = *(void *)&v34[24];
    uint64_t v23 = *(void *)&v34[32];
    uint64_t v24 = __swift_project_boxed_opaque_existential_1(v34, *(uint64_t *)&v34[24]);
    *((void *)&v36[1] + 1) = v20;
    *(void *)&v36[2] = *(void *)(v23 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v36);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_1, v24, v20);
    uint64_t v22 = *(void *)(v26 + 56);
    uint64_t v25 = v22;
    uint64_t v27 = *(void *)(v26 + 64);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(v28, v22);
    (*(void (**)(uint64_t, _OWORD *, uint64_t))(v27 + 56))(a1, v36, v25);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    sub_22080B0D8((uint64_t)v34);
    ++v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208D8BDC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_2208D8BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22093E360();

  return sub_2208D8C48(a1, v6, a2, a3);
}

unint64_t sub_2208D8C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a1;
  void v21[2] = a4;
  MEMORY[0x270FA5388](a1);
  unint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v4;
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v10 & ~v9;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v9;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v14 = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    long long v17 = (void (**)(char *, uint64_t))(v13 - 8);
    do
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v22 + 48) + v16 * v11, a3);
      char v19 = sub_22093E520();
      (*v17)(v8, a3);
      if (v19) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      uint64_t v13 = v18;
    }
    while (((*(void *)(v21[0] + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_2208D8DD0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_22093EE10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_22093F430();
        swift_bridgeObjectRetain();
        sub_22093E650();
        uint64_t v10 = sub_22093F490();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_2208D8F98(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_22093EE10();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_22093F420() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2208D9120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v42 = a2;
  *((void *)&v42 + 1) = a3;
  uint64_t v12 = (void *)sub_22080CE30(MEMORY[0x263F8EE78]);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a8 + 32))(&v54, a4, a8);
  uint64_t v48 = v54;
  uint64_t v13 = *((void *)&v55 + 1);
  uint64_t v45 = v55;
  uint64_t v46 = *((void *)&v54 + 1);
  uint64_t v14 = v56;
  char v15 = v57;
  Swift::Int v16 = *((void *)&v55 + 1);
  if ((_BYTE)v57)
  {
    if (v57 == 1 && *(void *)(*((void *)&v55 + 1) + 16))
    {
      Swift::Int v16 = *(void *)(*((void *)&v55 + 1) + 32);
    }
    else
    {
      sub_220883950(*((uint64_t *)&v55 + 1), v56, v57);
      if (v18) {
        Swift::Int v16 = 0;
      }
      else {
        Swift::Int v16 = v17;
      }
    }
  }
  uint64_t v47 = v14;
  char v49 = v15;
  sub_220883950(v13, v14, v15);
  if (v20) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v19;
  }
  if (v16 == v21)
  {
    uint64_t v22 = 0;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22080B6B4(v13, v47, v49);
    sub_2208D8BDC((uint64_t)v22);
    return (uint64_t)v12;
  }
  long long v54 = v42;
  *(void *)&long long v55 = a4;
  *((void *)&v55 + 1) = a6;
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v22 = 0;
  uint64_t v24 = (void *)(a1 + *(int *)(type metadata accessor for HashJoin.JoinItem() + 68));
  uint64_t v43 = v13;
  while (1)
  {
    *(void *)&long long v54 = v48;
    *((void *)&v54 + 1) = v46;
    *(void *)&long long v55 = v45;
    *((void *)&v55 + 1) = v13;
    uint64_t v56 = v47;
    LOBYTE(v57) = v49;
    Swift::Int v25 = DataFrame.Rows.index(after:)(v16);
    uint64_t v26 = v24[3];
    uint64_t v27 = v24[4];
    __swift_project_boxed_opaque_existential_1(v24, v26);
    (*(void (**)(long long *__return_ptr, Swift::Int, uint64_t, uint64_t))(v27 + 48))(&v54, v16, v26, v27);
    if (!*((void *)&v55 + 1))
    {
      sub_2208352E4((uint64_t)&v54, qword_26AD40FF8);
      long long v51 = 0u;
      long long v52 = 0u;
      uint64_t v53 = 0;
LABEL_16:
      sub_2208352E4((uint64_t)&v51, &qword_267F18658);
      goto LABEL_17;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v53 = 0;
      long long v51 = 0u;
      long long v52 = 0u;
      goto LABEL_16;
    }
    if (!*((void *)&v52 + 1)) {
      goto LABEL_16;
    }
    long long v54 = v51;
    long long v55 = v52;
    uint64_t v56 = v53;
    sub_220834DA0((uint64_t)&v54, (uint64_t)&v51);
    sub_2208D8BDC((uint64_t)v22);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50[0] = v12;
    unint64_t v30 = sub_22081D2BC((uint64_t)&v51);
    uint64_t v31 = v12[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v12[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_220825868();
      }
    }
    else
    {
      sub_22081F9B4(v33, isUniquelyReferenced_nonNull_native);
      unint64_t v35 = sub_22081D2BC((uint64_t)&v51);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_36;
      }
      unint64_t v30 = v35;
    }
    uint64_t v12 = (void *)v50[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v34 & 1) == 0)
    {
      sub_220834DA0((uint64_t)&v51, (uint64_t)v50);
      sub_220822120(v30, (uint64_t)v50, MEMORY[0x263F8EE78], v12);
    }
    uint64_t v37 = v12[7];
    swift_bridgeObjectRelease();
    Swift::String v38 = *(char **)(v37 + 8 * v30);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v37 + 8 * v30) = v38;
    if ((v39 & 1) == 0)
    {
      Swift::String v38 = sub_22081B4E8(0, *((void *)v38 + 2) + 1, 1, v38);
      *(void *)(v37 + 8 * v30) = v38;
    }
    unint64_t v41 = *((void *)v38 + 2);
    unint64_t v40 = *((void *)v38 + 3);
    if (v41 >= v40 >> 1)
    {
      Swift::String v38 = sub_22081B4E8((char *)(v40 > 1), v41 + 1, 1, v38);
      *(void *)(v37 + 8 * v30) = v38;
    }
    *((void *)v38 + 2) = v41 + 1;
    *(void *)&v38[8 * v41 + 32] = v16;
    sub_220834CE8((uint64_t)&v51);
    sub_220834CE8((uint64_t)&v54);
    uint64_t v22 = sub_2208D6E28;
    uint64_t v13 = v43;
LABEL_17:
    Swift::Int v16 = v25;
    if (v25 == v21) {
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_36:
  uint64_t result = sub_22093F2F0();
  __break(1u);
  return result;
}

uint64_t Column<A>.encoded<A>(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v76 = a1;
  uint64_t v64 = a6;
  uint64_t v63 = sub_22093EF50();
  uint64_t v61 = *(void *)(v63 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v60 = (char *)&v57 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v57 - v14;
  uint64_t v79 = a5;
  uint64_t v77 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = sub_22093ED30();
  uint64_t v68 = *(void (***)(uint64_t, uint64_t))(v75 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)&v57 - v17;
  uint64_t v69 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v73 = (char *)&v57 - v18;
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v65 = sub_22093ED30();
  unint64_t v70 = *(void (***)(char *, uint64_t))(v65 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v65);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v84 = v19;
  uint64_t v72 = *(void (***)(char *, uint64_t))(v19 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v80 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v25 = sub_22093ED30();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (uint64_t *)((char *)&v57 - v26);
  uint64_t v28 = v6[1];
  uint64_t v30 = v6[2];
  uint64_t v99 = *v6;
  uint64_t v29 = v99;
  uint64_t v100 = v28;
  uint64_t v101 = v30;
  swift_bridgeObjectRetain();
  Swift::Int v31 = Column.count.getter(a2);
  uint64_t v81 = AssociatedTypeWitness;
  Column.init(name:capacity:)(v29, v28, v31, AssociatedTypeWitness, &v102);
  *(void *)&long long v96 = v29;
  *((void *)&v96 + 1) = v28;
  unint64_t v97 = v30;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v95 = v89;
  uint64_t v57 = v29;
  *(void *)&long long v92 = v29;
  uint64_t v58 = v28;
  *((void *)&v92 + 1) = v28;
  uint64_t v32 = v65;
  unint64_t v93 = v30;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  unint64_t v34 = sub_220887EF8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  long long v92 = v96;
  unint64_t v93 = v97;
  long long v94 = v98;
  *(void *)&long long v89 = v33;
  uint64_t v104 = (void (*)(char *, char *, uint64_t))a2;
  *((void *)&v89 + 1) = a2;
  unint64_t v88 = v34;
  unint64_t v90 = v34;
  uint64_t v87 = WitnessTable;
  uint64_t v91 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v86 = TupleTypeMetadata2 - 8;
  uint64_t v83 = (void (**)(char *, char *, uint64_t))(v70 + 4);
  uint64_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 6);
  unint64_t v71 = (void (**)(char *, char *, uint64_t))(v72 + 4);
  uint64_t v66 = (void (**)(uint64_t, uint64_t))(v69 + 1);
  ++v72;
  ++v70;
  v69 += 7;
  ++v68;
  uint64_t v67 = v27;
  uint64_t v36 = v84;
  while (1)
  {
    while (1)
    {
      *(void *)&long long v96 = v33;
      *((void *)&v96 + 1) = v104;
      unint64_t v97 = v88;
      *(void *)&long long v98 = v87;
      sub_22093EED0();
      sub_22093EEC0();
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v27, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v48 = v64;
        *uint64_t v64 = v102;
        *(_OWORD *)(v48 + 1) = v103;
        return result;
      }
      uint64_t v38 = *v27;
      (*v83)(v22, (char *)v27 + *(int *)(TupleTypeMetadata2 + 48), v32);
      if ((*v82)(v22, 1, v36) != 1) {
        break;
      }
      (*v70)(v22, v32);
      uint64_t v37 = (uint64_t)v74;
      (*v69)(v74, 1, 1, v81);
      type metadata accessor for Column();
      Column.append(_:)(v37);
      (*v68)(v37, v75);
    }
    uint64_t v39 = v33;
    uint64_t v40 = TupleTypeMetadata2;
    uint64_t v41 = v32;
    long long v42 = v80;
    (*v71)(v80, v22, v36);
    uint64_t v43 = (uint64_t)v73;
    uint64_t v44 = v85;
    sub_22093E210();
    if (v44) {
      break;
    }
    uint64_t v85 = 0;
    uint64_t v45 = v81;
    uint64_t v46 = type metadata accessor for Column();
    Column.append(_:)(v43, v46);
    (*v66)(v43, v45);
    (*v72)(v42, v36);
    uint64_t v32 = v41;
    TupleTypeMetadata2 = v40;
    uint64_t v33 = v39;
    uint64_t v27 = v67;
  }
  *(void *)&long long v96 = v44;
  MEMORY[0x223C6AF70](v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
  char v49 = v62;
  uint64_t v50 = v63;
  if (swift_dynamicCast())
  {
    MEMORY[0x223C6AF60](v44);
    uint64_t v51 = v61;
    uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    long long v52 = v60;
    v104(v60, v49, v50);
    uint64_t v53 = v59;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v59, v52, v50);
    uint64_t v54 = type metadata accessor for ColumnEncodingError();
    sub_2208D9FB0();
    swift_allocError();
    uint64_t v55 = v58;
    *uint64_t v56 = v57;
    v56[1] = v55;
    v56[2] = v38;
    v104((char *)v56 + *(int *)(v54 + 24), v53, v50);
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
  }
  (*v72)(v80, v84);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x223C6AF60](v96);
}

uint64_t type metadata accessor for ColumnEncodingError()
{
  uint64_t result = qword_267F19608;
  if (!qword_267F19608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_2208D9FB0()
{
  unint64_t result = qword_267F195F8;
  if (!qword_267F195F8)
  {
    type metadata accessor for ColumnEncodingError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F195F8);
  }
  return result;
}

uint64_t ColumnEncodingError.init(columnName:rowIndex:encodingError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  unint64_t v6 = (char *)a5 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  uint64_t v7 = sub_22093EF50();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t AnyColumn.encoded<A, B>(_:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8 = v6;
  uint64_t v26 = a6;
  uint64_t v15 = v6[3];
  uint64_t v14 = v6[4];
  __swift_project_boxed_opaque_existential_1(v8, v15);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 80))(v15) == a2)
  {
    sub_22083B5D0((uint64_t)v8, (uint64_t)v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v16 = type metadata accessor for Column();
    swift_dynamicCast();
    Column<A>.encoded<A>(using:)(a1, v16, a3, a4, a5, &v20);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7)
    {
      v23[0] = v20;
      v23[1] = v21;
      v23[2] = v22;
      swift_getAssociatedTypeWitness();
      type metadata accessor for Column();
      Column.eraseToAnyColumn()(v26);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_22080B5B8((uint64_t)v8, (uint64_t)v23);
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v19 = v24;
    uint64_t v18 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 80))(v19);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumn.encode<A, B>(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = v6[3];
  uint64_t v13 = v6[4];
  __swift_project_boxed_opaque_existential_1(v7, v14);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v13 + 8) + 80))(v14) == a3)
  {
    sub_22083B5D0((uint64_t)v7, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41110);
    uint64_t v15 = type metadata accessor for Column();
    swift_dynamicCast();
    swift_getAssociatedTypeWitness();
    uint64_t v22 = type metadata accessor for Column();
    uint64_t v23 = &off_26D2223C0;
    uint64_t v16 = v24;
    Column<A>.encoded<A>(using:)(a2, v15, a4, a5, a6, &v21);
    swift_release();
    swift_bridgeObjectRelease();
    if (v16)
    {
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v21);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
      return sub_2208343B8(&v21, (uint64_t)v7);
    }
  }
  else
  {
    *(void *)&long long v21 = 0;
    *((void *)&v21 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    uint64_t v19 = v7[3];
    uint64_t v18 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v19);
    (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 80))(v19);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t DataFrame.encodeColumn<A, B>(_:_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9 = v8;
  uint64_t v15 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_22080BA90(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_22080AB34(v15);
  uint64_t v15 = result;
  if ((v16 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v16 < *(void *)(v15 + 16))
  {
    uint64_t result = AnyColumn.encode<A, B>(_:using:)(result, a4, a5, a6, a7, a8);
    *unint64_t v9 = v15;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DataFrame.encodeColumn<A, B>(_:using:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_22080BA90(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v14 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_22080AB34(v13);
  uint64_t v13 = result;
  if ((v14 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v14 < *(void *)(v13 + 16))
  {
    uint64_t result = AnyColumn.encode<A, B>(_:using:)(result, a2, a3, a4, a5, a6);
    *uint64_t v7 = v13;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ColumnEncodingError.columnName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ColumnEncodingError.columnName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ColumnEncodingError.columnName.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnEncodingError.rowIndex.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ColumnEncodingError.rowIndex.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*ColumnEncodingError.rowIndex.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnEncodingError.encodingError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  uint64_t v4 = sub_22093EF50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ColumnEncodingError.encodingError.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ColumnEncodingError() + 24);
  uint64_t v4 = sub_22093EF50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ColumnEncodingError.encodingError.modify())(void)
{
  return nullsub_5;
}

uint64_t ColumnEncodingError.debugDescription.getter()
{
  uint64_t v1 = sub_22093EF40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22093EF50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColumnEncodingError();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + *(int *)(v9 + 24), v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x263F8DCE0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19600);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v8[*(int *)(v10 + 48)], v1);
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0x6D756C6F63206E49;
    unint64_t v16 = 0xEB0000000027206ELL;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v14 = *(void *)(v0 + 16);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093EF00();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v15;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t v14 = *(void *)(v0 + 16);
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F030();
    uint64_t v11 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for ColumnEncodingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22093EF50();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ColumnEncodingError(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22093EF50();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ColumnEncodingError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22093EF50();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ColumnEncodingError(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22093EF50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ColumnEncodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22093EF50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ColumnEncodingError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22093EF50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnEncodingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2208DB190);
}

uint64_t sub_2208DB190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22093EF50();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ColumnEncodingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2208DB254);
}

uint64_t sub_2208DB254(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22093EF50();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2208DB2FC()
{
  uint64_t result = sub_22093EF50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for DateColumnProcessor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  uint64_t v7 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v7;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v8 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v8;
  uint64_t v9 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(unsigned char *)(a1 + 171) = *(unsigned char *)(a2 + 171);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v4;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for DateColumnProcessor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(_WORD *)(a1 + 171) = *(_WORD *)(a2 + 171);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateColumnProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 256)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateColumnProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 256) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateColumnProcessor()
{
  return &type metadata for DateColumnProcessor;
}

uint64_t sub_2208DBADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v34 - v12;
  uint64_t v14 = sub_22093E100();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2208BAC0C(a1, a2, *(void *)(v4 + 104)))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    sub_2208F1E60((uint64_t)v11);
    return sub_2208573C0((uint64_t)v11);
  }
  uint64_t v36 = a3;
  uint64_t v19 = sub_2208E5320(a1, a2);
  if (!v20)
  {
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)(v4 + 200);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
    uint64_t v41 = v30;
    unint64_t v42 = sub_2208DBF18();
    uint64_t v39 = a1;
    uint64_t v40 = a2;
    Swift::Int v31 = __swift_project_boxed_opaque_existential_1(&v39, v30);
    if (*v31) {
      uint64_t v32 = (unsigned char *)(*v31 + v31[1]);
    }
    else {
      uint64_t v32 = 0;
    }
    sub_220848DD4((unsigned char *)*v31, v32, &v37);
    uint64_t v29 = v37;
    uint64_t v27 = v38;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
    uint64_t v28 = 0;
    goto LABEL_13;
  }
  uint64_t v35 = a2;
  uint64_t v21 = v20;
  sub_2208BB36C(v19, v20, v13);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2208573C0((uint64_t)v13);
    uint64_t v23 = *(void *)(v4 + 200);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18BB0);
    uint64_t v41 = v24;
    unint64_t v42 = sub_2208DBF18();
    uint64_t v39 = a1;
    uint64_t v40 = v35;
    uint64_t v25 = __swift_project_boxed_opaque_existential_1(&v39, v24);
    if (*v25) {
      uint64_t v26 = (unsigned char *)(*v25 + v25[1]);
    }
    else {
      uint64_t v26 = 0;
    }
    sub_220848DD4((unsigned char *)*v25, v26, &v37);
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
    uint64_t v29 = 4;
LABEL_13:
    sub_2208501D0();
    swift_allocError();
    *(void *)uint64_t v33 = v36;
    *(void *)(v33 + 8) = v23;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v27;
    *(void *)(v33 + 32) = v28;
    *(unsigned char *)(v33 + 40) = v22 != 0;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_2208F1E60((uint64_t)v11);
  sub_2208573C0((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_2208DBE74@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[29];
  uint64_t v3 = v1[30];
  uint64_t v5 = v1[31];
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41138);
  a1[4] = &off_26D2223C0;
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_2208DBEE0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 232) = a1;
  *(void *)(v2 + 240) = a2;
  return result;
}

unint64_t sub_2208DBF18()
{
  unint64_t result = qword_267F18BB8;
  if (!qword_267F18BB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267F18BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F18BB8);
  }
  return result;
}

uint64_t AnyColumnSlice.name.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v2);
}

uint64_t AnyColumnSlice.wrappedElementType.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 80))(v2);
}

uint64_t AnyColumnSlice.assumingType<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v7 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 80))(v7) == a1)
  {
    sub_22083B5D0((uint64_t)v3, (uint64_t)&v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F18A90);
    type metadata accessor for ColumnSlice();
    if (swift_dynamicCast())
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_22083B5D0((uint64_t)v3, (uint64_t)&v26);
      swift_dynamicCast();
      long long v26 = v22;
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      uint64_t v29 = v25;
      uint64_t v8 = type metadata accessor for Column();
      swift_getWitnessTable();
      sub_22093F3B0();
      sub_22093F360();
      uint64_t v9 = *((void *)&v22 + 1);
      uint64_t v17 = v22;
      uint64_t v10 = v23;
      long long v26 = v22;
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      uint64_t v29 = v25;
      swift_getWitnessTable();
      sub_22093EA40();
      long long v26 = v18;
      sub_2208743F4((uint64_t)&v26, (uint64_t)&v19);
      uint64_t v11 = v19;
      uint64_t v12 = v20;
      char v13 = v21;
      *(void *)&long long v26 = v17;
      *((void *)&v26 + 1) = v9;
      uint64_t v27 = v10;
      sub_220866A38(v19, v20, v21, v8, a2);
      sub_22080B6B4(v11, v12, v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_22083B5D0((uint64_t)v3, (uint64_t)&v26);
      type metadata accessor for DiscontiguousColumnSlice();
      return swift_dynamicCast();
    }
  }
  else
  {
    sub_220833C28((uint64_t)v3, (uint64_t)&v26);
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = 0xD00000000000001CLL;
    *((void *)&v22 + 1) = 0x800000022093FFE0;
    uint64_t v15 = v28;
    uint64_t v16 = v29;
    __swift_project_boxed_opaque_existential_1(&v26, v28);
    (*(void (**)(uint64_t))(*(void *)(v16 + 8) + 80))(v15);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  return result;
}

uint64_t AnyColumnSlice.missingCount.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 56))(v2);
}

uint64_t sub_2208DC3D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = *(void *)v1;
  long long v54 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v51 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v93 = MEMORY[0x263F8EE88];
  long long v91 = 0uLL;
  char v92 = 2;
  sub_220883610(&v72);
  uint64_t v53 = v72;
  uint64_t v63 = v74;
  unint64_t v64 = v73;
  uint64_t v61 = v76;
  uint64_t v62 = v75;
  int v60 = v77;
  int64_t v5 = v79;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v50 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v70 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v65 = v80;
  uint64_t v66 = v8;
  uint64_t v9 = v7;
  int v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(unsigned char *)(v1 + 40))
  {
    if (v10 == 1 && *(void *)(v7 + 16))
    {
      uint64_t v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(v70 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v44 = 0;
        uint64_t v43 = 128;
        goto LABEL_57;
      }
      uint64_t v11 = (uint64_t *)(v12 + 8);
    }
    uint64_t v9 = *v11;
  }
  uint64_t v52 = v9;
  if (v5 == v65)
  {
    sub_22084312C(v1);
    uint64_t v13 = v5;
    uint64_t v14 = v52;
LABEL_41:
    uint64_t v72 = v53;
    unint64_t v73 = v64;
    uint64_t v74 = v63;
    uint64_t v75 = v62;
    uint64_t v76 = v61;
    unsigned __int8 v77 = v60;
    *(_DWORD *)uint64_t v78 = v71;
    *(_DWORD *)&v78[3] = *(_DWORD *)((char *)&v71 + 3);
    int64_t v79 = v5;
    uint64_t v80 = v65;
    uint64_t v81 = v13;
    uint64_t v82 = v59;
    long long v83 = v54;
    uint64_t v84 = v3;
    uint64_t v85 = v4;
    char v86 = v51;
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v90;
    *(_DWORD *)&uint64_t v87[3] = *(_DWORD *)&v90[3];
    uint64_t v88 = v14;
    char v89 = 1;
    sub_2208C35A4((uint64_t)&v72);
    swift_bridgeObjectRelease();
    char v40 = v92;
    *(void *)a1 = v50;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v70;
    *(_OWORD *)(a1 + 24) = v91;
    *(unsigned char *)(a1 + 40) = v40;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  int v57 = v10;
  uint64_t v46 = v4;
  uint64_t v47 = v3;
  uint64_t v48 = v6;
  uint64_t v49 = a1;
  uint64_t v96 = v53;
  unint64_t v97 = v64;
  uint64_t v98 = v63;
  uint64_t v99 = v62;
  uint64_t v100 = v61;
  char v101 = v60;
  sub_22084312C(v1);
  uint64_t v58 = (void **)(v70 + 16);
  swift_beginAccess();
  uint64_t v55 = v7 + 32;
  uint64_t v56 = v54;
  int64_t v45 = v5;
  int64_t v15 = v5;
  uint64_t v14 = v52;
  while (1)
  {
    uint64_t v69 = v14;
    uint64_t v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = v61;
    uint64_t v18 = v62;
    char v19 = v60;
    sub_220831F30(v62, v61, v60);
    int64_t v67 = v15;
    uint64_t v68 = sub_2208937D4(v15);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_22080B6B4(v18, v17, v19);
    char v21 = v58;
    if (!*v58) {
      goto LABEL_47;
    }
    uint64_t v22 = v69;
    if (v69 == (*v58)[1])
    {
      uint64_t v14 = v69;
      uint64_t v6 = v48;
      a1 = v49;
      uint64_t v4 = v46;
      uint64_t v3 = v47;
      int64_t v5 = v45;
      uint64_t v13 = v68;
      goto LABEL_41;
    }
    uint64_t v7 = v16;
    v94[0] = v59;
    v94[1] = v56;
    v94[2] = v70;
    v94[3] = v16;
    uint64_t v23 = v66;
    v94[4] = v66;
    int v24 = v57;
    char v95 = v57;
    uint64_t v72 = v69;
    MEMORY[0x270FA5388](v20);
    uint64_t v43 = (uint64_t)&v72;
    sub_220831F30(v7, v23, v24);
    sub_220831F30(v7, v23, v24);
    unint64_t v25 = sub_2208FD268((uint64_t (*)(long long *))sub_22089466C, (uint64_t)&v42, v7, v23, v24);
    sub_22080B6B4(v7, v23, v24);
    if (!v24)
    {
      uint64_t v26 = v7;
      if (v25) {
        goto LABEL_44;
      }
      goto LABEL_21;
    }
    if (v24 != 1) {
      break;
    }
    unint64_t v27 = *(void *)(v7 + 16);
    if (v25 == v27)
    {
      sub_22080B6B4(v7, v66, 1);
LABEL_54:
      uint64_t v52 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27) {
      goto LABEL_46;
    }
    uint64_t v26 = *(void *)(v55 + 16 * v25);
    sub_22080B6B4(v7, v66, 1);
LABEL_21:
    if (v72 < v26) {
      goto LABEL_56;
    }
    if (v22 < 0) {
      goto LABEL_50;
    }
    uint64_t v28 = *v21;
    if (!*v21) {
      goto LABEL_48;
    }
    if (v22 >= v28[1]) {
      goto LABEL_50;
    }
    uint64_t v29 = sub_2208915A0(v22, v28, v70);
    char v31 = v30;
    unint64_t v25 = (unint64_t)v94;
    uint64_t v14 = sub_2208937D4(v22);
    int v32 = v31 & 1;
    uint64_t v33 = v93;
    if (*(void *)(v93 + 16))
    {
      sub_22093F430();
      sub_22093F450();
      if (!v32) {
        sub_22093F440();
      }
      unint64_t v25 = (unint64_t)&v72;
      uint64_t v34 = sub_22093F490();
      uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
      unint64_t v36 = v34 & ~v35;
      if ((*(void *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
      {
        uint64_t v37 = ~v35;
        do
        {
          uint64_t v38 = *(void *)(v33 + 48) + 16 * v36;
          if (*(unsigned char *)(v38 + 8))
          {
            if (v32) {
              goto LABEL_11;
            }
          }
          else if (!v32 && *(void *)v38 == v29)
          {
            goto LABEL_11;
          }
          unint64_t v36 = (v36 + 1) & v37;
        }
        while (((*(void *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) != 0);
      }
    }
    uint64_t v39 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v39 < v67) {
      goto LABEL_43;
    }
    sub_220869870(v67, v39);
    sub_2208291CC((uint64_t)&v72, v29, v32);
LABEL_11:
    int64_t v15 = v68;
    if (v68 == v65)
    {
      uint64_t v13 = v65;
      uint64_t v6 = v48;
      a1 = v49;
      uint64_t v4 = v46;
      uint64_t v3 = v47;
      int64_t v5 = v45;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    int v44 = 0;
    uint64_t v43 = 91;
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v69 = v52;
LABEL_56:
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v72 = 0x6E6F697469736F70;
  unint64_t v73 = 0xE900000000000020;
  uint64_t v71 = v69;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v44 = 0;
  uint64_t v43 = 169;
LABEL_57:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DCAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = *(void *)v1;
  long long v52 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v91 = MEMORY[0x263F8EE88];
  long long v89 = 0uLL;
  char v90 = 2;
  sub_220883610(&v70);
  uint64_t v51 = v70;
  uint64_t v61 = v72;
  unint64_t v62 = v71;
  uint64_t v59 = v74;
  uint64_t v60 = v73;
  int v58 = v75;
  int64_t v6 = v77;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v49 = *(void *)v1;
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v68 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 32);
  int64_t v63 = v78;
  uint64_t v64 = v9;
  uint64_t v10 = v8;
  int v11 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v47 = v3;
  if (v11)
  {
    if (v11 == 1 && *(void *)(v8 + 16))
    {
      uint64_t v12 = (uint64_t *)(v8 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v13 = *(void *)(v68 + 16);
      if (!v13)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v42 = 0;
        uint64_t v41 = 128;
        goto LABEL_57;
      }
      uint64_t v12 = (uint64_t *)(v13 + 8);
      uint64_t v3 = v47;
    }
    uint64_t v10 = *v12;
  }
  uint64_t v50 = v10;
  int v48 = v5;
  if (v6 == v63)
  {
    sub_22084312C(v1);
    int64_t v14 = v6;
    uint64_t v15 = v50;
LABEL_41:
    uint64_t v70 = v51;
    unint64_t v71 = v62;
    uint64_t v72 = v61;
    uint64_t v73 = v60;
    uint64_t v74 = v59;
    unsigned __int8 v75 = v58;
    *(_DWORD *)uint64_t v76 = v69;
    *(_DWORD *)&uint64_t v76[3] = *(_DWORD *)((char *)&v69 + 3);
    int64_t v77 = v6;
    int64_t v78 = v63;
    int64_t v79 = v14;
    uint64_t v80 = v57;
    long long v81 = v52;
    uint64_t v82 = v3;
    uint64_t v83 = v4;
    char v84 = v48;
    *(_DWORD *)uint64_t v85 = *(_DWORD *)v88;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v88[3];
    uint64_t v86 = v15;
    char v87 = 1;
    sub_2208C35A4((uint64_t)&v70);
    swift_bridgeObjectRelease();
    char v38 = v90;
    *(void *)a1 = v49;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v68;
    *(_OWORD *)(a1 + 24) = v89;
    *(unsigned char *)(a1 + 40) = v38;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  int v55 = v11;
  uint64_t v44 = v4;
  uint64_t v45 = v7;
  uint64_t v46 = a1;
  uint64_t v94 = v51;
  unint64_t v95 = v62;
  uint64_t v96 = v61;
  uint64_t v97 = v60;
  uint64_t v98 = v59;
  char v99 = v58;
  sub_22084312C(v1);
  swift_beginAccess();
  uint64_t v53 = v8 + 32;
  uint64_t v54 = v52;
  int64_t v43 = v6;
  uint64_t v15 = v50;
  uint64_t v56 = v68 + 16;
  while (1)
  {
    uint64_t v67 = v15;
    uint64_t v16 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = v59;
    uint64_t v18 = v60;
    char v19 = v58;
    sub_220831F30(v60, v59, v58);
    int64_t v65 = v6;
    uint64_t v66 = sub_2208937D4(v6);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = v18;
    uint64_t v21 = v56;
    uint64_t v22 = sub_22080B6B4(v20, v17, v19);
    if (!*(void *)v21) {
      goto LABEL_47;
    }
    uint64_t v23 = v67;
    if (v67 == *(void *)(*(void *)v21 + 8))
    {
      uint64_t v15 = v67;
      uint64_t v7 = v45;
      a1 = v46;
      uint64_t v3 = v47;
      int64_t v6 = v43;
      uint64_t v4 = v44;
      int64_t v14 = v66;
      goto LABEL_41;
    }
    uint64_t v8 = v16;
    v92[0] = v57;
    v92[1] = v54;
    v92[2] = v68;
    v92[3] = v16;
    uint64_t v24 = v64;
    v92[4] = v64;
    int v25 = v55;
    char v93 = v55;
    uint64_t v70 = v67;
    MEMORY[0x270FA5388](v22);
    uint64_t v41 = (uint64_t)&v70;
    sub_220831F30(v8, v24, v25);
    sub_220831F30(v8, v24, v25);
    unint64_t v26 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v40, v8, v24, v25);
    sub_22080B6B4(v8, v24, v25);
    if (!v25)
    {
      uint64_t v27 = v8;
      if (v26) {
        goto LABEL_44;
      }
      goto LABEL_21;
    }
    if (v25 != 1) {
      break;
    }
    unint64_t v28 = *(void *)(v8 + 16);
    if (v26 == v28)
    {
      sub_22080B6B4(v8, v64, 1);
LABEL_54:
      uint64_t v50 = v23;
      goto LABEL_55;
    }
    if (v26 >= v28) {
      goto LABEL_46;
    }
    uint64_t v27 = *(void *)(v53 + 16 * v26);
    sub_22080B6B4(v8, v64, 1);
LABEL_21:
    if (v70 < v27) {
      goto LABEL_56;
    }
    if (v23 < 0) {
      goto LABEL_50;
    }
    uint64_t v29 = *(void **)v21;
    if (!*(void *)v21) {
      goto LABEL_48;
    }
    if (v23 >= v29[1]) {
      goto LABEL_50;
    }
    int v30 = sub_220891AE0(v23, v29, v68);
    unint64_t v26 = (unint64_t)v92;
    uint64_t v15 = sub_2208937D4(v23);
    uint64_t v31 = v91;
    if (*(void *)(v91 + 16))
    {
      sub_22093F430();
      sub_22093F450();
      if ((v30 & 0x10000) == 0) {
        sub_22093F460();
      }
      unint64_t v26 = (unint64_t)&v70;
      uint64_t v32 = sub_22093F490();
      uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = ~v33;
        do
        {
          uint64_t v36 = *(void *)(v31 + 48) + 4 * v34;
          if (*(unsigned char *)(v36 + 2))
          {
            if ((v30 & 0x10000) != 0) {
              goto LABEL_11;
            }
          }
          else if ((v30 & 0x10000) == 0 && *(short float *)v36 == *(short float *)&v30)
          {
            goto LABEL_11;
          }
          unint64_t v34 = (v34 + 1) & v35;
        }
        while (((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
      }
    }
    uint64_t v37 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v26 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v37 < v65) {
      goto LABEL_43;
    }
    sub_220869870(v65, v37);
    sub_220829068((uint64_t)&v70, v30 & 0x1FFFF);
LABEL_11:
    int64_t v6 = v66;
    if (v66 == v63)
    {
      int64_t v14 = v63;
      uint64_t v7 = v45;
      a1 = v46;
      uint64_t v3 = v47;
      int64_t v6 = v43;
      uint64_t v4 = v44;
      goto LABEL_41;
    }
  }
  if (v26)
  {
    int v42 = 0;
    uint64_t v41 = 91;
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v67 = v50;
LABEL_56:
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v70 = 0x6E6F697469736F70;
  unint64_t v71 = 0xE900000000000020;
  uint64_t v69 = v67;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v42 = 0;
  uint64_t v41 = 169;
LABEL_57:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DD224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = *(void *)v1;
  long long v52 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v91 = MEMORY[0x263F8EE88];
  long long v89 = 0uLL;
  char v90 = 2;
  sub_220883610(&v70);
  uint64_t v51 = v70;
  uint64_t v61 = v72;
  unint64_t v62 = v71;
  uint64_t v59 = v74;
  uint64_t v60 = v73;
  int v58 = v75;
  int64_t v6 = v77;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v49 = *(void *)v1;
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v68 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 32);
  int64_t v63 = v78;
  uint64_t v64 = v9;
  uint64_t v10 = v8;
  int v11 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v47 = v3;
  if (v11)
  {
    if (v11 == 1 && *(void *)(v8 + 16))
    {
      uint64_t v12 = (uint64_t *)(v8 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v13 = *(void *)(v68 + 16);
      if (!v13)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v42 = 0;
        uint64_t v41 = 128;
        goto LABEL_57;
      }
      uint64_t v12 = (uint64_t *)(v13 + 8);
      uint64_t v3 = v47;
    }
    uint64_t v10 = *v12;
  }
  int64_t v50 = v10;
  int v48 = v5;
  if (v6 == v63)
  {
    sub_22084312C(v1);
    int64_t v14 = v6;
    uint64_t v15 = v50;
LABEL_41:
    uint64_t v70 = v51;
    unint64_t v71 = v62;
    uint64_t v72 = v61;
    uint64_t v73 = v60;
    uint64_t v74 = v59;
    unsigned __int8 v75 = v58;
    *(_DWORD *)uint64_t v76 = v69;
    *(_DWORD *)&uint64_t v76[3] = *(_DWORD *)((char *)&v69 + 3);
    int64_t v77 = v6;
    int64_t v78 = v63;
    int64_t v79 = v14;
    uint64_t v80 = v57;
    long long v81 = v52;
    uint64_t v82 = v3;
    uint64_t v83 = v4;
    char v84 = v48;
    *(_DWORD *)uint64_t v85 = *(_DWORD *)v88;
    *(_DWORD *)&v85[3] = *(_DWORD *)&v88[3];
    uint64_t v86 = v15;
    char v87 = 1;
    sub_2208C35A4((uint64_t)&v70);
    swift_bridgeObjectRelease();
    char v38 = v90;
    *(void *)a1 = v49;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v68;
    *(_OWORD *)(a1 + 24) = v89;
    *(unsigned char *)(a1 + 40) = v38;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  int v55 = v11;
  uint64_t v44 = v4;
  uint64_t v45 = v7;
  uint64_t v46 = a1;
  uint64_t v94 = v51;
  unint64_t v95 = v62;
  uint64_t v96 = v61;
  uint64_t v97 = v60;
  uint64_t v98 = v59;
  char v99 = v58;
  sub_22084312C(v1);
  swift_beginAccess();
  uint64_t v53 = v8 + 32;
  uint64_t v54 = v52;
  int64_t v43 = v6;
  uint64_t v15 = v50;
  uint64_t v56 = v68 + 16;
  while (1)
  {
    int64_t v67 = v15;
    uint64_t v16 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = v59;
    uint64_t v18 = v60;
    char v19 = v58;
    sub_220831F30(v60, v59, v58);
    int64_t v65 = v6;
    uint64_t v66 = sub_2208937D4(v6);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = v18;
    uint64_t v21 = v56;
    uint64_t v22 = sub_22080B6B4(v20, v17, v19);
    if (!*(void *)v21) {
      goto LABEL_47;
    }
    int64_t v23 = v67;
    if (v67 == *(void *)(*(void *)v21 + 8))
    {
      uint64_t v15 = v67;
      uint64_t v7 = v45;
      a1 = v46;
      uint64_t v3 = v47;
      int64_t v6 = v43;
      uint64_t v4 = v44;
      int64_t v14 = v66;
      goto LABEL_41;
    }
    uint64_t v8 = v16;
    v92[0] = v57;
    v92[1] = v54;
    v92[2] = v68;
    v92[3] = v16;
    uint64_t v24 = v64;
    v92[4] = v64;
    int v25 = v55;
    char v93 = v55;
    uint64_t v70 = v67;
    MEMORY[0x270FA5388](v22);
    uint64_t v41 = (uint64_t)&v70;
    sub_220831F30(v8, v24, v25);
    sub_220831F30(v8, v24, v25);
    unint64_t v26 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v40, v8, v24, v25);
    sub_22080B6B4(v8, v24, v25);
    if (!v25)
    {
      uint64_t v27 = v8;
      if (v26) {
        goto LABEL_44;
      }
      goto LABEL_21;
    }
    if (v25 != 1) {
      break;
    }
    unint64_t v28 = *(void *)(v8 + 16);
    if (v26 == v28)
    {
      sub_22080B6B4(v8, v64, 1);
LABEL_54:
      int64_t v50 = v23;
      goto LABEL_55;
    }
    if (v26 >= v28) {
      goto LABEL_46;
    }
    uint64_t v27 = *(void *)(v53 + 16 * v26);
    sub_22080B6B4(v8, v64, 1);
LABEL_21:
    if (v70 < v27) {
      goto LABEL_56;
    }
    if (v23 < 0) {
      goto LABEL_50;
    }
    uint64_t v29 = *(void **)v21;
    if (!*(void *)v21) {
      goto LABEL_48;
    }
    if (v23 >= v29[1]) {
      goto LABEL_50;
    }
    unint64_t v30 = sub_220891A38(v23, v29, v68);
    unint64_t v26 = (unint64_t)v92;
    uint64_t v15 = sub_2208937D4(v23);
    uint64_t v31 = v91;
    if (*(void *)(v91 + 16))
    {
      sub_22093F430();
      sub_22093F450();
      if ((v30 & 0x100000000) == 0) {
        sub_22093F470();
      }
      unint64_t v26 = (unint64_t)&v70;
      uint64_t v32 = sub_22093F490();
      uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = ~v33;
        do
        {
          uint64_t v36 = *(void *)(v31 + 48) + 8 * v34;
          if (*(unsigned char *)(v36 + 4))
          {
            if ((v30 & 0x100000000) != 0) {
              goto LABEL_11;
            }
          }
          else if ((v30 & 0x100000000) == 0 && *(float *)v36 == *(float *)&v30)
          {
            goto LABEL_11;
          }
          unint64_t v34 = (v34 + 1) & v35;
        }
        while (((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
      }
    }
    uint64_t v37 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v26 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v37 < v65) {
      goto LABEL_43;
    }
    sub_220869870(v65, v37);
    sub_220828EF4((uint64_t)&v70, v30 | ((HIDWORD(v30) & 1) << 32));
LABEL_11:
    int64_t v6 = v66;
    if (v66 == v63)
    {
      int64_t v14 = v63;
      uint64_t v7 = v45;
      a1 = v46;
      uint64_t v3 = v47;
      int64_t v6 = v43;
      uint64_t v4 = v44;
      goto LABEL_41;
    }
  }
  if (v26)
  {
    int v42 = 0;
    uint64_t v41 = 91;
    goto LABEL_57;
  }
LABEL_55:
  int64_t v67 = v50;
LABEL_56:
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v70 = 0x6E6F697469736F70;
  unint64_t v71 = 0xE900000000000020;
  int64_t v69 = v67;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v42 = 0;
  uint64_t v41 = 169;
LABEL_57:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DD95C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = *(void *)v1;
  long long v54 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v51 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v93 = MEMORY[0x263F8EE88];
  long long v91 = 0uLL;
  char v92 = 2;
  sub_220883610(&v72);
  uint64_t v53 = v72;
  uint64_t v63 = v74;
  unint64_t v64 = v73;
  uint64_t v61 = v76;
  uint64_t v62 = v75;
  int v60 = v77;
  int64_t v5 = v79;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v50 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v70 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v65 = v80;
  uint64_t v66 = v8;
  uint64_t v9 = v7;
  int v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(unsigned char *)(v1 + 40))
  {
    if (v10 == 1 && *(void *)(v7 + 16))
    {
      int v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(v70 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v44 = 0;
        uint64_t v43 = 128;
        goto LABEL_57;
      }
      int v11 = (uint64_t *)(v12 + 8);
    }
    uint64_t v9 = *v11;
  }
  uint64_t v52 = v9;
  if (v5 == v65)
  {
    sub_22084312C(v1);
    uint64_t v13 = v5;
    uint64_t v14 = v52;
LABEL_41:
    uint64_t v72 = v53;
    unint64_t v73 = v64;
    uint64_t v74 = v63;
    uint64_t v75 = v62;
    uint64_t v76 = v61;
    unsigned __int8 v77 = v60;
    *(_DWORD *)int64_t v78 = v71;
    *(_DWORD *)&v78[3] = *(_DWORD *)((char *)&v71 + 3);
    int64_t v79 = v5;
    uint64_t v80 = v65;
    uint64_t v81 = v13;
    uint64_t v82 = v59;
    long long v83 = v54;
    uint64_t v84 = v3;
    uint64_t v85 = v4;
    char v86 = v51;
    *(_DWORD *)char v87 = *(_DWORD *)v90;
    *(_DWORD *)&uint64_t v87[3] = *(_DWORD *)&v90[3];
    uint64_t v88 = v14;
    char v89 = 1;
    sub_2208C35A4((uint64_t)&v72);
    swift_bridgeObjectRelease();
    char v40 = v92;
    *(void *)a1 = v50;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v70;
    *(_OWORD *)(a1 + 24) = v91;
    *(unsigned char *)(a1 + 40) = v40;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  int v57 = v10;
  uint64_t v46 = v4;
  uint64_t v47 = v3;
  uint64_t v48 = v6;
  uint64_t v49 = a1;
  uint64_t v96 = v53;
  unint64_t v97 = v64;
  uint64_t v98 = v63;
  uint64_t v99 = v62;
  uint64_t v100 = v61;
  char v101 = v60;
  sub_22084312C(v1);
  int v58 = (void **)(v70 + 16);
  swift_beginAccess();
  uint64_t v55 = v7 + 32;
  uint64_t v56 = v54;
  int64_t v45 = v5;
  int64_t v15 = v5;
  uint64_t v14 = v52;
  while (1)
  {
    uint64_t v69 = v14;
    uint64_t v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = v61;
    uint64_t v18 = v62;
    char v19 = v60;
    sub_220831F30(v62, v61, v60);
    int64_t v67 = v15;
    uint64_t v68 = sub_2208937D4(v15);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_22080B6B4(v18, v17, v19);
    uint64_t v21 = v58;
    if (!*v58) {
      goto LABEL_47;
    }
    uint64_t v22 = v69;
    if (v69 == (*v58)[1])
    {
      uint64_t v14 = v69;
      uint64_t v6 = v48;
      a1 = v49;
      uint64_t v4 = v46;
      uint64_t v3 = v47;
      int64_t v5 = v45;
      uint64_t v13 = v68;
      goto LABEL_41;
    }
    uint64_t v7 = v16;
    v94[0] = v59;
    v94[1] = v56;
    v94[2] = v70;
    v94[3] = v16;
    uint64_t v23 = v66;
    v94[4] = v66;
    int v24 = v57;
    char v95 = v57;
    uint64_t v72 = v69;
    MEMORY[0x270FA5388](v20);
    uint64_t v43 = (uint64_t)&v72;
    sub_220831F30(v7, v23, v24);
    sub_220831F30(v7, v23, v24);
    unint64_t v25 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v42, v7, v23, v24);
    sub_22080B6B4(v7, v23, v24);
    if (!v24)
    {
      uint64_t v26 = v7;
      if (v25) {
        goto LABEL_44;
      }
      goto LABEL_21;
    }
    if (v24 != 1) {
      break;
    }
    unint64_t v27 = *(void *)(v7 + 16);
    if (v25 == v27)
    {
      sub_22080B6B4(v7, v66, 1);
LABEL_54:
      uint64_t v52 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27) {
      goto LABEL_46;
    }
    uint64_t v26 = *(void *)(v55 + 16 * v25);
    sub_22080B6B4(v7, v66, 1);
LABEL_21:
    if (v72 < v26) {
      goto LABEL_56;
    }
    if (v22 < 0) {
      goto LABEL_50;
    }
    unint64_t v28 = *v21;
    if (!*v21) {
      goto LABEL_48;
    }
    if (v22 >= v28[1]) {
      goto LABEL_50;
    }
    double v29 = COERCE_DOUBLE(sub_2208915A0(v22, v28, v70));
    char v31 = v30;
    unint64_t v25 = (unint64_t)v94;
    uint64_t v14 = sub_2208937D4(v22);
    int v32 = v31 & 1;
    uint64_t v33 = v93;
    if (*(void *)(v93 + 16))
    {
      sub_22093F430();
      sub_22093F450();
      if (!v32) {
        sub_22093F480();
      }
      unint64_t v25 = (unint64_t)&v72;
      uint64_t v34 = sub_22093F490();
      uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
      unint64_t v36 = v34 & ~v35;
      if ((*(void *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
      {
        uint64_t v37 = ~v35;
        do
        {
          uint64_t v38 = *(void *)(v33 + 48) + 16 * v36;
          if (*(unsigned char *)(v38 + 8))
          {
            if (v32) {
              goto LABEL_11;
            }
          }
          else if (!v32 && *(double *)v38 == v29)
          {
            goto LABEL_11;
          }
          unint64_t v36 = (v36 + 1) & v37;
        }
        while (((*(void *)(v33 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) != 0);
      }
    }
    uint64_t v39 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v39 < v67) {
      goto LABEL_43;
    }
    sub_220869870(v67, v39);
    sub_220828D7C((uint64_t)&v72, *(uint64_t *)&v29, v32);
LABEL_11:
    int64_t v15 = v68;
    if (v68 == v65)
    {
      uint64_t v13 = v65;
      uint64_t v6 = v48;
      a1 = v49;
      uint64_t v4 = v46;
      uint64_t v3 = v47;
      int64_t v5 = v45;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    int v44 = 0;
    uint64_t v43 = 91;
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v69 = v52;
LABEL_56:
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v72 = 0x6E6F697469736F70;
  unint64_t v73 = 0xE900000000000020;
  uint64_t v71 = v69;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v44 = 0;
  uint64_t v43 = 169;
LABEL_57:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DE08C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = *(void *)v1;
  long long v51 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v48 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v90 = MEMORY[0x263F8EE88];
  long long v88 = 0uLL;
  char v89 = 2;
  sub_220883610(&v69);
  uint64_t v50 = v69;
  uint64_t v60 = v71;
  unint64_t v61 = v70;
  uint64_t v58 = v73;
  uint64_t v59 = v72;
  int v57 = v74;
  int64_t v5 = v76;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v47 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v67 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v62 = v77;
  uint64_t v63 = v8;
  uint64_t v9 = v7;
  int v10 = *(unsigned __int8 *)(v1 + 40);
  if (*(unsigned char *)(v1 + 40))
  {
    if (v10 == 1 && *(void *)(v7 + 16))
    {
      int v11 = (uint64_t *)(v7 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(v67 + 16);
      if (!v12)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v41 = 0;
        uint64_t v40 = 128;
        goto LABEL_57;
      }
      int v11 = (uint64_t *)(v12 + 8);
    }
    uint64_t v9 = *v11;
  }
  uint64_t v49 = v9;
  if (v5 == v62)
  {
    sub_22084312C(v1);
    uint64_t v13 = v5;
    uint64_t v14 = v49;
LABEL_41:
    uint64_t v69 = v50;
    unint64_t v70 = v61;
    uint64_t v71 = v60;
    uint64_t v72 = v59;
    uint64_t v73 = v58;
    unsigned __int8 v74 = v57;
    *(_DWORD *)uint64_t v75 = v68;
    *(_DWORD *)&v75[3] = *(_DWORD *)((char *)&v68 + 3);
    int64_t v76 = v5;
    uint64_t v77 = v62;
    uint64_t v78 = v13;
    uint64_t v79 = v56;
    long long v80 = v51;
    uint64_t v81 = v3;
    uint64_t v82 = v4;
    char v83 = v48;
    *(_DWORD *)uint64_t v84 = *(_DWORD *)v87;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v87[3];
    uint64_t v85 = v14;
    char v86 = 1;
    sub_2208C35A4((uint64_t)&v69);
    swift_bridgeObjectRelease();
    char v37 = v89;
    *(void *)a1 = v47;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v67;
    *(_OWORD *)(a1 + 24) = v88;
    *(unsigned char *)(a1 + 40) = v37;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  int v54 = v10;
  uint64_t v43 = v4;
  uint64_t v44 = v3;
  uint64_t v45 = v6;
  uint64_t v46 = a1;
  uint64_t v93 = v50;
  unint64_t v94 = v61;
  uint64_t v95 = v60;
  uint64_t v96 = v59;
  uint64_t v97 = v58;
  char v98 = v57;
  sub_22084312C(v1);
  uint64_t v55 = (void **)(v67 + 16);
  swift_beginAccess();
  uint64_t v52 = v7 + 32;
  uint64_t v53 = v51;
  int64_t v42 = v5;
  int64_t v15 = v5;
  uint64_t v14 = v49;
  while (1)
  {
    uint64_t v66 = v14;
    uint64_t v16 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = v58;
    uint64_t v18 = v59;
    char v19 = v57;
    sub_220831F30(v59, v58, v57);
    int64_t v64 = v15;
    uint64_t v65 = sub_2208937D4(v15);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_22080B6B4(v18, v17, v19);
    uint64_t v21 = v55;
    if (!*v55) {
      goto LABEL_47;
    }
    uint64_t v22 = v66;
    if (v66 == (*v55)[1])
    {
      uint64_t v14 = v66;
      uint64_t v6 = v45;
      a1 = v46;
      uint64_t v4 = v43;
      uint64_t v3 = v44;
      int64_t v5 = v42;
      uint64_t v13 = v65;
      goto LABEL_41;
    }
    uint64_t v7 = v16;
    v91[0] = v56;
    v91[1] = v53;
    v91[2] = v67;
    v91[3] = v16;
    uint64_t v23 = v63;
    v91[4] = v63;
    int v24 = v54;
    char v92 = v54;
    uint64_t v69 = v66;
    MEMORY[0x270FA5388](v20);
    uint64_t v40 = (uint64_t)&v69;
    sub_220831F30(v7, v23, v24);
    sub_220831F30(v7, v23, v24);
    unint64_t v25 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v39, v7, v23, v24);
    sub_22080B6B4(v7, v23, v24);
    if (!v24)
    {
      uint64_t v26 = v7;
      if (v25) {
        goto LABEL_44;
      }
      goto LABEL_21;
    }
    if (v24 != 1) {
      break;
    }
    unint64_t v27 = *(void *)(v7 + 16);
    if (v25 == v27)
    {
      sub_22080B6B4(v7, v63, 1);
LABEL_54:
      uint64_t v49 = v22;
      goto LABEL_55;
    }
    if (v25 >= v27) {
      goto LABEL_46;
    }
    uint64_t v26 = *(void *)(v52 + 16 * v25);
    sub_22080B6B4(v7, v63, 1);
LABEL_21:
    if (v69 < v26) {
      goto LABEL_56;
    }
    if (v22 < 0) {
      goto LABEL_50;
    }
    unint64_t v28 = *v21;
    if (!*v21) {
      goto LABEL_48;
    }
    if (v22 >= v28[1]) {
      goto LABEL_50;
    }
    uint64_t v29 = sub_220891788(v22, v28, v67);
    unint64_t v25 = (unint64_t)v91;
    uint64_t v14 = sub_2208937D4(v22);
    uint64_t v30 = v90;
    if (*(void *)(v90 + 16))
    {
      sub_22093F430();
      if (v29 != 2) {
        sub_22093F450();
      }
      sub_22093F450();
      unint64_t v25 = (unint64_t)&v69;
      uint64_t v31 = sub_22093F490();
      uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
      unint64_t v33 = v31 & ~v32;
      if ((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
      {
        uint64_t v34 = ~v32;
        do
        {
          int v35 = *(unsigned __int8 *)(*(void *)(v30 + 48) + v33);
          if (v35 == 2)
          {
            if (v29 == 2) {
              goto LABEL_11;
            }
          }
          else if v29 != 2 && ((((v29 & 1) == 0) ^ v35))
          {
            goto LABEL_11;
          }
          unint64_t v33 = (v33 + 1) & v34;
        }
        while (((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) != 0);
      }
    }
    uint64_t v36 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      if (v25 != 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_54;
    }
    if (v36 < v64) {
      goto LABEL_43;
    }
    sub_220869870(v64, v36);
    sub_220828C18(&v69, v29);
LABEL_11:
    int64_t v15 = v65;
    if (v65 == v62)
    {
      uint64_t v13 = v62;
      uint64_t v6 = v45;
      a1 = v46;
      uint64_t v4 = v43;
      uint64_t v3 = v44;
      int64_t v5 = v42;
      goto LABEL_41;
    }
  }
  if (v25)
  {
    int v41 = 0;
    uint64_t v40 = 91;
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v66 = v49;
LABEL_56:
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v69 = 0x6E6F697469736F70;
  unint64_t v70 = 0xE900000000000020;
  uint64_t v68 = v66;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v41 = 0;
  uint64_t v40 = 169;
LABEL_57:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DE7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = *(void *)v1;
  long long v56 = *(_OWORD *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v95 = MEMORY[0x263F8EE88];
  long long v93 = 0uLL;
  char v94 = 2;
  sub_220883610(&v74);
  uint64_t v55 = v74;
  uint64_t v65 = v76;
  unint64_t v66 = v75;
  uint64_t v63 = v78;
  uint64_t v64 = v77;
  int v62 = v79;
  uint64_t v6 = v81;
  uint64_t v8 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v72 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v67 = v82;
  uint64_t v68 = v10;
  uint64_t v61 = v9;
  int v59 = *(unsigned __int8 *)(v1 + 40);
  if (v59)
  {
    if (v59 == 1 && *(void *)(v61 + 16))
    {
      int v11 = (uint64_t *)(v61 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(v72 + 16);
      if (!v12)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        int v46 = 0;
        uint64_t v45 = 128;
        goto LABEL_64;
      }
      int v11 = (uint64_t *)(v12 + 8);
    }
    uint64_t v9 = *v11;
  }
  uint64_t v54 = v9;
  if (v6 == v67)
  {
    sub_22084312C(v1);
    uint64_t v13 = v6;
    uint64_t v14 = v54;
LABEL_48:
    uint64_t v74 = v55;
    unint64_t v75 = v66;
    uint64_t v76 = v65;
    uint64_t v77 = v64;
    uint64_t v78 = v63;
    unsigned __int8 v79 = v62;
    *(_DWORD *)long long v80 = v73;
    *(_DWORD *)&v80[3] = *(_DWORD *)((char *)&v73 + 3);
    uint64_t v81 = v6;
    uint64_t v82 = v67;
    uint64_t v83 = v13;
    uint64_t v84 = v60;
    long long v85 = v56;
    uint64_t v86 = v4;
    uint64_t v87 = v3;
    char v88 = v5;
    *(_DWORD *)char v89 = *(_DWORD *)v92;
    *(_DWORD *)&v89[3] = *(_DWORD *)&v92[3];
    uint64_t v90 = v14;
    char v91 = 1;
    sub_2208C35A4((uint64_t)&v74);
    swift_bridgeObjectRelease();
    char v42 = v94;
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v72;
    *(_OWORD *)(a1 + 24) = v93;
    *(unsigned char *)(a1 + 40) = v42;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  uint64_t v48 = v8;
  int v49 = v5;
  uint64_t v50 = v3;
  uint64_t v51 = v4;
  uint64_t v52 = v7;
  uint64_t v53 = a1;
  uint64_t v98 = v55;
  unint64_t v99 = v66;
  uint64_t v100 = v65;
  uint64_t v101 = v64;
  uint64_t v102 = v63;
  char v103 = v62;
  sub_22084312C(v1);
  uint64_t v71 = v72 + 16;
  swift_beginAccess();
  uint64_t v15 = 0;
  uint64_t v57 = v61 + 32;
  uint64_t v58 = v56;
  uint64_t v47 = v6;
  int64_t v16 = v6;
  uint64_t v14 = v54;
  while (1)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = v63;
    uint64_t v17 = v64;
    char v19 = v62;
    sub_220831F30(v64, v63, v62);
    uint64_t v13 = sub_2208937D4(v16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_22080B6B4(v17, v18, v19);
    if (!*(void *)v71) {
      goto LABEL_54;
    }
    uint64_t v21 = v14;
    uint64_t v22 = v61;
    int v23 = v59;
    if (v14 == *(void *)(*(void *)v71 + 8)) {
      goto LABEL_47;
    }
    int64_t v70 = v13;
    v96[0] = v60;
    v96[1] = v58;
    v96[2] = v72;
    v96[3] = v61;
    uint64_t v24 = v68;
    v96[4] = v68;
    char v97 = v59;
    uint64_t v74 = v14;
    MEMORY[0x270FA5388](v20);
    uint64_t v45 = (uint64_t)&v74;
    sub_220831F30(v22, v24, v23);
    sub_220831F30(v22, v24, v23);
    unint64_t v25 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v44, v22, v24, v23);
    sub_22080B6B4(v22, v24, v23);
    if (!v23)
    {
      uint64_t v26 = v22;
      if (v25) {
        goto LABEL_51;
      }
      goto LABEL_22;
    }
    if (v23 != 1) {
      break;
    }
    unint64_t v27 = *(void *)(v22 + 16);
    if (v25 == v27)
    {
      sub_22080B6B4(v22, v68, 1);
LABEL_61:
      uint64_t v54 = v21;
      goto LABEL_62;
    }
    if (v25 >= v27) {
      goto LABEL_53;
    }
    uint64_t v26 = *(void *)(v57 + 16 * v25);
    sub_22080B6B4(v22, v68, 1);
LABEL_22:
    if (v74 < v26) {
      goto LABEL_63;
    }
    if (v14 < 0) {
      goto LABEL_57;
    }
    unint64_t v28 = *(void **)v71;
    if (!*(void *)v71) {
      goto LABEL_55;
    }
    if (v14 >= v28[1]) {
      goto LABEL_57;
    }
    uint64_t v69 = v15;
    uint64_t v29 = sub_2208916D4(v14, v28, v72);
    uint64_t v21 = v30;
    unint64_t v25 = (unint64_t)v96;
    uint64_t v31 = sub_2208937D4(v14);
    uint64_t v32 = v95;
    if (*(void *)(v95 + 16))
    {
      sub_22093F430();
      sub_22093F450();
      swift_bridgeObjectRetain();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_22093E650();
        swift_bridgeObjectRelease();
      }
      uint64_t v33 = sub_22093F490();
      uint64_t v34 = -1 << *(unsigned char *)(v32 + 32);
      unint64_t v35 = v33 & ~v34;
      unint64_t v25 = v32 + 56;
      if ((*(void *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35))
      {
        uint64_t v36 = ~v34;
        uint64_t v37 = *(void *)(v32 + 48);
        do
        {
          uint64_t v38 = (void *)(v37 + 16 * v35);
          uint64_t v39 = v38[1];
          if (v39)
          {
            if (v21)
            {
              BOOL v40 = *v38 == v29 && v39 == v21;
              if (v40 || (sub_22093F250() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_12;
              }
            }
          }
          else if (!v21)
          {
            goto LABEL_12;
          }
          unint64_t v35 = (v35 + 1) & v36;
        }
        while (((*(void *)(v25 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) != 0);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v41 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      if (v25 != 1)
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      goto LABEL_61;
    }
    if (v41 < v16) {
      goto LABEL_50;
    }
    sub_220869870(v16, v41);
    swift_bridgeObjectRetain();
    sub_220828A4C(&v74, v29, v21);
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v14 = v31;
    uint64_t v15 = v69;
    int64_t v16 = v70;
    if (v70 == v67)
    {
      uint64_t v13 = v67;
LABEL_47:
      uint64_t v7 = v52;
      a1 = v53;
      uint64_t v3 = v50;
      uint64_t v4 = v51;
      LOBYTE(v5) = v49;
      uint64_t v6 = v47;
      uint64_t v8 = v48;
      goto LABEL_48;
    }
  }
  if (v25)
  {
    int v46 = 0;
    uint64_t v45 = 91;
    goto LABEL_64;
  }
LABEL_62:
  uint64_t v14 = v54;
LABEL_63:
  uint64_t v74 = 0;
  unint64_t v75 = 0xE000000000000000;
  sub_22093EEA0();
  swift_bridgeObjectRelease();
  uint64_t v74 = 0x6E6F697469736F70;
  unint64_t v75 = 0xE900000000000020;
  uint64_t v73 = v14;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  int v46 = 0;
  uint64_t v45 = 169;
LABEL_64:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DEF44@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v78 = *(void *)(v1 + 8);
  uint64_t v79 = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v87 = *(void *)(v1 + 16);
  uint64_t v80 = *(void *)(v1 + 32);
  int v91 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD411B8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v73 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v72 = (uint64_t)&v65 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v77 = (uint64_t)&v65 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (uint64_t)&v65 - v15;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F19650);
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (uint64_t *)((char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = MEMORY[0x263F8EE88];
  uint64_t v111 = 0;
  uint64_t v112 = 0;
  char v113 = 2;
  sub_220883610(&v94);
  unint64_t v85 = v95;
  uint64_t v86 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v96;
  uint64_t v82 = v98;
  int v81 = v99;
  uint64_t v17 = v100;
  uint64_t v88 = v101;
  uint64_t v19 = *(void *)v1;
  uint64_t v18 = *(void *)(v1 + 8);
  uint64_t v21 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    if (*(unsigned char *)(v1 + 40) == 1 && *(void *)(v20 + 16))
    {
      uint64_t v22 = (uint64_t *)(v20 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v23 = *(void *)(v21 + 16);
      if (!v23) {
        goto LABEL_41;
      }
      uint64_t v22 = (uint64_t *)(v23 + 8);
    }
    uint64_t v70 = *v22;
  }
  else
  {
    uint64_t v70 = *(void *)(v1 + 24);
  }
  uint64_t v66 = v19;
  uint64_t v67 = v18;
  uint64_t v68 = v21;
  uint64_t v69 = a1;
  sub_22084312C(v1);
  uint64_t v24 = v17;
  if (v17 == v88)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    char v27 = 2;
    uint64_t v28 = v17;
    uint64_t v29 = v80;
    uint64_t v30 = v70;
LABEL_33:
    uint64_t v94 = v86;
    unint64_t v95 = v85;
    uint64_t v96 = v84;
    uint64_t v97 = v83;
    uint64_t v98 = v82;
    unsigned __int8 v99 = v81;
    uint64_t v100 = v24;
    uint64_t v101 = v88;
    uint64_t v102 = v28;
    uint64_t v103 = v79;
    uint64_t v104 = v78;
    uint64_t v105 = v87;
    uint64_t v106 = v4;
    uint64_t v107 = v29;
    char v108 = v91;
    uint64_t v109 = v30;
    char v110 = 1;
    sub_2208C35A4((uint64_t)&v94);
    swift_bridgeObjectRelease();
    uint64_t v60 = v68;
    int v59 = v69;
    uint64_t v61 = v67;
    *uint64_t v69 = v66;
    v59[1] = v61;
    v59[2] = v60;
    v59[3] = v26;
    v59[4] = v25;
    *((unsigned char *)v59 + 40) = v27;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  char v89 = v12;
  uint64_t v90 = (void **)(v87 + 16);
  uint64_t v71 = v4 + 32;
  uint64_t v92 = v70;
  uint64_t v65 = v17;
  int64_t v31 = v17;
  while (1)
  {
    uint64_t v32 = v4;
    v121[0] = v86;
    v121[1] = v85;
    uint64_t v33 = v83;
    v121[2] = v84;
    v121[3] = v83;
    uint64_t v34 = v82;
    v121[4] = v82;
    char v35 = v81;
    char v122 = v81;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_220831F30(v33, v34, v35);
    uint64_t v28 = sub_2208937D4(v31);
    sub_220843060((uint64_t)v121);
    uint64_t v36 = v90;
    uint64_t v37 = swift_beginAccess();
    if (!*v36) {
      goto LABEL_39;
    }
    uint64_t v30 = v92;
    if (v92 == (*v36)[1])
    {
      uint64_t v29 = v80;
      uint64_t v4 = v32;
LABEL_32:
      uint64_t v26 = v111;
      uint64_t v25 = v112;
      char v27 = v113;
      uint64_t v24 = v65;
      goto LABEL_33;
    }
    uint64_t v94 = v92;
    MEMORY[0x270FA5388](v37);
    uint64_t v63 = (uint64_t)&v94;
    uint64_t v38 = v80;
    int v39 = v91;
    sub_220831F30(v32, v80, v91);
    sub_220831F30(v32, v38, v39);
    unint64_t v40 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)(&v65 - 4), v32, v38, v39);
    sub_22080B6B4(v32, v38, v39);
    if (!v39) {
      break;
    }
    if (v91 != 1)
    {
      if (v40)
      {
        int v64 = 0;
        uint64_t v63 = 91;
        goto LABEL_49;
      }
      goto LABEL_47;
    }
    unint64_t v42 = *(void *)(v32 + 16);
    if (v40 == v42)
    {
      sub_22080B6B4(v32, v38, 1);
LABEL_46:
      uint64_t v70 = v92;
LABEL_47:
      uint64_t v92 = v70;
LABEL_48:
      uint64_t v94 = 0;
      unint64_t v95 = 0xE000000000000000;
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      uint64_t v94 = 0x6E6F697469736F70;
      unint64_t v95 = 0xE900000000000020;
      uint64_t v93 = v92;
      sub_22093F1A0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      int v64 = 0;
      uint64_t v63 = 169;
      goto LABEL_49;
    }
    if (v40 >= v42) {
      goto LABEL_36;
    }
    uint64_t v41 = *(void *)(v71 + 16 * v40);
    sub_22080B6B4(v32, v38, 1);
LABEL_22:
    int64_t v43 = v28;
    uint64_t v44 = v92;
    if (v94 < v41) {
      goto LABEL_48;
    }
    uint64_t v45 = (uint64_t)v89;
    if (v92 < 0) {
      goto LABEL_42;
    }
    int v46 = *v90;
    if (!*v90) {
      goto LABEL_40;
    }
    if (v92 >= v46[1]) {
      goto LABEL_42;
    }
    uint64_t v4 = v32;
    uint64_t v47 = v87;
    uint64_t v48 = v77;
    sub_220891810(v92, v46, v77);
    uint64_t v115 = v79;
    uint64_t v116 = v78;
    uint64_t v117 = v47;
    uint64_t v118 = v4;
    uint64_t v119 = v38;
    char v120 = v91;
    uint64_t v92 = sub_2208937D4(v44);
    uint64_t v49 = v76;
    sub_220834D3C(v48, v76, qword_26AD411B8);
    uint64_t v50 = v74;
    uint64_t v51 = *(int *)(v75 + 48);
    uint64_t v52 = (uint64_t)v74 + v51;
    *uint64_t v74 = v31;
    sub_220834D3C(v49, (uint64_t)v50 + v51, qword_26AD411B8);
    sub_220834D3C(v52, v45, qword_26AD411B8);
    uint64_t v53 = v114;
    swift_bridgeObjectRetain();
    uint64_t v54 = v45;
    char v55 = sub_220813D28(v45, v53);
    swift_bridgeObjectRelease();
    if ((v55 & 1) == 0)
    {
      uint64_t v56 = v31 + 1;
      if (__OFADD__(v31, 1)) {
        goto LABEL_37;
      }
      if (v56 < v31) {
        goto LABEL_38;
      }
      sub_220869870(v31, v56);
      uint64_t v54 = (uint64_t)v89;
      uint64_t v57 = v73;
      sub_220835280((uint64_t)v89, v73, qword_26AD411B8);
      uint64_t v58 = v72;
      sub_2208283E0(v72, v57);
      sub_2208352E4(v58, qword_26AD411B8);
    }
    sub_2208352E4(v54, qword_26AD411B8);
    int64_t v31 = v43;
    if (v43 == v88)
    {
      uint64_t v28 = v88;
      uint64_t v29 = v80;
      uint64_t v30 = v92;
      goto LABEL_32;
    }
  }
  uint64_t v41 = v32;
  if (!v40) {
    goto LABEL_22;
  }
  if (v40 == 1) {
    goto LABEL_46;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  int v64 = 0;
  uint64_t v63 = 128;
LABEL_49:
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208DF734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v58 = *(void *)(v1 + 8);
  uint64_t v59 = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v66 = *(void *)(v1 + 16);
  uint64_t v67 = v5;
  int v6 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v92 = MEMORY[0x263F8EE88];
  long long v90 = 0uLL;
  char v91 = 2;
  sub_220883610(&v70);
  unint64_t v64 = v71;
  uint64_t v65 = v70;
  uint64_t v62 = v73;
  uint64_t v63 = v72;
  uint64_t v61 = v74;
  int v60 = v75;
  uint64_t v7 = v77;
  uint64_t v8 = v78;
  uint64_t v10 = *(void *)v1;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 40))
  {
    if (*(unsigned char *)(v1 + 40) == 1 && *(void *)(v11 + 16))
    {
      uint64_t v13 = (uint64_t *)(v11 + 32);
    }
    else
    {
      swift_beginAccess();
      uint64_t v14 = *(void *)(v12 + 16);
      if (!v14)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        int v48 = 0;
        uint64_t v47 = 128;
LABEL_57:
        uint64_t result = sub_22093F090();
        __break(1u);
        return result;
      }
      uint64_t v13 = (uint64_t *)(v14 + 8);
    }
    uint64_t v54 = *v13;
  }
  else
  {
    uint64_t v54 = *(void *)(v1 + 24);
  }
  sub_22084312C(v1);
  if (v7 != v8)
  {
    uint64_t v57 = v8;
    uint64_t v50 = v10;
    uint64_t v51 = v9;
    uint64_t v52 = v12;
    uint64_t v53 = a1;
    uint64_t v68 = (void **)(v66 + 16);
    uint64_t v55 = v4 + 32;
    uint64_t v49 = v7;
    uint64_t v8 = v7;
    uint64_t v18 = v54;
    int v56 = v6;
    while (1)
    {
      int64_t v19 = v8;
      v99[0] = v65;
      v99[1] = v64;
      uint64_t v20 = v62;
      void v99[2] = v63;
      v99[3] = v62;
      uint64_t v21 = v61;
      v99[4] = v61;
      char v22 = v60;
      char v100 = v60;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_220831F30(v20, v21, v22);
      uint64_t v8 = sub_2208937D4(v19);
      sub_220843060((uint64_t)v99);
      uint64_t v23 = v68;
      uint64_t v24 = swift_beginAccess();
      if (!*v23) {
        goto LABEL_47;
      }
      if (v18 == (*v23)[1])
      {
        char v15 = 1;
        goto LABEL_39;
      }
      uint64_t v93 = v59;
      uint64_t v94 = v58;
      uint64_t v25 = v67;
      uint64_t v95 = v66;
      uint64_t v96 = v4;
      uint64_t v97 = v67;
      char v98 = v6;
      uint64_t v70 = v18;
      MEMORY[0x270FA5388](v24);
      uint64_t v47 = (uint64_t)&v70;
      sub_220831F30(v4, v25, v6);
      sub_220831F30(v4, v25, v6);
      unint64_t v26 = sub_2208FD268((uint64_t (*)(long long *))sub_220894728, (uint64_t)&v46, v4, v25, v6);
      sub_22080B6B4(v4, v25, v6);
      if (v6)
      {
        if (v6 != 1)
        {
          if (v26)
          {
            int v48 = 0;
            uint64_t v47 = 91;
            goto LABEL_57;
          }
          goto LABEL_55;
        }
        unint64_t v28 = *(void *)(v4 + 16);
        if (v26 == v28)
        {
          sub_22080B6B4(v4, v67, 1);
          goto LABEL_54;
        }
        if (v26 >= v28) {
          goto LABEL_44;
        }
        uint64_t v27 = *(void *)(v55 + 16 * v26);
        sub_22080B6B4(v4, v67, 1);
      }
      else
      {
        uint64_t v27 = v4;
        if (v26) {
          goto LABEL_42;
        }
      }
      if (v70 < v27) {
        goto LABEL_56;
      }
      if (v18 < 0) {
        goto LABEL_50;
      }
      uint64_t v29 = *v68;
      if (!*v68) {
        goto LABEL_48;
      }
      if (v18 >= v29[1]) {
        goto LABEL_50;
      }
      uint64_t v30 = v29 + 8;
      if ((*((unsigned __int8 *)v29 + ((unint64_t)v18 >> 3) + 64) >> (v18 & 7)))
      {
        uint64_t v31 = *v29;
        BOOL v32 = __OFADD__(v31, 7);
        uint64_t v33 = v31 + 7;
        if (v32)
        {
          __break(1u);
LABEL_42:
          if (v26 != 1)
          {
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_54:
          uint64_t v54 = v18;
LABEL_55:
          uint64_t v18 = v54;
LABEL_56:
          uint64_t v70 = 0;
          unint64_t v71 = 0xE000000000000000;
          sub_22093EEA0();
          swift_bridgeObjectRelease();
          uint64_t v70 = 0x6E6F697469736F70;
          unint64_t v71 = 0xE900000000000020;
          uint64_t v69 = v18;
          sub_22093F1A0();
          sub_22093E6C0();
          swift_bridgeObjectRelease();
          sub_22093E6C0();
          int v48 = 0;
          uint64_t v47 = 169;
          goto LABEL_57;
        }
        uint64_t v34 = v33 / 8;
        uint64_t v36 = v34 - 1;
        BOOL v35 = v34 < 1;
        uint64_t v37 = v34 + 62;
        if (!v35) {
          uint64_t v37 = v36;
        }
        unint64_t v38 = (unint64_t)&v30[2 * v18] + (v37 & 0xFFFFFFFFFFFFFFC0);
        uint64_t v39 = *(void *)(v38 + 64);
        unint64_t v40 = *(void *)(v38 + 72);
        sub_22080B7F4(v39, v40);
        uint64_t v18 = sub_2208937D4(v18);
        if (v40 >> 60 == 11)
        {
          char v15 = 0;
LABEL_39:
          uint64_t v17 = v18;
          uint64_t v12 = v52;
          a1 = v53;
          uint64_t v10 = v50;
          uint64_t v9 = v51;
          uint64_t v7 = v49;
          uint64_t v16 = v57;
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v18 = sub_2208937D4(v18);
        uint64_t v39 = 0;
        unint64_t v40 = 0xF000000000000000;
      }
      uint64_t v41 = v92;
      swift_bridgeObjectRetain();
      char v42 = sub_2208131D0(v39, v40, v41);
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
      {
        uint64_t v43 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_45;
        }
        if (v43 < v19) {
          goto LABEL_46;
        }
        sub_220869870(v19, v43);
        sub_220834CD4(v39, v40);
        sub_2208277C8(&v70, v39, v40);
        sub_220834944(v70, v71);
      }
      sub_220834944(v39, v40);
      int v6 = v56;
      if (v8 == v57)
      {
        char v15 = 1;
        uint64_t v17 = v18;
        uint64_t v16 = v57;
        uint64_t v8 = v57;
        uint64_t v12 = v52;
        a1 = v53;
        uint64_t v10 = v50;
        uint64_t v9 = v51;
        uint64_t v7 = v49;
        goto LABEL_40;
      }
    }
  }
  char v15 = 1;
  uint64_t v16 = v8;
  uint64_t v17 = v54;
LABEL_40:
  uint64_t v70 = v65;
  unint64_t v71 = v64;
  uint64_t v72 = v63;
  uint64_t v73 = v62;
  uint64_t v74 = v61;
  unsigned __int8 v75 = v60;
  *(_DWORD *)uint64_t v76 = v69;
  *(_DWORD *)&uint64_t v76[3] = *(_DWORD *)((char *)&v69 + 3);
  uint64_t v77 = v7;
  uint64_t v78 = v16;
  uint64_t v79 = v8;
  uint64_t v80 = v59;
  uint64_t v81 = v58;
  uint64_t v82 = v66;
  uint64_t v83 = v4;
  uint64_t v84 = v67;
  char v85 = v6;
  *(_DWORD *)uint64_t v86 = *(_DWORD *)v89;
  *(_DWORD *)&v86[3] = *(_DWORD *)&v89[3];
  uint64_t v87 = v17;
  char v88 = v15;
  sub_2208C35A4((uint64_t)&v70);
  swift_bridgeObjectRelease();
  char v44 = v91;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v90;
  *(unsigned char *)(a1 + 40) = v44;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2208DFDF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  return v7(v2, v3, v4, v6);
}

uint64_t AnyColumnSlice.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 16))(a1, a2, v5);
}

uint64_t (*AnyColumnSlice.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *a1 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v3);
  a1[1] = v5;
  return sub_2208DFF58;
}

uint64_t sub_2208DFF58(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v6);
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16);
  if ((a2 & 1) == 0) {
    return v9(v5, v4, v6, v8);
  }
  swift_bridgeObjectRetain();
  v9(v5, v4, v6, v8);

  return swift_bridgeObjectRelease();
}

uint64_t AnyColumnSlice.count.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 48))(v2);
}

Swift::Bool __swiftcall AnyColumnSlice.isNil(at:)(Swift::Int at)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 96))(at, v3) & 1;
}

uint64_t AnyColumnSlice.hashValue.getter()
{
  sub_22093F430();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t sub_2208E011C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v2);
}

uint64_t sub_2208E0168(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 16))(a1, a2, v5);
}

uint64_t (*sub_2208E01D4(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *a1 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v3);
  a1[1] = v5;
  return sub_2208DFF58;
}

uint64_t sub_2208E0254()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 80))(v2);
}

uint64_t sub_2208E02A0(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 128))(a1, v3);
}

uint64_t AnyColumnSlice.subscript.getter(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 128))(a1, v3);
}

uint64_t sub_2208E0378(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 144))(a1, a2, v5);
}

uint64_t AnyColumnSlice.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 144))(a1, a2, v5);
}

uint64_t sub_2208E0460()
{
  sub_22093F430();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t AnyColumnSlice.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 8))(v4);
  sub_22093E650();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 48))(v6);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8)
  {
LABEL_13:
    sub_2208E2274(a1, v9);
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = v8;
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_220826C38(0, v8 & ~(v8 >> 63), 0);
  uint64_t v11 = v2[3];
  uint64_t v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 32))(v11);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = result;
    do
    {
      uint64_t v15 = v2[3];
      uint64_t v16 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v15);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v16 + 8) + 128))(v24, v14, v15);
      sub_220834D3C((uint64_t)v24, (uint64_t)v23, qword_26AD40FF8);
      sub_220835280((uint64_t)v23, (uint64_t)v21, qword_26AD40FF8);
      if (v22)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v27 = 0;
          long long v25 = 0u;
          long long v26 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v21, qword_26AD40FF8);
        long long v25 = 0u;
        long long v26 = 0u;
        uint64_t v27 = 0;
      }
      sub_2208352E4((uint64_t)v23, qword_26AD40FF8);
      uint64_t v9 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v28;
      }
      unint64_t v18 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_220826C38((void *)(v17 > 1), v18 + 1, 1);
        uint64_t v9 = v28;
      }
      *(void *)(v9 + 16) = v18 + 1;
      sub_220834D3C((uint64_t)&v25, v9 + 40 * v18 + 32, &qword_267F18658);
      uint64_t v19 = v2[3];
      uint64_t v20 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v19);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 + 8) + 64))(v14, v19);
      --v10;
    }
    while (v10);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2208E077C()
{
  sub_22093F430();
  AnyColumnSlice.hash(into:)((uint64_t)v1);
  return sub_22093F490();
}

uint64_t AnyColumnSlice.startIndex.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 32))(v2);
}

uint64_t AnyColumnSlice.endIndex.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 40))(v2);
}

Swift::Int __swiftcall AnyColumnSlice.index(after:)(Swift::Int after)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 64))(after, v3);
}

Swift::Int __swiftcall AnyColumnSlice.index(before:)(Swift::Int before)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(Swift::Int, uint64_t))(*(void *)(v4 + 8) + 72))(before, v3);
}

uint64_t sub_2208E0910(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  sub_220835280(a1, (uint64_t)v8, qword_26AD40FF8);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v6 + 8) + 136))(v4, v8, v5);
  return sub_2208352E4((uint64_t)v8, qword_26AD40FF8);
}

uint64_t AnyColumnSlice.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 136))(a2, a1, v5);
  return sub_2208352E4(a1, qword_26AD40FF8);
}

void (*AnyColumnSlice.subscript.modify(void *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x50uLL);
  *a1 = v5;
  v5[8] = a2;
  v5[9] = v2;
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 + 8) + 128))(a2, v6);
  return sub_2208E0AC0;
}

void sub_2208E0AC0(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[8];
    uint64_t v3 = v2[9];
    sub_220835280(*a1, (uint64_t)(v2 + 4), qword_26AD40FF8);
    uint64_t v5 = *(void *)(v3 + 24);
    uint64_t v6 = *(void *)(v3 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v3, v5);
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v6 + 8) + 136))(v4, v2 + 4, v5);
    sub_2208352E4((uint64_t)(v2 + 4), qword_26AD40FF8);
  }
  else
  {
    uint64_t v8 = v2[8];
    uint64_t v7 = v2[9];
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v10 = *(void *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v10 + 8) + 136))(v8, v2, v9);
  }
  sub_2208352E4((uint64_t)v2, qword_26AD40FF8);

  free(v2);
}

uint64_t sub_2208E0BC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  sub_220833C28(a1, (uint64_t)v9);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v6);
  (*(void (**)(uint64_t, uint64_t, unsigned char *, uint64_t))(*(void *)(v7 + 8) + 152))(v4, v5, v9, v6);
  return sub_220833C84((uint64_t)v9);
}

uint64_t AnyColumnSlice.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + 152))(a2, a3, a1, v7);

  return sub_220833C84(a1);
}

void (*AnyColumnSlice.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + 144))(a2, a3, v8);
  return sub_2208E0D88;
}

void sub_2208E0D88(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[11];
    uint64_t v3 = v2[12];
    uint64_t v5 = v2[10];
    sub_220833C28(*a1, (uint64_t)(v2 + 5));
    uint64_t v6 = *(void *)(v3 + 24);
    uint64_t v7 = *(void *)(v3 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v3, v6);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)(v7 + 8) + 152))(v5, v4, v2 + 5, v6);
    sub_220833C84((uint64_t)(v2 + 5));
  }
  else
  {
    uint64_t v9 = v2[11];
    uint64_t v8 = v2[12];
    uint64_t v10 = v2[10];
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)(v8 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)(v12 + 8) + 152))(v10, v9, v2, v11);
  }
  sub_220833C84((uint64_t)v2);

  free(v2);
}

uint64_t sub_2208E0E8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 136))(v4, a1, v5);
  return sub_2208352E4(a1, qword_26AD40FF8);
}

void (*sub_2208E0F08(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x50uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  v5[8] = v2;
  v5[9] = v6;
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 + 8) + 128))(v6, v7);
  return sub_2208E0FA8;
}

void sub_2208E0FA8(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[8];
    uint64_t v3 = v2[9];
    sub_220835280(*a1, (uint64_t)(v2 + 4), qword_26AD40FF8);
    uint64_t v5 = *(void *)(v4 + 24);
    uint64_t v6 = *(void *)(v4 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v6 + 8) + 136))(v3, v2 + 4, v5);
    sub_2208352E4((uint64_t)(v2 + 4), qword_26AD40FF8);
  }
  else
  {
    uint64_t v7 = v2[8];
    uint64_t v8 = v2[9];
    uint64_t v9 = *(void *)(v7 + 24);
    uint64_t v10 = *(void *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v10 + 8) + 136))(v8, v2, v9);
  }
  sub_2208352E4((uint64_t)v2, qword_26AD40FF8);

  free(v2);
}

uint64_t sub_2208E10B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 152))(v4, v5, a1, v6);

  return sub_220833C84(a1);
}

void (*sub_2208E1134(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x68uLL);
  *a1 = v5;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  v5[10] = v2;
  v5[11] = v7;
  v5[12] = v6;
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + 144))(v7, v6, v8);
  return sub_2208E11E4;
}

void sub_2208E11E4(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = v2[11];
    uint64_t v3 = v2[12];
    uint64_t v5 = v2[10];
    sub_220833C28(*a1, (uint64_t)(v2 + 5));
    uint64_t v6 = *(void *)(v5 + 24);
    uint64_t v7 = *(void *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)(v7 + 8) + 152))(v4, v3, v2 + 5, v6);
    sub_220833C84((uint64_t)(v2 + 5));
  }
  else
  {
    uint64_t v9 = v2[11];
    uint64_t v8 = v2[12];
    uint64_t v10 = v2[10];
    uint64_t v11 = *(void *)(v10 + 24);
    uint64_t v12 = *(void *)(v10 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)(v12 + 8) + 152))(v9, v8, v2, v11);
  }
  sub_220833C84((uint64_t)v2);

  free(v2);
}

uint64_t sub_2208E12E4@<X0>(uint64_t (*a1)(unsigned char *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_22092D044(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_2208E1310(void *a1, void *a2)
{
  return sub_2209290D0(*a1, *a2);
}

uint64_t sub_2208E131C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 + 8) + 72))(v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_2208E1388(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 72))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_2208E13F4(void *a1, void *a2)
{
  return sub_220929794(*a1, *a2);
}

uint64_t sub_2208E1400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 32))(v5);
  *a1 = result;
  return result;
}

uint64_t sub_2208E145C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 40))(v5);
  *a1 = result;
  return result;
}

uint64_t (*sub_2208E14B8(uint64_t a1, uint64_t *a2))(uint64_t a1)
{
  uint64_t v3 = *a2;
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 128))(v3, v4);
  return sub_2208E1540;
}

uint64_t sub_2208E1540(uint64_t a1)
{
  return sub_2208352E4(a1, qword_26AD40FF8);
}

uint64_t sub_2208E1560(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + 144))(v2, v3, v4);
}

uint64_t sub_2208E15D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 32))(v5);
  uint64_t v8 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 40))(v8);
  if (result < v6)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = result;
  }
  return result;
}

BOOL sub_2208E1678()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 32))(v3);
  uint64_t v6 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  return v4 == (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 40))(v6);
}

void *sub_2208E170C@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v3;
    uint64_t v8 = v3[3];
    uint64_t v7 = v3[4];
    __swift_project_boxed_opaque_existential_1(v6, v8);
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 32))(v8);
    uint64_t v11 = v6[3];
    uint64_t v10 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v11);
    uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v10 + 8) + 40))(v11);
    if (v5 >= v9 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2208E17C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_2209295B8(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_2208E1800(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_2208E181C(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_2208E1838(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

uint64_t sub_2208E1854@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 + 8) + 64))(v4, v5);
  *a2 = result;
  return result;
}

uint64_t sub_2208E18C0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 64))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_2208E192C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)v1;
  sub_220833C28(v1, a1);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 32))(v5);
  uint64_t result = sub_220833C84((uint64_t)v2);
  *(void *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_2208E19A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 48))(v2);
}

uint64_t sub_2208E19F0()
{
  uint64_t v1 = sub_2208377C8(v0);
  sub_220833C84((uint64_t)v0);
  return v1;
}

uint64_t _s11TabularData14AnyColumnSliceV11descriptionSSvg_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 168))(v2);
}

uint64_t AnyColumnSlice.customMirror.getter()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 176))(v3);
}

uint64_t sub_2208E1ADC()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 176))(v3);
}

uint64_t AnyColumnSlice.distinct()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  (*(void (**)(uint64_t))(*(void *)(v4 + 8) + 80))(v5);
  if (swift_dynamicCastMetatype())
  {
    sub_220841C58((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AA0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v6 = swift_allocObject();
    *a1 = v6;
    sub_2208DC3D4(v6 + 16);
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220841EBC((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AB0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v7 = swift_allocObject();
    *a1 = v7;
    sub_2208DCAFC(v7 + 16);
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220842128((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AC0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v8 = swift_allocObject();
    *a1 = v8;
    sub_2208DD224(v8 + 16);
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220842390((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AD0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v9 = swift_allocObject();
    *a1 = v9;
    sub_2208DD95C(v9 + 16);
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_2208425F8((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AE0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v10 = swift_allocObject();
    *a1 = v10;
    sub_2208DE08C(v10 + 16);
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_22084285C((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18AF0);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v11 = swift_allocObject();
    *a1 = v11;
    sub_2208DE7C4(v11 + 16);
    return sub_220843060((uint64_t)v15);
  }
  sub_22093E100();
  if (swift_dynamicCastMetatype())
  {
    sub_220842AC4((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B00);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v12 = swift_allocObject();
    *a1 = v12;
    sub_2208DEF44((void *)(v12 + 16));
    return sub_220843060((uint64_t)v15);
  }
  if (swift_dynamicCastMetatype())
  {
    sub_220842D2C((uint64_t)v15);
    a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18B10);
    a1[4] = (uint64_t)&off_26D223748;
    uint64_t v13 = swift_allocObject();
    *a1 = v13;
    sub_2208DF734(v13 + 16);
    return sub_220843060((uint64_t)v15);
  }

  return sub_2208E1EC8();
}

uint64_t sub_2208E1EC8()
{
  uint64_t v1 = v0;
  uint64_t v33 = MEMORY[0x263F8EE88];
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  unsigned __int8 v32 = 2;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  int64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 32))(v3);
  uint64_t v6 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 40))(v6);
  if (v7 < v4)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_2208352E4((uint64_t)&v24, &qword_267F18658);
    sub_220833C28((uint64_t)v1, (uint64_t)&v27);
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    *(void *)&long long v24 = 0xD00000000000002ALL;
    *((void *)&v24 + 1) = 0x8000000220940D00;
    uint64_t v20 = *((void *)&v28 + 1);
    uint64_t v21 = v29;
    __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
    (*(void (**)(uint64_t))(*(void *)(v21 + 8) + 80))(v20);
    sub_22093F530();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22093F090();
    __break(1u);
    return result;
  }
  int64_t v8 = v7;
  if (v4 != v7)
  {
    while (v4 < v8)
    {
      uint64_t v13 = v1[3];
      uint64_t v12 = v1[4];
      __swift_project_boxed_opaque_existential_1(v1, v13);
      (*(void (**)(long long *__return_ptr, int64_t, uint64_t))(*(void *)(v12 + 8) + 128))(&v27, v4, v13);
      if (*((void *)&v28 + 1))
      {
        sub_220835340(&v27, v23);
        sub_220835350((uint64_t)v23, (uint64_t)v22);
        if (!swift_dynamicCast()) {
          goto LABEL_17;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        long long v27 = v24;
        long long v28 = v25;
        uint64_t v29 = v26;
      }
      else
      {
        sub_2208352E4((uint64_t)&v27, qword_26AD40FF8);
        long long v27 = 0u;
        long long v28 = 0u;
        uint64_t v29 = 0;
      }
      int64_t v14 = v4 + 1;
      uint64_t v15 = v33;
      swift_bridgeObjectRetain();
      char v16 = sub_220812FA4((uint64_t)&v27, v15);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        sub_220835280((uint64_t)&v27, (uint64_t)v23, &qword_267F18658);
        sub_2208274E4((uint64_t)&v24, (uint64_t)v23);
        sub_2208352E4((uint64_t)&v24, &qword_267F18658);
        sub_220869870(v4, v4 + 1);
      }
      sub_2208352E4((uint64_t)&v27, &qword_267F18658);
      ++v4;
      if (v8 == v14)
      {
        uint64_t v10 = v30;
        uint64_t v9 = v31;
        uint64_t v11 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 2;
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v17 = v1[3];
  uint64_t v18 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 160))(v10, v9, v11, v17);
  return sub_22080B6B4(v10, v9, v11);
}

uint64_t sub_2208E2274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_22093F440();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      sub_220835280(v5, (uint64_t)&v8, &qword_267F18658);
      if (*((void *)&v9 + 1))
      {
        v6[0] = v8;
        v6[1] = v9;
        uint64_t v7 = v10;
        sub_22093F450();
        sub_22093EE60();
        uint64_t result = sub_220834CE8((uint64_t)v6);
      }
      else
      {
        uint64_t result = sub_22093F450();
      }
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s11TabularData14AnyColumnSliceV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v5);
  uint64_t v8 = v7;
  uint64_t v10 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  if (v6 == (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_220833C28((uint64_t)a1, (uint64_t)v55);
    sub_220833C28((uint64_t)a2, (uint64_t)v52);
  }
  else
  {
    char v13 = sub_22093F250();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_220833C28((uint64_t)a1, (uint64_t)v55);
    sub_220833C28((uint64_t)a2, (uint64_t)v52);
    char v14 = 0;
    if ((v13 & 1) == 0) {
      goto LABEL_33;
    }
  }
  uint64_t v15 = v56;
  uint64_t v16 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v16 + 8) + 48))(v15);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v19 = v17;
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_220826C38(0, v17 & ~(v17 >> 63), 0);
    uint64_t v20 = v56;
    uint64_t v21 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 32))(v20);
    if (v19 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v23 = result;
    do
    {
      uint64_t v24 = v56;
      uint64_t v25 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v25 + 8) + 128))(v47, v23, v24);
      sub_220834D3C((uint64_t)v47, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v50 = 0;
          long long v48 = 0u;
          long long v49 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v44, qword_26AD40FF8);
        long long v48 = 0u;
        long long v49 = 0u;
        uint64_t v50 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v18 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v51;
      }
      unint64_t v27 = *(void *)(v18 + 16);
      unint64_t v26 = *(void *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_220826C38((void *)(v26 > 1), v27 + 1, 1);
        uint64_t v18 = v51;
      }
      *(void *)(v18 + 16) = v27 + 1;
      sub_220834D3C((uint64_t)&v48, v18 + 40 * v27 + 32, &qword_267F18658);
      uint64_t v29 = v56;
      uint64_t v28 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 + 8) + 64))(v23, v29);
      --v19;
    }
    while (v19);
  }
  uint64_t v31 = v53;
  uint64_t v30 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)(v30 + 8) + 48))(v31);
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (!v32)
  {
LABEL_32:
    char v14 = sub_220818678(v18, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_220833C84((uint64_t)v52);
    sub_220833C84((uint64_t)v55);
    return v14 & 1;
  }
  uint64_t v34 = v32;
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_220826C38(0, v32 & ~(v32 >> 63), 0);
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v35 + 8) + 32))(v36);
  if ((v34 & 0x8000000000000000) == 0)
  {
    uint64_t v37 = result;
    do
    {
      uint64_t v39 = v53;
      uint64_t v38 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v38 + 8) + 128))(v47, v37, v39);
      sub_220834D3C((uint64_t)v47, (uint64_t)v46, qword_26AD40FF8);
      sub_220835280((uint64_t)v46, (uint64_t)v44, qword_26AD40FF8);
      if (v45)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v50 = 0;
          long long v48 = 0u;
          long long v49 = 0u;
        }
      }
      else
      {
        sub_2208352E4((uint64_t)v44, qword_26AD40FF8);
        long long v48 = 0u;
        long long v49 = 0u;
        uint64_t v50 = 0;
      }
      sub_2208352E4((uint64_t)v46, qword_26AD40FF8);
      uint64_t v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_220826C38(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v51;
      }
      unint64_t v41 = *(void *)(v33 + 16);
      unint64_t v40 = *(void *)(v33 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_220826C38((void *)(v40 > 1), v41 + 1, 1);
        uint64_t v33 = v51;
      }
      *(void *)(v33 + 16) = v41 + 1;
      sub_220834D3C((uint64_t)&v48, v33 + 40 * v41 + 32, &qword_267F18658);
      uint64_t v43 = v53;
      uint64_t v42 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 + 8) + 64))(v37, v43);
      --v34;
    }
    while (v34);
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_22080B6B4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 57, 7);
}

unint64_t sub_2208E2954()
{
  unint64_t result = qword_267F19618;
  if (!qword_267F19618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19618);
  }
  return result;
}

unint64_t sub_2208E29AC()
{
  unint64_t result = qword_267F19620;
  if (!qword_267F19620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19620);
  }
  return result;
}

unint64_t sub_2208E2A04()
{
  unint64_t result = qword_267F19628;
  if (!qword_267F19628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19628);
  }
  return result;
}

unint64_t sub_2208E2A5C()
{
  unint64_t result = qword_267F19630;
  if (!qword_267F19630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19630);
  }
  return result;
}

unint64_t sub_2208E2AB4()
{
  unint64_t result = qword_267F19638;
  if (!qword_267F19638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19638);
  }
  return result;
}

unint64_t sub_2208E2B0C()
{
  unint64_t result = qword_267F19640;
  if (!qword_267F19640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19640);
  }
  return result;
}

unint64_t sub_2208E2B64()
{
  unint64_t result = qword_267F19648;
  if (!qword_267F19648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267F18908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267F19648);
  }
  return result;
}

uint64_t sub_2208E2BC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2208E2C1C(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 128))(v2, v3);
}

uint64_t sub_2208E2C84()
{
  return 0;
}

uint64_t sub_2208E2C94(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + 144))(v2, v3, v4);
}

uint64_t sub_2208E2D08()
{
  return 0;
}

uint64_t destroy for AnyColumn(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for AnyColumn(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyColumn(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for AnyColumn(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AnyColumnSlice()
{
  return &type metadata for AnyColumnSlice;
}

double DataFrame.explodeColumn<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  void v10[2] = *v3;
  v10[3] = v6;
  v10[4] = v7;
  v10[0] = v4;
  v10[1] = v5;
  DataFrame.explodingColumn<A>(_:)(v10, a2, a3, &v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v12;
  double result = *(double *)&v11;
  *(_OWORD *)long long v3 = v11;
  v3[2] = v8;
  return result;
}

uint64_t DataFrame.explodingColumn<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  char v85 = a4;
  uint64_t v99 = a3;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v112 = (uint64_t)&v83 - v8;
  uint64_t v9 = sub_22093ED30();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v111 = (char *)&v83 - v10;
  uint64_t v90 = v6;
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v121 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v118 = (char *)&v83 - v11;
  uint64_t v12 = sub_22093ED30();
  unint64_t v120 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v93 = (char *)&v83 - v14;
  uint64_t AssociatedConformanceWitness = *(void *)(a2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v89 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v83 - v17;
  uint64_t v94 = v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_22093ED30();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v106 = (char *)&v83 - v20;
  uint64_t v21 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v23 = v4[1];
  unint64_t v25 = v4[2];
  uint64_t v124 = *v4;
  uint64_t v24 = v124;
  uint64_t v125 = v23;
  unint64_t v126 = v25;
  int64_t v84 = sub_22080BA90(v21, v22);
  *(void *)&long long v132 = v24;
  *((void *)&v132 + 1) = v23;
  unint64_t v133 = v25;
  *(void *)&long long v129 = v21;
  *((void *)&v129 + 1) = v22;
  uint64_t v108 = a2;
  DataFrame.subscript.getter((uint64_t *)&v129);
  uint64_t v26 = v124;
  uint64_t v27 = v125;
  unint64_t v86 = v126;
  uint64_t v28 = type metadata accessor for Column();
  swift_bridgeObjectRetain();
  uint64_t v107 = v28;
  Swift::Int v29 = Column.count.getter(v28);
  Column.init(name:capacity:)(v26, v27, v29, AssociatedTypeWitness, v140);
  uint64_t v137 = v24;
  uint64_t v138 = v23;
  unint64_t v139 = v25;
  *(void *)&long long v132 = v21;
  *((void *)&v132 + 1) = v22;
  uint64_t v30 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  DataFrame.removeColumn<A>(_:)((uint64_t *)&v132);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x263F8EE78];
  unint64_t v32 = sub_22080CCF4(MEMORY[0x263F8EE78]);
  *(void *)&long long v135 = v31;
  *((void *)&v135 + 1) = v31;
  unint64_t v136 = v32;
  uint64_t v33 = *(void *)(v24 + 16);
  uint64_t v95 = v30;
  if (!v33) {
    goto LABEL_13;
  }
  uint64_t v34 = v24 + 32;
  uint64_t v117 = (unsigned int (**)(char *, uint64_t, uint64_t))v24;
  swift_bridgeObjectRetain();
  do
  {
    sub_22080B5B8(v34, (uint64_t)&v124);
    uint64_t v36 = v127;
    uint64_t v35 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v35 + 8) + 8))(v36) == v26 && v37 == v30)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      sub_22080B0D8((uint64_t)&v124);
      goto LABEL_5;
    }
    char v39 = sub_22093F250();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_4;
    }
    uint64_t v41 = v127;
    uint64_t v40 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v40 + 8) + 88))(&v132, v41);
    long long v42 = v134;
    __swift_project_boxed_opaque_existential_1(&v132, v134);
    uint64_t v44 = v127;
    uint64_t v43 = v128;
    __swift_project_boxed_opaque_existential_1(&v124, v127);
    uint64_t v45 = v44;
    uint64_t v30 = v95;
    uint64_t v46 = (*(uint64_t (**)(uint64_t))(*(void *)(v43 + 8) + 48))(v45);
    (*(void (**)(long long *__return_ptr, uint64_t, void, void))(*((void *)&v42 + 1) + 32))(&v129, v46, v42, *((void *)&v42 + 1));
    DataFrame.append(column:)((uint64_t)&v129);
    sub_22080B0D8((uint64_t)&v129);
    sub_22080B0D8((uint64_t)&v124);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v132);
LABEL_5:
    v34 += 40;
    --v33;
  }
  while (v33);
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v124 = v26;
  uint64_t v125 = v30;
  unint64_t v47 = v86;
  unint64_t v126 = v86;
  uint64_t v48 = v107;
  swift_getWitnessTable();
  sub_22093EA40();
  long long v123 = v129;
  uint64_t v124 = v26;
  uint64_t v125 = v30;
  unint64_t v126 = v47;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_267F18D20);
  unint64_t v50 = sub_220887EF8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22093F2C0();
  long long v129 = v132;
  unint64_t v130 = v133;
  long long v131 = v134;
  unint64_t v104 = v50;
  uint64_t v105 = v49;
  uint64_t v124 = v49;
  uint64_t v125 = v48;
  unint64_t v126 = v50;
  uint64_t v127 = WitnessTable;
  uint64_t v103 = WitnessTable;
  sub_22093EEE0();
  sub_22093EEB0();
  uint64_t v52 = TupleTypeMetadata2;
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v120 + 32);
  uint64_t v102 = TupleTypeMetadata2 - 8;
  char v100 = (unsigned int (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
  char v98 = (void (**)(char *, char *, uint64_t))(AssociatedConformanceWitness + 32);
  char v88 = (void (**)(char *, char *, uint64_t))(AssociatedConformanceWitness + 16);
  uint64_t v117 = (unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
  uint64_t v114 = (void (**)(uint64_t, char *, uint64_t))(v122 + 32);
  char v110 = (void (**)(uint64_t, uint64_t))(v122 + 8);
  uint64_t v87 = (void (**)(char *, uint64_t))(v121 + 8);
  uint64_t v96 = (void (**)(char *, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v97 = (void (**)(char *, uint64_t))(v120 + 8);
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v55 = v111;
  uint64_t v54 = v112;
  uint64_t v57 = v93;
  uint64_t v56 = v94;
  uint64_t v58 = v92;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        *(void *)&long long v132 = v105;
        *((void *)&v132 + 1) = v107;
        unint64_t v133 = v104;
        *(void *)&long long v134 = v103;
        sub_22093EED0();
        uint64_t v59 = v106;
        sub_22093EEC0();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v59, 1, v52) == 1)
        {
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v124 = v140[0];
          uint64_t v125 = v140[1];
          unint64_t v126 = v140[2];
          swift_bridgeObjectRetain();
          swift_retain();
          DataFrame.insert<A>(column:at:)((uint64_t)&v124, v84);
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v80 = v136;
          uint64_t v81 = v85;
          *char v85 = v135;
          *((void *)v81 + 2) = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v122 = *(void *)v59;
        (*v101)(v57, &v59[*(int *)(v52 + 48)], v56);
        uint64_t v60 = v108;
        if ((*v100)(v57, 1, v108) != 1) {
          break;
        }
        (*v97)(v57, v56);
      }
      (*v98)(v58, v57, v60);
      if ((sub_22093EAC0() & 1) == 0) {
        break;
      }
      (*v96)(v58, v60);
    }
    (*v88)(v89, v58, v60);
    sub_22093E780();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_22093ED70();
    uint64_t v115 = *v117;
    if (v115(v55, 1, v53) != 1) {
      break;
    }
LABEL_20:
    (*v87)(v118, v119);
    uint64_t v58 = v92;
    (*v96)(v92, v108);
    uint64_t v57 = v93;
    uint64_t v56 = v94;
    uint64_t v52 = TupleTypeMetadata2;
  }
  char v113 = *v114;
  v113(v54, v55, v53);
  while (2)
  {
    uint64_t v62 = v137;
    uint64_t v63 = *(void *)(v137 + 16);
    unint64_t v120 = v139;
    uint64_t v121 = v138;
    if (v63)
    {
      sub_22080B5B8(v137 + 32, (uint64_t)&v132);
      uint64_t v64 = *((void *)&v134 + 1);
      uint64_t v65 = (char *)v134;
      __swift_project_boxed_opaque_existential_1(&v132, v134);
      uint64_t v66 = *(void *)(v64 + 8);
      uint64_t v67 = *(char **)(v66 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v67)(v65, v66);
      sub_22080B0D8((uint64_t)&v132);
      if (v68 < 0) {
        goto LABEL_41;
      }
      if (v68)
      {
        char v69 = 0;
        goto LABEL_31;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v68 = 0;
    char v69 = 2;
LABEL_31:
    sub_22080B6B4(0, v68, v69);
    uint64_t v67 = *(char **)(v62 + 16);
    uint64_t v65 = (char *)v135;
    if (v67 != *(char **)(v135 + 16)) {
      goto LABEL_42;
    }
    if (!v67)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      uint64_t v61 = type metadata accessor for Column();
      uint64_t v54 = v112;
      Column.append(_:)(v112, v61);
      (*v110)(v54, v53);
      uint64_t v55 = v111;
      sub_22093ED70();
      if (v115(v55, 1, v53) == 1) {
        goto LABEL_20;
      }
      v113(v54, v55, v53);
      continue;
    }
    break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v65 = sub_22080AB34((uint64_t)v65);
  }
  uint64_t v70 = 0;
  unint64_t v71 = 0;
  while (1)
  {
    sub_22080B5B8(v62 + v70 + 32, (uint64_t)&v132);
    *(void *)&long long v135 = v65;
    if ((unint64_t)v71 >= *((void *)v65 + 2)) {
      break;
    }
    ++v71;
    uint64_t v72 = &v65[v70];
    uint64_t v73 = (uint64_t)&v65[v70 + 32];
    uint64_t v74 = *((void *)&v134 + 1);
    uint64_t v75 = v134;
    uint64_t v76 = __swift_project_boxed_opaque_existential_1(&v132, v134);
    *(void *)&long long v131 = v75;
    *((void *)&v131 + 1) = *(void *)(v74 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v129);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(boxed_opaque_existential_1, v76, v75);
    uint64_t v78 = *((void *)v72 + 7);
    uint64_t v79 = *((void *)v72 + 8);
    __swift_mutable_project_boxed_opaque_existential_1(v73, v78);
    (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v79 + 56))(v122, &v129, v78, v79);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v129);
    sub_22080B0D8((uint64_t)&v132);
    uint64_t v65 = (char *)v135;
    v70 += 40;
    if (v67 == v71)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = AssociatedTypeWitness;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  *(void *)&long long v132 = 0;
  *((void *)&v132 + 1) = 0xE000000000000000;
  sub_22093EEA0();
  sub_22093E6C0();
  *(void *)&long long v129 = v67;
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  *(void *)&long long v129 = *((void *)v65 + 2);
  sub_22093F1A0();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  sub_22093E6C0();
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

double DataFrame.explodeColumn<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5[1];
  uint64_t v9 = v5[2];
  _OWORD v13[2] = *v5;
  v13[3] = v8;
  v13[4] = v9;
  ColumnID.init(_:_:)(a1, a2, v13);
  v12[0] = v13[0];
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  DataFrame.explodingColumn<A>(_:)(v12, a4, a5, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v15;
  double result = *(double *)&v14;
  *(_OWORD *)uint64_t v5 = v14;
  uint64_t v5[2] = v10;
  return result;
}

uint64_t DataFrame.explodingColumn<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v9 = *((void *)v5 + 2);
  long long v13 = *v5;
  uint64_t v14 = v9;
  ColumnID.init(_:_:)(a1, a2, v12);
  v11[0] = v12[0];
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  DataFrame.explodingColumn<A>(_:)(v11, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t Order.areOrdered<A>(_:_:)()
{
  if (*v0) {
    char v1 = sub_22093E450();
  }
  else {
    char v1 = sub_22093E460();
  }
  return v1 & 1;
}

TabularData::DataFrame __swiftcall RowGroupingProtocol.counts()()
{
  char v4 = 2;
  char v1 = (void *)(*(uint64_t (**)(char *))(v0 + 32))(&v4);
  result.columnIndicesByName._rawValue = v3;
  result.aliases._rawValue = v2;
  result.columns._rawValue = v1;
  return result;
}

uint64_t RowGroupingProtocol.sums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  void (*v16)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v19;
  unsigned char v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void v27[6];
  void v28[4];

  uint64_t v19 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_220944FB0;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  unint64_t v25 = a7;
  uint64_t v26 = a9;
  uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v16(v28, v15, sub_2208E3F98, 0, sub_2208E4064, v21, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  v27[2] = v28[0];
  v27[3] = v28[1];
  v27[4] = v28[2];
  v27[0] = 678262131;
  v27[1] = 0xE400000000000000;
  sub_22093E6C0();
  sub_22093E6C0();
  uint64_t v17 = v27[0];
  LOBYTE(v27[0]) = v19;
  sub_2208E40D0(v17, (unsigned __int8 *)v27, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E3F98(uint64_t a1, uint64_t a2)
{
  return sub_2208E4B00(a1, a2, 678262131);
}

uint64_t sub_2208E3FA8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
}

uint64_t sub_2208E4064@<X0>(uint64_t a1@<X8>)
{
  return sub_2208E3FA8(*(void *)(v1 + 24), a1);
}

uint64_t RowGroupingProtocol.aggregated<A, B>(on:naming:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 40))(a1, a2, a3, a4, a5, a7, a8, a6, a9);
}

uint64_t sub_2208E40D0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X3>, void *a3@<X8>)
{
  int v4 = *a2;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  if (v4 == 2)
  {
    *a3 = *v3;
    a3[1] = v5;
    a3[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = *v3;
    uint64_t v20 = v5;
    uint64_t v21 = v6;
    if (v4)
    {
      uint64_t v8 = MEMORY[0x270FA5388](a1);
      uint64_t v16 = v10;
      uint64_t v17 = v14;
      uint64_t v18 = v10;
      long long v13 = sub_2208E5284;
    }
    else
    {
      uint64_t v8 = MEMORY[0x270FA5388](a1);
      uint64_t v16 = v10;
      uint64_t v17 = v12;
      uint64_t v18 = v10;
      long long v13 = sub_2208E52B4;
    }
    return DataFrameProtocol.sorted<A>(on:_:by:)(v8, v9, (uint64_t)v13, (uint64_t)&v15, (uint64_t)&type metadata for DataFrame, v10, (uint64_t)&protocol witness table for DataFrame, v11);
  }
}

uint64_t RowGroupingProtocol.sums<A>(_:order:)@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v11 = *a2;
  return RowGroupingProtocol.sums<A>(_:_:order:)(v8, v9, &v11, a3, a4, a5, a6, a8, a7);
}

uint64_t RowGroupingProtocol.means<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  void (*v15)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v18;
  unsigned char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void v25[6];
  void v26[4];

  uint64_t v18 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_220944FB0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v15(v26, v14, sub_2208E4404, 0, sub_2208E4418, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  void v25[2] = v26[0];
  void v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 0x286E61656DLL;
  v25[1] = 0xE500000000000000;
  sub_22093E6C0();
  sub_22093E6C0();
  uint64_t v16 = v25[0];
  LOBYTE(v25[0]) = v18;
  sub_2208E40D0(v16, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E4404(uint64_t a1, uint64_t a2)
{
  return sub_2208E4B00(a1, a2, 0x286E61656DLL);
}

uint64_t sub_2208E4418(uint64_t a1)
{
  return sub_2208E4B44(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.mean());
}

uint64_t RowGroupingProtocol.means<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208E4C18(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.means<A>(_:_:order:));
}

uint64_t RowGroupingProtocol.quantiles<A>(_:_:quantile:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  void (*v16)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v19;
  unsigned char v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void v27[6];
  void v28[4];

  uint64_t v19 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_220944FB0;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  unint64_t v25 = a9;
  uint64_t v26 = a3;
  uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  v16(v28, v15, sub_2208E4614, 0, sub_2208E46F8, v21, a6, a6, a5, a7);
  swift_bridgeObjectRelease();
  v27[2] = v28[0];
  v27[3] = v28[1];
  v27[4] = v28[2];
  v27[0] = 0x656C69746E617571;
  v27[1] = 0xE900000000000028;
  sub_22093E6C0();
  sub_22093E6C0();
  uint64_t v17 = v27[0];
  LOBYTE(v27[0]) = v19;
  sub_2208E40D0(v17, (unsigned __int8 *)v27, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E4614(uint64_t a1, uint64_t a2)
{
  return sub_2208E4B00(a1, a2, 0x656C69746E617571);
}

uint64_t sub_2208E4630@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
}

uint64_t sub_2208E46F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2208E4630(*(void *)(v1 + 24), a1);
}

uint64_t RowGroupingProtocol.quantiles<A>(_:quantile:order:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  char v14 = *a3;
  return RowGroupingProtocol.quantiles<A>(_:_:quantile:order:)(v12, v11, a2, &v14, a4, a5, a6, a8, a7);
}

uint64_t RowGroupingProtocol.minimums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  void (*v15)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v18;
  unsigned char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void v25[6];
  void v26[4];

  uint64_t v18 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_220944FB0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v15(v26, v14, sub_2208E4900, 0, sub_2208E4910, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  void v25[2] = v26[0];
  void v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 678324589;
  v25[1] = 0xE400000000000000;
  sub_22093E6C0();
  sub_22093E6C0();
  uint64_t v16 = v25[0];
  LOBYTE(v25[0]) = v18;
  sub_2208E40D0(v16, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E4900(uint64_t a1, uint64_t a2)
{
  return sub_2208E4B00(a1, a2, 678324589);
}

uint64_t sub_2208E4910(uint64_t a1)
{
  return sub_2208E4B44(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.min());
}

uint64_t RowGroupingProtocol.minimums<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208E4C18(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.minimums<A>(_:_:order:));
}

uint64_t RowGroupingProtocol.maximums<A>(_:_:order:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  void (*v15)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v18;
  unsigned char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void v25[6];
  void v26[4];

  uint64_t v18 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_220944FB0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(uint64_t, uint64_t), void, uint64_t (*)(uint64_t), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  v15(v26, v14, sub_2208E4AF0, 0, sub_2208E4BCC, v20, a5, a5, a4, a6);
  swift_bridgeObjectRelease();
  void v25[2] = v26[0];
  void v25[3] = v26[1];
  v25[4] = v26[2];
  v25[0] = 678977901;
  v25[1] = 0xE400000000000000;
  sub_22093E6C0();
  sub_22093E6C0();
  uint64_t v16 = v25[0];
  LOBYTE(v25[0]) = v18;
  sub_2208E40D0(v16, (unsigned __int8 *)v25, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E4AF0(uint64_t a1, uint64_t a2)
{
  return sub_2208E4B00(a1, a2, 678977901);
}

uint64_t sub_2208E4B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_2208E4B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for DiscontiguousColumnSlice();
  return a6(v8, a5);
}

uint64_t sub_2208E4BCC(uint64_t a1)
{
  return sub_2208E4B44(a1, v1[2], v1[3], v1[4], v1[5], DiscontiguousColumnSlice<A>.max());
}

uint64_t RowGroupingProtocol.maximums<A>(_:order:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2208E4C18(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))RowGroupingProtocol.maximums<A>(_:_:order:));
}

uint64_t sub_2208E4C18(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  char v10 = *a2;
  return a7(v7, v8, a4, &v10, a3, a4, a5, a6);
}

uint64_t RowGroupingProtocol.aggregated<A, B>(on:into:transform:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41190);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_220944FB0;
  *(void *)(v16 + 32) = v15;
  *(void *)(v16 + 40) = v14;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = a9;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), unsigned char *, uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 40);
  swift_bridgeObjectRetain();
  v17(v16, sub_2208E4E1C, v28, sub_2208E4F24, v21, a7, a8, a6, a9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2208E4D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    sub_22093E6C0();
    sub_22093E6C0();
    a3 = 0x7461676572676761;
  }
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_2208E4E1C(uint64_t a1, uint64_t a2)
{
  return sub_2208E4D94(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2208E4E24@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v9(v6);
  if (!v2)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, a1);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, a1);
  }
  return result;
}

uint64_t sub_2208E4F24@<X0>(uint64_t a1@<X8>)
{
  return sub_2208E4E24(*(void *)(v1 + 32), a1);
}

uint64_t RowGroupingProtocol.randomSplit(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a2, 0, 1, a3, a4);
}

BOOL static Order.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Order.hash(into:)()
{
  return sub_22093F440();
}

uint64_t Order.hashValue.getter()
{
  return sub_22093F490();
}

BOOL sub_2208E4FF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_2208E5014()
{
  unint64_t result = qword_267F19658[0];
  if (!qword_267F19658[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267F19658);
  }
  return result;
}

uint64_t dispatch thunk of RowGroupingProtocol.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RowGroupingProtocol.ungrouped()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RowGroupingProtocol.counts(order:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RowGroupingProtocol.aggregated<A, B>(on:naming:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 40))(a1);
}

uint64_t dispatch thunk of RowGroupingProtocol.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of RowGroupingProtocol.mapGroups(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of RowGroupingProtocol.randomSplit(by:seed:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6 + 64))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of RowGroupingProtocol.summary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RowGroupingProtocol.summary(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of RowGroupingProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

unsigned char *storeEnumTagSinglePayload for Order(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2208E524CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Order()
{
  return &type metadata for Order;
}

uint64_t sub_2208E5284(uint64_t a1, uint64_t a2)
{
  return sub_2208E52E4(a1, a2, MEMORY[0x263F8D168]) & 1;
}

uint64_t sub_2208E52B4(uint64_t a1, uint64_t a2)
{
  return sub_2208E52E4(a1, a2, MEMORY[0x263F8D170]) & 1;
}

uint64_t sub_2208E52E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  return a3(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

uint64_t sub_2208E5320(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_22093E610();
  MEMORY[0x270FA5388](v5 - 8);
  sub_2208E542C(a1, a2);
  unsigned int v6 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v6 = sub_22081C5B4(0, *((void *)v6 + 2) + 1, 1, v6);
  }
  unint64_t v8 = *((void *)v6 + 2);
  unint64_t v7 = *((void *)v6 + 3);
  if (v8 >= v7 >> 1) {
    unsigned int v6 = sub_22081C5B4((char *)(v7 > 1), v8 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v8 + 1;
  v6[v8 + 32] = 0;
  *uint64_t v2 = v6;
  sub_22093E600();
  return sub_22093E5A0();
}

unint64_t sub_2208E542C(uint64_t a1, uint64_t a2)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v6 = *(void *)v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    unint64_t result = sub_220834E94(0, *(void *)(v6 + 16));
    if (a2 < 1) {
      return result;
    }
    goto LABEL_8;
  }
  if (*(void *)(v6 + 24) >= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD411B0);
    unint64_t v8 = (void *)swift_allocObject();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    _OWORD v8[2] = 0;
    v8[3] = 2 * v9 - 64;
  }
  else
  {
    unint64_t v8 = (void *)MEMORY[0x263F8EE78];
  }
  *(void *)uint64_t v2 = v8;
  unint64_t result = swift_bridgeObjectRelease();
  if (a2 >= 1)
  {
LABEL_8:
    uint64_t v10 = 0;
    char v11 = 0;
    char v12 = 0;
    do
    {
      int v13 = *(unsigned __int8 *)(a1 + v10);
      if (v11) {
        goto LABEL_26;
      }
      if (v12 & 1) == 0 && v13 == 34 && (*(unsigned char *)(v2 + 57))
      {
        char v11 = 0;
        char v12 = 1;
      }
      else
      {
        if (*(unsigned __int8 *)(v2 + 60) != v13 || (*(unsigned char *)(v2 + 58) & 1) == 0)
        {
          if ((v12 & (v13 == 34)) == 1)
          {
            uint64_t v14 = v10 + 1;
            if (v10 + 1 >= a2 || *(unsigned char *)(a1 + v14) != 34)
            {
              char v11 = 0;
              char v12 = 0;
              goto LABEL_10;
            }
            unint64_t v15 = *(void *)v2;
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *(void *)uint64_t v2 = v15;
            if ((result & 1) == 0)
            {
              unint64_t result = (unint64_t)sub_22081C5B4(0, *(void *)(v15 + 16) + 1, 1, (char *)v15);
              unint64_t v15 = result;
              *(void *)uint64_t v2 = result;
            }
            unint64_t v17 = *(void *)(v15 + 16);
            unint64_t v16 = *(void *)(v15 + 24);
            unint64_t v18 = v17 + 1;
            char v12 = 1;
            if (v17 >= v16 >> 1)
            {
              unint64_t result = (unint64_t)sub_22081C5B4((char *)(v16 > 1), v17 + 1, 1, (char *)v15);
              unint64_t v15 = result;
            }
            LOBYTE(v13) = 34;
          }
          else
          {
LABEL_26:
            unint64_t v15 = *(void *)v2;
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *(void *)uint64_t v2 = v15;
            if ((result & 1) == 0)
            {
              unint64_t result = (unint64_t)sub_22081C5B4(0, *(void *)(v15 + 16) + 1, 1, (char *)v15);
              unint64_t v15 = result;
              *(void *)uint64_t v2 = result;
            }
            unint64_t v17 = *(void *)(v15 + 16);
            unint64_t v19 = *(void *)(v15 + 24);
            unint64_t v18 = v17 + 1;
            if (v17 >= v19 >> 1)
            {
              unint64_t result = (unint64_t)sub_22081C5B4((char *)(v19 > 1), v17 + 1, 1, (char *)v15);
              unint64_t v15 = result;
            }
            uint64_t v14 = v10;
          }
          char v11 = 0;
          *(void *)(v15 + 16) = v18;
          *(unsigned char *)(v15 + v17 + 32) = v13;
          *(void *)uint64_t v2 = v15;
          uint64_t v10 = v14;
          goto LABEL_10;
        }
        char v11 = 1;
      }
LABEL_10:
      ++v10;
    }
    while (v10 < a2);
  }
  return result;
}

uint64_t destroy for StringBuilder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StringBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StringBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  return a1;
}

__n128 __swift_memcpy61_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 45) = *(_OWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StringBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  return a1;
}

uint64_t getEnumTagSinglePayload for StringBuilder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 61)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 61) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 61) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StringBuilder()
{
  return &type metadata for StringBuilder;
}

uint64_t FilledColumn<>.min()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2208E5A40(a1, a2, (void (*)(uint64_t, uint64_t))Column<A>.min(), MEMORY[0x263F8D170], (uint64_t (*)(uint64_t, uint64_t))FilledColumn<>.min(), a3);
}

uint64_t FilledColumn<>.max()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2208E5A40(a1, a2, (void (*)(uint64_t, uint64_t))Column<A>.max(), MEMORY[0x263F8D168], (uint64_t (*)(uint64_t, uint64_t))FilledColumn<>.max(), a3);
}

uint64_t sub_2208E5A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t (*a4)(char *, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  long long v42 = a5;
  uint64_t v43 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v47 = a6;
  uint64_t v44 = *(void *)(a1 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_22093ED30();
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v38 - v15;
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  if (sub_22093EB70())
  {
    uint64_t v23 = v47;
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
    return v24(v23, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v39 = v13;
    uint64_t v40 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v6, v11);
    uint64_t v26 = type metadata accessor for Column();
    if (swift_dynamicCast())
    {
      long long v42 = v49;
      uint64_t v27 = v6;
      uint64_t v28 = v16;
      uint64_t v29 = v46;
      v43(v26, v46);
      uint64_t v30 = v44;
      uint64_t v31 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v10, v27, a1);
      int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v28, 1, AssociatedTypeWitness);
      uint64_t v33 = v45;
      uint64_t v34 = v40;
      if (v32 == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v40, &v31[*(int *)(a1 + 36)], AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, a1);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v39);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, a1);
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v34, v28, AssociatedTypeWitness);
      }
      uint64_t v35 = v27 + *(int *)(a1 + 36);
      char v36 = v33(v34, v35, AssociatedTypeWitness, v29);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v37 = v47;
      if (v36)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v47, v34, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v34, AssociatedTypeWitness);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v37, v35, AssociatedTypeWitness);
      }
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, AssociatedTypeWitness);
    }
    else
    {
      return v42(a1, v46);
    }
  }
}

uint64_t FilledColumn<>.argmin()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_2208E5F60(a1, a2, MEMORY[0x263F8D170], a3);
}

uint64_t FilledColumn<>.argmax()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_2208E5F60(a1, a2, MEMORY[0x263F8D168], a3);
}

uint64_t sub_2208E5F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, char *, uint64_t, uint64_t)@<X2>, char *a4@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v60 = a2;
  uint64_t v67 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v88 = (char *)&v56 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v56 - v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_22093ED30();
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = a1;
  uint64_t WitnessTable = (char **)swift_getWitnessTable();
  uint64_t v18 = sub_22093E3B0();
  char v85 = *(uint64_t **)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v82 = (char *)&v56 - v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v89 = v18;
  uint64_t v90 = v17;
  uint64_t v22 = v18;
  uint64_t v73 = (uint64_t (**)(void, void, void))v18;
  uint64_t v74 = v21;
  uint64_t v91 = v20;
  uint64_t v92 = v21;
  uint64_t v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v20;
  uint64_t v23 = v21;
  unint64_t v80 = (void (**)(char *, uint64_t))sub_22093EEE0();
  MEMORY[0x270FA5388](v80);
  uint64_t v72 = (void (**)(char *, char *, uint64_t))((char *)&v56 - v24);
  uint64_t v89 = v22;
  uint64_t v90 = v17;
  uint64_t v91 = v20;
  uint64_t v92 = v23;
  uint64_t v79 = sub_22093EED0();
  uint64_t v56 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v78 = (char *)&v56 - v25;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v77 = sub_22093ED30();
  uint64_t v57 = *(void *)(v77 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v77);
  uint64_t v62 = (char *)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v76 = (char *)&v56 - v30;
  MEMORY[0x270FA5388](v29);
  int v32 = (char *)&v56 - v31;
  uint64_t v87 = v10;
  uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);
  uint64_t v66 = v10 + 56;
  uint64_t v65 = v33;
  v33((uint64_t)v67, 1, 1, v9);
  uint64_t v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
  uint64_t v64 = v83 + 56;
  uint64_t v63 = v34;
  v34(v32, 1, 1, v26);
  uint64_t v35 = v82;
  sub_22093EBA0();
  char v36 = v73;
  sub_22093F2C0();
  ((void (*)(char *, uint64_t (**)(void, void, void)))v85[1])(v35, v36);
  sub_22093EEB0();
  uint64_t v37 = v32;
  uint64_t v38 = AssociatedTypeWitness;
  sub_22093EEC0();
  uint64_t v39 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  uint64_t v74 = v39 + 48;
  uint64_t v75 = v40;
  if (v40(v16, 1, TupleTypeMetadata2) == 1)
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v78, v79);
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v37, v77);
  }
  long long v42 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
  char v85 = (uint64_t *)(v83 + 32);
  unint64_t v86 = v42;
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t WitnessTable = (char **)(v57 + 8);
  uint64_t v72 = (void (**)(char *, char *, uint64_t))(v83 + 16);
  uint64_t v73 = (uint64_t (**)(void, void, void))(v83 + 48);
  unint64_t v80 = (void (**)(char *, uint64_t))(v83 + 8);
  v87 += 32;
  uint64_t v59 = (void (**)(char *, uint64_t))(v87 - 24);
  uint64_t v81 = v37;
  uint64_t v71 = TupleTypeMetadata2;
  uint64_t v70 = v16;
  uint64_t v69 = v9;
  uint64_t v68 = v12;
  while (1)
  {
    uint64_t v44 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
    v86(v12, v16, v9);
    uint64_t v45 = v88;
    uint64_t v83 = *v85;
    ((void (*)(char *, char *, uint64_t))v83)(v88, v44, v38);
    uint64_t v46 = *v43;
    uint64_t v47 = v76;
    uint64_t v48 = v37;
    uint64_t v49 = v77;
    (*v43)(v76, v48, v77);
    unint64_t v50 = (uint64_t (*)(char *, uint64_t, uint64_t))*v73;
    LODWORD(v44) = (*v73)(v47, 1, v38);
    uint64_t v82 = *WitnessTable;
    ((void (*)(char *, uint64_t))v82)(v47, v49);
    (*v72)(v7, v45, v38);
    if (v44 == 1)
    {
      (*v80)(v7, v38);
      char v12 = v68;
LABEL_10:
      uint64_t v37 = v81;
      ((void (*)(void))v82)();
      uint64_t v9 = v69;
      uint64_t v54 = sub_22093ED30();
      uint64_t v55 = v67;
      (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v67, v54);
      v86(v55, v12, v9);
      v65((uint64_t)v55, 0, 1, v9);
      ((void (*)(char *, char *, uint64_t))v83)(v37, v88, v38);
      v63(v37, 0, 1, v38);
      goto LABEL_5;
    }
    uint64_t v51 = v62;
    v46(v62, v81, v49);
    uint64_t result = v50(v51, 1, v38);
    if (result == 1) {
      break;
    }
    char v52 = v61(v7, v51, v38, v60);
    uint64_t v53 = *v80;
    (*v80)(v7, v38);
    v53(v51, v38);
    char v12 = v68;
    if (v52) {
      goto LABEL_10;
    }
    v53(v88, v38);
    uint64_t v9 = v69;
    (*v59)(v12, v69);
    uint64_t v37 = v81;
LABEL_5:
    unint64_t v16 = v70;
    sub_22093EEC0();
    TupleTypeMetadata2 = v71;
    if (v75(v16, 1, v71) == 1) {
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t FilledColumn<>.sum()@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = *(char **)(a1 + 16);
  uint64_t v27 = *(char **)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v25 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v26 = (char *)&v25 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v29 = (char *)&v25 - v12;
  uint64_t v13 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a2;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v16);
  swift_getWitnessTable();
  uint64_t v31 = v3;
  if (sub_22093EB70())
  {
    swift_getAssociatedConformanceWitness();
    sub_22093F290();
    return sub_22093F240();
  }
  else
  {
    (*(void (**)(char *, uint64_t, char *))(v13 + 16))(v15, v31, v5);
    type metadata accessor for Column();
    if (swift_dynamicCast())
    {
      uint64_t v27 = v34;
      uint64_t v18 = v29;
      Column<A>.sum()();
      uint64_t v33 = sub_22091DA80();
      sub_2208B8AAC();
      uint64_t v19 = v25;
      sub_22093EDE0();
      uint64_t v20 = v26;
      sub_22093E9F0();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v30 + 8);
      v21(v19, AssociatedTypeWitness);
      sub_22093F0A0();
      swift_release();
      swift_bridgeObjectRelease();
      v21(v20, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v21)(v18, AssociatedTypeWitness);
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_22093F290();
      uint64_t v22 = v29;
      uint64_t v23 = sub_22093F240();
      MEMORY[0x270FA5388](v23);
      uint64_t v24 = v27;
      *(&v25 - 4) = v5;
      *(&v25 - 3) = v24;
      *(&v25 - 2) = v28;
      *(&v25 - 1) = (char *)AssociatedTypeWitness;
      swift_getWitnessTable();
      sub_22093E7F0();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, AssociatedTypeWitness);
    }
  }
}

{
  uint64_t v3;
  char *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  uint64_t v32 = a3;
  uint64_t v5 = *(char **)(a1 + 16);
  uint64_t v27 = *(char **)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v25 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v26 = (char *)&v25 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v29 = (char *)&v25 - v12;
  uint64_t v13 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a2;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v16);
  swift_getWitnessTable();
  uint64_t v31 = v3;
  if (sub_22093EB70())
  {
    swift_getAssociatedConformanceWitness();
    sub_22093F290();
    return sub_22093F240();
  }
  else
  {
    (*(void (**)(char *, uint64_t, char *))(v13 + 16))(v15, v31, v5);
    type metadata accessor for Column();
    if (swift_dynamicCast())
    {
      uint64_t v27 = v33;
      uint64_t v18 = v29;
      Column<A>.sum()();
      sub_22091DA80();
      uint64_t v19 = v25;
      sub_22093E340();
      uint64_t v20 = v26;
      sub_22093E9F0();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v30 + 8);
      v21(v19, AssociatedTypeWitness);
      sub_22093F0A0();
      swift_release();
      swift_bridgeObjectRelease();
      v21(v20, AssociatedTypeWitness);
      return ((uint64_t (*)(char *, uint64_t))v21)(v18, AssociatedTypeWitness);
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_22093F290();
      uint64_t v22 = v29;
      uint64_t v23 = sub_22093F240();
      MEMORY[0x270FA5388](v23);
      uint64_t v24 = v27;
      *(&v25 - 4) = v5;
      *(&v25 - 3) = v24;
      *(&v25 - 2) = v28;
      *(&v25 - 1) = (char *)AssociatedTypeWitness;
      swift_getWitnessTable();
      sub_22093E7F0();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v22, AssociatedTypeWitness);
    }
  }
}

uint64_t sub_2208E6E14()
{
  return sub_22093F0A0();
}

uint64_t FilledColumn<>.mean()(uint64_t a1, uint64_t a2)
{
  v17[1] = *(_OWORD *)(a1 + 16);
  uint64_t v18 = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_2208F0D18((void (*)(char *, char *))sub_2208E7B04, (uint64_t)v17, a1, MEMORY[0x263F8D538], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v4);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_10;
  }
  if (v6 == 1)
  {
    uint64_t v7 = 0;
    double v8 = 0.0;
    double v9 = 0.0;
LABEL_7:
    uint64_t v12 = v6 - v7;
    uint64_t v13 = (double *)(v5 + 8 * v7 + 32);
    do
    {
      double v14 = *v13++;
      double v9 = v9 + v14;
      double v8 = v8 + 1.0;
      --v12;
    }
    while (v12);
    goto LABEL_9;
  }
  uint64_t v7 = v6 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v10 = (double *)(v5 + 40);
  double v8 = 0.0;
  uint64_t v11 = v6 & 0x7FFFFFFFFFFFFFFELL;
  double v9 = 0.0;
  do
  {
    double v8 = v8 + 1.0 + 1.0;
    double v9 = v9 + *(v10 - 1) + *v10;
    v10 += 2;
    v11 -= 2;
  }
  while (v11);
  if (v6 != v7) {
    goto LABEL_7;
  }
LABEL_9:
  if (v8 != 0.0)
  {
    double v15 = v9 / v8;
    goto LABEL_12;
  }
LABEL_10:
  double v15 = 0.0;
LABEL_12:
  swift_bridgeObjectRelease();
  return *(void *)&v15;
}

double sub_2208E6FD8(uint64_t a1, double result)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    if (v2 == 1)
    {
      uint64_t v3 = 0;
      uint64_t result = 0.0;
      double v4 = 0.0;
    }
    else
    {
      uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v5 = (double *)(a1 + 40);
      uint64_t result = 0.0;
      uint64_t v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
      double v4 = 0.0;
      do
      {
        uint64_t result = result + 1.0 + 1.0;
        double v4 = v4 + *(v5 - 1) + *v5;
        v5 += 2;
        v6 -= 2;
      }
      while (v6);
      if (v2 == v3) {
        goto LABEL_9;
      }
    }
    uint64_t v7 = v2 - v3;
    double v8 = (double *)(a1 + 8 * v3 + 32);
    do
    {
      double v9 = *v8++;
      double v4 = v4 + v9;
      uint64_t result = result + 1.0;
      --v7;
    }
    while (v7);
LABEL_9:
    if (result != 0.0) {
      return v4 / result;
    }
  }
  return result;
}

uint64_t FilledColumn<>.standardDeviation(deltaDegreesOfFreedom:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(_OWORD *)(a2 + 16);
  uint64_t v11 = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_2208F0D18((void (*)(char *, char *))sub_2208E72FC, (uint64_t)v10, a2, MEMORY[0x263F8D538], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v6);
  uint64_t v8 = sub_2208E7320(v7, a1);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2208E713C@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v12 - v6, a1, AssociatedTypeWitness);
  if (sub_22093EDC0() < 65)
  {
    char v10 = sub_22093EDD0();
    uint64_t v11 = sub_22093EDB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    if (v10) {
      double v9 = (double)v11;
    }
    else {
      double v9 = (double)(unint64_t)v11;
    }
  }
  else
  {
    sub_2208B8B00();
    sub_220838AEC();
    sub_22093E260();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    double v9 = *(double *)&v12[1];
  }
  *a2 = v9;
  return result;
}

uint64_t sub_2208E72FC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_2208E713C(a1, a2);
}

uint64_t sub_2208E7320(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    unint64_t v2 = *(void *)(a1 + 16);
    if (!v2) {
      return 0;
    }
    if (v2 == 1)
    {
      uint64_t v3 = 0;
      double v4 = 0.0;
      double v5 = 0.0;
    }
    else
    {
      uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v6 = (double *)(a1 + 40);
      double v4 = 0.0;
      uint64_t v7 = v2 & 0x7FFFFFFFFFFFFFFELL;
      double v5 = 0.0;
      do
      {
        double v4 = v4 + 1.0 + 1.0;
        double v5 = v5 + *(v6 - 1) + *v6;
        v6 += 2;
        v7 -= 2;
      }
      while (v7);
      if (v2 == v3)
      {
LABEL_10:
        if (v4 != 0.0)
        {
          double v11 = v5 / v4;
          if (v2 >= 4)
          {
            uint64_t v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
            float64x2_t v14 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v11, 0);
            double v15 = (float64x2_t *)(a1 + 48);
            double v13 = 0.0;
            uint64_t v16 = v2 & 0x7FFFFFFFFFFFFFFCLL;
            do
            {
              float64x2_t v17 = vsubq_f64(v15[-1], v14);
              float64x2_t v18 = vsubq_f64(*v15, v14);
              float64x2_t v19 = vmulq_f64(v17, v17);
              float64x2_t v20 = vmulq_f64(v18, v18);
              double v13 = v13 + v19.f64[0] + v19.f64[1] + v20.f64[0] + v20.f64[1];
              v15 += 2;
              v16 -= 4;
            }
            while (v16);
            if (v2 == v12)
            {
LABEL_18:
              BOOL v24 = (uint64_t)v2 <= a2;
              uint64_t v25 = v2 - a2;
              if (!v24) {
                return sqrt(v13 / (double)v25);
              }
              return 0;
            }
          }
          else
          {
            uint64_t v12 = 0;
            double v13 = 0.0;
          }
          unint64_t v21 = v2 - v12;
          uint64_t v22 = (double *)(a1 + 8 * v12 + 32);
          do
          {
            double v23 = *v22++;
            double v13 = v13 + (v23 - v11) * (v23 - v11);
            --v21;
          }
          while (v21);
          goto LABEL_18;
        }
        return 0;
      }
    }
    unint64_t v8 = v2 - v3;
    double v9 = (double *)(a1 + 8 * v3 + 32);
    do
    {
      double v10 = *v9++;
      double v5 = v5 + v10;
      double v4 = v4 + 1.0;
      --v8;
    }
    while (v8);
    goto LABEL_10;
  }
  uint64_t result = sub_22093F090();
  __break(1u);
  return result;
}

uint64_t sub_2208E7998()
{
  return sub_22093F0A0();
}

uint64_t FilledColumn<>.mean()@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = (void *)swift_getWitnessTable();

  return sub_220902CEC(v3, a1, WitnessTable, a2, a3);
}

uint64_t FilledColumn<>.standardDeviation(deltaDegreesOfFreedom:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = (void *)swift_getWitnessTable();

  return sub_2209032F4(v4, a1, a2, WitnessTable, a3, a4);
}

uint64_t sub_2208E7B04@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return sub_2208E72FC(a1, a2);
}

uint64_t FilledColumn.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v29 = a1;
  uint64_t v32 = a3;
  uint64_t v31 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_22093ED30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  double v15 = (char *)&v27 - v14;
  uint64_t v16 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v13);
  float64x2_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v4, v9);
  uint64_t v27 = v8;
  float64x2_t v19 = (void (*)(char *, void))sub_22093EBD0();
  uint64_t v28 = v12;
  uint64_t v29 = v11;
  uint64_t v20 = v12;
  uint64_t v21 = v31;
  (*(void (**)(char *))(v20 + 16))(v15);
  v19(v33, 0);
  uint64_t v22 = v30;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v22, v4, a2);
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    BOOL v24 = &v22[*(int *)(a2 + 36)];
    uint64_t v25 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v32, v24, v25);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v32, v15, AssociatedTypeWitness);
  }
}

uint64_t OptionalColumnProtocol.filled(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v17 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, v4, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, AssociatedTypeWitness);
  return sub_2208E805C((uint64_t)v14, (uint64_t)v12, a2, a3);
}

uint64_t sub_2208E805C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for FilledColumn() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v8(v6, a2, AssociatedTypeWitness);
}

uint64_t FilledColumn.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FilledColumn.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*FilledColumn.base.modify())(void)
{
  return nullsub_5;
}

uint64_t FilledColumn.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t FilledColumn.name.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 24) + 8) + 16))(*(void *)(a1 + 16));
}

uint64_t sub_2208E8264(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = type metadata accessor for FilledColumn();
  swift_bridgeObjectRetain();
  return FilledColumn.name.setter(v1, v2, v3);
}

uint64_t FilledColumn.name.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a3 + 24) + 8) + 24))(a1, a2, *(void *)(a3 + 16));
}

void (*FilledColumn.name.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  double v5 = malloc(0x28uLL);
  *a1 = v5;
  uint64_t v5[2] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(*(void *)(a2 + 24) + 8);
  void v5[3] = v7;
  uint64_t v8 = *(uint64_t (**)(void))(v7 + 16);
  v5[4] = v6;
  *double v5 = v8();
  v5[1] = v9;
  return sub_2208E835C;
}

void sub_2208E835C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = (*a1)[4];
  if (a2)
  {
    swift_bridgeObjectRetain();
    v6(v4, v3, v7, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6(**a1, v3, v7, v5);
  }

  free(v2);
}

uint64_t FilledColumn.startIndex.getter(uint64_t a1)
{
  return sub_2208E843C(a1, MEMORY[0x263F8D7B0]);
}

uint64_t FilledColumn.endIndex.getter(uint64_t a1)
{
  return sub_2208E843C(a1, MEMORY[0x263F8D7E0]);
}

uint64_t sub_2208E843C(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  a2(v4, *(void *)(*(void *)(*(void *)(*(void *)(a1 + 24) + 8) + 8) + 8));
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FilledColumn.index(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  sub_22093EA90();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FilledColumn.index(before:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  sub_22093E3F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void (*sub_2208E8768(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = FilledColumn.name.modify(v4, a2);
  return sub_220816854;
}

uint64_t sub_2208E87C8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2208E8804()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208E8820()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208E8884()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208E88EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208E8CBC(a1, a2, a3, (void (*)(uint64_t, uint64_t))FilledColumn.index(before:));
}

uint64_t sub_2208E8904()
{
  return swift_getWitnessTable();
}

uint64_t sub_2208E8920()
{
  return swift_getAssociatedConformanceWitness();
}

void (*sub_2208E8950(uint64_t **a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2208E89C0(v6, a2, a3);
  return sub_22085FBC4;
}

void (*sub_2208E89C0(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  FilledColumn.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_22085FCE0;
}

uint64_t sub_2208E8A9C@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_22093ED30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_2208E8B34()
{
  swift_getWitnessTable();

  return sub_22093E420();
}

uint64_t sub_2208E8BB0()
{
  swift_getWitnessTable();

  return sub_22093E410();
}

uint64_t sub_2208E8C34()
{
  swift_getWitnessTable();

  return sub_22093E430();
}

uint64_t sub_2208E8CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2208E8CBC(a1, a2, a3, (void (*)(uint64_t, uint64_t))FilledColumn.index(after:));
}

uint64_t sub_2208E8CBC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v12 - v9;
  a4(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, AssociatedTypeWitness);
}

uint64_t sub_2208E8DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v2, a1);
  FilledColumn.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t v10 = sub_22093F040();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v10 + 36), v8, AssociatedTypeWitness);
}

uint64_t sub_2208E8F70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2208E8FC4()
{
  swift_getWitnessTable();

  return sub_22093EB10();
}

uint64_t sub_2208E9018@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FilledColumn();
  uint64_t result = FilledColumn.name.getter(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2208E9058()
{
  return 16;
}

__n128 sub_2208E9064(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2208E9070()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_2208E9160(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_2208E92E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_2208E93AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2208E9480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2208E9554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2208E9628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2208E96FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_2208E9990(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2208E9CA4);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for FilledColumn()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2208E9CE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_220826C78(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_220826C78((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2208E9DBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  char v31 = a5 & 1;
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_220826CD8(0, v7, 0);
  uint64_t v8 = v39;
  uint64_t v10 = (unint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v11 = *(v10 - 3);
    uint64_t v12 = *(v10 - 2);
    uint64_t v13 = *(v10 - 1);
    uint64_t v14 = *a2;
    if (!*(void *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      sub_22093EEA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v29 = 0x20676E697373694DLL;
      *(void *)(v29 + 8) = 0xE800000000000000;
      *(unsigned char *)(v29 + 16) = 0;
      swift_willThrow();
      goto LABEL_14;
    }
    int64_t v35 = v7;
    uint64_t v36 = v8;
    uint64_t v15 = v6;
    uint64_t v16 = *(v10 - 4);
    unint64_t v17 = *v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_22081D290(v12, v13);
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v36;
      goto LABEL_12;
    }
    unsigned int v20 = (uint64_t *)(*(void *)(v14 + 56) + 24 * v18);
    uint64_t v22 = *v20;
    unint64_t v21 = v20[1];
    uint64_t v23 = v20[2];
    sub_22080B7F4(*v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_220847CA0(v16, v11, v17, a3, a4, v31, v22, v21, v37, v23);
    uint64_t v6 = v15;
    if (v15) {
      break;
    }
    sub_22080B88C(v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    uint64_t v39 = v36;
    unint64_t v25 = *(void *)(v36 + 16);
    unint64_t v24 = *(void *)(v36 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_220826CD8((char *)(v24 > 1), v25 + 1, 1);
      uint64_t v8 = v39;
    }
    v10 += 5;
    *(void *)(v8 + 16) = v25 + 1;
    uint64_t v26 = v8 + 40 * v25;
    long long v27 = v37[0];
    long long v28 = v37[1];
    *(void *)(v26 + 64) = v38;
    *(_OWORD *)(v26 + 32) = v27;
    *(_OWORD *)(v26 + 48) = v28;
    int64_t v7 = v35 - 1;
    if (v35 == 1) {
      return v8;
    }
  }
  sub_22080B88C(v22, v21);
  swift_bridgeObjectRelease();
  uint64_t v8 = v36;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t DataFrame.init(contentsOfSFrameDirectory:columns:rows:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, _OWORD *a6@<X8>)
{
  LODWORD(v240) = a5;
  uint64_t v238 = a3;
  uint64_t v239 = a4;
  v237 = a6;
  v248[1] = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_22093DFA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v244 = &v215[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  *(void *)&long long v245 = &v215[-v14];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v243 = &v215[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v215[-v17];
  sub_22093DF80();
  id v19 = objc_msgSend(self, sel_defaultManager);
  sub_22093DF90();
  unsigned int v20 = (void *)sub_22093E540();
  swift_bridgeObjectRelease();
  unsigned __int8 v21 = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    *(unsigned char *)(v25 + 16) = 6;
    swift_willThrow();

    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v26(a1, v9);
    v26((uint64_t)v18, v9);
    return swift_bridgeObjectRelease();
  }
  uint64_t v241 = a1;
  id v242 = v19;
  uint64_t v236 = a2;
  uint64_t v22 = sub_22093DFB0();
  if (v6)
  {
    uint64_t v24 = v241;

    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v32(v24, v9);
    v32((uint64_t)v18, v9);
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = v22;
  unint64_t v28 = v23;
  v229 = v18;
  uint64_t v235 = v9;
  uint64_t v29 = sub_2208EBE1C(v22, v23);
  uint64_t v31 = v241;
  id v30 = v242;
  uint64_t v34 = v29;
  uint64_t v36 = v35;
  sub_22080B88C(v27, v28);
  *(void *)&long long v246 = v34;
  *((void *)&v246 + 1) = v36;
  swift_bridgeObjectRetain();
  sub_22093E6C0();
  swift_bridgeObjectRelease();
  uint64_t v37 = v243;
  sub_22093DF80();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v245;
  uint64_t v40 = v235;
  (*(void (**)(void, unsigned char *, uint64_t))(v10 + 16))(v245, v38, v235);
  uint64_t v41 = sub_22093DFB0();
  sub_2208CF054(v41, v42);
  int v216 = v240 & 1;
  uint64_t v43 = v10 + 8;
  uint64_t v45 = v44;
  uint64_t v224 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v224(v39, v40);
  v248[0] = MEMORY[0x263F8EE80];
  uint64_t v46 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_2208E9CE4(v46);
  uint64_t v228 = 0;
  uint64_t v219 = v45;
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_220831E98(v47);
  swift_bridgeObjectRelease();
  int64_t v49 = 0;
  uint64_t v50 = *(void *)(v48 + 56);
  uint64_t v222 = v48 + 56;
  uint64_t v225 = v48;
  uint64_t v51 = 1 << *(unsigned char *)(v48 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v53 = v52 & v50;
  v221 = (char *)&v245 + 8;
  int64_t v223 = (unint64_t)(v51 + 63) >> 6;
  uint64_t v234 = v43;
  while (1)
  {
    if (v53)
    {
      uint64_t v226 = (v53 - 1) & v53;
      int64_t v227 = v49;
      unint64_t v56 = __clz(__rbit64(v53)) | (v49 << 6);
      goto LABEL_25;
    }
    BOOL v57 = __OFADD__(v49, 1);
    int64_t v58 = v49 + 1;
    if (v57) {
      goto LABEL_141;
    }
    if (v58 >= v223) {
      break;
    }
    unint64_t v59 = *(void *)(v222 + 8 * v58);
    if (!v59)
    {
      int64_t v60 = v58 + 1;
      if (v58 + 1 >= v223) {
        break;
      }
      unint64_t v59 = *(void *)(v222 + 8 * v60);
      if (!v59)
      {
        int64_t v60 = v58 + 2;
        if (v58 + 2 >= v223) {
          break;
        }
        unint64_t v59 = *(void *)(v222 + 8 * v60);
        if (!v59)
        {
          int64_t v60 = v58 + 3;
          if (v58 + 3 >= v223) {
            break;
          }
          unint64_t v59 = *(void *)(v222 + 8 * v60);
          if (!v59)
          {
            while (1)
            {
              int64_t v58 = v60 + 1;
              if (__OFADD__(v60, 1)) {
                goto LABEL_154;
              }
              if (v58 >= v223) {
                goto LABEL_123;
              }
              unint64_t v59 = *(void *)(v222 + 8 * v58);
              ++v60;
              if (v59) {
                goto LABEL_24;
              }
            }
          }
        }
      }
      int64_t v58 = v60;
    }
LABEL_24:
    uint64_t v226 = (v59 - 1) & v59;
    int64_t v227 = v58;
    unint64_t v56 = __clz(__rbit64(v59)) + (v58 << 6);
LABEL_25:
    uint64_t v61 = (uint64_t *)(*(void *)(v225 + 48) + 16 * v56);
    uint64_t v62 = v61[1];
    uint64_t v231 = *v61;
    *(void *)&long long v246 = v231;
    *((void *)&v246 + 1) = v62;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    uint64_t v232 = v62;
    swift_bridgeObjectRetain();
    sub_22093DF80();
    swift_bridgeObjectRelease();
    uint64_t v63 = v228;
    uint64_t v240 = sub_22093DFB0();
    uint64_t v228 = v63;
    if (v63)
    {
      v195 = v30;
      uint64_t v196 = v235;
      uint64_t v197 = v224;
      v224((uint64_t)v244, v235);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v197(v31, v196);
      swift_release();
      v197((uint64_t)v243, v196);
      v197((uint64_t)v229, v196);
LABEL_126:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v230 = v64;
    switch(v64 >> 62)
    {
      case 1uLL:
        uint64_t v142 = (int)v240;
        uint64_t v143 = (v240 >> 32) - (int)v240;
        if (v240 >> 32 < (int)v240) {
          goto LABEL_144;
        }
        swift_retain();
        uint64_t v144 = sub_22093DE40();
        if (!v144)
        {
          sub_22093DE50();
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          sub_22093F2F0();
          __break(1u);
          JUMPOUT(0x2208EB3D0);
        }
        uint64_t v145 = v144;
        uint64_t v146 = sub_22093DE60();
        BOOL v57 = __OFSUB__(v142, v146);
        uint64_t v147 = v142 - v146;
        if (v57) {
          goto LABEL_148;
        }
        uint64_t v148 = sub_22093DE50();
        if (v148 >= v143) {
          uint64_t v149 = v143;
        }
        else {
          uint64_t v149 = v148;
        }
        uint64_t v150 = v145 + v147 + v149;
        uint64_t v152 = *(void *)(v150 - 8);
        uint64_t v151 = v150 - 8;
        uint64_t v153 = -v152;
        if (__OFSUB__(0, v152)) {
          goto LABEL_150;
        }
        uint64_t v154 = v151 + v153;
        uint64_t v155 = *(void *)(v151 + v153);
        uint64_t v156 = sub_22081BA50(0, v155 & ~(v155 >> 63), 0, MEMORY[0x263F8EE78]);
        if (v155 < 0) {
          goto LABEL_152;
        }
        uint64_t v69 = v156;
        if (v155)
        {
          uint64_t v157 = 0;
          uint64_t v158 = (uint64_t *)(v154 + 8);
          uint64_t v233 = v155;
          while (v157 != v155)
          {
            uint64_t v159 = *v158;
            uint64_t v160 = sub_22081B944(0, *v158 & ~(*v158 >> 63), 0, MEMORY[0x263F8EE78]);
            if (v159 < 0) {
              goto LABEL_138;
            }
            int v161 = v160;
            ++v158;
            if (v159)
            {
              *(void *)&long long v245 = v69;
              uint64_t v162 = 0;
              unint64_t v163 = *((void *)v160 + 2);
              uint64_t v164 = 48 * v163;
              do
              {
                long long v165 = *(_OWORD *)&v158[v162];
                long long v166 = *(_OWORD *)&v158[v162 + 2];
                uint64_t v167 = v158[v162 + 4];
                char v168 = v158[v162 + 5];
                unint64_t v169 = *((void *)v161 + 3);
                unint64_t v170 = v163 + 1;
                if (v163 >= v169 >> 1)
                {
                  long long v220 = *(_OWORD *)&v158[v162];
                  long long v218 = v166;
                  uint64_t v172 = sub_22081B944((char *)(v169 > 1), v163 + 1, 1, v161);
                  long long v166 = v218;
                  long long v165 = v220;
                  int v161 = v172;
                }
                *((void *)v161 + 2) = v170;
                uint64_t v171 = (uint64_t)&v161[v164 + v162 * 8];
                *(_OWORD *)(v171 + 32) = v165;
                *(_OWORD *)(v171 + 48) = v166;
                *(void *)(v171 + 64) = v167;
                *(unsigned char *)(v171 + 72) = v168;
                v162 += 6;
                unint64_t v163 = v170;
                --v159;
              }
              while (v159);
              uint64_t v158 = (uint64_t *)((char *)v158 + v162 * 8);
              uint64_t v69 = (void *)v245;
              uint64_t v155 = v233;
            }
            unint64_t v174 = v69[2];
            unint64_t v173 = v69[3];
            if (v174 >= v173 >> 1) {
              uint64_t v69 = sub_22081BA50((void *)(v173 > 1), v174 + 1, 1, v69);
            }
            ++v157;
            v69[2] = v174 + 1;
            v69[v174 + 4] = v161;
            if (v157 == v155) {
              goto LABEL_104;
            }
          }
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
        }
        uint64_t v176 = v240;
LABEL_112:
        sub_22080B88C(v176, v230);
LABEL_113:
        uint64_t v177 = v232;
        v224((uint64_t)v244, v235);
        uint64_t v178 = v248[0];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v246 = v178;
        v248[0] = 0x8000000000000000;
        unint64_t v181 = sub_22081D290(v231, v177);
        uint64_t v182 = *(void *)(v178 + 16);
        BOOL v183 = (v180 & 1) == 0;
        uint64_t v184 = v182 + v183;
        if (__OFADD__(v182, v183)) {
          goto LABEL_139;
        }
        char v185 = v180;
        if (*(void *)(v178 + 24) >= v184)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_220825A44();
          }
        }
        else
        {
          sub_22081FCC8(v184, isUniquelyReferenced_nonNull_native);
          uint64_t v186 = sub_22081D290(v231, v177);
          if ((v185 & 1) != (v187 & 1)) {
            goto LABEL_157;
          }
          unint64_t v181 = v186;
        }
        uint64_t v38 = v243;
        uint64_t v188 = (void *)v246;
        if (v185)
        {
          uint64_t v54 = (uint64_t *)(*(void *)(v246 + 56) + 24 * v181);
          sub_22080B88C(*v54, v54[1]);
          swift_bridgeObjectRelease();
          unint64_t v55 = v230;
          *uint64_t v54 = v240;
          v54[1] = v55;
          v54[2] = (uint64_t)v69;
        }
        else
        {
          *(void *)(v246 + 8 * (v181 >> 6) + 64) |= 1 << v181;
          uint64_t v189 = (void *)(v188[6] + 16 * v181);
          uint64_t v190 = v232;
          *uint64_t v189 = v231;
          v189[1] = v190;
          unint64_t v191 = (void *)(v188[7] + 24 * v181);
          unint64_t v192 = v230;
          *unint64_t v191 = v240;
          v191[1] = v192;
          v191[2] = v69;
          uint64_t v193 = v188[2];
          BOOL v57 = __OFADD__(v193, 1);
          uint64_t v194 = v193 + 1;
          if (v57) {
            goto LABEL_140;
          }
          v188[2] = v194;
          swift_bridgeObjectRetain();
        }
        v248[0] = (uint64_t)v188;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v30 = v242;
        int64_t v49 = v227;
        unint64_t v53 = v226;
        break;
      case 2uLL:
        uint64_t v88 = v64 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v89 = *(void *)(v240 + 16);
        uint64_t v90 = *(void *)(v240 + 24);
        sub_22080B7F4(v240, v64);
        swift_retain();
        swift_retain();
        uint64_t v91 = sub_22093DE40();
        if (!v91) {
          goto LABEL_46;
        }
        uint64_t v92 = sub_22093DE60();
        if (__OFSUB__(v89, v92)) {
          goto LABEL_153;
        }
        v91 += v89 - v92;
LABEL_46:
        BOOL v57 = __OFSUB__(v90, v89);
        uint64_t v93 = v90 - v89;
        if (v57) {
          goto LABEL_145;
        }
        uint64_t v94 = sub_22093DE50();
        if (!v91) {
          goto LABEL_156;
        }
        *(void *)&long long v220 = v88;
        if (v94 >= v93) {
          uint64_t v95 = v93;
        }
        else {
          uint64_t v95 = v94;
        }
        uint64_t v96 = v91 + v95;
        uint64_t v98 = *(void *)(v96 - 8);
        uint64_t v97 = v96 - 8;
        uint64_t v99 = -v98;
        if (__OFSUB__(0, v98)) {
          goto LABEL_149;
        }
        uint64_t v100 = v97 + v99;
        uint64_t v101 = *(void *)(v97 + v99);
        uint64_t v102 = sub_22081BA50(0, v101 & ~(v101 >> 63), 0, MEMORY[0x263F8EE78]);
        if (v101 < 0) {
          goto LABEL_151;
        }
        uint64_t v69 = v102;
        if (v101)
        {
          uint64_t v103 = 0;
          unint64_t v104 = (uint64_t *)(v100 + 8);
          uint64_t v233 = v101;
          do
          {
            if (v103 == v101) {
              goto LABEL_135;
            }
            uint64_t v105 = *v104;
            uint64_t v106 = sub_22081B944(0, *v104 & ~(*v104 >> 63), 0, MEMORY[0x263F8EE78]);
            if (v105 < 0) {
              goto LABEL_137;
            }
            uint64_t v107 = v106;
            ++v104;
            if (v105)
            {
              *(void *)&long long v245 = v69;
              uint64_t v108 = 0;
              unint64_t v109 = *((void *)v106 + 2);
              uint64_t v110 = 48 * v109;
              do
              {
                long long v111 = *(_OWORD *)&v104[v108];
                long long v112 = *(_OWORD *)&v104[v108 + 2];
                uint64_t v113 = v104[v108 + 4];
                char v114 = v104[v108 + 5];
                unint64_t v115 = *((void *)v107 + 3);
                unint64_t v116 = v109 + 1;
                if (v109 >= v115 >> 1)
                {
                  long long v218 = *(_OWORD *)&v104[v108];
                  long long v217 = v112;
                  uint64_t v118 = sub_22081B944((char *)(v115 > 1), v109 + 1, 1, v107);
                  long long v112 = v217;
                  long long v111 = v218;
                  uint64_t v107 = v118;
                }
                *((void *)v107 + 2) = v116;
                uint64_t v117 = (uint64_t)&v107[v110 + v108 * 8];
                *(_OWORD *)(v117 + 32) = v111;
                *(_OWORD *)(v117 + 48) = v112;
                *(void *)(v117 + 64) = v113;
                *(unsigned char *)(v117 + 72) = v114;
                v108 += 6;
                unint64_t v109 = v116;
                --v105;
              }
              while (v105);
              unint64_t v104 = (uint64_t *)((char *)v104 + v108 * 8);
              uint64_t v101 = v233;
              uint64_t v69 = (void *)v245;
            }
            unint64_t v120 = v69[2];
            unint64_t v119 = v69[3];
            if (v120 >= v119 >> 1) {
              uint64_t v69 = sub_22081BA50((void *)(v119 > 1), v120 + 1, 1, v69);
            }
            ++v103;
            v69[2] = v120 + 1;
            v69[v120 + 4] = v107;
          }
          while (v103 != v101);
          swift_release();
          uint64_t v175 = v240;
          swift_release();
          uint64_t v31 = v241;
        }
        else
        {
          swift_release();
          uint64_t v175 = v240;
          swift_release();
        }
        uint64_t v176 = v175;
        goto LABEL_112;
      case 3uLL:
        *(void *)((char *)&v246 + 6) = 0;
        *(void *)&long long v246 = 0;
        if (__OFSUB__(0, *((void *)&v245 + 1))) {
          goto LABEL_143;
        }
        uint64_t v121 = &v221[-*((void *)&v245 + 1)];
        uint64_t v122 = *(void *)&v221[-*((void *)&v245 + 1)];
        long long v123 = sub_22081BA50(0, v122 & ~(v122 >> 63), 0, MEMORY[0x263F8EE78]);
        if (v122 < 0) {
          goto LABEL_147;
        }
        uint64_t v69 = v123;
        if (!v122) {
          goto LABEL_104;
        }
        uint64_t v124 = 0;
        uint64_t v125 = (uint64_t *)(v121 + 8);
        uint64_t v233 = v122;
        while (v124 != v122)
        {
          uint64_t v126 = *v125;
          uint64_t v127 = sub_22081B944(0, *v125 & ~(*v125 >> 63), 0, MEMORY[0x263F8EE78]);
          if (v126 < 0) {
            goto LABEL_134;
          }
          uint64_t v128 = v127;
          ++v125;
          if (v126)
          {
            *(void *)&long long v245 = v69;
            uint64_t v129 = 0;
            unint64_t v130 = *((void *)v127 + 2);
            uint64_t v131 = 48 * v130;
            do
            {
              long long v132 = *(_OWORD *)&v125[v129];
              long long v133 = *(_OWORD *)&v125[v129 + 2];
              uint64_t v134 = v125[v129 + 4];
              char v135 = v125[v129 + 5];
              unint64_t v136 = *((void *)v128 + 3);
              unint64_t v137 = v130 + 1;
              if (v130 >= v136 >> 1)
              {
                long long v220 = *(_OWORD *)&v125[v129];
                long long v218 = v133;
                unint64_t v139 = sub_22081B944((char *)(v136 > 1), v130 + 1, 1, v128);
                long long v133 = v218;
                long long v132 = v220;
                uint64_t v128 = v139;
              }
              *((void *)v128 + 2) = v137;
              uint64_t v138 = (uint64_t)&v128[v131 + v129 * 8];
              *(_OWORD *)(v138 + 32) = v132;
              *(_OWORD *)(v138 + 48) = v133;
              *(void *)(v138 + 64) = v134;
              *(unsigned char *)(v138 + 72) = v135;
              v129 += 6;
              unint64_t v130 = v137;
              --v126;
            }
            while (v126);
            uint64_t v125 = (uint64_t *)((char *)v125 + v129 * 8);
            uint64_t v69 = (void *)v245;
            uint64_t v122 = v233;
          }
          unint64_t v141 = v69[2];
          unint64_t v140 = v69[3];
          if (v141 >= v140 >> 1) {
            uint64_t v69 = sub_22081BA50((void *)(v140 > 1), v141 + 1, 1, v69);
          }
          ++v124;
          v69[2] = v141 + 1;
          v69[v141 + 4] = v128;
          if (v124 == v122) {
            goto LABEL_104;
          }
        }
        goto LABEL_132;
      default:
        *(void *)&long long v246 = v240;
        WORD4(v246) = v64;
        BYTE10(v246) = BYTE2(v64);
        BYTE11(v246) = BYTE3(v64);
        BYTE12(v246) = BYTE4(v64);
        BYTE13(v246) = BYTE5(v64);
        uint64_t v65 = &v221[BYTE6(v64)];
        if (__OFSUB__(0, *(void *)v65)) {
          goto LABEL_142;
        }
        uint64_t v66 = (uint64_t *)&v65[-*(void *)v65];
        uint64_t v67 = *v66;
        uint64_t v68 = sub_22081BA50(0, v67 & ~(v67 >> 63), 0, MEMORY[0x263F8EE78]);
        if (v67 < 0) {
          goto LABEL_146;
        }
        uint64_t v69 = v68;
        if (!v67) {
          goto LABEL_104;
        }
        uint64_t v70 = 0;
        uint64_t v71 = v66 + 1;
        uint64_t v233 = v67;
        while (v70 != v67)
        {
          uint64_t v72 = *v71;
          uint64_t v73 = sub_22081B944(0, *v71 & ~(*v71 >> 63), 0, MEMORY[0x263F8EE78]);
          if (v72 < 0) {
            goto LABEL_133;
          }
          uint64_t v74 = v73;
          ++v71;
          if (v72)
          {
            *(void *)&long long v245 = v69;
            uint64_t v75 = 0;
            unint64_t v76 = *((void *)v73 + 2);
            uint64_t v77 = 48 * v76;
            do
            {
              long long v78 = *(_OWORD *)&v71[v75];
              long long v79 = *(_OWORD *)&v71[v75 + 2];
              uint64_t v80 = v71[v75 + 4];
              char v81 = v71[v75 + 5];
              unint64_t v82 = *((void *)v74 + 3);
              unint64_t v83 = v76 + 1;
              if (v76 >= v82 >> 1)
              {
                long long v220 = *(_OWORD *)&v71[v75];
                long long v218 = v79;
                char v85 = sub_22081B944((char *)(v82 > 1), v76 + 1, 1, v74);
                long long v79 = v218;
                long long v78 = v220;
                uint64_t v74 = v85;
              }
              *((void *)v74 + 2) = v83;
              uint64_t v84 = (uint64_t)&v74[v77 + v75 * 8];
              *(_OWORD *)(v84 + 32) = v78;
              *(_OWORD *)(v84 + 48) = v79;
              *(void *)(v84 + 64) = v80;
              *(unsigned char *)(v84 + 72) = v81;
              v75 += 6;
              unint64_t v76 = v83;
              --v72;
            }
            while (v72);
            uint64_t v71 = (uint64_t *)((char *)v71 + v75 * 8);
            uint64_t v69 = (void *)v245;
            uint64_t v67 = v233;
          }
          unint64_t v87 = v69[2];
          unint64_t v86 = v69[3];
          if (v87 >= v86 >> 1) {
            uint64_t v69 = sub_22081BA50((void *)(v86 > 1), v87 + 1, 1, v69);
          }
          ++v70;
          v69[2] = v87 + 1;
          v69[v87 + 4] = v74;
          if (v70 == v67)
          {
LABEL_104:
            sub_22080B88C(v240, v230);
            uint64_t v31 = v241;
            goto LABEL_113;
          }
        }
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
        goto LABEL_136;
    }
  }
LABEL_123:
  swift_release();
  uint64_t v198 = v236;
  uint64_t v199 = v219;
  if (v236)
  {
    swift_bridgeObjectRetain();
    uint64_t v200 = v228;
    uint64_t v201 = sub_2208EB3E0(v198, v199);
    uint64_t v228 = v200;
    if (v200)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      uint64_t v202 = v235;
      uint64_t v203 = v224;
      v224(v31, v235);
      v203((uint64_t)v38, v202);
      v203((uint64_t)v229, v202);
      goto LABEL_126;
    }
    uint64_t v204 = v201;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v199 = v204;
  }
  uint64_t v205 = v228;
  uint64_t v206 = sub_2208E9DBC(v199, v248, v238, v239, v216);
  id v207 = v242;
  if (v205)
  {

    uint64_t v208 = v235;
    uint64_t v209 = v224;
    v224(v31, v235);
    swift_bridgeObjectRelease();
    v209((uint64_t)v38, v208);
    v209((uint64_t)v229, v208);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v210 = v206;
    swift_bridgeObjectRelease();
    sub_22080D5BC(v210, (char **)&v246);

    uint64_t v211 = v235;
    uint64_t v212 = v224;
    v224(v31, v235);
    v212((uint64_t)v38, v211);
    v212((uint64_t)v229, v211);
    uint64_t v213 = v247;
    swift_bridgeObjectRelease();
    long long v245 = v246;
    uint64_t result = swift_bridgeObjectRelease();
    v214 = v237;
    _OWORD *v237 = v245;
    *((void *)v214 + 2) = v213;
  }
  return result;
}

uint64_t sub_2208EB3E0(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_220827038(0, v2, 0);
    uint64_t v6 = 0;
    uint64_t v3 = v32;
    uint64_t v7 = a1 + 32;
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = (uint64_t *)(a2 + 64);
    uint64_t v26 = (uint64_t *)(a2 + 64);
    uint64_t v28 = a1 + 32;
    int64_t v29 = v2;
    uint64_t v27 = v8;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v7 + 16 * v6);
      uint64_t v30 = v6 + 1;
      uint64_t v31 = v3;
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      uint64_t v13 = v9;
      uint64_t v14 = v8;
      if (!v8) {
        break;
      }
      while (1)
      {
        uint64_t v15 = *(v13 - 4);
        uint64_t v16 = *(v13 - 3);
        uint64_t v17 = *(v13 - 2);
        uint64_t v18 = *(v13 - 1);
        uint64_t v19 = *v13;
        if (v15 == v12 && v16 == v11) {
          break;
        }
        if (sub_22093F250()) {
          goto LABEL_12;
        }
        v13 += 5;
        if (!--v14)
        {
          uint64_t v3 = v31;
          goto LABEL_16;
        }
      }
      uint64_t v15 = v12;
      uint64_t v16 = v11;
LABEL_12:
      uint64_t v3 = v31;
      unint64_t v22 = *(void *)(v31 + 16);
      unint64_t v21 = *(void *)(v31 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
      {
        sub_220827038((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v3 = v31;
      }
      *(void *)(v3 + 16) = v22 + 1;
      unint64_t v23 = (void *)(v3 + 40 * v22);
      v23[4] = v15;
      void v23[5] = v16;
      v23[6] = v17;
      v23[7] = v18;
      v23[8] = v19;
      uint64_t v6 = v30;
      uint64_t v8 = v27;
      uint64_t v7 = v28;
      uint64_t v9 = v26;
      if (v30 == v29) {
        return v3;
      }
    }
    uint64_t v3 = v32;
LABEL_16:
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v24 = v12;
    *(void *)(v24 + 8) = v11;
    *(unsigned char *)(v24 + 16) = 5;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();
  }
  return v3;
}

uint64_t sub_2208EB5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_77;
  }
  uint64_t result = sub_22081D290(0x666572705F6D756ELL, 0xEC00000073657869);
  if ((v7 & 1) == 0) {
    goto LABEL_77;
  }
  uint64_t v8 = (uint64_t *)(*(void *)(a1 + 56) + 16 * result);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  uint64_t v11 = HIBYTE(v10) & 0xF;
  uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v9 & 0xFFFFFFFFFFFFLL)) {
    goto LABEL_77;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t)sub_220933D20(v9, v10, 10);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_77;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    unint64_t v48 = v9;
    uint64_t v49 = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v11) {
        goto LABEL_84;
      }
      if (v11 == 1) {
        goto LABEL_82;
      }
      if ((BYTE1(v9) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v17 = (BYTE1(v9) - 48);
      if (v11 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v17 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        uint64_t v18 = v11 - 3;
        if (v11 != 3)
        {
          uint64_t v19 = (unsigned __int8 *)&v48 + 3;
          while (1)
          {
            unsigned int v20 = *v19 - 48;
            if (v20 > 9) {
              goto LABEL_34;
            }
            uint64_t v21 = 10 * v17;
            if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
              goto LABEL_34;
            }
            uint64_t v17 = v21 + v20;
            if (__OFADD__(v21, v20)) {
              goto LABEL_34;
            }
            LOBYTE(v11) = 0;
            ++v19;
            if (!--v18) {
              goto LABEL_37;
            }
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v11)
        {
          if (v11 != 1)
          {
            if ((BYTE1(v9) - 48) > 9u) {
              goto LABEL_34;
            }
            if (v11 == 2)
            {
              LOBYTE(v11) = 0;
              uint64_t v17 = -(uint64_t)(BYTE1(v9) - 48);
              goto LABEL_37;
            }
            if ((BYTE2(v9) - 48) > 9u) {
              goto LABEL_34;
            }
            uint64_t v17 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
            uint64_t v38 = v11 - 3;
            if (v11 != 3)
            {
              uint64_t v39 = (unsigned __int8 *)&v48 + 3;
              while (1)
              {
                unsigned int v40 = *v39 - 48;
                if (v40 > 9) {
                  goto LABEL_34;
                }
                uint64_t v41 = 10 * v17;
                if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v17 = v41 - v40;
                if (__OFSUB__(v41, v40)) {
                  goto LABEL_34;
                }
                LOBYTE(v11) = 0;
                ++v39;
                if (!--v38) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_82:
          uint64_t v17 = 0;
LABEL_37:
          if ((v11 & 1) == 0) {
            goto LABEL_38;
          }
LABEL_77:
          sub_220809E4C();
          swift_allocError();
          char v32 = 0;
          *(void *)uint64_t v31 = 0xD000000000000034;
          uint64_t v33 = "Directory archive index is missing the prefix count.";
          goto LABEL_78;
        }
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
      if (!v11 || (v9 - 48) > 9u)
      {
LABEL_34:
        uint64_t v17 = 0;
        LOBYTE(v11) = 1;
        goto LABEL_37;
      }
      uint64_t v17 = (v9 - 48);
      if (v11 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v17 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        uint64_t v34 = v11 - 2;
        if (v11 != 2)
        {
          uint64_t v35 = (unsigned __int8 *)&v48 + 2;
          while (1)
          {
            unsigned int v36 = *v35 - 48;
            if (v36 > 9) {
              goto LABEL_34;
            }
            uint64_t v37 = 10 * v17;
            if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63) {
              goto LABEL_34;
            }
            uint64_t v17 = v37 + v36;
            if (__OFADD__(v37, v36)) {
              goto LABEL_34;
            }
            LOBYTE(v11) = 0;
            ++v35;
            if (!--v34) {
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_36:
    LOBYTE(v11) = 0;
    goto LABEL_37;
  }
  if ((v9 & 0x1000000000000000) != 0) {
    uint64_t v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v14 = (unsigned __int8 *)sub_22093EF60();
  }
  uint64_t v15 = sub_220933CBC(v14, v12, 10);
  if (v16) {
    goto LABEL_77;
  }
  uint64_t v17 = (uint64_t)v15;
LABEL_38:
  if (!*(void *)(a1 + 16) || (uint64_t v22 = sub_22081D290(0x6E6F6973726576, 0xE700000000000000), (v23 & 1) == 0))
  {
    sub_220809E4C();
    swift_allocError();
    char v32 = 0;
    *(void *)uint64_t v31 = 0xD000000000000037;
    uint64_t v33 = "Directory arachive index is missing the version number.";
LABEL_78:
    unint64_t v29 = (unint64_t)(v33 - 32) | 0x8000000000000000;
    goto LABEL_79;
  }
  uint64_t v24 = (void *)(*(void *)(a1 + 56) + 16 * v22);
  BOOL v25 = *v24 == 49 && v24[1] == 0xE100000000000000;
  if (!v25 && (sub_22093F250() & 1) == 0) {
    goto LABEL_73;
  }
  if (!*(void *)(a2 + 16) || (uint64_t result = sub_22081D290(0x73746E65746E6F63, 0xE800000000000000), (v26 & 1) == 0))
  {
    sub_220809E4C();
    swift_allocError();
    char v32 = 0;
    *(void *)uint64_t v31 = 0xD000000000000038;
    uint64_t v33 = "Directory archive index is missing the type of contents.";
    goto LABEL_78;
  }
  uint64_t v27 = (void *)(*(void *)(a2 + 56) + 16 * result);
  if (*v27 != 0x656D61726673 || v27[1] != 0xE600000000000000)
  {
    uint64_t result = sub_22093F250();
    if ((result & 1) == 0)
    {
LABEL_73:
      unint64_t v48 = 0;
      uint64_t v49 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_22093EEA0();
      sub_22093E6C0();
      sub_22093E6C0();
      swift_bridgeObjectRelease();
      sub_22093E6C0();
      unint64_t v42 = v48;
      unint64_t v29 = v49;
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v31 = v42;
      char v32 = 1;
      goto LABEL_79;
    }
  }
  if (*(void *)(a3 + 16) == v17)
  {
    if (v17 == 3) {
      return result;
    }
    unint64_t v48 = 0;
    uint64_t v49 = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    unint64_t v48 = 0xD000000000000018;
    uint64_t v49 = 0x8000000220941070;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v30 = v48;
    unint64_t v29 = v49;
    sub_220809E4C();
    swift_allocError();
    *(void *)uint64_t v31 = v30;
    char v32 = 3;
  }
  else
  {
    unint64_t v48 = 0;
    uint64_t v49 = 0xE000000000000000;
    sub_22093EEA0();
    sub_22093E6C0();
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v44 = v48;
    uint64_t v43 = v49;
    unint64_t v48 = 0;
    uint64_t v49 = 0xE000000000000000;
    sub_22093EEA0();
    swift_bridgeObjectRelease();
    unint64_t v48 = 0xD000000000000023;
    uint64_t v49 = 0x8000000220941040;
    sub_22093F1A0();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    sub_22093E6C0();
    unint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_22093E6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v45 = v48;
    unint64_t v29 = v49;
    sub_220809E4C();
    swift_allocError();
    char v32 = 0;
    *(void *)uint64_t v31 = v45;
  }
LABEL_79:
  *(void *)(v31 + 8) = v29;
  *(unsigned char *)(v31 + 16) = v32;
  return swift_willThrow();
}

uint64_t sub_2208EBE1C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_220902620(a1, a2);
  if (v2)
  {
    MEMORY[0x223C6AF70](v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267F188B0);
    if (swift_dynamicCast())
    {
      MEMORY[0x223C6AF60](v2);
      sub_220809E4C();
      swift_allocError();
      *(void *)uint64_t v5 = 0xD000000000000028;
      *(void *)(v5 + 8) = 0x8000000220940D90;
      *(unsigned char *)(v5 + 16) = 0;
      swift_willThrow();
    }
    MEMORY[0x223C6AF60](v2);
    return (uint64_t)v3;
  }
  uint64_t v3 = (void *)v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6) {
    goto LABEL_51;
  }
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = v3[5];
  uint64_t v9 = v3[6];
  BOOL v10 = v7 == 0x65766968637261 && v8 == 0xE700000000000000;
  uint64_t v41 = v6;
  uint64_t v38 = v7;
  if (!v10)
  {
    uint64_t result = sub_22093F250();
    uint64_t v40 = v9;
    if (result)
    {
LABEL_11:
      BOOL v12 = v8 == 0xE800000000000000;
      if (v38 == 0x617461646174656DLL)
      {
        uint64_t v13 = v9;
        uint64_t v6 = v41;
        if (v8 == 0xE800000000000000)
        {
LABEL_20:
          uint64_t result = sub_22093F250();
          uint64_t v16 = v40;
          if (result)
          {
LABEL_61:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_2208EB5C0(v16, v13, v9);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v9 + 16))
            {
              uint64_t v34 = sub_22081D290(842018864, 0xE400000000000000);
              if (v35)
              {
                uint64_t v3 = *(void **)(*(void *)(v9 + 56) + 16 * v34);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return (uint64_t)v3;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_220809E4C();
            swift_allocError();
            char v32 = "Directory archive is missing the 0002 prefix.";
            unint64_t v33 = 0xD00000000000002DLL;
            goto LABEL_52;
          }
          if (v6 != 1)
          {
            uint64_t v39 = v13;
            uint64_t v17 = v3 + 9;
            uint64_t v18 = 1;
            while (1)
            {
              uint64_t v19 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_67;
              }
              uint64_t v20 = *v17;
              if (*(v17 - 2) == 0x7365786966657270 && *(v17 - 1) == 0xE800000000000000) {
                break;
              }
              uint64_t result = sub_22093F250();
              if (result)
              {
                uint64_t v9 = v20;
                goto LABEL_60;
              }
              v17 += 3;
              ++v18;
              if (v19 == v41) {
                goto LABEL_30;
              }
            }
            uint64_t v9 = *v17;
LABEL_60:
            uint64_t v13 = v39;
            uint64_t v16 = v40;
            goto LABEL_61;
          }
LABEL_30:
          swift_bridgeObjectRelease();
          sub_220809E4C();
          swift_allocError();
          char v23 = "Directory archive index is missing the 'prefixes' section.";
LABEL_41:
          *(void *)uint64_t v22 = 0xD00000000000003ALL;
          *(void *)(v22 + 8) = (unint64_t)(v23 - 32) | 0x8000000000000000;
LABEL_53:
          *(unsigned char *)(v22 + 16) = 0;
          swift_willThrow();
          return (uint64_t)v3;
        }
      }
      else
      {
        uint64_t v6 = v41;
      }
      goto LABEL_15;
    }
    if (v6 != 1)
    {
      uint64_t v28 = v3 + 9;
      uint64_t v29 = 1;
      do
      {
        uint64_t v30 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_66;
        }
        uint64_t v40 = *v28;
        if (*(v28 - 2) == 0x65766968637261 && *(v28 - 1) == 0xE700000000000000) {
          goto LABEL_11;
        }
        uint64_t result = sub_22093F250();
        if (result) {
          goto LABEL_11;
        }
        v28 += 3;
        ++v29;
      }
      while (v30 != v41);
    }
LABEL_51:
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    char v32 = "Directory archive index is missing the 'archive' section.";
    unint64_t v33 = 0xD000000000000039;
LABEL_52:
    *(void *)uint64_t v22 = v33;
    *(void *)(v22 + 8) = (unint64_t)(v32 - 32) | 0x8000000000000000;
    goto LABEL_53;
  }
  BOOL v12 = 0;
  uint64_t v40 = v3[6];
LABEL_15:
  BOOL v36 = v12;
  uint64_t result = sub_22093F250();
  uint64_t v14 = v9;
  uint64_t v37 = v9;
  if (result)
  {
LABEL_16:
    uint64_t v9 = v37;
    BOOL v15 = v36;
    if (v38 != 0x7365786966657270) {
      BOOL v15 = 0;
    }
    uint64_t v13 = v14;
    if (v15)
    {
      uint64_t v16 = v40;
      goto LABEL_61;
    }
    goto LABEL_20;
  }
  if (v6 == 1)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    sub_220809E4C();
    swift_allocError();
    char v23 = "Directory archive index is missing the 'metadata' section.";
    goto LABEL_41;
  }
  uint64_t v24 = v3 + 9;
  uint64_t v25 = 1;
  while (1)
  {
    uint64_t v26 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    uint64_t v14 = *v24;
    if (*(v24 - 2) == 0x617461646174656DLL && *(v24 - 1) == 0xE800000000000000) {
      goto LABEL_16;
    }
    uint64_t result = sub_22093F250();
    if (result) {
      goto LABEL_16;
    }
    v24 += 3;
    ++v25;
    if (v26 == v6) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t CSVReadingOptions.init(hasHeaderRow:nilEncodings:trueEncodings:falseEncodings:floatingPointType:ignoresEmptyLines:usesQuoting:usesEscaping:delimiter:escapeCharacter:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  char v25 = *a5;
  __int16 v17 = sub_22093E3C0();
  swift_bridgeObjectRelease();
  if ((v17 & 0x100) != 0
    || (v26 = a3, v27 = a4, __int16 v18 = sub_22093E3C0(), swift_bridgeObjectRelease(), (v18 & 0x100) != 0))
  {
    uint64_t result = sub_22093F090();
    __break(1u);
  }
  else
  {
    char v24 = a8 & 1;
    char v19 = a7 & 1;
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    objc_msgSend(v20, sel_setFormatOptions_, 51);
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    objc_msgSend(v21, sel_setFormatOptions_, 1907);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD41080);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_220944FB0;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v20;
    *(void *)(result + 24) = v21;
    *(_OWORD *)(result + 32) = xmmword_2209483F0;
    *(_OWORD *)(result + 48) = xmmword_220948400;
    *(void *)(v22 + 32) = sub_2208EDA24;
    *(void *)(v22 + 40) = result;
    *(unsigned char *)a9 = a1 & 1;
    *(void *)(a9 + 8) = a2;
    *(void *)(a9 + 16) = v26;
    *(void *)(a9 + 24) = v27;
    *(unsigned char *)(a9 + 32) = v25;
    *(void *)(a9 + 40) = v22;
    *(unsigned char *)(a9 + 48) = a6 & 1;
    *(unsigned char *)(a9 + 49) = v19;
    *(unsigned char *)(a9 + 50) = v24;
    *(unsigned char *)(a9 + 51) = v17;
    *(unsigned char *)(a9 + 52) = v18;
  }
  return result;
}

uint64_t sub_2208EC62C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2208EC65C(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  return v3;
}

uint64_t sub_2208EC694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_267F196E0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_22093E1B0();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  char v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_22093E0B0();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22093E090();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22093E070();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  BOOL v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_22093E080();
  MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, void))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F072A0]);
  uint64_t v19 = v12;
  uint64_t v20 = v28;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F07288], v19);
  id v21 = v7;
  uint64_t v22 = v29;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F072B8], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v21, *MEMORY[0x263F072C8], v27);
  sub_22093E190();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v22, 1, v20);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v25, v22, v20);
    return sub_22093E0A0();
  }
  return result;
}

uint64_t CSVReadingOptions.hasHeaderRow.getter()
{
  return *v0;
}

uint64_t CSVReadingOptions.hasHeaderRow.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CSVReadingOptions.hasHeaderRow.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.nilEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.nilEncodings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.nilEncodings.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.trueEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.trueEncodings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.trueEncodings.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.falseEncodings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.falseEncodings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.falseEncodings.modify())(void)
{
  return nullsub_5;
}

void CSVReadingOptions.floatingPointType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *CSVReadingOptions.floatingPointType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*CSVReadingOptions.floatingPointType.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.dateParsers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CSVReadingOptions.dateParsers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*CSVReadingOptions.dateParsers.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.ignoresEmptyLines.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t CSVReadingOptions.ignoresEmptyLines.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*CSVReadingOptions.ignoresEmptyLines.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.usesQuoting.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t CSVReadingOptions.usesQuoting.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*CSVReadingOptions.usesQuoting.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.usesEscaping.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t CSVReadingOptions.usesEscaping.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*CSVReadingOptions.usesEscaping.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVReadingOptions.delimiter.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 51);
  if (*(char *)(v0 + 51) >= 0) {
    unsigned int v2 = v1 + 1;
  }
  else {
    unsigned int v2 = ((v1 >> 6) & 0xFFFFC0FF | ((v1 & 0x3F) << 8)) + 33217;
  }
  uint64_t v4 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  return MEMORY[0x223C69D60](&v4);
}

uint64_t CSVReadingOptions.escapeCharacter.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 52);
  if (*(char *)(v0 + 52) >= 0) {
    unsigned int v2 = v1 + 1;
  }
  else {
    unsigned int v2 = ((v1 >> 6) & 0xFFFFC0FF | ((v1 & 0x3F) << 8)) + 33217;
  }
  uint64_t v4 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v2) >> 3)) & 7)));
  return MEMORY[0x223C69D60](&v4);
}

uint64_t CSVReadingOptions.addDateParseStrategy<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, a2);
  uint64_t v11 = *(void **)(v3 + 40);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22081C6A0(0, v11[2] + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_22081C6A0((void *)(v13 > 1), v14 + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  uint64_t v11[2] = v14 + 1;
  BOOL v15 = &v11[2 * v14];
  v15[4] = sub_220853754;
  v15[5] = v10;
  *(void *)(v3 + 40) = v11;
  return result;
}

uint64_t CSVWritingOptions.includesHeader.getter()
{
  return *v0;
}

uint64_t CSVWritingOptions.includesHeader.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

uint64_t (*CSVWritingOptions.includesHeader.modify())(void)
{
  return nullsub_5;
}

uint64_t CSVWritingOptions.dateFormat.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CSVWritingOptions.dateFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}